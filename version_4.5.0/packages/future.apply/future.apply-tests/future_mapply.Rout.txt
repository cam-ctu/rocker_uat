
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[10:50:45.846] plan(<NULL>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.847] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:45.847] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:45.847] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.885] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:45.885] |  :  all.equal() for FutureStrategyList ...
[10:50:45.886] |  :  .  New stack:
[10:50:45.886] |  :  .  List of 1
[10:50:45.886] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.886] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.886] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.886] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.886] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.886] |  :  .    ..- attr(*, "call")= language future::plan("sequential")
[10:50:45.886] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.889] |  :  .  Old stack:
[10:50:45.890] |  :  .  List of 1
[10:50:45.890] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.890] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.890] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.890] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.890] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.890] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:45.890] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.892] |  :  .  Not identical
[10:50:45.892] |  :  .  all.equal() for future ...
[10:50:45.892] |  :  .  |  List of 2
[10:50:45.892] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.892] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.892] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.892] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.892] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.892] |  :  .  |    ..- attr(*, "call")= language future::plan("sequential")
[10:50:45.892] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.892] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.892] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.892] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.892] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.892] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:45.896] |  :  .  all.equal() for future ... done
[10:50:45.896] |  :  all.equal() for FutureStrategyList ... done
[10:50:45.896] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:45.896] |  :  List of future strategies:
[10:50:45.896] |  :  1. sequential:
[10:50:45.896] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:45.896] |  :     - tweaked: FALSE
[10:50:45.896] |  :     - call: plan(sequential)
[10:50:45.897] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:45.897] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
> 
> message("*** future_mapply() ...")
*** future_mapply() ...
> 
> message("- Parallel RNG truth (for later)...")
- Parallel RNG truth (for later)...
> plan(sequential)
[10:50:45.910] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.911] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:45.911] |  :  all.equal() for FutureStrategyList ...
[10:50:45.911] |  :  .  New stack:
[10:50:45.911] |  :  .  List of 1
[10:50:45.911] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.911] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.911] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.911] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.911] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.911] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:45.911] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.915] |  :  .  Old stack:
[10:50:45.915] |  :  .  List of 1
[10:50:45.915] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.915] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.915] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.915] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.915] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.915] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:45.915] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.918] |  :  .  Identical
[10:50:45.918] |  :  all.equal() for FutureStrategyList ... done
[10:50:45.918] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:45.918] |  :  List of future strategies:
[10:50:45.918] |  :  1. sequential:
[10:50:45.918] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:45.918] |  :     - tweaked: FALSE
[10:50:45.918] |  :     - call: plan(sequential)
[10:50:45.918] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:45.918] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
> y_rng_0 <- future_mapply(stats::runif, n = 1:4, max = 2:5,
+                          MoreArgs = list(min = 1), future.seed = 0xBEEF)
[10:50:45.919] future_mapply() ...
[10:50:45.919] Generating random seeds ...
[10:50:45.919] Generating random seed streams for 4 elements ...
[10:50:45.920] Generating random seed streams for 4 elements ... DONE
[10:50:45.920] Generating random seeds ... DONE
[10:50:45.920] Will set RNG state on exit: 10407, 903301886, -1144009501, -153800479, -655588531, 167506237, -352902518
[10:50:45.920] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.920] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:45.921] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:45.921] Backend function: <‘NULL’>
[10:50:45.921] Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:45.921] Number of chunks: 1
[10:50:45.922] getGlobalsAndPackagesXApply() ...
[10:50:45.922]  - future.globals: TRUE
[10:50:45.922] getGlobalsAndPackages() ...
[10:50:45.922] |  Searching for globals ...
[10:50:45.929] |  :  globals found: [3] ‘FUN’, ‘.Call’, ‘C_runif’
[10:50:45.930] |  Searching for globals ... DONE
[10:50:45.930] |  Resolving globals: FALSE
[10:50:45.930] |  Search for packages associated with the globals ...
[10:50:45.930] |  :  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:45.931] |  :  Packages: [2] ‘stats’, ‘base’
[10:50:45.931] |  Search for packages associated with the globals ... DONE
[10:50:45.931] |  The total size of the 1 globals is 501 bytes (501 bytes)
[10:50:45.932] |  The total size of the 1 globals exported for future expression (‘FUN(min = 1)’) is 501 bytes There is one global: ‘FUN’ (501 bytes of class ‘function’)
[10:50:45.932] |  Packages after dropping 'base': [1] ‘stats’
[10:50:45.932] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:45.932] |  globals: [1] ‘FUN’
[10:50:45.932] |  packages: [1] ‘stats’
[10:50:45.932] getGlobalsAndPackages() ... done
[10:50:45.932]  - globals found/used: [n=1] ‘FUN’
[10:50:45.932]  - needed namespaces: [n=1] ‘stats’
[10:50:45.933] Finding globals ... DONE
[10:50:45.933] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:45.933] List of 2
[10:50:45.933]  $ ...future.FUN:function (n, min = 0, max = 1)  
[10:50:45.933]  $ MoreArgs     :List of 1
[10:50:45.933]   ..$ min: num 1
[10:50:45.933]  - attr(*, "where")=List of 2
[10:50:45.933]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:45.933]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:45.933]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:45.933]  - attr(*, "resolved")= logi FALSE
[10:50:45.933]  - attr(*, "total_size")= num NA
[10:50:45.936] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:45.936] getGlobalsAndPackagesXApply() ... DONE
[10:50:45.937] Number of futures (= number of chunks): 1
[10:50:45.937] Launching 1 futures (chunks) ...
[10:50:45.937] Chunk #1 of 1 ...
[10:50:45.937]  - Finding globals in '...' for chunk #1 ...
[10:50:45.937] getGlobalsAndPackages() ...
[10:50:45.937] |  Searching for globals ...
[10:50:45.938] |  :  globals found: [0] 
[10:50:45.938] |  Searching for globals ... DONE
[10:50:45.938] |  globals: [0] <none>
[10:50:45.938] |  packages: [0] <none>
[10:50:45.938] getGlobalsAndPackages() ... done
[10:50:45.938]    + additional globals found: [n=0] 
[10:50:45.938]    + additional namespaces needed: [n=0] 
[10:50:45.938]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:45.939]  - seeds: [4] <seeds>
[10:50:45.939]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:45.939] getGlobalsAndPackages() ...
[10:50:45.939] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:45.939] |  Resolving globals: FALSE
[10:50:45.939] |  Search for packages associated with the globals ...
[10:50:45.939] |  :  Packages associated with globals: [1] ‘stats’
[10:50:45.940] |  :  Packages: [1] ‘stats’
[10:50:45.940] |  Search for packages associated with the globals ... DONE
[10:50:45.940] |  Packages after dropping 'base': [1] ‘stats’
[10:50:45.940] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:45.940] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:45.940] |  packages: [1] ‘stats’
[10:50:45.940] getGlobalsAndPackages() ... done
[10:50:45.941] run() for Future (‘Future’) ...
[10:50:45.941] |  state: ‘created’
[10:50:45.941] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.941] |  :  makeFutureBackend(<sequential>) ...
[10:50:45.941] |  :  .  Backend function: <‘NULL’>
[10:50:45.942] |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:45.942] |  :  makeFutureBackend(<sequential>) ... done
[10:50:45.942] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:45.942] |  Using SequentialFutureBackend ...
[10:50:45.942] |  :  Launching futures ...
[10:50:45.942] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:45.942] |  :  .  |  getFutureData() ...
[10:50:45.943] |  :  .  |  :  getFutureCore() ...
[10:50:45.943] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:45.943] |  :  .  |  :  getFutureCore() ... done
[10:50:45.943] |  :  .  |  :  getFutureCapture() ...
[10:50:45.943] |  :  .  |  :  getFutureCapture() ... done
[10:50:45.943] |  :  .  |  :  getFutureContext() ...
[10:50:45.943] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.943] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:45.944] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:45.944] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:45.944] |  :  .  |  :  getFutureContext() ... done
[10:50:45.944] |  :  .  |  getFutureData() ... done
[10:50:45.945] |  :  .  |  attachPackages() ...
[10:50:45.945] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:45.945] |  :  .  |  attachPackages() ... DONE
[10:50:45.945] |  :  .  |  attachPackages() ...
[10:50:45.945] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:45.945] |  :  .  |  attachPackages() ... DONE
[10:50:45.946] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:45.946] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:45.946] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:45.946] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:45.947] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:45.949] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:45.949] |  :  .  |  :  .  |  New stack:
[10:50:45.949] |  :  .  |  :  .  |  List of 1
[10:50:45.949] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.949] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.949] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.949] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.949] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.949] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:45.949] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.952] |  :  .  |  :  .  |  Old stack:
[10:50:45.952] |  :  .  |  :  .  |  List of 1
[10:50:45.952] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.952] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.952] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.952] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.952] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.952] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:45.952] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:45.952] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.952] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.952] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.955] |  :  .  |  :  .  |  Not identical
[10:50:45.955] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:45.955] |  :  .  |  :  .  |  :  List of 2
[10:50:45.955] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.955] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:45.955] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.955] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:45.955] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:45.955] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.955] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.959] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:45.960] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:45.960] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:45.960] |  :  .  |  :  .  List of future strategies:
[10:50:45.960] |  :  .  |  :  .  1. sequential:
[10:50:45.960] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:45.960] |  :  .  |  :  .     - tweaked: FALSE
[10:50:45.960] |  :  .  |  :  .     - call: plan(sequential)
[10:50:45.960] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:45.960] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:45.961] |  :  .  |  assign_globals() ...
[10:50:45.961] |  :  .  |  List of 5
[10:50:45.961] |  :  .  |   $ ...future.FUN            :function (n, min = 0, max = 1)  
[10:50:45.961] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:45.961] |  :  .  |    ..$ min: num 1
[10:50:45.961] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:45.961] |  :  .  |    ..$ n  :List of 4
[10:50:45.961] |  :  .  |    .. ..$ : int 1
[10:50:45.961] |  :  .  |    .. ..$ : int 2
[10:50:45.961] |  :  .  |    .. ..$ : int 3
[10:50:45.961] |  :  .  |    .. ..$ : int 4
[10:50:45.961] |  :  .  |    ..$ max:List of 4
[10:50:45.961] |  :  .  |    .. ..$ : int 2
[10:50:45.961] |  :  .  |    .. ..$ : int 3
[10:50:45.961] |  :  .  |    .. ..$ : int 4
[10:50:45.961] |  :  .  |    .. ..$ : int 5
[10:50:45.961] |  :  .  |   $ ...future.seeds_ii       :List of 4
[10:50:45.961] |  :  .  |    ..$ : int [1:7] 10407 1242173061 -1150840343 -834448425 701050094 -1369558043 -650964284
[10:50:45.961] |  :  .  |    ..$ : int [1:7] 10407 859061261 1088872332 -1371790091 -942478768 -889560561 1393381402
[10:50:45.961] |  :  .  |    ..$ : int [1:7] 10407 -1977952646 362645338 -1927542548 -742448269 -2030870718 1472975712
[10:50:45.961] |  :  .  |    ..$ : int [1:7] 10407 -781199300 -1470244364 -1435938985 -1154922760 795337516 2089908040
[10:50:45.961] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:45.961] |  :  .  |   - attr(*, "where")=List of 5
[10:50:45.961] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:45.961] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:45.961] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:45.961] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:45.961] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:45.961] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:45.961] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:45.961] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:45.961] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:45.969] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:45.969] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:45.970] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:45.970] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:45.970] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:45.970] |  :  .  |  assign_globals() ... done
[10:50:45.974] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:45.974] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:45.974] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:45.975] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:45.975] |  :  .  |  :  .  |  :  New stack:
[10:50:45.975] |  :  .  |  :  .  |  :  List of 1
[10:50:45.975] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.975] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.975] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.975] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.975] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.975] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:45.975] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:45.975] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.975] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.975] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.978] |  :  .  |  :  .  |  :  Old stack:
[10:50:45.978] |  :  .  |  :  .  |  :  List of 1
[10:50:45.978] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:45.978] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:45.978] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.978] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.978] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.978] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:45.978] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:45.978] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:45.978] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:45.978] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:45.981] |  :  .  |  :  .  |  :  Identical
[10:50:45.981] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:45.981] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:45.981] |  :  .  |  :  .  |  List of future strategies:
[10:50:45.981] |  :  .  |  :  .  |  1. sequential:
[10:50:45.981] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:45.981] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:45.981] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:45.981] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:45.982] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:45.982] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:45.982] |  :  .  |  SequentialFuture started (and completed)
[10:50:45.982] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:45.982] |  :  Launching futures ... done
[10:50:45.983] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:45.983] |  Using SequentialFutureBackend ... done
[10:50:45.983] run() for Future (‘SequentialFuture’) ... done
[10:50:45.983] Created future:
[10:50:45.983] SequentialFuture:
[10:50:45.983] Label: ‘future_mapply-1’
[10:50:45.983] Expression:
[10:50:45.983] {
[10:50:45.983]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:45.983]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:45.983]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:45.983]         on.exit(options(oopts), add = TRUE)
[10:50:45.983]     }
[10:50:45.983]     {
[10:50:45.983]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:45.983]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:45.983]                 inherits = FALSE)
[10:50:45.983]             ...future.FUN(...)
[10:50:45.983]         }
[10:50:45.983]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:45.983]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:45.983]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:45.983]         do.call(mapply, args = args)
[10:50:45.983]     }
[10:50:45.983] }
[10:50:45.983] Lazy evaluation: FALSE
[10:50:45.983] Asynchronous evaluation: TRUE
[10:50:45.983] Local evaluation: TRUE
[10:50:45.983] Environment: R_GlobalEnv
[10:50:45.983] Capture standard output: TRUE
[10:50:45.983] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:45.983] Immediate condition classes: ‘immediateCondition’
[10:50:45.983] Globals: 5 objects totaling 990 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 196 bytes, list ‘...future.seeds_ii’ of 175 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:45.983] Packages: 1 packages (‘stats’)
[10:50:45.983] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:45.983] Resolved: TRUE
[10:50:45.983] Value: 143 bytes of class ‘list’
[10:50:45.983] Early signaling: FALSE
[10:50:45.983] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:45.983] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:45.984] Chunk #1 of 1 ... DONE
[10:50:45.984] Launching 1 futures (chunks) ... DONE
[10:50:45.984] Resolving 1 futures (chunks) ...
[10:50:45.985] value() on list ...
[10:50:45.985] |  recursive: 0
[10:50:45.985] |  length: 1
[10:50:45.985] |  
[10:50:45.986] |  Number of remaining objects: 1
[10:50:45.986] |  checking value #1 ...
[10:50:45.986] |  :  'obj' is SequentialFuture
[10:50:45.986] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:45.986] |  :  .  state: ‘finished’
[10:50:45.986] |  :  .  run: TRUE
[10:50:45.986] |  :  .  result: ‘FutureResult’
[10:50:45.986] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:45.986] |  :  SequentialFuture #1
[10:50:45.986] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:45.987] |  :  .  nx: 1
[10:50:45.987] |  :  .  relay: TRUE
[10:50:45.987] |  :  .  stdout: TRUE
[10:50:45.987] |  :  .  signal: TRUE
[10:50:45.987] |  :  .  resignal: FALSE
[10:50:45.987] |  :  .  force: TRUE
[10:50:45.987] |  :  .  relayed: [n=1] FALSE
[10:50:45.987] |  :  .  queued futures: [n=1] FALSE
[10:50:45.987] |  :  .  until=1
[10:50:45.987] |  :  .  relaying element #1
[10:50:45.988] |  :  .  relayed: [n=1] TRUE
[10:50:45.988] |  :  .  queued futures: [n=1] TRUE
[10:50:45.988] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:45.988] |  :  value(<SequentialFuture>, ...) ...
[10:50:45.988] |  :  .  value: <list>
[10:50:45.988] |  :  value(<SequentialFuture>, ...) ... done
[10:50:45.988] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:45.988] |  :  .  nx: 1
[10:50:45.989] |  :  .  relay: TRUE
[10:50:45.989] |  :  .  stdout: TRUE
[10:50:45.989] |  :  .  signal: TRUE
[10:50:45.989] |  :  .  resignal: FALSE
[10:50:45.989] |  :  .  force: TRUE
[10:50:45.989] |  :  .  relayed: [n=1] TRUE
[10:50:45.989] |  :  .  queued futures: [n=1] TRUE
[10:50:45.989] |  :  .  until=1
[10:50:45.989] |  :  .  relayed: [n=1] TRUE
[10:50:45.989] |  :  .  queued futures: [n=1] TRUE
[10:50:45.989] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:45.990] |  :  length: 0 (resolved future 1)
[10:50:45.990] |  checking value #1 ... done
[10:50:45.990] |  Relaying remaining futures ...
[10:50:45.990] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:45.990] |  :  .  nx: 1
[10:50:45.990] |  :  .  relay: TRUE
[10:50:45.990] |  :  .  stdout: TRUE
[10:50:45.990] |  :  .  signal: TRUE
[10:50:45.990] |  :  .  resignal: FALSE
[10:50:45.990] |  :  .  force: TRUE
[10:50:45.991] |  :  .  relayed: [n=1] TRUE
[10:50:45.991] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:45.991] |  :  .  relayed: [n=1] TRUE
[10:50:45.991] |  :  .  queued futures: [n=1] TRUE
[10:50:45.991] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:45.991] |  Relaying remaining futures ... done
[10:50:45.991] value() on list ... done
[10:50:45.991]  - Number of value chunks collected: 1
[10:50:45.991] Resolving 1 futures (chunks) ... DONE
[10:50:45.991] Reducing values from 1 chunks ...
[10:50:45.991]  - Number of values collected after concatenation: 4
[10:50:45.992]  - Number of values expected: 4
[10:50:45.992] Reducing values from 1 chunks ... DONE
[10:50:45.992] future_mapply() ... DONE
> print(y_rng_0)
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

> 
> for (strategy in supportedStrategies()) {
+   message(sprintf("*** strategy = %s ...", sQuote(strategy)))
+   plan(strategy)
+ 
+   message("- From example(mapply) ...")
+   y0 <- mapply(rep, 1:4, 4:1)
+   y1 <- future_mapply(rep, 1:4, 4:1)
+   stopifnot(identical(y1, y0))
+   y2 <- future_mapply("rep", 1:4, 4:1)
+   stopifnot(identical(y2, y0))
+   
+   y0 <- mapply(rep, times = 1:4, x = 4:1)
+   y1 <- future_mapply(rep, times = 1:4, x = 4:1)
+   stopifnot(identical(y1, y0))
+   
+   y0 <- mapply(rep, times = 1:4, MoreArgs = list(x = 42))
+   y1 <- future_mapply(rep, times = 1:4, MoreArgs = list(x = 42))
+   stopifnot(identical(y1, y0))
+   
+   y0 <- mapply(function(x, y) seq_len(x) + y,
+                c(a =  1, b = 2, c = 3),  # names from first
+                c(A = 10, B = 0, C = -10))
+   y1 <- future_mapply(function(x, y) seq_len(x) + y,
+                       c(a =  1, b = 2, c = 3),  # names from first
+                       c(A = 10, B = 0, C = -10))
+   stopifnot(identical(y1, y0))
+ 
+   message("- future_.mapply()")
+   dots <- list(c(a =  1, b = 2, c = 3),  # names from first
+                c(A = 10, B = 0, C = -10))
+   y2 <- .mapply(function(x, y) seq_len(x) + y, dots = dots, MoreArgs = list())
+   names(y0) <- NULL  ## .mapply() don't set names
+   stopifnot(all.equal(y2, y0))
+   y3 <- future_.mapply(function(x, y) seq_len(x) + y, dots = dots, MoreArgs = list())
+   stopifnot(all.equal(y3, y2))
+ 
+   word <- function(C, k) paste(rep.int(C, k), collapse = "")
+   for (chunk.size in list(1L, structure(2L, ordering = "random"), structure(3L, ordering = 5:1))) {
+     y0 <- mapply(word, LETTERS[1:5], 5:1, SIMPLIFY = FALSE)
+     y1 <- future_mapply(word, LETTERS[1:5], 5:1, SIMPLIFY = FALSE, future.chunk.size = chunk.size)
+     stopifnot(identical(y1, y0))
+ 
+     dots <- list(LETTERS[1:5], 5:1)
+     MoreArgs <- list()
+     y2 <- .mapply(word, dots = dots, MoreArgs = list())
+     names(y0) <- NULL  ## .mapply() don't set names
+     stopifnot(all.equal(y2, y0))
+     y3 <- future_.mapply(word, dots = dots, MoreArgs = list())
+     stopifnot(all.equal(y3, y2))
+   }
+ 
+   message("- Subsetting (Issue #17) ...")
+   X <- as.Date("2018-06-01")
+   y0 <- mapply(FUN = identity, X, SIMPLIFY = FALSE)
+   y1 <- future_mapply(FUN = identity, X, SIMPLIFY = FALSE)
+   stopifnot(identical(y1, y0))
+ 
+   dots <- list(X)
+   y2 <- .mapply(FUN = identity, dots = dots, MoreArgs = MoreArgs)
+   stopifnot(identical(y2, y0))
+   y3 <- future_.mapply(FUN = identity, dots = dots, MoreArgs = MoreArgs)
+   stopifnot(identical(y3, y2))
+ 
+   message("- Non-recycling of MoreArgs (Issue #51) ...")
+   y0 <- base::mapply(
+     function(x, y) y,
+     x = 1:2, MoreArgs = list(y = 3:4)
+   )
+   y1 <- future.apply::future_mapply(
+     function(x, y) y,
+     x = 1:2, MoreArgs = list(y = 3:4),
+     future.seed = FALSE
+   )
+   stopifnot(identical(y1, y0))
+   y2 <- future.apply::future_mapply(
+     function(x, y) y,
+     x = 1:2, MoreArgs = list(y = 3:4),
+     future.seed = TRUE
+   )
+   stopifnot(identical(y2, y0))
+ 
+   dots <- list(x = 1:2)
+   MoreArgs <- list(y = 3:4)
+   y3 <- .mapply(function(x, y) y, dots = dots, MoreArgs = MoreArgs)
+   y4 <- future_.mapply(function(x, y) y, dots = dots, MoreArgs = MoreArgs)
+   stopifnot(identical(y4, y3))
+ 
+   message("- Recycle arguments to same length ...")
+   y0 <- mapply(rep, 1:4, 2:1)
+   y1 <- future_mapply(rep, 1:4, 2:1)
+   stopifnot(identical(y1, y0))
+ 
+   
+   message("- Parallel RNG ...")
+   y_rng_1 <- future_mapply(stats::runif, n = 1:4, max = 2:5,
+                            MoreArgs = list(min = 1), future.seed = 0xBEEF)
+   print(y_rng_1)
+   stopifnot(all.equal(y_rng_1, y_rng_0))
+ 
+   message("- future_Map() ...")
+   xs <- replicate(5, stats::runif(10), simplify = FALSE)
+   ws <- replicate(5, stats::rpois(10, 5) + 1, simplify = FALSE)
+   y0 <- Map(weighted.mean, xs, ws)
+   y1 <- future_Map(stats::weighted.mean, xs, ws)
+   stopifnot(all.equal(y1, y0))
+ 
+   message("- future_mapply() - 'max-or-0-if' recycling rule ...")
+   ## R (>= 4.2.0): mapply() & Map() follow usual "max-or-0-if" recycling rule
+   ## and keeps returning a named list in the "empty" case.
+   
+   truth <- list()
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(`+`, 1:3, NULL)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(`+`, 1:3, NULL)
+   stopifnot(identical(y, truth))
+   
+   truth <- setNames(list(), character())
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), NULL)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), NULL)
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), letters)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), letters)
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, "A", character())
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, "A", character())
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), letters) 
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), letters) 
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), NULL)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), NULL)
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), letters)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), letters)
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, "A", character()) 
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, "A", character()) 
+   stopifnot(identical(y, truth))
+   
+   if (getRversion() >= "4.2.0") {
+     y0 <- mapply(paste, character(), letters) 
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, character(), letters) 
+   stopifnot(identical(y, truth))
+ 
+   ## Gives an error in R-devel (2021-11-26 r81252)
+   if (getRversion() >= "4.2.0" && FALSE) {
+     y0 <- mapply(paste, c(a = "A"), character())
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_mapply(paste, c(a = "A"), character())
+   stopifnot(identical(y, truth))
+ 
+   ## R (>= 4.2.0): Map() now recycles similar to basic Ops:
+   truth <- as.list(1 + 1:3)
+   if (getRversion() >= "4.2.0") {
+     y0 <- Map(`+`, 1, 1:3)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_Map(`+`, 1, 1:3)
+   stopifnot(identical(y, truth))
+   
+   truth <- as.list(numeric() + 1:3)
+   if (getRversion() >= "4.2.0") {
+     y0 <- Map(`+`, numeric(), 1:3)
+     stopifnot(identical(y0, truth))
+   }
+   y <- future_Map(`+`, numeric(), 1:3)
+   stopifnot(identical(y, truth))
+ 
+   message("- future_mapply(x, ...) where x[[i]] subsets via S3 method ...")
+   x <- structure(list(a = 1, b = 2), class = "Foo")
+   `[[.Foo` <- function(x, ...) 0
+   y0 <- mapply(x, FUN = identity)
+   stopifnot(identical(y0, c(a = 0, b = 0)))
+   y1 <- future_mapply(x, FUN = identity)
+   if (getOption("future.apply.chunkWith", "[[") == "[") {
+     stopifnot(identical(y1, unlist(x)))
+   } else {
+     stopifnot(identical(y1, y0))
+   }
+ 
+   plan(sequential)
+   message(sprintf("*** strategy = %s ... done", sQuote(strategy)))
+ } ## for (strategy in ...) 
*** strategy = ‘sequential’ ...
[10:50:46.140] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.140] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:46.140] |  :  all.equal() for FutureStrategyList ...
[10:50:46.140] |  :  .  New stack:
[10:50:46.141] |  :  .  List of 1
[10:50:46.141] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.141] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.141] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.141] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.141] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.141] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:46.141] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.143] |  :  .  Old stack:
[10:50:46.143] |  :  .  List of 1
[10:50:46.143] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.143] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.143] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.143] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.143] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.143] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:46.143] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.143] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.143] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.143] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.146] |  :  .  Not identical
[10:50:46.146] |  :  .  all.equal() for future ...
[10:50:46.146] |  :  .  |  List of 2
[10:50:46.146] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.146] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.146] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.146] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.146] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.146] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:46.146] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.146] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.146] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.146] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.146] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.146] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.146] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.146] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.146] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.151] |  :  .  all.equal() for future ... done
[10:50:46.151] |  :  all.equal() for FutureStrategyList ... done
[10:50:46.151] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.151] |  :  List of future strategies:
[10:50:46.151] |  :  1. sequential:
[10:50:46.151] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.151] |  :     - tweaked: FALSE
[10:50:46.151] |  :     - call: plan(sequential)
[10:50:46.152] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:46.152] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- From example(mapply) ...
[10:50:46.152] future_mapply() ...
[10:50:46.152] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.152] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.153] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.153] Number of chunks: 1
[10:50:46.153] getGlobalsAndPackagesXApply() ...
[10:50:46.153]  - future.globals: TRUE
[10:50:46.153] getGlobalsAndPackages() ...
[10:50:46.153] |  Searching for globals ...
[10:50:46.154] |  :  globals found: [1] ‘FUN’
[10:50:46.154] |  Searching for globals ... DONE
[10:50:46.154] |  Resolving globals: FALSE
[10:50:46.154] |  Search for packages associated with the globals ...
[10:50:46.154] |  :  Packages associated with globals: [0] 
[10:50:46.154] |  :  Packages: [0] 
[10:50:46.154] |  Search for packages associated with the globals ... DONE
[10:50:46.154] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:46.155] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:46.155] |  Packages after dropping 'base': [0] 
[10:50:46.155] |  globals: [1] ‘FUN’
[10:50:46.155] |  packages: [0] 
[10:50:46.155] getGlobalsAndPackages() ... done
[10:50:46.155]  - globals found/used: [n=1] ‘FUN’
[10:50:46.155]  - needed namespaces: [n=0] 
[10:50:46.155] Finding globals ... DONE
[10:50:46.156] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.156] List of 2
[10:50:46.156]  $ ...future.FUN:function (x, ...)  
[10:50:46.156]  $ MoreArgs     : NULL
[10:50:46.156]  - attr(*, "where")=List of 2
[10:50:46.156]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.156]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.156]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.156]  - attr(*, "resolved")= logi FALSE
[10:50:46.156]  - attr(*, "total_size")= num NA
[10:50:46.158] Packages to be attached in all futures: [n=0] 
[10:50:46.158] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.158] Number of futures (= number of chunks): 1
[10:50:46.159] Launching 1 futures (chunks) ...
[10:50:46.159] Chunk #1 of 1 ...
[10:50:46.159]  - Finding globals in '...' for chunk #1 ...
[10:50:46.159] getGlobalsAndPackages() ...
[10:50:46.159] |  Searching for globals ...
[10:50:46.159] |  :  globals found: [0] 
[10:50:46.159] |  Searching for globals ... DONE
[10:50:46.159] |  globals: [0] <none>
[10:50:46.159] |  packages: [0] <none>
[10:50:46.160] getGlobalsAndPackages() ... done
[10:50:46.160]    + additional globals found: [n=0] 
[10:50:46.160]    + additional namespaces needed: [n=0] 
[10:50:46.160]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.160]  - seeds: <none>
[10:50:46.160]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.160] getGlobalsAndPackages() ...
[10:50:46.160] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.160] |  Resolving globals: FALSE
[10:50:46.160] |  Search for packages associated with the globals ...
[10:50:46.161] |  :  Packages associated with globals: [0] 
[10:50:46.161] |  :  Packages: [0] 
[10:50:46.161] |  Search for packages associated with the globals ... DONE
[10:50:46.161] |  Packages after dropping 'base': [0] 
[10:50:46.161] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.161] |  packages: [0] 
[10:50:46.161] getGlobalsAndPackages() ... done
[10:50:46.161] run() for Future (‘Future’) ...
[10:50:46.162] |  state: ‘created’
[10:50:46.162] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.162] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.162] |  Using SequentialFutureBackend ...
[10:50:46.162] |  :  Launching futures ...
[10:50:46.162] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.162] |  :  .  |  getFutureData() ...
[10:50:46.162] |  :  .  |  :  getFutureCore() ...
[10:50:46.162] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.162] |  :  .  |  :  getFutureCore() ... done
[10:50:46.163] |  :  .  |  :  getFutureCapture() ...
[10:50:46.163] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.163] |  :  .  |  :  getFutureContext() ...
[10:50:46.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.163] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.163] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.163] |  :  .  |  :  getFutureContext() ... done
[10:50:46.163] |  :  .  |  getFutureData() ... done
[10:50:46.164] |  :  .  |  attachPackages() ...
[10:50:46.164] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.164] |  :  .  |  attachPackages() ... DONE
[10:50:46.164] |  :  .  |  attachPackages() ...
[10:50:46.164] |  :  .  |  :  packages: [n=0] 
[10:50:46.164] |  :  .  |  attachPackages() ... DONE
[10:50:46.165] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.165] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.165] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.165] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.165] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.165] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.165] |  :  .  |  :  .  |  New stack:
[10:50:46.165] |  :  .  |  :  .  |  List of 1
[10:50:46.165] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.165] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.165] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.165] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.165] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.165] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.165] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.168] |  :  .  |  :  .  |  Old stack:
[10:50:46.168] |  :  .  |  :  .  |  List of 1
[10:50:46.168] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.168] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.168] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.168] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.168] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.168] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.168] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.168] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.168] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.168] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.171] |  :  .  |  :  .  |  Not identical
[10:50:46.171] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.172] |  :  .  |  :  .  |  :  List of 2
[10:50:46.172] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.172] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.172] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.172] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.172] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.172] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.172] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.176] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.176] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.176] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.176] |  :  .  |  :  .  List of future strategies:
[10:50:46.176] |  :  .  |  :  .  1. sequential:
[10:50:46.176] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.176] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.176] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.177] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.177] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.177] |  :  .  |  assign_globals() ...
[10:50:46.177] |  :  .  |  List of 5
[10:50:46.177] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:46.177] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.177] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.177] |  :  .  |    ..$ :List of 4
[10:50:46.177] |  :  .  |    .. ..$ : int 1
[10:50:46.177] |  :  .  |    .. ..$ : int 2
[10:50:46.177] |  :  .  |    .. ..$ : int 3
[10:50:46.177] |  :  .  |    .. ..$ : int 4
[10:50:46.177] |  :  .  |    ..$ :List of 4
[10:50:46.177] |  :  .  |    .. ..$ : int 4
[10:50:46.177] |  :  .  |    .. ..$ : int 3
[10:50:46.177] |  :  .  |    .. ..$ : int 2
[10:50:46.177] |  :  .  |    .. ..$ : int 1
[10:50:46.177] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.177] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.177] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.177] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.177] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.177] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.177] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.177] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.177] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.177] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.177] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.177] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.184] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.184] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.184] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.184] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.184] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.184] |  :  .  |  assign_globals() ... done
[10:50:46.185] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.186] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.186] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.186] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.186] |  :  .  |  :  .  |  :  New stack:
[10:50:46.186] |  :  .  |  :  .  |  :  List of 1
[10:50:46.186] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.186] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.186] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.186] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.186] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.186] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.186] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.186] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.186] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.186] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.190] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.190] |  :  .  |  :  .  |  :  List of 1
[10:50:46.190] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.190] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.190] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.190] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.190] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.190] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.190] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.190] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.190] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.190] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.192] |  :  .  |  :  .  |  :  Identical
[10:50:46.193] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.193] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.193] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.193] |  :  .  |  :  .  |  1. sequential:
[10:50:46.193] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.193] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.193] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.193] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.193] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.193] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.194] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.194] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.194] |  :  Launching futures ... done
[10:50:46.194] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.194] |  Using SequentialFutureBackend ... done
[10:50:46.194] run() for Future (‘SequentialFuture’) ... done
[10:50:46.194] Created future:
[10:50:46.194] SequentialFuture:
[10:50:46.194] Label: ‘future_mapply-1’
[10:50:46.194] Expression:
[10:50:46.194] {
[10:50:46.194]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.194]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.194]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.194]         on.exit(options(oopts), add = TRUE)
[10:50:46.194]     }
[10:50:46.194]     {
[10:50:46.194]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.194]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.194]         do.call(mapply, args = args)
[10:50:46.194]     }
[10:50:46.194] }
[10:50:46.194] Lazy evaluation: FALSE
[10:50:46.194] Asynchronous evaluation: TRUE
[10:50:46.194] Local evaluation: TRUE
[10:50:46.194] Environment: R_GlobalEnv
[10:50:46.194] Capture standard output: TRUE
[10:50:46.194] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.194] Immediate condition classes: ‘immediateCondition’
[10:50:46.194] Globals: 5 objects totaling 258 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 143 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.194] Packages: <none>
[10:50:46.194] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.194] Resolved: TRUE
[10:50:46.194] Value: 103 bytes of class ‘list’
[10:50:46.194] Early signaling: FALSE
[10:50:46.194] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.194] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.195] Chunk #1 of 1 ... DONE
[10:50:46.195] Launching 1 futures (chunks) ... DONE
[10:50:46.195] Resolving 1 futures (chunks) ...
[10:50:46.195] value() on list ...
[10:50:46.195] |  recursive: 0
[10:50:46.195] |  length: 1
[10:50:46.195] |  
[10:50:46.196] |  Number of remaining objects: 1
[10:50:46.196] |  checking value #1 ...
[10:50:46.196] |  :  'obj' is SequentialFuture
[10:50:46.196] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.196] |  :  .  state: ‘finished’
[10:50:46.196] |  :  .  run: TRUE
[10:50:46.196] |  :  .  result: ‘FutureResult’
[10:50:46.196] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.196] |  :  SequentialFuture #1
[10:50:46.196] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.196] |  :  .  nx: 1
[10:50:46.196] |  :  .  relay: TRUE
[10:50:46.197] |  :  .  stdout: TRUE
[10:50:46.197] |  :  .  signal: TRUE
[10:50:46.197] |  :  .  resignal: FALSE
[10:50:46.197] |  :  .  force: TRUE
[10:50:46.197] |  :  .  relayed: [n=1] FALSE
[10:50:46.197] |  :  .  queued futures: [n=1] FALSE
[10:50:46.197] |  :  .  until=1
[10:50:46.197] |  :  .  relaying element #1
[10:50:46.197] |  :  .  relayed: [n=1] TRUE
[10:50:46.197] |  :  .  queued futures: [n=1] TRUE
[10:50:46.197] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.198] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.198] |  :  .  value: <list>
[10:50:46.198] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.198] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.198] |  :  .  nx: 1
[10:50:46.198] |  :  .  relay: TRUE
[10:50:46.198] |  :  .  stdout: TRUE
[10:50:46.198] |  :  .  signal: TRUE
[10:50:46.198] |  :  .  resignal: FALSE
[10:50:46.198] |  :  .  force: TRUE
[10:50:46.198] |  :  .  relayed: [n=1] TRUE
[10:50:46.199] |  :  .  queued futures: [n=1] TRUE
[10:50:46.199] |  :  .  until=1
[10:50:46.199] |  :  .  relayed: [n=1] TRUE
[10:50:46.199] |  :  .  queued futures: [n=1] TRUE
[10:50:46.199] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.199] |  :  length: 0 (resolved future 1)
[10:50:46.199] |  checking value #1 ... done
[10:50:46.199] |  Relaying remaining futures ...
[10:50:46.199] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.199] |  :  .  nx: 1
[10:50:46.199] |  :  .  relay: TRUE
[10:50:46.199] |  :  .  stdout: TRUE
[10:50:46.200] |  :  .  signal: TRUE
[10:50:46.200] |  :  .  resignal: FALSE
[10:50:46.200] |  :  .  force: TRUE
[10:50:46.200] |  :  .  relayed: [n=1] TRUE
[10:50:46.200] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.200] |  :  .  relayed: [n=1] TRUE
[10:50:46.200] |  :  .  queued futures: [n=1] TRUE
[10:50:46.200] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.200] |  Relaying remaining futures ... done
[10:50:46.200] value() on list ... done
[10:50:46.200]  - Number of value chunks collected: 1
[10:50:46.200] Resolving 1 futures (chunks) ... DONE
[10:50:46.201] Reducing values from 1 chunks ...
[10:50:46.201]  - Number of values collected after concatenation: 4
[10:50:46.201]  - Number of values expected: 4
[10:50:46.201] Reducing values from 1 chunks ... DONE
[10:50:46.201] future_mapply() ... DONE
[10:50:46.201] future_mapply() ...
[10:50:46.201] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.201] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.201] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.201] Number of chunks: 1
[10:50:46.201] getGlobalsAndPackagesXApply() ...
[10:50:46.202]  - future.globals: TRUE
[10:50:46.202] getGlobalsAndPackages() ...
[10:50:46.202] |  Searching for globals ...
[10:50:46.202] |  :  globals found: [1] ‘FUN’
[10:50:46.202] |  Searching for globals ... DONE
[10:50:46.203] |  Resolving globals: FALSE
[10:50:46.203] |  Search for packages associated with the globals ...
[10:50:46.203] |  :  Packages associated with globals: [0] 
[10:50:46.203] |  :  Packages: [0] 
[10:50:46.203] |  Search for packages associated with the globals ... DONE
[10:50:46.203] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:46.203] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:46.204] |  Packages after dropping 'base': [0] 
[10:50:46.204] |  globals: [1] ‘FUN’
[10:50:46.204] |  packages: [0] 
[10:50:46.204] getGlobalsAndPackages() ... done
[10:50:46.204]  - globals found/used: [n=1] ‘FUN’
[10:50:46.204]  - needed namespaces: [n=0] 
[10:50:46.204] Finding globals ... DONE
[10:50:46.204] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.204] List of 2
[10:50:46.204]  $ ...future.FUN:function (x, ...)  
[10:50:46.204]  $ MoreArgs     : NULL
[10:50:46.204]  - attr(*, "where")=List of 2
[10:50:46.204]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.204]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.204]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.204]  - attr(*, "resolved")= logi FALSE
[10:50:46.204]  - attr(*, "total_size")= num NA
[10:50:46.207] Packages to be attached in all futures: [n=0] 
[10:50:46.207] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.207] Number of futures (= number of chunks): 1
[10:50:46.208] Launching 1 futures (chunks) ...
[10:50:46.208] Chunk #1 of 1 ...
[10:50:46.208]  - Finding globals in '...' for chunk #1 ...
[10:50:46.208] getGlobalsAndPackages() ...
[10:50:46.208] |  Searching for globals ...
[10:50:46.209] |  :  globals found: [0] 
[10:50:46.209] |  Searching for globals ... DONE
[10:50:46.209] |  globals: [0] <none>
[10:50:46.209] |  packages: [0] <none>
[10:50:46.209] getGlobalsAndPackages() ... done
[10:50:46.209]    + additional globals found: [n=0] 
[10:50:46.209]    + additional namespaces needed: [n=0] 
[10:50:46.209]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.209]  - seeds: <none>
[10:50:46.209]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.209] getGlobalsAndPackages() ...
[10:50:46.210] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.210] |  Resolving globals: FALSE
[10:50:46.210] |  Search for packages associated with the globals ...
[10:50:46.210] |  :  Packages associated with globals: [0] 
[10:50:46.210] |  :  Packages: [0] 
[10:50:46.210] |  Search for packages associated with the globals ... DONE
[10:50:46.210] |  Packages after dropping 'base': [0] 
[10:50:46.210] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.211] |  packages: [0] 
[10:50:46.211] getGlobalsAndPackages() ... done
[10:50:46.211] run() for Future (‘Future’) ...
[10:50:46.211] |  state: ‘created’
[10:50:46.211] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.211] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.211] |  Using SequentialFutureBackend ...
[10:50:46.211] |  :  Launching futures ...
[10:50:46.211] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.212] |  :  .  |  getFutureData() ...
[10:50:46.212] |  :  .  |  :  getFutureCore() ...
[10:50:46.212] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.212] |  :  .  |  :  getFutureCore() ... done
[10:50:46.212] |  :  .  |  :  getFutureCapture() ...
[10:50:46.212] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.212] |  :  .  |  :  getFutureContext() ...
[10:50:46.212] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.212] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.212] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.212] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.213] |  :  .  |  :  getFutureContext() ... done
[10:50:46.213] |  :  .  |  getFutureData() ... done
[10:50:46.213] |  :  .  |  attachPackages() ...
[10:50:46.213] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.213] |  :  .  |  attachPackages() ... DONE
[10:50:46.213] |  :  .  |  attachPackages() ...
[10:50:46.213] |  :  .  |  :  packages: [n=0] 
[10:50:46.213] |  :  .  |  attachPackages() ... DONE
[10:50:46.214] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.214] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.214] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.214] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.214] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.214] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.214] |  :  .  |  :  .  |  New stack:
[10:50:46.214] |  :  .  |  :  .  |  List of 1
[10:50:46.214] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.214] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.214] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.214] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.214] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.214] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.214] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.217] |  :  .  |  :  .  |  Old stack:
[10:50:46.217] |  :  .  |  :  .  |  List of 1
[10:50:46.217] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.217] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.217] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.217] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.217] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.217] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.217] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.217] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.217] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.217] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.219] |  :  .  |  :  .  |  Not identical
[10:50:46.220] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.220] |  :  .  |  :  .  |  :  List of 2
[10:50:46.220] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.220] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.220] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.220] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.220] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.220] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.220] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.224] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.224] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.224] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.224] |  :  .  |  :  .  List of future strategies:
[10:50:46.224] |  :  .  |  :  .  1. sequential:
[10:50:46.224] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.224] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.224] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.225] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.225] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.225] |  :  .  |  assign_globals() ...
[10:50:46.225] |  :  .  |  List of 5
[10:50:46.225] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:46.225] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.225] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.225] |  :  .  |    ..$ :List of 4
[10:50:46.225] |  :  .  |    .. ..$ : int 1
[10:50:46.225] |  :  .  |    .. ..$ : int 2
[10:50:46.225] |  :  .  |    .. ..$ : int 3
[10:50:46.225] |  :  .  |    .. ..$ : int 4
[10:50:46.225] |  :  .  |    ..$ :List of 4
[10:50:46.225] |  :  .  |    .. ..$ : int 4
[10:50:46.225] |  :  .  |    .. ..$ : int 3
[10:50:46.225] |  :  .  |    .. ..$ : int 2
[10:50:46.225] |  :  .  |    .. ..$ : int 1
[10:50:46.225] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.225] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.225] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.225] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.225] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.225] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.225] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.225] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.225] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.225] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.225] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.225] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.232] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.233] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.233] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.233] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.233] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.233] |  :  .  |  assign_globals() ... done
[10:50:46.234] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.234] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.235] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.235] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.235] |  :  .  |  :  .  |  :  New stack:
[10:50:46.235] |  :  .  |  :  .  |  :  List of 1
[10:50:46.235] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.235] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.235] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.235] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.235] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.235] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.235] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.235] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.235] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.235] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.238] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.238] |  :  .  |  :  .  |  :  List of 1
[10:50:46.238] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.238] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.238] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.238] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.238] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.238] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.238] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.238] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.238] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.238] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.240] |  :  .  |  :  .  |  :  Identical
[10:50:46.241] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.241] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.241] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.241] |  :  .  |  :  .  |  1. sequential:
[10:50:46.241] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.241] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.241] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.241] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.241] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.241] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.241] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.242] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.242] |  :  Launching futures ... done
[10:50:46.242] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.242] |  Using SequentialFutureBackend ... done
[10:50:46.242] run() for Future (‘SequentialFuture’) ... done
[10:50:46.242] Created future:
[10:50:46.242] SequentialFuture:
[10:50:46.242] Label: ‘future_mapply-1’
[10:50:46.242] Expression:
[10:50:46.242] {
[10:50:46.242]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.242]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.242]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.242]         on.exit(options(oopts), add = TRUE)
[10:50:46.242]     }
[10:50:46.242]     {
[10:50:46.242]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.242]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.242]         do.call(mapply, args = args)
[10:50:46.242]     }
[10:50:46.242] }
[10:50:46.242] Lazy evaluation: FALSE
[10:50:46.242] Asynchronous evaluation: TRUE
[10:50:46.242] Local evaluation: TRUE
[10:50:46.242] Environment: R_GlobalEnv
[10:50:46.242] Capture standard output: TRUE
[10:50:46.242] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.242] Immediate condition classes: ‘immediateCondition’
[10:50:46.242] Globals: 5 objects totaling 258 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 143 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.242] Packages: <none>
[10:50:46.242] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.242] Resolved: TRUE
[10:50:46.242] Value: 103 bytes of class ‘list’
[10:50:46.242] Early signaling: FALSE
[10:50:46.242] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.242] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.243] Chunk #1 of 1 ... DONE
[10:50:46.243] Launching 1 futures (chunks) ... DONE
[10:50:46.243] Resolving 1 futures (chunks) ...
[10:50:46.243] value() on list ...
[10:50:46.243] |  recursive: 0
[10:50:46.243] |  length: 1
[10:50:46.244] |  
[10:50:46.244] |  Number of remaining objects: 1
[10:50:46.244] |  checking value #1 ...
[10:50:46.245] |  :  'obj' is SequentialFuture
[10:50:46.245] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.245] |  :  .  state: ‘finished’
[10:50:46.245] |  :  .  run: TRUE
[10:50:46.245] |  :  .  result: ‘FutureResult’
[10:50:46.245] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.245] |  :  SequentialFuture #1
[10:50:46.245] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.245] |  :  .  nx: 1
[10:50:46.245] |  :  .  relay: TRUE
[10:50:46.245] |  :  .  stdout: TRUE
[10:50:46.245] |  :  .  signal: TRUE
[10:50:46.246] |  :  .  resignal: FALSE
[10:50:46.246] |  :  .  force: TRUE
[10:50:46.246] |  :  .  relayed: [n=1] FALSE
[10:50:46.246] |  :  .  queued futures: [n=1] FALSE
[10:50:46.246] |  :  .  until=1
[10:50:46.246] |  :  .  relaying element #1
[10:50:46.246] |  :  .  relayed: [n=1] TRUE
[10:50:46.246] |  :  .  queued futures: [n=1] TRUE
[10:50:46.246] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.246] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.247] |  :  .  value: <list>
[10:50:46.247] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.247] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.247] |  :  .  nx: 1
[10:50:46.247] |  :  .  relay: TRUE
[10:50:46.247] |  :  .  stdout: TRUE
[10:50:46.247] |  :  .  signal: TRUE
[10:50:46.247] |  :  .  resignal: FALSE
[10:50:46.247] |  :  .  force: TRUE
[10:50:46.247] |  :  .  relayed: [n=1] TRUE
[10:50:46.247] |  :  .  queued futures: [n=1] TRUE
[10:50:46.247] |  :  .  until=1
[10:50:46.248] |  :  .  relayed: [n=1] TRUE
[10:50:46.248] |  :  .  queued futures: [n=1] TRUE
[10:50:46.248] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.248] |  :  length: 0 (resolved future 1)
[10:50:46.248] |  checking value #1 ... done
[10:50:46.248] |  Relaying remaining futures ...
[10:50:46.248] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.248] |  :  .  nx: 1
[10:50:46.248] |  :  .  relay: TRUE
[10:50:46.248] |  :  .  stdout: TRUE
[10:50:46.248] |  :  .  signal: TRUE
[10:50:46.248] |  :  .  resignal: FALSE
[10:50:46.249] |  :  .  force: TRUE
[10:50:46.249] |  :  .  relayed: [n=1] TRUE
[10:50:46.249] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.249] |  :  .  relayed: [n=1] TRUE
[10:50:46.249] |  :  .  queued futures: [n=1] TRUE
[10:50:46.249] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.249] |  Relaying remaining futures ... done
[10:50:46.249] value() on list ... done
[10:50:46.249]  - Number of value chunks collected: 1
[10:50:46.249] Resolving 1 futures (chunks) ... DONE
[10:50:46.249] Reducing values from 1 chunks ...
[10:50:46.249]  - Number of values collected after concatenation: 4
[10:50:46.250]  - Number of values expected: 4
[10:50:46.250] Reducing values from 1 chunks ... DONE
[10:50:46.250] future_mapply() ... DONE
[10:50:46.250] future_mapply() ...
[10:50:46.250] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.250] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.250] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.250] Number of chunks: 1
[10:50:46.250] getGlobalsAndPackagesXApply() ...
[10:50:46.250]  - future.globals: TRUE
[10:50:46.251] getGlobalsAndPackages() ...
[10:50:46.251] |  Searching for globals ...
[10:50:46.251] |  :  globals found: [1] ‘FUN’
[10:50:46.251] |  Searching for globals ... DONE
[10:50:46.251] |  Resolving globals: FALSE
[10:50:46.252] |  Search for packages associated with the globals ...
[10:50:46.252] |  :  Packages associated with globals: [0] 
[10:50:46.252] |  :  Packages: [0] 
[10:50:46.252] |  Search for packages associated with the globals ... DONE
[10:50:46.252] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:46.252] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:46.253] |  Packages after dropping 'base': [0] 
[10:50:46.253] |  globals: [1] ‘FUN’
[10:50:46.253] |  packages: [0] 
[10:50:46.253] getGlobalsAndPackages() ... done
[10:50:46.253]  - globals found/used: [n=1] ‘FUN’
[10:50:46.253]  - needed namespaces: [n=0] 
[10:50:46.253] Finding globals ... DONE
[10:50:46.253] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.253] List of 2
[10:50:46.253]  $ ...future.FUN:function (x, ...)  
[10:50:46.253]  $ MoreArgs     : NULL
[10:50:46.253]  - attr(*, "where")=List of 2
[10:50:46.253]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.253]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.253]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.253]  - attr(*, "resolved")= logi FALSE
[10:50:46.253]  - attr(*, "total_size")= num NA
[10:50:46.256] Packages to be attached in all futures: [n=0] 
[10:50:46.256] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.256] Number of futures (= number of chunks): 1
[10:50:46.256] Launching 1 futures (chunks) ...
[10:50:46.256] Chunk #1 of 1 ...
[10:50:46.256]  - Finding globals in '...' for chunk #1 ...
[10:50:46.256] getGlobalsAndPackages() ...
[10:50:46.256] |  Searching for globals ...
[10:50:46.257] |  :  globals found: [0] 
[10:50:46.257] |  Searching for globals ... DONE
[10:50:46.257] |  globals: [0] <none>
[10:50:46.257] |  packages: [0] <none>
[10:50:46.257] getGlobalsAndPackages() ... done
[10:50:46.257]    + additional globals found: [n=0] 
[10:50:46.257]    + additional namespaces needed: [n=0] 
[10:50:46.257]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.257]  - seeds: <none>
[10:50:46.258]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.258] getGlobalsAndPackages() ...
[10:50:46.258] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.258] |  Resolving globals: FALSE
[10:50:46.258] |  Search for packages associated with the globals ...
[10:50:46.258] |  :  Packages associated with globals: [0] 
[10:50:46.258] |  :  Packages: [0] 
[10:50:46.258] |  Search for packages associated with the globals ... DONE
[10:50:46.259] |  Packages after dropping 'base': [0] 
[10:50:46.259] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.259] |  packages: [0] 
[10:50:46.259] getGlobalsAndPackages() ... done
[10:50:46.259] run() for Future (‘Future’) ...
[10:50:46.259] |  state: ‘created’
[10:50:46.259] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.259] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.259] |  Using SequentialFutureBackend ...
[10:50:46.259] |  :  Launching futures ...
[10:50:46.260] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.260] |  :  .  |  getFutureData() ...
[10:50:46.260] |  :  .  |  :  getFutureCore() ...
[10:50:46.260] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.260] |  :  .  |  :  getFutureCore() ... done
[10:50:46.260] |  :  .  |  :  getFutureCapture() ...
[10:50:46.260] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.260] |  :  .  |  :  getFutureContext() ...
[10:50:46.260] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.260] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.261] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.261] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.261] |  :  .  |  :  getFutureContext() ... done
[10:50:46.261] |  :  .  |  getFutureData() ... done
[10:50:46.261] |  :  .  |  attachPackages() ...
[10:50:46.261] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.261] |  :  .  |  attachPackages() ... DONE
[10:50:46.261] |  :  .  |  attachPackages() ...
[10:50:46.261] |  :  .  |  :  packages: [n=0] 
[10:50:46.261] |  :  .  |  attachPackages() ... DONE
[10:50:46.262] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.262] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.262] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.263] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.263] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.263] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.263] |  :  .  |  :  .  |  New stack:
[10:50:46.264] |  :  .  |  :  .  |  List of 1
[10:50:46.264] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.264] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.264] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.264] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.264] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.264] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.264] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.266] |  :  .  |  :  .  |  Old stack:
[10:50:46.266] |  :  .  |  :  .  |  List of 1
[10:50:46.266] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.266] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.266] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.266] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.266] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.266] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.266] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.266] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.266] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.266] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.268] |  :  .  |  :  .  |  Not identical
[10:50:46.269] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.269] |  :  .  |  :  .  |  :  List of 2
[10:50:46.269] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.269] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.269] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.269] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.269] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.269] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.269] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.273] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.273] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.273] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.273] |  :  .  |  :  .  List of future strategies:
[10:50:46.273] |  :  .  |  :  .  1. sequential:
[10:50:46.273] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.273] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.273] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.274] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.274] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.274] |  :  .  |  assign_globals() ...
[10:50:46.274] |  :  .  |  List of 5
[10:50:46.274] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:46.274] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.274] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.274] |  :  .  |    ..$ times:List of 4
[10:50:46.274] |  :  .  |    .. ..$ : int 1
[10:50:46.274] |  :  .  |    .. ..$ : int 2
[10:50:46.274] |  :  .  |    .. ..$ : int 3
[10:50:46.274] |  :  .  |    .. ..$ : int 4
[10:50:46.274] |  :  .  |    ..$ x    :List of 4
[10:50:46.274] |  :  .  |    .. ..$ : int 4
[10:50:46.274] |  :  .  |    .. ..$ : int 3
[10:50:46.274] |  :  .  |    .. ..$ : int 2
[10:50:46.274] |  :  .  |    .. ..$ : int 1
[10:50:46.274] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.274] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.274] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.274] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.274] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.274] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.274] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.274] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.274] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.274] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.274] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.274] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.306] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.306] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.306] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.307] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.307] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.307] |  :  .  |  assign_globals() ... done
[10:50:46.308] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.308] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.308] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.309] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.309] |  :  .  |  :  .  |  :  New stack:
[10:50:46.309] |  :  .  |  :  .  |  :  List of 1
[10:50:46.309] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.309] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.309] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.309] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.309] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.309] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.309] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.309] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.309] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.309] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.312] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.312] |  :  .  |  :  .  |  :  List of 1
[10:50:46.312] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.312] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.312] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.312] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.312] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.312] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.312] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.312] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.312] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.312] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.315] |  :  .  |  :  .  |  :  Identical
[10:50:46.315] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.315] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.315] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.315] |  :  .  |  :  .  |  1. sequential:
[10:50:46.315] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.315] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.315] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.316] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.316] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.316] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.316] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.316] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.316] |  :  Launching futures ... done
[10:50:46.316] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.316] |  Using SequentialFutureBackend ... done
[10:50:46.316] run() for Future (‘SequentialFuture’) ... done
[10:50:46.317] Created future:
[10:50:46.317] SequentialFuture:
[10:50:46.317] Label: ‘future_mapply-1’
[10:50:46.317] Expression:
[10:50:46.317] {
[10:50:46.317]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.317]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.317]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.317]         on.exit(options(oopts), add = TRUE)
[10:50:46.317]     }
[10:50:46.317]     {
[10:50:46.317]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.317]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.317]         do.call(mapply, args = args)
[10:50:46.317]     }
[10:50:46.317] }
[10:50:46.317] Lazy evaluation: FALSE
[10:50:46.317] Asynchronous evaluation: TRUE
[10:50:46.317] Local evaluation: TRUE
[10:50:46.317] Environment: R_GlobalEnv
[10:50:46.317] Capture standard output: TRUE
[10:50:46.317] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.317] Immediate condition classes: ‘immediateCondition’
[10:50:46.317] Globals: 5 objects totaling 313 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 198 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.317] Packages: <none>
[10:50:46.317] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.317] Resolved: TRUE
[10:50:46.317] Value: 103 bytes of class ‘list’
[10:50:46.317] Early signaling: FALSE
[10:50:46.317] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.317] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.318] Chunk #1 of 1 ... DONE
[10:50:46.318] Launching 1 futures (chunks) ... DONE
[10:50:46.318] Resolving 1 futures (chunks) ...
[10:50:46.318] value() on list ...
[10:50:46.318] |  recursive: 0
[10:50:46.318] |  length: 1
[10:50:46.318] |  
[10:50:46.318] |  Number of remaining objects: 1
[10:50:46.318] |  checking value #1 ...
[10:50:46.318] |  :  'obj' is SequentialFuture
[10:50:46.318] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.319] |  :  .  state: ‘finished’
[10:50:46.319] |  :  .  run: TRUE
[10:50:46.319] |  :  .  result: ‘FutureResult’
[10:50:46.319] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.319] |  :  SequentialFuture #1
[10:50:46.319] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.319] |  :  .  nx: 1
[10:50:46.319] |  :  .  relay: TRUE
[10:50:46.319] |  :  .  stdout: TRUE
[10:50:46.319] |  :  .  signal: TRUE
[10:50:46.319] |  :  .  resignal: FALSE
[10:50:46.320] |  :  .  force: TRUE
[10:50:46.320] |  :  .  relayed: [n=1] FALSE
[10:50:46.320] |  :  .  queued futures: [n=1] FALSE
[10:50:46.320] |  :  .  until=1
[10:50:46.320] |  :  .  relaying element #1
[10:50:46.320] |  :  .  relayed: [n=1] TRUE
[10:50:46.320] |  :  .  queued futures: [n=1] TRUE
[10:50:46.320] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.320] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.321] |  :  .  value: <list>
[10:50:46.321] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.321] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.321] |  :  .  nx: 1
[10:50:46.321] |  :  .  relay: TRUE
[10:50:46.321] |  :  .  stdout: TRUE
[10:50:46.321] |  :  .  signal: TRUE
[10:50:46.321] |  :  .  resignal: FALSE
[10:50:46.321] |  :  .  force: TRUE
[10:50:46.321] |  :  .  relayed: [n=1] TRUE
[10:50:46.321] |  :  .  queued futures: [n=1] TRUE
[10:50:46.321] |  :  .  until=1
[10:50:46.322] |  :  .  relayed: [n=1] TRUE
[10:50:46.322] |  :  .  queued futures: [n=1] TRUE
[10:50:46.322] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.322] |  :  length: 0 (resolved future 1)
[10:50:46.322] |  checking value #1 ... done
[10:50:46.322] |  Relaying remaining futures ...
[10:50:46.322] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.322] |  :  .  nx: 1
[10:50:46.322] |  :  .  relay: TRUE
[10:50:46.322] |  :  .  stdout: TRUE
[10:50:46.322] |  :  .  signal: TRUE
[10:50:46.323] |  :  .  resignal: FALSE
[10:50:46.323] |  :  .  force: TRUE
[10:50:46.323] |  :  .  relayed: [n=1] TRUE
[10:50:46.323] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.323] |  :  .  relayed: [n=1] TRUE
[10:50:46.323] |  :  .  queued futures: [n=1] TRUE
[10:50:46.323] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.323] |  Relaying remaining futures ... done
[10:50:46.323] value() on list ... done
[10:50:46.323]  - Number of value chunks collected: 1
[10:50:46.324] Resolving 1 futures (chunks) ... DONE
[10:50:46.324] Reducing values from 1 chunks ...
[10:50:46.324]  - Number of values collected after concatenation: 4
[10:50:46.324]  - Number of values expected: 4
[10:50:46.324] Reducing values from 1 chunks ... DONE
[10:50:46.324] future_mapply() ... DONE
[10:50:46.324] future_mapply() ...
[10:50:46.324] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.324] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.324] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.325] Number of chunks: 1
[10:50:46.325] getGlobalsAndPackagesXApply() ...
[10:50:46.325]  - future.globals: TRUE
[10:50:46.325] getGlobalsAndPackages() ...
[10:50:46.325] |  Searching for globals ...
[10:50:46.326] |  :  globals found: [1] ‘FUN’
[10:50:46.326] |  Searching for globals ... DONE
[10:50:46.327] |  Resolving globals: FALSE
[10:50:46.327] |  Search for packages associated with the globals ...
[10:50:46.327] |  :  Packages associated with globals: [0] 
[10:50:46.327] |  :  Packages: [0] 
[10:50:46.327] |  Search for packages associated with the globals ... DONE
[10:50:46.327] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:46.328] |  The total size of the 1 globals exported for future expression (‘FUN(x = 42)’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:46.328] |  Packages after dropping 'base': [0] 
[10:50:46.328] |  globals: [1] ‘FUN’
[10:50:46.328] |  packages: [0] 
[10:50:46.328] getGlobalsAndPackages() ... done
[10:50:46.328]  - globals found/used: [n=1] ‘FUN’
[10:50:46.328]  - needed namespaces: [n=0] 
[10:50:46.328] Finding globals ... DONE
[10:50:46.329] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.329] List of 2
[10:50:46.329]  $ ...future.FUN:function (x, ...)  
[10:50:46.329]  $ MoreArgs     :List of 1
[10:50:46.329]   ..$ x: num 42
[10:50:46.329]  - attr(*, "where")=List of 2
[10:50:46.329]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.329]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.329]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.329]  - attr(*, "resolved")= logi FALSE
[10:50:46.329]  - attr(*, "total_size")= num NA
[10:50:46.332] Packages to be attached in all futures: [n=0] 
[10:50:46.332] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.332] Number of futures (= number of chunks): 1
[10:50:46.332] Launching 1 futures (chunks) ...
[10:50:46.332] Chunk #1 of 1 ...
[10:50:46.332]  - Finding globals in '...' for chunk #1 ...
[10:50:46.332] getGlobalsAndPackages() ...
[10:50:46.332] |  Searching for globals ...
[10:50:46.333] |  :  globals found: [0] 
[10:50:46.333] |  Searching for globals ... DONE
[10:50:46.333] |  globals: [0] <none>
[10:50:46.333] |  packages: [0] <none>
[10:50:46.333] getGlobalsAndPackages() ... done
[10:50:46.333]    + additional globals found: [n=0] 
[10:50:46.333]    + additional namespaces needed: [n=0] 
[10:50:46.333]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.333]  - seeds: <none>
[10:50:46.333]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.334] getGlobalsAndPackages() ...
[10:50:46.334] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.334] |  Resolving globals: FALSE
[10:50:46.334] |  Search for packages associated with the globals ...
[10:50:46.334] |  :  Packages associated with globals: [0] 
[10:50:46.334] |  :  Packages: [0] 
[10:50:46.334] |  Search for packages associated with the globals ... DONE
[10:50:46.334] |  Packages after dropping 'base': [0] 
[10:50:46.335] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.335] |  packages: [0] 
[10:50:46.335] getGlobalsAndPackages() ... done
[10:50:46.335] run() for Future (‘Future’) ...
[10:50:46.335] |  state: ‘created’
[10:50:46.335] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.335] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.335] |  Using SequentialFutureBackend ...
[10:50:46.335] |  :  Launching futures ...
[10:50:46.336] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.336] |  :  .  |  getFutureData() ...
[10:50:46.336] |  :  .  |  :  getFutureCore() ...
[10:50:46.336] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.336] |  :  .  |  :  getFutureCore() ... done
[10:50:46.336] |  :  .  |  :  getFutureCapture() ...
[10:50:46.336] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.336] |  :  .  |  :  getFutureContext() ...
[10:50:46.336] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.336] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.337] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.337] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.337] |  :  .  |  :  getFutureContext() ... done
[10:50:46.337] |  :  .  |  getFutureData() ... done
[10:50:46.337] |  :  .  |  attachPackages() ...
[10:50:46.337] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.337] |  :  .  |  attachPackages() ... DONE
[10:50:46.337] |  :  .  |  attachPackages() ...
[10:50:46.337] |  :  .  |  :  packages: [n=0] 
[10:50:46.338] |  :  .  |  attachPackages() ... DONE
[10:50:46.338] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.338] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.338] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.338] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.338] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.339] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.339] |  :  .  |  :  .  |  New stack:
[10:50:46.339] |  :  .  |  :  .  |  List of 1
[10:50:46.339] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.339] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.339] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.339] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.339] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.339] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.339] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.341] |  :  .  |  :  .  |  Old stack:
[10:50:46.341] |  :  .  |  :  .  |  List of 1
[10:50:46.341] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.341] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.341] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.341] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.341] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.341] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.341] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.341] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.341] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.341] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.344] |  :  .  |  :  .  |  Not identical
[10:50:46.344] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.344] |  :  .  |  :  .  |  :  List of 2
[10:50:46.344] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.344] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.344] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.344] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.349] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.349] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.349] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.350] |  :  .  |  :  .  List of future strategies:
[10:50:46.350] |  :  .  |  :  .  1. sequential:
[10:50:46.350] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.350] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.350] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.350] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.350] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.350] |  :  .  |  assign_globals() ...
[10:50:46.350] |  :  .  |  List of 5
[10:50:46.350] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:46.350] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:46.350] |  :  .  |    ..$ x: num 42
[10:50:46.350] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:46.350] |  :  .  |    ..$ times:List of 4
[10:50:46.350] |  :  .  |    .. ..$ : int 1
[10:50:46.350] |  :  .  |    .. ..$ : int 2
[10:50:46.350] |  :  .  |    .. ..$ : int 3
[10:50:46.350] |  :  .  |    .. ..$ : int 4
[10:50:46.350] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.350] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.350] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.350] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.350] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.350] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.350] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.350] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.350] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.350] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.350] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.350] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.356] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.356] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.356] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.356] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.356] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.357] |  :  .  |  assign_globals() ... done
[10:50:46.358] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.358] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.358] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.358] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.358] |  :  .  |  :  .  |  :  New stack:
[10:50:46.358] |  :  .  |  :  .  |  :  List of 1
[10:50:46.358] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.358] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.358] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.358] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.358] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.358] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.358] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.358] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.358] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.358] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.361] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.361] |  :  .  |  :  .  |  :  List of 1
[10:50:46.361] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.361] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.361] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.361] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.361] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.361] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.361] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.361] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.361] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.361] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.364] |  :  .  |  :  .  |  :  Identical
[10:50:46.364] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.364] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.364] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.364] |  :  .  |  :  .  |  1. sequential:
[10:50:46.364] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.364] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.364] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.365] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.365] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.365] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.365] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.365] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.365] |  :  Launching futures ... done
[10:50:46.365] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.366] |  Using SequentialFutureBackend ... done
[10:50:46.366] run() for Future (‘SequentialFuture’) ... done
[10:50:46.366] Created future:
[10:50:46.366] SequentialFuture:
[10:50:46.366] Label: ‘future_mapply-1’
[10:50:46.366] Expression:
[10:50:46.366] {
[10:50:46.366]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.366]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.366]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.366]         on.exit(options(oopts), add = TRUE)
[10:50:46.366]     }
[10:50:46.366]     {
[10:50:46.366]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.366]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.366]         do.call(mapply, args = args)
[10:50:46.366]     }
[10:50:46.366] }
[10:50:46.366] Lazy evaluation: FALSE
[10:50:46.366] Asynchronous evaluation: TRUE
[10:50:46.366] Local evaluation: TRUE
[10:50:46.366] Environment: R_GlobalEnv
[10:50:46.366] Capture standard output: TRUE
[10:50:46.366] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.366] Immediate condition classes: ‘immediateCondition’
[10:50:46.366] Globals: 5 objects totaling 310 bytes (function ‘...future.FUN’ of 34 bytes, list ‘MoreArgs’ of 89 bytes, list ‘...future.elements_ii’ of 133 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.366] Packages: <none>
[10:50:46.366] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.366] Resolved: TRUE
[10:50:46.366] Value: 143 bytes of class ‘list’
[10:50:46.366] Early signaling: FALSE
[10:50:46.366] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.366] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.367] Chunk #1 of 1 ... DONE
[10:50:46.367] Launching 1 futures (chunks) ... DONE
[10:50:46.367] Resolving 1 futures (chunks) ...
[10:50:46.368] value() on list ...
[10:50:46.368] |  recursive: 0
[10:50:46.368] |  length: 1
[10:50:46.368] |  
[10:50:46.368] |  Number of remaining objects: 1
[10:50:46.368] |  checking value #1 ...
[10:50:46.368] |  :  'obj' is SequentialFuture
[10:50:46.368] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.368] |  :  .  state: ‘finished’
[10:50:46.368] |  :  .  run: TRUE
[10:50:46.368] |  :  .  result: ‘FutureResult’
[10:50:46.369] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.369] |  :  SequentialFuture #1
[10:50:46.369] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.369] |  :  .  nx: 1
[10:50:46.369] |  :  .  relay: TRUE
[10:50:46.369] |  :  .  stdout: TRUE
[10:50:46.369] |  :  .  signal: TRUE
[10:50:46.369] |  :  .  resignal: FALSE
[10:50:46.369] |  :  .  force: TRUE
[10:50:46.369] |  :  .  relayed: [n=1] FALSE
[10:50:46.369] |  :  .  queued futures: [n=1] FALSE
[10:50:46.369] |  :  .  until=1
[10:50:46.369] |  :  .  relaying element #1
[10:50:46.370] |  :  .  relayed: [n=1] TRUE
[10:50:46.370] |  :  .  queued futures: [n=1] TRUE
[10:50:46.370] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.370] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.370] |  :  .  value: <list>
[10:50:46.370] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.370] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.370] |  :  .  nx: 1
[10:50:46.370] |  :  .  relay: TRUE
[10:50:46.371] |  :  .  stdout: TRUE
[10:50:46.371] |  :  .  signal: TRUE
[10:50:46.371] |  :  .  resignal: FALSE
[10:50:46.371] |  :  .  force: TRUE
[10:50:46.371] |  :  .  relayed: [n=1] TRUE
[10:50:46.371] |  :  .  queued futures: [n=1] TRUE
[10:50:46.371] |  :  .  until=1
[10:50:46.371] |  :  .  relayed: [n=1] TRUE
[10:50:46.371] |  :  .  queued futures: [n=1] TRUE
[10:50:46.371] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.371] |  :  length: 0 (resolved future 1)
[10:50:46.371] |  checking value #1 ... done
[10:50:46.372] |  Relaying remaining futures ...
[10:50:46.372] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.372] |  :  .  nx: 1
[10:50:46.372] |  :  .  relay: TRUE
[10:50:46.372] |  :  .  stdout: TRUE
[10:50:46.372] |  :  .  signal: TRUE
[10:50:46.372] |  :  .  resignal: FALSE
[10:50:46.372] |  :  .  force: TRUE
[10:50:46.372] |  :  .  relayed: [n=1] TRUE
[10:50:46.372] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.372] |  :  .  relayed: [n=1] TRUE
[10:50:46.372] |  :  .  queued futures: [n=1] TRUE
[10:50:46.373] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.373] |  Relaying remaining futures ... done
[10:50:46.373] value() on list ... done
[10:50:46.373]  - Number of value chunks collected: 1
[10:50:46.373] Resolving 1 futures (chunks) ... DONE
[10:50:46.373] Reducing values from 1 chunks ...
[10:50:46.373]  - Number of values collected after concatenation: 4
[10:50:46.373]  - Number of values expected: 4
[10:50:46.373] Reducing values from 1 chunks ... DONE
[10:50:46.373] future_mapply() ... DONE
[10:50:46.373] future_mapply() ...
[10:50:46.374] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.374] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.374] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.374] Number of chunks: 1
[10:50:46.374] getGlobalsAndPackagesXApply() ...
[10:50:46.374]  - future.globals: TRUE
[10:50:46.374] getGlobalsAndPackages() ...
[10:50:46.374] |  Searching for globals ...
[10:50:46.375] |  :  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:46.376] |  Searching for globals ... DONE
[10:50:46.376] |  Resolving globals: FALSE
[10:50:46.376] |  Search for packages associated with the globals ...
[10:50:46.376] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.376] |  :  Packages: [1] ‘base’
[10:50:46.376] |  Search for packages associated with the globals ... DONE
[10:50:46.376] |  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:46.377] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:46.377] |  Packages after dropping 'base': [0] 
[10:50:46.377] |  globals: [1] ‘FUN’
[10:50:46.377] |  packages: [0] 
[10:50:46.377] getGlobalsAndPackages() ... done
[10:50:46.377]  - globals found/used: [n=1] ‘FUN’
[10:50:46.377]  - needed namespaces: [n=0] 
[10:50:46.377] Finding globals ... DONE
[10:50:46.378] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.378] List of 2
[10:50:46.378]  $ ...future.FUN:function (x, y)  
[10:50:46.378]  $ MoreArgs     : NULL
[10:50:46.378]  - attr(*, "where")=List of 2
[10:50:46.378]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.378]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.378]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.378]  - attr(*, "resolved")= logi FALSE
[10:50:46.378]  - attr(*, "total_size")= num NA
[10:50:46.380] Packages to be attached in all futures: [n=0] 
[10:50:46.380] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.380] Number of futures (= number of chunks): 1
[10:50:46.380] Launching 1 futures (chunks) ...
[10:50:46.380] Chunk #1 of 1 ...
[10:50:46.381]  - Finding globals in '...' for chunk #1 ...
[10:50:46.381] getGlobalsAndPackages() ...
[10:50:46.381] |  Searching for globals ...
[10:50:46.381] |  :  globals found: [0] 
[10:50:46.381] |  Searching for globals ... DONE
[10:50:46.381] |  globals: [0] <none>
[10:50:46.381] |  packages: [0] <none>
[10:50:46.381] getGlobalsAndPackages() ... done
[10:50:46.382]    + additional globals found: [n=0] 
[10:50:46.382]    + additional namespaces needed: [n=0] 
[10:50:46.382]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.382]  - seeds: <none>
[10:50:46.382]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.382] getGlobalsAndPackages() ...
[10:50:46.382] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.382] |  Resolving globals: FALSE
[10:50:46.382] |  Search for packages associated with the globals ...
[10:50:46.382] |  :  Packages associated with globals: [0] 
[10:50:46.383] |  :  Packages: [0] 
[10:50:46.383] |  Search for packages associated with the globals ... DONE
[10:50:46.383] |  Packages after dropping 'base': [0] 
[10:50:46.383] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.383] |  packages: [0] 
[10:50:46.383] getGlobalsAndPackages() ... done
[10:50:46.383] run() for Future (‘Future’) ...
[10:50:46.383] |  state: ‘created’
[10:50:46.384] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.384] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.384] |  Using SequentialFutureBackend ...
[10:50:46.384] |  :  Launching futures ...
[10:50:46.384] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.384] |  :  .  |  getFutureData() ...
[10:50:46.384] |  :  .  |  :  getFutureCore() ...
[10:50:46.384] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.384] |  :  .  |  :  getFutureCore() ... done
[10:50:46.384] |  :  .  |  :  getFutureCapture() ...
[10:50:46.385] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.385] |  :  .  |  :  getFutureContext() ...
[10:50:46.385] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.385] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.385] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.385] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.385] |  :  .  |  :  getFutureContext() ... done
[10:50:46.385] |  :  .  |  getFutureData() ... done
[10:50:46.385] |  :  .  |  attachPackages() ...
[10:50:46.385] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.386] |  :  .  |  attachPackages() ... DONE
[10:50:46.386] |  :  .  |  attachPackages() ...
[10:50:46.386] |  :  .  |  :  packages: [n=0] 
[10:50:46.386] |  :  .  |  attachPackages() ... DONE
[10:50:46.386] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.386] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.387] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.387] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.388] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.388] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.388] |  :  .  |  :  .  |  New stack:
[10:50:46.388] |  :  .  |  :  .  |  List of 1
[10:50:46.388] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.388] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.388] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.388] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.388] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.388] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.388] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.390] |  :  .  |  :  .  |  Old stack:
[10:50:46.390] |  :  .  |  :  .  |  List of 1
[10:50:46.390] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.390] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.390] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.390] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.390] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.390] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.390] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.390] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.390] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.390] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.393] |  :  .  |  :  .  |  Not identical
[10:50:46.393] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.393] |  :  .  |  :  .  |  :  List of 2
[10:50:46.393] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.393] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.393] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.393] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.393] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.393] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.393] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.398] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.398] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.398] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.398] |  :  .  |  :  .  List of future strategies:
[10:50:46.398] |  :  .  |  :  .  1. sequential:
[10:50:46.398] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.398] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.398] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.398] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.398] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.398] |  :  .  |  assign_globals() ...
[10:50:46.399] |  :  .  |  List of 5
[10:50:46.399] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:46.399] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.399] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.399] |  :  .  |    ..$ :List of 3
[10:50:46.399] |  :  .  |    .. ..$ a: num 1
[10:50:46.399] |  :  .  |    .. ..$ b: num 2
[10:50:46.399] |  :  .  |    .. ..$ c: num 3
[10:50:46.399] |  :  .  |    ..$ :List of 3
[10:50:46.399] |  :  .  |    .. ..$ A: num 10
[10:50:46.399] |  :  .  |    .. ..$ B: num 0
[10:50:46.399] |  :  .  |    .. ..$ C: num -10
[10:50:46.399] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.399] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.399] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.399] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.399] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.399] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.399] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.399] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.399] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.399] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.399] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.399] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.405] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.405] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.405] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.405] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.405] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.405] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.405] |  :  .  |  assign_globals() ... done
[10:50:46.409] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.409] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.409] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.409] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.409] |  :  .  |  :  .  |  :  New stack:
[10:50:46.409] |  :  .  |  :  .  |  :  List of 1
[10:50:46.409] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.409] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.409] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.409] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.409] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.409] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.409] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.409] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.409] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.409] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.412] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.412] |  :  .  |  :  .  |  :  List of 1
[10:50:46.412] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.412] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.412] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.412] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.412] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.412] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.412] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.412] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.412] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.412] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.415] |  :  .  |  :  .  |  :  Identical
[10:50:46.415] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.415] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.415] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.415] |  :  .  |  :  .  |  1. sequential:
[10:50:46.415] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.415] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.415] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.416] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.416] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.416] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.416] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.416] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.416] |  :  Launching futures ... done
[10:50:46.416] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.416] |  Using SequentialFutureBackend ... done
[10:50:46.417] run() for Future (‘SequentialFuture’) ... done
[10:50:46.417] Created future:
[10:50:46.417] SequentialFuture:
[10:50:46.417] Label: ‘future_mapply-1’
[10:50:46.417] Expression:
[10:50:46.417] {
[10:50:46.417]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.417]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.417]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.417]         on.exit(options(oopts), add = TRUE)
[10:50:46.417]     }
[10:50:46.417]     {
[10:50:46.417]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.417]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.417]         do.call(mapply, args = args)
[10:50:46.417]     }
[10:50:46.417] }
[10:50:46.417] Lazy evaluation: FALSE
[10:50:46.417] Asynchronous evaluation: TRUE
[10:50:46.417] Local evaluation: TRUE
[10:50:46.417] Environment: R_GlobalEnv
[10:50:46.417] Capture standard output: TRUE
[10:50:46.417] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.417] Immediate condition classes: ‘immediateCondition’
[10:50:46.417] Globals: 5 objects totaling 745 bytes (function ‘...future.FUN’ of 414 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 250 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.417] Packages: <none>
[10:50:46.417] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.417] Resolved: TRUE
[10:50:46.417] Value: 103 bytes of class ‘list’
[10:50:46.417] Early signaling: FALSE
[10:50:46.417] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.417] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.418] Chunk #1 of 1 ... DONE
[10:50:46.418] Launching 1 futures (chunks) ... DONE
[10:50:46.418] Resolving 1 futures (chunks) ...
[10:50:46.418] value() on list ...
[10:50:46.418] |  recursive: 0
[10:50:46.418] |  length: 1
[10:50:46.418] |  
[10:50:46.418] |  Number of remaining objects: 1
[10:50:46.418] |  checking value #1 ...
[10:50:46.418] |  :  'obj' is SequentialFuture
[10:50:46.418] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.419] |  :  .  state: ‘finished’
[10:50:46.419] |  :  .  run: TRUE
[10:50:46.419] |  :  .  result: ‘FutureResult’
[10:50:46.419] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.419] |  :  SequentialFuture #1
[10:50:46.419] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.419] |  :  .  nx: 1
[10:50:46.419] |  :  .  relay: TRUE
[10:50:46.419] |  :  .  stdout: TRUE
[10:50:46.419] |  :  .  signal: TRUE
[10:50:46.419] |  :  .  resignal: FALSE
[10:50:46.419] |  :  .  force: TRUE
[10:50:46.420] |  :  .  relayed: [n=1] FALSE
[10:50:46.420] |  :  .  queued futures: [n=1] FALSE
[10:50:46.420] |  :  .  until=1
[10:50:46.420] |  :  .  relaying element #1
[10:50:46.420] |  :  .  relayed: [n=1] TRUE
[10:50:46.420] |  :  .  queued futures: [n=1] TRUE
[10:50:46.420] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.420] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.421] |  :  .  value: <list>
[10:50:46.421] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.421] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.421] |  :  .  nx: 1
[10:50:46.421] |  :  .  relay: TRUE
[10:50:46.421] |  :  .  stdout: TRUE
[10:50:46.421] |  :  .  signal: TRUE
[10:50:46.421] |  :  .  resignal: FALSE
[10:50:46.421] |  :  .  force: TRUE
[10:50:46.421] |  :  .  relayed: [n=1] TRUE
[10:50:46.421] |  :  .  queued futures: [n=1] TRUE
[10:50:46.422] |  :  .  until=1
[10:50:46.422] |  :  .  relayed: [n=1] TRUE
[10:50:46.422] |  :  .  queued futures: [n=1] TRUE
[10:50:46.422] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.422] |  :  length: 0 (resolved future 1)
[10:50:46.422] |  checking value #1 ... done
[10:50:46.422] |  Relaying remaining futures ...
[10:50:46.422] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.422] |  :  .  nx: 1
[10:50:46.422] |  :  .  relay: TRUE
[10:50:46.422] |  :  .  stdout: TRUE
[10:50:46.422] |  :  .  signal: TRUE
[10:50:46.423] |  :  .  resignal: FALSE
[10:50:46.423] |  :  .  force: TRUE
[10:50:46.423] |  :  .  relayed: [n=1] TRUE
[10:50:46.423] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.423] |  :  .  relayed: [n=1] TRUE
[10:50:46.423] |  :  .  queued futures: [n=1] TRUE
[10:50:46.423] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.423] |  Relaying remaining futures ... done
[10:50:46.423] value() on list ... done
[10:50:46.423]  - Number of value chunks collected: 1
[10:50:46.423] Resolving 1 futures (chunks) ... DONE
[10:50:46.424] Reducing values from 1 chunks ...
[10:50:46.424]  - Number of values collected after concatenation: 3
[10:50:46.424]  - Number of values expected: 3
[10:50:46.424] Reducing values from 1 chunks ... DONE
[10:50:46.424] future_mapply() ... DONE
- future_.mapply()
[10:50:46.424] future_mapply() ...
[10:50:46.424] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.425] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.425] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.425] Number of chunks: 1
[10:50:46.425] getGlobalsAndPackagesXApply() ...
[10:50:46.425]  - future.globals: TRUE
[10:50:46.425] getGlobalsAndPackages() ...
[10:50:46.425] |  Searching for globals ...
[10:50:46.428] |  :  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:46.428] |  Searching for globals ... DONE
[10:50:46.428] |  Resolving globals: FALSE
[10:50:46.428] |  Search for packages associated with the globals ...
[10:50:46.428] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.428] |  :  Packages: [1] ‘base’
[10:50:46.429] |  Search for packages associated with the globals ... DONE
[10:50:46.429] |  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:46.429] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:46.429] |  Packages after dropping 'base': [0] 
[10:50:46.429] |  globals: [1] ‘FUN’
[10:50:46.429] |  packages: [0] 
[10:50:46.429] getGlobalsAndPackages() ... done
[10:50:46.429]  - globals found/used: [n=1] ‘FUN’
[10:50:46.430]  - needed namespaces: [n=0] 
[10:50:46.430] Finding globals ... DONE
[10:50:46.430] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.430] List of 2
[10:50:46.430]  $ ...future.FUN:function (x, y)  
[10:50:46.430]  $ MoreArgs     : list()
[10:50:46.430]  - attr(*, "where")=List of 2
[10:50:46.430]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.430]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.430]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.430]  - attr(*, "resolved")= logi FALSE
[10:50:46.430]  - attr(*, "total_size")= num NA
[10:50:46.432] Packages to be attached in all futures: [n=0] 
[10:50:46.433] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.433] Number of futures (= number of chunks): 1
[10:50:46.433] Launching 1 futures (chunks) ...
[10:50:46.433] Chunk #1 of 1 ...
[10:50:46.433]  - Finding globals in '...' for chunk #1 ...
[10:50:46.433] getGlobalsAndPackages() ...
[10:50:46.433] |  Searching for globals ...
[10:50:46.433] |  :  globals found: [0] 
[10:50:46.434] |  Searching for globals ... DONE
[10:50:46.434] |  globals: [0] <none>
[10:50:46.434] |  packages: [0] <none>
[10:50:46.434] getGlobalsAndPackages() ... done
[10:50:46.434]    + additional globals found: [n=0] 
[10:50:46.434]    + additional namespaces needed: [n=0] 
[10:50:46.434]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.434]  - seeds: <none>
[10:50:46.434]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.434] getGlobalsAndPackages() ...
[10:50:46.434] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.435] |  Resolving globals: FALSE
[10:50:46.435] |  Search for packages associated with the globals ...
[10:50:46.435] |  :  Packages associated with globals: [0] 
[10:50:46.435] |  :  Packages: [0] 
[10:50:46.435] |  Search for packages associated with the globals ... DONE
[10:50:46.435] |  Packages after dropping 'base': [0] 
[10:50:46.435] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.435] |  packages: [0] 
[10:50:46.436] getGlobalsAndPackages() ... done
[10:50:46.436] run() for Future (‘Future’) ...
[10:50:46.436] |  state: ‘created’
[10:50:46.436] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.436] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.436] |  Using SequentialFutureBackend ...
[10:50:46.436] |  :  Launching futures ...
[10:50:46.436] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.437] |  :  .  |  getFutureData() ...
[10:50:46.437] |  :  .  |  :  getFutureCore() ...
[10:50:46.437] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.437] |  :  .  |  :  getFutureCore() ... done
[10:50:46.437] |  :  .  |  :  getFutureCapture() ...
[10:50:46.437] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.437] |  :  .  |  :  getFutureContext() ...
[10:50:46.437] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.437] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.437] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.438] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.438] |  :  .  |  :  getFutureContext() ... done
[10:50:46.438] |  :  .  |  getFutureData() ... done
[10:50:46.438] |  :  .  |  attachPackages() ...
[10:50:46.438] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.438] |  :  .  |  attachPackages() ... DONE
[10:50:46.438] |  :  .  |  attachPackages() ...
[10:50:46.438] |  :  .  |  :  packages: [n=0] 
[10:50:46.438] |  :  .  |  attachPackages() ... DONE
[10:50:46.439] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.439] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.439] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.439] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.439] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.439] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.440] |  :  .  |  :  .  |  New stack:
[10:50:46.440] |  :  .  |  :  .  |  List of 1
[10:50:46.440] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.440] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.440] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.440] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.440] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.440] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.440] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.442] |  :  .  |  :  .  |  Old stack:
[10:50:46.442] |  :  .  |  :  .  |  List of 1
[10:50:46.442] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.442] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.442] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.442] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.442] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.442] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.442] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.442] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.442] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.442] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.445] |  :  .  |  :  .  |  Not identical
[10:50:46.445] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.445] |  :  .  |  :  .  |  :  List of 2
[10:50:46.445] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.445] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.445] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.445] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.450] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.450] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.450] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.450] |  :  .  |  :  .  List of future strategies:
[10:50:46.450] |  :  .  |  :  .  1. sequential:
[10:50:46.450] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.450] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.450] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.451] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.451] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.451] |  :  .  |  assign_globals() ...
[10:50:46.451] |  :  .  |  List of 5
[10:50:46.451] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:46.451] |  :  .  |   $ MoreArgs                 : list()
[10:50:46.451] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.451] |  :  .  |    ..$ :List of 3
[10:50:46.451] |  :  .  |    .. ..$ a: num 1
[10:50:46.451] |  :  .  |    .. ..$ b: num 2
[10:50:46.451] |  :  .  |    .. ..$ c: num 3
[10:50:46.451] |  :  .  |    ..$ :List of 3
[10:50:46.451] |  :  .  |    .. ..$ A: num 10
[10:50:46.451] |  :  .  |    .. ..$ B: num 0
[10:50:46.451] |  :  .  |    .. ..$ C: num -10
[10:50:46.451] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.451] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.451] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.451] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.451] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.451] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.451] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.451] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.451] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.451] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.451] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.451] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.457] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.458] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.458] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.458] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.458] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.458] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.458] |  :  .  |  assign_globals() ... done
[10:50:46.459] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.460] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.460] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.460] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.460] |  :  .  |  :  .  |  :  New stack:
[10:50:46.460] |  :  .  |  :  .  |  :  List of 1
[10:50:46.460] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.460] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.460] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.460] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.460] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.460] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.460] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.460] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.463] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.463] |  :  .  |  :  .  |  :  List of 1
[10:50:46.463] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.463] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.463] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.463] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.463] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.463] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.463] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.463] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.463] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.463] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.467] |  :  .  |  :  .  |  :  Identical
[10:50:46.467] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.467] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.467] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.467] |  :  .  |  :  .  |  1. sequential:
[10:50:46.467] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.467] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.467] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.468] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.468] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.468] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.468] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.468] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.468] |  :  Launching futures ... done
[10:50:46.468] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.469] |  Using SequentialFutureBackend ... done
[10:50:46.469] run() for Future (‘SequentialFuture’) ... done
[10:50:46.469] Created future:
[10:50:46.469] SequentialFuture:
[10:50:46.469] Label: ‘future_.mapply-1’
[10:50:46.469] Expression:
[10:50:46.469] {
[10:50:46.469]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.469]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.469]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.469]         on.exit(options(oopts), add = TRUE)
[10:50:46.469]     }
[10:50:46.469]     {
[10:50:46.469]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.469]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.469]         do.call(mapply, args = args)
[10:50:46.469]     }
[10:50:46.469] }
[10:50:46.469] Lazy evaluation: FALSE
[10:50:46.469] Asynchronous evaluation: TRUE
[10:50:46.469] Local evaluation: TRUE
[10:50:46.469] Environment: R_GlobalEnv
[10:50:46.469] Capture standard output: TRUE
[10:50:46.469] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.469] Immediate condition classes: ‘immediateCondition’
[10:50:46.469] Globals: 5 objects totaling 749 bytes (function ‘...future.FUN’ of 414 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 250 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.469] Packages: <none>
[10:50:46.469] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.469] Resolved: TRUE
[10:50:46.469] Value: 103 bytes of class ‘list’
[10:50:46.469] Early signaling: FALSE
[10:50:46.469] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.469] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.470] Chunk #1 of 1 ... DONE
[10:50:46.470] Launching 1 futures (chunks) ... DONE
[10:50:46.470] Resolving 1 futures (chunks) ...
[10:50:46.470] value() on list ...
[10:50:46.470] |  recursive: 0
[10:50:46.470] |  length: 1
[10:50:46.470] |  
[10:50:46.470] |  Number of remaining objects: 1
[10:50:46.470] |  checking value #1 ...
[10:50:46.470] |  :  'obj' is SequentialFuture
[10:50:46.471] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.471] |  :  .  state: ‘finished’
[10:50:46.471] |  :  .  run: TRUE
[10:50:46.471] |  :  .  result: ‘FutureResult’
[10:50:46.471] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.471] |  :  SequentialFuture #1
[10:50:46.471] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.471] |  :  .  nx: 1
[10:50:46.471] |  :  .  relay: TRUE
[10:50:46.471] |  :  .  stdout: TRUE
[10:50:46.471] |  :  .  signal: TRUE
[10:50:46.472] |  :  .  resignal: FALSE
[10:50:46.472] |  :  .  force: TRUE
[10:50:46.472] |  :  .  relayed: [n=1] FALSE
[10:50:46.472] |  :  .  queued futures: [n=1] FALSE
[10:50:46.472] |  :  .  until=1
[10:50:46.472] |  :  .  relaying element #1
[10:50:46.472] |  :  .  relayed: [n=1] TRUE
[10:50:46.472] |  :  .  queued futures: [n=1] TRUE
[10:50:46.472] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.472] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.473] |  :  .  value: <list>
[10:50:46.473] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.473] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.473] |  :  .  nx: 1
[10:50:46.473] |  :  .  relay: TRUE
[10:50:46.473] |  :  .  stdout: TRUE
[10:50:46.473] |  :  .  signal: TRUE
[10:50:46.473] |  :  .  resignal: FALSE
[10:50:46.473] |  :  .  force: TRUE
[10:50:46.473] |  :  .  relayed: [n=1] TRUE
[10:50:46.473] |  :  .  queued futures: [n=1] TRUE
[10:50:46.473] |  :  .  until=1
[10:50:46.474] |  :  .  relayed: [n=1] TRUE
[10:50:46.474] |  :  .  queued futures: [n=1] TRUE
[10:50:46.474] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.474] |  :  length: 0 (resolved future 1)
[10:50:46.474] |  checking value #1 ... done
[10:50:46.474] |  Relaying remaining futures ...
[10:50:46.474] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.474] |  :  .  nx: 1
[10:50:46.474] |  :  .  relay: TRUE
[10:50:46.474] |  :  .  stdout: TRUE
[10:50:46.474] |  :  .  signal: TRUE
[10:50:46.475] |  :  .  resignal: FALSE
[10:50:46.475] |  :  .  force: TRUE
[10:50:46.475] |  :  .  relayed: [n=1] TRUE
[10:50:46.475] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.475] |  :  .  relayed: [n=1] TRUE
[10:50:46.475] |  :  .  queued futures: [n=1] TRUE
[10:50:46.475] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.475] |  Relaying remaining futures ... done
[10:50:46.475] value() on list ... done
[10:50:46.475]  - Number of value chunks collected: 1
[10:50:46.475] Resolving 1 futures (chunks) ... DONE
[10:50:46.476] Reducing values from 1 chunks ...
[10:50:46.476]  - Number of values collected after concatenation: 3
[10:50:46.476]  - Number of values expected: 3
[10:50:46.476] Reducing values from 1 chunks ... DONE
[10:50:46.476] future_mapply() ... DONE
[10:50:46.476] future_mapply() ...
[10:50:46.476] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.476] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.476] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.478] Number of chunks: 5
[10:50:46.478] getGlobalsAndPackagesXApply() ...
[10:50:46.478]  - future.globals: TRUE
[10:50:46.478] getGlobalsAndPackages() ...
[10:50:46.478] |  Searching for globals ...
[10:50:46.480] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:46.480] |  Searching for globals ... DONE
[10:50:46.480] |  Resolving globals: FALSE
[10:50:46.480] |  Search for packages associated with the globals ...
[10:50:46.480] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.481] |  :  Packages: [1] ‘base’
[10:50:46.481] |  Search for packages associated with the globals ... DONE
[10:50:46.481] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:46.481] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:46.481] |  Packages after dropping 'base': [0] 
[10:50:46.481] |  globals: [1] ‘FUN’
[10:50:46.481] |  packages: [0] 
[10:50:46.481] getGlobalsAndPackages() ... done
[10:50:46.482]  - globals found/used: [n=1] ‘FUN’
[10:50:46.482]  - needed namespaces: [n=0] 
[10:50:46.482] Finding globals ... DONE
[10:50:46.482] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.482] List of 2
[10:50:46.482]  $ ...future.FUN:function (C, k)  
[10:50:46.482]  $ MoreArgs     : NULL
[10:50:46.482]  - attr(*, "where")=List of 2
[10:50:46.482]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.482]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.482]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.482]  - attr(*, "resolved")= logi FALSE
[10:50:46.482]  - attr(*, "total_size")= num NA
[10:50:46.485] Packages to be attached in all futures: [n=0] 
[10:50:46.485] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.485] Number of futures (= number of chunks): 5
[10:50:46.485] Launching 5 futures (chunks) ...
[10:50:46.485] Chunk #1 of 5 ...
[10:50:46.485]  - Finding globals in '...' for chunk #1 ...
[10:50:46.485] getGlobalsAndPackages() ...
[10:50:46.485] |  Searching for globals ...
[10:50:46.486] |  :  globals found: [0] 
[10:50:46.486] |  Searching for globals ... DONE
[10:50:46.486] |  globals: [0] <none>
[10:50:46.486] |  packages: [0] <none>
[10:50:46.486] getGlobalsAndPackages() ... done
[10:50:46.486]    + additional globals found: [n=0] 
[10:50:46.486]    + additional namespaces needed: [n=0] 
[10:50:46.486]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.487]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:46.487]  - seeds: <none>
[10:50:46.487]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.487] getGlobalsAndPackages() ...
[10:50:46.488] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.488] |  Resolving globals: FALSE
[10:50:46.488] |  Search for packages associated with the globals ...
[10:50:46.489] |  :  Packages associated with globals: [0] 
[10:50:46.489] |  :  Packages: [0] 
[10:50:46.489] |  Search for packages associated with the globals ... DONE
[10:50:46.489] |  Packages after dropping 'base': [0] 
[10:50:46.489] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.489] |  packages: [0] 
[10:50:46.489] getGlobalsAndPackages() ... done
[10:50:46.490] run() for Future (‘Future’) ...
[10:50:46.490] |  state: ‘created’
[10:50:46.490] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.490] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.490] |  Using SequentialFutureBackend ...
[10:50:46.490] |  :  Launching futures ...
[10:50:46.490] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.491] |  :  .  |  getFutureData() ...
[10:50:46.491] |  :  .  |  :  getFutureCore() ...
[10:50:46.491] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.491] |  :  .  |  :  getFutureCore() ... done
[10:50:46.491] |  :  .  |  :  getFutureCapture() ...
[10:50:46.491] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.491] |  :  .  |  :  getFutureContext() ...
[10:50:46.491] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.491] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.491] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.491] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.492] |  :  .  |  :  getFutureContext() ... done
[10:50:46.492] |  :  .  |  getFutureData() ... done
[10:50:46.492] |  :  .  |  attachPackages() ...
[10:50:46.492] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.492] |  :  .  |  attachPackages() ... DONE
[10:50:46.492] |  :  .  |  attachPackages() ...
[10:50:46.492] |  :  .  |  :  packages: [n=0] 
[10:50:46.492] |  :  .  |  attachPackages() ... DONE
[10:50:46.493] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.493] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.493] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.493] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.493] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.494] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.494] |  :  .  |  :  .  |  New stack:
[10:50:46.494] |  :  .  |  :  .  |  List of 1
[10:50:46.494] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.494] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.494] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.494] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.494] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.494] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.494] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.496] |  :  .  |  :  .  |  Old stack:
[10:50:46.496] |  :  .  |  :  .  |  List of 1
[10:50:46.496] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.496] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.496] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.496] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.496] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.496] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.496] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.496] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.496] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.496] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.499] |  :  .  |  :  .  |  Not identical
[10:50:46.499] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.499] |  :  .  |  :  .  |  :  List of 2
[10:50:46.499] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.499] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.499] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.499] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.499] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.499] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.499] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.504] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.504] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.504] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.504] |  :  .  |  :  .  List of future strategies:
[10:50:46.504] |  :  .  |  :  .  1. sequential:
[10:50:46.504] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.504] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.504] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.505] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.505] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.505] |  :  .  |  assign_globals() ...
[10:50:46.505] |  :  .  |  List of 5
[10:50:46.505] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.505] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.505] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.505] |  :  .  |    ..$ :List of 1
[10:50:46.505] |  :  .  |    .. ..$ : chr "A"
[10:50:46.505] |  :  .  |    ..$ :List of 1
[10:50:46.505] |  :  .  |    .. ..$ : int 5
[10:50:46.505] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.505] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.505] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.505] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.505] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.505] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.505] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.505] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.505] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.505] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.505] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.505] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.511] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.512] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.512] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.512] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.512] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.512] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.512] |  :  .  |  assign_globals() ... done
[10:50:46.514] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.514] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.514] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.514] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.514] |  :  .  |  :  .  |  :  New stack:
[10:50:46.514] |  :  .  |  :  .  |  :  List of 1
[10:50:46.514] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.514] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.514] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.514] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.514] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.514] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.514] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.514] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.514] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.514] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.517] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.517] |  :  .  |  :  .  |  :  List of 1
[10:50:46.517] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.517] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.517] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.517] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.517] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.517] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.517] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.517] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.517] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.517] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.520] |  :  .  |  :  .  |  :  Identical
[10:50:46.520] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.520] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.520] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.520] |  :  .  |  :  .  |  1. sequential:
[10:50:46.520] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.520] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.520] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.521] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.521] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.521] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.521] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.521] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.521] |  :  Launching futures ... done
[10:50:46.521] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.521] |  Using SequentialFutureBackend ... done
[10:50:46.522] run() for Future (‘SequentialFuture’) ... done
[10:50:46.522] Created future:
[10:50:46.522] SequentialFuture:
[10:50:46.522] Label: ‘future_mapply-1’
[10:50:46.522] Expression:
[10:50:46.522] {
[10:50:46.522]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.522]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.522]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.522]         on.exit(options(oopts), add = TRUE)
[10:50:46.522]     }
[10:50:46.522]     {
[10:50:46.522]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.522]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.522]         do.call(mapply, args = args)
[10:50:46.522]     }
[10:50:46.522] }
[10:50:46.522] Lazy evaluation: FALSE
[10:50:46.522] Asynchronous evaluation: TRUE
[10:50:46.522] Local evaluation: TRUE
[10:50:46.522] Environment: R_GlobalEnv
[10:50:46.522] Capture standard output: TRUE
[10:50:46.522] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.522] Immediate condition classes: ‘immediateCondition’
[10:50:46.522] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.522] Packages: <none>
[10:50:46.522] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.522] Resolved: TRUE
[10:50:46.522] Value: 52 bytes of class ‘list’
[10:50:46.522] Early signaling: FALSE
[10:50:46.522] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.522] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.523] Chunk #1 of 5 ... DONE
[10:50:46.523] Chunk #2 of 5 ...
[10:50:46.523]  - Finding globals in '...' for chunk #2 ...
[10:50:46.523] getGlobalsAndPackages() ...
[10:50:46.523] |  Searching for globals ...
[10:50:46.523] |  :  globals found: [0] 
[10:50:46.523] |  Searching for globals ... DONE
[10:50:46.523] |  globals: [0] <none>
[10:50:46.524] |  packages: [0] <none>
[10:50:46.524] getGlobalsAndPackages() ... done
[10:50:46.524]    + additional globals found: [n=0] 
[10:50:46.524]    + additional namespaces needed: [n=0] 
[10:50:46.524]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:46.524]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:46.524]  - seeds: <none>
[10:50:46.524]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.524] getGlobalsAndPackages() ...
[10:50:46.524] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.524] |  Resolving globals: FALSE
[10:50:46.525] |  Search for packages associated with the globals ...
[10:50:46.525] |  :  Packages associated with globals: [0] 
[10:50:46.525] |  :  Packages: [0] 
[10:50:46.525] |  Search for packages associated with the globals ... DONE
[10:50:46.525] |  Packages after dropping 'base': [0] 
[10:50:46.525] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.525] |  packages: [0] 
[10:50:46.526] getGlobalsAndPackages() ... done
[10:50:46.526] run() for Future (‘Future’) ...
[10:50:46.526] |  state: ‘created’
[10:50:46.526] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.526] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.526] |  Using SequentialFutureBackend ...
[10:50:46.526] |  :  Launching futures ...
[10:50:46.527] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.527] |  :  .  |  getFutureData() ...
[10:50:46.527] |  :  .  |  :  getFutureCore() ...
[10:50:46.527] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.528] |  :  .  |  :  getFutureCore() ... done
[10:50:46.528] |  :  .  |  :  getFutureCapture() ...
[10:50:46.528] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.528] |  :  .  |  :  getFutureContext() ...
[10:50:46.528] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.528] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.528] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.528] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.528] |  :  .  |  :  getFutureContext() ... done
[10:50:46.529] |  :  .  |  getFutureData() ... done
[10:50:46.529] |  :  .  |  attachPackages() ...
[10:50:46.529] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.529] |  :  .  |  attachPackages() ... DONE
[10:50:46.529] |  :  .  |  attachPackages() ...
[10:50:46.529] |  :  .  |  :  packages: [n=0] 
[10:50:46.529] |  :  .  |  attachPackages() ... DONE
[10:50:46.529] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.530] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.530] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.530] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.530] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.530] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.530] |  :  .  |  :  .  |  New stack:
[10:50:46.530] |  :  .  |  :  .  |  List of 1
[10:50:46.530] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.530] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.530] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.530] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.530] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.530] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.530] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.533] |  :  .  |  :  .  |  Old stack:
[10:50:46.533] |  :  .  |  :  .  |  List of 1
[10:50:46.533] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.533] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.533] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.533] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.533] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.533] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.533] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.533] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.533] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.533] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.535] |  :  .  |  :  .  |  Not identical
[10:50:46.536] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.536] |  :  .  |  :  .  |  :  List of 2
[10:50:46.536] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.536] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.536] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.536] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.536] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.536] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.536] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.540] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.540] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.540] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.540] |  :  .  |  :  .  List of future strategies:
[10:50:46.540] |  :  .  |  :  .  1. sequential:
[10:50:46.540] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.540] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.540] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.541] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.541] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.541] |  :  .  |  assign_globals() ...
[10:50:46.541] |  :  .  |  List of 5
[10:50:46.541] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.541] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.541] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.541] |  :  .  |    ..$ :List of 1
[10:50:46.541] |  :  .  |    .. ..$ : chr "B"
[10:50:46.541] |  :  .  |    ..$ :List of 1
[10:50:46.541] |  :  .  |    .. ..$ : int 4
[10:50:46.541] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.541] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.541] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.541] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.541] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.541] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.541] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.541] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.541] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.541] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.541] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.541] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.547] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.547] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.547] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.547] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.547] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.547] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.548] |  :  .  |  assign_globals() ... done
[10:50:46.549] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.549] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.549] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.549] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.549] |  :  .  |  :  .  |  :  New stack:
[10:50:46.549] |  :  .  |  :  .  |  :  List of 1
[10:50:46.549] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.549] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.549] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.549] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.549] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.549] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.549] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.549] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.549] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.549] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.552] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.552] |  :  .  |  :  .  |  :  List of 1
[10:50:46.552] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.552] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.552] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.552] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.552] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.552] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.552] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.552] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.555] |  :  .  |  :  .  |  :  Identical
[10:50:46.555] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.555] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.555] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.555] |  :  .  |  :  .  |  1. sequential:
[10:50:46.555] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.555] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.555] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.556] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.556] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.556] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.556] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.556] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.556] |  :  Launching futures ... done
[10:50:46.557] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.557] |  Using SequentialFutureBackend ... done
[10:50:46.557] run() for Future (‘SequentialFuture’) ... done
[10:50:46.557] Created future:
[10:50:46.557] SequentialFuture:
[10:50:46.557] Label: ‘future_mapply-2’
[10:50:46.557] Expression:
[10:50:46.557] {
[10:50:46.557]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.557]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.557]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.557]         on.exit(options(oopts), add = TRUE)
[10:50:46.557]     }
[10:50:46.557]     {
[10:50:46.557]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.557]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.557]         do.call(mapply, args = args)
[10:50:46.557]     }
[10:50:46.557] }
[10:50:46.557] Lazy evaluation: FALSE
[10:50:46.557] Asynchronous evaluation: TRUE
[10:50:46.557] Local evaluation: TRUE
[10:50:46.557] Environment: R_GlobalEnv
[10:50:46.557] Capture standard output: TRUE
[10:50:46.557] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.557] Immediate condition classes: ‘immediateCondition’
[10:50:46.557] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.557] Packages: <none>
[10:50:46.557] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.557] Resolved: TRUE
[10:50:46.557] Value: 51 bytes of class ‘list’
[10:50:46.557] Early signaling: FALSE
[10:50:46.557] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.557] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.558] Chunk #2 of 5 ... DONE
[10:50:46.558] Chunk #3 of 5 ...
[10:50:46.558]  - Finding globals in '...' for chunk #3 ...
[10:50:46.558] getGlobalsAndPackages() ...
[10:50:46.558] |  Searching for globals ...
[10:50:46.558] |  :  globals found: [0] 
[10:50:46.558] |  Searching for globals ... DONE
[10:50:46.559] |  globals: [0] <none>
[10:50:46.559] |  packages: [0] <none>
[10:50:46.559] getGlobalsAndPackages() ... done
[10:50:46.559]    + additional globals found: [n=0] 
[10:50:46.559]    + additional namespaces needed: [n=0] 
[10:50:46.559]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:46.559]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:46.559]  - seeds: <none>
[10:50:46.559]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.559] getGlobalsAndPackages() ...
[10:50:46.559] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.559] |  Resolving globals: FALSE
[10:50:46.560] |  Search for packages associated with the globals ...
[10:50:46.560] |  :  Packages associated with globals: [0] 
[10:50:46.560] |  :  Packages: [0] 
[10:50:46.560] |  Search for packages associated with the globals ... DONE
[10:50:46.560] |  Packages after dropping 'base': [0] 
[10:50:46.560] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.560] |  packages: [0] 
[10:50:46.561] getGlobalsAndPackages() ... done
[10:50:46.561] run() for Future (‘Future’) ...
[10:50:46.561] |  state: ‘created’
[10:50:46.561] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.561] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.561] |  Using SequentialFutureBackend ...
[10:50:46.561] |  :  Launching futures ...
[10:50:46.561] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.561] |  :  .  |  getFutureData() ...
[10:50:46.562] |  :  .  |  :  getFutureCore() ...
[10:50:46.562] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.562] |  :  .  |  :  getFutureCore() ... done
[10:50:46.562] |  :  .  |  :  getFutureCapture() ...
[10:50:46.562] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.562] |  :  .  |  :  getFutureContext() ...
[10:50:46.562] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.562] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.562] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.562] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.563] |  :  .  |  :  getFutureContext() ... done
[10:50:46.563] |  :  .  |  getFutureData() ... done
[10:50:46.564] |  :  .  |  attachPackages() ...
[10:50:46.564] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.564] |  :  .  |  attachPackages() ... DONE
[10:50:46.564] |  :  .  |  attachPackages() ...
[10:50:46.564] |  :  .  |  :  packages: [n=0] 
[10:50:46.564] |  :  .  |  attachPackages() ... DONE
[10:50:46.564] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.565] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.565] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.565] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.565] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.565] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.565] |  :  .  |  :  .  |  New stack:
[10:50:46.565] |  :  .  |  :  .  |  List of 1
[10:50:46.565] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.565] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.565] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.565] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.565] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.565] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.565] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.568] |  :  .  |  :  .  |  Old stack:
[10:50:46.568] |  :  .  |  :  .  |  List of 1
[10:50:46.568] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.568] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.568] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.568] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.568] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.568] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.568] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.568] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.568] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.568] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.570] |  :  .  |  :  .  |  Not identical
[10:50:46.571] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.571] |  :  .  |  :  .  |  :  List of 2
[10:50:46.571] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.571] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.571] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.571] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.575] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.575] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.575] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.575] |  :  .  |  :  .  List of future strategies:
[10:50:46.575] |  :  .  |  :  .  1. sequential:
[10:50:46.575] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.575] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.575] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.576] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.576] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.576] |  :  .  |  assign_globals() ...
[10:50:46.576] |  :  .  |  List of 5
[10:50:46.576] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.576] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.576] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.576] |  :  .  |    ..$ :List of 1
[10:50:46.576] |  :  .  |    .. ..$ : chr "C"
[10:50:46.576] |  :  .  |    ..$ :List of 1
[10:50:46.576] |  :  .  |    .. ..$ : int 3
[10:50:46.576] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.576] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.576] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.576] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.576] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.576] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.576] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.576] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.576] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.576] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.576] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.576] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.582] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.582] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.582] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.582] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.582] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.582] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.583] |  :  .  |  assign_globals() ... done
[10:50:46.584] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.584] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.584] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.584] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.584] |  :  .  |  :  .  |  :  New stack:
[10:50:46.584] |  :  .  |  :  .  |  :  List of 1
[10:50:46.584] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.584] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.584] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.584] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.584] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.584] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.587] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.587] |  :  .  |  :  .  |  :  List of 1
[10:50:46.587] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.587] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.587] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.587] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.587] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.587] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.587] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.587] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.587] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.587] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.590] |  :  .  |  :  .  |  :  Identical
[10:50:46.590] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.590] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.590] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.590] |  :  .  |  :  .  |  1. sequential:
[10:50:46.590] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.590] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.590] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.591] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.591] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.591] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.591] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.591] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.591] |  :  Launching futures ... done
[10:50:46.592] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.592] |  Using SequentialFutureBackend ... done
[10:50:46.592] run() for Future (‘SequentialFuture’) ... done
[10:50:46.592] Created future:
[10:50:46.592] SequentialFuture:
[10:50:46.592] Label: ‘future_mapply-3’
[10:50:46.592] Expression:
[10:50:46.592] {
[10:50:46.592]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.592]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.592]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.592]         on.exit(options(oopts), add = TRUE)
[10:50:46.592]     }
[10:50:46.592]     {
[10:50:46.592]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.592]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.592]         do.call(mapply, args = args)
[10:50:46.592]     }
[10:50:46.592] }
[10:50:46.592] Lazy evaluation: FALSE
[10:50:46.592] Asynchronous evaluation: TRUE
[10:50:46.592] Local evaluation: TRUE
[10:50:46.592] Environment: R_GlobalEnv
[10:50:46.592] Capture standard output: TRUE
[10:50:46.592] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.592] Immediate condition classes: ‘immediateCondition’
[10:50:46.592] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.592] Packages: <none>
[10:50:46.592] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.592] Resolved: TRUE
[10:50:46.592] Value: 50 bytes of class ‘list’
[10:50:46.592] Early signaling: FALSE
[10:50:46.592] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.592] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.593] Chunk #3 of 5 ... DONE
[10:50:46.593] Chunk #4 of 5 ...
[10:50:46.593]  - Finding globals in '...' for chunk #4 ...
[10:50:46.593] getGlobalsAndPackages() ...
[10:50:46.593] |  Searching for globals ...
[10:50:46.593] |  :  globals found: [0] 
[10:50:46.593] |  Searching for globals ... DONE
[10:50:46.594] |  globals: [0] <none>
[10:50:46.594] |  packages: [0] <none>
[10:50:46.594] getGlobalsAndPackages() ... done
[10:50:46.594]    + additional globals found: [n=0] 
[10:50:46.594]    + additional namespaces needed: [n=0] 
[10:50:46.594]  - Finding globals in '...' for chunk #4 ... DONE
[10:50:46.594]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:46.594]  - seeds: <none>
[10:50:46.594]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.594] getGlobalsAndPackages() ...
[10:50:46.594] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.595] |  Resolving globals: FALSE
[10:50:46.595] |  Search for packages associated with the globals ...
[10:50:46.595] |  :  Packages associated with globals: [0] 
[10:50:46.595] |  :  Packages: [0] 
[10:50:46.595] |  Search for packages associated with the globals ... DONE
[10:50:46.595] |  Packages after dropping 'base': [0] 
[10:50:46.595] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.595] |  packages: [0] 
[10:50:46.596] getGlobalsAndPackages() ... done
[10:50:46.596] run() for Future (‘Future’) ...
[10:50:46.596] |  state: ‘created’
[10:50:46.596] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.596] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.596] |  Using SequentialFutureBackend ...
[10:50:46.596] |  :  Launching futures ...
[10:50:46.596] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.596] |  :  .  |  getFutureData() ...
[10:50:46.597] |  :  .  |  :  getFutureCore() ...
[10:50:46.597] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.597] |  :  .  |  :  getFutureCore() ... done
[10:50:46.597] |  :  .  |  :  getFutureCapture() ...
[10:50:46.597] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.597] |  :  .  |  :  getFutureContext() ...
[10:50:46.597] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.597] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.597] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.597] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.597] |  :  .  |  :  getFutureContext() ... done
[10:50:46.598] |  :  .  |  getFutureData() ... done
[10:50:46.598] |  :  .  |  attachPackages() ...
[10:50:46.598] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.598] |  :  .  |  attachPackages() ... DONE
[10:50:46.598] |  :  .  |  attachPackages() ...
[10:50:46.598] |  :  .  |  :  packages: [n=0] 
[10:50:46.598] |  :  .  |  attachPackages() ... DONE
[10:50:46.599] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.599] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.599] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.600] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.600] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.600] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.600] |  :  .  |  :  .  |  New stack:
[10:50:46.600] |  :  .  |  :  .  |  List of 1
[10:50:46.600] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.600] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.600] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.600] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.600] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.600] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.600] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.602] |  :  .  |  :  .  |  Old stack:
[10:50:46.603] |  :  .  |  :  .  |  List of 1
[10:50:46.603] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.603] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.603] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.603] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.603] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.603] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.603] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.603] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.603] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.603] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.605] |  :  .  |  :  .  |  Not identical
[10:50:46.605] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.605] |  :  .  |  :  .  |  :  List of 2
[10:50:46.605] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.605] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.605] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.605] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.605] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.605] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.605] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.610] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.610] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.610] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.610] |  :  .  |  :  .  List of future strategies:
[10:50:46.610] |  :  .  |  :  .  1. sequential:
[10:50:46.610] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.610] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.610] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.611] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.611] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.611] |  :  .  |  assign_globals() ...
[10:50:46.611] |  :  .  |  List of 5
[10:50:46.611] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.611] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.611] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.611] |  :  .  |    ..$ :List of 1
[10:50:46.611] |  :  .  |    .. ..$ : chr "D"
[10:50:46.611] |  :  .  |    ..$ :List of 1
[10:50:46.611] |  :  .  |    .. ..$ : int 2
[10:50:46.611] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.611] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.611] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.611] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.611] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.611] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.611] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.611] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.611] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.611] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.611] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.611] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.617] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.617] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.617] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.617] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.617] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.617] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.617] |  :  .  |  assign_globals() ... done
[10:50:46.619] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.619] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.619] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.619] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.619] |  :  .  |  :  .  |  :  New stack:
[10:50:46.619] |  :  .  |  :  .  |  :  List of 1
[10:50:46.619] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.619] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.619] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.619] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.619] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.619] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.619] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.619] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.619] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.619] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.622] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.622] |  :  .  |  :  .  |  :  List of 1
[10:50:46.622] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.622] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.622] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.622] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.622] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.622] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.622] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.622] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.622] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.622] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.625] |  :  .  |  :  .  |  :  Identical
[10:50:46.625] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.625] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.625] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.625] |  :  .  |  :  .  |  1. sequential:
[10:50:46.625] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.625] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.625] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.626] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.626] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.626] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.626] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.626] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.627] |  :  Launching futures ... done
[10:50:46.627] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.627] |  Using SequentialFutureBackend ... done
[10:50:46.627] run() for Future (‘SequentialFuture’) ... done
[10:50:46.627] Created future:
[10:50:46.627] SequentialFuture:
[10:50:46.627] Label: ‘future_mapply-4’
[10:50:46.627] Expression:
[10:50:46.627] {
[10:50:46.627]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.627]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.627]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.627]         on.exit(options(oopts), add = TRUE)
[10:50:46.627]     }
[10:50:46.627]     {
[10:50:46.627]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.627]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.627]         do.call(mapply, args = args)
[10:50:46.627]     }
[10:50:46.627] }
[10:50:46.627] Lazy evaluation: FALSE
[10:50:46.627] Asynchronous evaluation: TRUE
[10:50:46.627] Local evaluation: TRUE
[10:50:46.627] Environment: R_GlobalEnv
[10:50:46.627] Capture standard output: TRUE
[10:50:46.627] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.627] Immediate condition classes: ‘immediateCondition’
[10:50:46.627] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.627] Packages: <none>
[10:50:46.627] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.627] Resolved: TRUE
[10:50:46.627] Value: 49 bytes of class ‘list’
[10:50:46.627] Early signaling: FALSE
[10:50:46.627] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.627] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.628] Chunk #4 of 5 ... DONE
[10:50:46.628] Chunk #5 of 5 ...
[10:50:46.628]  - Finding globals in '...' for chunk #5 ...
[10:50:46.628] getGlobalsAndPackages() ...
[10:50:46.628] |  Searching for globals ...
[10:50:46.628] |  :  globals found: [0] 
[10:50:46.629] |  Searching for globals ... DONE
[10:50:46.629] |  globals: [0] <none>
[10:50:46.629] |  packages: [0] <none>
[10:50:46.629] getGlobalsAndPackages() ... done
[10:50:46.629]    + additional globals found: [n=0] 
[10:50:46.629]    + additional namespaces needed: [n=0] 
[10:50:46.629]  - Finding globals in '...' for chunk #5 ... DONE
[10:50:46.629]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:46.629]  - seeds: <none>
[10:50:46.629]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.629] getGlobalsAndPackages() ...
[10:50:46.629] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.630] |  Resolving globals: FALSE
[10:50:46.630] |  Search for packages associated with the globals ...
[10:50:46.630] |  :  Packages associated with globals: [0] 
[10:50:46.630] |  :  Packages: [0] 
[10:50:46.630] |  Search for packages associated with the globals ... DONE
[10:50:46.630] |  Packages after dropping 'base': [0] 
[10:50:46.630] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.631] |  packages: [0] 
[10:50:46.631] getGlobalsAndPackages() ... done
[10:50:46.631] run() for Future (‘Future’) ...
[10:50:46.631] |  state: ‘created’
[10:50:46.631] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.631] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.631] |  Using SequentialFutureBackend ...
[10:50:46.631] |  :  Launching futures ...
[10:50:46.632] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.632] |  :  .  |  getFutureData() ...
[10:50:46.632] |  :  .  |  :  getFutureCore() ...
[10:50:46.632] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.632] |  :  .  |  :  getFutureCore() ... done
[10:50:46.632] |  :  .  |  :  getFutureCapture() ...
[10:50:46.632] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.632] |  :  .  |  :  getFutureContext() ...
[10:50:46.632] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.632] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.633] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.633] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.633] |  :  .  |  :  getFutureContext() ... done
[10:50:46.633] |  :  .  |  getFutureData() ... done
[10:50:46.633] |  :  .  |  attachPackages() ...
[10:50:46.633] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.633] |  :  .  |  attachPackages() ... DONE
[10:50:46.633] |  :  .  |  attachPackages() ...
[10:50:46.633] |  :  .  |  :  packages: [n=0] 
[10:50:46.633] |  :  .  |  attachPackages() ... DONE
[10:50:46.634] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.634] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.634] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.634] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.634] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.635] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.635] |  :  .  |  :  .  |  New stack:
[10:50:46.636] |  :  .  |  :  .  |  List of 1
[10:50:46.636] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.636] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.636] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.636] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.636] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.636] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.636] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.638] |  :  .  |  :  .  |  Old stack:
[10:50:46.638] |  :  .  |  :  .  |  List of 1
[10:50:46.638] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.638] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.638] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.638] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.638] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.638] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.638] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.638] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.638] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.638] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.641] |  :  .  |  :  .  |  Not identical
[10:50:46.641] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.641] |  :  .  |  :  .  |  :  List of 2
[10:50:46.641] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.641] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.641] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.641] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.641] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.641] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.641] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.646] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.646] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.646] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.646] |  :  .  |  :  .  List of future strategies:
[10:50:46.646] |  :  .  |  :  .  1. sequential:
[10:50:46.646] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.646] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.646] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.646] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.646] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.647] |  :  .  |  assign_globals() ...
[10:50:46.647] |  :  .  |  List of 5
[10:50:46.647] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.647] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.647] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.647] |  :  .  |    ..$ :List of 1
[10:50:46.647] |  :  .  |    .. ..$ : chr "E"
[10:50:46.647] |  :  .  |    ..$ :List of 1
[10:50:46.647] |  :  .  |    .. ..$ : int 1
[10:50:46.647] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.647] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.647] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.647] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.647] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.647] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.647] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.647] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.647] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.647] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.647] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.647] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.652] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.652] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.652] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.652] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.652] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.653] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.653] |  :  .  |  assign_globals() ... done
[10:50:46.655] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.655] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.655] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.655] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.655] |  :  .  |  :  .  |  :  New stack:
[10:50:46.655] |  :  .  |  :  .  |  :  List of 1
[10:50:46.655] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.655] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.655] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.655] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.655] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.655] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.655] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.655] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.655] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.655] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.658] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.658] |  :  .  |  :  .  |  :  List of 1
[10:50:46.658] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.658] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.658] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.658] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.658] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.658] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.658] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.658] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.658] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.658] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.661] |  :  .  |  :  .  |  :  Identical
[10:50:46.661] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.661] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.661] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.661] |  :  .  |  :  .  |  1. sequential:
[10:50:46.661] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.661] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.661] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.662] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.662] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.662] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.662] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.662] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.662] |  :  Launching futures ... done
[10:50:46.662] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.662] |  Using SequentialFutureBackend ... done
[10:50:46.663] run() for Future (‘SequentialFuture’) ... done
[10:50:46.663] Created future:
[10:50:46.663] SequentialFuture:
[10:50:46.663] Label: ‘future_mapply-5’
[10:50:46.663] Expression:
[10:50:46.663] {
[10:50:46.663]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.663]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.663]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.663]         on.exit(options(oopts), add = TRUE)
[10:50:46.663]     }
[10:50:46.663]     {
[10:50:46.663]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.663]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.663]         do.call(mapply, args = args)
[10:50:46.663]     }
[10:50:46.663] }
[10:50:46.663] Lazy evaluation: FALSE
[10:50:46.663] Asynchronous evaluation: TRUE
[10:50:46.663] Local evaluation: TRUE
[10:50:46.663] Environment: R_GlobalEnv
[10:50:46.663] Capture standard output: TRUE
[10:50:46.663] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.663] Immediate condition classes: ‘immediateCondition’
[10:50:46.663] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.663] Packages: <none>
[10:50:46.663] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.663] Resolved: TRUE
[10:50:46.663] Value: 48 bytes of class ‘list’
[10:50:46.663] Early signaling: FALSE
[10:50:46.663] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.663] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.663] Chunk #5 of 5 ... DONE
[10:50:46.664] Launching 5 futures (chunks) ... DONE
[10:50:46.664] Resolving 5 futures (chunks) ...
[10:50:46.664] value() on list ...
[10:50:46.664] |  recursive: 0
[10:50:46.664] |  length: 5
[10:50:46.664] |  
[10:50:46.664] |  Number of remaining objects: 5
[10:50:46.664] |  checking value #1 ...
[10:50:46.664] |  :  'obj' is SequentialFuture
[10:50:46.664] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.664] |  :  .  state: ‘finished’
[10:50:46.665] |  :  .  run: TRUE
[10:50:46.665] |  :  .  result: ‘FutureResult’
[10:50:46.665] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.665] |  :  SequentialFuture #1
[10:50:46.665] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.665] |  :  .  nx: 5
[10:50:46.665] |  :  .  relay: TRUE
[10:50:46.665] |  :  .  stdout: TRUE
[10:50:46.665] |  :  .  signal: TRUE
[10:50:46.665] |  :  .  resignal: FALSE
[10:50:46.665] |  :  .  force: TRUE
[10:50:46.665] |  :  .  relayed: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:46.666] |  :  .  queued futures: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:46.666] |  :  .  until=1
[10:50:46.666] |  :  .  relaying element #1
[10:50:46.666] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.666] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.666] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.666] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.666] |  :  .  value: <list>
[10:50:46.666] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.667] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.667] |  :  .  nx: 5
[10:50:46.667] |  :  .  relay: TRUE
[10:50:46.667] |  :  .  stdout: TRUE
[10:50:46.667] |  :  .  signal: TRUE
[10:50:46.667] |  :  .  resignal: FALSE
[10:50:46.667] |  :  .  force: TRUE
[10:50:46.667] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.667] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.667] |  :  .  until=2
[10:50:46.667] |  :  .  relaying element #2
[10:50:46.667] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.668] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.668] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:46.668] |  :  length: 4 (resolved future 1)
[10:50:46.668] |  checking value #1 ... done
[10:50:46.668] |  checking value #2 ...
[10:50:46.668] |  :  'obj' is SequentialFuture
[10:50:46.668] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.668] |  :  .  state: ‘finished’
[10:50:46.668] |  :  .  run: TRUE
[10:50:46.668] |  :  .  result: ‘FutureResult’
[10:50:46.668] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.669] |  :  SequentialFuture #2
[10:50:46.669] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:46.669] |  :  .  nx: 5
[10:50:46.669] |  :  .  relay: TRUE
[10:50:46.669] |  :  .  stdout: TRUE
[10:50:46.669] |  :  .  signal: TRUE
[10:50:46.669] |  :  .  resignal: FALSE
[10:50:46.669] |  :  .  force: TRUE
[10:50:46.669] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.669] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:46.669] |  :  .  until=2
[10:50:46.669] |  :  .  relaying element #2
[10:50:46.670] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.670] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.670] |  :  signalConditionsASAP(SequentialFuture, pos=2) ... done
[10:50:46.670] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.670] |  :  .  value: <list>
[10:50:46.671] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.671] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:46.671] |  :  .  nx: 5
[10:50:46.671] |  :  .  relay: TRUE
[10:50:46.671] |  :  .  stdout: TRUE
[10:50:46.671] |  :  .  signal: TRUE
[10:50:46.671] |  :  .  resignal: FALSE
[10:50:46.672] |  :  .  force: TRUE
[10:50:46.672] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.672] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.672] |  :  .  until=3
[10:50:46.672] |  :  .  relaying element #3
[10:50:46.672] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.672] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.672] |  :  signalConditionsASAP(NULL, pos=2) ... done
[10:50:46.672] |  :  length: 3 (resolved future 2)
[10:50:46.672] |  checking value #2 ... done
[10:50:46.672] |  checking value #3 ...
[10:50:46.673] |  :  'obj' is SequentialFuture
[10:50:46.673] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.673] |  :  .  state: ‘finished’
[10:50:46.673] |  :  .  run: TRUE
[10:50:46.673] |  :  .  result: ‘FutureResult’
[10:50:46.673] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.673] |  :  SequentialFuture #3
[10:50:46.673] |  :  signalConditionsASAP(SequentialFuture, pos=3) ...
[10:50:46.673] |  :  .  nx: 5
[10:50:46.673] |  :  .  relay: TRUE
[10:50:46.673] |  :  .  stdout: TRUE
[10:50:46.673] |  :  .  signal: TRUE
[10:50:46.674] |  :  .  resignal: FALSE
[10:50:46.674] |  :  .  force: TRUE
[10:50:46.674] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.674] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:46.674] |  :  .  until=3
[10:50:46.674] |  :  .  relaying element #3
[10:50:46.674] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.674] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.674] |  :  signalConditionsASAP(SequentialFuture, pos=3) ... done
[10:50:46.674] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.675] |  :  .  value: <list>
[10:50:46.675] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.675] |  :  signalConditionsASAP(SequentialFuture, pos=3) ...
[10:50:46.675] |  :  .  nx: 5
[10:50:46.675] |  :  .  relay: TRUE
[10:50:46.675] |  :  .  stdout: TRUE
[10:50:46.675] |  :  .  signal: TRUE
[10:50:46.675] |  :  .  resignal: FALSE
[10:50:46.675] |  :  .  force: TRUE
[10:50:46.675] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.675] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.675] |  :  .  until=4
[10:50:46.676] |  :  .  relaying element #4
[10:50:46.676] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.676] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.676] |  :  signalConditionsASAP(NULL, pos=3) ... done
[10:50:46.676] |  :  length: 2 (resolved future 3)
[10:50:46.676] |  checking value #3 ... done
[10:50:46.676] |  checking value #4 ...
[10:50:46.676] |  :  'obj' is SequentialFuture
[10:50:46.676] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.676] |  :  .  state: ‘finished’
[10:50:46.676] |  :  .  run: TRUE
[10:50:46.677] |  :  .  result: ‘FutureResult’
[10:50:46.677] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.677] |  :  SequentialFuture #4
[10:50:46.677] |  :  signalConditionsASAP(SequentialFuture, pos=4) ...
[10:50:46.677] |  :  .  nx: 5
[10:50:46.677] |  :  .  relay: TRUE
[10:50:46.677] |  :  .  stdout: TRUE
[10:50:46.677] |  :  .  signal: TRUE
[10:50:46.677] |  :  .  resignal: FALSE
[10:50:46.677] |  :  .  force: TRUE
[10:50:46.677] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.677] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:46.677] |  :  .  until=4
[10:50:46.678] |  :  .  relaying element #4
[10:50:46.678] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.678] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.678] |  :  signalConditionsASAP(SequentialFuture, pos=4) ... done
[10:50:46.678] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.678] |  :  .  value: <list>
[10:50:46.678] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.678] |  :  signalConditionsASAP(SequentialFuture, pos=4) ...
[10:50:46.678] |  :  .  nx: 5
[10:50:46.678] |  :  .  relay: TRUE
[10:50:46.679] |  :  .  stdout: TRUE
[10:50:46.679] |  :  .  signal: TRUE
[10:50:46.679] |  :  .  resignal: FALSE
[10:50:46.679] |  :  .  force: TRUE
[10:50:46.679] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.679] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.679] |  :  .  until=5
[10:50:46.679] |  :  .  relaying element #5
[10:50:46.679] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.679] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.679] |  :  signalConditionsASAP(NULL, pos=4) ... done
[10:50:46.679] |  :  length: 1 (resolved future 4)
[10:50:46.680] |  checking value #4 ... done
[10:50:46.680] |  checking value #5 ...
[10:50:46.680] |  :  'obj' is SequentialFuture
[10:50:46.680] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.680] |  :  .  state: ‘finished’
[10:50:46.680] |  :  .  run: TRUE
[10:50:46.680] |  :  .  result: ‘FutureResult’
[10:50:46.680] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.680] |  :  SequentialFuture #5
[10:50:46.680] |  :  signalConditionsASAP(SequentialFuture, pos=5) ...
[10:50:46.680] |  :  .  nx: 5
[10:50:46.681] |  :  .  relay: TRUE
[10:50:46.681] |  :  .  stdout: TRUE
[10:50:46.681] |  :  .  signal: TRUE
[10:50:46.681] |  :  .  resignal: FALSE
[10:50:46.681] |  :  .  force: TRUE
[10:50:46.681] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.681] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:46.681] |  :  .  until=5
[10:50:46.681] |  :  .  relaying element #5
[10:50:46.681] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.681] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.682] |  :  signalConditionsASAP(SequentialFuture, pos=5) ... done
[10:50:46.682] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.682] |  :  .  value: <list>
[10:50:46.682] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.682] |  :  signalConditionsASAP(SequentialFuture, pos=5) ...
[10:50:46.682] |  :  .  nx: 5
[10:50:46.682] |  :  .  relay: TRUE
[10:50:46.682] |  :  .  stdout: TRUE
[10:50:46.682] |  :  .  signal: TRUE
[10:50:46.682] |  :  .  resignal: FALSE
[10:50:46.682] |  :  .  force: TRUE
[10:50:46.682] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.683] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.683] |  :  .  until=5
[10:50:46.683] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.683] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.683] |  :  signalConditionsASAP(SequentialFuture, pos=5) ... done
[10:50:46.683] |  :  length: 0 (resolved future 5)
[10:50:46.683] |  checking value #5 ... done
[10:50:46.683] |  Relaying remaining futures ...
[10:50:46.683] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.683] |  :  .  nx: 5
[10:50:46.683] |  :  .  relay: TRUE
[10:50:46.684] |  :  .  stdout: TRUE
[10:50:46.684] |  :  .  signal: TRUE
[10:50:46.684] |  :  .  resignal: FALSE
[10:50:46.684] |  :  .  force: TRUE
[10:50:46.684] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.684] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
 - flush all
[10:50:46.684] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.684] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:46.684] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.684] |  Relaying remaining futures ... done
[10:50:46.684] value() on list ... done
[10:50:46.684]  - Number of value chunks collected: 5
[10:50:46.685] Resolving 5 futures (chunks) ... DONE
[10:50:46.685] Reducing values from 5 chunks ...
[10:50:46.685]  - Number of values collected after concatenation: 5
[10:50:46.685]  - Number of values expected: 5
[10:50:46.685] Reducing values from 5 chunks ... DONE
[10:50:46.685] future_mapply() ... DONE
[10:50:46.685] future_mapply() ...
[10:50:46.685] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.685] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.686] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.686] Number of chunks: 1
[10:50:46.686] getGlobalsAndPackagesXApply() ...
[10:50:46.686]  - future.globals: TRUE
[10:50:46.686] getGlobalsAndPackages() ...
[10:50:46.686] |  Searching for globals ...
[10:50:46.688] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:46.688] |  Searching for globals ... DONE
[10:50:46.688] |  Resolving globals: FALSE
[10:50:46.689] |  Search for packages associated with the globals ...
[10:50:46.689] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.689] |  :  Packages: [1] ‘base’
[10:50:46.689] |  Search for packages associated with the globals ... DONE
[10:50:46.689] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:46.690] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:46.690] |  Packages after dropping 'base': [0] 
[10:50:46.690] |  globals: [1] ‘FUN’
[10:50:46.690] |  packages: [0] 
[10:50:46.690] getGlobalsAndPackages() ... done
[10:50:46.690]  - globals found/used: [n=1] ‘FUN’
[10:50:46.690]  - needed namespaces: [n=0] 
[10:50:46.690] Finding globals ... DONE
[10:50:46.691] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.691] List of 2
[10:50:46.691]  $ ...future.FUN:function (C, k)  
[10:50:46.691]  $ MoreArgs     : list()
[10:50:46.691]  - attr(*, "where")=List of 2
[10:50:46.691]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.691]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.691]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.691]  - attr(*, "resolved")= logi FALSE
[10:50:46.691]  - attr(*, "total_size")= num NA
[10:50:46.693] Packages to be attached in all futures: [n=0] 
[10:50:46.693] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.693] Number of futures (= number of chunks): 1
[10:50:46.693] Launching 1 futures (chunks) ...
[10:50:46.694] Chunk #1 of 1 ...
[10:50:46.694]  - Finding globals in '...' for chunk #1 ...
[10:50:46.694] getGlobalsAndPackages() ...
[10:50:46.694] |  Searching for globals ...
[10:50:46.694] |  :  globals found: [0] 
[10:50:46.694] |  Searching for globals ... DONE
[10:50:46.694] |  globals: [0] <none>
[10:50:46.694] |  packages: [0] <none>
[10:50:46.695] getGlobalsAndPackages() ... done
[10:50:46.695]    + additional globals found: [n=0] 
[10:50:46.695]    + additional namespaces needed: [n=0] 
[10:50:46.695]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.695]  - seeds: <none>
[10:50:46.695]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.695] getGlobalsAndPackages() ...
[10:50:46.695] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.695] |  Resolving globals: FALSE
[10:50:46.695] |  Search for packages associated with the globals ...
[10:50:46.696] |  :  Packages associated with globals: [0] 
[10:50:46.696] |  :  Packages: [0] 
[10:50:46.696] |  Search for packages associated with the globals ... DONE
[10:50:46.696] |  Packages after dropping 'base': [0] 
[10:50:46.696] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.696] |  packages: [0] 
[10:50:46.696] getGlobalsAndPackages() ... done
[10:50:46.697] run() for Future (‘Future’) ...
[10:50:46.697] |  state: ‘created’
[10:50:46.697] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.697] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.697] |  Using SequentialFutureBackend ...
[10:50:46.697] |  :  Launching futures ...
[10:50:46.697] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.697] |  :  .  |  getFutureData() ...
[10:50:46.697] |  :  .  |  :  getFutureCore() ...
[10:50:46.697] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.698] |  :  .  |  :  getFutureCore() ... done
[10:50:46.698] |  :  .  |  :  getFutureCapture() ...
[10:50:46.698] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.698] |  :  .  |  :  getFutureContext() ...
[10:50:46.698] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.698] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.698] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.698] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.698] |  :  .  |  :  getFutureContext() ... done
[10:50:46.698] |  :  .  |  getFutureData() ... done
[10:50:46.699] |  :  .  |  attachPackages() ...
[10:50:46.699] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.699] |  :  .  |  attachPackages() ... DONE
[10:50:46.699] |  :  .  |  attachPackages() ...
[10:50:46.699] |  :  .  |  :  packages: [n=0] 
[10:50:46.699] |  :  .  |  attachPackages() ... DONE
[10:50:46.699] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.699] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.700] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.700] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.700] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.700] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.700] |  :  .  |  :  .  |  New stack:
[10:50:46.700] |  :  .  |  :  .  |  List of 1
[10:50:46.700] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.700] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.700] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.700] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.700] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.700] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.700] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.703] |  :  .  |  :  .  |  Old stack:
[10:50:46.703] |  :  .  |  :  .  |  List of 1
[10:50:46.703] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.703] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.703] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.703] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.703] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.703] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.703] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.703] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.703] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.703] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.706] |  :  .  |  :  .  |  Not identical
[10:50:46.707] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.708] |  :  .  |  :  .  |  :  List of 2
[10:50:46.708] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.708] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.708] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.708] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.708] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.708] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.708] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.712] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.712] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.713] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.713] |  :  .  |  :  .  List of future strategies:
[10:50:46.713] |  :  .  |  :  .  1. sequential:
[10:50:46.713] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.713] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.713] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.713] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.713] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.713] |  :  .  |  assign_globals() ...
[10:50:46.713] |  :  .  |  List of 5
[10:50:46.713] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.713] |  :  .  |   $ MoreArgs                 : list()
[10:50:46.713] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.713] |  :  .  |    ..$ :List of 5
[10:50:46.713] |  :  .  |    .. ..$ : chr "A"
[10:50:46.713] |  :  .  |    .. ..$ : chr "B"
[10:50:46.713] |  :  .  |    .. ..$ : chr "C"
[10:50:46.713] |  :  .  |    .. ..$ : chr "D"
[10:50:46.713] |  :  .  |    .. ..$ : chr "E"
[10:50:46.713] |  :  .  |    ..$ :List of 5
[10:50:46.713] |  :  .  |    .. ..$ : int 5
[10:50:46.713] |  :  .  |    .. ..$ : int 4
[10:50:46.713] |  :  .  |    .. ..$ : int 3
[10:50:46.713] |  :  .  |    .. ..$ : int 2
[10:50:46.713] |  :  .  |    .. ..$ : int 1
[10:50:46.713] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.713] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.713] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.713] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.713] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.713] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.713] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.713] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.713] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.713] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.713] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.713] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.721] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.721] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.721] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.721] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.721] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.721] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.721] |  :  .  |  assign_globals() ... done
[10:50:46.724] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.724] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.724] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.724] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.724] |  :  .  |  :  .  |  :  New stack:
[10:50:46.724] |  :  .  |  :  .  |  :  List of 1
[10:50:46.724] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.724] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.724] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.724] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.724] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.724] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.724] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.724] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.724] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.724] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.728] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.728] |  :  .  |  :  .  |  :  List of 1
[10:50:46.728] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.728] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.728] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.728] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.728] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.728] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.728] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.728] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.728] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.728] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.731] |  :  .  |  :  .  |  :  Identical
[10:50:46.731] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.731] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.731] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.731] |  :  .  |  :  .  |  1. sequential:
[10:50:46.731] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.731] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.731] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.732] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.732] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.732] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.732] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.732] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.732] |  :  Launching futures ... done
[10:50:46.733] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.733] |  Using SequentialFutureBackend ... done
[10:50:46.733] run() for Future (‘SequentialFuture’) ... done
[10:50:46.733] Created future:
[10:50:46.733] SequentialFuture:
[10:50:46.733] Label: ‘future_.mapply-1’
[10:50:46.733] Expression:
[10:50:46.733] {
[10:50:46.733]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.733]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.733]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.733]         on.exit(options(oopts), add = TRUE)
[10:50:46.733]     }
[10:50:46.733]     {
[10:50:46.733]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.733]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.733]         do.call(mapply, args = args)
[10:50:46.733]     }
[10:50:46.733] }
[10:50:46.733] Lazy evaluation: FALSE
[10:50:46.733] Asynchronous evaluation: TRUE
[10:50:46.733] Local evaluation: TRUE
[10:50:46.733] Environment: R_GlobalEnv
[10:50:46.733] Capture standard output: TRUE
[10:50:46.733] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.733] Immediate condition classes: ‘immediateCondition’
[10:50:46.733] Globals: 5 objects totaling 967 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 192 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.733] Packages: <none>
[10:50:46.733] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.733] Resolved: TRUE
[10:50:46.733] Value: 126 bytes of class ‘list’
[10:50:46.733] Early signaling: FALSE
[10:50:46.733] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.733] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.734] Chunk #1 of 1 ... DONE
[10:50:46.734] Launching 1 futures (chunks) ... DONE
[10:50:46.734] Resolving 1 futures (chunks) ...
[10:50:46.734] value() on list ...
[10:50:46.734] |  recursive: 0
[10:50:46.734] |  length: 1
[10:50:46.734] |  
[10:50:46.734] |  Number of remaining objects: 1
[10:50:46.734] |  checking value #1 ...
[10:50:46.734] |  :  'obj' is SequentialFuture
[10:50:46.735] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.735] |  :  .  state: ‘finished’
[10:50:46.735] |  :  .  run: TRUE
[10:50:46.735] |  :  .  result: ‘FutureResult’
[10:50:46.735] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.735] |  :  SequentialFuture #1
[10:50:46.735] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.735] |  :  .  nx: 1
[10:50:46.735] |  :  .  relay: TRUE
[10:50:46.735] |  :  .  stdout: TRUE
[10:50:46.735] |  :  .  signal: TRUE
[10:50:46.736] |  :  .  resignal: FALSE
[10:50:46.736] |  :  .  force: TRUE
[10:50:46.736] |  :  .  relayed: [n=1] FALSE
[10:50:46.736] |  :  .  queued futures: [n=1] FALSE
[10:50:46.736] |  :  .  until=1
[10:50:46.736] |  :  .  relaying element #1
[10:50:46.736] |  :  .  relayed: [n=1] TRUE
[10:50:46.736] |  :  .  queued futures: [n=1] TRUE
[10:50:46.736] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.736] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.737] |  :  .  value: <list>
[10:50:46.737] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.737] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.737] |  :  .  nx: 1
[10:50:46.737] |  :  .  relay: TRUE
[10:50:46.737] |  :  .  stdout: TRUE
[10:50:46.737] |  :  .  signal: TRUE
[10:50:46.737] |  :  .  resignal: FALSE
[10:50:46.737] |  :  .  force: TRUE
[10:50:46.737] |  :  .  relayed: [n=1] TRUE
[10:50:46.737] |  :  .  queued futures: [n=1] TRUE
[10:50:46.737] |  :  .  until=1
[10:50:46.737] |  :  .  relayed: [n=1] TRUE
[10:50:46.738] |  :  .  queued futures: [n=1] TRUE
[10:50:46.738] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.738] |  :  length: 0 (resolved future 1)
[10:50:46.738] |  checking value #1 ... done
[10:50:46.738] |  Relaying remaining futures ...
[10:50:46.738] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.738] |  :  .  nx: 1
[10:50:46.738] |  :  .  relay: TRUE
[10:50:46.738] |  :  .  stdout: TRUE
[10:50:46.738] |  :  .  signal: TRUE
[10:50:46.738] |  :  .  resignal: FALSE
[10:50:46.739] |  :  .  force: TRUE
[10:50:46.739] |  :  .  relayed: [n=1] TRUE
[10:50:46.739] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.739] |  :  .  relayed: [n=1] TRUE
[10:50:46.739] |  :  .  queued futures: [n=1] TRUE
[10:50:46.739] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.739] |  Relaying remaining futures ... done
[10:50:46.739] value() on list ... done
[10:50:46.739]  - Number of value chunks collected: 1
[10:50:46.739] Resolving 1 futures (chunks) ... DONE
[10:50:46.739] Reducing values from 1 chunks ...
[10:50:46.739]  - Number of values collected after concatenation: 5
[10:50:46.740]  - Number of values expected: 5
[10:50:46.740] Reducing values from 1 chunks ... DONE
[10:50:46.740] future_mapply() ... DONE
[10:50:46.740] future_mapply() ...
[10:50:46.740] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.740] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.740] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.741] Number of chunks: 3
[10:50:46.741] Index remapping (attribute 'ordering'): [n = 5] 4, 3, 5, 2, 1
[10:50:46.741] getGlobalsAndPackagesXApply() ...
[10:50:46.741]  - future.globals: TRUE
[10:50:46.741] getGlobalsAndPackages() ...
[10:50:46.741] |  Searching for globals ...
[10:50:46.742] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:46.742] |  Searching for globals ... DONE
[10:50:46.743] |  Resolving globals: FALSE
[10:50:46.743] |  Search for packages associated with the globals ...
[10:50:46.743] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.743] |  :  Packages: [1] ‘base’
[10:50:46.743] |  Search for packages associated with the globals ... DONE
[10:50:46.743] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:46.744] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:46.744] |  Packages after dropping 'base': [0] 
[10:50:46.744] |  globals: [1] ‘FUN’
[10:50:46.744] |  packages: [0] 
[10:50:46.744] getGlobalsAndPackages() ... done
[10:50:46.744]  - globals found/used: [n=1] ‘FUN’
[10:50:46.744]  - needed namespaces: [n=0] 
[10:50:46.744] Finding globals ... DONE
[10:50:46.744] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.745] List of 2
[10:50:46.745]  $ ...future.FUN:function (C, k)  
[10:50:46.745]  $ MoreArgs     : NULL
[10:50:46.745]  - attr(*, "where")=List of 2
[10:50:46.745]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.745]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.745]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.745]  - attr(*, "resolved")= logi FALSE
[10:50:46.745]  - attr(*, "total_size")= num NA
[10:50:46.748] Packages to be attached in all futures: [n=0] 
[10:50:46.748] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.748] Number of futures (= number of chunks): 3
[10:50:46.748] Launching 3 futures (chunks) ...
[10:50:46.748] Chunk #1 of 3 ...
[10:50:46.749]  - Finding globals in '...' for chunk #1 ...
[10:50:46.749] getGlobalsAndPackages() ...
[10:50:46.749] |  Searching for globals ...
[10:50:46.749] |  :  globals found: [0] 
[10:50:46.749] |  Searching for globals ... DONE
[10:50:46.749] |  globals: [0] <none>
[10:50:46.749] |  packages: [0] <none>
[10:50:46.749] getGlobalsAndPackages() ... done
[10:50:46.749]    + additional globals found: [n=0] 
[10:50:46.750]    + additional namespaces needed: [n=0] 
[10:50:46.750]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.750]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:46.750]  - seeds: <none>
[10:50:46.750]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.750] getGlobalsAndPackages() ...
[10:50:46.750] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.750] |  Resolving globals: FALSE
[10:50:46.750] |  Search for packages associated with the globals ...
[10:50:46.750] |  :  Packages associated with globals: [0] 
[10:50:46.751] |  :  Packages: [0] 
[10:50:46.751] |  Search for packages associated with the globals ... DONE
[10:50:46.751] |  Packages after dropping 'base': [0] 
[10:50:46.751] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.751] |  packages: [0] 
[10:50:46.751] getGlobalsAndPackages() ... done
[10:50:46.751] run() for Future (‘Future’) ...
[10:50:46.751] |  state: ‘created’
[10:50:46.752] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.752] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.752] |  Using SequentialFutureBackend ...
[10:50:46.752] |  :  Launching futures ...
[10:50:46.752] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.752] |  :  .  |  getFutureData() ...
[10:50:46.752] |  :  .  |  :  getFutureCore() ...
[10:50:46.752] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.752] |  :  .  |  :  getFutureCore() ... done
[10:50:46.752] |  :  .  |  :  getFutureCapture() ...
[10:50:46.753] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.753] |  :  .  |  :  getFutureContext() ...
[10:50:46.753] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.753] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.753] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.753] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.753] |  :  .  |  :  getFutureContext() ... done
[10:50:46.753] |  :  .  |  getFutureData() ... done
[10:50:46.753] |  :  .  |  attachPackages() ...
[10:50:46.753] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.754] |  :  .  |  attachPackages() ... DONE
[10:50:46.754] |  :  .  |  attachPackages() ...
[10:50:46.754] |  :  .  |  :  packages: [n=0] 
[10:50:46.754] |  :  .  |  attachPackages() ... DONE
[10:50:46.754] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.754] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.754] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.755] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.755] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.755] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.755] |  :  .  |  :  .  |  New stack:
[10:50:46.755] |  :  .  |  :  .  |  List of 1
[10:50:46.755] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.755] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.755] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.755] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.755] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.755] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.755] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.757] |  :  .  |  :  .  |  Old stack:
[10:50:46.757] |  :  .  |  :  .  |  List of 1
[10:50:46.757] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.757] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.757] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.757] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.757] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.757] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.757] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.757] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.757] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.757] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.760] |  :  .  |  :  .  |  Not identical
[10:50:46.760] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.760] |  :  .  |  :  .  |  :  List of 2
[10:50:46.760] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.760] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.760] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.760] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.760] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.760] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.760] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.766] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.766] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.766] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.766] |  :  .  |  :  .  List of future strategies:
[10:50:46.766] |  :  .  |  :  .  1. sequential:
[10:50:46.766] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.766] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.766] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.766] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.766] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.767] |  :  .  |  assign_globals() ...
[10:50:46.767] |  :  .  |  List of 5
[10:50:46.767] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.767] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.767] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.767] |  :  .  |    ..$ :List of 2
[10:50:46.767] |  :  .  |    .. ..$ : chr "D"
[10:50:46.767] |  :  .  |    .. ..$ : chr "C"
[10:50:46.767] |  :  .  |    ..$ :List of 2
[10:50:46.767] |  :  .  |    .. ..$ : int 2
[10:50:46.767] |  :  .  |    .. ..$ : int 3
[10:50:46.767] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.767] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.767] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.767] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.767] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.767] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.767] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.767] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.767] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.767] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.767] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.767] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.773] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.773] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.773] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.773] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.773] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.773] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.773] |  :  .  |  assign_globals() ... done
[10:50:46.775] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.775] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.775] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.775] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.775] |  :  .  |  :  .  |  :  New stack:
[10:50:46.775] |  :  .  |  :  .  |  :  List of 1
[10:50:46.775] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.775] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.775] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.775] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.775] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.775] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.775] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.775] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.775] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.775] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.778] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.778] |  :  .  |  :  .  |  :  List of 1
[10:50:46.778] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.778] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.778] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.778] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.778] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.778] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.778] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.778] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.778] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.778] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.781] |  :  .  |  :  .  |  :  Identical
[10:50:46.781] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.781] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.781] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.781] |  :  .  |  :  .  |  1. sequential:
[10:50:46.781] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.781] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.781] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.782] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.782] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.782] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.782] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.782] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.782] |  :  Launching futures ... done
[10:50:46.782] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.783] |  Using SequentialFutureBackend ... done
[10:50:46.784] run() for Future (‘SequentialFuture’) ... done
[10:50:46.784] Created future:
[10:50:46.784] SequentialFuture:
[10:50:46.784] Label: ‘future_mapply-1’
[10:50:46.784] Expression:
[10:50:46.784] {
[10:50:46.784]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.784]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.784]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.784]         on.exit(options(oopts), add = TRUE)
[10:50:46.784]     }
[10:50:46.784]     {
[10:50:46.784]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.784]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.784]         do.call(mapply, args = args)
[10:50:46.784]     }
[10:50:46.784] }
[10:50:46.784] Lazy evaluation: FALSE
[10:50:46.784] Asynchronous evaluation: TRUE
[10:50:46.784] Local evaluation: TRUE
[10:50:46.784] Environment: R_GlobalEnv
[10:50:46.784] Capture standard output: TRUE
[10:50:46.784] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.784] Immediate condition classes: ‘immediateCondition’
[10:50:46.784] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.784] Packages: <none>
[10:50:46.784] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.784] Resolved: TRUE
[10:50:46.784] Value: 68 bytes of class ‘list’
[10:50:46.784] Early signaling: FALSE
[10:50:46.784] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.784] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.785] Chunk #1 of 3 ... DONE
[10:50:46.785] Chunk #2 of 3 ...
[10:50:46.785]  - Finding globals in '...' for chunk #2 ...
[10:50:46.785] getGlobalsAndPackages() ...
[10:50:46.785] |  Searching for globals ...
[10:50:46.785] |  :  globals found: [0] 
[10:50:46.785] |  Searching for globals ... DONE
[10:50:46.786] |  globals: [0] <none>
[10:50:46.786] |  packages: [0] <none>
[10:50:46.786] getGlobalsAndPackages() ... done
[10:50:46.786]    + additional globals found: [n=0] 
[10:50:46.786]    + additional namespaces needed: [n=0] 
[10:50:46.786]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:46.786]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:46.786]  - seeds: <none>
[10:50:46.786]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.786] getGlobalsAndPackages() ...
[10:50:46.786] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.787] |  Resolving globals: FALSE
[10:50:46.787] |  Search for packages associated with the globals ...
[10:50:46.787] |  :  Packages associated with globals: [0] 
[10:50:46.787] |  :  Packages: [0] 
[10:50:46.787] |  Search for packages associated with the globals ... DONE
[10:50:46.787] |  Packages after dropping 'base': [0] 
[10:50:46.787] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.788] |  packages: [0] 
[10:50:46.788] getGlobalsAndPackages() ... done
[10:50:46.788] run() for Future (‘Future’) ...
[10:50:46.788] |  state: ‘created’
[10:50:46.788] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.788] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.788] |  Using SequentialFutureBackend ...
[10:50:46.788] |  :  Launching futures ...
[10:50:46.788] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.789] |  :  .  |  getFutureData() ...
[10:50:46.789] |  :  .  |  :  getFutureCore() ...
[10:50:46.789] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.789] |  :  .  |  :  getFutureCore() ... done
[10:50:46.789] |  :  .  |  :  getFutureCapture() ...
[10:50:46.789] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.789] |  :  .  |  :  getFutureContext() ...
[10:50:46.789] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.789] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.789] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.790] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.790] |  :  .  |  :  getFutureContext() ... done
[10:50:46.790] |  :  .  |  getFutureData() ... done
[10:50:46.790] |  :  .  |  attachPackages() ...
[10:50:46.790] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.790] |  :  .  |  attachPackages() ... DONE
[10:50:46.790] |  :  .  |  attachPackages() ...
[10:50:46.790] |  :  .  |  :  packages: [n=0] 
[10:50:46.790] |  :  .  |  attachPackages() ... DONE
[10:50:46.791] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.791] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.791] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.791] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.791] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.791] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.792] |  :  .  |  :  .  |  New stack:
[10:50:46.792] |  :  .  |  :  .  |  List of 1
[10:50:46.792] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.792] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.792] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.792] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.792] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.792] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.792] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.794] |  :  .  |  :  .  |  Old stack:
[10:50:46.794] |  :  .  |  :  .  |  List of 1
[10:50:46.794] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.794] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.794] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.794] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.794] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.794] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.794] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.794] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.794] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.794] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.797] |  :  .  |  :  .  |  Not identical
[10:50:46.797] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.797] |  :  .  |  :  .  |  :  List of 2
[10:50:46.797] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.797] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.797] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.797] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.797] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.797] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.797] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.802] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.802] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.802] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.802] |  :  .  |  :  .  List of future strategies:
[10:50:46.802] |  :  .  |  :  .  1. sequential:
[10:50:46.802] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.802] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.802] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.804] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.805] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.805] |  :  .  |  assign_globals() ...
[10:50:46.805] |  :  .  |  List of 5
[10:50:46.805] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.805] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.805] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.805] |  :  .  |    ..$ :List of 1
[10:50:46.805] |  :  .  |    .. ..$ : chr "E"
[10:50:46.805] |  :  .  |    ..$ :List of 1
[10:50:46.805] |  :  .  |    .. ..$ : int 1
[10:50:46.805] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.805] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.805] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.805] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.805] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.805] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.805] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.805] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.805] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.805] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.805] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.805] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.813] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.813] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.813] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.813] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.813] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.813] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.813] |  :  .  |  assign_globals() ... done
[10:50:46.815] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.815] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.815] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.815] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.815] |  :  .  |  :  .  |  :  New stack:
[10:50:46.815] |  :  .  |  :  .  |  :  List of 1
[10:50:46.815] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.815] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.815] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.815] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.815] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.815] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.815] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.815] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.815] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.815] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.818] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.818] |  :  .  |  :  .  |  :  List of 1
[10:50:46.818] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.818] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.818] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.818] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.818] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.818] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.818] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.818] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.818] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.818] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.821] |  :  .  |  :  .  |  :  Identical
[10:50:46.821] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.821] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.822] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.822] |  :  .  |  :  .  |  1. sequential:
[10:50:46.822] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.822] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.822] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.822] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.822] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.822] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.822] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.822] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.823] |  :  Launching futures ... done
[10:50:46.823] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.823] |  Using SequentialFutureBackend ... done
[10:50:46.823] run() for Future (‘SequentialFuture’) ... done
[10:50:46.823] Created future:
[10:50:46.823] SequentialFuture:
[10:50:46.823] Label: ‘future_mapply-2’
[10:50:46.823] Expression:
[10:50:46.823] {
[10:50:46.823]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.823]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.823]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.823]         on.exit(options(oopts), add = TRUE)
[10:50:46.823]     }
[10:50:46.823]     {
[10:50:46.823]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.823]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.823]         do.call(mapply, args = args)
[10:50:46.823]     }
[10:50:46.823] }
[10:50:46.823] Lazy evaluation: FALSE
[10:50:46.823] Asynchronous evaluation: TRUE
[10:50:46.823] Local evaluation: TRUE
[10:50:46.823] Environment: R_GlobalEnv
[10:50:46.823] Capture standard output: TRUE
[10:50:46.823] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.823] Immediate condition classes: ‘immediateCondition’
[10:50:46.823] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.823] Packages: <none>
[10:50:46.823] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.823] Resolved: TRUE
[10:50:46.823] Value: 48 bytes of class ‘list’
[10:50:46.823] Early signaling: FALSE
[10:50:46.823] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.823] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.824] Chunk #2 of 3 ... DONE
[10:50:46.824] Chunk #3 of 3 ...
[10:50:46.824]  - Finding globals in '...' for chunk #3 ...
[10:50:46.824] getGlobalsAndPackages() ...
[10:50:46.824] |  Searching for globals ...
[10:50:46.825] |  :  globals found: [0] 
[10:50:46.825] |  Searching for globals ... DONE
[10:50:46.825] |  globals: [0] <none>
[10:50:46.825] |  packages: [0] <none>
[10:50:46.825] getGlobalsAndPackages() ... done
[10:50:46.825]    + additional globals found: [n=0] 
[10:50:46.825]    + additional namespaces needed: [n=0] 
[10:50:46.826]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:46.826]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:46.826]  - seeds: <none>
[10:50:46.827]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.827] getGlobalsAndPackages() ...
[10:50:46.827] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.827] |  Resolving globals: FALSE
[10:50:46.827] |  Search for packages associated with the globals ...
[10:50:46.827] |  :  Packages associated with globals: [0] 
[10:50:46.827] |  :  Packages: [0] 
[10:50:46.828] |  Search for packages associated with the globals ... DONE
[10:50:46.828] |  Packages after dropping 'base': [0] 
[10:50:46.828] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.828] |  packages: [0] 
[10:50:46.828] getGlobalsAndPackages() ... done
[10:50:46.828] run() for Future (‘Future’) ...
[10:50:46.828] |  state: ‘created’
[10:50:46.828] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.829] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.829] |  Using SequentialFutureBackend ...
[10:50:46.829] |  :  Launching futures ...
[10:50:46.829] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.829] |  :  .  |  getFutureData() ...
[10:50:46.829] |  :  .  |  :  getFutureCore() ...
[10:50:46.829] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.829] |  :  .  |  :  getFutureCore() ... done
[10:50:46.829] |  :  .  |  :  getFutureCapture() ...
[10:50:46.829] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.830] |  :  .  |  :  getFutureContext() ...
[10:50:46.830] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.830] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.830] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.830] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.830] |  :  .  |  :  getFutureContext() ... done
[10:50:46.830] |  :  .  |  getFutureData() ... done
[10:50:46.830] |  :  .  |  attachPackages() ...
[10:50:46.830] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.831] |  :  .  |  attachPackages() ... DONE
[10:50:46.831] |  :  .  |  attachPackages() ...
[10:50:46.831] |  :  .  |  :  packages: [n=0] 
[10:50:46.831] |  :  .  |  attachPackages() ... DONE
[10:50:46.831] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.831] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.831] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.832] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.832] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.832] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.832] |  :  .  |  :  .  |  New stack:
[10:50:46.832] |  :  .  |  :  .  |  List of 1
[10:50:46.832] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.832] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.832] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.832] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.832] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.832] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.832] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.834] |  :  .  |  :  .  |  Old stack:
[10:50:46.834] |  :  .  |  :  .  |  List of 1
[10:50:46.834] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.834] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.834] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.834] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.834] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.834] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.834] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.834] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.834] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.834] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.837] |  :  .  |  :  .  |  Not identical
[10:50:46.837] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.837] |  :  .  |  :  .  |  :  List of 2
[10:50:46.837] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.837] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.837] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.837] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.837] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.837] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.837] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.841] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.842] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.842] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.842] |  :  .  |  :  .  List of future strategies:
[10:50:46.842] |  :  .  |  :  .  1. sequential:
[10:50:46.842] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.842] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.842] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.842] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.842] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.842] |  :  .  |  assign_globals() ...
[10:50:46.842] |  :  .  |  List of 5
[10:50:46.842] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.842] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.842] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.842] |  :  .  |    ..$ :List of 2
[10:50:46.842] |  :  .  |    .. ..$ : chr "B"
[10:50:46.842] |  :  .  |    .. ..$ : chr "A"
[10:50:46.842] |  :  .  |    ..$ :List of 2
[10:50:46.842] |  :  .  |    .. ..$ : int 4
[10:50:46.842] |  :  .  |    .. ..$ : int 5
[10:50:46.842] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.842] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.842] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.842] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.842] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.842] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.842] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.842] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.842] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.842] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.842] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.842] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.849] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.849] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.849] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.849] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.849] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.850] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.850] |  :  .  |  assign_globals() ... done
[10:50:46.851] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.851] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.851] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.851] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.851] |  :  .  |  :  .  |  :  New stack:
[10:50:46.852] |  :  .  |  :  .  |  :  List of 1
[10:50:46.852] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.852] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.852] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.852] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.852] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.852] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.852] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.852] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.852] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.852] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.854] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.854] |  :  .  |  :  .  |  :  List of 1
[10:50:46.854] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.854] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.854] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.854] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.854] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.854] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.854] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.854] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.854] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.854] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.857] |  :  .  |  :  .  |  :  Identical
[10:50:46.857] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.857] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.857] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.857] |  :  .  |  :  .  |  1. sequential:
[10:50:46.857] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.857] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.857] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.858] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.858] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.858] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.858] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.858] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.858] |  :  Launching futures ... done
[10:50:46.859] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.859] |  Using SequentialFutureBackend ... done
[10:50:46.859] run() for Future (‘SequentialFuture’) ... done
[10:50:46.859] Created future:
[10:50:46.859] SequentialFuture:
[10:50:46.859] Label: ‘future_mapply-3’
[10:50:46.859] Expression:
[10:50:46.859] {
[10:50:46.859]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.859]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.859]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.859]         on.exit(options(oopts), add = TRUE)
[10:50:46.859]     }
[10:50:46.859]     {
[10:50:46.859]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.859]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.859]         do.call(mapply, args = args)
[10:50:46.859]     }
[10:50:46.859] }
[10:50:46.859] Lazy evaluation: FALSE
[10:50:46.859] Asynchronous evaluation: TRUE
[10:50:46.859] Local evaluation: TRUE
[10:50:46.859] Environment: R_GlobalEnv
[10:50:46.859] Capture standard output: TRUE
[10:50:46.859] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.859] Immediate condition classes: ‘immediateCondition’
[10:50:46.859] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.859] Packages: <none>
[10:50:46.859] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.859] Resolved: TRUE
[10:50:46.859] Value: 72 bytes of class ‘list’
[10:50:46.859] Early signaling: FALSE
[10:50:46.859] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.859] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.860] Chunk #3 of 3 ... DONE
[10:50:46.860] Launching 3 futures (chunks) ... DONE
[10:50:46.860] Resolving 3 futures (chunks) ...
[10:50:46.860] value() on list ...
[10:50:46.860] |  recursive: 0
[10:50:46.860] |  length: 3
[10:50:46.860] |  
[10:50:46.860] |  Number of remaining objects: 3
[10:50:46.860] |  checking value #1 ...
[10:50:46.860] |  :  'obj' is SequentialFuture
[10:50:46.860] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.861] |  :  .  state: ‘finished’
[10:50:46.861] |  :  .  run: TRUE
[10:50:46.861] |  :  .  result: ‘FutureResult’
[10:50:46.861] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.861] |  :  SequentialFuture #1
[10:50:46.861] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.861] |  :  .  nx: 3
[10:50:46.861] |  :  .  relay: TRUE
[10:50:46.861] |  :  .  stdout: TRUE
[10:50:46.861] |  :  .  signal: TRUE
[10:50:46.861] |  :  .  resignal: FALSE
[10:50:46.861] |  :  .  force: TRUE
[10:50:46.862] |  :  .  relayed: [n=3] FALSE, FALSE, FALSE
[10:50:46.862] |  :  .  queued futures: [n=3] FALSE, FALSE, FALSE
[10:50:46.862] |  :  .  until=1
[10:50:46.862] |  :  .  relaying element #1
[10:50:46.863] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:46.863] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:46.863] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.863] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.863] |  :  .  value: <list>
[10:50:46.863] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.863] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.864] |  :  .  nx: 3
[10:50:46.864] |  :  .  relay: TRUE
[10:50:46.864] |  :  .  stdout: TRUE
[10:50:46.864] |  :  .  signal: TRUE
[10:50:46.864] |  :  .  resignal: FALSE
[10:50:46.864] |  :  .  force: TRUE
[10:50:46.864] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:46.864] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:46.864] |  :  .  until=2
[10:50:46.864] |  :  .  relaying element #2
[10:50:46.864] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:46.864] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:46.865] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:46.865] |  :  length: 2 (resolved future 1)
[10:50:46.865] |  checking value #1 ... done
[10:50:46.865] |  checking value #2 ...
[10:50:46.865] |  :  'obj' is SequentialFuture
[10:50:46.865] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.865] |  :  .  state: ‘finished’
[10:50:46.865] |  :  .  run: TRUE
[10:50:46.865] |  :  .  result: ‘FutureResult’
[10:50:46.865] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.866] |  :  SequentialFuture #2
[10:50:46.866] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:46.866] |  :  .  nx: 3
[10:50:46.866] |  :  .  relay: TRUE
[10:50:46.866] |  :  .  stdout: TRUE
[10:50:46.866] |  :  .  signal: TRUE
[10:50:46.866] |  :  .  resignal: FALSE
[10:50:46.866] |  :  .  force: TRUE
[10:50:46.866] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:46.866] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:46.866] |  :  .  until=2
[10:50:46.866] |  :  .  relaying element #2
[10:50:46.867] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:46.867] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:46.867] |  :  signalConditionsASAP(SequentialFuture, pos=2) ... done
[10:50:46.867] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.867] |  :  .  value: <list>
[10:50:46.867] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.867] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:46.867] |  :  .  nx: 3
[10:50:46.867] |  :  .  relay: TRUE
[10:50:46.867] |  :  .  stdout: TRUE
[10:50:46.867] |  :  .  signal: TRUE
[10:50:46.868] |  :  .  resignal: FALSE
[10:50:46.868] |  :  .  force: TRUE
[10:50:46.868] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:46.868] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:46.868] |  :  .  until=3
[10:50:46.868] |  :  .  relaying element #3
[10:50:46.868] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:46.868] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:46.868] |  :  signalConditionsASAP(NULL, pos=2) ... done
[10:50:46.868] |  :  length: 1 (resolved future 2)
[10:50:46.868] |  checking value #2 ... done
[10:50:46.868] |  checking value #3 ...
[10:50:46.869] |  :  'obj' is SequentialFuture
[10:50:46.869] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.869] |  :  .  state: ‘finished’
[10:50:46.869] |  :  .  run: TRUE
[10:50:46.869] |  :  .  result: ‘FutureResult’
[10:50:46.869] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.869] |  :  SequentialFuture #3
[10:50:46.869] |  :  signalConditionsASAP(SequentialFuture, pos=3) ...
[10:50:46.869] |  :  .  nx: 3
[10:50:46.869] |  :  .  relay: TRUE
[10:50:46.869] |  :  .  stdout: TRUE
[10:50:46.869] |  :  .  signal: TRUE
[10:50:46.870] |  :  .  resignal: FALSE
[10:50:46.870] |  :  .  force: TRUE
[10:50:46.870] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:46.870] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:46.870] |  :  .  until=3
[10:50:46.870] |  :  .  relaying element #3
[10:50:46.870] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:46.870] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:46.870] |  :  signalConditionsASAP(SequentialFuture, pos=3) ... done
[10:50:46.870] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.871] |  :  .  value: <list>
[10:50:46.871] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.871] |  :  signalConditionsASAP(SequentialFuture, pos=3) ...
[10:50:46.871] |  :  .  nx: 3
[10:50:46.871] |  :  .  relay: TRUE
[10:50:46.871] |  :  .  stdout: TRUE
[10:50:46.871] |  :  .  signal: TRUE
[10:50:46.871] |  :  .  resignal: FALSE
[10:50:46.871] |  :  .  force: TRUE
[10:50:46.871] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:46.871] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:46.871] |  :  .  until=3
[10:50:46.871] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:46.872] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:46.872] |  :  signalConditionsASAP(SequentialFuture, pos=3) ... done
[10:50:46.872] |  :  length: 0 (resolved future 3)
[10:50:46.872] |  checking value #3 ... done
[10:50:46.872] |  Relaying remaining futures ...
[10:50:46.872] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.872] |  :  .  nx: 3
[10:50:46.872] |  :  .  relay: TRUE
[10:50:46.872] |  :  .  stdout: TRUE
[10:50:46.872] |  :  .  signal: TRUE
[10:50:46.872] |  :  .  resignal: FALSE
[10:50:46.872] |  :  .  force: TRUE
[10:50:46.873] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:46.873] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
 - flush all
[10:50:46.873] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:46.873] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:46.873] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.873] |  Relaying remaining futures ... done
[10:50:46.873] value() on list ... done
[10:50:46.873]  - Number of value chunks collected: 3
[10:50:46.873] Resolving 3 futures (chunks) ... DONE
[10:50:46.873] Reducing values from 3 chunks ...
[10:50:46.873]  - Number of values collected after concatenation: 5
[10:50:46.873]  - Number of values expected: 5
[10:50:46.874] Reverse index remapping (attribute 'ordering'): [n = 5] 5, 4, 2, 1, 3
[10:50:46.874] Reducing values from 3 chunks ... DONE
[10:50:46.874] future_mapply() ... DONE
[10:50:46.874] future_mapply() ...
[10:50:46.874] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.874] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.874] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.874] Number of chunks: 1
[10:50:46.875] getGlobalsAndPackagesXApply() ...
[10:50:46.875]  - future.globals: TRUE
[10:50:46.875] getGlobalsAndPackages() ...
[10:50:46.875] |  Searching for globals ...
[10:50:46.876] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:46.876] |  Searching for globals ... DONE
[10:50:46.876] |  Resolving globals: FALSE
[10:50:46.876] |  Search for packages associated with the globals ...
[10:50:46.877] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.877] |  :  Packages: [1] ‘base’
[10:50:46.877] |  Search for packages associated with the globals ... DONE
[10:50:46.877] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:46.877] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:46.878] |  Packages after dropping 'base': [0] 
[10:50:46.878] |  globals: [1] ‘FUN’
[10:50:46.878] |  packages: [0] 
[10:50:46.878] getGlobalsAndPackages() ... done
[10:50:46.878]  - globals found/used: [n=1] ‘FUN’
[10:50:46.878]  - needed namespaces: [n=0] 
[10:50:46.878] Finding globals ... DONE
[10:50:46.878] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.878] List of 2
[10:50:46.878]  $ ...future.FUN:function (C, k)  
[10:50:46.878]  $ MoreArgs     : list()
[10:50:46.878]  - attr(*, "where")=List of 2
[10:50:46.878]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.878]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.878]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.878]  - attr(*, "resolved")= logi FALSE
[10:50:46.878]  - attr(*, "total_size")= num NA
[10:50:46.882] Packages to be attached in all futures: [n=0] 
[10:50:46.882] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.882] Number of futures (= number of chunks): 1
[10:50:46.882] Launching 1 futures (chunks) ...
[10:50:46.882] Chunk #1 of 1 ...
[10:50:46.882]  - Finding globals in '...' for chunk #1 ...
[10:50:46.883] getGlobalsAndPackages() ...
[10:50:46.883] |  Searching for globals ...
[10:50:46.883] |  :  globals found: [0] 
[10:50:46.883] |  Searching for globals ... DONE
[10:50:46.883] |  globals: [0] <none>
[10:50:46.883] |  packages: [0] <none>
[10:50:46.883] getGlobalsAndPackages() ... done
[10:50:46.883]    + additional globals found: [n=0] 
[10:50:46.884]    + additional namespaces needed: [n=0] 
[10:50:46.884]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.884]  - seeds: <none>
[10:50:46.884]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.884] getGlobalsAndPackages() ...
[10:50:46.884] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.884] |  Resolving globals: FALSE
[10:50:46.884] |  Search for packages associated with the globals ...
[10:50:46.884] |  :  Packages associated with globals: [0] 
[10:50:46.885] |  :  Packages: [0] 
[10:50:46.885] |  Search for packages associated with the globals ... DONE
[10:50:46.885] |  Packages after dropping 'base': [0] 
[10:50:46.885] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.885] |  packages: [0] 
[10:50:46.885] getGlobalsAndPackages() ... done
[10:50:46.885] run() for Future (‘Future’) ...
[10:50:46.885] |  state: ‘created’
[10:50:46.886] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.886] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.886] |  Using SequentialFutureBackend ...
[10:50:46.886] |  :  Launching futures ...
[10:50:46.886] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.886] |  :  .  |  getFutureData() ...
[10:50:46.886] |  :  .  |  :  getFutureCore() ...
[10:50:46.886] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.886] |  :  .  |  :  getFutureCore() ... done
[10:50:46.886] |  :  .  |  :  getFutureCapture() ...
[10:50:46.887] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.887] |  :  .  |  :  getFutureContext() ...
[10:50:46.887] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.887] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.887] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.887] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.887] |  :  .  |  :  getFutureContext() ... done
[10:50:46.887] |  :  .  |  getFutureData() ... done
[10:50:46.887] |  :  .  |  attachPackages() ...
[10:50:46.887] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.888] |  :  .  |  attachPackages() ... DONE
[10:50:46.888] |  :  .  |  attachPackages() ...
[10:50:46.888] |  :  .  |  :  packages: [n=0] 
[10:50:46.888] |  :  .  |  attachPackages() ... DONE
[10:50:46.888] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.888] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.888] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.889] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.889] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.889] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.889] |  :  .  |  :  .  |  New stack:
[10:50:46.889] |  :  .  |  :  .  |  List of 1
[10:50:46.889] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.889] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.889] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.889] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.889] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.889] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.889] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.891] |  :  .  |  :  .  |  Old stack:
[10:50:46.891] |  :  .  |  :  .  |  List of 1
[10:50:46.891] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.891] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.891] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.891] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.891] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.891] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.891] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.891] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.891] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.891] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.894] |  :  .  |  :  .  |  Not identical
[10:50:46.894] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.894] |  :  .  |  :  .  |  :  List of 2
[10:50:46.894] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.894] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.894] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.894] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.894] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.894] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.894] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.900] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.900] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.900] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.900] |  :  .  |  :  .  List of future strategies:
[10:50:46.900] |  :  .  |  :  .  1. sequential:
[10:50:46.900] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.900] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.900] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.901] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.901] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.901] |  :  .  |  assign_globals() ...
[10:50:46.901] |  :  .  |  List of 5
[10:50:46.901] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.901] |  :  .  |   $ MoreArgs                 : list()
[10:50:46.901] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.901] |  :  .  |    ..$ :List of 5
[10:50:46.901] |  :  .  |    .. ..$ : chr "A"
[10:50:46.901] |  :  .  |    .. ..$ : chr "B"
[10:50:46.901] |  :  .  |    .. ..$ : chr "C"
[10:50:46.901] |  :  .  |    .. ..$ : chr "D"
[10:50:46.901] |  :  .  |    .. ..$ : chr "E"
[10:50:46.901] |  :  .  |    ..$ :List of 5
[10:50:46.901] |  :  .  |    .. ..$ : int 5
[10:50:46.901] |  :  .  |    .. ..$ : int 4
[10:50:46.901] |  :  .  |    .. ..$ : int 3
[10:50:46.901] |  :  .  |    .. ..$ : int 2
[10:50:46.901] |  :  .  |    .. ..$ : int 1
[10:50:46.901] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.901] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.901] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.901] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.901] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.901] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.901] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.901] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.901] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.901] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.901] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.901] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.908] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.908] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.908] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.909] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.909] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.909] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.909] |  :  .  |  assign_globals() ... done
[10:50:46.910] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.910] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.910] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.911] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.911] |  :  .  |  :  .  |  :  New stack:
[10:50:46.911] |  :  .  |  :  .  |  :  List of 1
[10:50:46.911] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.911] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.911] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.911] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.911] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.911] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.911] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.911] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.911] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.911] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.914] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.914] |  :  .  |  :  .  |  :  List of 1
[10:50:46.914] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.914] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.914] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.914] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.917] |  :  .  |  :  .  |  :  Identical
[10:50:46.917] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.918] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.918] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.918] |  :  .  |  :  .  |  1. sequential:
[10:50:46.918] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.918] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.918] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.918] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.918] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.918] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.918] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.919] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.919] |  :  Launching futures ... done
[10:50:46.919] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.919] |  Using SequentialFutureBackend ... done
[10:50:46.919] run() for Future (‘SequentialFuture’) ... done
[10:50:46.919] Created future:
[10:50:46.919] SequentialFuture:
[10:50:46.919] Label: ‘future_.mapply-1’
[10:50:46.919] Expression:
[10:50:46.919] {
[10:50:46.919]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.919]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.919]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.919]         on.exit(options(oopts), add = TRUE)
[10:50:46.919]     }
[10:50:46.919]     {
[10:50:46.919]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.919]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.919]         do.call(mapply, args = args)
[10:50:46.919]     }
[10:50:46.919] }
[10:50:46.919] Lazy evaluation: FALSE
[10:50:46.919] Asynchronous evaluation: TRUE
[10:50:46.919] Local evaluation: TRUE
[10:50:46.919] Environment: R_GlobalEnv
[10:50:46.919] Capture standard output: TRUE
[10:50:46.919] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.919] Immediate condition classes: ‘immediateCondition’
[10:50:46.919] Globals: 5 objects totaling 967 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 192 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.919] Packages: <none>
[10:50:46.919] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.919] Resolved: TRUE
[10:50:46.919] Value: 126 bytes of class ‘list’
[10:50:46.919] Early signaling: FALSE
[10:50:46.919] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.919] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.920] Chunk #1 of 1 ... DONE
[10:50:46.920] Launching 1 futures (chunks) ... DONE
[10:50:46.920] Resolving 1 futures (chunks) ...
[10:50:46.920] value() on list ...
[10:50:46.920] |  recursive: 0
[10:50:46.920] |  length: 1
[10:50:46.921] |  
[10:50:46.921] |  Number of remaining objects: 1
[10:50:46.921] |  checking value #1 ...
[10:50:46.921] |  :  'obj' is SequentialFuture
[10:50:46.921] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:46.921] |  :  .  state: ‘finished’
[10:50:46.921] |  :  .  run: TRUE
[10:50:46.921] |  :  .  result: ‘FutureResult’
[10:50:46.921] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:46.921] |  :  SequentialFuture #1
[10:50:46.921] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.922] |  :  .  nx: 1
[10:50:46.922] |  :  .  relay: TRUE
[10:50:46.922] |  :  .  stdout: TRUE
[10:50:46.922] |  :  .  signal: TRUE
[10:50:46.922] |  :  .  resignal: FALSE
[10:50:46.922] |  :  .  force: TRUE
[10:50:46.922] |  :  .  relayed: [n=1] FALSE
[10:50:46.922] |  :  .  queued futures: [n=1] FALSE
[10:50:46.922] |  :  .  until=1
[10:50:46.922] |  :  .  relaying element #1
[10:50:46.922] |  :  .  relayed: [n=1] TRUE
[10:50:46.923] |  :  .  queued futures: [n=1] TRUE
[10:50:46.923] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.923] |  :  value(<SequentialFuture>, ...) ...
[10:50:46.923] |  :  .  value: <list>
[10:50:46.923] |  :  value(<SequentialFuture>, ...) ... done
[10:50:46.923] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:46.923] |  :  .  nx: 1
[10:50:46.923] |  :  .  relay: TRUE
[10:50:46.923] |  :  .  stdout: TRUE
[10:50:46.923] |  :  .  signal: TRUE
[10:50:46.923] |  :  .  resignal: FALSE
[10:50:46.924] |  :  .  force: TRUE
[10:50:46.924] |  :  .  relayed: [n=1] TRUE
[10:50:46.924] |  :  .  queued futures: [n=1] TRUE
[10:50:46.924] |  :  .  until=1
[10:50:46.924] |  :  .  relayed: [n=1] TRUE
[10:50:46.924] |  :  .  queued futures: [n=1] TRUE
[10:50:46.924] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:46.924] |  :  length: 0 (resolved future 1)
[10:50:46.924] |  checking value #1 ... done
[10:50:46.924] |  Relaying remaining futures ...
[10:50:46.924] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:46.925] |  :  .  nx: 1
[10:50:46.925] |  :  .  relay: TRUE
[10:50:46.925] |  :  .  stdout: TRUE
[10:50:46.925] |  :  .  signal: TRUE
[10:50:46.925] |  :  .  resignal: FALSE
[10:50:46.925] |  :  .  force: TRUE
[10:50:46.925] |  :  .  relayed: [n=1] TRUE
[10:50:46.925] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:46.925] |  :  .  relayed: [n=1] TRUE
[10:50:46.925] |  :  .  queued futures: [n=1] TRUE
[10:50:46.925] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:46.925] |  Relaying remaining futures ... done
[10:50:46.926] value() on list ... done
[10:50:46.926]  - Number of value chunks collected: 1
[10:50:46.926] Resolving 1 futures (chunks) ... DONE
[10:50:46.926] Reducing values from 1 chunks ...
[10:50:46.926]  - Number of values collected after concatenation: 5
[10:50:46.926]  - Number of values expected: 5
[10:50:46.926] Reducing values from 1 chunks ... DONE
[10:50:46.926] future_mapply() ... DONE
[10:50:46.926] future_mapply() ...
[10:50:46.927] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.927] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.927] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.927] Number of chunks: 2
[10:50:46.927] Index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:46.927] getGlobalsAndPackagesXApply() ...
[10:50:46.927]  - future.globals: TRUE
[10:50:46.927] getGlobalsAndPackages() ...
[10:50:46.928] |  Searching for globals ...
[10:50:46.929] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:46.929] |  Searching for globals ... DONE
[10:50:46.929] |  Resolving globals: FALSE
[10:50:46.929] |  Search for packages associated with the globals ...
[10:50:46.929] |  :  Packages associated with globals: [1] ‘base’
[10:50:46.930] |  :  Packages: [1] ‘base’
[10:50:46.930] |  Search for packages associated with the globals ... DONE
[10:50:46.930] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:46.930] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:46.930] |  Packages after dropping 'base': [0] 
[10:50:46.930] |  globals: [1] ‘FUN’
[10:50:46.931] |  packages: [0] 
[10:50:46.931] getGlobalsAndPackages() ... done
[10:50:46.931]  - globals found/used: [n=1] ‘FUN’
[10:50:46.931]  - needed namespaces: [n=0] 
[10:50:46.931] Finding globals ... DONE
[10:50:46.931] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:46.931] List of 2
[10:50:46.931]  $ ...future.FUN:function (C, k)  
[10:50:46.931]  $ MoreArgs     : NULL
[10:50:46.931]  - attr(*, "where")=List of 2
[10:50:46.931]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:46.931]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:46.931]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.931]  - attr(*, "resolved")= logi FALSE
[10:50:46.931]  - attr(*, "total_size")= num NA
[10:50:46.934] Packages to be attached in all futures: [n=0] 
[10:50:46.934] getGlobalsAndPackagesXApply() ... DONE
[10:50:46.934] Number of futures (= number of chunks): 2
[10:50:46.934] Launching 2 futures (chunks) ...
[10:50:46.934] Chunk #1 of 2 ...
[10:50:46.934]  - Finding globals in '...' for chunk #1 ...
[10:50:46.934] getGlobalsAndPackages() ...
[10:50:46.935] |  Searching for globals ...
[10:50:46.935] |  :  globals found: [0] 
[10:50:46.935] |  Searching for globals ... DONE
[10:50:46.935] |  globals: [0] <none>
[10:50:46.935] |  packages: [0] <none>
[10:50:46.935] getGlobalsAndPackages() ... done
[10:50:46.937]    + additional globals found: [n=0] 
[10:50:46.937]    + additional namespaces needed: [n=0] 
[10:50:46.937]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:46.937]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:46.937]  - seeds: <none>
[10:50:46.937]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.937] getGlobalsAndPackages() ...
[10:50:46.937] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.937] |  Resolving globals: FALSE
[10:50:46.938] |  Search for packages associated with the globals ...
[10:50:46.938] |  :  Packages associated with globals: [0] 
[10:50:46.938] |  :  Packages: [0] 
[10:50:46.938] |  Search for packages associated with the globals ... DONE
[10:50:46.938] |  Packages after dropping 'base': [0] 
[10:50:46.938] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.938] |  packages: [0] 
[10:50:46.939] getGlobalsAndPackages() ... done
[10:50:46.939] run() for Future (‘Future’) ...
[10:50:46.939] |  state: ‘created’
[10:50:46.939] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.939] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.939] |  Using SequentialFutureBackend ...
[10:50:46.939] |  :  Launching futures ...
[10:50:46.940] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.940] |  :  .  |  getFutureData() ...
[10:50:46.940] |  :  .  |  :  getFutureCore() ...
[10:50:46.940] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.940] |  :  .  |  :  getFutureCore() ... done
[10:50:46.940] |  :  .  |  :  getFutureCapture() ...
[10:50:46.940] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.940] |  :  .  |  :  getFutureContext() ...
[10:50:46.940] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.940] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.941] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.941] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.941] |  :  .  |  :  getFutureContext() ... done
[10:50:46.941] |  :  .  |  getFutureData() ... done
[10:50:46.941] |  :  .  |  attachPackages() ...
[10:50:46.941] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.941] |  :  .  |  attachPackages() ... DONE
[10:50:46.941] |  :  .  |  attachPackages() ...
[10:50:46.941] |  :  .  |  :  packages: [n=0] 
[10:50:46.942] |  :  .  |  attachPackages() ... DONE
[10:50:46.942] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.942] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.942] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.942] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.942] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.943] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.943] |  :  .  |  :  .  |  New stack:
[10:50:46.943] |  :  .  |  :  .  |  List of 1
[10:50:46.943] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.943] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.943] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.943] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.943] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.943] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.943] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.945] |  :  .  |  :  .  |  Old stack:
[10:50:46.945] |  :  .  |  :  .  |  List of 1
[10:50:46.945] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.945] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.945] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.945] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.945] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.945] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.945] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.945] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.945] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.945] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.948] |  :  .  |  :  .  |  Not identical
[10:50:46.948] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.948] |  :  .  |  :  .  |  :  List of 2
[10:50:46.948] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.948] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.948] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.948] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.948] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.948] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.948] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.953] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.953] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.953] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.953] |  :  .  |  :  .  List of future strategies:
[10:50:46.953] |  :  .  |  :  .  1. sequential:
[10:50:46.953] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.953] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.953] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.953] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.953] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.954] |  :  .  |  assign_globals() ...
[10:50:46.954] |  :  .  |  List of 5
[10:50:46.954] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.954] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.954] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.954] |  :  .  |    ..$ :List of 2
[10:50:46.954] |  :  .  |    .. ..$ : chr "E"
[10:50:46.954] |  :  .  |    .. ..$ : chr "D"
[10:50:46.954] |  :  .  |    ..$ :List of 2
[10:50:46.954] |  :  .  |    .. ..$ : int 1
[10:50:46.954] |  :  .  |    .. ..$ : int 2
[10:50:46.954] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.954] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.954] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.954] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.954] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.954] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.954] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.954] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.954] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.954] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.954] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.954] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:46.961] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:46.961] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:46.961] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:46.961] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:46.961] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:46.961] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:46.961] |  :  .  |  assign_globals() ... done
[10:50:46.963] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.963] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.963] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.963] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:46.963] |  :  .  |  :  .  |  :  New stack:
[10:50:46.963] |  :  .  |  :  .  |  :  List of 1
[10:50:46.963] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.963] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.963] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.963] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.963] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.963] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.963] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.963] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.963] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.963] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.966] |  :  .  |  :  .  |  :  Old stack:
[10:50:46.966] |  :  .  |  :  .  |  :  List of 1
[10:50:46.966] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.966] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.966] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.966] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.966] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.966] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.966] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.966] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.966] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.966] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.969] |  :  .  |  :  .  |  :  Identical
[10:50:46.969] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:46.969] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.969] |  :  .  |  :  .  |  List of future strategies:
[10:50:46.969] |  :  .  |  :  .  |  1. sequential:
[10:50:46.969] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.969] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:46.969] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:46.970] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.970] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.970] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.970] |  :  .  |  SequentialFuture started (and completed)
[10:50:46.970] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:46.970] |  :  Launching futures ... done
[10:50:46.971] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.971] |  Using SequentialFutureBackend ... done
[10:50:46.971] run() for Future (‘SequentialFuture’) ... done
[10:50:46.971] Created future:
[10:50:46.971] SequentialFuture:
[10:50:46.971] Label: ‘future_mapply-1’
[10:50:46.971] Expression:
[10:50:46.971] {
[10:50:46.971]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:46.971]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:46.971]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:46.971]         on.exit(options(oopts), add = TRUE)
[10:50:46.971]     }
[10:50:46.971]     {
[10:50:46.971]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:46.971]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:46.971]         do.call(mapply, args = args)
[10:50:46.971]     }
[10:50:46.971] }
[10:50:46.971] Lazy evaluation: FALSE
[10:50:46.971] Asynchronous evaluation: TRUE
[10:50:46.971] Local evaluation: TRUE
[10:50:46.971] Environment: R_GlobalEnv
[10:50:46.971] Capture standard output: TRUE
[10:50:46.971] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:46.971] Immediate condition classes: ‘immediateCondition’
[10:50:46.971] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:46.971] Packages: <none>
[10:50:46.971] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:46.971] Resolved: TRUE
[10:50:46.971] Value: 66 bytes of class ‘list’
[10:50:46.971] Early signaling: FALSE
[10:50:46.971] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:46.971] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:46.972] Chunk #1 of 2 ... DONE
[10:50:46.972] Chunk #2 of 2 ...
[10:50:46.972]  - Finding globals in '...' for chunk #2 ...
[10:50:46.972] getGlobalsAndPackages() ...
[10:50:46.972] |  Searching for globals ...
[10:50:46.973] |  :  globals found: [0] 
[10:50:46.973] |  Searching for globals ... DONE
[10:50:46.973] |  globals: [0] <none>
[10:50:46.973] |  packages: [0] <none>
[10:50:46.973] getGlobalsAndPackages() ... done
[10:50:46.974]    + additional globals found: [n=0] 
[10:50:46.975]    + additional namespaces needed: [n=0] 
[10:50:46.975]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:46.975]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:46.975]  - seeds: <none>
[10:50:46.975]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.975] getGlobalsAndPackages() ...
[10:50:46.975] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.975] |  Resolving globals: FALSE
[10:50:46.975] |  Search for packages associated with the globals ...
[10:50:46.976] |  :  Packages associated with globals: [0] 
[10:50:46.976] |  :  Packages: [0] 
[10:50:46.976] |  Search for packages associated with the globals ... DONE
[10:50:46.976] |  Packages after dropping 'base': [0] 
[10:50:46.976] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:46.976] |  packages: [0] 
[10:50:46.977] getGlobalsAndPackages() ... done
[10:50:46.977] run() for Future (‘Future’) ...
[10:50:46.977] |  state: ‘created’
[10:50:46.977] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.977] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.977] |  Using SequentialFutureBackend ...
[10:50:46.977] |  :  Launching futures ...
[10:50:46.978] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:46.978] |  :  .  |  getFutureData() ...
[10:50:46.978] |  :  .  |  :  getFutureCore() ...
[10:50:46.978] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:46.978] |  :  .  |  :  getFutureCore() ... done
[10:50:46.978] |  :  .  |  :  getFutureCapture() ...
[10:50:46.978] |  :  .  |  :  getFutureCapture() ... done
[10:50:46.978] |  :  .  |  :  getFutureContext() ...
[10:50:46.978] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.979] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:46.979] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.979] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:46.979] |  :  .  |  :  getFutureContext() ... done
[10:50:46.979] |  :  .  |  getFutureData() ... done
[10:50:46.979] |  :  .  |  attachPackages() ...
[10:50:46.979] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:46.979] |  :  .  |  attachPackages() ... DONE
[10:50:46.979] |  :  .  |  attachPackages() ...
[10:50:46.980] |  :  .  |  :  packages: [n=0] 
[10:50:46.980] |  :  .  |  attachPackages() ... DONE
[10:50:46.980] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:46.980] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:46.980] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:46.981] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:46.981] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:46.981] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:46.981] |  :  .  |  :  .  |  New stack:
[10:50:46.981] |  :  .  |  :  .  |  List of 1
[10:50:46.981] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.981] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.981] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.981] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.981] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.981] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.981] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.983] |  :  .  |  :  .  |  Old stack:
[10:50:46.983] |  :  .  |  :  .  |  List of 1
[10:50:46.983] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.983] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.983] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.983] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.983] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.983] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:46.983] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.983] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.983] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.983] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:46.986] |  :  .  |  :  .  |  Not identical
[10:50:46.986] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:46.986] |  :  .  |  :  .  |  :  List of 2
[10:50:46.986] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.986] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:46.986] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.986] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:46.986] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:46.986] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:46.986] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:46.991] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:46.991] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:46.991] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:46.991] |  :  .  |  :  .  List of future strategies:
[10:50:46.991] |  :  .  |  :  .  1. sequential:
[10:50:46.991] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:46.991] |  :  .  |  :  .     - tweaked: FALSE
[10:50:46.991] |  :  .  |  :  .     - call: plan(sequential)
[10:50:46.992] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:46.992] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:46.992] |  :  .  |  assign_globals() ...
[10:50:46.992] |  :  .  |  List of 5
[10:50:46.992] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:46.992] |  :  .  |   $ MoreArgs                 : NULL
[10:50:46.992] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:46.992] |  :  .  |    ..$ :List of 3
[10:50:46.992] |  :  .  |    .. ..$ : chr "C"
[10:50:46.992] |  :  .  |    .. ..$ : chr "B"
[10:50:46.992] |  :  .  |    .. ..$ : chr "A"
[10:50:46.992] |  :  .  |    ..$ :List of 3
[10:50:46.992] |  :  .  |    .. ..$ : int 3
[10:50:46.992] |  :  .  |    .. ..$ : int 4
[10:50:46.992] |  :  .  |    .. ..$ : int 5
[10:50:46.992] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:46.992] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:46.992] |  :  .  |   - attr(*, "where")=List of 5
[10:50:46.992] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:46.992] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:46.992] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:46.992] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:46.992] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:46.992] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:46.992] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:46.992] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:46.992] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.000] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:47.000] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.000] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.000] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.000] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.000] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.001] |  :  .  |  assign_globals() ... done
[10:50:47.002] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.002] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.002] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.002] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.003] |  :  .  |  :  .  |  :  New stack:
[10:50:47.003] |  :  .  |  :  .  |  :  List of 1
[10:50:47.003] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.003] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.003] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.003] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.003] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.003] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.003] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.003] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.003] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.003] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.006] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.006] |  :  .  |  :  .  |  :  List of 1
[10:50:47.006] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.006] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.006] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.006] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.006] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.006] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.009] |  :  .  |  :  .  |  :  Identical
[10:50:47.009] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.009] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.009] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.009] |  :  .  |  :  .  |  1. sequential:
[10:50:47.009] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.009] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.009] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.009] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.009] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.009] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.010] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.010] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.010] |  :  Launching futures ... done
[10:50:47.010] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.010] |  Using SequentialFutureBackend ... done
[10:50:47.010] run() for Future (‘SequentialFuture’) ... done
[10:50:47.010] Created future:
[10:50:47.010] SequentialFuture:
[10:50:47.010] Label: ‘future_mapply-2’
[10:50:47.010] Expression:
[10:50:47.010] {
[10:50:47.010]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.010]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.010]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.010]         on.exit(options(oopts), add = TRUE)
[10:50:47.010]     }
[10:50:47.010]     {
[10:50:47.010]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.010]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.010]         do.call(mapply, args = args)
[10:50:47.010]     }
[10:50:47.010] }
[10:50:47.010] Lazy evaluation: FALSE
[10:50:47.010] Asynchronous evaluation: TRUE
[10:50:47.010] Local evaluation: TRUE
[10:50:47.010] Environment: R_GlobalEnv
[10:50:47.010] Capture standard output: TRUE
[10:50:47.010] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.010] Immediate condition classes: ‘immediateCondition’
[10:50:47.010] Globals: 5 objects totaling 905 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.010] Packages: <none>
[10:50:47.010] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.010] Resolved: TRUE
[10:50:47.010] Value: 91 bytes of class ‘list’
[10:50:47.010] Early signaling: FALSE
[10:50:47.010] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.010] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.011] Chunk #2 of 2 ... DONE
[10:50:47.011] Launching 2 futures (chunks) ... DONE
[10:50:47.011] Resolving 2 futures (chunks) ...
[10:50:47.012] value() on list ...
[10:50:47.012] |  recursive: 0
[10:50:47.013] |  length: 2
[10:50:47.013] |  
[10:50:47.013] |  Number of remaining objects: 2
[10:50:47.013] |  checking value #1 ...
[10:50:47.013] |  :  'obj' is SequentialFuture
[10:50:47.013] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.013] |  :  .  state: ‘finished’
[10:50:47.013] |  :  .  run: TRUE
[10:50:47.013] |  :  .  result: ‘FutureResult’
[10:50:47.013] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.014] |  :  SequentialFuture #1
[10:50:47.014] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.014] |  :  .  nx: 2
[10:50:47.014] |  :  .  relay: TRUE
[10:50:47.014] |  :  .  stdout: TRUE
[10:50:47.014] |  :  .  signal: TRUE
[10:50:47.014] |  :  .  resignal: FALSE
[10:50:47.014] |  :  .  force: TRUE
[10:50:47.014] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:47.014] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:47.015] |  :  .  until=1
[10:50:47.015] |  :  .  relaying element #1
[10:50:47.015] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.015] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.015] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.015] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.015] |  :  .  value: <list>
[10:50:47.015] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.015] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.016] |  :  .  nx: 2
[10:50:47.016] |  :  .  relay: TRUE
[10:50:47.016] |  :  .  stdout: TRUE
[10:50:47.016] |  :  .  signal: TRUE
[10:50:47.016] |  :  .  resignal: FALSE
[10:50:47.016] |  :  .  force: TRUE
[10:50:47.016] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.016] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.016] |  :  .  until=2
[10:50:47.016] |  :  .  relaying element #2
[10:50:47.016] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.016] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.017] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:47.017] |  :  length: 1 (resolved future 1)
[10:50:47.017] |  checking value #1 ... done
[10:50:47.017] |  checking value #2 ...
[10:50:47.017] |  :  'obj' is SequentialFuture
[10:50:47.017] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.017] |  :  .  state: ‘finished’
[10:50:47.017] |  :  .  run: TRUE
[10:50:47.017] |  :  .  result: ‘FutureResult’
[10:50:47.017] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.017] |  :  SequentialFuture #2
[10:50:47.018] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:47.018] |  :  .  nx: 2
[10:50:47.018] |  :  .  relay: TRUE
[10:50:47.018] |  :  .  stdout: TRUE
[10:50:47.018] |  :  .  signal: TRUE
[10:50:47.018] |  :  .  resignal: FALSE
[10:50:47.018] |  :  .  force: TRUE
[10:50:47.018] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.018] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.018] |  :  .  until=2
[10:50:47.018] |  :  .  relaying element #2
[10:50:47.019] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.019] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.019] |  :  signalConditionsASAP(SequentialFuture, pos=2) ... done
[10:50:47.019] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.019] |  :  .  value: <list>
[10:50:47.019] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.019] |  :  signalConditionsASAP(SequentialFuture, pos=2) ...
[10:50:47.019] |  :  .  nx: 2
[10:50:47.019] |  :  .  relay: TRUE
[10:50:47.019] |  :  .  stdout: TRUE
[10:50:47.019] |  :  .  signal: TRUE
[10:50:47.020] |  :  .  resignal: FALSE
[10:50:47.020] |  :  .  force: TRUE
[10:50:47.020] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.020] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.020] |  :  .  until=2
[10:50:47.020] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.020] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.020] |  :  signalConditionsASAP(SequentialFuture, pos=2) ... done
[10:50:47.020] |  :  length: 0 (resolved future 2)
[10:50:47.020] |  checking value #2 ... done
[10:50:47.020] |  Relaying remaining futures ...
[10:50:47.021] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.021] |  :  .  nx: 2
[10:50:47.021] |  :  .  relay: TRUE
[10:50:47.021] |  :  .  stdout: TRUE
[10:50:47.021] |  :  .  signal: TRUE
[10:50:47.021] |  :  .  resignal: FALSE
[10:50:47.021] |  :  .  force: TRUE
[10:50:47.021] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.021] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:47.021] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.021] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.021] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.022] |  Relaying remaining futures ... done
[10:50:47.022] value() on list ... done
[10:50:47.022]  - Number of value chunks collected: 2
[10:50:47.022] Resolving 2 futures (chunks) ... DONE
[10:50:47.022] Reducing values from 2 chunks ...
[10:50:47.022]  - Number of values collected after concatenation: 5
[10:50:47.022]  - Number of values expected: 5
[10:50:47.022] Reverse index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:47.022] Reducing values from 2 chunks ... DONE
[10:50:47.022] future_mapply() ... DONE
[10:50:47.023] future_mapply() ...
[10:50:47.023] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.023] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.023] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.023] Number of chunks: 1
[10:50:47.023] getGlobalsAndPackagesXApply() ...
[10:50:47.023]  - future.globals: TRUE
[10:50:47.023] getGlobalsAndPackages() ...
[10:50:47.023] |  Searching for globals ...
[10:50:47.025] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:47.025] |  Searching for globals ... DONE
[10:50:47.025] |  Resolving globals: FALSE
[10:50:47.025] |  Search for packages associated with the globals ...
[10:50:47.025] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.025] |  :  Packages: [1] ‘base’
[10:50:47.026] |  Search for packages associated with the globals ... DONE
[10:50:47.026] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:47.026] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:47.026] |  Packages after dropping 'base': [0] 
[10:50:47.026] |  globals: [1] ‘FUN’
[10:50:47.026] |  packages: [0] 
[10:50:47.026] getGlobalsAndPackages() ... done
[10:50:47.027]  - globals found/used: [n=1] ‘FUN’
[10:50:47.027]  - needed namespaces: [n=0] 
[10:50:47.027] Finding globals ... DONE
[10:50:47.027] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.027] List of 2
[10:50:47.027]  $ ...future.FUN:function (C, k)  
[10:50:47.027]  $ MoreArgs     : list()
[10:50:47.027]  - attr(*, "where")=List of 2
[10:50:47.027]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.027]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.027]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.027]  - attr(*, "resolved")= logi FALSE
[10:50:47.027]  - attr(*, "total_size")= num NA
[10:50:47.030] Packages to be attached in all futures: [n=0] 
[10:50:47.030] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.031] Number of futures (= number of chunks): 1
[10:50:47.031] Launching 1 futures (chunks) ...
[10:50:47.031] Chunk #1 of 1 ...
[10:50:47.031]  - Finding globals in '...' for chunk #1 ...
[10:50:47.031] getGlobalsAndPackages() ...
[10:50:47.031] |  Searching for globals ...
[10:50:47.032] |  :  globals found: [0] 
[10:50:47.032] |  Searching for globals ... DONE
[10:50:47.032] |  globals: [0] <none>
[10:50:47.032] |  packages: [0] <none>
[10:50:47.032] getGlobalsAndPackages() ... done
[10:50:47.032]    + additional globals found: [n=0] 
[10:50:47.032]    + additional namespaces needed: [n=0] 
[10:50:47.032]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.032]  - seeds: <none>
[10:50:47.032]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.032] getGlobalsAndPackages() ...
[10:50:47.033] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.033] |  Resolving globals: FALSE
[10:50:47.033] |  Search for packages associated with the globals ...
[10:50:47.033] |  :  Packages associated with globals: [0] 
[10:50:47.033] |  :  Packages: [0] 
[10:50:47.033] |  Search for packages associated with the globals ... DONE
[10:50:47.033] |  Packages after dropping 'base': [0] 
[10:50:47.034] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.034] |  packages: [0] 
[10:50:47.034] getGlobalsAndPackages() ... done
[10:50:47.034] run() for Future (‘Future’) ...
[10:50:47.034] |  state: ‘created’
[10:50:47.034] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.034] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.034] |  Using SequentialFutureBackend ...
[10:50:47.034] |  :  Launching futures ...
[10:50:47.035] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.035] |  :  .  |  getFutureData() ...
[10:50:47.035] |  :  .  |  :  getFutureCore() ...
[10:50:47.035] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.035] |  :  .  |  :  getFutureCore() ... done
[10:50:47.035] |  :  .  |  :  getFutureCapture() ...
[10:50:47.035] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.035] |  :  .  |  :  getFutureContext() ...
[10:50:47.035] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.035] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.036] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.036] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.036] |  :  .  |  :  getFutureContext() ... done
[10:50:47.036] |  :  .  |  getFutureData() ... done
[10:50:47.036] |  :  .  |  attachPackages() ...
[10:50:47.036] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.036] |  :  .  |  attachPackages() ... DONE
[10:50:47.036] |  :  .  |  attachPackages() ...
[10:50:47.036] |  :  .  |  :  packages: [n=0] 
[10:50:47.036] |  :  .  |  attachPackages() ... DONE
[10:50:47.037] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.037] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.037] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.037] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.037] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.038] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.038] |  :  .  |  :  .  |  New stack:
[10:50:47.038] |  :  .  |  :  .  |  List of 1
[10:50:47.038] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.038] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.038] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.038] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.038] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.038] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.038] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.040] |  :  .  |  :  .  |  Old stack:
[10:50:47.040] |  :  .  |  :  .  |  List of 1
[10:50:47.040] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.040] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.040] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.040] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.040] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.040] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.040] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.040] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.040] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.040] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.043] |  :  .  |  :  .  |  Not identical
[10:50:47.043] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.043] |  :  .  |  :  .  |  :  List of 2
[10:50:47.043] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.043] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.043] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.043] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.043] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.048] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.048] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.048] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.048] |  :  .  |  :  .  List of future strategies:
[10:50:47.048] |  :  .  |  :  .  1. sequential:
[10:50:47.048] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.048] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.048] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.049] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.049] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.049] |  :  .  |  assign_globals() ...
[10:50:47.049] |  :  .  |  List of 5
[10:50:47.049] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:47.049] |  :  .  |   $ MoreArgs                 : list()
[10:50:47.049] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.049] |  :  .  |    ..$ :List of 5
[10:50:47.049] |  :  .  |    .. ..$ : chr "A"
[10:50:47.049] |  :  .  |    .. ..$ : chr "B"
[10:50:47.049] |  :  .  |    .. ..$ : chr "C"
[10:50:47.049] |  :  .  |    .. ..$ : chr "D"
[10:50:47.049] |  :  .  |    .. ..$ : chr "E"
[10:50:47.049] |  :  .  |    ..$ :List of 5
[10:50:47.049] |  :  .  |    .. ..$ : int 5
[10:50:47.049] |  :  .  |    .. ..$ : int 4
[10:50:47.049] |  :  .  |    .. ..$ : int 3
[10:50:47.049] |  :  .  |    .. ..$ : int 2
[10:50:47.049] |  :  .  |    .. ..$ : int 1
[10:50:47.049] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.049] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.049] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.049] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.049] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.049] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.049] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.049] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.049] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.049] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.049] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.049] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.057] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:47.057] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.057] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.057] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.057] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.057] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.057] |  :  .  |  assign_globals() ... done
[10:50:47.058] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.059] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.059] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.059] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.059] |  :  .  |  :  .  |  :  New stack:
[10:50:47.059] |  :  .  |  :  .  |  :  List of 1
[10:50:47.059] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.059] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.059] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.059] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.059] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.059] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.059] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.059] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.059] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.059] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.062] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.062] |  :  .  |  :  .  |  :  List of 1
[10:50:47.062] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.062] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.062] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.062] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.062] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.062] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.062] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.062] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.066] |  :  .  |  :  .  |  :  Identical
[10:50:47.066] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.066] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.067] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.067] |  :  .  |  :  .  |  1. sequential:
[10:50:47.067] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.067] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.067] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.067] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.067] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.067] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.068] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.068] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.068] |  :  Launching futures ... done
[10:50:47.068] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.068] |  Using SequentialFutureBackend ... done
[10:50:47.068] run() for Future (‘SequentialFuture’) ... done
[10:50:47.068] Created future:
[10:50:47.068] SequentialFuture:
[10:50:47.068] Label: ‘future_.mapply-1’
[10:50:47.068] Expression:
[10:50:47.068] {
[10:50:47.068]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.068]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.068]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.068]         on.exit(options(oopts), add = TRUE)
[10:50:47.068]     }
[10:50:47.068]     {
[10:50:47.068]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.068]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.068]         do.call(mapply, args = args)
[10:50:47.068]     }
[10:50:47.068] }
[10:50:47.068] Lazy evaluation: FALSE
[10:50:47.068] Asynchronous evaluation: TRUE
[10:50:47.068] Local evaluation: TRUE
[10:50:47.068] Environment: R_GlobalEnv
[10:50:47.068] Capture standard output: TRUE
[10:50:47.068] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.068] Immediate condition classes: ‘immediateCondition’
[10:50:47.068] Globals: 5 objects totaling 967 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 192 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.068] Packages: <none>
[10:50:47.068] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.068] Resolved: TRUE
[10:50:47.068] Value: 126 bytes of class ‘list’
[10:50:47.068] Early signaling: FALSE
[10:50:47.068] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.068] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.069] Chunk #1 of 1 ... DONE
[10:50:47.069] Launching 1 futures (chunks) ... DONE
[10:50:47.069] Resolving 1 futures (chunks) ...
[10:50:47.069] value() on list ...
[10:50:47.070] |  recursive: 0
[10:50:47.070] |  length: 1
[10:50:47.070] |  
[10:50:47.070] |  Number of remaining objects: 1
[10:50:47.070] |  checking value #1 ...
[10:50:47.070] |  :  'obj' is SequentialFuture
[10:50:47.070] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.070] |  :  .  state: ‘finished’
[10:50:47.070] |  :  .  run: TRUE
[10:50:47.070] |  :  .  result: ‘FutureResult’
[10:50:47.070] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.071] |  :  SequentialFuture #1
[10:50:47.071] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.071] |  :  .  nx: 1
[10:50:47.071] |  :  .  relay: TRUE
[10:50:47.071] |  :  .  stdout: TRUE
[10:50:47.071] |  :  .  signal: TRUE
[10:50:47.071] |  :  .  resignal: FALSE
[10:50:47.071] |  :  .  force: TRUE
[10:50:47.071] |  :  .  relayed: [n=1] FALSE
[10:50:47.071] |  :  .  queued futures: [n=1] FALSE
[10:50:47.071] |  :  .  until=1
[10:50:47.071] |  :  .  relaying element #1
[10:50:47.072] |  :  .  relayed: [n=1] TRUE
[10:50:47.072] |  :  .  queued futures: [n=1] TRUE
[10:50:47.072] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.072] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.072] |  :  .  value: <list>
[10:50:47.072] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.072] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.072] |  :  .  nx: 1
[10:50:47.072] |  :  .  relay: TRUE
[10:50:47.073] |  :  .  stdout: TRUE
[10:50:47.073] |  :  .  signal: TRUE
[10:50:47.073] |  :  .  resignal: FALSE
[10:50:47.073] |  :  .  force: TRUE
[10:50:47.073] |  :  .  relayed: [n=1] TRUE
[10:50:47.073] |  :  .  queued futures: [n=1] TRUE
[10:50:47.073] |  :  .  until=1
[10:50:47.073] |  :  .  relayed: [n=1] TRUE
[10:50:47.073] |  :  .  queued futures: [n=1] TRUE
[10:50:47.073] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.073] |  :  length: 0 (resolved future 1)
[10:50:47.073] |  checking value #1 ... done
[10:50:47.074] |  Relaying remaining futures ...
[10:50:47.074] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.074] |  :  .  nx: 1
[10:50:47.074] |  :  .  relay: TRUE
[10:50:47.074] |  :  .  stdout: TRUE
[10:50:47.074] |  :  .  signal: TRUE
[10:50:47.074] |  :  .  resignal: FALSE
[10:50:47.074] |  :  .  force: TRUE
[10:50:47.074] |  :  .  relayed: [n=1] TRUE
[10:50:47.074] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.074] |  :  .  relayed: [n=1] TRUE
[10:50:47.075] |  :  .  queued futures: [n=1] TRUE
[10:50:47.075] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.075] |  Relaying remaining futures ... done
[10:50:47.075] value() on list ... done
[10:50:47.075]  - Number of value chunks collected: 1
[10:50:47.075] Resolving 1 futures (chunks) ... DONE
[10:50:47.075] Reducing values from 1 chunks ...
[10:50:47.075]  - Number of values collected after concatenation: 5
[10:50:47.075]  - Number of values expected: 5
[10:50:47.075] Reducing values from 1 chunks ... DONE
[10:50:47.075] future_mapply() ... DONE
- Subsetting (Issue #17) ...
[10:50:47.076] future_mapply() ...
[10:50:47.076] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.076] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.076] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.076] Number of chunks: 1
[10:50:47.076] getGlobalsAndPackagesXApply() ...
[10:50:47.077]  - future.globals: TRUE
[10:50:47.077] getGlobalsAndPackages() ...
[10:50:47.077] |  Searching for globals ...
[10:50:47.078] |  :  globals found: [1] ‘FUN’
[10:50:47.078] |  Searching for globals ... DONE
[10:50:47.078] |  Resolving globals: FALSE
[10:50:47.078] |  Search for packages associated with the globals ...
[10:50:47.078] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.078] |  :  Packages: [1] ‘base’
[10:50:47.079] |  Search for packages associated with the globals ... DONE
[10:50:47.079] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:47.079] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:47.079] |  Packages after dropping 'base': [0] 
[10:50:47.079] |  globals: [1] ‘FUN’
[10:50:47.079] |  packages: [0] 
[10:50:47.079] getGlobalsAndPackages() ... done
[10:50:47.079]  - globals found/used: [n=1] ‘FUN’
[10:50:47.080]  - needed namespaces: [n=0] 
[10:50:47.080] Finding globals ... DONE
[10:50:47.080] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.080] List of 2
[10:50:47.080]  $ ...future.FUN:function (x)  
[10:50:47.080]  $ MoreArgs     : NULL
[10:50:47.080]  - attr(*, "where")=List of 2
[10:50:47.080]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.080]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.080]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.080]  - attr(*, "resolved")= logi FALSE
[10:50:47.080]  - attr(*, "total_size")= num NA
[10:50:47.082] Packages to be attached in all futures: [n=0] 
[10:50:47.083] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.083] Number of futures (= number of chunks): 1
[10:50:47.083] Launching 1 futures (chunks) ...
[10:50:47.083] Chunk #1 of 1 ...
[10:50:47.083]  - Finding globals in '...' for chunk #1 ...
[10:50:47.083] getGlobalsAndPackages() ...
[10:50:47.083] |  Searching for globals ...
[10:50:47.084] |  :  globals found: [0] 
[10:50:47.085] |  Searching for globals ... DONE
[10:50:47.085] |  globals: [0] <none>
[10:50:47.085] |  packages: [0] <none>
[10:50:47.085] getGlobalsAndPackages() ... done
[10:50:47.085]    + additional globals found: [n=0] 
[10:50:47.085]    + additional namespaces needed: [n=0] 
[10:50:47.085]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.085]  - seeds: <none>
[10:50:47.085]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.085] getGlobalsAndPackages() ...
[10:50:47.086] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.086] |  Resolving globals: FALSE
[10:50:47.086] |  Search for packages associated with the globals ...
[10:50:47.086] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.086] |  :  Packages: [1] ‘base’
[10:50:47.086] |  Search for packages associated with the globals ... DONE
[10:50:47.086] |  Packages after dropping 'base': [0] 
[10:50:47.087] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.087] |  packages: [0] 
[10:50:47.087] getGlobalsAndPackages() ... done
[10:50:47.087] run() for Future (‘Future’) ...
[10:50:47.087] |  state: ‘created’
[10:50:47.087] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.087] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.087] |  Using SequentialFutureBackend ...
[10:50:47.087] |  :  Launching futures ...
[10:50:47.088] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.088] |  :  .  |  getFutureData() ...
[10:50:47.088] |  :  .  |  :  getFutureCore() ...
[10:50:47.088] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.088] |  :  .  |  :  getFutureCore() ... done
[10:50:47.088] |  :  .  |  :  getFutureCapture() ...
[10:50:47.088] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.088] |  :  .  |  :  getFutureContext() ...
[10:50:47.088] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.088] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.089] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.089] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.089] |  :  .  |  :  getFutureContext() ... done
[10:50:47.089] |  :  .  |  getFutureData() ... done
[10:50:47.089] |  :  .  |  attachPackages() ...
[10:50:47.089] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.089] |  :  .  |  attachPackages() ... DONE
[10:50:47.089] |  :  .  |  attachPackages() ...
[10:50:47.089] |  :  .  |  :  packages: [n=0] 
[10:50:47.090] |  :  .  |  attachPackages() ... DONE
[10:50:47.090] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.090] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.090] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.090] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.090] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.091] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.091] |  :  .  |  :  .  |  New stack:
[10:50:47.091] |  :  .  |  :  .  |  List of 1
[10:50:47.091] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.091] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.091] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.091] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.091] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.091] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.091] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.093] |  :  .  |  :  .  |  Old stack:
[10:50:47.093] |  :  .  |  :  .  |  List of 1
[10:50:47.093] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.093] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.093] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.093] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.093] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.093] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.093] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.093] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.093] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.093] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.096] |  :  .  |  :  .  |  Not identical
[10:50:47.096] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.096] |  :  .  |  :  .  |  :  List of 2
[10:50:47.096] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.096] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.096] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.096] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.096] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.100] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.101] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.101] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.101] |  :  .  |  :  .  List of future strategies:
[10:50:47.101] |  :  .  |  :  .  1. sequential:
[10:50:47.101] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.101] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.101] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.103] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.103] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.103] |  :  .  |  assign_globals() ...
[10:50:47.103] |  :  .  |  List of 5
[10:50:47.103] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:47.103] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.103] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.103] |  :  .  |    ..$ :List of 1
[10:50:47.103] |  :  .  |    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:47.103] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.103] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.103] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.103] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.103] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.103] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.103] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.103] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.103] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.103] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.103] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.103] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.108] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.109] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.109] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.109] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.109] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.109] |  :  .  |  assign_globals() ... done
[10:50:47.110] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.111] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.111] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.111] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.111] |  :  .  |  :  .  |  :  New stack:
[10:50:47.111] |  :  .  |  :  .  |  :  List of 1
[10:50:47.111] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.111] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.111] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.111] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.111] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.111] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.111] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.111] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.111] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.111] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.114] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.114] |  :  .  |  :  .  |  :  List of 1
[10:50:47.114] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.114] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.114] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.114] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.114] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.114] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.114] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.114] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.114] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.114] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.117] |  :  .  |  :  .  |  :  Identical
[10:50:47.117] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.117] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.117] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.117] |  :  .  |  :  .  |  1. sequential:
[10:50:47.117] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.117] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.117] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.117] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.117] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.118] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.118] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.118] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.118] |  :  Launching futures ... done
[10:50:47.118] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.118] |  Using SequentialFutureBackend ... done
[10:50:47.118] run() for Future (‘SequentialFuture’) ... done
[10:50:47.118] Created future:
[10:50:47.118] SequentialFuture:
[10:50:47.118] Label: ‘future_mapply-1’
[10:50:47.118] Expression:
[10:50:47.118] {
[10:50:47.118]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.118]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.118]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.118]         on.exit(options(oopts), add = TRUE)
[10:50:47.118]     }
[10:50:47.118]     {
[10:50:47.118]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.118]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.118]         do.call(mapply, args = args)
[10:50:47.118]     }
[10:50:47.118] }
[10:50:47.118] Lazy evaluation: FALSE
[10:50:47.118] Asynchronous evaluation: TRUE
[10:50:47.118] Local evaluation: TRUE
[10:50:47.118] Environment: R_GlobalEnv
[10:50:47.118] Capture standard output: TRUE
[10:50:47.118] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.118] Immediate condition classes: ‘immediateCondition’
[10:50:47.118] Globals: 5 objects totaling 366 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.118] Packages: <none>
[10:50:47.118] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.118] Resolved: TRUE
[10:50:47.118] Value: 92 bytes of class ‘list’
[10:50:47.118] Early signaling: FALSE
[10:50:47.118] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.118] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.119] Chunk #1 of 1 ... DONE
[10:50:47.119] Launching 1 futures (chunks) ... DONE
[10:50:47.119] Resolving 1 futures (chunks) ...
[10:50:47.119] value() on list ...
[10:50:47.120] |  recursive: 0
[10:50:47.120] |  length: 1
[10:50:47.120] |  
[10:50:47.120] |  Number of remaining objects: 1
[10:50:47.120] |  checking value #1 ...
[10:50:47.120] |  :  'obj' is SequentialFuture
[10:50:47.120] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.120] |  :  .  state: ‘finished’
[10:50:47.120] |  :  .  run: TRUE
[10:50:47.120] |  :  .  result: ‘FutureResult’
[10:50:47.120] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.120] |  :  SequentialFuture #1
[10:50:47.121] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.121] |  :  .  nx: 1
[10:50:47.122] |  :  .  relay: TRUE
[10:50:47.122] |  :  .  stdout: TRUE
[10:50:47.122] |  :  .  signal: TRUE
[10:50:47.122] |  :  .  resignal: FALSE
[10:50:47.122] |  :  .  force: TRUE
[10:50:47.122] |  :  .  relayed: [n=1] FALSE
[10:50:47.122] |  :  .  queued futures: [n=1] FALSE
[10:50:47.122] |  :  .  until=1
[10:50:47.122] |  :  .  relaying element #1
[10:50:47.123] |  :  .  relayed: [n=1] TRUE
[10:50:47.123] |  :  .  queued futures: [n=1] TRUE
[10:50:47.123] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.123] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.123] |  :  .  value: <list>
[10:50:47.123] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.123] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.123] |  :  .  nx: 1
[10:50:47.123] |  :  .  relay: TRUE
[10:50:47.124] |  :  .  stdout: TRUE
[10:50:47.124] |  :  .  signal: TRUE
[10:50:47.124] |  :  .  resignal: FALSE
[10:50:47.124] |  :  .  force: TRUE
[10:50:47.124] |  :  .  relayed: [n=1] TRUE
[10:50:47.124] |  :  .  queued futures: [n=1] TRUE
[10:50:47.124] |  :  .  until=1
[10:50:47.124] |  :  .  relayed: [n=1] TRUE
[10:50:47.124] |  :  .  queued futures: [n=1] TRUE
[10:50:47.124] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.124] |  :  length: 0 (resolved future 1)
[10:50:47.125] |  checking value #1 ... done
[10:50:47.125] |  Relaying remaining futures ...
[10:50:47.125] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.125] |  :  .  nx: 1
[10:50:47.125] |  :  .  relay: TRUE
[10:50:47.125] |  :  .  stdout: TRUE
[10:50:47.125] |  :  .  signal: TRUE
[10:50:47.125] |  :  .  resignal: FALSE
[10:50:47.125] |  :  .  force: TRUE
[10:50:47.125] |  :  .  relayed: [n=1] TRUE
[10:50:47.125] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.126] |  :  .  relayed: [n=1] TRUE
[10:50:47.126] |  :  .  queued futures: [n=1] TRUE
[10:50:47.126] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.126] |  Relaying remaining futures ... done
[10:50:47.126] value() on list ... done
[10:50:47.126]  - Number of value chunks collected: 1
[10:50:47.126] Resolving 1 futures (chunks) ... DONE
[10:50:47.126] Reducing values from 1 chunks ...
[10:50:47.126]  - Number of values collected after concatenation: 1
[10:50:47.126]  - Number of values expected: 1
[10:50:47.126] Reducing values from 1 chunks ... DONE
[10:50:47.127] future_mapply() ... DONE
[10:50:47.127] future_mapply() ...
[10:50:47.127] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.127] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.127] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.127] Number of chunks: 1
[10:50:47.127] getGlobalsAndPackagesXApply() ...
[10:50:47.127]  - future.globals: TRUE
[10:50:47.127] getGlobalsAndPackages() ...
[10:50:47.128] |  Searching for globals ...
[10:50:47.128] |  :  globals found: [1] ‘FUN’
[10:50:47.129] |  Searching for globals ... DONE
[10:50:47.129] |  Resolving globals: FALSE
[10:50:47.129] |  Search for packages associated with the globals ...
[10:50:47.129] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.129] |  :  Packages: [1] ‘base’
[10:50:47.129] |  Search for packages associated with the globals ... DONE
[10:50:47.129] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:47.130] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:47.130] |  Packages after dropping 'base': [0] 
[10:50:47.130] |  globals: [1] ‘FUN’
[10:50:47.130] |  packages: [0] 
[10:50:47.130] getGlobalsAndPackages() ... done
[10:50:47.130]  - globals found/used: [n=1] ‘FUN’
[10:50:47.130]  - needed namespaces: [n=0] 
[10:50:47.130] Finding globals ... DONE
[10:50:47.131] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.131] List of 2
[10:50:47.131]  $ ...future.FUN:function (x)  
[10:50:47.131]  $ MoreArgs     : list()
[10:50:47.131]  - attr(*, "where")=List of 2
[10:50:47.131]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.131]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.131]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.131]  - attr(*, "resolved")= logi FALSE
[10:50:47.131]  - attr(*, "total_size")= num NA
[10:50:47.133] Packages to be attached in all futures: [n=0] 
[10:50:47.133] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.133] Number of futures (= number of chunks): 1
[10:50:47.133] Launching 1 futures (chunks) ...
[10:50:47.134] Chunk #1 of 1 ...
[10:50:47.134]  - Finding globals in '...' for chunk #1 ...
[10:50:47.134] getGlobalsAndPackages() ...
[10:50:47.134] |  Searching for globals ...
[10:50:47.134] |  :  globals found: [0] 
[10:50:47.134] |  Searching for globals ... DONE
[10:50:47.134] |  globals: [0] <none>
[10:50:47.134] |  packages: [0] <none>
[10:50:47.134] getGlobalsAndPackages() ... done
[10:50:47.135]    + additional globals found: [n=0] 
[10:50:47.135]    + additional namespaces needed: [n=0] 
[10:50:47.135]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.135]  - seeds: <none>
[10:50:47.135]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.135] getGlobalsAndPackages() ...
[10:50:47.135] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.135] |  Resolving globals: FALSE
[10:50:47.135] |  Search for packages associated with the globals ...
[10:50:47.135] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.136] |  :  Packages: [1] ‘base’
[10:50:47.136] |  Search for packages associated with the globals ... DONE
[10:50:47.136] |  Packages after dropping 'base': [0] 
[10:50:47.136] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.136] |  packages: [0] 
[10:50:47.136] getGlobalsAndPackages() ... done
[10:50:47.136] run() for Future (‘Future’) ...
[10:50:47.137] |  state: ‘created’
[10:50:47.137] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.137] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.137] |  Using SequentialFutureBackend ...
[10:50:47.137] |  :  Launching futures ...
[10:50:47.137] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.137] |  :  .  |  getFutureData() ...
[10:50:47.137] |  :  .  |  :  getFutureCore() ...
[10:50:47.137] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.137] |  :  .  |  :  getFutureCore() ... done
[10:50:47.137] |  :  .  |  :  getFutureCapture() ...
[10:50:47.138] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.138] |  :  .  |  :  getFutureContext() ...
[10:50:47.138] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.138] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.138] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.138] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.138] |  :  .  |  :  getFutureContext() ... done
[10:50:47.138] |  :  .  |  getFutureData() ... done
[10:50:47.138] |  :  .  |  attachPackages() ...
[10:50:47.138] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.139] |  :  .  |  attachPackages() ... DONE
[10:50:47.139] |  :  .  |  attachPackages() ...
[10:50:47.139] |  :  .  |  :  packages: [n=0] 
[10:50:47.139] |  :  .  |  attachPackages() ... DONE
[10:50:47.139] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.139] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.139] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.140] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.140] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.140] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.141] |  :  .  |  :  .  |  New stack:
[10:50:47.141] |  :  .  |  :  .  |  List of 1
[10:50:47.141] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.141] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.141] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.141] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.141] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.141] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.141] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.143] |  :  .  |  :  .  |  Old stack:
[10:50:47.143] |  :  .  |  :  .  |  List of 1
[10:50:47.143] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.143] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.143] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.143] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.143] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.143] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.143] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.143] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.143] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.143] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.146] |  :  .  |  :  .  |  Not identical
[10:50:47.146] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.147] |  :  .  |  :  .  |  :  List of 2
[10:50:47.147] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.147] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.147] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.147] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.151] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.151] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.151] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.151] |  :  .  |  :  .  List of future strategies:
[10:50:47.151] |  :  .  |  :  .  1. sequential:
[10:50:47.151] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.151] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.151] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.152] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.152] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.152] |  :  .  |  assign_globals() ...
[10:50:47.152] |  :  .  |  List of 5
[10:50:47.152] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:47.152] |  :  .  |   $ MoreArgs                 : list()
[10:50:47.152] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.152] |  :  .  |    ..$ :List of 1
[10:50:47.152] |  :  .  |    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:47.152] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.152] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.152] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.152] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.152] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.152] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.152] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.152] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.152] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.152] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.152] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.152] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.156] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.156] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.157] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.157] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.157] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.157] |  :  .  |  assign_globals() ... done
[10:50:47.159] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.160] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.160] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.160] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.160] |  :  .  |  :  .  |  :  New stack:
[10:50:47.160] |  :  .  |  :  .  |  :  List of 1
[10:50:47.160] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.160] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.160] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.160] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.160] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.160] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.160] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.160] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.160] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.160] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.163] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.163] |  :  .  |  :  .  |  :  List of 1
[10:50:47.163] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.163] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.163] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.163] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.163] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.163] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.163] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.163] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.163] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.163] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.166] |  :  .  |  :  .  |  :  Identical
[10:50:47.166] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.166] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.166] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.166] |  :  .  |  :  .  |  1. sequential:
[10:50:47.166] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.166] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.166] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.167] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.167] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.167] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.167] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.167] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.167] |  :  Launching futures ... done
[10:50:47.167] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.168] |  Using SequentialFutureBackend ... done
[10:50:47.168] run() for Future (‘SequentialFuture’) ... done
[10:50:47.168] Created future:
[10:50:47.168] SequentialFuture:
[10:50:47.168] Label: ‘future_.mapply-1’
[10:50:47.168] Expression:
[10:50:47.168] {
[10:50:47.168]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.168]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.168]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.168]         on.exit(options(oopts), add = TRUE)
[10:50:47.168]     }
[10:50:47.168]     {
[10:50:47.168]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.168]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.168]         do.call(mapply, args = args)
[10:50:47.168]     }
[10:50:47.168] }
[10:50:47.168] Lazy evaluation: FALSE
[10:50:47.168] Asynchronous evaluation: TRUE
[10:50:47.168] Local evaluation: TRUE
[10:50:47.168] Environment: R_GlobalEnv
[10:50:47.168] Capture standard output: TRUE
[10:50:47.168] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.168] Immediate condition classes: ‘immediateCondition’
[10:50:47.168] Globals: 5 objects totaling 370 bytes (function ‘...future.FUN’ of 185 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.168] Packages: <none>
[10:50:47.168] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.168] Resolved: TRUE
[10:50:47.168] Value: 92 bytes of class ‘list’
[10:50:47.168] Early signaling: FALSE
[10:50:47.168] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.168] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.169] Chunk #1 of 1 ... DONE
[10:50:47.169] Launching 1 futures (chunks) ... DONE
[10:50:47.169] Resolving 1 futures (chunks) ...
[10:50:47.169] value() on list ...
[10:50:47.169] |  recursive: 0
[10:50:47.169] |  length: 1
[10:50:47.169] |  
[10:50:47.169] |  Number of remaining objects: 1
[10:50:47.169] |  checking value #1 ...
[10:50:47.169] |  :  'obj' is SequentialFuture
[10:50:47.170] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.170] |  :  .  state: ‘finished’
[10:50:47.170] |  :  .  run: TRUE
[10:50:47.170] |  :  .  result: ‘FutureResult’
[10:50:47.170] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.170] |  :  SequentialFuture #1
[10:50:47.170] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.170] |  :  .  nx: 1
[10:50:47.170] |  :  .  relay: TRUE
[10:50:47.170] |  :  .  stdout: TRUE
[10:50:47.170] |  :  .  signal: TRUE
[10:50:47.171] |  :  .  resignal: FALSE
[10:50:47.171] |  :  .  force: TRUE
[10:50:47.171] |  :  .  relayed: [n=1] FALSE
[10:50:47.171] |  :  .  queued futures: [n=1] FALSE
[10:50:47.171] |  :  .  until=1
[10:50:47.171] |  :  .  relaying element #1
[10:50:47.171] |  :  .  relayed: [n=1] TRUE
[10:50:47.171] |  :  .  queued futures: [n=1] TRUE
[10:50:47.171] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.171] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.172] |  :  .  value: <list>
[10:50:47.172] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.172] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.172] |  :  .  nx: 1
[10:50:47.172] |  :  .  relay: TRUE
[10:50:47.172] |  :  .  stdout: TRUE
[10:50:47.172] |  :  .  signal: TRUE
[10:50:47.172] |  :  .  resignal: FALSE
[10:50:47.172] |  :  .  force: TRUE
[10:50:47.172] |  :  .  relayed: [n=1] TRUE
[10:50:47.172] |  :  .  queued futures: [n=1] TRUE
[10:50:47.172] |  :  .  until=1
[10:50:47.173] |  :  .  relayed: [n=1] TRUE
[10:50:47.173] |  :  .  queued futures: [n=1] TRUE
[10:50:47.173] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.173] |  :  length: 0 (resolved future 1)
[10:50:47.173] |  checking value #1 ... done
[10:50:47.173] |  Relaying remaining futures ...
[10:50:47.173] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.173] |  :  .  nx: 1
[10:50:47.173] |  :  .  relay: TRUE
[10:50:47.173] |  :  .  stdout: TRUE
[10:50:47.173] |  :  .  signal: TRUE
[10:50:47.174] |  :  .  resignal: FALSE
[10:50:47.174] |  :  .  force: TRUE
[10:50:47.174] |  :  .  relayed: [n=1] TRUE
[10:50:47.174] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.174] |  :  .  relayed: [n=1] TRUE
[10:50:47.174] |  :  .  queued futures: [n=1] TRUE
[10:50:47.174] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.174] |  Relaying remaining futures ... done
[10:50:47.174] value() on list ... done
[10:50:47.174]  - Number of value chunks collected: 1
[10:50:47.174] Resolving 1 futures (chunks) ... DONE
[10:50:47.175] Reducing values from 1 chunks ...
[10:50:47.175]  - Number of values collected after concatenation: 1
[10:50:47.175]  - Number of values expected: 1
[10:50:47.175] Reducing values from 1 chunks ... DONE
[10:50:47.175] future_mapply() ... DONE
- Non-recycling of MoreArgs (Issue #51) ...
[10:50:47.175] future_mapply() ...
[10:50:47.175] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.175] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.175] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.176] Number of chunks: 1
[10:50:47.176] getGlobalsAndPackagesXApply() ...
[10:50:47.176]  - future.globals: TRUE
[10:50:47.176] getGlobalsAndPackages() ...
[10:50:47.176] |  Searching for globals ...
[10:50:47.178] |  :  globals found: [1] ‘FUN’
[10:50:47.178] |  Searching for globals ... DONE
[10:50:47.178] |  Resolving globals: FALSE
[10:50:47.178] |  Search for packages associated with the globals ...
[10:50:47.178] |  :  Packages associated with globals: [0] 
[10:50:47.178] |  :  Packages: [0] 
[10:50:47.179] |  Search for packages associated with the globals ... DONE
[10:50:47.179] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:47.179] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:47.179] |  Packages after dropping 'base': [0] 
[10:50:47.179] |  globals: [1] ‘FUN’
[10:50:47.179] |  packages: [0] 
[10:50:47.179] getGlobalsAndPackages() ... done
[10:50:47.180]  - globals found/used: [n=1] ‘FUN’
[10:50:47.180]  - needed namespaces: [n=0] 
[10:50:47.180] Finding globals ... DONE
[10:50:47.180] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.180] List of 2
[10:50:47.180]  $ ...future.FUN:function (x, y)  
[10:50:47.180]  $ MoreArgs     :List of 1
[10:50:47.180]   ..$ y: int [1:2] 3 4
[10:50:47.180]  - attr(*, "where")=List of 2
[10:50:47.180]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.180]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.180]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.180]  - attr(*, "resolved")= logi FALSE
[10:50:47.180]  - attr(*, "total_size")= num NA
[10:50:47.183] Packages to be attached in all futures: [n=0] 
[10:50:47.183] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.183] Number of futures (= number of chunks): 1
[10:50:47.183] Launching 1 futures (chunks) ...
[10:50:47.183] Chunk #1 of 1 ...
[10:50:47.184]  - Finding globals in '...' for chunk #1 ...
[10:50:47.184] getGlobalsAndPackages() ...
[10:50:47.184] |  Searching for globals ...
[10:50:47.184] |  :  globals found: [0] 
[10:50:47.184] |  Searching for globals ... DONE
[10:50:47.184] |  globals: [0] <none>
[10:50:47.184] |  packages: [0] <none>
[10:50:47.184] getGlobalsAndPackages() ... done
[10:50:47.185]    + additional globals found: [n=0] 
[10:50:47.185]    + additional namespaces needed: [n=0] 
[10:50:47.185]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.185]  - seeds: <none>
[10:50:47.185]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.185] getGlobalsAndPackages() ...
[10:50:47.185] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.185] |  Resolving globals: FALSE
[10:50:47.185] |  Search for packages associated with the globals ...
[10:50:47.185] |  :  Packages associated with globals: [0] 
[10:50:47.186] |  :  Packages: [0] 
[10:50:47.186] |  Search for packages associated with the globals ... DONE
[10:50:47.186] |  Packages after dropping 'base': [0] 
[10:50:47.186] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.186] |  packages: [0] 
[10:50:47.186] getGlobalsAndPackages() ... done
[10:50:47.186] run() for Future (‘Future’) ...
[10:50:47.186] |  state: ‘created’
[10:50:47.187] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.187] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.187] |  Using SequentialFutureBackend ...
[10:50:47.187] |  :  Launching futures ...
[10:50:47.187] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.187] |  :  .  |  getFutureData() ...
[10:50:47.187] |  :  .  |  :  getFutureCore() ...
[10:50:47.187] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.187] |  :  .  |  :  getFutureCore() ... done
[10:50:47.187] |  :  .  |  :  getFutureCapture() ...
[10:50:47.188] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.188] |  :  .  |  :  getFutureContext() ...
[10:50:47.188] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.188] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.188] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.188] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.188] |  :  .  |  :  getFutureContext() ... done
[10:50:47.188] |  :  .  |  getFutureData() ... done
[10:50:47.188] |  :  .  |  attachPackages() ...
[10:50:47.188] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.189] |  :  .  |  attachPackages() ... DONE
[10:50:47.189] |  :  .  |  attachPackages() ...
[10:50:47.189] |  :  .  |  :  packages: [n=0] 
[10:50:47.189] |  :  .  |  attachPackages() ... DONE
[10:50:47.189] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.189] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.189] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.190] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.190] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.190] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.190] |  :  .  |  :  .  |  New stack:
[10:50:47.190] |  :  .  |  :  .  |  List of 1
[10:50:47.190] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.190] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.190] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.190] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.190] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.190] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.190] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.192] |  :  .  |  :  .  |  Old stack:
[10:50:47.192] |  :  .  |  :  .  |  List of 1
[10:50:47.192] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.192] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.192] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.192] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.192] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.192] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.192] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.192] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.192] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.192] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.195] |  :  .  |  :  .  |  Not identical
[10:50:47.195] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.195] |  :  .  |  :  .  |  :  List of 2
[10:50:47.195] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.195] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.195] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.195] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.195] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.195] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.195] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.201] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.201] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.201] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.201] |  :  .  |  :  .  List of future strategies:
[10:50:47.201] |  :  .  |  :  .  1. sequential:
[10:50:47.201] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.201] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.201] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.201] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.202] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.202] |  :  .  |  assign_globals() ...
[10:50:47.202] |  :  .  |  List of 5
[10:50:47.202] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:47.202] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:47.202] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:47.202] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.202] |  :  .  |    ..$ x:List of 2
[10:50:47.202] |  :  .  |    .. ..$ : int 1
[10:50:47.202] |  :  .  |    .. ..$ : int 2
[10:50:47.202] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.202] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.202] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.202] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.202] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.202] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.202] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.202] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.202] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.202] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.202] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.202] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.207] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:47.207] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.207] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.207] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.207] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.207] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.207] |  :  .  |  assign_globals() ... done
[10:50:47.209] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.210] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.210] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.210] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.210] |  :  .  |  :  .  |  :  New stack:
[10:50:47.210] |  :  .  |  :  .  |  :  List of 1
[10:50:47.210] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.210] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.210] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.210] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.210] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.210] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.210] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.210] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.210] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.210] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.213] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.214] |  :  .  |  :  .  |  :  List of 1
[10:50:47.214] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.214] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.214] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.214] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.214] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.214] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.214] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.214] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.214] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.214] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.217] |  :  .  |  :  .  |  :  Identical
[10:50:47.217] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.217] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.217] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.217] |  :  .  |  :  .  |  1. sequential:
[10:50:47.217] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.217] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.217] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.218] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.218] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.218] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.218] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.218] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.218] |  :  Launching futures ... done
[10:50:47.218] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.218] |  Using SequentialFutureBackend ... done
[10:50:47.219] run() for Future (‘SequentialFuture’) ... done
[10:50:47.219] Created future:
[10:50:47.219] SequentialFuture:
[10:50:47.219] Label: ‘future_mapply-1’
[10:50:47.219] Expression:
[10:50:47.219] {
[10:50:47.219]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.219]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.219]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.219]         on.exit(options(oopts), add = TRUE)
[10:50:47.219]     }
[10:50:47.219]     {
[10:50:47.219]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.219]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.219]         do.call(mapply, args = args)
[10:50:47.219]     }
[10:50:47.219] }
[10:50:47.219] Lazy evaluation: FALSE
[10:50:47.219] Asynchronous evaluation: TRUE
[10:50:47.219] Local evaluation: TRUE
[10:50:47.219] Environment: R_GlobalEnv
[10:50:47.219] Capture standard output: TRUE
[10:50:47.219] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.219] Immediate condition classes: ‘immediateCondition’
[10:50:47.219] Globals: 5 objects totaling 668 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.219] Packages: <none>
[10:50:47.219] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.219] Resolved: TRUE
[10:50:47.219] Value: 217 bytes of class ‘list’
[10:50:47.219] Early signaling: FALSE
[10:50:47.219] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.219] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.220] Chunk #1 of 1 ... DONE
[10:50:47.220] Launching 1 futures (chunks) ... DONE
[10:50:47.220] Resolving 1 futures (chunks) ...
[10:50:47.220] value() on list ...
[10:50:47.220] |  recursive: 0
[10:50:47.220] |  length: 1
[10:50:47.220] |  
[10:50:47.220] |  Number of remaining objects: 1
[10:50:47.220] |  checking value #1 ...
[10:50:47.220] |  :  'obj' is SequentialFuture
[10:50:47.220] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.221] |  :  .  state: ‘finished’
[10:50:47.221] |  :  .  run: TRUE
[10:50:47.221] |  :  .  result: ‘FutureResult’
[10:50:47.221] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.221] |  :  SequentialFuture #1
[10:50:47.221] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.221] |  :  .  nx: 1
[10:50:47.221] |  :  .  relay: TRUE
[10:50:47.221] |  :  .  stdout: TRUE
[10:50:47.221] |  :  .  signal: TRUE
[10:50:47.221] |  :  .  resignal: FALSE
[10:50:47.221] |  :  .  force: TRUE
[10:50:47.222] |  :  .  relayed: [n=1] FALSE
[10:50:47.222] |  :  .  queued futures: [n=1] FALSE
[10:50:47.222] |  :  .  until=1
[10:50:47.222] |  :  .  relaying element #1
[10:50:47.222] |  :  .  relayed: [n=1] TRUE
[10:50:47.222] |  :  .  queued futures: [n=1] TRUE
[10:50:47.222] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.222] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.222] |  :  .  value: <list>
[10:50:47.223] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.223] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.223] |  :  .  nx: 1
[10:50:47.223] |  :  .  relay: TRUE
[10:50:47.223] |  :  .  stdout: TRUE
[10:50:47.223] |  :  .  signal: TRUE
[10:50:47.223] |  :  .  resignal: FALSE
[10:50:47.223] |  :  .  force: TRUE
[10:50:47.223] |  :  .  relayed: [n=1] TRUE
[10:50:47.223] |  :  .  queued futures: [n=1] TRUE
[10:50:47.223] |  :  .  until=1
[10:50:47.223] |  :  .  relayed: [n=1] TRUE
[10:50:47.223] |  :  .  queued futures: [n=1] TRUE
[10:50:47.224] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.224] |  :  length: 0 (resolved future 1)
[10:50:47.224] |  checking value #1 ... done
[10:50:47.224] |  Relaying remaining futures ...
[10:50:47.224] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.224] |  :  .  nx: 1
[10:50:47.224] |  :  .  relay: TRUE
[10:50:47.224] |  :  .  stdout: TRUE
[10:50:47.224] |  :  .  signal: TRUE
[10:50:47.224] |  :  .  resignal: FALSE
[10:50:47.224] |  :  .  force: TRUE
[10:50:47.224] |  :  .  relayed: [n=1] TRUE
[10:50:47.225] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.225] |  :  .  relayed: [n=1] TRUE
[10:50:47.225] |  :  .  queued futures: [n=1] TRUE
[10:50:47.225] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.225] |  Relaying remaining futures ... done
[10:50:47.225] value() on list ... done
[10:50:47.225]  - Number of value chunks collected: 1
[10:50:47.225] Resolving 1 futures (chunks) ... DONE
[10:50:47.225] Reducing values from 1 chunks ...
[10:50:47.225]  - Number of values collected after concatenation: 2
[10:50:47.225]  - Number of values expected: 2
[10:50:47.226] Reducing values from 1 chunks ... DONE
[10:50:47.226] future_mapply() ... DONE
[10:50:47.226] future_mapply() ...
[10:50:47.226] Generating random seeds ...
[10:50:47.226] Generating random seed streams for 2 elements ...
[10:50:47.226] Generating random seed streams for 2 elements ... DONE
[10:50:47.226] Generating random seeds ... DONE
[10:50:47.226] Will set RNG state on exit: 10407, -153800479, 1949717648, 2055475468, -352902518, -1859493370, 2070258286
[10:50:47.226] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.226] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.227] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.227] Number of chunks: 1
[10:50:47.227] getGlobalsAndPackagesXApply() ...
[10:50:47.227]  - future.globals: TRUE
[10:50:47.227] getGlobalsAndPackages() ...
[10:50:47.227] |  Searching for globals ...
[10:50:47.228] |  :  globals found: [1] ‘FUN’
[10:50:47.228] |  Searching for globals ... DONE
[10:50:47.228] |  Resolving globals: FALSE
[10:50:47.228] |  Search for packages associated with the globals ...
[10:50:47.228] |  :  Packages associated with globals: [0] 
[10:50:47.229] |  :  Packages: [0] 
[10:50:47.229] |  Search for packages associated with the globals ... DONE
[10:50:47.229] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:47.229] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:47.229] |  Packages after dropping 'base': [0] 
[10:50:47.229] |  globals: [1] ‘FUN’
[10:50:47.229] |  packages: [0] 
[10:50:47.230] getGlobalsAndPackages() ... done
[10:50:47.230]  - globals found/used: [n=1] ‘FUN’
[10:50:47.230]  - needed namespaces: [n=0] 
[10:50:47.230] Finding globals ... DONE
[10:50:47.230] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.230] List of 2
[10:50:47.230]  $ ...future.FUN:function (x, y)  
[10:50:47.230]  $ MoreArgs     :List of 1
[10:50:47.230]   ..$ y: int [1:2] 3 4
[10:50:47.230]  - attr(*, "where")=List of 2
[10:50:47.230]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.230]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.230]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.230]  - attr(*, "resolved")= logi FALSE
[10:50:47.230]  - attr(*, "total_size")= num NA
[10:50:47.234] Packages to be attached in all futures: [n=0] 
[10:50:47.234] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.234] Number of futures (= number of chunks): 1
[10:50:47.234] Launching 1 futures (chunks) ...
[10:50:47.234] Chunk #1 of 1 ...
[10:50:47.235]  - Finding globals in '...' for chunk #1 ...
[10:50:47.235] getGlobalsAndPackages() ...
[10:50:47.235] |  Searching for globals ...
[10:50:47.235] |  :  globals found: [0] 
[10:50:47.235] |  Searching for globals ... DONE
[10:50:47.235] |  globals: [0] <none>
[10:50:47.235] |  packages: [0] <none>
[10:50:47.235] getGlobalsAndPackages() ... done
[10:50:47.236]    + additional globals found: [n=0] 
[10:50:47.236]    + additional namespaces needed: [n=0] 
[10:50:47.236]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.236]  - seeds: [2] <seeds>
[10:50:47.236]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.236] getGlobalsAndPackages() ...
[10:50:47.236] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.236] |  Resolving globals: FALSE
[10:50:47.236] |  Search for packages associated with the globals ...
[10:50:47.236] |  :  Packages associated with globals: [0] 
[10:50:47.237] |  :  Packages: [0] 
[10:50:47.237] |  Search for packages associated with the globals ... DONE
[10:50:47.237] |  Packages after dropping 'base': [0] 
[10:50:47.237] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.237] |  packages: [0] 
[10:50:47.237] getGlobalsAndPackages() ... done
[10:50:47.237] run() for Future (‘Future’) ...
[10:50:47.238] |  state: ‘created’
[10:50:47.238] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.238] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.238] |  Using SequentialFutureBackend ...
[10:50:47.238] |  :  Launching futures ...
[10:50:47.238] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.238] |  :  .  |  getFutureData() ...
[10:50:47.238] |  :  .  |  :  getFutureCore() ...
[10:50:47.238] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.238] |  :  .  |  :  getFutureCore() ... done
[10:50:47.238] |  :  .  |  :  getFutureCapture() ...
[10:50:47.239] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.239] |  :  .  |  :  getFutureContext() ...
[10:50:47.239] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.239] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.239] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.239] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.239] |  :  .  |  :  getFutureContext() ... done
[10:50:47.239] |  :  .  |  getFutureData() ... done
[10:50:47.239] |  :  .  |  attachPackages() ...
[10:50:47.240] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.240] |  :  .  |  attachPackages() ... DONE
[10:50:47.240] |  :  .  |  attachPackages() ...
[10:50:47.240] |  :  .  |  :  packages: [n=0] 
[10:50:47.240] |  :  .  |  attachPackages() ... DONE
[10:50:47.240] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.240] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.241] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.241] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.241] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.241] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.241] |  :  .  |  :  .  |  New stack:
[10:50:47.241] |  :  .  |  :  .  |  List of 1
[10:50:47.241] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.241] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.241] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.241] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.241] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.241] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.241] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.243] |  :  .  |  :  .  |  Old stack:
[10:50:47.243] |  :  .  |  :  .  |  List of 1
[10:50:47.243] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.243] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.243] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.243] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.243] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.243] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.243] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.243] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.243] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.243] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.246] |  :  .  |  :  .  |  Not identical
[10:50:47.246] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.246] |  :  .  |  :  .  |  :  List of 2
[10:50:47.246] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.246] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.246] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.246] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.246] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.252] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.252] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.252] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.252] |  :  .  |  :  .  List of future strategies:
[10:50:47.252] |  :  .  |  :  .  1. sequential:
[10:50:47.252] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.252] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.252] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.252] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.253] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.253] |  :  .  |  assign_globals() ...
[10:50:47.253] |  :  .  |  List of 5
[10:50:47.253] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:47.253] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:47.253] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:47.253] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.253] |  :  .  |    ..$ x:List of 2
[10:50:47.253] |  :  .  |    .. ..$ : int 1
[10:50:47.253] |  :  .  |    .. ..$ : int 2
[10:50:47.253] |  :  .  |   $ ...future.seeds_ii       :List of 2
[10:50:47.253] |  :  .  |    ..$ : int [1:7] 10407 1246714491 1716182636 1422524091 519018649 -2003751245 -1600381385
[10:50:47.253] |  :  .  |    ..$ : int [1:7] 10407 520025714 1920122302 -1793441977 592146716 -44356362 -363291222
[10:50:47.253] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.253] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.253] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.253] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.253] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.253] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.253] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.253] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.253] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.253] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.253] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.259] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:47.259] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.259] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.259] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.259] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.259] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.259] |  :  .  |  assign_globals() ... done
[10:50:47.261] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.261] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.261] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.261] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.261] |  :  .  |  :  .  |  :  New stack:
[10:50:47.261] |  :  .  |  :  .  |  :  List of 1
[10:50:47.261] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.261] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.261] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.261] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.261] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.261] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.264] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.264] |  :  .  |  :  .  |  :  List of 1
[10:50:47.264] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.264] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.264] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.264] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.264] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.264] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.264] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.264] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.264] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.264] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.268] |  :  .  |  :  .  |  :  Identical
[10:50:47.268] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.268] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.268] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.268] |  :  .  |  :  .  |  1. sequential:
[10:50:47.268] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.268] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.268] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.269] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.269] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.269] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.269] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.269] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.269] |  :  Launching futures ... done
[10:50:47.269] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.270] |  Using SequentialFutureBackend ... done
[10:50:47.270] run() for Future (‘SequentialFuture’) ... done
[10:50:47.270] Created future:
[10:50:47.270] SequentialFuture:
[10:50:47.270] Label: ‘future_mapply-1’
[10:50:47.270] Expression:
[10:50:47.270] {
[10:50:47.270]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.270]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.270]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.270]         on.exit(options(oopts), add = TRUE)
[10:50:47.270]     }
[10:50:47.270]     {
[10:50:47.270]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:47.270]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:47.270]                 inherits = FALSE)
[10:50:47.270]             ...future.FUN(...)
[10:50:47.270]         }
[10:50:47.270]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:47.270]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:47.270]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.270]         do.call(mapply, args = args)
[10:50:47.270]     }
[10:50:47.270] }
[10:50:47.270] Lazy evaluation: FALSE
[10:50:47.270] Asynchronous evaluation: TRUE
[10:50:47.270] Local evaluation: TRUE
[10:50:47.270] Environment: R_GlobalEnv
[10:50:47.270] Capture standard output: TRUE
[10:50:47.270] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.270] Immediate condition classes: ‘immediateCondition’
[10:50:47.270] Globals: 5 objects totaling 744 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 105 bytes, list ‘...future.seeds_ii’ of 103 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.270] Packages: <none>
[10:50:47.270] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:47.270] Resolved: TRUE
[10:50:47.270] Value: 217 bytes of class ‘list’
[10:50:47.270] Early signaling: FALSE
[10:50:47.270] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.270] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.271] Chunk #1 of 1 ... DONE
[10:50:47.271] Launching 1 futures (chunks) ... DONE
[10:50:47.271] Resolving 1 futures (chunks) ...
[10:50:47.271] value() on list ...
[10:50:47.271] |  recursive: 0
[10:50:47.271] |  length: 1
[10:50:47.271] |  
[10:50:47.271] |  Number of remaining objects: 1
[10:50:47.271] |  checking value #1 ...
[10:50:47.271] |  :  'obj' is SequentialFuture
[10:50:47.272] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.272] |  :  .  state: ‘finished’
[10:50:47.272] |  :  .  run: TRUE
[10:50:47.272] |  :  .  result: ‘FutureResult’
[10:50:47.272] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.272] |  :  SequentialFuture #1
[10:50:47.272] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.272] |  :  .  nx: 1
[10:50:47.272] |  :  .  relay: TRUE
[10:50:47.272] |  :  .  stdout: TRUE
[10:50:47.272] |  :  .  signal: TRUE
[10:50:47.273] |  :  .  resignal: FALSE
[10:50:47.273] |  :  .  force: TRUE
[10:50:47.273] |  :  .  relayed: [n=1] FALSE
[10:50:47.273] |  :  .  queued futures: [n=1] FALSE
[10:50:47.273] |  :  .  until=1
[10:50:47.273] |  :  .  relaying element #1
[10:50:47.273] |  :  .  relayed: [n=1] TRUE
[10:50:47.273] |  :  .  queued futures: [n=1] TRUE
[10:50:47.273] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.273] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.274] |  :  .  value: <list>
[10:50:47.274] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.274] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.274] |  :  .  nx: 1
[10:50:47.274] |  :  .  relay: TRUE
[10:50:47.274] |  :  .  stdout: TRUE
[10:50:47.274] |  :  .  signal: TRUE
[10:50:47.274] |  :  .  resignal: FALSE
[10:50:47.274] |  :  .  force: TRUE
[10:50:47.274] |  :  .  relayed: [n=1] TRUE
[10:50:47.274] |  :  .  queued futures: [n=1] TRUE
[10:50:47.274] |  :  .  until=1
[10:50:47.275] |  :  .  relayed: [n=1] TRUE
[10:50:47.275] |  :  .  queued futures: [n=1] TRUE
[10:50:47.275] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.275] |  :  length: 0 (resolved future 1)
[10:50:47.275] |  checking value #1 ... done
[10:50:47.275] |  Relaying remaining futures ...
[10:50:47.275] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.275] |  :  .  nx: 1
[10:50:47.275] |  :  .  relay: TRUE
[10:50:47.275] |  :  .  stdout: TRUE
[10:50:47.275] |  :  .  signal: TRUE
[10:50:47.275] |  :  .  resignal: FALSE
[10:50:47.276] |  :  .  force: TRUE
[10:50:47.276] |  :  .  relayed: [n=1] TRUE
[10:50:47.276] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.276] |  :  .  relayed: [n=1] TRUE
[10:50:47.276] |  :  .  queued futures: [n=1] TRUE
[10:50:47.276] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.276] |  Relaying remaining futures ... done
[10:50:47.276] value() on list ... done
[10:50:47.276]  - Number of value chunks collected: 1
[10:50:47.276] Resolving 1 futures (chunks) ... DONE
[10:50:47.276] Reducing values from 1 chunks ...
[10:50:47.276]  - Number of values collected after concatenation: 2
[10:50:47.277]  - Number of values expected: 2
[10:50:47.277] Reducing values from 1 chunks ... DONE
[10:50:47.277] future_mapply() ... DONE
[10:50:47.277] future_mapply() ...
[10:50:47.277] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.277] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.277] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.277] Number of chunks: 1
[10:50:47.277] getGlobalsAndPackagesXApply() ...
[10:50:47.277]  - future.globals: TRUE
[10:50:47.278] getGlobalsAndPackages() ...
[10:50:47.278] |  Searching for globals ...
[10:50:47.279] |  :  globals found: [1] ‘FUN’
[10:50:47.279] |  Searching for globals ... DONE
[10:50:47.279] |  Resolving globals: FALSE
[10:50:47.279] |  Search for packages associated with the globals ...
[10:50:47.279] |  :  Packages associated with globals: [0] 
[10:50:47.279] |  :  Packages: [0] 
[10:50:47.279] |  Search for packages associated with the globals ... DONE
[10:50:47.280] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:47.280] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:47.280] |  Packages after dropping 'base': [0] 
[10:50:47.280] |  globals: [1] ‘FUN’
[10:50:47.280] |  packages: [0] 
[10:50:47.280] getGlobalsAndPackages() ... done
[10:50:47.280]  - globals found/used: [n=1] ‘FUN’
[10:50:47.280]  - needed namespaces: [n=0] 
[10:50:47.280] Finding globals ... DONE
[10:50:47.281] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.281] List of 2
[10:50:47.281]  $ ...future.FUN:function (x, y)  
[10:50:47.281]  $ MoreArgs     :List of 1
[10:50:47.281]   ..$ y: int [1:2] 3 4
[10:50:47.281]  - attr(*, "where")=List of 2
[10:50:47.281]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.281]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.281]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.281]  - attr(*, "resolved")= logi FALSE
[10:50:47.281]  - attr(*, "total_size")= num NA
[10:50:47.284] Packages to be attached in all futures: [n=0] 
[10:50:47.284] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.284] Number of futures (= number of chunks): 1
[10:50:47.284] Launching 1 futures (chunks) ...
[10:50:47.284] Chunk #1 of 1 ...
[10:50:47.284]  - Finding globals in '...' for chunk #1 ...
[10:50:47.284] getGlobalsAndPackages() ...
[10:50:47.284] |  Searching for globals ...
[10:50:47.285] |  :  globals found: [0] 
[10:50:47.285] |  Searching for globals ... DONE
[10:50:47.285] |  globals: [0] <none>
[10:50:47.285] |  packages: [0] <none>
[10:50:47.286] getGlobalsAndPackages() ... done
[10:50:47.286]    + additional globals found: [n=0] 
[10:50:47.286]    + additional namespaces needed: [n=0] 
[10:50:47.286]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.286]  - seeds: <none>
[10:50:47.286]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.287] getGlobalsAndPackages() ...
[10:50:47.287] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.287] |  Resolving globals: FALSE
[10:50:47.287] |  Search for packages associated with the globals ...
[10:50:47.287] |  :  Packages associated with globals: [0] 
[10:50:47.287] |  :  Packages: [0] 
[10:50:47.287] |  Search for packages associated with the globals ... DONE
[10:50:47.287] |  Packages after dropping 'base': [0] 
[10:50:47.288] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.288] |  packages: [0] 
[10:50:47.288] getGlobalsAndPackages() ... done
[10:50:47.288] run() for Future (‘Future’) ...
[10:50:47.288] |  state: ‘created’
[10:50:47.288] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.288] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.288] |  Using SequentialFutureBackend ...
[10:50:47.289] |  :  Launching futures ...
[10:50:47.289] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.289] |  :  .  |  getFutureData() ...
[10:50:47.289] |  :  .  |  :  getFutureCore() ...
[10:50:47.289] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.289] |  :  .  |  :  getFutureCore() ... done
[10:50:47.289] |  :  .  |  :  getFutureCapture() ...
[10:50:47.289] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.289] |  :  .  |  :  getFutureContext() ...
[10:50:47.289] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.290] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.290] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.290] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.290] |  :  .  |  :  getFutureContext() ... done
[10:50:47.290] |  :  .  |  getFutureData() ... done
[10:50:47.290] |  :  .  |  attachPackages() ...
[10:50:47.290] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.290] |  :  .  |  attachPackages() ... DONE
[10:50:47.290] |  :  .  |  attachPackages() ...
[10:50:47.291] |  :  .  |  :  packages: [n=0] 
[10:50:47.291] |  :  .  |  attachPackages() ... DONE
[10:50:47.291] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.291] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.291] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.291] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.292] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.292] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.292] |  :  .  |  :  .  |  New stack:
[10:50:47.292] |  :  .  |  :  .  |  List of 1
[10:50:47.292] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.292] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.292] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.292] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.292] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.292] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.292] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.294] |  :  .  |  :  .  |  Old stack:
[10:50:47.294] |  :  .  |  :  .  |  List of 1
[10:50:47.294] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.294] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.294] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.294] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.294] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.294] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.294] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.294] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.294] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.294] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.297] |  :  .  |  :  .  |  Not identical
[10:50:47.297] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.297] |  :  .  |  :  .  |  :  List of 2
[10:50:47.297] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.297] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.297] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.297] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.297] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.301] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.302] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.302] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.302] |  :  .  |  :  .  List of future strategies:
[10:50:47.302] |  :  .  |  :  .  1. sequential:
[10:50:47.302] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.302] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.302] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.302] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.302] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.303] |  :  .  |  assign_globals() ...
[10:50:47.303] |  :  .  |  List of 5
[10:50:47.303] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:47.303] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:47.303] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:47.303] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.303] |  :  .  |    ..$ x:List of 2
[10:50:47.303] |  :  .  |    .. ..$ : int 1
[10:50:47.303] |  :  .  |    .. ..$ : int 2
[10:50:47.303] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.303] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.303] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.303] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.303] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.303] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.303] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.303] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.303] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.303] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.303] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.303] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.310] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:47.310] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.310] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.310] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.310] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.310] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.310] |  :  .  |  assign_globals() ... done
[10:50:47.312] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.312] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.312] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.312] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.312] |  :  .  |  :  .  |  :  New stack:
[10:50:47.312] |  :  .  |  :  .  |  :  List of 1
[10:50:47.312] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.312] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.312] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.312] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.312] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.312] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.312] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.312] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.312] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.312] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.315] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.315] |  :  .  |  :  .  |  :  List of 1
[10:50:47.315] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.315] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.315] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.315] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.315] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.315] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.315] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.315] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.315] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.315] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.318] |  :  .  |  :  .  |  :  Identical
[10:50:47.318] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.318] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.318] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.318] |  :  .  |  :  .  |  1. sequential:
[10:50:47.318] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.318] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.318] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.319] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.319] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.319] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.319] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.319] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.319] |  :  Launching futures ... done
[10:50:47.319] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.319] |  Using SequentialFutureBackend ... done
[10:50:47.320] run() for Future (‘SequentialFuture’) ... done
[10:50:47.320] Created future:
[10:50:47.320] SequentialFuture:
[10:50:47.320] Label: ‘future_.mapply-1’
[10:50:47.320] Expression:
[10:50:47.320] {
[10:50:47.320]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.320]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.320]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.320]         on.exit(options(oopts), add = TRUE)
[10:50:47.320]     }
[10:50:47.320]     {
[10:50:47.320]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.320]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.320]         do.call(mapply, args = args)
[10:50:47.320]     }
[10:50:47.320] }
[10:50:47.320] Lazy evaluation: FALSE
[10:50:47.320] Asynchronous evaluation: TRUE
[10:50:47.320] Local evaluation: TRUE
[10:50:47.320] Environment: R_GlobalEnv
[10:50:47.320] Capture standard output: TRUE
[10:50:47.320] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.320] Immediate condition classes: ‘immediateCondition’
[10:50:47.320] Globals: 5 objects totaling 668 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.320] Packages: <none>
[10:50:47.320] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.320] Resolved: TRUE
[10:50:47.320] Value: 217 bytes of class ‘list’
[10:50:47.320] Early signaling: FALSE
[10:50:47.320] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.320] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.321] Chunk #1 of 1 ... DONE
[10:50:47.321] Launching 1 futures (chunks) ... DONE
[10:50:47.321] Resolving 1 futures (chunks) ...
[10:50:47.321] value() on list ...
[10:50:47.321] |  recursive: 0
[10:50:47.321] |  length: 1
[10:50:47.321] |  
[10:50:47.322] |  Number of remaining objects: 1
[10:50:47.322] |  checking value #1 ...
[10:50:47.322] |  :  'obj' is SequentialFuture
[10:50:47.323] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.323] |  :  .  state: ‘finished’
[10:50:47.323] |  :  .  run: TRUE
[10:50:47.323] |  :  .  result: ‘FutureResult’
[10:50:47.323] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.323] |  :  SequentialFuture #1
[10:50:47.323] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.323] |  :  .  nx: 1
[10:50:47.323] |  :  .  relay: TRUE
[10:50:47.323] |  :  .  stdout: TRUE
[10:50:47.324] |  :  .  signal: TRUE
[10:50:47.324] |  :  .  resignal: FALSE
[10:50:47.324] |  :  .  force: TRUE
[10:50:47.324] |  :  .  relayed: [n=1] FALSE
[10:50:47.324] |  :  .  queued futures: [n=1] FALSE
[10:50:47.324] |  :  .  until=1
[10:50:47.324] |  :  .  relaying element #1
[10:50:47.324] |  :  .  relayed: [n=1] TRUE
[10:50:47.324] |  :  .  queued futures: [n=1] TRUE
[10:50:47.324] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.325] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.325] |  :  .  value: <list>
[10:50:47.325] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.325] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.325] |  :  .  nx: 1
[10:50:47.325] |  :  .  relay: TRUE
[10:50:47.325] |  :  .  stdout: TRUE
[10:50:47.325] |  :  .  signal: TRUE
[10:50:47.325] |  :  .  resignal: FALSE
[10:50:47.325] |  :  .  force: TRUE
[10:50:47.325] |  :  .  relayed: [n=1] TRUE
[10:50:47.326] |  :  .  queued futures: [n=1] TRUE
[10:50:47.326] |  :  .  until=1
[10:50:47.326] |  :  .  relayed: [n=1] TRUE
[10:50:47.326] |  :  .  queued futures: [n=1] TRUE
[10:50:47.326] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.326] |  :  length: 0 (resolved future 1)
[10:50:47.326] |  checking value #1 ... done
[10:50:47.326] |  Relaying remaining futures ...
[10:50:47.326] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.326] |  :  .  nx: 1
[10:50:47.327] |  :  .  relay: TRUE
[10:50:47.327] |  :  .  stdout: TRUE
[10:50:47.327] |  :  .  signal: TRUE
[10:50:47.327] |  :  .  resignal: FALSE
[10:50:47.327] |  :  .  force: TRUE
[10:50:47.327] |  :  .  relayed: [n=1] TRUE
[10:50:47.327] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.327] |  :  .  relayed: [n=1] TRUE
[10:50:47.327] |  :  .  queued futures: [n=1] TRUE
[10:50:47.327] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.327] |  Relaying remaining futures ... done
[10:50:47.327] value() on list ... done
[10:50:47.328]  - Number of value chunks collected: 1
[10:50:47.328] Resolving 1 futures (chunks) ... DONE
[10:50:47.328] Reducing values from 1 chunks ...
[10:50:47.328]  - Number of values collected after concatenation: 2
[10:50:47.328]  - Number of values expected: 2
[10:50:47.328] Reducing values from 1 chunks ... DONE
[10:50:47.328] future_mapply() ... DONE
- Recycle arguments to same length ...
[10:50:47.328] future_mapply() ...
[10:50:47.328] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.328] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.329] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.329] Number of chunks: 1
[10:50:47.329] getGlobalsAndPackagesXApply() ...
[10:50:47.329]  - future.globals: TRUE
[10:50:47.329] getGlobalsAndPackages() ...
[10:50:47.329] |  Searching for globals ...
[10:50:47.330] |  :  globals found: [1] ‘FUN’
[10:50:47.330] |  Searching for globals ... DONE
[10:50:47.330] |  Resolving globals: FALSE
[10:50:47.330] |  Search for packages associated with the globals ...
[10:50:47.330] |  :  Packages associated with globals: [0] 
[10:50:47.330] |  :  Packages: [0] 
[10:50:47.330] |  Search for packages associated with the globals ... DONE
[10:50:47.330] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:47.331] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:47.331] |  Packages after dropping 'base': [0] 
[10:50:47.331] |  globals: [1] ‘FUN’
[10:50:47.331] |  packages: [0] 
[10:50:47.331] getGlobalsAndPackages() ... done
[10:50:47.331]  - globals found/used: [n=1] ‘FUN’
[10:50:47.331]  - needed namespaces: [n=0] 
[10:50:47.331] Finding globals ... DONE
[10:50:47.332] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.332] List of 2
[10:50:47.332]  $ ...future.FUN:function (x, ...)  
[10:50:47.332]  $ MoreArgs     : NULL
[10:50:47.332]  - attr(*, "where")=List of 2
[10:50:47.332]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.332]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.332]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.332]  - attr(*, "resolved")= logi FALSE
[10:50:47.332]  - attr(*, "total_size")= num NA
[10:50:47.334] Packages to be attached in all futures: [n=0] 
[10:50:47.334] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.334] Number of futures (= number of chunks): 1
[10:50:47.335] Launching 1 futures (chunks) ...
[10:50:47.335] Chunk #1 of 1 ...
[10:50:47.335]  - Finding globals in '...' for chunk #1 ...
[10:50:47.335] getGlobalsAndPackages() ...
[10:50:47.335] |  Searching for globals ...
[10:50:47.335] |  :  globals found: [0] 
[10:50:47.335] |  Searching for globals ... DONE
[10:50:47.335] |  globals: [0] <none>
[10:50:47.336] |  packages: [0] <none>
[10:50:47.336] getGlobalsAndPackages() ... done
[10:50:47.336]    + additional globals found: [n=0] 
[10:50:47.336]    + additional namespaces needed: [n=0] 
[10:50:47.336]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.336]  - seeds: <none>
[10:50:47.336]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.336] getGlobalsAndPackages() ...
[10:50:47.336] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.336] |  Resolving globals: FALSE
[10:50:47.336] |  Search for packages associated with the globals ...
[10:50:47.337] |  :  Packages associated with globals: [0] 
[10:50:47.337] |  :  Packages: [0] 
[10:50:47.337] |  Search for packages associated with the globals ... DONE
[10:50:47.337] |  Packages after dropping 'base': [0] 
[10:50:47.337] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.337] |  packages: [0] 
[10:50:47.337] getGlobalsAndPackages() ... done
[10:50:47.338] run() for Future (‘Future’) ...
[10:50:47.338] |  state: ‘created’
[10:50:47.338] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.338] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.338] |  Using SequentialFutureBackend ...
[10:50:47.338] |  :  Launching futures ...
[10:50:47.338] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.338] |  :  .  |  getFutureData() ...
[10:50:47.338] |  :  .  |  :  getFutureCore() ...
[10:50:47.339] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.339] |  :  .  |  :  getFutureCore() ... done
[10:50:47.339] |  :  .  |  :  getFutureCapture() ...
[10:50:47.339] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.339] |  :  .  |  :  getFutureContext() ...
[10:50:47.339] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.339] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.339] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.340] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.340] |  :  .  |  :  getFutureContext() ... done
[10:50:47.341] |  :  .  |  getFutureData() ... done
[10:50:47.341] |  :  .  |  attachPackages() ...
[10:50:47.341] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.341] |  :  .  |  attachPackages() ... DONE
[10:50:47.341] |  :  .  |  attachPackages() ...
[10:50:47.341] |  :  .  |  :  packages: [n=0] 
[10:50:47.341] |  :  .  |  attachPackages() ... DONE
[10:50:47.342] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.342] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.342] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.342] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.342] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.342] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.343] |  :  .  |  :  .  |  New stack:
[10:50:47.343] |  :  .  |  :  .  |  List of 1
[10:50:47.343] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.343] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.343] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.343] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.343] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.343] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.343] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.345] |  :  .  |  :  .  |  Old stack:
[10:50:47.345] |  :  .  |  :  .  |  List of 1
[10:50:47.345] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.345] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.345] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.345] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.345] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.345] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.345] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.345] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.345] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.345] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.348] |  :  .  |  :  .  |  Not identical
[10:50:47.348] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.348] |  :  .  |  :  .  |  :  List of 2
[10:50:47.348] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.348] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.348] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.348] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.352] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.352] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.352] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.353] |  :  .  |  :  .  List of future strategies:
[10:50:47.353] |  :  .  |  :  .  1. sequential:
[10:50:47.353] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.353] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.353] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.353] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.353] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.353] |  :  .  |  assign_globals() ...
[10:50:47.353] |  :  .  |  List of 5
[10:50:47.353] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.353] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.353] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.353] |  :  .  |    ..$ :List of 4
[10:50:47.353] |  :  .  |    .. ..$ : int 1
[10:50:47.353] |  :  .  |    .. ..$ : int 2
[10:50:47.353] |  :  .  |    .. ..$ : int 3
[10:50:47.353] |  :  .  |    .. ..$ : int 4
[10:50:47.353] |  :  .  |    ..$ :List of 4
[10:50:47.353] |  :  .  |    .. ..$ : int 2
[10:50:47.353] |  :  .  |    .. ..$ : int 1
[10:50:47.353] |  :  .  |    .. ..$ : int 2
[10:50:47.353] |  :  .  |    .. ..$ : int 1
[10:50:47.353] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.353] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.353] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.353] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.353] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.353] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.353] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.353] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.353] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.353] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.353] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.353] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.361] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.361] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.362] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.362] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.362] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.362] |  :  .  |  assign_globals() ... done
[10:50:47.363] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.363] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.363] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.364] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.364] |  :  .  |  :  .  |  :  New stack:
[10:50:47.364] |  :  .  |  :  .  |  :  List of 1
[10:50:47.364] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.364] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.364] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.364] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.364] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.364] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.364] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.364] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.364] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.364] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.366] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.367] |  :  .  |  :  .  |  :  List of 1
[10:50:47.367] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.367] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.367] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.367] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.367] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.367] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.367] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.367] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.367] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.367] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.369] |  :  .  |  :  .  |  :  Identical
[10:50:47.370] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.370] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.370] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.370] |  :  .  |  :  .  |  1. sequential:
[10:50:47.370] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.370] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.370] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.370] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.370] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.370] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.370] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.371] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.371] |  :  Launching futures ... done
[10:50:47.371] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.371] |  Using SequentialFutureBackend ... done
[10:50:47.371] run() for Future (‘SequentialFuture’) ... done
[10:50:47.371] Created future:
[10:50:47.371] SequentialFuture:
[10:50:47.371] Label: ‘future_mapply-1’
[10:50:47.371] Expression:
[10:50:47.371] {
[10:50:47.371]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.371]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.371]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.371]         on.exit(options(oopts), add = TRUE)
[10:50:47.371]     }
[10:50:47.371]     {
[10:50:47.371]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.371]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.371]         do.call(mapply, args = args)
[10:50:47.371]     }
[10:50:47.371] }
[10:50:47.371] Lazy evaluation: FALSE
[10:50:47.371] Asynchronous evaluation: TRUE
[10:50:47.371] Local evaluation: TRUE
[10:50:47.371] Environment: R_GlobalEnv
[10:50:47.371] Capture standard output: TRUE
[10:50:47.371] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.371] Immediate condition classes: ‘immediateCondition’
[10:50:47.371] Globals: 5 objects totaling 258 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 143 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.371] Packages: <none>
[10:50:47.371] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.371] Resolved: TRUE
[10:50:47.371] Value: 87 bytes of class ‘list’
[10:50:47.371] Early signaling: FALSE
[10:50:47.371] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.371] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.372] Chunk #1 of 1 ... DONE
[10:50:47.372] Launching 1 futures (chunks) ... DONE
[10:50:47.372] Resolving 1 futures (chunks) ...
[10:50:47.372] value() on list ...
[10:50:47.372] |  recursive: 0
[10:50:47.372] |  length: 1
[10:50:47.372] |  
[10:50:47.373] |  Number of remaining objects: 1
[10:50:47.373] |  checking value #1 ...
[10:50:47.373] |  :  'obj' is SequentialFuture
[10:50:47.373] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.373] |  :  .  state: ‘finished’
[10:50:47.373] |  :  .  run: TRUE
[10:50:47.373] |  :  .  result: ‘FutureResult’
[10:50:47.373] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.373] |  :  SequentialFuture #1
[10:50:47.373] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.373] |  :  .  nx: 1
[10:50:47.374] |  :  .  relay: TRUE
[10:50:47.374] |  :  .  stdout: TRUE
[10:50:47.375] |  :  .  signal: TRUE
[10:50:47.375] |  :  .  resignal: FALSE
[10:50:47.375] |  :  .  force: TRUE
[10:50:47.375] |  :  .  relayed: [n=1] FALSE
[10:50:47.375] |  :  .  queued futures: [n=1] FALSE
[10:50:47.375] |  :  .  until=1
[10:50:47.375] |  :  .  relaying element #1
[10:50:47.375] |  :  .  relayed: [n=1] TRUE
[10:50:47.375] |  :  .  queued futures: [n=1] TRUE
[10:50:47.375] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.376] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.376] |  :  .  value: <list>
[10:50:47.376] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.376] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.376] |  :  .  nx: 1
[10:50:47.376] |  :  .  relay: TRUE
[10:50:47.376] |  :  .  stdout: TRUE
[10:50:47.376] |  :  .  signal: TRUE
[10:50:47.376] |  :  .  resignal: FALSE
[10:50:47.376] |  :  .  force: TRUE
[10:50:47.376] |  :  .  relayed: [n=1] TRUE
[10:50:47.377] |  :  .  queued futures: [n=1] TRUE
[10:50:47.377] |  :  .  until=1
[10:50:47.377] |  :  .  relayed: [n=1] TRUE
[10:50:47.377] |  :  .  queued futures: [n=1] TRUE
[10:50:47.377] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.377] |  :  length: 0 (resolved future 1)
[10:50:47.377] |  checking value #1 ... done
[10:50:47.377] |  Relaying remaining futures ...
[10:50:47.377] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.377] |  :  .  nx: 1
[10:50:47.378] |  :  .  relay: TRUE
[10:50:47.378] |  :  .  stdout: TRUE
[10:50:47.378] |  :  .  signal: TRUE
[10:50:47.378] |  :  .  resignal: FALSE
[10:50:47.378] |  :  .  force: TRUE
[10:50:47.378] |  :  .  relayed: [n=1] TRUE
[10:50:47.378] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.378] |  :  .  relayed: [n=1] TRUE
[10:50:47.378] |  :  .  queued futures: [n=1] TRUE
[10:50:47.378] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.378] |  Relaying remaining futures ... done
[10:50:47.379] value() on list ... done
[10:50:47.379]  - Number of value chunks collected: 1
[10:50:47.379] Resolving 1 futures (chunks) ... DONE
[10:50:47.379] Reducing values from 1 chunks ...
[10:50:47.379]  - Number of values collected after concatenation: 4
[10:50:47.379]  - Number of values expected: 4
[10:50:47.379] Reducing values from 1 chunks ... DONE
[10:50:47.379] future_mapply() ... DONE
- Parallel RNG ...
[10:50:47.379] future_mapply() ...
[10:50:47.379] Generating random seeds ...
[10:50:47.379] Generating random seed streams for 4 elements ...
[10:50:47.380] Generating random seed streams for 4 elements ... DONE
[10:50:47.380] Generating random seeds ... DONE
[10:50:47.380] Will set RNG state on exit: 10407, 2055475468, -2126913600, -691636456, 2070258286, 2137495727, -1068014683
[10:50:47.380] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.380] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.380] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.380] Number of chunks: 1
[10:50:47.380] getGlobalsAndPackagesXApply() ...
[10:50:47.380]  - future.globals: TRUE
[10:50:47.380] getGlobalsAndPackages() ...
[10:50:47.381] |  Searching for globals ...
[10:50:47.382] |  :  globals found: [3] ‘FUN’, ‘.Call’, ‘C_runif’
[10:50:47.382] |  Searching for globals ... DONE
[10:50:47.382] |  Resolving globals: FALSE
[10:50:47.382] |  Search for packages associated with the globals ...
[10:50:47.382] |  :  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:47.383] |  :  Packages: [2] ‘stats’, ‘base’
[10:50:47.383] |  Search for packages associated with the globals ... DONE
[10:50:47.383] |  The total size of the 1 globals is 501 bytes (501 bytes)
[10:50:47.383] |  The total size of the 1 globals exported for future expression (‘FUN(min = 1)’) is 501 bytes There is one global: ‘FUN’ (501 bytes of class ‘function’)
[10:50:47.383] |  Packages after dropping 'base': [1] ‘stats’
[10:50:47.383] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:47.383] |  globals: [1] ‘FUN’
[10:50:47.384] |  packages: [1] ‘stats’
[10:50:47.384] getGlobalsAndPackages() ... done
[10:50:47.384]  - globals found/used: [n=1] ‘FUN’
[10:50:47.384]  - needed namespaces: [n=1] ‘stats’
[10:50:47.384] Finding globals ... DONE
[10:50:47.384] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.384] List of 2
[10:50:47.384]  $ ...future.FUN:function (n, min = 0, max = 1)  
[10:50:47.384]  $ MoreArgs     :List of 1
[10:50:47.384]   ..$ min: num 1
[10:50:47.384]  - attr(*, "where")=List of 2
[10:50:47.384]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.384]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.384]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.384]  - attr(*, "resolved")= logi FALSE
[10:50:47.384]  - attr(*, "total_size")= num NA
[10:50:47.387] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:47.387] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.387] Number of futures (= number of chunks): 1
[10:50:47.387] Launching 1 futures (chunks) ...
[10:50:47.388] Chunk #1 of 1 ...
[10:50:47.388]  - Finding globals in '...' for chunk #1 ...
[10:50:47.388] getGlobalsAndPackages() ...
[10:50:47.388] |  Searching for globals ...
[10:50:47.388] |  :  globals found: [0] 
[10:50:47.388] |  Searching for globals ... DONE
[10:50:47.388] |  globals: [0] <none>
[10:50:47.388] |  packages: [0] <none>
[10:50:47.388] getGlobalsAndPackages() ... done
[10:50:47.389]    + additional globals found: [n=0] 
[10:50:47.389]    + additional namespaces needed: [n=0] 
[10:50:47.389]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.389]  - seeds: [4] <seeds>
[10:50:47.389]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.389] getGlobalsAndPackages() ...
[10:50:47.389] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.389] |  Resolving globals: FALSE
[10:50:47.389] |  Search for packages associated with the globals ...
[10:50:47.390] |  :  Packages associated with globals: [1] ‘stats’
[10:50:47.390] |  :  Packages: [1] ‘stats’
[10:50:47.390] |  Search for packages associated with the globals ... DONE
[10:50:47.390] |  Packages after dropping 'base': [1] ‘stats’
[10:50:47.390] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:47.390] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.390] |  packages: [1] ‘stats’
[10:50:47.390] getGlobalsAndPackages() ... done
[10:50:47.391] run() for Future (‘Future’) ...
[10:50:47.391] |  state: ‘created’
[10:50:47.391] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.391] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.391] |  Using SequentialFutureBackend ...
[10:50:47.392] |  :  Launching futures ...
[10:50:47.392] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.392] |  :  .  |  getFutureData() ...
[10:50:47.392] |  :  .  |  :  getFutureCore() ...
[10:50:47.393] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:47.393] |  :  .  |  :  getFutureCore() ... done
[10:50:47.393] |  :  .  |  :  getFutureCapture() ...
[10:50:47.393] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.393] |  :  .  |  :  getFutureContext() ...
[10:50:47.393] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.393] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.393] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.393] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.393] |  :  .  |  :  getFutureContext() ... done
[10:50:47.394] |  :  .  |  getFutureData() ... done
[10:50:47.394] |  :  .  |  attachPackages() ...
[10:50:47.394] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.394] |  :  .  |  attachPackages() ... DONE
[10:50:47.394] |  :  .  |  attachPackages() ...
[10:50:47.394] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:47.394] |  :  .  |  attachPackages() ... DONE
[10:50:47.395] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.395] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.395] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.395] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.395] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.395] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.395] |  :  .  |  :  .  |  New stack:
[10:50:47.396] |  :  .  |  :  .  |  List of 1
[10:50:47.396] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.396] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.396] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.396] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.396] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.396] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.396] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.398] |  :  .  |  :  .  |  Old stack:
[10:50:47.398] |  :  .  |  :  .  |  List of 1
[10:50:47.398] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.398] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.398] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.398] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.398] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.398] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.398] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.398] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.398] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.398] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.401] |  :  .  |  :  .  |  Not identical
[10:50:47.401] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.401] |  :  .  |  :  .  |  :  List of 2
[10:50:47.401] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.401] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.401] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.401] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.401] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.401] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.401] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.405] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.405] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.405] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.405] |  :  .  |  :  .  List of future strategies:
[10:50:47.405] |  :  .  |  :  .  1. sequential:
[10:50:47.405] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.405] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.405] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.406] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.406] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.406] |  :  .  |  assign_globals() ...
[10:50:47.406] |  :  .  |  List of 5
[10:50:47.406] |  :  .  |   $ ...future.FUN            :function (n, min = 0, max = 1)  
[10:50:47.406] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:47.406] |  :  .  |    ..$ min: num 1
[10:50:47.406] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.406] |  :  .  |    ..$ n  :List of 4
[10:50:47.406] |  :  .  |    .. ..$ : int 1
[10:50:47.406] |  :  .  |    .. ..$ : int 2
[10:50:47.406] |  :  .  |    .. ..$ : int 3
[10:50:47.406] |  :  .  |    .. ..$ : int 4
[10:50:47.406] |  :  .  |    ..$ max:List of 4
[10:50:47.406] |  :  .  |    .. ..$ : int 2
[10:50:47.406] |  :  .  |    .. ..$ : int 3
[10:50:47.406] |  :  .  |    .. ..$ : int 4
[10:50:47.406] |  :  .  |    .. ..$ : int 5
[10:50:47.406] |  :  .  |   $ ...future.seeds_ii       :List of 4
[10:50:47.406] |  :  .  |    ..$ : int [1:7] 10407 1242173061 -1150840343 -834448425 701050094 -1369558043 -650964284
[10:50:47.406] |  :  .  |    ..$ : int [1:7] 10407 859061261 1088872332 -1371790091 -942478768 -889560561 1393381402
[10:50:47.406] |  :  .  |    ..$ : int [1:7] 10407 -1977952646 362645338 -1927542548 -742448269 -2030870718 1472975712
[10:50:47.406] |  :  .  |    ..$ : int [1:7] 10407 -781199300 -1470244364 -1435938985 -1154922760 795337516 2089908040
[10:50:47.406] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.406] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.406] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.406] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.406] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.406] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.406] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.406] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.406] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.406] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.406] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.416] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.416] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.416] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.416] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.416] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.416] |  :  .  |  assign_globals() ... done
[10:50:47.418] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.418] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.418] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.418] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.418] |  :  .  |  :  .  |  :  New stack:
[10:50:47.418] |  :  .  |  :  .  |  :  List of 1
[10:50:47.418] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.418] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.418] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.418] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.418] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.418] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.418] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.418] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.421] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.421] |  :  .  |  :  .  |  :  List of 1
[10:50:47.421] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.421] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.421] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.421] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.421] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.421] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.421] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.421] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.421] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.421] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.424] |  :  .  |  :  .  |  :  Identical
[10:50:47.424] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.424] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.424] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.424] |  :  .  |  :  .  |  1. sequential:
[10:50:47.424] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.424] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.424] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.426] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.426] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.427] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.427] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.427] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.427] |  :  Launching futures ... done
[10:50:47.427] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.427] |  Using SequentialFutureBackend ... done
[10:50:47.427] run() for Future (‘SequentialFuture’) ... done
[10:50:47.428] Created future:
[10:50:47.428] SequentialFuture:
[10:50:47.428] Label: ‘future_mapply-1’
[10:50:47.428] Expression:
[10:50:47.428] {
[10:50:47.428]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.428]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.428]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.428]         on.exit(options(oopts), add = TRUE)
[10:50:47.428]     }
[10:50:47.428]     {
[10:50:47.428]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:47.428]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:47.428]                 inherits = FALSE)
[10:50:47.428]             ...future.FUN(...)
[10:50:47.428]         }
[10:50:47.428]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:47.428]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:47.428]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.428]         do.call(mapply, args = args)
[10:50:47.428]     }
[10:50:47.428] }
[10:50:47.428] Lazy evaluation: FALSE
[10:50:47.428] Asynchronous evaluation: TRUE
[10:50:47.428] Local evaluation: TRUE
[10:50:47.428] Environment: R_GlobalEnv
[10:50:47.428] Capture standard output: TRUE
[10:50:47.428] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.428] Immediate condition classes: ‘immediateCondition’
[10:50:47.428] Globals: 5 objects totaling 990 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 196 bytes, list ‘...future.seeds_ii’ of 175 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.428] Packages: 1 packages (‘stats’)
[10:50:47.428] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:47.428] Resolved: TRUE
[10:50:47.428] Value: 143 bytes of class ‘list’
[10:50:47.428] Early signaling: FALSE
[10:50:47.428] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.428] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.429] Chunk #1 of 1 ... DONE
[10:50:47.429] Launching 1 futures (chunks) ... DONE
[10:50:47.429] Resolving 1 futures (chunks) ...
[10:50:47.429] value() on list ...
[10:50:47.429] |  recursive: 0
[10:50:47.429] |  length: 1
[10:50:47.429] |  
[10:50:47.429] |  Number of remaining objects: 1
[10:50:47.429] |  checking value #1 ...
[10:50:47.430] |  :  'obj' is SequentialFuture
[10:50:47.430] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.430] |  :  .  state: ‘finished’
[10:50:47.430] |  :  .  run: TRUE
[10:50:47.430] |  :  .  result: ‘FutureResult’
[10:50:47.430] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.430] |  :  SequentialFuture #1
[10:50:47.430] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.430] |  :  .  nx: 1
[10:50:47.430] |  :  .  relay: TRUE
[10:50:47.431] |  :  .  stdout: TRUE
[10:50:47.431] |  :  .  signal: TRUE
[10:50:47.431] |  :  .  resignal: FALSE
[10:50:47.431] |  :  .  force: TRUE
[10:50:47.431] |  :  .  relayed: [n=1] FALSE
[10:50:47.431] |  :  .  queued futures: [n=1] FALSE
[10:50:47.431] |  :  .  until=1
[10:50:47.431] |  :  .  relaying element #1
[10:50:47.431] |  :  .  relayed: [n=1] TRUE
[10:50:47.432] |  :  .  queued futures: [n=1] TRUE
[10:50:47.432] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.432] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.432] |  :  .  value: <list>
[10:50:47.432] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.432] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.432] |  :  .  nx: 1
[10:50:47.432] |  :  .  relay: TRUE
[10:50:47.432] |  :  .  stdout: TRUE
[10:50:47.432] |  :  .  signal: TRUE
[10:50:47.432] |  :  .  resignal: FALSE
[10:50:47.433] |  :  .  force: TRUE
[10:50:47.433] |  :  .  relayed: [n=1] TRUE
[10:50:47.433] |  :  .  queued futures: [n=1] TRUE
[10:50:47.433] |  :  .  until=1
[10:50:47.433] |  :  .  relayed: [n=1] TRUE
[10:50:47.433] |  :  .  queued futures: [n=1] TRUE
[10:50:47.433] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.433] |  :  length: 0 (resolved future 1)
[10:50:47.433] |  checking value #1 ... done
[10:50:47.433] |  Relaying remaining futures ...
[10:50:47.434] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.434] |  :  .  nx: 1
[10:50:47.434] |  :  .  relay: TRUE
[10:50:47.434] |  :  .  stdout: TRUE
[10:50:47.434] |  :  .  signal: TRUE
[10:50:47.434] |  :  .  resignal: FALSE
[10:50:47.434] |  :  .  force: TRUE
[10:50:47.434] |  :  .  relayed: [n=1] TRUE
[10:50:47.434] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.434] |  :  .  relayed: [n=1] TRUE
[10:50:47.434] |  :  .  queued futures: [n=1] TRUE
[10:50:47.434] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.435] |  Relaying remaining futures ... done
[10:50:47.435] value() on list ... done
[10:50:47.435]  - Number of value chunks collected: 1
[10:50:47.435] Resolving 1 futures (chunks) ... DONE
[10:50:47.435] Reducing values from 1 chunks ...
[10:50:47.435]  - Number of values collected after concatenation: 4
[10:50:47.435]  - Number of values expected: 4
[10:50:47.435] Reducing values from 1 chunks ... DONE
[10:50:47.435] future_mapply() ... DONE
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
[10:50:47.438] future_mapply() ...
[10:50:47.438] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.438] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.438] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.438] Number of chunks: 1
[10:50:47.438] getGlobalsAndPackagesXApply() ...
[10:50:47.438]  - future.globals: TRUE
[10:50:47.438] getGlobalsAndPackages() ...
[10:50:47.438] |  Searching for globals ...
[10:50:47.440] |  :  globals found: [2] ‘FUN’, ‘UseMethod’
[10:50:47.440] |  Searching for globals ... DONE
[10:50:47.440] |  Resolving globals: FALSE
[10:50:47.440] |  Search for packages associated with the globals ...
[10:50:47.440] |  :  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:47.440] |  :  Packages: [2] ‘stats’, ‘base’
[10:50:47.441] |  Search for packages associated with the globals ... DONE
[10:50:47.441] |  The total size of the 1 globals is 337 bytes (337 bytes)
[10:50:47.441] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 337 bytes There is one global: ‘FUN’ (337 bytes of class ‘function’)
[10:50:47.441] |  Packages after dropping 'base': [1] ‘stats’
[10:50:47.441] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:47.441] |  globals: [1] ‘FUN’
[10:50:47.442] |  packages: [1] ‘stats’
[10:50:47.442] getGlobalsAndPackages() ... done
[10:50:47.442]  - globals found/used: [n=1] ‘FUN’
[10:50:47.442]  - needed namespaces: [n=1] ‘stats’
[10:50:47.442] Finding globals ... DONE
[10:50:47.442] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.442] List of 2
[10:50:47.442]  $ ...future.FUN:function (x, w, ...)  
[10:50:47.442]  $ MoreArgs     : NULL
[10:50:47.442]  - attr(*, "where")=List of 2
[10:50:47.442]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.442]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.442]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.442]  - attr(*, "resolved")= logi FALSE
[10:50:47.442]  - attr(*, "total_size")= num NA
[10:50:47.446] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:47.446] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.447] Number of futures (= number of chunks): 1
[10:50:47.447] Launching 1 futures (chunks) ...
[10:50:47.447] Chunk #1 of 1 ...
[10:50:47.447]  - Finding globals in '...' for chunk #1 ...
[10:50:47.447] getGlobalsAndPackages() ...
[10:50:47.447] |  Searching for globals ...
[10:50:47.447] |  :  globals found: [0] 
[10:50:47.448] |  Searching for globals ... DONE
[10:50:47.448] |  globals: [0] <none>
[10:50:47.448] |  packages: [0] <none>
[10:50:47.448] getGlobalsAndPackages() ... done
[10:50:47.448]    + additional globals found: [n=0] 
[10:50:47.448]    + additional namespaces needed: [n=0] 
[10:50:47.448]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.448]  - seeds: <none>
[10:50:47.448]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.448] getGlobalsAndPackages() ...
[10:50:47.449] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.449] |  Resolving globals: FALSE
[10:50:47.449] |  Search for packages associated with the globals ...
[10:50:47.449] |  :  Packages associated with globals: [1] ‘stats’
[10:50:47.449] |  :  Packages: [1] ‘stats’
[10:50:47.449] |  Search for packages associated with the globals ... DONE
[10:50:47.449] |  Packages after dropping 'base': [1] ‘stats’
[10:50:47.450] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:47.450] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.450] |  packages: [1] ‘stats’
[10:50:47.450] getGlobalsAndPackages() ... done
[10:50:47.450] run() for Future (‘Future’) ...
[10:50:47.450] |  state: ‘created’
[10:50:47.450] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.450] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.451] |  Using SequentialFutureBackend ...
[10:50:47.451] |  :  Launching futures ...
[10:50:47.451] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.451] |  :  .  |  getFutureData() ...
[10:50:47.451] |  :  .  |  :  getFutureCore() ...
[10:50:47.451] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:47.451] |  :  .  |  :  getFutureCore() ... done
[10:50:47.451] |  :  .  |  :  getFutureCapture() ...
[10:50:47.451] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.451] |  :  .  |  :  getFutureContext() ...
[10:50:47.452] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.452] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.452] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.452] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.452] |  :  .  |  :  getFutureContext() ... done
[10:50:47.452] |  :  .  |  getFutureData() ... done
[10:50:47.452] |  :  .  |  attachPackages() ...
[10:50:47.452] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.453] |  :  .  |  attachPackages() ... DONE
[10:50:47.453] |  :  .  |  attachPackages() ...
[10:50:47.453] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:47.453] |  :  .  |  attachPackages() ... DONE
[10:50:47.453] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.453] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.453] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.454] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.454] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.454] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.454] |  :  .  |  :  .  |  New stack:
[10:50:47.454] |  :  .  |  :  .  |  List of 1
[10:50:47.454] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.454] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.454] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.454] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.454] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.454] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.454] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.456] |  :  .  |  :  .  |  Old stack:
[10:50:47.456] |  :  .  |  :  .  |  List of 1
[10:50:47.456] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.456] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.456] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.456] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.456] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.456] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.456] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.456] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.456] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.456] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.459] |  :  .  |  :  .  |  Not identical
[10:50:47.459] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.460] |  :  .  |  :  .  |  :  List of 2
[10:50:47.460] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.460] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.460] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.460] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.466] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.466] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.466] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.466] |  :  .  |  :  .  List of future strategies:
[10:50:47.466] |  :  .  |  :  .  1. sequential:
[10:50:47.466] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.466] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.466] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.467] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.467] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.467] |  :  .  |  assign_globals() ...
[10:50:47.467] |  :  .  |  List of 5
[10:50:47.467] |  :  .  |   $ ...future.FUN            :function (x, w, ...)  
[10:50:47.467] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.467] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.467] |  :  .  |    ..$ :List of 5
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 0.4908 0.7612 0.3999 0.0598 0.2776 ...
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 0.1934 0.0873 0.5859 0.5324 0.5061 ...
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 0.386 0.228 0.534 0.682 0.703 ...
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 0.6473 0.0936 0.5214 0.5858 0.872 ...
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 0.6169 0.0229 0.6851 0.613 0.5533 ...
[10:50:47.467] |  :  .  |    ..$ :List of 5
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 4 7 7 5 7 5 5 6 5 11
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 12 3 7 5 9 5 8 4 9 3
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 5 6 5 7 7 9 4 3 6 4
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 7 4 5 4 4 2 4 5 8 6
[10:50:47.467] |  :  .  |    .. ..$ : num [1:10] 5 8 2 3 5 6 8 7 8 11
[10:50:47.467] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.467] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.467] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.467] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.467] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.467] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.467] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.467] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.467] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.467] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.467] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.467] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.475] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.475] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.476] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.476] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.476] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.476] |  :  .  |  assign_globals() ... done
[10:50:47.477] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.477] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.478] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.478] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.478] |  :  .  |  :  .  |  :  New stack:
[10:50:47.478] |  :  .  |  :  .  |  :  List of 1
[10:50:47.478] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.478] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.478] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.478] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.478] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.478] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.478] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.478] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.478] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.478] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.483] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.483] |  :  .  |  :  .  |  :  List of 1
[10:50:47.483] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.483] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.483] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.483] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.483] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.483] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.483] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.483] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.483] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.483] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.486] |  :  .  |  :  .  |  :  Identical
[10:50:47.486] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.486] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.486] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.486] |  :  .  |  :  .  |  1. sequential:
[10:50:47.486] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.486] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.486] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.487] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.487] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.487] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.487] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.488] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.488] |  :  Launching futures ... done
[10:50:47.488] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.488] |  Using SequentialFutureBackend ... done
[10:50:47.488] run() for Future (‘SequentialFuture’) ... done
[10:50:47.488] Created future:
[10:50:47.488] SequentialFuture:
[10:50:47.488] Label: ‘future_Map-1’
[10:50:47.488] Expression:
[10:50:47.488] {
[10:50:47.488]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.488]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.488]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.488]         on.exit(options(oopts), add = TRUE)
[10:50:47.488]     }
[10:50:47.488]     {
[10:50:47.488]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.488]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.488]         do.call(mapply, args = args)
[10:50:47.488]     }
[10:50:47.488] }
[10:50:47.488] Lazy evaluation: FALSE
[10:50:47.488] Asynchronous evaluation: TRUE
[10:50:47.488] Local evaluation: TRUE
[10:50:47.488] Environment: R_GlobalEnv
[10:50:47.488] Capture standard output: TRUE
[10:50:47.488] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.488] Immediate condition classes: ‘immediateCondition’
[10:50:47.488] Globals: 5 objects totaling 1.31 KiB (function ‘...future.FUN’ of 337 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 927 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.488] Packages: 1 packages (‘stats’)
[10:50:47.488] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.488] Resolved: TRUE
[10:50:47.488] Value: 111 bytes of class ‘list’
[10:50:47.488] Early signaling: FALSE
[10:50:47.488] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.488] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.489] Chunk #1 of 1 ... DONE
[10:50:47.489] Launching 1 futures (chunks) ... DONE
[10:50:47.489] Resolving 1 futures (chunks) ...
[10:50:47.489] value() on list ...
[10:50:47.489] |  recursive: 0
[10:50:47.489] |  length: 1
[10:50:47.490] |  
[10:50:47.490] |  Number of remaining objects: 1
[10:50:47.490] |  checking value #1 ...
[10:50:47.490] |  :  'obj' is SequentialFuture
[10:50:47.490] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.490] |  :  .  state: ‘finished’
[10:50:47.490] |  :  .  run: TRUE
[10:50:47.490] |  :  .  result: ‘FutureResult’
[10:50:47.490] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.490] |  :  SequentialFuture #1
[10:50:47.490] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.491] |  :  .  nx: 1
[10:50:47.491] |  :  .  relay: TRUE
[10:50:47.491] |  :  .  stdout: TRUE
[10:50:47.491] |  :  .  signal: TRUE
[10:50:47.491] |  :  .  resignal: FALSE
[10:50:47.491] |  :  .  force: TRUE
[10:50:47.491] |  :  .  relayed: [n=1] FALSE
[10:50:47.491] |  :  .  queued futures: [n=1] FALSE
[10:50:47.491] |  :  .  until=1
[10:50:47.491] |  :  .  relaying element #1
[10:50:47.491] |  :  .  relayed: [n=1] TRUE
[10:50:47.492] |  :  .  queued futures: [n=1] TRUE
[10:50:47.492] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.492] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.492] |  :  .  value: <list>
[10:50:47.492] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.492] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.492] |  :  .  nx: 1
[10:50:47.492] |  :  .  relay: TRUE
[10:50:47.492] |  :  .  stdout: TRUE
[10:50:47.492] |  :  .  signal: TRUE
[10:50:47.492] |  :  .  resignal: FALSE
[10:50:47.493] |  :  .  force: TRUE
[10:50:47.493] |  :  .  relayed: [n=1] TRUE
[10:50:47.493] |  :  .  queued futures: [n=1] TRUE
[10:50:47.493] |  :  .  until=1
[10:50:47.493] |  :  .  relayed: [n=1] TRUE
[10:50:47.493] |  :  .  queued futures: [n=1] TRUE
[10:50:47.493] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.493] |  :  length: 0 (resolved future 1)
[10:50:47.493] |  checking value #1 ... done
[10:50:47.493] |  Relaying remaining futures ...
[10:50:47.493] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.493] |  :  .  nx: 1
[10:50:47.494] |  :  .  relay: TRUE
[10:50:47.494] |  :  .  stdout: TRUE
[10:50:47.494] |  :  .  signal: TRUE
[10:50:47.494] |  :  .  resignal: FALSE
[10:50:47.494] |  :  .  force: TRUE
[10:50:47.494] |  :  .  relayed: [n=1] TRUE
[10:50:47.494] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.494] |  :  .  relayed: [n=1] TRUE
[10:50:47.494] |  :  .  queued futures: [n=1] TRUE
[10:50:47.494] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.494] |  Relaying remaining futures ... done
[10:50:47.495] value() on list ... done
[10:50:47.495]  - Number of value chunks collected: 1
[10:50:47.495] Resolving 1 futures (chunks) ... DONE
[10:50:47.495] Reducing values from 1 chunks ...
[10:50:47.495]  - Number of values collected after concatenation: 5
[10:50:47.495]  - Number of values expected: 5
[10:50:47.495] Reducing values from 1 chunks ... DONE
[10:50:47.495] future_mapply() ... DONE
- future_mapply() - 'max-or-0-if' recycling rule ...
[10:50:47.497] future_mapply() ...
[10:50:47.497] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.497] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.497] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.497] Number of chunks: 1
[10:50:47.497] getGlobalsAndPackagesXApply() ...
[10:50:47.497]  - future.globals: TRUE
[10:50:47.498] getGlobalsAndPackages() ...
[10:50:47.498] |  Searching for globals ...
[10:50:47.498] |  :  globals found: [1] ‘FUN’
[10:50:47.498] |  Searching for globals ... DONE
[10:50:47.498] |  Resolving globals: FALSE
[10:50:47.499] |  Search for packages associated with the globals ...
[10:50:47.499] |  :  Packages associated with globals: [0] 
[10:50:47.499] |  :  Packages: [0] 
[10:50:47.499] |  Search for packages associated with the globals ... DONE
[10:50:47.499] |  The total size of the 1 globals is 32 bytes (32 bytes)
[10:50:47.499] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 32 bytes There is one global: ‘FUN’ (32 bytes of class ‘function’)
[10:50:47.500] |  Packages after dropping 'base': [0] 
[10:50:47.500] |  globals: [1] ‘FUN’
[10:50:47.500] |  packages: [0] 
[10:50:47.500] getGlobalsAndPackages() ... done
[10:50:47.500]  - globals found/used: [n=1] ‘FUN’
[10:50:47.500]  - needed namespaces: [n=0] 
[10:50:47.501] Finding globals ... DONE
[10:50:47.502] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.502] List of 2
[10:50:47.502]  $ ...future.FUN:function (e1, e2)  
[10:50:47.502]  $ MoreArgs     : NULL
[10:50:47.502]  - attr(*, "where")=List of 2
[10:50:47.502]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.502]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.502]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.502]  - attr(*, "resolved")= logi FALSE
[10:50:47.502]  - attr(*, "total_size")= num NA
[10:50:47.505] Packages to be attached in all futures: [n=0] 
[10:50:47.505] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.505] Number of futures (= number of chunks): 1
[10:50:47.505] Launching 1 futures (chunks) ...
[10:50:47.505] Chunk #1 of 1 ...
[10:50:47.505]  - Finding globals in '...' for chunk #1 ...
[10:50:47.506] getGlobalsAndPackages() ...
[10:50:47.506] |  Searching for globals ...
[10:50:47.506] |  :  globals found: [0] 
[10:50:47.506] |  Searching for globals ... DONE
[10:50:47.506] |  globals: [0] <none>
[10:50:47.506] |  packages: [0] <none>
[10:50:47.506] getGlobalsAndPackages() ... done
[10:50:47.507]    + additional globals found: [n=0] 
[10:50:47.507]    + additional namespaces needed: [n=0] 
[10:50:47.507]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.507]  - seeds: <none>
[10:50:47.507]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.507] getGlobalsAndPackages() ...
[10:50:47.507] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.507] |  Resolving globals: FALSE
[10:50:47.507] |  Search for packages associated with the globals ...
[10:50:47.508] |  :  Packages associated with globals: [0] 
[10:50:47.508] |  :  Packages: [0] 
[10:50:47.508] |  Search for packages associated with the globals ... DONE
[10:50:47.508] |  Packages after dropping 'base': [0] 
[10:50:47.508] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.508] |  packages: [0] 
[10:50:47.508] getGlobalsAndPackages() ... done
[10:50:47.509] run() for Future (‘Future’) ...
[10:50:47.509] |  state: ‘created’
[10:50:47.509] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.509] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.509] |  Using SequentialFutureBackend ...
[10:50:47.509] |  :  Launching futures ...
[10:50:47.509] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.509] |  :  .  |  getFutureData() ...
[10:50:47.509] |  :  .  |  :  getFutureCore() ...
[10:50:47.509] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.510] |  :  .  |  :  getFutureCore() ... done
[10:50:47.510] |  :  .  |  :  getFutureCapture() ...
[10:50:47.510] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.510] |  :  .  |  :  getFutureContext() ...
[10:50:47.510] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.510] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.510] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.510] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.510] |  :  .  |  :  getFutureContext() ... done
[10:50:47.510] |  :  .  |  getFutureData() ... done
[10:50:47.511] |  :  .  |  attachPackages() ...
[10:50:47.511] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.511] |  :  .  |  attachPackages() ... DONE
[10:50:47.511] |  :  .  |  attachPackages() ...
[10:50:47.511] |  :  .  |  :  packages: [n=0] 
[10:50:47.511] |  :  .  |  attachPackages() ... DONE
[10:50:47.511] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.512] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.512] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.512] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.512] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.512] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.512] |  :  .  |  :  .  |  New stack:
[10:50:47.512] |  :  .  |  :  .  |  List of 1
[10:50:47.512] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.512] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.512] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.512] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.512] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.512] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.512] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.515] |  :  .  |  :  .  |  Old stack:
[10:50:47.515] |  :  .  |  :  .  |  List of 1
[10:50:47.515] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.515] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.515] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.515] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.515] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.515] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.515] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.515] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.515] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.515] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.517] |  :  .  |  :  .  |  Not identical
[10:50:47.518] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.518] |  :  .  |  :  .  |  :  List of 2
[10:50:47.518] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.518] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.518] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.518] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.518] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.518] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.518] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.524] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.524] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.524] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.524] |  :  .  |  :  .  List of future strategies:
[10:50:47.524] |  :  .  |  :  .  1. sequential:
[10:50:47.524] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.524] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.524] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.524] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.525] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.525] |  :  .  |  assign_globals() ...
[10:50:47.525] |  :  .  |  List of 5
[10:50:47.525] |  :  .  |   $ ...future.FUN            :function (e1, e2)  
[10:50:47.525] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.525] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.525] |  :  .  |    ..$ :List of 3
[10:50:47.525] |  :  .  |    .. ..$ : num 1
[10:50:47.525] |  :  .  |    .. ..$ : num 1
[10:50:47.525] |  :  .  |    .. ..$ : num 1
[10:50:47.525] |  :  .  |    ..$ :List of 3
[10:50:47.525] |  :  .  |    .. ..$ : int 1
[10:50:47.525] |  :  .  |    .. ..$ : int 2
[10:50:47.525] |  :  .  |    .. ..$ : int 3
[10:50:47.525] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.525] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.525] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.525] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.525] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.525] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.525] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.525] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.525] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.525] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.525] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.525] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.531] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.531] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.531] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.532] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.532] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.532] |  :  .  |  assign_globals() ... done
[10:50:47.533] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.533] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.533] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.534] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.534] |  :  .  |  :  .  |  :  New stack:
[10:50:47.534] |  :  .  |  :  .  |  :  List of 1
[10:50:47.534] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.534] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.534] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.534] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.534] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.534] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.534] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.534] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.534] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.534] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.537] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.537] |  :  .  |  :  .  |  :  List of 1
[10:50:47.537] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.537] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.537] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.537] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.537] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.537] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.537] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.537] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.537] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.537] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.541] |  :  .  |  :  .  |  :  Identical
[10:50:47.541] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.541] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.541] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.541] |  :  .  |  :  .  |  1. sequential:
[10:50:47.541] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.541] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.541] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.541] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.541] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.542] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.542] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.542] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.542] |  :  Launching futures ... done
[10:50:47.542] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.542] |  Using SequentialFutureBackend ... done
[10:50:47.542] run() for Future (‘SequentialFuture’) ... done
[10:50:47.542] Created future:
[10:50:47.542] SequentialFuture:
[10:50:47.542] Label: ‘future_Map-1’
[10:50:47.542] Expression:
[10:50:47.542] {
[10:50:47.542]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.542]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.542]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.542]         on.exit(options(oopts), add = TRUE)
[10:50:47.542]     }
[10:50:47.542]     {
[10:50:47.542]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.542]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.542]         do.call(mapply, args = args)
[10:50:47.542]     }
[10:50:47.542] }
[10:50:47.542] Lazy evaluation: FALSE
[10:50:47.542] Asynchronous evaluation: TRUE
[10:50:47.542] Local evaluation: TRUE
[10:50:47.542] Environment: R_GlobalEnv
[10:50:47.542] Capture standard output: TRUE
[10:50:47.542] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.542] Immediate condition classes: ‘immediateCondition’
[10:50:47.542] Globals: 5 objects totaling 244 bytes (function ‘...future.FUN’ of 32 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 131 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.542] Packages: <none>
[10:50:47.542] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.542] Resolved: TRUE
[10:50:47.542] Value: 79 bytes of class ‘list’
[10:50:47.542] Early signaling: FALSE
[10:50:47.542] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.542] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.543] Chunk #1 of 1 ... DONE
[10:50:47.543] Launching 1 futures (chunks) ... DONE
[10:50:47.543] Resolving 1 futures (chunks) ...
[10:50:47.544] value() on list ...
[10:50:47.544] |  recursive: 0
[10:50:47.544] |  length: 1
[10:50:47.544] |  
[10:50:47.544] |  Number of remaining objects: 1
[10:50:47.544] |  checking value #1 ...
[10:50:47.544] |  :  'obj' is SequentialFuture
[10:50:47.544] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.544] |  :  .  state: ‘finished’
[10:50:47.544] |  :  .  run: TRUE
[10:50:47.544] |  :  .  result: ‘FutureResult’
[10:50:47.545] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.545] |  :  SequentialFuture #1
[10:50:47.545] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.545] |  :  .  nx: 1
[10:50:47.545] |  :  .  relay: TRUE
[10:50:47.545] |  :  .  stdout: TRUE
[10:50:47.545] |  :  .  signal: TRUE
[10:50:47.545] |  :  .  resignal: FALSE
[10:50:47.545] |  :  .  force: TRUE
[10:50:47.545] |  :  .  relayed: [n=1] FALSE
[10:50:47.545] |  :  .  queued futures: [n=1] FALSE
[10:50:47.545] |  :  .  until=1
[10:50:47.546] |  :  .  relaying element #1
[10:50:47.546] |  :  .  relayed: [n=1] TRUE
[10:50:47.546] |  :  .  queued futures: [n=1] TRUE
[10:50:47.546] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.546] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.546] |  :  .  value: <list>
[10:50:47.546] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.546] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.546] |  :  .  nx: 1
[10:50:47.546] |  :  .  relay: TRUE
[10:50:47.547] |  :  .  stdout: TRUE
[10:50:47.547] |  :  .  signal: TRUE
[10:50:47.547] |  :  .  resignal: FALSE
[10:50:47.547] |  :  .  force: TRUE
[10:50:47.547] |  :  .  relayed: [n=1] TRUE
[10:50:47.547] |  :  .  queued futures: [n=1] TRUE
[10:50:47.547] |  :  .  until=1
[10:50:47.547] |  :  .  relayed: [n=1] TRUE
[10:50:47.547] |  :  .  queued futures: [n=1] TRUE
[10:50:47.547] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.547] |  :  length: 0 (resolved future 1)
[10:50:47.548] |  checking value #1 ... done
[10:50:47.548] |  Relaying remaining futures ...
[10:50:47.548] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.548] |  :  .  nx: 1
[10:50:47.548] |  :  .  relay: TRUE
[10:50:47.548] |  :  .  stdout: TRUE
[10:50:47.548] |  :  .  signal: TRUE
[10:50:47.548] |  :  .  resignal: FALSE
[10:50:47.548] |  :  .  force: TRUE
[10:50:47.548] |  :  .  relayed: [n=1] TRUE
[10:50:47.548] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.548] |  :  .  relayed: [n=1] TRUE
[10:50:47.549] |  :  .  queued futures: [n=1] TRUE
[10:50:47.549] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.549] |  Relaying remaining futures ... done
[10:50:47.549] value() on list ... done
[10:50:47.549]  - Number of value chunks collected: 1
[10:50:47.549] Resolving 1 futures (chunks) ... DONE
[10:50:47.549] Reducing values from 1 chunks ...
[10:50:47.549]  - Number of values collected after concatenation: 3
[10:50:47.549]  - Number of values expected: 3
[10:50:47.549] Reducing values from 1 chunks ... DONE
[10:50:47.549] future_mapply() ... DONE
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
[10:50:47.550] future_mapply() ...
[10:50:47.550] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.550] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.550] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.550] Number of chunks: 1
[10:50:47.550] getGlobalsAndPackagesXApply() ...
[10:50:47.550]  - future.globals: TRUE
[10:50:47.550] getGlobalsAndPackages() ...
[10:50:47.551] |  Searching for globals ...
[10:50:47.552] |  :  globals found: [1] ‘FUN’
[10:50:47.552] |  Searching for globals ... DONE
[10:50:47.552] |  Resolving globals: FALSE
[10:50:47.552] |  Search for packages associated with the globals ...
[10:50:47.552] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.552] |  :  Packages: [1] ‘base’
[10:50:47.552] |  Search for packages associated with the globals ... DONE
[10:50:47.552] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:47.553] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:47.553] |  Packages after dropping 'base': [0] 
[10:50:47.553] |  globals: [1] ‘FUN’
[10:50:47.553] |  packages: [0] 
[10:50:47.553] getGlobalsAndPackages() ... done
[10:50:47.553]  - globals found/used: [n=1] ‘FUN’
[10:50:47.553]  - needed namespaces: [n=0] 
[10:50:47.553] Finding globals ... DONE
[10:50:47.554] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.554] List of 2
[10:50:47.554]  $ ...future.FUN:function (x)  
[10:50:47.554]  $ MoreArgs     : NULL
[10:50:47.554]  - attr(*, "where")=List of 2
[10:50:47.554]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.554]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.554]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.554]  - attr(*, "resolved")= logi FALSE
[10:50:47.554]  - attr(*, "total_size")= num NA
[10:50:47.557] Packages to be attached in all futures: [n=0] 
[10:50:47.558] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.558] Number of futures (= number of chunks): 1
[10:50:47.558] Launching 1 futures (chunks) ...
[10:50:47.558] Chunk #1 of 1 ...
[10:50:47.558]  - Finding globals in '...' for chunk #1 ...
[10:50:47.558] getGlobalsAndPackages() ...
[10:50:47.558] |  Searching for globals ...
[10:50:47.559] |  :  globals found: [0] 
[10:50:47.559] |  Searching for globals ... DONE
[10:50:47.559] |  globals: [0] <none>
[10:50:47.559] |  packages: [0] <none>
[10:50:47.559] getGlobalsAndPackages() ... done
[10:50:47.559]    + additional globals found: [n=0] 
[10:50:47.559]    + additional namespaces needed: [n=0] 
[10:50:47.559]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.559]  - seeds: <none>
[10:50:47.560]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.560] getGlobalsAndPackages() ...
[10:50:47.560] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.560] |  Resolving globals: FALSE
[10:50:47.560] |  Search for packages associated with the globals ...
[10:50:47.560] |  :  Packages associated with globals: [1] ‘base’
[10:50:47.561] |  :  Packages: [1] ‘base’
[10:50:47.561] |  Search for packages associated with the globals ... DONE
[10:50:47.561] |  Packages after dropping 'base': [0] 
[10:50:47.561] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.561] |  packages: [0] 
[10:50:47.561] getGlobalsAndPackages() ... done
[10:50:47.561] run() for Future (‘Future’) ...
[10:50:47.562] |  state: ‘created’
[10:50:47.562] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.562] |  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.562] |  Using SequentialFutureBackend ...
[10:50:47.562] |  :  Launching futures ...
[10:50:47.562] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[10:50:47.562] |  :  .  |  getFutureData() ...
[10:50:47.562] |  :  .  |  :  getFutureCore() ...
[10:50:47.563] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.563] |  :  .  |  :  getFutureCore() ... done
[10:50:47.563] |  :  .  |  :  getFutureCapture() ...
[10:50:47.563] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.563] |  :  .  |  :  getFutureContext() ...
[10:50:47.563] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.563] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.563] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.564] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.564] |  :  .  |  :  getFutureContext() ... done
[10:50:47.564] |  :  .  |  getFutureData() ... done
[10:50:47.564] |  :  .  |  attachPackages() ...
[10:50:47.564] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.564] |  :  .  |  attachPackages() ... DONE
[10:50:47.564] |  :  .  |  attachPackages() ...
[10:50:47.564] |  :  .  |  :  packages: [n=0] 
[10:50:47.564] |  :  .  |  attachPackages() ... DONE
[10:50:47.565] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.565] |  :  .  |  :  Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.565] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.565] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.566] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.566] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.566] |  :  .  |  :  .  |  New stack:
[10:50:47.566] |  :  .  |  :  .  |  List of 1
[10:50:47.566] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.566] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.566] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.566] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.566] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.566] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.566] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.568] |  :  .  |  :  .  |  Old stack:
[10:50:47.568] |  :  .  |  :  .  |  List of 1
[10:50:47.568] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.568] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.568] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.568] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.568] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.568] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.568] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.568] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.568] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.568] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.571] |  :  .  |  :  .  |  Not identical
[10:50:47.571] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.571] |  :  .  |  :  .  |  :  List of 2
[10:50:47.571] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.571] |  :  .  |  :  .  |  :   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.571] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.571] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.571] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.578] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.578] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.578] |  :  .  |  :  .  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.578] |  :  .  |  :  .  List of future strategies:
[10:50:47.578] |  :  .  |  :  .  1. sequential:
[10:50:47.578] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.578] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.578] |  :  .  |  :  .     - call: plan(sequential)
[10:50:47.579] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.579] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.579] |  :  .  |  assign_globals() ...
[10:50:47.579] |  :  .  |  List of 5
[10:50:47.579] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:47.579] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.579] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:47.579] |  :  .  |    ..$ :List of 2
[10:50:47.579] |  :  .  |    .. ..$ a: num 0
[10:50:47.579] |  :  .  |    .. ..$ b: num 0
[10:50:47.579] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.579] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.579] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.579] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.579] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.579] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.579] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.579] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.579] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.579] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.579] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.579] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.585] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.585] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.585] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.585] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.586] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.586] |  :  .  |  assign_globals() ... done
[10:50:47.587] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.587] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.587] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.588] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.588] |  :  .  |  :  .  |  :  New stack:
[10:50:47.588] |  :  .  |  :  .  |  :  List of 1
[10:50:47.588] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.588] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.588] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.588] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.588] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.588] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.588] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.588] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.588] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.588] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.591] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.591] |  :  .  |  :  .  |  :  List of 1
[10:50:47.591] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.591] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.591] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.591] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.591] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.591] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:47.591] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.591] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.591] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.591] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.594] |  :  .  |  :  .  |  :  Identical
[10:50:47.594] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.594] |  :  .  |  :  .  |  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.594] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.594] |  :  .  |  :  .  |  1. sequential:
[10:50:47.594] |  :  .  |  :  .  |     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.594] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.594] |  :  .  |  :  .  |     - call: plan(sequential)
[10:50:47.595] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.595] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.595] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.595] |  :  .  |  SequentialFuture started (and completed)
[10:50:47.595] |  :  .  launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... DONE
[10:50:47.597] |  :  Launching futures ... done
[10:50:47.597] |  :  Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.597] |  Using SequentialFutureBackend ... done
[10:50:47.597] run() for Future (‘SequentialFuture’) ... done
[10:50:47.597] Created future:
[10:50:47.597] SequentialFuture:
[10:50:47.597] Label: ‘future_mapply-1’
[10:50:47.597] Expression:
[10:50:47.597] {
[10:50:47.597]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.597]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.597]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.597]         on.exit(options(oopts), add = TRUE)
[10:50:47.597]     }
[10:50:47.597]     {
[10:50:47.597]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.597]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.597]         do.call(mapply, args = args)
[10:50:47.597]     }
[10:50:47.597] }
[10:50:47.597] Lazy evaluation: FALSE
[10:50:47.597] Asynchronous evaluation: TRUE
[10:50:47.597] Local evaluation: TRUE
[10:50:47.597] Environment: R_GlobalEnv
[10:50:47.597] Capture standard output: TRUE
[10:50:47.597] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.597] Immediate condition classes: ‘immediateCondition’
[10:50:47.597] Globals: 5 objects totaling 388 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 122 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.597] Packages: <none>
[10:50:47.597] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.597] Resolved: TRUE
[10:50:47.597] Value: 63 bytes of class ‘list’
[10:50:47.597] Early signaling: FALSE
[10:50:47.597] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.597] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[10:50:47.598] Chunk #1 of 1 ... DONE
[10:50:47.599] Launching 1 futures (chunks) ... DONE
[10:50:47.599] Resolving 1 futures (chunks) ...
[10:50:47.599] value() on list ...
[10:50:47.599] |  recursive: 0
[10:50:47.599] |  length: 1
[10:50:47.599] |  
[10:50:47.599] |  Number of remaining objects: 1
[10:50:47.599] |  checking value #1 ...
[10:50:47.599] |  :  'obj' is SequentialFuture
[10:50:47.600] |  :  resolved() for ‘SequentialFuture’ ...
[10:50:47.600] |  :  .  state: ‘finished’
[10:50:47.600] |  :  .  run: TRUE
[10:50:47.600] |  :  .  result: ‘FutureResult’
[10:50:47.600] |  :  resolved() for ‘SequentialFuture’ ... done
[10:50:47.600] |  :  SequentialFuture #1
[10:50:47.600] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.600] |  :  .  nx: 1
[10:50:47.600] |  :  .  relay: TRUE
[10:50:47.600] |  :  .  stdout: TRUE
[10:50:47.601] |  :  .  signal: TRUE
[10:50:47.601] |  :  .  resignal: FALSE
[10:50:47.601] |  :  .  force: TRUE
[10:50:47.601] |  :  .  relayed: [n=1] FALSE
[10:50:47.601] |  :  .  queued futures: [n=1] FALSE
[10:50:47.601] |  :  .  until=1
[10:50:47.601] |  :  .  relaying element #1
[10:50:47.601] |  :  .  relayed: [n=1] TRUE
[10:50:47.602] |  :  .  queued futures: [n=1] TRUE
[10:50:47.602] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.602] |  :  value(<SequentialFuture>, ...) ...
[10:50:47.602] |  :  .  value: <list>
[10:50:47.602] |  :  value(<SequentialFuture>, ...) ... done
[10:50:47.602] |  :  signalConditionsASAP(SequentialFuture, pos=1) ...
[10:50:47.602] |  :  .  nx: 1
[10:50:47.602] |  :  .  relay: TRUE
[10:50:47.602] |  :  .  stdout: TRUE
[10:50:47.603] |  :  .  signal: TRUE
[10:50:47.603] |  :  .  resignal: FALSE
[10:50:47.603] |  :  .  force: TRUE
[10:50:47.603] |  :  .  relayed: [n=1] TRUE
[10:50:47.603] |  :  .  queued futures: [n=1] TRUE
[10:50:47.603] |  :  .  until=1
[10:50:47.603] |  :  .  relayed: [n=1] TRUE
[10:50:47.603] |  :  .  queued futures: [n=1] TRUE
[10:50:47.603] |  :  signalConditionsASAP(SequentialFuture, pos=1) ... done
[10:50:47.604] |  :  length: 0 (resolved future 1)
[10:50:47.604] |  checking value #1 ... done
[10:50:47.604] |  Relaying remaining futures ...
[10:50:47.604] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.604] |  :  .  nx: 1
[10:50:47.604] |  :  .  relay: TRUE
[10:50:47.604] |  :  .  stdout: TRUE
[10:50:47.604] |  :  .  signal: TRUE
[10:50:47.604] |  :  .  resignal: FALSE
[10:50:47.604] |  :  .  force: TRUE
[10:50:47.604] |  :  .  relayed: [n=1] TRUE
[10:50:47.604] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:47.605] |  :  .  relayed: [n=1] TRUE
[10:50:47.605] |  :  .  queued futures: [n=1] TRUE
[10:50:47.605] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.605] |  Relaying remaining futures ... done
[10:50:47.605] value() on list ... done
[10:50:47.605]  - Number of value chunks collected: 1
[10:50:47.605] Resolving 1 futures (chunks) ... DONE
[10:50:47.605] Reducing values from 1 chunks ...
[10:50:47.605]  - Number of values collected after concatenation: 2
[10:50:47.605]  - Number of values expected: 2
[10:50:47.605] Reducing values from 1 chunks ... DONE
[10:50:47.606] future_mapply() ... DONE
[10:50:47.606] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.606] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:47.606] |  :  all.equal() for FutureStrategyList ...
[10:50:47.606] |  :  .  New stack:
[10:50:47.606] |  :  .  List of 1
[10:50:47.606] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.606] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.606] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.606] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.606] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.606] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:47.606] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.608] |  :  .  Old stack:
[10:50:47.608] |  :  .  List of 1
[10:50:47.608] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.608] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.608] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.608] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.608] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.608] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:47.608] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.608] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.608] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.608] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.611] |  :  .  Not identical
[10:50:47.611] |  :  .  all.equal() for future ...
[10:50:47.611] |  :  .  |  List of 2
[10:50:47.611] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.611] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.611] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.611] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.611] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.611] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.611] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.611] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.611] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.611] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.611] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.611] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.611] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.611] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.611] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.618] |  :  .  all.equal() for future ... done
[10:50:47.618] |  :  all.equal() for FutureStrategyList ... done
[10:50:47.618] |  :  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:47.618] |  :  List of future strategies:
[10:50:47.618] |  :  1. sequential:
[10:50:47.618] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.618] |  :     - tweaked: FALSE
[10:50:47.618] |  :     - call: plan(sequential)
[10:50:47.619] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:47.619] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
*** strategy = ‘sequential’ ... done
*** strategy = ‘multicore’ ...
[10:50:47.619] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.619] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:47.619] |  :  all.equal() for FutureStrategyList ...
[10:50:47.620] |  :  .  New stack:
[10:50:47.620] |  :  .  List of 1
[10:50:47.620] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.620] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.620] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.620] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.620] |  :  .      ...)  
[10:50:47.620] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.620] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.620] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.620] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.622] |  :  .  Old stack:
[10:50:47.622] |  :  .  List of 1
[10:50:47.622] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.622] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.622] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.622] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.622] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.622] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:47.622] |  :  .    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.622] |  :  .    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.622] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.622] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.625] |  :  .  Not identical
[10:50:47.625] |  :  .  all.equal() for future ...
[10:50:47.625] |  :  .  |  List of 2
[10:50:47.625] |  :  .  |   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.625] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.625] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.625] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.625] |  :  .  |      ...)  
[10:50:47.625] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.625] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.625] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.625] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.625] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.625] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.625] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.625] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.625] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:47.625] |  :  .  |    ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8dc5be8> 
[10:50:47.625] |  :  .  |    .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.625] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.629] |  :  .  |  Formals differ
[10:50:47.630] |  :  .  all.equal() for future ... done
[10:50:47.630] |  :  .  Future strategies differ at level 1
[10:50:47.630] |  :  all.equal() for FutureStrategyList ... done
[10:50:47.630] |  :  plan(): Setting new future strategy stack:
[10:50:47.630] |  :  List of future strategies:
[10:50:47.630] |  :  1. multicore:
[10:50:47.630] |  :     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:47.630] |  :     - tweaked: FALSE
[10:50:47.630] |  :     - call: plan(strategy)
[10:50:47.630] |  :  List of 1
[10:50:47.630] |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.630] |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.630] |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.630] |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.630] |  :      ...)  
[10:50:47.630] |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.630] |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.630] |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.630] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.632] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:50:47.634] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.634] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.634] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.634] |  :  .  Legacy shutdown of cluster workers ...
[10:50:47.634] |  :  .  |  Stopping existing cluster ...
[10:50:47.635] |  :  .  |  :  No pre-existing cluster. Skipping
[10:50:47.635] |  :  .  |  Stopping existing cluster ... done
[10:50:47.635] |  :  .  Legacy shutdown of cluster workers ... done
[10:50:47.635] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:50:47.635] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:50:47.635] |  :  .  function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.635] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.635] |  :  .   - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.635] |  :  .   - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.635] |  :  .      ...)  
[10:50:47.635] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.635] |  :  .   - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.635] |  :  .   - attr(*, "call")= language plan(strategy)
[10:50:47.637] |  :  .  init: NULL
[10:50:47.637] |  :  plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:50:47.637] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.637] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.637] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.637] |  :  Backend function: <‘NULL’>
[10:50:47.639] |  :  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.639] |  :  plan(): nbrOfWorkers() = 2
[10:50:47.639] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:47.640] plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- From example(mapply) ...
[10:50:47.640] future_mapply() ...
[10:50:47.640] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.640] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.640] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.640] Backend function: <‘NULL’>
[10:50:47.651] Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.652] Number of chunks: 2
[10:50:47.652] getGlobalsAndPackagesXApply() ...
[10:50:47.652]  - future.globals: TRUE
[10:50:47.652] getGlobalsAndPackages() ...
[10:50:47.652] |  Searching for globals ...
[10:50:47.653] |  :  globals found: [1] ‘FUN’
[10:50:47.653] |  Searching for globals ... DONE
[10:50:47.653] |  Resolving globals: FALSE
[10:50:47.653] |  Search for packages associated with the globals ...
[10:50:47.653] |  :  Packages associated with globals: [0] 
[10:50:47.653] |  :  Packages: [0] 
[10:50:47.654] |  Search for packages associated with the globals ... DONE
[10:50:47.654] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:47.654] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:47.654] |  Packages after dropping 'base': [0] 
[10:50:47.654] |  globals: [1] ‘FUN’
[10:50:47.654] |  packages: [0] 
[10:50:47.654] getGlobalsAndPackages() ... done
[10:50:47.654]  - globals found/used: [n=1] ‘FUN’
[10:50:47.655]  - needed namespaces: [n=0] 
[10:50:47.655] Finding globals ... DONE
[10:50:47.655] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.655] List of 2
[10:50:47.655]  $ ...future.FUN:function (x, ...)  
[10:50:47.655]  $ MoreArgs     : NULL
[10:50:47.655]  - attr(*, "where")=List of 2
[10:50:47.655]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.655]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.655]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.655]  - attr(*, "resolved")= logi FALSE
[10:50:47.655]  - attr(*, "total_size")= num NA
[10:50:47.658] Packages to be attached in all futures: [n=0] 
[10:50:47.658] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.658] Number of futures (= number of chunks): 2
[10:50:47.658] Launching 2 futures (chunks) ...
[10:50:47.658] Chunk #1 of 2 ...
[10:50:47.658]  - Finding globals in '...' for chunk #1 ...
[10:50:47.658] getGlobalsAndPackages() ...
[10:50:47.658] |  Searching for globals ...
[10:50:47.659] |  :  globals found: [0] 
[10:50:47.659] |  Searching for globals ... DONE
[10:50:47.659] |  globals: [0] <none>
[10:50:47.659] |  packages: [0] <none>
[10:50:47.659] getGlobalsAndPackages() ... done
[10:50:47.659]    + additional globals found: [n=0] 
[10:50:47.659]    + additional namespaces needed: [n=0] 
[10:50:47.659]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.660]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.660]  - seeds: <none>
[10:50:47.660]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.660] getGlobalsAndPackages() ...
[10:50:47.660] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.660] |  Resolving globals: FALSE
[10:50:47.660] |  Search for packages associated with the globals ...
[10:50:47.660] |  :  Packages associated with globals: [0] 
[10:50:47.661] |  :  Packages: [0] 
[10:50:47.661] |  Search for packages associated with the globals ... DONE
[10:50:47.661] |  Packages after dropping 'base': [0] 
[10:50:47.661] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.661] |  packages: [0] 
[10:50:47.661] getGlobalsAndPackages() ... done
[10:50:47.661] run() for Future (‘Future’) ...
[10:50:47.661] |  state: ‘created’
[10:50:47.662] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.662] |  :  makeFutureBackend(<multicore>) ...
[10:50:47.662] |  :  .  Backend function: <‘NULL’>
[10:50:47.663] |  :  .  Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.663] |  :  makeFutureBackend(<multicore>) ... done
[10:50:47.663] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.664] |  Using MulticoreFutureBackend ...
[10:50:47.664] |  :  Launching futures ...
[10:50:47.664] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.664] |  :  .  |  getFutureData() ...
[10:50:47.664] |  :  .  |  :  getFutureCore() ...
[10:50:47.664] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.664] |  :  .  |  :  getFutureCore() ... done
[10:50:47.664] |  :  .  |  :  getFutureCapture() ...
[10:50:47.665] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.665] |  :  .  |  :  getFutureContext() ...
[10:50:47.665] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.665] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.665] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.665] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.665] |  :  .  |  :  getFutureContext() ... done
[10:50:47.666] |  :  .  |  getFutureData() ... done
[10:50:47.666] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.666] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.669] |  :  .  |  MulticoreFuture started
[10:50:47.670] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.670] |  :  .  |  attachPackages() ...
[10:50:47.670] |  :  Launching futures ... done
[10:50:47.670] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.670] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.670] |  Using MulticoreFutureBackend ... done
[10:50:47.670] |  :  .  |  attachPackages() ... DONE
[10:50:47.670] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.670] |  :  .  |  attachPackages() ...
[10:50:47.671] |  :  .  |  :  packages: [n=0] 
[10:50:47.671] Created future:
[10:50:47.671] |  :  .  |  attachPackages() ... DONE
[10:50:47.672] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.672] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.672] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.673] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.673] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.673] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.673] |  :  .  |  :  .  |  New stack:
[10:50:47.674] |  :  .  |  :  .  |  List of 1
[10:50:47.674] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.674] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.674] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.674] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.674] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.674] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.674] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.683] |  :  .  |  :  .  |  Old stack:
[10:50:47.683] readImmediateCondition() ...
[10:50:47.683]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.684]  - Number of RDS files: 0
[10:50:47.684] readImmediateCondition() ... DONE
[10:50:47.671] MulticoreFuture:
[10:50:47.671] Label: ‘future_mapply-1’
[10:50:47.671] Expression:
[10:50:47.671] {
[10:50:47.671]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.671]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.671]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.671]         on.exit(options(oopts), add = TRUE)
[10:50:47.671]     }
[10:50:47.671]     {
[10:50:47.671]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.671]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.671]         do.call(mapply, args = args)
[10:50:47.671]     }
[10:50:47.671] }
[10:50:47.671] Lazy evaluation: FALSE
[10:50:47.671] Asynchronous evaluation: TRUE
[10:50:47.671] Local evaluation: TRUE
[10:50:47.671] Environment: R_GlobalEnv
[10:50:47.671] Capture standard output: TRUE
[10:50:47.671] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.671] Immediate condition classes: ‘immediateCondition’
[10:50:47.671] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.671] Packages: <none>
[10:50:47.671] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.671] Resolved: FALSE
[10:50:47.671] Value: <not collected>
[10:50:47.671] Conditions captured: <none>
[10:50:47.671] Early signaling: FALSE
[10:50:47.671] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.671] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.684] Chunk #1 of 2 ... DONE
[10:50:47.685] Chunk #2 of 2 ...
[10:50:47.685]  - Finding globals in '...' for chunk #2 ...
[10:50:47.685] getGlobalsAndPackages() ...
[10:50:47.685] |  Searching for globals ...
[10:50:47.686] |  :  globals found: [0] 
[10:50:47.686] |  Searching for globals ... DONE
[10:50:47.686] |  globals: [0] <none>
[10:50:47.686] |  packages: [0] <none>
[10:50:47.686] getGlobalsAndPackages() ... done
[10:50:47.686]    + additional globals found: [n=0] 
[10:50:47.689]    + additional namespaces needed: [n=0] 
[10:50:47.689]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:47.689]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.689]  - seeds: <none>
[10:50:47.683] |  :  .  |  :  .  |  List of 1
[10:50:47.683] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.683] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.683] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.683] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.683] |  :  .  |  :  .  |      ...)  
[10:50:47.683] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.683] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.683] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.683] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.683] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.683] |  :  .  |  :  .  |      ...)  
[10:50:47.683] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.683] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.690]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.690] |  :  .  |  :  .  |  Not identical
[10:50:47.690] getGlobalsAndPackages() ...
[10:50:47.690] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.690] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.690] |  Resolving globals: FALSE
[10:50:47.691] |  Search for packages associated with the globals ...
[10:50:47.691] |  :  Packages associated with globals: [0] 
[10:50:47.692] |  :  Packages: [0] 
[10:50:47.692] |  Search for packages associated with the globals ... DONE
[10:50:47.692] |  Packages after dropping 'base': [0] 
[10:50:47.692] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.693] |  packages: [0] 
[10:50:47.693] getGlobalsAndPackages() ... done
[10:50:47.693] run() for Future (‘Future’) ...
[10:50:47.693] |  state: ‘created’
[10:50:47.694] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.694] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.694] |  Using MulticoreFutureBackend ...
[10:50:47.694] |  :  Launching futures ...
[10:50:47.694] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.695] |  :  .  |  getFutureData() ...
[10:50:47.695] |  :  .  |  :  getFutureCore() ...
[10:50:47.695] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.695] |  :  .  |  :  getFutureCore() ... done
[10:50:47.695] |  :  .  |  :  getFutureCapture() ...
[10:50:47.695] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.696] |  :  .  |  :  getFutureContext() ...
[10:50:47.696] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.696] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.696] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.690] |  :  .  |  :  .  |  :  List of 2
[10:50:47.690] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.690] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.690] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.690] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.690] |  :  .  |  :  .  |  :      ...)  
[10:50:47.690] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.690] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.690] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.690] |  :  .  |  :  .  |  :      ...)  
[10:50:47.690] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.696] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.696] |  :  .  |  :  getFutureContext() ... done
[10:50:47.697] |  :  .  |  getFutureData() ... done
[10:50:47.697] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.697] |  :  .  |  :  .  |  :  Formals differ
[10:50:47.697] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.697] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:47.697] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.697] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.698] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:47.698] |  :  .  |  :  .  List of future strategies:
[10:50:47.698] |  :  .  |  :  .  1. sequential:
[10:50:47.698] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.698] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.698] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.698] |  :  .  |  :  .  List of 1
[10:50:47.698] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.698] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.698] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.698] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.698] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.698] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.698] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.701] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.701] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.701] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.701] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.702] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.702] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:47.702] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.702] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:47.702] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.702] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.703] |  :  .  |  assign_globals() ...
[10:50:47.703] |  :  .  |  MulticoreFuture started
[10:50:47.704] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.704] |  :  .  |  attachPackages() ...
[10:50:47.704] |  :  Launching futures ... done
[10:50:47.704] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.705] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.705] |  :  .  |  attachPackages() ... DONE
[10:50:47.705] |  Using MulticoreFutureBackend ... done
[10:50:47.705] |  :  .  |  attachPackages() ...
[10:50:47.705] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.706] |  :  .  |  :  packages: [n=0] 
[10:50:47.706] Created future:
[10:50:47.706] |  :  .  |  attachPackages() ... DONE
[10:50:47.707] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.708] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.708] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.709] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.709] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.709] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.709] |  :  .  |  :  .  |  New stack:
[10:50:47.703] |  :  .  |  List of 5
[10:50:47.703] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.703] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.703] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.703] |  :  .  |    ..$ :List of 2
[10:50:47.703] |  :  .  |    .. ..$ : int 1
[10:50:47.703] |  :  .  |    .. ..$ : int 2
[10:50:47.703] |  :  .  |    ..$ :List of 2
[10:50:47.703] |  :  .  |    .. ..$ : int 4
[10:50:47.703] |  :  .  |    .. ..$ : int 3
[10:50:47.703] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.703] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.703] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.703] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.703] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.703] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.703] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.703] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.703] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.703] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.703] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.703] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.712] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.712] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.712] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.712] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.713] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.713] |  :  .  |  assign_globals() ... done
[10:50:47.710] |  :  .  |  :  .  |  List of 1
[10:50:47.710] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.710] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.710] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.710] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.710] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.710] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.710] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.714] |  :  .  |  :  .  |  Old stack:
[10:50:47.715] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.715] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.715] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.716] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.716] |  :  .  |  :  .  |  :  New stack:
[10:50:47.718] readImmediateCondition() ...
[10:50:47.716] |  :  .  |  :  .  |  :  List of 1
[10:50:47.716] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.716] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.716] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.716] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.716] |  :  .  |  :  .  |  :      ...)  
[10:50:47.716] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.716] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.716] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.716] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.716] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.716] |  :  .  |  :  .  |  :      ...)  
[10:50:47.716] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.716] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.719] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.719]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.719]  - Number of RDS files: 0
[10:50:47.719] readImmediateCondition() ... DONE
[10:50:47.714] |  :  .  |  :  .  |  List of 1
[10:50:47.714] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.714] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.714] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.714] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.714] |  :  .  |  :  .  |      ...)  
[10:50:47.714] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.714] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.714] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.714] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.714] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.714] |  :  .  |  :  .  |      ...)  
[10:50:47.714] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.714] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.706] MulticoreFuture:
[10:50:47.706] Label: ‘future_mapply-2’
[10:50:47.706] Expression:
[10:50:47.706] {
[10:50:47.706]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.706]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.706]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.706]         on.exit(options(oopts), add = TRUE)
[10:50:47.706]     }
[10:50:47.706]     {
[10:50:47.706]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.706]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.706]         do.call(mapply, args = args)
[10:50:47.706]     }
[10:50:47.706] }
[10:50:47.706] Lazy evaluation: FALSE
[10:50:47.706] Asynchronous evaluation: TRUE
[10:50:47.706] Local evaluation: TRUE
[10:50:47.706] Environment: R_GlobalEnv
[10:50:47.706] Capture standard output: TRUE
[10:50:47.706] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.706] Immediate condition classes: ‘immediateCondition’
[10:50:47.706] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.706] Packages: <none>
[10:50:47.706] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.706] Resolved: FALSE
[10:50:47.706] Value: <not collected>
[10:50:47.706] Conditions captured: <none>
[10:50:47.706] Early signaling: FALSE
[10:50:47.706] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.706] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.720] |  :  .  |  :  .  |  Not identical
[10:50:47.720] Chunk #2 of 2 ... DONE
[10:50:47.720] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.720] Launching 2 futures (chunks) ... DONE
[10:50:47.720] Resolving 2 futures (chunks) ...
[10:50:47.721] value() on list ...
[10:50:47.719] |  :  .  |  :  .  |  :  List of 1
[10:50:47.719] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.719] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.719] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.719] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.719] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.719] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.719] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.721] |  :  .  |  :  .  |  :  Not identical
[10:50:47.721] |  recursive: 0
[10:50:47.721] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:47.721] |  length: 2
[10:50:47.721] |  
[10:50:47.722] |  Number of remaining objects: 2
[10:50:47.722] |  checking value #1 ...
[10:50:47.722] |  :  'obj' is MulticoreFuture
[10:50:47.721] |  :  .  |  :  .  |  :  .  List of 2
[10:50:47.721] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.721] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.721] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.721] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.721] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.721] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.721] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.721] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.721] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.721] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.729] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:47.729] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:47.729] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:47.729] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.729] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:47.729] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.729] |  :  .  |  :  .  |  1. multicore:
[10:50:47.729] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:47.729] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.729] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:47.732] |  :  readImmediateCondition() ...
[10:50:47.720] |  :  .  |  :  .  |  :  List of 2
[10:50:47.720] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.720] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.720] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.720] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.720] |  :  .  |  :  .  |  :      ...)  
[10:50:47.720] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.720] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.720] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.720] |  :  .  |  :  .  |  :      ...)  
[10:50:47.720] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1[10:50:47.733] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.733] |  :   - Number of RDS files: 0
[10:50:47.730] |  :  .  |  :  .  |  List of 1
[10:50:47.730] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.730] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.730] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.730] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.730] |  :  .  |  :  .  |      ...)  
[10:50:47.730] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.730] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.730] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.730] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.730] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.730] |  :  .  |  :  .  |      ...)  
[10:50:47.730] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.730] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.733] |  :  readImmediateCondition() ... DONE
[10:50:47.733] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.734] |  checking value #1 ... done
[10:50:47.734] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.734] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.734] |  checking value #2 ...
[10:50:47.734] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.734] |  :  'obj' is MulticoreFuture
[10:50:47.734] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.734] |  :  .  |  :  .  |  :  Formals differ
[10:50:47.734] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:47.734] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.734] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.734] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.734] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:47.735] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.735] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.735] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:47.735] |  :  .  |  :  .  List of future strategies:
[10:50:47.735] |  :  .  |  :  .  1. sequential:
[10:50:47.735] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.735] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.735] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.736] |  :  .  |  :  .  List of 1
[10:50:47.736] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.736] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.736] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.736] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.736] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.736] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.736] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.739] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.739] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.740] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.740] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.740] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.740] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:47.740] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.741] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:47.741] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.741] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.741] |  :  .  |  assign_globals() ...
[10:50:47.744] |  :  readImmediateCondition() ...
[10:50:47.744] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.745] |  :   - Number of RDS files: 0
[10:50:47.745] |  :  readImmediateCondition() ... DONE
[10:50:47.745] |  checking value #2 ... done
[10:50:47.741] |  :  .  |  List of 5
[10:50:47.741] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.741] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.741] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.741] |  :  .  |    ..$ :List of 2
[10:50:47.741] |  :  .  |    .. ..$ : int 3
[10:50:47.741] |  :  .  |    .. ..$ : int 4
[10:50:47.741] |  :  .  |    ..$ :List of 2
[10:50:47.741] |  :  .  |    .. ..$ : int 2
[10:50:47.741] |  :  .  |    .. ..$ : int 1
[10:50:47.741] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.741] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.741] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.741] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.741] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.741] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.741] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.741] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.741] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.741] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.741] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.741] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.748] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.748] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.748] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.748] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.749] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.749] |  :  .  |  assign_globals() ... done
[10:50:47.751] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.751] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.754] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.754] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.754] |  :  .  |  :  .  |  :  New stack:
[10:50:47.756] |  Number of remaining objects: 2
[10:50:47.756] |  checking value #1 ...
[10:50:47.756] |  :  'obj' is MulticoreFuture
[10:50:47.756] |  :  readImmediateCondition() ...
[10:50:47.756] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.757] |  :   - Number of RDS files: 0
[10:50:47.757] |  :  readImmediateCondition() ... DONE
[10:50:47.757] |  :  MulticoreFuture #1
[10:50:47.757] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:47.758] |  :  .  nx: 2
[10:50:47.758] |  :  .  relay: TRUE
[10:50:47.758] |  :  .  stdout: TRUE
[10:50:47.758] |  :  .  signal: TRUE
[10:50:47.758] |  :  .  resignal: FALSE
[10:50:47.759] |  :  .  force: TRUE
[10:50:47.759] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:47.759] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:47.754] |  :  .  |  :  .  |  :  List of 1
[10:50:47.754] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.754] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.754] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.754] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.754] |  :  .  |  :  .  |  :      ...)  
[10:50:47.754] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.754] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.754] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.754] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.754] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.754] |  :  .  |  :  .  |  :      ...)  
[10:50:47.754] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.754] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.759] |  :  .  until=1
[10:50:47.759] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.759] |  :  .  relaying element #1
[10:50:47.762] |  :  .  result() for MulticoreFuture ...
[10:50:47.763] |  :  .  |  readImmediateCondition() ...
[10:50:47.763] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.759] |  :  .  |  :  .  |  :  List of 1
[10:50:47.759] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.759] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.759] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.759] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.759] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.759] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.759] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.763] |  :  .  |  :  .  |  :  Not identical
[10:50:47.763] |  :  .  |   - Number of RDS files: 0
[10:50:47.763] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:47.763] |  :  .  |  readImmediateCondition() ... DONE
[10:50:47.764] |  :  .  |  result() for MulticoreFuture ...
[10:50:47.764] |  :  .  |  result() for MulticoreFuture ... done
[10:50:47.764] |  :  .  result() for MulticoreFuture ... done
[10:50:47.764] |  :  .  result() for MulticoreFuture ...
[10:50:47.765] |  :  .  result() for MulticoreFuture ... done
[10:50:47.765] |  :  .  result() for MulticoreFuture ...
[10:50:47.765] |  :  .  result() for MulticoreFuture ... done
[10:50:47.766] |  :  .  result() for MulticoreFuture ...
[10:50:47.766] |  :  .  result() for MulticoreFuture ... done
[10:50:47.766] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.766] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.766] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:47.767] |  :  value(<MulticoreFuture>, ...) ...
[10:50:47.767] |  :  .  result() for MulticoreFuture ...
[10:50:47.767] |  :  .  result() for MulticoreFuture ... done
[10:50:47.767] |  :  .  result() for MulticoreFuture ...
[10:50:47.768] |  :  .  result() for MulticoreFuture ... done
[10:50:47.768] |  :  .  value: <list>
[10:50:47.768] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:47.768] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:47.768] |  :  .  nx: 2
[10:50:47.769] |  :  .  relay: TRUE
[10:50:47.769] |  :  .  stdout: TRUE
[10:50:47.769] |  :  .  signal: TRUE
[10:50:47.769] |  :  .  resignal: FALSE
[10:50:47.769] |  :  .  force: TRUE
[10:50:47.770] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.764] |  :  .  |  :  .  |  :  .  List of 2
[10:50:47.764] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.764] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.764] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.764] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.764] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.764] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.764] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.764] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.764] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.764] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.771] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:47.771] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:47.772] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:47.772] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.772] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:47.772] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.772] |  :  .  |  :  .  |  1. multicore:
[10:50:47.772] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:47.772] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.772] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:47.770] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.773] |  :  .  until=2
[10:50:47.773] |  :  .  relaying element #2
[10:50:47.773] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.774] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.774] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:47.774] |  :  length: 1 (resolved future 1)
[10:50:47.775] |  checking value #1 ... done
[10:50:47.775] |  checking value #2 ...
[10:50:47.775] |  :  'obj' is MulticoreFuture
[10:50:47.773] |  :  .  |  :  .  |  List of 1
[10:50:47.773] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.773] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.773] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.773] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.773] |  :  .  |  :  .  |      ...)  
[10:50:47.773] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.773] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.773] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.773] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.773] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.773] |  :  .  |  :  .  |      ...)  
[10:50:47.773] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.773] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.777] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.777] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.777] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.777] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.777] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.778] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:47.778] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.778] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.778] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.778] |  :  readImmediateCondition() ...
[10:50:47.778] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.779] |  :   - Number of RDS files: 0
[10:50:47.779] |  :  readImmediateCondition() ... DONE
[10:50:47.779] |  :  MulticoreFuture #2
[10:50:47.779] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:47.779] |  :  .  nx: 2
[10:50:47.779] |  :  .  relay: TRUE
[10:50:47.780] |  :  .  stdout: TRUE
[10:50:47.780] |  :  .  signal: TRUE
[10:50:47.780] |  :  .  resignal: FALSE
[10:50:47.780] |  :  .  force: TRUE
[10:50:47.780] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.780] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.780] |  :  .  until=2
[10:50:47.781] |  :  .  relaying element #2
[10:50:47.781] |  :  .  result() for MulticoreFuture ...
[10:50:47.781] |  :  .  |  readImmediateCondition() ...
[10:50:47.781] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.782] |  :  .  |   - Number of RDS files: 0
[10:50:47.782] |  :  .  |  readImmediateCondition() ... DONE
[10:50:47.782] |  :  .  |  result() for MulticoreFuture ...
[10:50:47.782] |  :  .  |  result() for MulticoreFuture ... done
[10:50:47.783] |  :  .  result() for MulticoreFuture ... done
[10:50:47.783] |  :  .  result() for MulticoreFuture ...
[10:50:47.783] |  :  .  result() for MulticoreFuture ... done
[10:50:47.783] |  :  .  result() for MulticoreFuture ...
[10:50:47.784] |  :  .  result() for MulticoreFuture ... done
[10:50:47.784] |  :  .  result() for MulticoreFuture ...
[10:50:47.784] |  :  .  result() for MulticoreFuture ... done
[10:50:47.784] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.784] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.785] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:47.785] |  :  value(<MulticoreFuture>, ...) ...
[10:50:47.785] |  :  .  result() for MulticoreFuture ...
[10:50:47.785] |  :  .  result() for MulticoreFuture ... done
[10:50:47.786] |  :  .  result() for MulticoreFuture ...
[10:50:47.786] |  :  .  result() for MulticoreFuture ... done
[10:50:47.786] |  :  .  value: <list>
[10:50:47.786] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:47.786] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:47.786] |  :  .  nx: 2
[10:50:47.787] |  :  .  relay: TRUE
[10:50:47.787] |  :  .  stdout: TRUE
[10:50:47.787] |  :  .  signal: TRUE
[10:50:47.787] |  :  .  resignal: FALSE
[10:50:47.787] |  :  .  force: TRUE
[10:50:47.787] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.787] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.787] |  :  .  until=2
[10:50:47.787] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.788] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.788] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:47.788] |  :  length: 0 (resolved future 2)
[10:50:47.788] |  checking value #2 ... done
[10:50:47.788] |  Relaying remaining futures ...
[10:50:47.788] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.788] |  :  .  nx: 2
[10:50:47.788] |  :  .  relay: TRUE
[10:50:47.788] |  :  .  stdout: TRUE
[10:50:47.789] |  :  .  signal: TRUE
[10:50:47.789] |  :  .  resignal: FALSE
[10:50:47.789] |  :  .  force: TRUE
[10:50:47.789] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.789] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:47.789] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.789] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.789] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.789] |  Relaying remaining futures ... done
[10:50:47.789] value() on list ... done
[10:50:47.790]  - Number of value chunks collected: 2
[10:50:47.790] Resolving 2 futures (chunks) ... DONE
[10:50:47.790] Reducing values from 2 chunks ...
[10:50:47.790]  - Number of values collected after concatenation: 4
[10:50:47.790]  - Number of values expected: 4
[10:50:47.790] Reducing values from 2 chunks ... DONE
[10:50:47.790] future_mapply() ... DONE
[10:50:47.790] future_mapply() ...
[10:50:47.790] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.791] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.791] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.791] Number of chunks: 2
[10:50:47.791] getGlobalsAndPackagesXApply() ...
[10:50:47.791]  - future.globals: TRUE
[10:50:47.791] getGlobalsAndPackages() ...
[10:50:47.792] |  Searching for globals ...
[10:50:47.792] |  :  globals found: [1] ‘FUN’
[10:50:47.792] |  Searching for globals ... DONE
[10:50:47.793] |  Resolving globals: FALSE
[10:50:47.793] |  Search for packages associated with the globals ...
[10:50:47.793] |  :  Packages associated with globals: [0] 
[10:50:47.793] |  :  Packages: [0] 
[10:50:47.793] |  Search for packages associated with the globals ... DONE
[10:50:47.793] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:47.794] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:47.794] |  Packages after dropping 'base': [0] 
[10:50:47.794] |  globals: [1] ‘FUN’
[10:50:47.794] |  packages: [0] 
[10:50:47.794] getGlobalsAndPackages() ... done
[10:50:47.794]  - globals found/used: [n=1] ‘FUN’
[10:50:47.794]  - needed namespaces: [n=0] 
[10:50:47.794] Finding globals ... DONE
[10:50:47.795] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.795] List of 2
[10:50:47.795]  $ ...future.FUN:function (x, ...)  
[10:50:47.795]  $ MoreArgs     : NULL
[10:50:47.795]  - attr(*, "where")=List of 2
[10:50:47.795]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.795]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.795]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.795]  - attr(*, "resolved")= logi FALSE
[10:50:47.795]  - attr(*, "total_size")= num NA
[10:50:47.798] Packages to be attached in all futures: [n=0] 
[10:50:47.798] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.798] Number of futures (= number of chunks): 2
[10:50:47.798] Launching 2 futures (chunks) ...
[10:50:47.798] Chunk #1 of 2 ...
[10:50:47.798]  - Finding globals in '...' for chunk #1 ...
[10:50:47.798] getGlobalsAndPackages() ...
[10:50:47.799] |  Searching for globals ...
[10:50:47.802] |  :  globals found: [0] 
[10:50:47.802] |  Searching for globals ... DONE
[10:50:47.802] |  globals: [0] <none>
[10:50:47.802] |  packages: [0] <none>
[10:50:47.802] getGlobalsAndPackages() ... done
[10:50:47.802]    + additional globals found: [n=0] 
[10:50:47.802]    + additional namespaces needed: [n=0] 
[10:50:47.802]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.803]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.803]  - seeds: <none>
[10:50:47.803]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.803] getGlobalsAndPackages() ...
[10:50:47.803] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.803] |  Resolving globals: FALSE
[10:50:47.803] |  Search for packages associated with the globals ...
[10:50:47.803] |  :  Packages associated with globals: [0] 
[10:50:47.804] |  :  Packages: [0] 
[10:50:47.804] |  Search for packages associated with the globals ... DONE
[10:50:47.804] |  Packages after dropping 'base': [0] 
[10:50:47.804] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.804] |  packages: [0] 
[10:50:47.804] getGlobalsAndPackages() ... done
[10:50:47.805] run() for Future (‘Future’) ...
[10:50:47.805] |  state: ‘created’
[10:50:47.805] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.805] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.805] |  Using MulticoreFutureBackend ...
[10:50:47.805] |  :  Launching futures ...
[10:50:47.805] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.805] |  :  .  |  getFutureData() ...
[10:50:47.806] |  :  .  |  :  getFutureCore() ...
[10:50:47.806] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.806] |  :  .  |  :  getFutureCore() ... done
[10:50:47.806] |  :  .  |  :  getFutureCapture() ...
[10:50:47.806] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.806] |  :  .  |  :  getFutureContext() ...
[10:50:47.806] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.806] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.807] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.807] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.807] |  :  .  |  :  getFutureContext() ... done
[10:50:47.807] |  :  .  |  getFutureData() ... done
[10:50:47.807] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.807] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.810] |  :  .  |  MulticoreFuture started
[10:50:47.810] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.810] |  :  .  |  attachPackages() ...
[10:50:47.811] |  :  Launching futures ... done
[10:50:47.811] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.811] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.812] |  :  .  |  attachPackages() ... DONE
[10:50:47.812] |  Using MulticoreFutureBackend ... done
[10:50:47.812] |  :  .  |  attachPackages() ...
[10:50:47.812] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.812] |  :  .  |  :  packages: [n=0] 
[10:50:47.812] Created future:
[10:50:47.813] |  :  .  |  attachPackages() ... DONE
[10:50:47.814] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.814] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.814] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.815] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.816] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.816] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.816] |  :  .  |  :  .  |  New stack:
[10:50:47.816] |  :  .  |  :  .  |  List of 1
[10:50:47.816] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.816] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.816] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.816] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.816] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.816] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.816] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.821] |  :  .  |  :  .  |  Old stack:
[10:50:47.825] readImmediateCondition() ...
[10:50:47.825]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.826]  - Number of RDS files: 0
[10:50:47.826] readImmediateCondition() ... DONE
[10:50:47.821] |  :  .  |  :  .  |  List of 1
[10:50:47.821] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.821] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.821] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.821] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.821] |  :  .  |  :  .  |      ...)  
[10:50:47.821] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.821] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.821] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.821] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.821] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.821] |  :  .  |  :  .  |      ...)  
[10:50:47.821] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.821] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.826] |  :  .  |  :  .  |  Not identical
[10:50:47.813] MulticoreFuture:
[10:50:47.813] Label: ‘future_mapply-1’
[10:50:47.813] Expression:
[10:50:47.813] {
[10:50:47.813]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.813]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.813]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.813]         on.exit(options(oopts), add = TRUE)
[10:50:47.813]     }
[10:50:47.813]     {
[10:50:47.813]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.813]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.813]         do.call(mapply, args = args)
[10:50:47.813]     }
[10:50:47.813] }
[10:50:47.813] Lazy evaluation: FALSE
[10:50:47.813] Asynchronous evaluation: TRUE
[10:50:47.813] Local evaluation: TRUE
[10:50:47.813] Environment: R_GlobalEnv
[10:50:47.813] Capture standard output: TRUE
[10:50:47.813] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.813] Immediate condition classes: ‘immediateCondition’
[10:50:47.813] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.813] Packages: <none>
[10:50:47.813] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.813] Resolved: FALSE
[10:50:47.813] Value: <not collected>
[10:50:47.813] Conditions captured: <none>
[10:50:47.813] Early signaling: FALSE
[10:50:47.813] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.813] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.826] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.826] Chunk #1 of 2 ... DONE
[10:50:47.827] Chunk #2 of 2 ...
[10:50:47.827]  - Finding globals in '...' for chunk #2 ...
[10:50:47.827] getGlobalsAndPackages() ...
[10:50:47.827] |  Searching for globals ...
[10:50:47.828] |  :  globals found: [0] 
[10:50:47.828] |  Searching for globals ... DONE
[10:50:47.829] |  globals: [0] <none>
[10:50:47.829] |  packages: [0] <none>
[10:50:47.829] getGlobalsAndPackages() ... done
[10:50:47.829]    + additional globals found: [n=0] 
[10:50:47.829]    + additional namespaces needed: [n=0] 
[10:50:47.830]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:47.830]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.830]  - seeds: <none>
[10:50:47.830]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.830] getGlobalsAndPackages() ...
[10:50:47.830] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.830] |  Resolving globals: FALSE
[10:50:47.831] |  Search for packages associated with the globals ...
[10:50:47.831] |  :  Packages associated with globals: [0] 
[10:50:47.831] |  :  Packages: [0] 
[10:50:47.832] |  Search for packages associated with the globals ... DONE
[10:50:47.832] |  Packages after dropping 'base': [0] 
[10:50:47.832] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.832] |  packages: [0] 
[10:50:47.832] getGlobalsAndPackages() ... done
[10:50:47.833] run() for Future (‘Future’) ...
[10:50:47.833] |  state: ‘created’
[10:50:47.833] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.833] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.833] |  Using MulticoreFutureBackend ...
[10:50:47.833] |  :  Launching futures ...
[10:50:47.834] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.834] |  :  .  |  getFutureData() ...
[10:50:47.834] |  :  .  |  :  getFutureCore() ...
[10:50:47.834] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.834] |  :  .  |  :  getFutureCore() ... done
[10:50:47.834] |  :  .  |  :  getFutureCapture() ...
[10:50:47.834] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.834] |  :  .  |  :  getFutureContext() ...
[10:50:47.835] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.835] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.835] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.835] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.835] |  :  .  |  :  getFutureContext() ... done
[10:50:47.835] |  :  .  |  getFutureData() ... done
[10:50:47.827] |  :  .  |  :  .  |  :  List of 2
[10:50:47.827] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.827] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.827] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.827] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.827] |  :  .  |  :  .  |  :      ...)  
[10:50:47.827] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.827] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.827] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.827] |  :  .  |  :  .  |  :      ...)  
[10:50:47.827] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.835] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.836] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.836] |  :  .  |  :  .  |  :  Formals differ
[10:50:47.836] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.837] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:47.837] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.837] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:47.837] |  :  .  |  :  .  List of future strategies:
[10:50:47.837] |  :  .  |  :  .  1. sequential:
[10:50:47.837] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.837] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.837] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.838] |  :  .  |  MulticoreFuture started
[10:50:47.839] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.839] |  :  Launching futures ... done
[10:50:47.839] |  :  .  |  attachPackages() ...
[10:50:47.839] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.839] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.840] |  Using MulticoreFutureBackend ... done
[10:50:47.840] |  :  .  |  attachPackages() ... DONE
[10:50:47.840] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.840] |  :  .  |  attachPackages() ...
[10:50:47.840] |  :  .  |  :  packages: [n=0] 
[10:50:47.840] Created future:
[10:50:47.841] |  :  .  |  attachPackages() ... DONE
[10:50:47.838] |  :  .  |  :  .  List of 1
[10:50:47.838] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.838] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.838] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.838] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.838] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.838] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.838] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.841] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.841] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.842] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.842] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.842] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.842] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.842] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:47.842] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.842] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.843] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:47.843] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.843] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.843] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.843] |  :  .  |  assign_globals() ...
[10:50:47.843] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.844] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.844] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.844] |  :  .  |  :  .  |  New stack:
[10:50:47.844] |  :  .  |  :  .  |  List of 1
[10:50:47.844] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.844] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.844] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.844] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.844] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.844] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.844] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.849] |  :  .  |  :  .  |  Old stack:
[10:50:47.843] |  :  .  |  List of 5
[10:50:47.843] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.843] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.843] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.843] |  :  .  |    ..$ :List of 2
[10:50:47.843] |  :  .  |    .. ..$ : int 1
[10:50:47.843] |  :  .  |    .. ..$ : int 2
[10:50:47.843] |  :  .  |    ..$ :List of 2
[10:50:47.843] |  :  .  |    .. ..$ : int 4
[10:50:47.843] |  :  .  |    .. ..$ : int 3
[10:50:47.843] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.843] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.843] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.843] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.843] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.843] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.843] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.843] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.843] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.843] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.843] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.843] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.850] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.850] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.850] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.850] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.850] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.850] |  :  .  |  assign_globals() ... done
[10:50:47.852] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.853] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.853] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.853] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.853] |  :  .  |  :  .  |  :  New stack:
[10:50:47.853] readImmediateCondition() ...
[10:50:47.853]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.854]  - Number of RDS files: 0
[10:50:47.854] readImmediateCondition() ... DONE
[10:50:47.841] MulticoreFuture:
[10:50:47.841] Label: ‘future_mapply-2’
[10:50:47.841] Expression:
[10:50:47.841] {
[10:50:47.841]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.841]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.841]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.841]         on.exit(options(oopts), add = TRUE)
[10:50:47.841]     }
[10:50:47.841]     {
[10:50:47.841]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.841]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.841]         do.call(mapply, args = args)
[10:50:47.841]     }
[10:50:47.841] }
[10:50:47.841] Lazy evaluation: FALSE
[10:50:47.841] Asynchronous evaluation: TRUE
[10:50:47.841] Local evaluation: TRUE
[10:50:47.841] Environment: R_GlobalEnv
[10:50:47.841] Capture standard output: TRUE
[10:50:47.841] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.841] Immediate condition classes: ‘immediateCondition’
[10:50:47.841] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.841] Packages: <none>
[10:50:47.841] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.841] Resolved: FALSE
[10:50:47.841] Value: <not collected>
[10:50:47.841] Conditions captured: <none>
[10:50:47.841] Early signaling: FALSE
[10:50:47.841] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.841] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.855] Chunk #2 of 2 ... DONE
[10:50:47.855] Launching 2 futures (chunks) ... DONE
[10:50:47.855] Resolving 2 futures (chunks) ...
[10:50:47.855] value() on list ...
[10:50:47.855] |  recursive: 0
[10:50:47.856] |  length: 2
[10:50:47.856] |  
[10:50:47.856] |  Number of remaining objects: 2
[10:50:47.856] |  checking value #1 ...
[10:50:47.857] |  :  'obj' is MulticoreFuture
[10:50:47.853] |  :  .  |  :  .  |  :  List of 1
[10:50:47.853] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.853] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.853] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.853] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.853] |  :  .  |  :  .  |  :      ...)  
[10:50:47.853] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.853] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.853] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.853] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.853] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.853] |  :  .  |  :  .  |  :      ...)  
[10:50:47.853] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.853] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.858] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.858] |  :  .  |  :  .  |  :  List of 1
[10:50:47.858] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.858] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.858] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.858] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.858] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.858] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.858] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.861] |  :  .  |  :  .  |  :  Not identical
[10:50:47.861] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:47.849] |  :  .  |  :  .  |  List of 1
[10:50:47.849] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.849] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.849] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.849] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.849] |  :  .  |  :  .  |      ...)  
[10:50:47.849] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.849] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.849] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.849] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.849] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.849] |  :  .  |  :  .  |      ...)  
[10:50:47.849] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.849] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.862] |  :  .  |  :  .  |  Not identical
[10:50:47.862] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.861] |  :  .  |  :  .  |  :  .  List of 2
[10:50:47.861] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.861] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.861] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.861] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.861] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.861] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.861] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.861] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.861] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.861] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.867] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:47.867] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:47.867] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:47.867] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.867] |  :  readImmediateCondition() ...
[10:50:47.867] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:47.867] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.867] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.867] |  :  .  |  :  .  |  1. multicore:
[10:50:47.867] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:47.867] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.867] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:47.867] |  :   - Number of RDS files: 0
[10:50:47.868] |  :  readImmediateCondition() ... DONE
[10:50:47.868] |  checking value #1 ... done
[10:50:47.868] |  checking value #2 ...
[10:50:47.868] |  :  'obj' is MulticoreFuture
[10:50:47.862] |  :  .  |  :  .  |  :  List of 2
[10:50:47.862] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.862] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.862] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.862] |  :  .  |  :  .  |  :      ...)  
[10:50:47.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.862] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.862] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.862] |  :  .  |  :  .  |  :      ...)  
[10:50:47.862] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.868] |  :  .  |  :  .  |  List of 1
[10:50:47.868] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.868] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.868] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.868] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.868] |  :  .  |  :  .  |      ...)  
[10:50:47.868] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.868] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.868] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.868] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.868] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.868] |  :  .  |  :  .  |      ...)  
[10:50:47.868] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.868] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.871] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.871] |  :  .  |  :  .  |  :  Formals differ
[10:50:47.871] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.871] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.871] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.871] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:47.871] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.871] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.871] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.871] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:47.871] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:47.871] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.872] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.872] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.871] |  :  .  |  :  .  List of future strategies:
[10:50:47.871] |  :  .  |  :  .  1. sequential:
[10:50:47.871] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.871] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.871] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.872] |  :  .  |  :  .  List of 1
[10:50:47.872] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.872] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.872] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.872] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.872] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.872] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.872] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.875] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.875] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.876] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.876] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.876] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.876] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:47.876] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.876] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:47.877] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.877] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.877] |  :  .  |  assign_globals() ...
[10:50:47.879] |  :  readImmediateCondition() ...
[10:50:47.879] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.879] |  :   - Number of RDS files: 0
[10:50:47.879] |  :  readImmediateCondition() ... DONE
[10:50:47.880] |  checking value #2 ... done
[10:50:47.877] |  :  .  |  List of 5
[10:50:47.877] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.877] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.877] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.877] |  :  .  |    ..$ :List of 2
[10:50:47.877] |  :  .  |    .. ..$ : int 3
[10:50:47.877] |  :  .  |    .. ..$ : int 4
[10:50:47.877] |  :  .  |    ..$ :List of 2
[10:50:47.877] |  :  .  |    .. ..$ : int 2
[10:50:47.877] |  :  .  |    .. ..$ : int 1
[10:50:47.877] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.877] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.877] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.877] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.877] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.877] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.877] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.877] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.877] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.877] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.877] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.877] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.886] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.887] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.887] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.887] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.887] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.887] |  :  .  |  assign_globals() ... done
[10:50:47.889] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.890] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.890] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.890] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.890] |  :  .  |  :  .  |  :  New stack:
[10:50:47.890] |  Number of remaining objects: 2
[10:50:47.890] |  checking value #1 ...
[10:50:47.890] |  :  'obj' is MulticoreFuture
[10:50:47.891] |  :  readImmediateCondition() ...
[10:50:47.891] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.891] |  :   - Number of RDS files: 0
[10:50:47.894] |  :  readImmediateCondition() ... DONE
[10:50:47.890] |  :  .  |  :  .  |  :  List of 1
[10:50:47.890] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.890] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.890] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.890] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.890] |  :  .  |  :  .  |  :      ...)  
[10:50:47.890] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.890] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.890] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.890] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.890] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.890] |  :  .  |  :  .  |  :      ...)  
[10:50:47.890] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.890] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.895] |  :  MulticoreFuture #1
[10:50:47.895] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.895] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:47.895] |  :  .  nx: 2
[10:50:47.896] |  :  .  relay: TRUE
[10:50:47.896] |  :  .  stdout: TRUE
[10:50:47.896] |  :  .  signal: TRUE
[10:50:47.897] |  :  .  resignal: FALSE
[10:50:47.897] |  :  .  force: TRUE
[10:50:47.897] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:47.898] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:47.898] |  :  .  until=1
[10:50:47.898] |  :  .  relaying element #1
[10:50:47.898] |  :  .  result() for MulticoreFuture ...
[10:50:47.895] |  :  .  |  :  .  |  :  List of 1
[10:50:47.895] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.895] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.895] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.895] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.895] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.895] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.895] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.899] |  :  .  |  :  .  |  :  Not identical
[10:50:47.899] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:47.899] |  :  .  |  readImmediateCondition() ...
[10:50:47.900] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.900] |  :  .  |   - Number of RDS files: 0
[10:50:47.900] |  :  .  |  readImmediateCondition() ... DONE
[10:50:47.900] |  :  .  |  result() for MulticoreFuture ...
[10:50:47.901] |  :  .  |  result() for MulticoreFuture ... done
[10:50:47.901] |  :  .  result() for MulticoreFuture ... done
[10:50:47.901] |  :  .  result() for MulticoreFuture ...
[10:50:47.901] |  :  .  result() for MulticoreFuture ... done
[10:50:47.901] |  :  .  result() for MulticoreFuture ...
[10:50:47.902] |  :  .  result() for MulticoreFuture ... done
[10:50:47.902] |  :  .  result() for MulticoreFuture ...
[10:50:47.902] |  :  .  result() for MulticoreFuture ... done
[10:50:47.902] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.902] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.903] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:47.903] |  :  value(<MulticoreFuture>, ...) ...
[10:50:47.903] |  :  .  result() for MulticoreFuture ...
[10:50:47.903] |  :  .  result() for MulticoreFuture ... done
[10:50:47.903] |  :  .  result() for MulticoreFuture ...
[10:50:47.903] |  :  .  result() for MulticoreFuture ... done
[10:50:47.904] |  :  .  value: <list>
[10:50:47.904] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:47.904] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:47.904] |  :  .  nx: 2
[10:50:47.904] |  :  .  relay: TRUE
[10:50:47.904] |  :  .  stdout: TRUE
[10:50:47.905] |  :  .  signal: TRUE
[10:50:47.905] |  :  .  resignal: FALSE
[10:50:47.905] |  :  .  force: TRUE
[10:50:47.905] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.905] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.899] |  :  .  |  :  .  |  :  .  List of 2
[10:50:47.899] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.899] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.899] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.899] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.899] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.899] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.899] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.899] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.899] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.899] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.905] |  :  .  until=2
[10:50:47.905] |  :  .  relaying element #2
[10:50:47.906] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.906] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.906] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:47.906] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:47.906] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:47.906] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:47.906] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:47.906] |  :  length: 1 (resolved future 1)
[10:50:47.906] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:47.906] |  checking value #1 ... done
[10:50:47.906] |  checking value #2 ...
[10:50:47.907] |  :  'obj' is MulticoreFuture
[10:50:47.906] |  :  .  |  :  .  |  List of future strategies:
[10:50:47.906] |  :  .  |  :  .  |  1. multicore:
[10:50:47.906] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:47.906] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:47.906] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:47.908] |  :  .  |  :  .  |  List of 1
[10:50:47.908] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.908] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.908] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.908] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.908] |  :  .  |  :  .  |      ...)  
[10:50:47.908] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.908] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.908] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.908] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.908] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.908] |  :  .  |  :  .  |      ...)  
[10:50:47.908] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.908] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.912] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.912] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.913] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.913] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.913] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.913] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:47.913] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.913] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.914] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.914] |  :  readImmediateCondition() ...
[10:50:47.914] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.914] |  :   - Number of RDS files: 0
[10:50:47.914] |  :  readImmediateCondition() ... DONE
[10:50:47.915] |  :  MulticoreFuture #2
[10:50:47.915] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:47.915] |  :  .  nx: 2
[10:50:47.915] |  :  .  relay: TRUE
[10:50:47.915] |  :  .  stdout: TRUE
[10:50:47.915] |  :  .  signal: TRUE
[10:50:47.915] |  :  .  resignal: FALSE
[10:50:47.915] |  :  .  force: TRUE
[10:50:47.915] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:47.916] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:47.916] |  :  .  until=2
[10:50:47.916] |  :  .  relaying element #2
[10:50:47.916] |  :  .  result() for MulticoreFuture ...
[10:50:47.916] |  :  .  |  readImmediateCondition() ...
[10:50:47.917] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.917] |  :  .  |   - Number of RDS files: 0
[10:50:47.917] |  :  .  |  readImmediateCondition() ... DONE
[10:50:47.917] |  :  .  |  result() for MulticoreFuture ...
[10:50:47.917] |  :  .  |  result() for MulticoreFuture ... done
[10:50:47.917] |  :  .  result() for MulticoreFuture ... done
[10:50:47.917] |  :  .  result() for MulticoreFuture ...
[10:50:47.918] |  :  .  result() for MulticoreFuture ... done
[10:50:47.918] |  :  .  result() for MulticoreFuture ...
[10:50:47.918] |  :  .  result() for MulticoreFuture ... done
[10:50:47.918] |  :  .  result() for MulticoreFuture ...
[10:50:47.918] |  :  .  result() for MulticoreFuture ... done
[10:50:47.918] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.918] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.918] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:47.919] |  :  value(<MulticoreFuture>, ...) ...
[10:50:47.919] |  :  .  result() for MulticoreFuture ...
[10:50:47.919] |  :  .  result() for MulticoreFuture ... done
[10:50:47.919] |  :  .  result() for MulticoreFuture ...
[10:50:47.919] |  :  .  result() for MulticoreFuture ... done
[10:50:47.919] |  :  .  value: <list>
[10:50:47.919] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:47.919] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:47.920] |  :  .  nx: 2
[10:50:47.920] |  :  .  relay: TRUE
[10:50:47.920] |  :  .  stdout: TRUE
[10:50:47.920] |  :  .  signal: TRUE
[10:50:47.920] |  :  .  resignal: FALSE
[10:50:47.920] |  :  .  force: TRUE
[10:50:47.920] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.920] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.920] |  :  .  until=2
[10:50:47.920] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.921] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.921] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:47.921] |  :  length: 0 (resolved future 2)
[10:50:47.921] |  checking value #2 ... done
[10:50:47.921] |  Relaying remaining futures ...
[10:50:47.921] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:47.921] |  :  .  nx: 2
[10:50:47.921] |  :  .  relay: TRUE
[10:50:47.921] |  :  .  stdout: TRUE
[10:50:47.921] |  :  .  signal: TRUE
[10:50:47.922] |  :  .  resignal: FALSE
[10:50:47.922] |  :  .  force: TRUE
[10:50:47.922] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.922] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:47.922] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:47.922] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:47.922] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:47.922] |  Relaying remaining futures ... done
[10:50:47.922] value() on list ... done
[10:50:47.923]  - Number of value chunks collected: 2
[10:50:47.923] Resolving 2 futures (chunks) ... DONE
[10:50:47.923] Reducing values from 2 chunks ...
[10:50:47.923]  - Number of values collected after concatenation: 4
[10:50:47.923]  - Number of values expected: 4
[10:50:47.923] Reducing values from 2 chunks ... DONE
[10:50:47.923] future_mapply() ... DONE
[10:50:47.923] future_mapply() ...
[10:50:47.923] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.924] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.924] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.924] Number of chunks: 2
[10:50:47.924] getGlobalsAndPackagesXApply() ...
[10:50:47.924]  - future.globals: TRUE
[10:50:47.925] getGlobalsAndPackages() ...
[10:50:47.925] |  Searching for globals ...
[10:50:47.925] |  :  globals found: [1] ‘FUN’
[10:50:47.926] |  Searching for globals ... DONE
[10:50:47.926] |  Resolving globals: FALSE
[10:50:47.926] |  Search for packages associated with the globals ...
[10:50:47.926] |  :  Packages associated with globals: [0] 
[10:50:47.926] |  :  Packages: [0] 
[10:50:47.926] |  Search for packages associated with the globals ... DONE
[10:50:47.926] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:47.927] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:47.927] |  Packages after dropping 'base': [0] 
[10:50:47.927] |  globals: [1] ‘FUN’
[10:50:47.927] |  packages: [0] 
[10:50:47.927] getGlobalsAndPackages() ... done
[10:50:47.927]  - globals found/used: [n=1] ‘FUN’
[10:50:47.927]  - needed namespaces: [n=0] 
[10:50:47.929] Finding globals ... DONE
[10:50:47.930] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:47.930] List of 2
[10:50:47.930]  $ ...future.FUN:function (x, ...)  
[10:50:47.930]  $ MoreArgs     : NULL
[10:50:47.930]  - attr(*, "where")=List of 2
[10:50:47.930]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:47.930]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:47.930]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.930]  - attr(*, "resolved")= logi FALSE
[10:50:47.930]  - attr(*, "total_size")= num NA
[10:50:47.933] Packages to be attached in all futures: [n=0] 
[10:50:47.934] getGlobalsAndPackagesXApply() ... DONE
[10:50:47.934] Number of futures (= number of chunks): 2
[10:50:47.934] Launching 2 futures (chunks) ...
[10:50:47.934] Chunk #1 of 2 ...
[10:50:47.934]  - Finding globals in '...' for chunk #1 ...
[10:50:47.934] getGlobalsAndPackages() ...
[10:50:47.934] |  Searching for globals ...
[10:50:47.935] |  :  globals found: [0] 
[10:50:47.935] |  Searching for globals ... DONE
[10:50:47.935] |  globals: [0] <none>
[10:50:47.935] |  packages: [0] <none>
[10:50:47.935] getGlobalsAndPackages() ... done
[10:50:47.935]    + additional globals found: [n=0] 
[10:50:47.936]    + additional namespaces needed: [n=0] 
[10:50:47.936]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:47.936]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.936]  - seeds: <none>
[10:50:47.936]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.936] getGlobalsAndPackages() ...
[10:50:47.936] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.936] |  Resolving globals: FALSE
[10:50:47.937] |  Search for packages associated with the globals ...
[10:50:47.937] |  :  Packages associated with globals: [0] 
[10:50:47.937] |  :  Packages: [0] 
[10:50:47.937] |  Search for packages associated with the globals ... DONE
[10:50:47.937] |  Packages after dropping 'base': [0] 
[10:50:47.938] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.938] |  packages: [0] 
[10:50:47.938] getGlobalsAndPackages() ... done
[10:50:47.938] run() for Future (‘Future’) ...
[10:50:47.938] |  state: ‘created’
[10:50:47.938] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.938] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.938] |  Using MulticoreFutureBackend ...
[10:50:47.939] |  :  Launching futures ...
[10:50:47.939] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.939] |  :  .  |  getFutureData() ...
[10:50:47.939] |  :  .  |  :  getFutureCore() ...
[10:50:47.939] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.939] |  :  .  |  :  getFutureCore() ... done
[10:50:47.939] |  :  .  |  :  getFutureCapture() ...
[10:50:47.939] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.939] |  :  .  |  :  getFutureContext() ...
[10:50:47.939] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.940] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.940] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.940] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.940] |  :  .  |  :  getFutureContext() ... done
[10:50:47.940] |  :  .  |  getFutureData() ... done
[10:50:47.940] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.941] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.942] |  :  .  |  MulticoreFuture started
[10:50:47.943] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.943] |  :  Launching futures ... done
[10:50:47.943] |  :  .  |  attachPackages() ...
[10:50:47.943] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.943] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.944] |  Using MulticoreFutureBackend ... done
[10:50:47.944] |  :  .  |  attachPackages() ... DONE
[10:50:47.944] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.944] |  :  .  |  attachPackages() ...
[10:50:47.944] Created future:
[10:50:47.944] |  :  .  |  :  packages: [n=0] 
[10:50:47.944] |  :  .  |  attachPackages() ... DONE
[10:50:47.945] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.945] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.946] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.946] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.947] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.947] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.947] |  :  .  |  :  .  |  New stack:
[10:50:47.947] |  :  .  |  :  .  |  List of 1
[10:50:47.947] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.947] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.947] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.947] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.947] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.947] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.947] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.951] |  :  .  |  :  .  |  Old stack:
[10:50:47.956] readImmediateCondition() ...
[10:50:47.956]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.951] |  :  .  |  :  .  |  List of 1
[10:50:47.951] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.951] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.951] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.951] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.951] |  :  .  |  :  .  |      ...)  
[10:50:47.951] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.951] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.951] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.951] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.951] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.951] |  :  .  |  :  .  |      ...)  
[10:50:47.951] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.951] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.957]  - Number of RDS files: 0
[10:50:47.957] |  :  .  |  :  .  |  Not identical
[10:50:47.957] readImmediateCondition() ... DONE
[10:50:47.944] MulticoreFuture:
[10:50:47.944] Label: ‘future_mapply-1’
[10:50:47.944] Expression:
[10:50:47.944] {
[10:50:47.944]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.944]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.944]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.944]         on.exit(options(oopts), add = TRUE)
[10:50:47.944]     }
[10:50:47.944]     {
[10:50:47.944]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.944]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.944]         do.call(mapply, args = args)
[10:50:47.944]     }
[10:50:47.944] }
[10:50:47.944] Lazy evaluation: FALSE
[10:50:47.944] Asynchronous evaluation: TRUE
[10:50:47.944] Local evaluation: TRUE
[10:50:47.944] Environment: R_GlobalEnv
[10:50:47.944] Capture standard output: TRUE
[10:50:47.944] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.944] Immediate condition classes: ‘immediateCondition’
[10:50:47.944] Globals: 5 objects totaling 265 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.944] Packages: <none>
[10:50:47.944] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.944] Resolved: FALSE
[10:50:47.944] Value: <not collected>
[10:50:47.944] Conditions captured: <none>
[10:50:47.944] Early signaling: FALSE
[10:50:47.944] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.944] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.957] Chunk #1 of 2 ... DONE
[10:50:47.957] Chunk #2 of 2 ...
[10:50:47.958]  - Finding globals in '...' for chunk #2 ...
[10:50:47.958] getGlobalsAndPackages() ...
[10:50:47.958] |  Searching for globals ...
[10:50:47.959] |  :  globals found: [0] 
[10:50:47.959] |  Searching for globals ... DONE
[10:50:47.959] |  globals: [0] <none>
[10:50:47.959] |  packages: [0] <none>
[10:50:47.959] getGlobalsAndPackages() ... done
[10:50:47.959]    + additional globals found: [n=0] 
[10:50:47.959]    + additional namespaces needed: [n=0] 
[10:50:47.957] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.959]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:47.960]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:47.960]  - seeds: <none>
[10:50:47.960]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.960] getGlobalsAndPackages() ...
[10:50:47.960] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.960] |  Resolving globals: FALSE
[10:50:47.960] |  Search for packages associated with the globals ...
[10:50:47.961] |  :  Packages associated with globals: [0] 
[10:50:47.961] |  :  Packages: [0] 
[10:50:47.961] |  Search for packages associated with the globals ... DONE
[10:50:47.962] |  Packages after dropping 'base': [0] 
[10:50:47.962] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:47.962] |  packages: [0] 
[10:50:47.962] getGlobalsAndPackages() ... done
[10:50:47.962] run() for Future (‘Future’) ...
[10:50:47.963] |  state: ‘created’
[10:50:47.963] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.963] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.963] |  Using MulticoreFutureBackend ...
[10:50:47.963] |  :  Launching futures ...
[10:50:47.963] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.964] |  :  .  |  getFutureData() ...
[10:50:47.964] |  :  .  |  :  getFutureCore() ...
[10:50:47.964] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:47.964] |  :  .  |  :  getFutureCore() ... done
[10:50:47.964] |  :  .  |  :  getFutureCapture() ...
[10:50:47.964] |  :  .  |  :  getFutureCapture() ... done
[10:50:47.964] |  :  .  |  :  getFutureContext() ...
[10:50:47.965] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.965] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:47.965] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.965] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:47.965] |  :  .  |  :  getFutureContext() ... done
[10:50:47.965] |  :  .  |  getFutureData() ... done
[10:50:47.965] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.966] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:47.968] |  :  .  |  MulticoreFuture started
[10:50:47.969] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:47.960] |  :  .  |  :  .  |  :  List of 2
[10:50:47.960] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.960] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.960] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.960] |  :  .  |  :  .  |  :      ...)  
[10:50:47.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.960] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.960] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.960] |  :  .  |  :  .  |  :      ...)  
[10:50:47.960] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.969] |  :  .  |  attachPackages() ...
[10:50:47.970] |  :  .  |  :  .  |  :  Formals differ
[10:50:47.970] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:47.970] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:47.970] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:47.971] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:47.971] |  :  .  |  :  .  List of future strategies:
[10:50:47.971] |  :  .  |  :  .  1. sequential:
[10:50:47.971] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:47.971] |  :  .  |  :  .     - tweaked: FALSE
[10:50:47.971] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.969] |  :  Launching futures ... done
[10:50:47.973] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:47.973] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.974] |  :  .  |  attachPackages() ... DONE
[10:50:47.974] |  Using MulticoreFutureBackend ... done
[10:50:47.971] |  :  .  |  :  .  List of 1
[10:50:47.971] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.971] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.971] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.971] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.971] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.971] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.971] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.975] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:47.974] |  :  .  |  attachPackages() ...
[10:50:47.975] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:47.974] run() for Future (‘MulticoreFuture’) ... done
[10:50:47.975] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.975] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:47.975] |  :  .  |  :  packages: [n=0] 
[10:50:47.975] Created future:
[10:50:47.975] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.976] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:47.976] |  :  .  |  attachPackages() ... DONE
[10:50:47.976] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:47.976] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:47.976] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:47.976] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:47.977] |  :  .  |  assign_globals() ...
[10:50:47.977] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:47.977] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:47.978] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:47.979] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.980] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.980] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:47.981] |  :  .  |  :  .  |  New stack:
[10:50:47.977] |  :  .  |  List of 5
[10:50:47.977] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:47.977] |  :  .  |   $ MoreArgs                 : NULL
[10:50:47.977] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:47.977] |  :  .  |    ..$ times:List of 2
[10:50:47.977] |  :  .  |    .. ..$ : int 1
[10:50:47.977] |  :  .  |    .. ..$ : int 2
[10:50:47.977] |  :  .  |    ..$ x    :List of 2
[10:50:47.977] |  :  .  |    .. ..$ : int 4
[10:50:47.977] |  :  .  |    .. ..$ : int 3
[10:50:47.977] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:47.977] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:47.977] |  :  .  |   - attr(*, "where")=List of 5
[10:50:47.977] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:47.977] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:47.977] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:47.977] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:47.977] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:47.977] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:47.977] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:47.977] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:47.977] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:47.983] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:47.983] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:47.984] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:47.984] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:47.984] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:47.986] |  :  .  |  assign_globals() ... done
[10:50:47.981] |  :  .  |  :  .  |  List of 1
[10:50:47.981] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.981] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.981] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.981] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.981] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.981] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.981] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.987] |  :  .  |  :  .  |  Old stack:
[10:50:47.989] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.989] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:47.989] readImmediateCondition() ...
[10:50:47.989] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:47.989] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:47.989] |  :  .  |  :  .  |  :  New stack:
[10:50:47.989]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:47.990]  - Number of RDS files: 0
[10:50:47.990] readImmediateCondition() ... DONE
[10:50:47.976] MulticoreFuture:
[10:50:47.976] Label: ‘future_mapply-2’
[10:50:47.976] Expression:
[10:50:47.976] {
[10:50:47.976]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:47.976]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:47.976]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:47.976]         on.exit(options(oopts), add = TRUE)
[10:50:47.976]     }
[10:50:47.976]     {
[10:50:47.976]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:47.976]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:47.976]         do.call(mapply, args = args)
[10:50:47.976]     }
[10:50:47.976] }
[10:50:47.976] Lazy evaluation: FALSE
[10:50:47.976] Asynchronous evaluation: TRUE
[10:50:47.976] Local evaluation: TRUE
[10:50:47.976] Environment: R_GlobalEnv
[10:50:47.976] Capture standard output: TRUE
[10:50:47.976] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:47.976] Immediate condition classes: ‘immediateCondition’
[10:50:47.976] Globals: 5 objects totaling 265 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:47.976] Packages: <none>
[10:50:47.976] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:47.976] Resolved: FALSE
[10:50:47.976] Value: <not collected>
[10:50:47.976] Conditions captured: <none>
[10:50:47.976] Early signaling: FALSE
[10:50:47.976] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:47.976] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:47.991] Chunk #2 of 2 ... DONE
[10:50:47.991] Launching 2 futures (chunks) ... DONE
[10:50:47.992] Resolving 2 futures (chunks) ...
[10:50:47.992] value() on list ...
[10:50:47.992] |  recursive: 0
[10:50:47.993] |  length: 2
[10:50:47.993] |  
[10:50:47.993] |  Number of remaining objects: 2
[10:50:47.993] |  checking value #1 ...
[10:50:47.990] |  :  .  |  :  .  |  :  List of 1
[10:50:47.990] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.990] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.990] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.990] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.990] |  :  .  |  :  .  |  :      ...)  
[10:50:47.990] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.990] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.990] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.990] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.990] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.990] |  :  .  |  :  .  |  :      ...)  
[10:50:47.990] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.990] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.994] |  :  'obj' is MulticoreFuture
[10:50:47.994] |  :  .  |  :  .  |  :  Old stack:
[10:50:47.987] |  :  .  |  :  .  |  List of 1
[10:50:47.987] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.987] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.987] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.987] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.987] |  :  .  |  :  .  |      ...)  
[10:50:47.987] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.987] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.987] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:47.987] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.987] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.987] |  :  .  |  :  .  |      ...)  
[10:50:47.987] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.987] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.995] |  :  .  |  :  .  |  Not identical
[10:50:47.995] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:47.994] |  :  .  |  :  .  |  :  List of 1
[10:50:47.994] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:47.994] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:47.994] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.994] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.994] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:47.994] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:47.994] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:47.996] |  :  .  |  :  .  |  :  Not identical
[10:50:47.997] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:47.997] |  :  .  |  :  .  |  :  .  List of 2
[10:50:47.997] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:47.997] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.997] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.997] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.[10:50:47.995] |  :  .  |  :  .  |  :  List of 2
[10:50:47.995] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, ea997] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.intervalrlySignal = FALSE, envir = parent.frame())  
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequentia" ...
[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:47.997] |  :  .  |  :  .  l" "uniprocess" "future" "function"
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObje|  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' cts = +Inf)  
[10:50:47.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "<environment: 0x55f1c6ab7c88> 
[10:50:47.997] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availabgc" "interrupts" ...
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignaleCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.997] |  :  .  |  :  .  |  :  .      ...)  
[10:50:47.997l" "gc" "interrupts" ...
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FAL] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interSE, .init = FALSE)
[10:50:47.995] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multval" ...
[10:50:47.997] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.fraicore"), gc = FALSE, 
[10:50:47.995] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:47.995] |me())  
[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:47.995] |  :  .  "
[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:47.997] | |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf,  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:
[10:50:47.995] |  :  .  |  :  .  |  :      ...)  
[10:50:47.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "tweakab[10:50:47.997] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
le")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:47.995] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:47.995] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:47.995] |  :  .  |  :  .  |  :      ...)  
[10:50:47.995] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.001] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.001] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.001] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.002] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.002] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.002] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.002] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.002] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.002] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.002] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.002] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.002] |  :  .  |  :  .  |  1. multicore:
[10:50:48.002] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.002] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.002] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.002] |  :  .  |  :  .  List of future strategies:
[10:50:48.002] |  :  .  |  :  .  1. sequential:
[10:50:48.002] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.002] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.002] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.004] |  :  readImmediateCondition() ...
[10:50:48.004] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.005] |  :   - Number of RDS files: 0
[10:50:48.005] |  :  readImmediateCondition() ... DONE
[10:50:48.005] |  checking value #1 ... done
[10:50:48.006] |  checking value #2 ...
[10:50:48.003] |  :  .  |  :  .  List of 1
[10:50:48.003] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.003] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.003] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.003] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.003] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.003] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.003] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.006] |  :  'obj' is MulticoreFuture
[10:50:48.006] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.006] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.007] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.007] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.007] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.007] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.007] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.007] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.002] |  :  .  |  :  .  |  List of 1
[10:50:48.002] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.002] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.002] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.002] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.002] |  :  .  |  :  .  |      ...)  
[10:50:48.002] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.002] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.002] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.002] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.002] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.002] |  :  .  |  :  .  |      ...)  
[10:50:48.002] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.002] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.008] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.008] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.008] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.008] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.008] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.008] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.009] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.009] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.009] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.008] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.010] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.010] |  :  .  |  assign_globals() ...
[10:50:48.016] |  :  readImmediateCondition() ...
[10:50:48.017] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.017] |  :   - Number of RDS files: 0
[10:50:48.017] |  :  readImmediateCondition() ... DONE
[10:50:48.018] |  checking value #2 ... done
[10:50:48.010] |  :  .  |  List of 5
[10:50:48.010] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:48.010] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.010] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.010] |  :  .  |    ..$ times:List of 2
[10:50:48.010] |  :  .  |    .. ..$ : int 3
[10:50:48.010] |  :  .  |    .. ..$ : int 4
[10:50:48.010] |  :  .  |    ..$ x    :List of 2
[10:50:48.010] |  :  .  |    .. ..$ : int 2
[10:50:48.010] |  :  .  |    .. ..$ : int 1
[10:50:48.010] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.010] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.010] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.010] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.010] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.010] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.010] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.010] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.010] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.010] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.010] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.010] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.018] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.018] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.018] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.019] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.019] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.019] |  :  .  |  assign_globals() ... done
[10:50:48.021] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.021] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.021] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.021] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.021] |  :  .  |  :  .  |  :  New stack:
[10:50:48.022] |  :  .  |  :  .  |  :  List of 1
[10:50:48.022] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.022] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.022] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.022] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.022] |  :  .  |  :  .  |  :      ...)  
[10:50:48.022] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.022] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.022] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.022] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.022] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.022] |  :  .  |  :  .  |  :      ...)  
[10:50:48.022] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.022] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.025] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.025] |  :  .  |  :  .  |  :  List of 1
[10:50:48.025] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.025] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.025] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.025] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.025] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.025] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.025] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.027] |  :  .  |  :  .  |  :  Not identical
[10:50:48.027] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.028] |  Number of remaining objects: 2
[10:50:48.028] |  checking value #1 ...
[10:50:48.028] |  :  'obj' is MulticoreFuture
[10:50:48.029] |  :  readImmediateCondition() ...
[10:50:48.029] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.029] |  :   - Number of RDS files: 0
[10:50:48.029] |  :  readImmediateCondition() ... DONE
[10:50:48.030] |  :  MulticoreFuture #1
[10:50:48.030] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.030] |  :  .  nx: 2
[10:50:48.030] |  :  .  relay: TRUE
[10:50:48.031] |  :  .  stdout: TRUE
[10:50:48.031] |  :  .  signal: TRUE
[10:50:48.031] |  :  .  resignal: FALSE
[10:50:48.031] |  :  .  force: TRUE
[10:50:48.031] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:48.032] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:48.032] |  :  .  until=1
[10:50:48.032] |  :  .  relaying element #1
[10:50:48.032] |  :  .  result() for MulticoreFuture ...
[10:50:48.033] |  :  .  |  readImmediateCondition() ...
[10:50:48.034] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.034] |  :  .  |   - Number of RDS files: 0
[10:50:48.034] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.035] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.035] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.035] |  :  .  result() for MulticoreFuture ... done
[10:50:48.035] |  :  .  result() for MulticoreFuture ...
[10:50:48.036] |  :  .  result() for MulticoreFuture ... done
[10:50:48.027] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.027] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.027] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.027] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.027] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.027] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.027] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.027] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.027] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.027] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:[10:50:48.036] |  :  .  result() for MulticoreFuture ...
48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.027] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.036] |  :  .  result() for MulticoreFuture ... done
[10:50:48.036] |  :  .  result() for MulticoreFuture ...
[10:50:48.037] |  :  .  result() for MulticoreFuture ... done
[10:50:48.037] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.037] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.037] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.037] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.037] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.037] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.037] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.037] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.037] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.037] |  :  .  result() for MulticoreFuture ...
[10:50:48.038] |  :  .  result() for MulticoreFuture ... done
[10:50:48.037] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.037] |  :  .  |  :  .  |  1. multicore:
[10:50:48.037] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.037] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.037] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.038] |  :  .  result() for MulticoreFuture ...
[10:50:48.038] |  :  .  result() for MulticoreFuture ... done
[10:50:48.038] |  :  .  value: <list>
[10:50:48.038] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.038] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.039] |  :  .  nx: 2
[10:50:48.039] |  :  .  relay: TRUE
[10:50:48.039] |  :  .  stdout: TRUE
[10:50:48.039] |  :  .  signal: TRUE
[10:50:48.039] |  :  .  resignal: FALSE
[10:50:48.039] |  :  .  force: TRUE
[10:50:48.039] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.039] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.039] |  :  .  until=2
[10:50:48.040] |  :  .  relaying element #2
[10:50:48.040] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.040] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.040] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.040] |  :  length: 1 (resolved future 1)
[10:50:48.040] |  checking value #1 ... done
[10:50:48.040] |  checking value #2 ...
[10:50:48.040] |  :  'obj' is MulticoreFuture
[10:50:48.038] |  :  .  |  :  .  |  List of 1
[10:50:48.038] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.038] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.038] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.038] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.038] |  :  .  |  :  .  |      ...)  
[10:50:48.038] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.038] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.038] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.038] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.038] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.038] |  :  .  |  :  .  |      ...)  
[10:50:48.038] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.038] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.041] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.041] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.042] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.042] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.042] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.042] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.042] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.042] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.042] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.043] |  :  readImmediateCondition() ...
[10:50:48.043] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.043] |  :   - Number of RDS files: 0
[10:50:48.043] |  :  readImmediateCondition() ... DONE
[10:50:48.043] |  :  MulticoreFuture #2
[10:50:48.043] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.043] |  :  .  nx: 2
[10:50:48.044] |  :  .  relay: TRUE
[10:50:48.044] |  :  .  stdout: TRUE
[10:50:48.044] |  :  .  signal: TRUE
[10:50:48.044] |  :  .  resignal: FALSE
[10:50:48.044] |  :  .  force: TRUE
[10:50:48.044] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.044] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.044] |  :  .  until=2
[10:50:48.044] |  :  .  relaying element #2
[10:50:48.044] |  :  .  result() for MulticoreFuture ...
[10:50:48.045] |  :  .  |  readImmediateCondition() ...
[10:50:48.045] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.045] |  :  .  |   - Number of RDS files: 0
[10:50:48.045] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.045] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.046] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.046] |  :  .  result() for MulticoreFuture ... done
[10:50:48.046] |  :  .  result() for MulticoreFuture ...
[10:50:48.046] |  :  .  result() for MulticoreFuture ... done
[10:50:48.046] |  :  .  result() for MulticoreFuture ...
[10:50:48.046] |  :  .  result() for MulticoreFuture ... done
[10:50:48.046] |  :  .  result() for MulticoreFuture ...
[10:50:48.047] |  :  .  result() for MulticoreFuture ... done
[10:50:48.047] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.047] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.047] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.047] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.047] |  :  .  result() for MulticoreFuture ...
[10:50:48.047] |  :  .  result() for MulticoreFuture ... done
[10:50:48.047] |  :  .  result() for MulticoreFuture ...
[10:50:48.047] |  :  .  result() for MulticoreFuture ... done
[10:50:48.048] |  :  .  value: <list>
[10:50:48.048] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.048] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.048] |  :  .  nx: 2
[10:50:48.048] |  :  .  relay: TRUE
[10:50:48.048] |  :  .  stdout: TRUE
[10:50:48.048] |  :  .  signal: TRUE
[10:50:48.048] |  :  .  resignal: FALSE
[10:50:48.048] |  :  .  force: TRUE
[10:50:48.048] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.049] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.049] |  :  .  until=2
[10:50:48.049] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.049] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.049] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.049] |  :  length: 0 (resolved future 2)
[10:50:48.049] |  checking value #2 ... done
[10:50:48.049] |  Relaying remaining futures ...
[10:50:48.050] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.050] |  :  .  nx: 2
[10:50:48.050] |  :  .  relay: TRUE
[10:50:48.050] |  :  .  stdout: TRUE
[10:50:48.050] |  :  .  signal: TRUE
[10:50:48.050] |  :  .  resignal: FALSE
[10:50:48.050] |  :  .  force: TRUE
[10:50:48.050] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.050] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:48.050] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.051] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.052] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.053] |  Relaying remaining futures ... done
[10:50:48.053] value() on list ... done
[10:50:48.053]  - Number of value chunks collected: 2
[10:50:48.053] Resolving 2 futures (chunks) ... DONE
[10:50:48.053] Reducing values from 2 chunks ...
[10:50:48.053]  - Number of values collected after concatenation: 4
[10:50:48.053]  - Number of values expected: 4
[10:50:48.053] Reducing values from 2 chunks ... DONE
[10:50:48.053] future_mapply() ... DONE
[10:50:48.054] future_mapply() ...
[10:50:48.054] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.054] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.054] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.055] Number of chunks: 2
[10:50:48.055] getGlobalsAndPackagesXApply() ...
[10:50:48.055]  - future.globals: TRUE
[10:50:48.055] getGlobalsAndPackages() ...
[10:50:48.055] |  Searching for globals ...
[10:50:48.056] |  :  globals found: [1] ‘FUN’
[10:50:48.056] |  Searching for globals ... DONE
[10:50:48.056] |  Resolving globals: FALSE
[10:50:48.057] |  Search for packages associated with the globals ...
[10:50:48.057] |  :  Packages associated with globals: [0] 
[10:50:48.057] |  :  Packages: [0] 
[10:50:48.057] |  Search for packages associated with the globals ... DONE
[10:50:48.057] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:48.058] |  The total size of the 1 globals exported for future expression (‘FUN(x = 42)’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:48.058] |  Packages after dropping 'base': [0] 
[10:50:48.058] |  globals: [1] ‘FUN’
[10:50:48.058] |  packages: [0] 
[10:50:48.058] getGlobalsAndPackages() ... done
[10:50:48.058]  - globals found/used: [n=1] ‘FUN’
[10:50:48.058]  - needed namespaces: [n=0] 
[10:50:48.058] Finding globals ... DONE
[10:50:48.059] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.059] List of 2
[10:50:48.059]  $ ...future.FUN:function (x, ...)  
[10:50:48.059]  $ MoreArgs     :List of 1
[10:50:48.059]   ..$ x: num 42
[10:50:48.059]  - attr(*, "where")=List of 2
[10:50:48.059]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.059]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.059]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.059]  - attr(*, "resolved")= logi FALSE
[10:50:48.059]  - attr(*, "total_size")= num NA
[10:50:48.062] Packages to be attached in all futures: [n=0] 
[10:50:48.063] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.063] Number of futures (= number of chunks): 2
[10:50:48.063] Launching 2 futures (chunks) ...
[10:50:48.063] Chunk #1 of 2 ...
[10:50:48.063]  - Finding globals in '...' for chunk #1 ...
[10:50:48.063] getGlobalsAndPackages() ...
[10:50:48.063] |  Searching for globals ...
[10:50:48.064] |  :  globals found: [0] 
[10:50:48.064] |  Searching for globals ... DONE
[10:50:48.064] |  globals: [0] <none>
[10:50:48.064] |  packages: [0] <none>
[10:50:48.064] getGlobalsAndPackages() ... done
[10:50:48.064]    + additional globals found: [n=0] 
[10:50:48.064]    + additional namespaces needed: [n=0] 
[10:50:48.064]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.064]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.064]  - seeds: <none>
[10:50:48.065]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.065] getGlobalsAndPackages() ...
[10:50:48.065] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.065] |  Resolving globals: FALSE
[10:50:48.065] |  Search for packages associated with the globals ...
[10:50:48.065] |  :  Packages associated with globals: [0] 
[10:50:48.065] |  :  Packages: [0] 
[10:50:48.066] |  Search for packages associated with the globals ... DONE
[10:50:48.066] |  Packages after dropping 'base': [0] 
[10:50:48.066] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.066] |  packages: [0] 
[10:50:48.066] getGlobalsAndPackages() ... done
[10:50:48.066] run() for Future (‘Future’) ...
[10:50:48.067] |  state: ‘created’
[10:50:48.067] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.067] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.067] |  Using MulticoreFutureBackend ...
[10:50:48.067] |  :  Launching futures ...
[10:50:48.067] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.067] |  :  .  |  getFutureData() ...
[10:50:48.067] |  :  .  |  :  getFutureCore() ...
[10:50:48.067] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.067] |  :  .  |  :  getFutureCore() ... done
[10:50:48.068] |  :  .  |  :  getFutureCapture() ...
[10:50:48.068] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.068] |  :  .  |  :  getFutureContext() ...
[10:50:48.068] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.068] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.068] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.068] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.068] |  :  .  |  :  getFutureContext() ... done
[10:50:48.068] |  :  .  |  getFutureData() ... done
[10:50:48.069] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.069] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.071] |  :  .  |  MulticoreFuture started
[10:50:48.071] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.071] |  :  Launching futures ... done
[10:50:48.071] |  :  .  |  attachPackages() ...
[10:50:48.071] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.072] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.072] |  Using MulticoreFutureBackend ... done
[10:50:48.072] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.072] |  :  .  |  attachPackages() ... DONE
[10:50:48.072] |  :  .  |  attachPackages() ...
[10:50:48.072] Created future:
[10:50:48.072] |  :  .  |  :  packages: [n=0] 
[10:50:48.073] |  :  .  |  attachPackages() ... DONE
[10:50:48.073] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.074] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.074] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.074] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.075] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.075] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.075] |  :  .  |  :  .  |  New stack:
[10:50:48.084] readImmediateCondition() ...
[10:50:48.084]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.085]  - Number of RDS files: 0
[10:50:48.085] readImmediateCondition() ... DONE
[10:50:48.075] |  :  .  |  :  .  |  List of 1
[10:50:48.075] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.075] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.075] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.075] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.075] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.075] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.075] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.085] |  :  .  |  :  .  |  Old stack:
[10:50:48.072] MulticoreFuture:
[10:50:48.072] Label: ‘future_mapply-1’
[10:50:48.072] Expression:
[10:50:48.072] {
[10:50:48.072]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.072]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.072]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.072]         on.exit(options(oopts), add = TRUE)
[10:50:48.072]     }
[10:50:48.072]     {
[10:50:48.072]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.072]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.072]         do.call(mapply, args = args)
[10:50:48.072]     }
[10:50:48.072] }
[10:50:48.072] Lazy evaluation: FALSE
[10:50:48.072] Asynchronous evaluation: TRUE
[10:50:48.072] Local evaluation: TRUE
[10:50:48.072] Environment: R_GlobalEnv
[10:50:48.072] Capture standard output: TRUE
[10:50:48.072] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.072] Immediate condition classes: ‘immediateCondition’
[10:50:48.072] Globals: 5 objects totaling 286 bytes (function ‘...future.FUN’ of 34 bytes, list ‘MoreArgs’ of 89 bytes, list ‘...future.elements_ii’ of 109 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.072] Packages: <none>
[10:50:48.072] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.072] Resolved: FALSE
[10:50:48.072] Value: <not collected>
[10:50:48.072] Conditions captured: <none>
[10:50:48.072] Early signaling: FALSE
[10:50:48.072] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.072] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.085] Chunk #1 of 2 ... DONE
[10:50:48.085] Chunk #2 of 2 ...
[10:50:48.086]  - Finding globals in '...' for chunk #2 ...
[10:50:48.086] getGlobalsAndPackages() ...
[10:50:48.086] |  Searching for globals ...
[10:50:48.087] |  :  globals found: [0] 
[10:50:48.087] |  Searching for globals ... DONE
[10:50:48.087] |  globals: [0] <none>
[10:50:48.087] |  packages: [0] <none>
[10:50:48.089] getGlobalsAndPackages() ... done
[10:50:48.089]    + additional globals found: [n=0] 
[10:50:48.090]    + additional namespaces needed: [n=0] 
[10:50:48.090]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.090]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.090]  - seeds: <none>
[10:50:48.090]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.091] getGlobalsAndPackages() ...
[10:50:48.091] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.091] |  Resolving globals: FALSE
[10:50:48.091] |  Search for packages associated with the globals ...
[10:50:48.092] |  :  Packages associated with globals: [0] 
[10:50:48.085] |  :  .  |  :  .  |  List of 1
[10:50:48.085] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.085] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.085] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.085] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.085] |  :  .  |  :  .  |      ...)  
[10:50:48.085] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.085] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.085] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.085] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.085] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.085] |  :  .  |  :  .  |      ...)  
[10:50:48.085] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.085] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.092] |  :  .  |  :  .  |  Not identical
[10:50:48.092] |  :  Packages: [0] 
[10:50:48.092] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.093] |  Search for packages associated with the globals ... DONE
[10:50:48.093] |  Packages after dropping 'base': [0] 
[10:50:48.093] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.093] |  packages: [0] 
[10:50:48.093] getGlobalsAndPackages() ... done
[10:50:48.094] run() for Future (‘Future’) ...
[10:50:48.094] |  state: ‘created’
[10:50:48.094] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.094] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.095] |  Using MulticoreFutureBackend ...
[10:50:48.095] |  :  Launching futures ...
[10:50:48.095] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.095] |  :  .  |  getFutureData() ...
[10:50:48.095] |  :  .  |  :  getFutureCore() ...
[10:50:48.096] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.096] |  :  .  |  :  getFutureCore() ... done
[10:50:48.096] |  :  .  |  :  getFutureCapture() ...
[10:50:48.096] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.096] |  :  .  |  :  getFutureContext() ...
[10:50:48.096] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.097] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.097] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.097] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.097] |  :  .  |  :  getFutureContext() ... done
[10:50:48.097] |  :  .  |  getFutureData() ... done
[10:50:48.097] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.098] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.093] |  :  .  |  :  .  |  :  List of 2
[10:50:48.093] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.093] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.093] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.093] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.093] |  :  .  |  :  .  |  :      ...)  
[10:50:48.093] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.093] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.093] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.093] |  :  .  |  :  .  |  :      ...)  
[10:50:48.093] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.100] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.100] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.100] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.100] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.100] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.100] |  :  .  |  MulticoreFuture started
[10:50:48.101] |  :  .  |  :  .  List of future strategies:
[10:50:48.101] |  :  .  |  :  .  1. sequential:
[10:50:48.101] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.101] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.101] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.101] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.101] |  :  .  |  attachPackages() ...
[10:50:48.102] |  :  Launching futures ... done
[10:50:48.102] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.102] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.103] |  :  .  |  attachPackages() ... DONE
[10:50:48.103] |  Using MulticoreFutureBackend ... done
[10:50:48.101] |  :  .  |  :  .  List of 1
[10:50:48.101] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.101] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.101] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.101] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.101] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.101] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.101] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.103] |  :  .  |  attachPackages() ...
[10:50:48.104] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.104] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.104] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.104] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.104] |  :  .  |  :  packages: [n=0] 
[10:50:48.104] Created future:
[10:50:48.105] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.105] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.105] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.105] |  :  .  |  attachPackages() ... DONE
[10:50:48.105] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.105] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.105] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.105] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.106] |  :  .  |  assign_globals() ...
[10:50:48.106] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.107] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.107] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.108] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.109] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.109] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.110] |  :  .  |  :  .  |  New stack:
[10:50:48.110] |  :  .  |  :  .  |  List of 1
[10:50:48.110] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.110] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.110] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.110] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.110] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.110] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.110] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.115] |  :  .  |  :  .  |  Old stack:
[10:50:48.118] readImmediateCondition() ...
[10:50:48.118]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.119]  - Number of RDS files: 0
[10:50:48.119] readImmediateCondition() ... DONE
[10:50:48.105] MulticoreFuture:
[10:50:48.105] Label: ‘future_mapply-2’
[10:50:48.105] Expression:
[10:50:48.105] {
[10:50:48.105]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.105]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.105]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.105]         on.exit(options(oopts), add = TRUE)
[10:50:48.105]     }
[10:50:48.105]     {
[10:50:48.105]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.105]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.105]         do.call(mapply, args = args)
[10:50:48.105]     }
[10:50:48.105] }
[10:50:48.105] Lazy evaluation: FALSE
[10:50:48.105] Asynchronous evaluation: TRUE
[10:50:48.105] Local evaluation: TRUE
[10:50:48.105] Environment: R_GlobalEnv
[10:50:48.105] Capture standard output: TRUE
[10:50:48.105] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.105] Immediate condition classes: ‘immediateCondition’
[10:50:48.105] Globals: 5 objects totaling 286 bytes (function ‘...future.FUN’ of 34 bytes, list ‘MoreArgs’ of 89 bytes, list ‘...future.elements_ii’ of 109 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.105] Packages: <none>
[10:50:48.105] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.105] Resolved: FALSE
[10:50:48.105] Value: <not collected>
[10:50:48.105] Conditions captured: <none>
[10:50:48.105] Early signaling: FALSE
[10:50:48.105] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.105] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.120] Chunk #2 of 2 ... DONE
[10:50:48.120] Launching 2 futures (chunks) ... DONE
[10:50:48.121] Resolving 2 futures (chunks) ...
[10:50:48.115] |  :  .  |  :  .  |  List of 1
[10:50:48.115] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.115] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.115] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.115] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.115] |  :  .  |  :  .  |      ...)  
[10:50:48.115] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.115] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.115] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.115] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.115] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.115] |  :  .  |  :  .  |      ...)  
[10:50:48.115] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.115] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.121] |  :  .  |  :  .  |  Not identical
[10:50:48.121] value() on list ...
[10:50:48.121] |  recursive: 0
[10:50:48.121] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.121] |  length: 2
[10:50:48.121] |  
[10:50:48.122] |  Number of remaining objects: 2
[10:50:48.122] |  checking value #1 ...
[10:50:48.122] |  :  'obj' is MulticoreFuture
[10:50:48.132] |  :  readImmediateCondition() ...
[10:50:48.133] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.133] |  :   - Number of RDS files: 0
[10:50:48.133] |  :  readImmediateCondition() ... DONE
[10:50:48.134] |  checking value #1 ... done
[10:50:48.134] |  checking value #2 ...
[10:50:48.134] |  :  'obj' is MulticoreFuture
[10:50:48.144] |  :  readImmediateCondition() ...
[10:50:48.145] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.145] |  :   - Number of RDS files: 0
[10:50:48.145] |  :  readImmediateCondition() ... DONE
[10:50:48.146] |  checking value #2 ... done
[10:50:48.156] |  Number of remaining objects: 2
[10:50:48.156] |  checking value #1 ...
[10:50:48.156] |  :  'obj' is MulticoreFuture
[10:50:48.106] |  :  .  |  List of 5
[10:50:48.106] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:48.106] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:48.106] |  :  .  |    ..$ x: num 42
[10:50:48.106] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:48.106] |  :  .  |    ..$ times:List of 2
[10:50:48.106] |  :  .  |    .. ..$ : int 1
[10:50:48.106] |  :  .  |    .. ..$ : int 2
[10:50:48.106] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.106] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.106] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.106] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.106] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.106] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.106] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.106] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.106] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.106] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.106] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.106] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.158] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.158] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.158] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.158] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.159] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.159] |  :  .  |  assign_globals() ... done
[10:50:48.160] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.160] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.161] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.161] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.161] |  :  .  |  :  .  |  :  New stack:
[10:50:48.161] |  :  .  |  :  .  |  :  List of 1
[10:50:48.161] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.161] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.161] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.161] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.161] |  :  .  |  :  .  |  :      ...)  
[10:50:48.161] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.161] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.161] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.161] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.161] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.161] |  :  .  |  :  .  |  :      ...)  
[10:50:48.161] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.161] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.164] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.164] |  :  .  |  :  .  |  :  List of 1
[10:50:48.164] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.164] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.164] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.164] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.164] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.164] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.164] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.166] |  :  .  |  :  .  |  :  Not identical
[10:50:48.166] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.167] |  :  readImmediateCondition() ...
[10:50:48.167] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.167] |  :   - Number of RDS files: 0
[10:50:48.168] |  :  readImmediateCondition() ... DONE
[10:50:48.168] |  checking value #1 ... done
[10:50:48.168] |  checking value #2 ...
[10:50:48.168] |  :  'obj' is MulticoreFuture
[10:50:48.166] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.166] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.166] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.166] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.166] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.166] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.166] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.166] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.166] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.166] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.166] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.171] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.171] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.171] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.171] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.171] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.171] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.171] |  :  .  |  :  .  |  1. multicore:
[10:50:48.171] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.171] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.171] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.172] |  :  .  |  :  .  |  List of 1
[10:50:48.172] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.172] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.172] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.172] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.172] |  :  .  |  :  .  |      ...)  
[10:50:48.172] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.172] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.172] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.172] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.172] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.172] |  :  .  |  :  .  |      ...)  
[10:50:48.172] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.172] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.175] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.175] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.175] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.175] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.175] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.175] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.175] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.175] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.176] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.179] |  :  readImmediateCondition() ...
[10:50:48.121] |  :  .  |  :  .  |  :  List of 2
[10:50:48.121] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.121] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.121] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.121] |  :  .  |  :  .  |  :      ...)  
[10:50:48.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.121] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.121] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.121] |  :  .  |  :  .  |  :      ...)  
[10:50:48.121] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.179] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.179] |  :   - Number of RDS files: 0
[10:50:48.179] |  :  readImmediateCondition() ... DONE
[10:50:48.180] |  checking value #2 ... done
[10:50:48.180] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.180] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.180] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.180] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.180] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.180] |  :  .  |  :  .  List of future strategies:
[10:50:48.180] |  :  .  |  :  .  1. sequential:
[10:50:48.180] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.180] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.180] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.181] |  :  .  |  :  .  List of 1
[10:50:48.181] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.181] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.181] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.181] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.181] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.181] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.181] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.183] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.183] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.183] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.183] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.183] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.183] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.184] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.184] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.184] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.184] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.184] |  :  .  |  assign_globals() ...
[10:50:48.184] |  :  .  |  List of 5
[10:50:48.184] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:48.184] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:48.184] |  :  .  |    ..$ x: num 42
[10:50:48.184] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:48.184] |  :  .  |    ..$ times:List of 2
[10:50:48.184] |  :  .  |    .. ..$ : int 3
[10:50:48.184] |  :  .  |    .. ..$ : int 4
[10:50:48.184] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.184] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.184] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.184] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.184] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.184] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.184] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.184] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.184] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.184] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.184] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.184] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.189] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.190] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.190] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.190] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.190] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.190] |  Number of remaining objects: 2
[10:50:48.190] |  :  .  |  assign_globals() ... done
[10:50:48.190] |  checking value #1 ...
[10:50:48.190] |  :  'obj' is MulticoreFuture
[10:50:48.191] |  :  readImmediateCondition() ...
[10:50:48.191] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.191] |  :   - Number of RDS files: 0
[10:50:48.191] |  :  readImmediateCondition() ... DONE
[10:50:48.192] |  :  MulticoreFuture #1
[10:50:48.192] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.192] |  :  .  nx: 2
[10:50:48.192] |  :  .  relay: TRUE
[10:50:48.192] |  :  .  stdout: TRUE
[10:50:48.192] |  :  .  signal: TRUE
[10:50:48.193] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.193] |  :  .  resignal: FALSE
[10:50:48.193] |  :  .  force: TRUE
[10:50:48.193] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.193] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.193] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:48.193] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.193] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:48.193] |  :  .  |  :  .  |  :  New stack:
[10:50:48.193] |  :  .  until=1
[10:50:48.194] |  :  .  relaying element #1
[10:50:48.194] |  :  .  result() for MulticoreFuture ...
[10:50:48.195] |  :  .  |  readImmediateCondition() ...
[10:50:48.195] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.195] |  :  .  |   - Number of RDS files: 0
[10:50:48.195] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.196] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.196] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.196] |  :  .  result() for MulticoreFuture ... done
[10:50:48.196] |  :  .  result() for MulticoreFuture ...
[10:50:48.197] |  :  .  result() for MulticoreFuture ... done
[10:50:48.197] |  :  .  result() for MulticoreFuture ...
[10:50:48.197] |  :  .  result() for MulticoreFuture ... done
[10:50:48.197] |  :  .  result() for MulticoreFuture ...
[10:50:48.198] |  :  .  result() for MulticoreFuture ... done
[10:50:48.198] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.198] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.198] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.198] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.193] |  :  .  |  :  .  |  :  List of 1
[10:50:48.193] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.193] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.193] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.193] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.193] |  :  .  |  :  .  |  :      ...)  
[10:50:48.193] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.193] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.193] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.193] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.193] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.193] |  :  .  |  :  .  |  :      ...)  
[10:50:48.193] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.193] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.198] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.199] |  :  .  result() for MulticoreFuture ...
[10:50:48.199] |  :  .  result() for MulticoreFuture ... done
[10:50:48.199] |  :  .  result() for MulticoreFuture ...
[10:50:48.199] |  :  .  result() for MulticoreFuture ... done
[10:50:48.199] |  :  .  value: <list>
[10:50:48.200] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.200] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.200] |  :  .  nx: 2
[10:50:48.200] |  :  .  relay: TRUE
[10:50:48.200] |  :  .  stdout: TRUE
[10:50:48.200] |  :  .  signal: TRUE
[10:50:48.201] |  :  .  resignal: FALSE
[10:50:48.201] |  :  .  force: TRUE
[10:50:48.201] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.201] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.201] |  :  .  until=2
[10:50:48.202] |  :  .  relaying element #2
[10:50:48.202] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.202] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.199] |  :  .  |  :  .  |  :  List of 1
[10:50:48.199] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.199] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.199] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.199] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.199] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.199] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.199] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.202] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.202] |  :  .  |  :  .  |  :  Not identical
[10:50:48.202] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.202] |  :  length: 1 (resolved future 1)
[10:50:48.203] |  checking value #1 ... done
[10:50:48.203] |  checking value #2 ...
[10:50:48.203] |  :  'obj' is MulticoreFuture
[10:50:48.202] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.202] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.202] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.202] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.202] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.202] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.202] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.202] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.202] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.202] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.202] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.207] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.207] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.207] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.208] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.208] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.208] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.208] |  :  .  |  :  .  |  1. multicore:
[10:50:48.208] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.208] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.208] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.208] |  :  .  |  :  .  |  List of 1
[10:50:48.208] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.208] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.208] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.208] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.208] |  :  .  |  :  .  |      ...)  
[10:50:48.208] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.208] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.208] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.208] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.208] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.208] |  :  .  |  :  .  |      ...)  
[10:50:48.208] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.208] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.212] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.212] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.212] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.212] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.212] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.213] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.213] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.213] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.213] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.213] |  :  readImmediateCondition() ...
[10:50:48.213] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.214] |  :   - Number of RDS files: 0
[10:50:48.255] |  :  readImmediateCondition() ... DONE
[10:50:48.255] |  :  MulticoreFuture #2
[10:50:48.256] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.256] |  :  .  nx: 2
[10:50:48.256] |  :  .  relay: TRUE
[10:50:48.256] |  :  .  stdout: TRUE
[10:50:48.256] |  :  .  signal: TRUE
[10:50:48.256] |  :  .  resignal: FALSE
[10:50:48.256] |  :  .  force: TRUE
[10:50:48.256] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.256] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.256] |  :  .  until=2
[10:50:48.256] |  :  .  relaying element #2
[10:50:48.256] |  :  .  result() for MulticoreFuture ...
[10:50:48.257] |  :  .  |  readImmediateCondition() ...
[10:50:48.257] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.257] |  :  .  |   - Number of RDS files: 0
[10:50:48.257] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.258] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.258] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.258] |  :  .  result() for MulticoreFuture ... done
[10:50:48.258] |  :  .  result() for MulticoreFuture ...
[10:50:48.258] |  :  .  result() for MulticoreFuture ... done
[10:50:48.258] |  :  .  result() for MulticoreFuture ...
[10:50:48.259] |  :  .  result() for MulticoreFuture ... done
[10:50:48.259] |  :  .  result() for MulticoreFuture ...
[10:50:48.259] |  :  .  result() for MulticoreFuture ... done
[10:50:48.259] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.259] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.259] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.259] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.260] |  :  .  result() for MulticoreFuture ...
[10:50:48.260] |  :  .  result() for MulticoreFuture ... done
[10:50:48.260] |  :  .  result() for MulticoreFuture ...
[10:50:48.260] |  :  .  result() for MulticoreFuture ... done
[10:50:48.260] |  :  .  value: <list>
[10:50:48.260] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.260] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.260] |  :  .  nx: 2
[10:50:48.261] |  :  .  relay: TRUE
[10:50:48.261] |  :  .  stdout: TRUE
[10:50:48.261] |  :  .  signal: TRUE
[10:50:48.261] |  :  .  resignal: FALSE
[10:50:48.261] |  :  .  force: TRUE
[10:50:48.261] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.261] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.261] |  :  .  until=2
[10:50:48.262] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.262] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.262] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.262] |  :  length: 0 (resolved future 2)
[10:50:48.262] |  checking value #2 ... done
[10:50:48.262] |  Relaying remaining futures ...
[10:50:48.262] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.262] |  :  .  nx: 2
[10:50:48.263] |  :  .  relay: TRUE
[10:50:48.263] |  :  .  stdout: TRUE
[10:50:48.263] |  :  .  signal: TRUE
[10:50:48.263] |  :  .  resignal: FALSE
[10:50:48.263] |  :  .  force: TRUE
[10:50:48.263] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.263] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:48.263] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.264] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.264] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.264] |  Relaying remaining futures ... done
[10:50:48.264] value() on list ... done
[10:50:48.264]  - Number of value chunks collected: 2
[10:50:48.264] Resolving 2 futures (chunks) ... DONE
[10:50:48.264] Reducing values from 2 chunks ...
[10:50:48.264]  - Number of values collected after concatenation: 4
[10:50:48.264]  - Number of values expected: 4
[10:50:48.265] Reducing values from 2 chunks ... DONE
[10:50:48.265] future_mapply() ... DONE
[10:50:48.265] future_mapply() ...
[10:50:48.265] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.265] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.265] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.265] Number of chunks: 2
[10:50:48.266] getGlobalsAndPackagesXApply() ...
[10:50:48.266]  - future.globals: TRUE
[10:50:48.266] getGlobalsAndPackages() ...
[10:50:48.266] |  Searching for globals ...
[10:50:48.267] |  :  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:48.267] |  Searching for globals ... DONE
[10:50:48.267] |  Resolving globals: FALSE
[10:50:48.268] |  Search for packages associated with the globals ...
[10:50:48.268] |  :  Packages associated with globals: [1] ‘base’
[10:50:48.268] |  :  Packages: [1] ‘base’
[10:50:48.268] |  Search for packages associated with the globals ... DONE
[10:50:48.268] |  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:48.269] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:48.269] |  Packages after dropping 'base': [0] 
[10:50:48.269] |  globals: [1] ‘FUN’
[10:50:48.269] |  packages: [0] 
[10:50:48.269] getGlobalsAndPackages() ... done
[10:50:48.269]  - globals found/used: [n=1] ‘FUN’
[10:50:48.269]  - needed namespaces: [n=0] 
[10:50:48.269] Finding globals ... DONE
[10:50:48.269] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.270] List of 2
[10:50:48.270]  $ ...future.FUN:function (x, y)  
[10:50:48.270]  $ MoreArgs     : NULL
[10:50:48.270]  - attr(*, "where")=List of 2
[10:50:48.270]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.270]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.270]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.270]  - attr(*, "resolved")= logi FALSE
[10:50:48.270]  - attr(*, "total_size")= num NA
[10:50:48.272] Packages to be attached in all futures: [n=0] 
[10:50:48.272] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.272] Number of futures (= number of chunks): 2
[10:50:48.273] Launching 2 futures (chunks) ...
[10:50:48.273] Chunk #1 of 2 ...
[10:50:48.273]  - Finding globals in '...' for chunk #1 ...
[10:50:48.273] getGlobalsAndPackages() ...
[10:50:48.273] |  Searching for globals ...
[10:50:48.273] |  :  globals found: [0] 
[10:50:48.273] |  Searching for globals ... DONE
[10:50:48.274] |  globals: [0] <none>
[10:50:48.274] |  packages: [0] <none>
[10:50:48.274] getGlobalsAndPackages() ... done
[10:50:48.274]    + additional globals found: [n=0] 
[10:50:48.274]    + additional namespaces needed: [n=0] 
[10:50:48.274]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.274]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.274]  - seeds: <none>
[10:50:48.274]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.274] getGlobalsAndPackages() ...
[10:50:48.274] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.275] |  Resolving globals: FALSE
[10:50:48.275] |  Search for packages associated with the globals ...
[10:50:48.275] |  :  Packages associated with globals: [0] 
[10:50:48.275] |  :  Packages: [0] 
[10:50:48.275] |  Search for packages associated with the globals ... DONE
[10:50:48.275] |  Packages after dropping 'base': [0] 
[10:50:48.275] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.276] |  packages: [0] 
[10:50:48.276] getGlobalsAndPackages() ... done
[10:50:48.276] run() for Future (‘Future’) ...
[10:50:48.276] |  state: ‘created’
[10:50:48.276] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.276] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.276] |  Using MulticoreFutureBackend ...
[10:50:48.276] |  :  Launching futures ...
[10:50:48.276] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.277] |  :  .  |  getFutureData() ...
[10:50:48.277] |  :  .  |  :  getFutureCore() ...
[10:50:48.277] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.277] |  :  .  |  :  getFutureCore() ... done
[10:50:48.277] |  :  .  |  :  getFutureCapture() ...
[10:50:48.277] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.277] |  :  .  |  :  getFutureContext() ...
[10:50:48.277] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.277] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.277] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.278] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.278] |  :  .  |  :  getFutureContext() ... done
[10:50:48.278] |  :  .  |  getFutureData() ... done
[10:50:48.278] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.278] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.280] |  :  .  |  MulticoreFuture started
[10:50:48.281] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.281] |  :  .  |  attachPackages() ...
[10:50:48.281] |  :  Launching futures ... done
[10:50:48.281] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.281] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.281] |  Using MulticoreFutureBackend ... done
[10:50:48.281] |  :  .  |  attachPackages() ... DONE
[10:50:48.282] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.282] |  :  .  |  attachPackages() ...
[10:50:48.282] |  :  .  |  :  packages: [n=0] 
[10:50:48.282] Created future:
[10:50:48.282] |  :  .  |  attachPackages() ... DONE
[10:50:48.283] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.283] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.283] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.284] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.284] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.284] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.285] |  :  .  |  :  .  |  New stack:
[10:50:48.285] |  :  .  |  :  .  |  List of 1
[10:50:48.285] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.285] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.285] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.285] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.285] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.285] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.285] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.289] |  :  .  |  :  .  |  Old stack:
[10:50:48.289] |  :  .  |  :  .  |  List of 1
[10:50:48.289] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.289] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.289] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.289] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.289] |  :  .  |  :  .  |      ...)  
[10:50:48.289] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.289] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.289] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.289] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.289] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.289] |  :  .  |  :  .  |      ...)  
[10:50:48.289] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.289] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.293] |  :  .  |  :  .  |  Not identical
[10:50:48.293] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.294] readImmediateCondition() ...
[10:50:48.294]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.294]  - Number of RDS files: 0
[10:50:48.294] readImmediateCondition() ... DONE
[10:50:48.282] MulticoreFuture:
[10:50:48.282] Label: ‘future_mapply-1’
[10:50:48.282] Expression:
[10:50:48.282] {
[10:50:48.282]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.282]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.282]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.282]         on.exit(options(oopts), add = TRUE)
[10:50:48.282]     }
[10:50:48.282]     {
[10:50:48.282]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.282]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.282]         do.call(mapply, args = args)
[10:50:48.282]     }
[10:50:48.282] }
[10:50:48.282] Lazy evaluation: FALSE
[10:50:48.282] Asynchronous evaluation: TRUE
[10:50:48.282] Local evaluation: TRUE
[10:50:48.282] Environment: R_GlobalEnv
[10:50:48.282] Capture standard output: TRUE
[10:50:48.282] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.282] Immediate condition classes: ‘immediateCondition’
[10:50:48.282] Globals: 5 objects totaling 645 bytes (function ‘...future.FUN’ of 414 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.282] Packages: <none>
[10:50:48.282] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.282] Resolved: FALSE
[10:50:48.282] Value: <not collected>
[10:50:48.282] Conditions captured: <none>
[10:50:48.282] Early signaling: FALSE
[10:50:48.282] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.282] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.295] Chunk #1 of 2 ... DONE
[10:50:48.295] Chunk #2 of 2 ...
[10:50:48.295]  - Finding globals in '...' for chunk #2 ...
[10:50:48.295] getGlobalsAndPackages() ...
[10:50:48.295] |  Searching for globals ...
[10:50:48.296] |  :  globals found: [0] 
[10:50:48.296] |  Searching for globals ... DONE
[10:50:48.296] |  globals: [0] <none>
[10:50:48.296] |  packages: [0] <none>
[10:50:48.296] getGlobalsAndPackages() ... done
[10:50:48.297]    + additional globals found: [n=0] 
[10:50:48.297]    + additional namespaces needed: [n=0] 
[10:50:48.297]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.297]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.297]  - seeds: <none>
[10:50:48.297]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.297] getGlobalsAndPackages() ...
[10:50:48.297] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.298] |  Resolving globals: FALSE
[10:50:48.298] |  Search for packages associated with the globals ...
[10:50:48.298] |  :  Packages associated with globals: [0] 
[10:50:48.298] |  :  Packages: [0] 
[10:50:48.299] |  Search for packages associated with the globals ... DONE
[10:50:48.299] |  Packages after dropping 'base': [0] 
[10:50:48.299] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.299] |  packages: [0] 
[10:50:48.299] getGlobalsAndPackages() ... done
[10:50:48.294] |  :  .  |  :  .  |  :  List of 2
[10:50:48.294] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.294] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.294] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.294] |  :  .  |  :  .  |  :      ...)  
[10:50:48.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.294] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.294] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.294] |  :  .  |  :  .  |  :      ...)  
[10:50:48.294] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.300] run() for Future (‘Future’) ...
[10:50:48.300] |  state: ‘created’
[10:50:48.300] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.300] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.300] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.300] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.300] |  Using MulticoreFutureBackend ...
[10:50:48.300] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.300] |  :  Launching futures ...
[10:50:48.300] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.300] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.300] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.301] |  :  .  |  getFutureData() ...
[10:50:48.301] |  :  .  |  :  getFutureCore() ...
[10:50:48.301] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.301] |  :  .  |  :  getFutureCore() ... done
[10:50:48.301] |  :  .  |  :  getFutureCapture() ...
[10:50:48.301] |  :  .  |  :  .  List of future strategies:
[10:50:48.301] |  :  .  |  :  .  1. sequential:
[10:50:48.301] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.301] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.301] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.301] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.301] |  :  .  |  :  getFutureContext() ...
[10:50:48.302] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.302] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.302] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.302] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.302] |  :  .  |  :  getFutureContext() ... done
[10:50:48.302] |  :  .  |  getFutureData() ... done
[10:50:48.303] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.303] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.301] |  :  .  |  :  .  List of 1
[10:50:48.301] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.301] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.301] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.301] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.301] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.301] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.301] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.304] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.304] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.305] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.305] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.305] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.305] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.305] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.305] |  :  .  |  MulticoreFuture started
[10:50:48.305] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.306] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.306] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.306] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.306] |  :  Launching futures ... done
[10:50:48.306] |  :  .  |  assign_globals() ...
[10:50:48.306] |  :  .  |  attachPackages() ...
[10:50:48.306] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.306] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.306] |  Using MulticoreFutureBackend ... done
[10:50:48.307] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.307] Created future:
[10:50:48.307] |  :  .  |  attachPackages() ... DONE
[10:50:48.307] |  :  .  |  attachPackages() ...
[10:50:48.307] |  :  .  |  :  packages: [n=0] 
[10:50:48.308] |  :  .  |  attachPackages() ... DONE
[10:50:48.309] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.309] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.309] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.310] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.310] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.310] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.311] |  :  .  |  :  .  |  New stack:
[10:50:48.306] |  :  .  |  List of 5
[10:50:48.306] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:48.306] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.306] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.306] |  :  .  |    ..$ :List of 1
[10:50:48.306] |  :  .  |    .. ..$ a: num 1
[10:50:48.306] |  :  .  |    ..$ :List of 1
[10:50:48.306] |  :  .  |    .. ..$ A: num 10
[10:50:48.306] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.306] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.306] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.306] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.306] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.306] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.306] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.306] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.306] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.306] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.306] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.306] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.314] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.314] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.314] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.314] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.311] |  :  .  |  :  .  |  List of 1
[10:50:48.311] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = F[10:50:48.314] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
ALSE, envir = parent.frame())  
[10:50:48.311] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.311] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.311] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.311] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.311] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.311] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.314] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.314] |  :  .  |  :  .  |  Old stack:
[10:50:48.314] |  :  .  |  assign_globals() ... done
[10:50:48.317] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.317] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.318] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.318] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.318] |  :  .  |  :  .  |  :  New stack:
[10:50:48.314] |  :  .  |  :  .  |  List of 1
[10:50:48.314] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.314] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.314] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.314] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.314] |  :  .  |  :  .  |      ...)  
[10:50:48.314] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.314] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.314] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.314] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.314] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.314] |  :  .  |  :  .  |      ...)  
[10:50:48.314] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.314] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.319] |  :  .  |  :  .  |  Not identical
[10:50:48.319] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.319] readImmediateCondition() ...
[10:50:48.319]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.320]  - Number of RDS files: 0
[10:50:48.320] readImmediateCondition() ... DONE
[10:50:48.307] MulticoreFuture:
[10:50:48.307] Label: ‘future_mapply-2’
[10:50:48.307] Expression:
[10:50:48.307] {
[10:50:48.307]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.307]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.307]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.307]         on.exit(options(oopts), add = TRUE)
[10:50:48.307]     }
[10:50:48.307]     {
[10:50:48.307]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.307]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.307]         do.call(mapply, args = args)
[10:50:48.307]     }
[10:50:48.307] }
[10:50:48.307] Lazy evaluation: FALSE
[10:50:48.307] Asynchronous evaluation: TRUE
[10:50:48.307] Local evaluation: TRUE
[10:50:48.307] Environment: R_GlobalEnv
[10:50:48.307] Capture standard output: TRUE
[10:50:48.307] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.307] Immediate condition classes: ‘immediateCondition’
[10:50:48.307] Globals: 5 objects totaling 695 bytes (function ‘...future.FUN’ of 414 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 200 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.307] Packages: <none>
[10:50:48.307] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.307] Resolved: FALSE
[10:50:48.307] Value: <not collected>
[10:50:48.307] Conditions captured: <none>
[10:50:48.307] Early signaling: FALSE
[10:50:48.307] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.307] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.321] Chunk #2 of 2 ... DONE
[10:50:48.321] Launching 2 futures (chunks) ... DONE
[10:50:48.321] Resolving 2 futures (chunks) ...
[10:50:48.322] value() on list ...
[10:50:48.322] |  recursive: 0
[10:50:48.318] |  :  .  |  :  .  |  :  List of 1
[10:50:48.318] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.318] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.318] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.318] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.318] |  :  .  |  :  .  |  :      ...)  
[10:50:48.318] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.318] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.318] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.318] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.318] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.318] |  :  .  |  :  .  |  :      ...)  
[10:50:48.318] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.318] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.322] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.322] |  length: 2
[10:50:48.322] |  
[10:50:48.322] |  Number of remaining objects: 2
[10:50:48.323] |  checking value #1 ...
[10:50:48.323] |  :  'obj' is MulticoreFuture
[10:50:48.322] |  :  .  |  :  .  |  :  List of 1
[10:50:48.322] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.322] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.322] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.322] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.322] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.322] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.322] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.325] |  :  .  |  :  .  |  :  Not identical
[10:50:48.325] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.319] |  :  .  |  :  .  |  :  List of 2
[10:50:48.319] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.319] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.319] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.319] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.319] |  :  .  |  :  .  |  :      ...)  
[10:50:48.319] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.319] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.319] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.319] |  :  .  |  :  .  |  :      ...)  
[10:50:48.319] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.327] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.327] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.328] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.328] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.328] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.328] |  :  .  |  :  .  List of future strategies:
[10:50:48.328] |  :  .  |  :  .  1. sequential:
[10:50:48.328] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.328] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.328] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.325] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.325] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.325] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.325] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.325] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.325] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.325] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.325] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.325] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.325] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.325] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.329] |  :  .  |  :  .  List of 1
[10:50:48.329] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.329] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.329] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.329] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.329] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.329] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.329] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.332] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.332] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.332] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.332] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.332] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.332] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.332] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.332] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.332] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.332] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.332] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.332] |  :  .  |  :  .  |  1. multicore:
[10:50:48.332] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.332] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.332] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.333] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.333] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.333] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.333] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.333] |  :  readImmediateCondition() ...
[10:50:48.333] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.333] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.334] |  :   - Number of RDS files: 0
[10:50:48.334] |  :  .  |  assign_globals() ...
[10:50:48.334] |  :  readImmediateCondition() ... DONE
[10:50:48.334] |  checking value #1 ... done
[10:50:48.334] |  checking value #2 ...
[10:50:48.334] |  :  'obj' is MulticoreFuture
[10:50:48.333] |  :  .  |  :  .  |  List of 1
[10:50:48.333] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.333] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.333] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.333] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.333] |  :  .  |  :  .  |      ...)  
[10:50:48.333] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.333] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.333] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.333] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.333] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.333] |  :  .  |  :  .  |      ...)  
[10:50:48.333] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.333] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.337] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.337] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.337] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.337] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.337] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.338] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.338] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.338] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.338] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.334] |  :  .  |  List of 5
[10:50:48.334] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:48.334] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.334] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.334] |  :  .  |    ..$ :List of 2
[10:50:48.334] |  :  .  |    .. ..$ b: num 2
[10:50:48.334] |  :  .  |    .. ..$ c: num 3
[10:50:48.334] |  :  .  |    ..$ :List of 2
[10:50:48.334] |  :  .  |    .. ..$ B: num 0
[10:50:48.334] |  :  .  |    .. ..$ C: num -10
[10:50:48.334] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.334] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.334] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.334] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.334] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.334] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.334] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.334] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.334] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.334] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.334] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.334] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.343] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.343] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.343] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.343] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.343] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.343] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.344] |  :  .  |  assign_globals() ... done
[10:50:48.345] |  :  readImmediateCondition() ...
[10:50:48.345] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.345] |  :   - Number of RDS files: 0
[10:50:48.346] |  :  readImmediateCondition() ... DONE
[10:50:48.346] |  checking value #2 ... done
[10:50:48.347] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.347] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.347] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.347] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.348] |  :  .  |  :  .  |  :  New stack:
[10:50:48.348] |  :  .  |  :  .  |  :  List of 1
[10:50:48.348] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.348] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.348] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.348] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.348] |  :  .  |  :  .  |  :      ...)  
[10:50:48.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.348] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.348] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.348] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.348] |  :  .  |  :  .  |  :      ...)  
[10:50:48.348] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.348] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.352] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.352] |  :  .  |  :  .  |  :  List of 1
[10:50:48.352] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.352] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.352] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.352] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.352] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.352] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.352] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.355] |  :  .  |  :  .  |  :  Not identical
[10:50:48.355] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.356] |  Number of remaining objects: 2
[10:50:48.356] |  checking value #1 ...
[10:50:48.356] |  :  'obj' is MulticoreFuture
[10:50:48.357] |  :  readImmediateCondition() ...
[10:50:48.357] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.357] |  :   - Number of RDS files: 0
[10:50:48.357] |  :  readImmediateCondition() ... DONE
[10:50:48.358] |  :  MulticoreFuture #1
[10:50:48.358] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.358] |  :  .  nx: 2
[10:50:48.358] |  :  .  relay: TRUE
[10:50:48.358] |  :  .  stdout: TRUE
[10:50:48.359] |  :  .  signal: TRUE
[10:50:48.359] |  :  .  resignal: FALSE
[10:50:48.359] |  :  .  force: TRUE
[10:50:48.359] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:48.359] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:48.360] |  :  .  until=1
[10:50:48.360] |  :  .  relaying element #1
[10:50:48.360] |  :  .  result() for MulticoreFuture ...
[10:50:48.361] |  :  .  |  readImmediateCondition() ...
[10:50:48.361] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.361] |  :  .  |   - Number of RDS files: 0
[10:50:48.362] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.362] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.362] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.362] |  :  .  result() for MulticoreFuture ... done
[10:50:48.363] |  :  .  result() for MulticoreFuture ...
[10:50:48.363] |  :  .  result() for MulticoreFuture ... done
[10:50:48.363] |  :  .  result() for MulticoreFuture ...
[10:50:48.355] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.355] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.355] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.355] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.355] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.355] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.355] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.355] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.355] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.355] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.355] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.364] |  :  .  result() for MulticoreFuture ... done
[10:50:48.364] |  :  .  result() for MulticoreFuture ...
[10:50:48.364] |  :  .  result() for MulticoreFuture ... done
[10:50:48.364] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.364] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.364] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.365] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.365] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.365] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.365] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.365] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.365] |  :  .  result() for MulticoreFuture ...
[10:50:48.365] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.365] |  :  .  result() for MulticoreFuture ... done
[10:50:48.365] |  :  .  result() for MulticoreFuture ...
[10:50:48.366] |  :  .  result() for MulticoreFuture ... done
[10:50:48.365] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.365] |  :  .  |  :  .  |  1. multicore:
[10:50:48.365] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.365] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.365] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.366] |  :  .  value: <list>
[10:50:48.366] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.366] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.366] |  :  .  nx: 2
[10:50:48.367] |  :  .  relay: TRUE
[10:50:48.367] |  :  .  stdout: TRUE
[10:50:48.367] |  :  .  signal: TRUE
[10:50:48.367] |  :  .  resignal: FALSE
[10:50:48.367] |  :  .  force: TRUE
[10:50:48.367] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.368] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.368] |  :  .  until=2
[10:50:48.368] |  :  .  relaying element #2
[10:50:48.368] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.368] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.369] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.369] |  :  length: 1 (resolved future 1)
[10:50:48.369] |  checking value #1 ... done
[10:50:48.369] |  checking value #2 ...
[10:50:48.369] |  :  'obj' is MulticoreFuture
[10:50:48.366] |  :  .  |  :  .  |  List of 1
[10:50:48.366] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.366] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.366] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.366] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.366] |  :  .  |  :  .  |      ...)  
[10:50:48.366] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.366] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.366] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.366] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.366] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.366] |  :  .  |  :  .  |      ...)  
[10:50:48.366] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.366] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.371] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.371] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.372] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.372] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.372] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.372] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.372] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.372] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.373] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.373] |  :  readImmediateCondition() ...
[10:50:48.373] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.373] |  :   - Number of RDS files: 0
[10:50:48.373] |  :  readImmediateCondition() ... DONE
[10:50:48.373] |  :  MulticoreFuture #2
[10:50:48.374] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.374] |  :  .  nx: 2
[10:50:48.374] |  :  .  relay: TRUE
[10:50:48.374] |  :  .  stdout: TRUE
[10:50:48.374] |  :  .  signal: TRUE
[10:50:48.374] |  :  .  resignal: FALSE
[10:50:48.374] |  :  .  force: TRUE
[10:50:48.374] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.374] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.375] |  :  .  until=2
[10:50:48.375] |  :  .  relaying element #2
[10:50:48.375] |  :  .  result() for MulticoreFuture ...
[10:50:48.375] |  :  .  |  readImmediateCondition() ...
[10:50:48.376] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.376] |  :  .  |   - Number of RDS files: 0
[10:50:48.376] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.376] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.376] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.377] |  :  .  result() for MulticoreFuture ... done
[10:50:48.377] |  :  .  result() for MulticoreFuture ...
[10:50:48.377] |  :  .  result() for MulticoreFuture ... done
[10:50:48.377] |  :  .  result() for MulticoreFuture ...
[10:50:48.377] |  :  .  result() for MulticoreFuture ... done
[10:50:48.378] |  :  .  result() for MulticoreFuture ...
[10:50:48.378] |  :  .  result() for MulticoreFuture ... done
[10:50:48.378] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.378] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.378] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.378] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.379] |  :  .  result() for MulticoreFuture ...
[10:50:48.379] |  :  .  result() for MulticoreFuture ... done
[10:50:48.379] |  :  .  result() for MulticoreFuture ...
[10:50:48.379] |  :  .  result() for MulticoreFuture ... done
[10:50:48.379] |  :  .  value: <list>
[10:50:48.380] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.380] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.380] |  :  .  nx: 2
[10:50:48.380] |  :  .  relay: TRUE
[10:50:48.380] |  :  .  stdout: TRUE
[10:50:48.380] |  :  .  signal: TRUE
[10:50:48.380] |  :  .  resignal: FALSE
[10:50:48.381] |  :  .  force: TRUE
[10:50:48.381] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.381] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.381] |  :  .  until=2
[10:50:48.381] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.381] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.381] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.382] |  :  length: 0 (resolved future 2)
[10:50:48.382] |  checking value #2 ... done
[10:50:48.382] |  Relaying remaining futures ...
[10:50:48.382] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.382] |  :  .  nx: 2
[10:50:48.382] |  :  .  relay: TRUE
[10:50:48.382] |  :  .  stdout: TRUE
[10:50:48.382] |  :  .  signal: TRUE
[10:50:48.382] |  :  .  resignal: FALSE
[10:50:48.383] |  :  .  force: TRUE
[10:50:48.383] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.383] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:48.383] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.383] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.383] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.383] |  Relaying remaining futures ... done
[10:50:48.383] value() on list ... done
[10:50:48.384]  - Number of value chunks collected: 2
[10:50:48.384] Resolving 2 futures (chunks) ... DONE
[10:50:48.384] Reducing values from 2 chunks ...
[10:50:48.384]  - Number of values collected after concatenation: 3
[10:50:48.384]  - Number of values expected: 3
[10:50:48.384] Reducing values from 2 chunks ... DONE
[10:50:48.384] future_mapply() ... DONE
- future_.mapply()
[10:50:48.385] future_mapply() ...
[10:50:48.385] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.385] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.385] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.386] Number of chunks: 2
[10:50:48.386] getGlobalsAndPackagesXApply() ...
[10:50:48.386]  - future.globals: TRUE
[10:50:48.386] getGlobalsAndPackages() ...
[10:50:48.387] |  Searching for globals ...
[10:50:48.389] |  :  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:48.389] |  Searching for globals ... DONE
[10:50:48.389] |  Resolving globals: FALSE
[10:50:48.389] |  Search for packages associated with the globals ...
[10:50:48.389] |  :  Packages associated with globals: [1] ‘base’
[10:50:48.390] |  :  Packages: [1] ‘base’
[10:50:48.390] |  Search for packages associated with the globals ... DONE
[10:50:48.390] |  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:48.390] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:48.391] |  Packages after dropping 'base': [0] 
[10:50:48.391] |  globals: [1] ‘FUN’
[10:50:48.391] |  packages: [0] 
[10:50:48.391] getGlobalsAndPackages() ... done
[10:50:48.391]  - globals found/used: [n=1] ‘FUN’
[10:50:48.391]  - needed namespaces: [n=0] 
[10:50:48.391] Finding globals ... DONE
[10:50:48.392] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.392] List of 2
[10:50:48.392]  $ ...future.FUN:function (x, y)  
[10:50:48.392]  $ MoreArgs     : list()
[10:50:48.392]  - attr(*, "where")=List of 2
[10:50:48.392]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.392]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.392]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.392]  - attr(*, "resolved")= logi FALSE
[10:50:48.392]  - attr(*, "total_size")= num NA
[10:50:48.396] Packages to be attached in all futures: [n=0] 
[10:50:48.396] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.396] Number of futures (= number of chunks): 2
[10:50:48.396] Launching 2 futures (chunks) ...
[10:50:48.396] Chunk #1 of 2 ...
[10:50:48.396]  - Finding globals in '...' for chunk #1 ...
[10:50:48.397] getGlobalsAndPackages() ...
[10:50:48.397] |  Searching for globals ...
[10:50:48.397] |  :  globals found: [0] 
[10:50:48.397] |  Searching for globals ... DONE
[10:50:48.397] |  globals: [0] <none>
[10:50:48.397] |  packages: [0] <none>
[10:50:48.398] getGlobalsAndPackages() ... done
[10:50:48.398]    + additional globals found: [n=0] 
[10:50:48.398]    + additional namespaces needed: [n=0] 
[10:50:48.398]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.398]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.398]  - seeds: <none>
[10:50:48.398]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.398] getGlobalsAndPackages() ...
[10:50:48.399] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.399] |  Resolving globals: FALSE
[10:50:48.399] |  Search for packages associated with the globals ...
[10:50:48.399] |  :  Packages associated with globals: [0] 
[10:50:48.399] |  :  Packages: [0] 
[10:50:48.400] |  Search for packages associated with the globals ... DONE
[10:50:48.400] |  Packages after dropping 'base': [0] 
[10:50:48.400] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.400] |  packages: [0] 
[10:50:48.400] getGlobalsAndPackages() ... done
[10:50:48.400] run() for Future (‘Future’) ...
[10:50:48.401] |  state: ‘created’
[10:50:48.401] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.401] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.401] |  Using MulticoreFutureBackend ...
[10:50:48.401] |  :  Launching futures ...
[10:50:48.401] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.402] |  :  .  |  getFutureData() ...
[10:50:48.402] |  :  .  |  :  getFutureCore() ...
[10:50:48.402] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.402] |  :  .  |  :  getFutureCore() ... done
[10:50:48.402] |  :  .  |  :  getFutureCapture() ...
[10:50:48.402] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.402] |  :  .  |  :  getFutureContext() ...
[10:50:48.402] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.403] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.403] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.403] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.403] |  :  .  |  :  getFutureContext() ... done
[10:50:48.403] |  :  .  |  getFutureData() ... done
[10:50:48.403] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.404] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.405] |  :  .  |  MulticoreFuture started
[10:50:48.406] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.406] |  :  Launching futures ... done
[10:50:48.406] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.406] |  :  .  |  attachPackages() ...
[10:50:48.406] |  Using MulticoreFutureBackend ... done
[10:50:48.406] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.407] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.407] Created future:
[10:50:48.407] |  :  .  |  attachPackages() ... DONE
[10:50:48.407] |  :  .  |  attachPackages() ...
[10:50:48.407] |  :  .  |  :  packages: [n=0] 
[10:50:48.407] |  :  .  |  attachPackages() ... DONE
[10:50:48.408] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.408] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.409] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.409] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.410] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.410] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.410] |  :  .  |  :  .  |  New stack:
[10:50:48.410] |  :  .  |  :  .  |  List of 1
[10:50:48.410] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.410] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.410] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.410] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.410] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.410] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.410] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.414] |  :  .  |  :  .  |  Old stack:
[10:50:48.414] |  :  .  |  :  .  |  List of 1
[10:50:48.414] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.414] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.414] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.414] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.414] |  :  .  |  :  .  |      ...)  
[10:50:48.414] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.414] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.414] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.414] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.414] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.414] |  :  .  |  :  .  |      ...)  
[10:50:48.414] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.414] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.418] |  :  .  |  :  .  |  Not identical
[10:50:48.418] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.419] readImmediateCondition() ...
[10:50:48.419]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.419]  - Number of RDS files: 0
[10:50:48.419] readImmediateCondition() ... DONE
[10:50:48.407] MulticoreFuture:
[10:50:48.407] Label: ‘future_.mapply-1’
[10:50:48.407] Expression:
[10:50:48.407] {
[10:50:48.407]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.407]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.407]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.407]         on.exit(options(oopts), add = TRUE)
[10:50:48.407]     }
[10:50:48.407]     {
[10:50:48.407]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.407]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.407]         do.call(mapply, args = args)
[10:50:48.407]     }
[10:50:48.407] }
[10:50:48.407] Lazy evaluation: FALSE
[10:50:48.407] Asynchronous evaluation: TRUE
[10:50:48.407] Local evaluation: TRUE
[10:50:48.407] Environment: R_GlobalEnv
[10:50:48.407] Capture standard output: TRUE
[10:50:48.407] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.407] Immediate condition classes: ‘immediateCondition’
[10:50:48.407] Globals: 5 objects totaling 649 bytes (function ‘...future.FUN’ of 414 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.407] Packages: <none>
[10:50:48.407] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.407] Resolved: FALSE
[10:50:48.407] Value: <not collected>
[10:50:48.407] Conditions captured: <none>
[10:50:48.407] Early signaling: FALSE
[10:50:48.407] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.407] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.420] Chunk #1 of 2 ... DONE
[10:50:48.420] Chunk #2 of 2 ...
[10:50:48.420]  - Finding globals in '...' for chunk #2 ...
[10:50:48.420] getGlobalsAndPackages() ...
[10:50:48.421] |  Searching for globals ...
[10:50:48.421] |  :  globals found: [0] 
[10:50:48.421] |  Searching for globals ... DONE
[10:50:48.421] |  globals: [0] <none>
[10:50:48.422] |  packages: [0] <none>
[10:50:48.422] getGlobalsAndPackages() ... done
[10:50:48.422]    + additional globals found: [n=0] 
[10:50:48.422]    + additional namespaces needed: [n=0] 
[10:50:48.422]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.422]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.422]  - seeds: <none>
[10:50:48.422]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.423] getGlobalsAndPackages() ...
[10:50:48.423] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.423] |  Resolving globals: FALSE
[10:50:48.423] |  Search for packages associated with the globals ...
[10:50:48.423] |  :  Packages associated with globals: [0] 
[10:50:48.424] |  :  Packages: [0] 
[10:50:48.424] |  Search for packages associated with the globals ... DONE
[10:50:48.418] |  :  .  |  :  .  |  :  List of 2
[10:50:48.418] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.418] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.418] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.418] |  :  .  |  :  .  |  :      ...)  
[10:50:48.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.418] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.418] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.418] |  :  .  |  :  .  |  :      ...)  
[10:50:48.418] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.424] |  Packages after dropping 'base': [0] 
[10:50:48.424] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.424] |  packages: [0] 
[10:50:48.425] getGlobalsAndPackages() ... done
[10:50:48.425] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.425] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.425] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.425] run() for Future (‘Future’) ...
[10:50:48.425] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.425] |  state: ‘created’
[10:50:48.425] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.425] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.425] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.426] |  Using MulticoreFutureBackend ...
[10:50:48.426] |  :  Launching futures ...
[10:50:48.425] |  :  .  |  :  .  List of future strategies:
[10:50:48.425] |  :  .  |  :  .  1. sequential:
[10:50:48.425] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.425] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.425] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.426] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.426] |  :  .  |  getFutureData() ...
[10:50:48.426] |  :  .  |  :  getFutureCore() ...
[10:50:48.426] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.427] |  :  .  |  :  getFutureCore() ... done
[10:50:48.427] |  :  .  |  :  getFutureCapture() ...
[10:50:48.427] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.427] |  :  .  |  :  getFutureContext() ...
[10:50:48.427] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.427] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.427] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.428] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.428] |  :  .  |  :  getFutureContext() ... done
[10:50:48.428] |  :  .  |  getFutureData() ... done
[10:50:48.428] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.429] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.426] |  :  .  |  :  .  List of 1
[10:50:48.426] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.426] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.426] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.426] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.426] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.426] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.426] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.429] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.429] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.429] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.429] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.429] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.430] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.431] |  :  .  |  MulticoreFuture started
[10:50:48.431] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.432] |  :  Launching futures ... done
[10:50:48.432] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.432] |  :  .  |  attachPackages() ...
[10:50:48.432] |  Using MulticoreFutureBackend ... done
[10:50:48.432] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.432] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.433] Created future:
[10:50:48.433] |  :  .  |  attachPackages() ... DONE
[10:50:48.433] |  :  .  |  attachPackages() ...
[10:50:48.433] |  :  .  |  :  packages: [n=0] 
[10:50:48.433] |  :  .  |  attachPackages() ... DONE
[10:50:48.433] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.434] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.434] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.434] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.434] |  :  .  |  assign_globals() ...
[10:50:48.435] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.435] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.435] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.436] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.436] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.436] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.436] |  :  .  |  :  .  |  New stack:
[10:50:48.436] |  :  .  |  :  .  |  List of 1
[10:50:48.436] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.436] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.436] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.436] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.436] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.436] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.436] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.440] |  :  .  |  :  .  |  Old stack:
[10:50:48.434] |  :  .  |  List of 5
[10:50:48.434] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:48.434] |  :  .  |   $ MoreArgs                 : list()
[10:50:48.434] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.434] |  :  .  |    ..$ :List of 1
[10:50:48.434] |  :  .  |    .. ..$ a: num 1
[10:50:48.434] |  :  .  |    ..$ :List of 1
[10:50:48.434] |  :  .  |    .. ..$ A: num 10
[10:50:48.434] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.434] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.434] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.434] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.434] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.434] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.434] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.434] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.434] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.434] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.434] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.434] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.442] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.442] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.442] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.442] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.443] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.443] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.443] |  :  .  |  assign_globals() ... done
[10:50:48.440] |  :  .  |  :  .  |  List of 1
[10:50:48.440] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.440] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.440] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.440] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.440] |  :  .  |  :  .  |      ...)  
[10:50:48.440] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.440] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.440] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.440] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.440] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.440] |  :  .  |  :  .  |      ...)  
[10:50:48.440] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.440] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.445] |  :  .  |  :  .  |  Not identical
[10:50:48.445] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.445] readImmediateCondition() ...
[10:50:48.445]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.446]  - Number of RDS files: 0
[10:50:48.446] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.446] readImmediateCondition() ... DONE
[10:50:48.446] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.446] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.433] MulticoreFuture:
[10:50:48.433] Label: ‘future_.mapply-2’
[10:50:48.433] Expression:
[10:50:48.433] {
[10:50:48.433]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.433]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.433]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.433]         on.exit(options(oopts), add = TRUE)
[10:50:48.433]     }
[10:50:48.433]     {
[10:50:48.433]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.433]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.433]         do.call(mapply, args = args)
[10:50:48.433]     }
[10:50:48.433] }
[10:50[10:50:48.446] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
:48.433] Lazy evaluation: FALSE
[10:50:48.433] Asynchronous evaluation: TRUE
[10:50:48.433] Local evaluation: TRUE
[10:50:48.433] Environment: R_GlobalEnv
[10:50:48.433] Capture standard output: TRUE
[10:50:48.433] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.433] Immediate condition classes: ‘immediateCondition’
[10:50:48.433] Globals: 5 objects totaling 699 bytes (function ‘...future.FUN’ of 414 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 200 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.433] Packages: <none>
[10:50:48.433] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.433] Resolved: FALSE
[10:50:48.433] Value: <not collected>
[10:50:48.433] Conditions captured: <none>
[10:50:48.433] Early signaling: FALSE
[10:50:48.433] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.433] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.447] |  :  .  |  :  .  |  :  New stack:
[10:50:48.447] Chunk #2 of 2 ... DONE
[10:50:48.447] Launching 2 futures (chunks) ... DONE
[10:50:48.447] Resolving 2 futures (chunks) ...
[10:50:48.447] value() on list ...
[10:50:48.447] |  recursive: 0
[10:50:48.448] |  length: 2
[10:50:48.448] |  
[10:50:48.448] |  Number of remaining objects: 2
[10:50:48.448] |  checking value #1 ...
[10:50:48.448] |  :  'obj' is MulticoreFuture
[10:50:48.447] |  :  .  |  :  .  |  :  List of 1
[10:50:48.447] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.447] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.447] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.447] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.447] |  :  .  |  :  .  |  :      ...)  
[10:50:48.447] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.447] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.447] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.447] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.447] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.447] |  :  .  |  :  .  |  :      ...)  
[10:50:48.447] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.447] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.451] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.451] |  :  .  |  :  .  |  :  List of 1
[10:50:48.451] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.451] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.451] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.451] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.451] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.451] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.451] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.454] |  :  .  |  :  .  |  :  Not identical
[10:50:48.455] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.445] |  :  .  |  :  .  |  :  List of 2
[10:50:48.445] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.445] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.445] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.445] |  :  .  |  :  .  |  :      ...)  
[10:50:48.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.445] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.445] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.445] |  :  .  |  :  .  |  :      ...)  
[10:50:48.445] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.457] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.457] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.457] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.457] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.458] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.458] |  :  .  |  :  .  List of future strategies:
[10:50:48.458] |  :  .  |  :  .  1. sequential:
[10:50:48.458] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.458] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.458] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.459] |  :  readImmediateCondition() ...
[10:50:48.459] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.459] |  :   - Number of RDS files: 0
[10:50:48.460] |  :  readImmediateCondition() ... DONE
[10:50:48.460] |  checking value #1 ... done
[10:50:48.460] |  checking value #2 ...
[10:50:48.460] |  :  'obj' is MulticoreFuture
[10:50:48.455] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.455] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.455] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.455] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.455] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.455] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.455] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.455] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.455] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.462] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.462] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.462] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.458] |  :  .  |  :  .  List of 1
[10:50:48.458] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.458] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.458] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.458] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.458] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.458] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.458] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.462] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.462] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.462] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.462] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.463] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.462] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.462] |  :  .  |  :  .  |  1. multicore:
[10:50:48.462] [10:50:48.463] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’,|  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FA ‘future’, ‘function’
LSE, envir = parent.frame())
[10:50:48.462] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.462] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.463] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.463] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.463] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.464] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.464] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.464] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.464] |  :  .  |  assign_globals() ...
[10:50:48.463] |  :  .  |  :  .  |  List of 1
[10:50:48.463] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.463] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.463] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.463] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.463] |  :  .  |  :  .  |      ...)  
[10:50:48.463] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.463] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.463] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.463] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.463] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.463] |  :  .  |  :  .  |      ...)  
[10:50:48.463] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.463] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.468] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.468] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.468] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.468] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.468] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.468] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.469] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.469] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.469] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.471] |  :  readImmediateCondition() ...
[10:50:48.471] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.471] |  :   - Number of RDS files: 0
[10:50:48.471] |  :  readImmediateCondition() ... DONE
[10:50:48.471] |  checking value #2 ... done
[10:50:48.464] |  :  .  |  List of 5
[10:50:48.464] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:48.464] |  :  .  |   $ MoreArgs                 : list()
[10:50:48.464] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.464] |  :  .  |    ..$ :List of 2
[10:50:48.464] |  :  .  |    .. ..$ b: num 2
[10:50:48.464] |  :  .  |    .. ..$ c: num 3
[10:50:48.464] |  :  .  |    ..$ :List of 2
[10:50:48.464] |  :  .  |    .. ..$ B: num 0
[10:50:48.464] |  :  .  |    .. ..$ C: num -10
[10:50:48.464] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.464] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.464] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.464] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.464] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.464] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.464] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.464] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.464] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.464] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.464] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.464] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.474] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.474] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.474] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.474] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.475] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.475] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.475] |  :  .  |  assign_globals() ... done
[10:50:48.478] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.478] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.479] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.479] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.479] |  :  .  |  :  .  |  :  New stack:
[10:50:48.482] |  Number of remaining objects: 2
[10:50:48.482] |  checking value #1 ...
[10:50:48.482] |  :  'obj' is MulticoreFuture
[10:50:48.482] |  :  readImmediateCondition() ...
[10:50:48.483] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.483] |  :   - Number of RDS files: 0
[10:50:48.483] |  :  readImmediateCondition() ... DONE
[10:50:48.483] |  :  MulticoreFuture #1
[10:50:48.484] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.484] |  :  .  nx: 2
[10:50:48.484] |  :  .  relay: TRUE
[10:50:48.484] |  :  .  stdout: TRUE
[10:50:48.484] |  :  .  signal: TRUE
[10:50:48.484] |  :  .  resignal: FALSE
[10:50:48.479] |  :  .  |  :  .  |  :  List of 1
[10:50:48.479] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.479] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.479] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.479] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.479] |  :  .  |  :  .  |  :      ...)  
[10:50:48.479] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.479] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.479] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.479] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.479] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.479] |  :  .  |  :  .  |  :      ...)  
[10:50:48.479] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.479] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.485] |  :  .  force: TRUE
[10:50:48.485] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.485] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:48.485] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:48.485] |  :  .  until=1
[10:50:48.485] |  :  .  relaying element #1
[10:50:48.486] |  :  .  result() for MulticoreFuture ...
[10:50:48.487] |  :  .  |  readImmediateCondition() ...
[10:50:48.487] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.487] |  :  .  |   - Number of RDS files: 0
[10:50:48.487] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.488] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.488] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.488] |  :  .  result() for MulticoreFuture ... done
[10:50:48.488] |  :  .  result() for MulticoreFuture ...
[10:50:48.489] |  :  .  result() for MulticoreFuture ... done
[10:50:48.489] |  :  .  result() for MulticoreFuture ...
[10:50:48.489] |  :  .  result() for MulticoreFuture ... done
[10:50:48.489] |  :  .  result() for MulticoreFuture ...
[10:50:48.490] |  :  .  result() for MulticoreFuture ... done
[10:50:48.490] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.490] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.485] |  :  .  |  :  .  |  :  List of 1
[10:50:48.485] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.485] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.485] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.485] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.485] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.485] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.485] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.490] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.490] |  :  .  |  :  .  |  :  Not identical
[10:50:48.490] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.491] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.491] |  :  .  result() for MulticoreFuture ...
[10:50:48.491] |  :  .  result() for MulticoreFuture ... done
[10:50:48.491] |  :  .  result() for MulticoreFuture ...
[10:50:48.491] |  :  .  result() for MulticoreFuture ... done
[10:50:48.492] |  :  .  value: <list>
[10:50:48.492] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.492] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.492] |  :  .  nx: 2
[10:50:48.492] |  :  .  relay: TRUE
[10:50:48.493] |  :  .  stdout: TRUE
[10:50:48.493] |  :  .  signal: TRUE
[10:50:48.493] |  :  .  resignal: FALSE
[10:50:48.493] |  :  .  force: TRUE
[10:50:48.493] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.493] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.497] |  :  .  until=2
[10:50:48.497] |  :  .  relaying element #2
[10:50:48.497] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.497] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.498] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.498] |  :  length: 1 (resolved future 1)
[10:50:48.498] |  checking value #1 ... done
[10:50:48.498] |  checking value #2 ...
[10:50:48.498] |  :  'obj' is MulticoreFuture
[10:50:48.491] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.491] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.491] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.491] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.491] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.491] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.491] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.491] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.491] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.491] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.491] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.500] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.501] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.501] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.501] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.501] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.501] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.501] |  :  .  |  :  .  |  1. multicore:
[10:50:48.501] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.501] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.501] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.502] |  :  .  |  :  .  |  List of 1
[10:50:48.502] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.502] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.502] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.502] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.502] |  :  .  |  :  .  |      ...)  
[10:50:48.502] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.502] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.502] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.502] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.502] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.502] |  :  .  |  :  .  |      ...)  
[10:50:48.502] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.502] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.506] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.506] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.506] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.507] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.507] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.507] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.507] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.507] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.507] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.508] |  :  readImmediateCondition() ...
[10:50:48.508] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.508] |  :   - Number of RDS files: 0
[10:50:48.508] |  :  readImmediateCondition() ... DONE
[10:50:48.508] |  :  MulticoreFuture #2
[10:50:48.508] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.508] |  :  .  nx: 2
[10:50:48.509] |  :  .  relay: TRUE
[10:50:48.509] |  :  .  stdout: TRUE
[10:50:48.509] |  :  .  signal: TRUE
[10:50:48.509] |  :  .  resignal: FALSE
[10:50:48.509] |  :  .  force: TRUE
[10:50:48.509] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.509] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.509] |  :  .  until=2
[10:50:48.509] |  :  .  relaying element #2
[10:50:48.509] |  :  .  result() for MulticoreFuture ...
[10:50:48.510] |  :  .  |  readImmediateCondition() ...
[10:50:48.510] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.510] |  :  .  |   - Number of RDS files: 0
[10:50:48.510] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.511] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.511] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.511] |  :  .  result() for MulticoreFuture ... done
[10:50:48.511] |  :  .  result() for MulticoreFuture ...
[10:50:48.511] |  :  .  result() for MulticoreFuture ... done
[10:50:48.512] |  :  .  result() for MulticoreFuture ...
[10:50:48.512] |  :  .  result() for MulticoreFuture ... done
[10:50:48.512] |  :  .  result() for MulticoreFuture ...
[10:50:48.512] |  :  .  result() for MulticoreFuture ... done
[10:50:48.512] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.512] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.513] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.513] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.513] |  :  .  result() for MulticoreFuture ...
[10:50:48.513] |  :  .  result() for MulticoreFuture ... done
[10:50:48.513] |  :  .  result() for MulticoreFuture ...
[10:50:48.513] |  :  .  result() for MulticoreFuture ... done
[10:50:48.514] |  :  .  value: <list>
[10:50:48.514] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.514] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.514] |  :  .  nx: 2
[10:50:48.514] |  :  .  relay: TRUE
[10:50:48.514] |  :  .  stdout: TRUE
[10:50:48.514] |  :  .  signal: TRUE
[10:50:48.515] |  :  .  resignal: FALSE
[10:50:48.515] |  :  .  force: TRUE
[10:50:48.515] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.515] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.515] |  :  .  until=2
[10:50:48.515] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.515] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.516] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.516] |  :  length: 0 (resolved future 2)
[10:50:48.516] |  checking value #2 ... done
[10:50:48.516] |  Relaying remaining futures ...
[10:50:48.516] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.516] |  :  .  nx: 2
[10:50:48.517] |  :  .  relay: TRUE
[10:50:48.517] |  :  .  stdout: TRUE
[10:50:48.517] |  :  .  signal: TRUE
[10:50:48.517] |  :  .  resignal: FALSE
[10:50:48.517] |  :  .  force: TRUE
[10:50:48.517] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.517] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:48.517] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.517] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.518] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.518] |  Relaying remaining futures ... done
[10:50:48.518] value() on list ... done
[10:50:48.518]  - Number of value chunks collected: 2
[10:50:48.518] Resolving 2 futures (chunks) ... DONE
[10:50:48.518] Reducing values from 2 chunks ...
[10:50:48.518]  - Number of values collected after concatenation: 3
[10:50:48.518]  - Number of values expected: 3
[10:50:48.518] Reducing values from 2 chunks ... DONE
[10:50:48.519] future_mapply() ... DONE
[10:50:48.519] future_mapply() ...
[10:50:48.519] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.519] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.519] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.520] Number of chunks: 5
[10:50:48.520] getGlobalsAndPackagesXApply() ...
[10:50:48.520]  - future.globals: TRUE
[10:50:48.520] getGlobalsAndPackages() ...
[10:50:48.520] |  Searching for globals ...
[10:50:48.522] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:48.522] |  Searching for globals ... DONE
[10:50:48.523] |  Resolving globals: FALSE
[10:50:48.523] |  Search for packages associated with the globals ...
[10:50:48.523] |  :  Packages associated with globals: [1] ‘base’
[10:50:48.523] |  :  Packages: [1] ‘base’
[10:50:48.523] |  Search for packages associated with the globals ... DONE
[10:50:48.524] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:48.524] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:48.524] |  Packages after dropping 'base': [0] 
[10:50:48.524] |  globals: [1] ‘FUN’
[10:50:48.524] |  packages: [0] 
[10:50:48.525] getGlobalsAndPackages() ... done
[10:50:48.525]  - globals found/used: [n=1] ‘FUN’
[10:50:48.525]  - needed namespaces: [n=0] 
[10:50:48.525] Finding globals ... DONE
[10:50:48.525] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.525] List of 2
[10:50:48.525]  $ ...future.FUN:function (C, k)  
[10:50:48.525]  $ MoreArgs     : NULL
[10:50:48.525]  - attr(*, "where")=List of 2
[10:50:48.525]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.525]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.525]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.525]  - attr(*, "resolved")= logi FALSE
[10:50:48.525]  - attr(*, "total_size")= num NA
[10:50:48.529] Packages to be attached in all futures: [n=0] 
[10:50:48.529] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.529] Number of futures (= number of chunks): 5
[10:50:48.529] Launching 5 futures (chunks) ...
[10:50:48.529] Chunk #1 of 5 ...
[10:50:48.529]  - Finding globals in '...' for chunk #1 ...
[10:50:48.529] getGlobalsAndPackages() ...
[10:50:48.530] |  Searching for globals ...
[10:50:48.530] |  :  globals found: [0] 
[10:50:48.530] |  Searching for globals ... DONE
[10:50:48.530] |  globals: [0] <none>
[10:50:48.530] |  packages: [0] <none>
[10:50:48.530] getGlobalsAndPackages() ... done
[10:50:48.530]    + additional globals found: [n=0] 
[10:50:48.531]    + additional namespaces needed: [n=0] 
[10:50:48.531]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.531]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:48.531]  - seeds: <none>
[10:50:48.531]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.531] getGlobalsAndPackages() ...
[10:50:48.531] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.531] |  Resolving globals: FALSE
[10:50:48.531] |  Search for packages associated with the globals ...
[10:50:48.532] |  :  Packages associated with globals: [0] 
[10:50:48.532] |  :  Packages: [0] 
[10:50:48.532] |  Search for packages associated with the globals ... DONE
[10:50:48.532] |  Packages after dropping 'base': [0] 
[10:50:48.532] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.532] |  packages: [0] 
[10:50:48.533] getGlobalsAndPackages() ... done
[10:50:48.533] run() for Future (‘Future’) ...
[10:50:48.533] |  state: ‘created’
[10:50:48.533] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.533] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.533] |  Using MulticoreFutureBackend ...
[10:50:48.534] |  :  Launching futures ...
[10:50:48.534] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.534] |  :  .  |  getFutureData() ...
[10:50:48.534] |  :  .  |  :  getFutureCore() ...
[10:50:48.534] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.534] |  :  .  |  :  getFutureCore() ... done
[10:50:48.534] |  :  .  |  :  getFutureCapture() ...
[10:50:48.535] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.535] |  :  .  |  :  getFutureContext() ...
[10:50:48.535] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.535] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.535] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.535] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.535] |  :  .  |  :  getFutureContext() ... done
[10:50:48.536] |  :  .  |  getFutureData() ... done
[10:50:48.536] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.536] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.538] |  :  .  |  MulticoreFuture started
[10:50:48.539] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.539] |  :  Launching futures ... done
[10:50:48.539] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.539] |  :  .  |  attachPackages() ...
[10:50:48.539] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.539] |  Using MulticoreFutureBackend ... done
[10:50:48.539] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.540] Created future:
[10:50:48.540] |  :  .  |  attachPackages() ... DONE
[10:50:48.540] |  :  .  |  attachPackages() ...
[10:50:48.540] |  :  .  |  :  packages: [n=0] 
[10:50:48.540] |  :  .  |  attachPackages() ... DONE
[10:50:48.541] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.541] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.541] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.542] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.542] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.542] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.543] |  :  .  |  :  .  |  New stack:
[10:50:48.543] |  :  .  |  :  .  |  List of 1
[10:50:48.543] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.543] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.543] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.543] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.543] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.543] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.543] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.547] |  :  .  |  :  .  |  Old stack:
[10:50:48.547] |  :  .  |  :  .  |  List of 1
[10:50:48.547] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.547] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.547] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.547] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.547] |  :  .  |  :  .  |      ...)  
[10:50:48.547] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.547] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.547] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.547] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.547] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.547] |  :  .  |  :  .  |      ...)  
[10:50:48.547] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.547] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.551] |  :  .  |  :  .  |  Not identical
[10:50:48.551] readImmediateCondition() ...
[10:50:48.552] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.552]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.552]  - Number of RDS files: 0
[10:50:48.552] readImmediateCondition() ... DONE
[10:50:48.540] MulticoreFuture:
[10:50:48.540] Label: ‘future_mapply-1’
[10:50:48.540] Expression:
[10:50:48.540] {
[10:50:48.540]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.540]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.540]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.540]         on.exit(options(oopts), add = TRUE)
[10:50:48.540]     }
[10:50:48.540]     {
[10:50:48.540]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.540]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.540]         do.call(mapply, args = args)
[10:50:48.540]     }
[10:50:48.540] }
[10:50:48.540] Lazy evaluation: FALSE
[10:50:48.540] Asynchronous evaluation: TRUE
[10:50:48.540] Local evaluation: TRUE
[10:50:48.540] Environment: R_GlobalEnv
[10:50:48.540] Capture standard output: TRUE
[10:50:48.540] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.540] Immediate condition classes: ‘immediateCondition’
[10:50:48.540] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.540] Packages: <none>
[10:50:48.540] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.540] Resolved: FALSE
[10:50:48.540] Value: <not collected>
[10:50:48.540] Conditions captured: <none>
[10:50:48.540] Early signaling: FALSE
[10:50:48.540] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.540] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.553] Chunk #1 of 5 ... DONE
[10:50:48.553] Chunk #2 of 5 ...
[10:50:48.553]  - Finding globals in '...' for chunk #2 ...
[10:50:48.553] getGlobalsAndPackages() ...
[10:50:48.554] |  Searching for globals ...
[10:50:48.554] |  :  globals found: [0] 
[10:50:48.554] |  Searching for globals ... DONE
[10:50:48.554] |  globals: [0] <none>
[10:50:48.555] |  packages: [0] <none>
[10:50:48.555] getGlobalsAndPackages() ... done
[10:50:48.555]    + additional globals found: [n=0] 
[10:50:48.555]    + additional namespaces needed: [n=0] 
[10:50:48.555]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.555]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:48.555]  - seeds: <none>
[10:50:48.555]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.556] getGlobalsAndPackages() ...
[10:50:48.556] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.556] |  Resolving globals: FALSE
[10:50:48.556] |  Search for packages associated with the globals ...
[10:50:48.556] |  :  Packages associated with globals: [0] 
[10:50:48.557] |  :  Packages: [0] 
[10:50:48.557] |  Search for packages associated with the globals ... DONE
[10:50:48.557] |  Packages after dropping 'base': [0] 
[10:50:48.557] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.557] |  packages: [0] 
[10:50:48.557] getGlobalsAndPackages() ... done
[10:50:48.558] run() for Future (‘Future’) ...
[10:50:48.552] |  :  .  |  :  .  |  :  List of 2
[10:50:48.552] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.552] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.552] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.552] |  :  .  |  :  .  |  :      ...)  
[10:50:48.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.552] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.552] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.552] |  :  .  |  :  .  |  :      ...)  
[10:50:48.552] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.558] |  state: ‘created’
[10:50:48.558] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.558] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.558] |  Using MulticoreFutureBackend ...
[10:50:48.559] |  :  Launching futures ...
[10:50:48.559] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.559] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.559] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.559] |  :  .  |  getFutureData() ...
[10:50:48.559] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.559] |  :  .  |  :  getFutureCore() ...
[10:50:48.559] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.559] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.559] |  :  .  |  :  getFutureCore() ... done
[10:50:48.559] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.559] |  :  .  |  :  getFutureCapture() ...
[10:50:48.559] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.560] |  :  .  |  :  getFutureContext() ...
[10:50:48.560] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.560] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.559] |  :  .  |  :  .  List of future strategies:
[10:50:48.559] |  :  .  |  :  .  1. sequential:
[10:50:48.559] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.559] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.559] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.560] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.560] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.560] |  :  .  |  :  getFutureContext() ... done
[10:50:48.560] |  :  .  |  getFutureData() ... done
[10:50:48.561] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.561] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.560] |  :  .  |  :  .  List of 1
[10:50:48.560] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.560] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.560] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.560] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.560] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.560] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.560] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.563] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.563] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.564] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.564] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.564] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.564] |  :  .  |  MulticoreFuture started
[10:50:48.564] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.564] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.564] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.565] |  :  Launching futures ... done
[10:50:48.565] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.565] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.565] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.565] |  :  .  |  attachPackages() ...
[10:50:48.565] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.565] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.565] |  Using MulticoreFutureBackend ... done
[10:50:48.565] |  :  .  |  assign_globals() ...
[10:50:48.565] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.566] Created future:
[10:50:48.566] |  :  .  |  attachPackages() ... DONE
[10:50:48.566] |  :  .  |  attachPackages() ...
[10:50:48.566] |  :  .  |  :  packages: [n=0] 
[10:50:48.566] |  :  .  |  attachPackages() ... DONE
[10:50:48.567] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.568] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.568] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.568] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.569] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.569] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.569] |  :  .  |  :  .  |  New stack:
[10:50:48.569] |  :  .  |  :  .  |  List of 1
[10:50:48.569] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.569] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.569] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.569] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.569] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.569] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.569] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.565] |  :  .  |  List of 5
[10:50:48.565] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.565] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.565] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.565] |  :  .  |    ..$ :List of 1
[10:50:48.565] |  :  .  |    .. ..$ : chr "A"
[10:50:48.565] |  :  .  |    ..$ :List of 1
[10:50:48.565] |  :  .  |    .. ..$ : int 5
[10:50:48.565] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.565] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.565] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.565] |  :  .  |    ..$ ...future[10:50:48.573] |  :  .  |  :  .  |  Old stack:
.FUN            :<environment: R_EmptyEnv> 
[10:50:48.565] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.565] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.565] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.565] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.565] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.565] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.565] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.565] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.573] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.573] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.573] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.574] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.574] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.574] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.574] |  :  .  |  assign_globals() ... done
[10:50:48.577] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.577] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.577] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.573] |  :  .  |  :  .  |  List of 1
[10:50:48.573] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.573] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.573] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.573] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.573] |  :  .  |  :  .  |      ...)  
[10:50:48.573] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.573] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.573] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.573] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.573] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.573] |  :  .  |  :  .  |      ...)  
[10:50:48.573] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.573] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.578] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.578] |  :  .  |  :  .  |  Not identical
[10:50:48.578] |  :  .  |  :  .  |  :  New stack:
[10:50:48.578] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.578] readImmediateCondition() ...
[10:50:48.578]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.579]  - Number of RDS files: 0
[10:50:48.579] readImmediateCondition() ... DONE
[10:50:48.566] MulticoreFuture:
[10:50:48.566] Label: ‘future_mapply-2’
[10:50:48.566] Expression:
[10:50:48.566] {
[10:50:48.566]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.566]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.566]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.566]         on.exit(options(oopts), add = TRUE)
[10:50:48.566]     }
[10:50:48.566]     {
[10:50:48.566]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.566]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.566]         do.call(mapply, args = args)
[10:50:48.566]     }
[10:50:48.566] }
[10:50:48.566] Lazy evaluation: FALSE
[10:50:48.566] Asynchronous evaluation: TRUE
[10:50:48.566] Local evaluation: TRUE
[10:50:48.566] Environment: R_GlobalEnv
[10:50:48.566] Capture standard output: TRUE
[10:50:48.566] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.566] Immediate condition classes: ‘immediateCondition’
[10:50:48.566] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.566] Packages: <none>
[10:50:48.566] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.566] Resolved: FALSE
[10:50:48.566] Value: <not collected>
[10:50:48.566] Conditions captured: <none>
[10:50:48.566] Early signaling: FALSE
[10:50:48.566] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.566] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.580] Chunk #2 of 5 ... DONE
[10:50:48.580] Chunk #3 of 5 ...
[10:50:48.580]  - Finding globals in '...' for chunk #3 ...
[10:50:48.580] getGlobalsAndPackages() ...
[10:50:48.580] |  Searching for globals ...
[10:50:48.581] |  :  globals found: [0] 
[10:50:48.582] |  Searching for globals ... DONE
[10:50:48.582] |  globals: [0] <none>
[10:50:48.582] |  packages: [0] <none>
[10:50:48.578] |  :  .  |  :  .  |  :  List of 1
[10:50:48.578] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.578] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.578] |  :  .  |  :  .  |  :      ...)  
[10:50:48.578] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.578] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.578] |  :  .  |  :  .  |  :      ...)  
[10:50:48.578] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.578] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.582] getGlobalsAndPackages() ... done
[10:50:48.582] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.582]    + additional globals found: [n=0] 
[10:50:48.582]    + additional namespaces needed: [n=0] 
[10:50:48.583]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:48.583]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:48.583]  - seeds: <none>
[10:50:48.583]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.583] getGlobalsAndPackages() ...
[10:50:48.584] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.584] |  Resolving globals: FALSE
[10:50:48.584] |  Search for packages associated with the globals ...
[10:50:48.585] |  :  Packages associated with globals: [0] 
[10:50:48.585] |  :  Packages: [0] 
[10:50:48.582] |  :  .  |  :  .  |  :  List of 1
[10:50:48.582] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.582] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.582] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.582] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.582] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.582] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.582] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.585] |  :  .  |  :  .  |  :  Not identical
[10:50:48.585] |  Search for packages associated with the globals ... DONE
[10:50:48.586] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.586] |  Packages after dropping 'base': [0] 
[10:50:48.586] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.586] |  packages: [0] 
[10:50:48.586] getGlobalsAndPackages() ... done
[10:50:48.587] run() for Future (‘Future’) ...
[10:50:48.587] |  state: ‘created’
[10:50:48.587] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.578] |  :  .  |  :  .  |  :  List of 2
[10:50:48.578] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequentia[10:50:48.587] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
l" "uniprocess" "future" "function"
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.578] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.578] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.578] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.578] |  :  .  |  :  .  |  :      ...)  
[10:50:48.578] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.578] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.578] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.578] |  :  .  |  :  .  |  :      ...)  
[10:50:48.578] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.588] |  Using MulticoreFutureBackend ...
[10:50:48.588] |  :  Launching futures ...
[10:50:48.588] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.588] |  :  .  |  getFutureData() ...
[10:50:48.589] |  :  .  |  :  getFutureCore() ...
[10:50:48.589] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.589] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.589] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.589] |  :  .  |  :  getFutureCore() ... done
[10:50:48.589] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.589] |  :  .  |  :  getFutureCapture() ...
[10:50:48.589] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.589] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.589] |  :  .  |  :  getFutureContext() ...
[10:50:48.589] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.590] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.590] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.590] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.590] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.590] |  :  .  |  :  .  List of future strategies:
[10:50:48.590] |  :  .  |  :  .  1. sequential:
[10:50:48.590] |  : [10:50:48.591] |  :  .  |  :  getFutureContext() ... done
 .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.590] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.590] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.591] |  :  .  |  getFutureData() ... done
[10:50:48.591] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.586] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.586] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.586] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.586] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.586] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.586] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.586] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.586] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.586] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.586] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.586] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.592] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:50:48.592] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.592] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.592] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.592] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.592] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.593] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.593] |  :  .  |  :  .  |  1. multicore:
[10:50:48.593] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.593] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.593] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.591] |  :  .  |  :  .  List of 1
[10:50:48.591] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.591] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.591] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.591] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.591] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.591] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.591] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.594] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.595] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.595] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.595] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.595] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.595] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.596] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.596] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.596] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.596] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.596] |  :  .  |  assign_globals() ...
[10:50:48.593] |  :  .  |  :  .  |  List of 1
[10:50:48.593] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.593] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.593] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.593] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.593] |  :  .  |  :  .  |      ...)  
[10:50:48.593] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.593] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.593] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.593] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.593] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.593] |  :  .  |  :  .  |      ...)  
[10:50:48.593] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.593] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.597] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.597] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.598] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.598] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.598] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.598] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.598] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.599] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.599] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.602] |  :  .  |  :  readImmediateCondition() ...
[10:50:48.602] |  :  .  |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.603] |  :  .  |  :   - Number of RDS files: 0
[10:50:48.603] |  :  .  |  :  readImmediateCondition() ... DONE
[10:50:48.603] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.604] |  :  .  |  :  .  readImmediateCondition() ...
[10:50:48.604] |  :  .  |  :  .    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.605] |  :  .  |  :  .   - Number of RDS files: 0
[10:50:48.605] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:50:48.605] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:50:48.606] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:50:48.597] |  :  .  |  List of 5
[10:50:48.597] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.597] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.597] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.597] |  :  .  |    ..$ :List of 1
[10:50:48.597] |  :  .  |    .. ..$ : chr "B"
[10:50:48.597] |  :  .  |    ..$ :List of 1
[10:50:48.597] |  :  .  |    .. ..$ : int 4
[10:50:48.597] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.597] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.597] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.597] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.597] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.597] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.597] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.597] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.597] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.597] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.597] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.597] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.606] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.606] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.606] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.606] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.606] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.606] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.606] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.607] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.607] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.607] |  :  .  |  assign_globals() ... done
[10:50:48.608] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.610] |  :  .  |  MulticoreFuture started
[10:50:48.611] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.611] |  :  .  |  attachPackages() ...
[10:50:48.611] |  :  Launching futures ... done
[10:50:48.611] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.611] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.611] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.612] |  :  .  |  attachPackages() ... DONE
[10:50:48.611] |  Using MulticoreFutureBackend ... done
[10:50:48.611] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.612] |  :  .  |  attachPackages() ...
[10:50:48.612] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.612] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.612] |  :  .  |  :  packages: [n=0] 
[10:50:48.612] |  :  .  |  attachPackages() ... DONE
[10:50:48.612] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.612] Created future:
[10:50:48.612] |  :  .  |  :  .  |  :  New stack:
[10:50:48.613] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.613] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.613] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.614] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.614] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.614] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.614] |  :  .  |  :  .  |  New stack:
[10:50:48.612] |  :  .  |  :  .  |  :  List of 1
[10:50:48.612] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.612] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.612] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.612] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.612] |  :  .  |  :  .  |  :      ...)  
[10:50:48.612] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.612] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.612] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.612] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.612] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.612] |  :  .  |  :  .  |  :      ...)  
[10:50:48.612] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.612] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.617] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.615] |  :  .  |  :  .  |  List of 1
[10:50:48.615] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.615] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.615] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.615] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.615] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.615] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.615] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.618] |  :  .  |  :  .  |  Old stack:
[10:50:48.617] |  :  .  |  :  .  |  :  List of 1
[10:50:48.617] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.617] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.617] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.617] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.617] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.617] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.617] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.620] |  :  .  |  :  .  |  :  Not identical
[10:50:48.620] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.619] |  :  .  |  :  .  |  List of 1
[10:50:48.619] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.619] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.619] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.619] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.619] |  :  .  |  :  .  |      ...)  
[10:50:48.619] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.619] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.619] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.619] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.619] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.619] |  :  .  |  :  .  |      ...)  
[10:50:48.619] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.619] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.623] |  :  .  |  :  .  |  Not identical
[10:50:48.623] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.624] readImmediateCondition() ...
[10:50:48.624]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.625]  - Number of RDS files: 0
[10:50:48.625] readImmediateCondition() ... DONE
[10:50:48.612] MulticoreFuture:
[10:50:48.612] Label: ‘future_mapply-3’
[10:50:48.612] Expression:
[10:50:48.612] {
[10:50:48.612]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.612]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.612]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.612]         on.exit(options(oopts), add = TRUE)
[10:50:48.612]     }
[10:50:48.612]     {
[10:50:48.612]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.612]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.612]         do.call(mapply, args = args)
[10:50:48.612]     }
[10:50:48.612] }
[10:50:48.612] Lazy evaluation: FALSE
[10:50:48.612] Asynchronous evaluation: TRUE
[10:50:48.612] Local evaluation: TRUE
[10:50:48.612] Environment: R_GlobalEnv
[10:50:48.612] Capture standard output: TRUE
[10:50:48.612] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.612] Immediate condition classes: ‘immediateCondition’
[10:50:48.612] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.612] Packages: <none>
[10:50:48.612] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.612] Resolved: FALSE
[10:50:48.612] Value: <not collected>
[10:50:48.612] Conditions captured: <none>
[10:50:48.612] Early signaling: FALSE
[10:50:48.612] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.612] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.626] Chunk #3 of 5 ... DONE
[10:50:48.626] Chunk #4 of 5 ...
[10:50:48.626]  - Finding globals in '...' for chunk #4 ...
[10:50:48.626] getGlobalsAndPackages() ...
[10:50:48.627] |  Searching for globals ...
[10:50:48.621] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.621] |  :  .  |  :  .  |  :  .   $ target :function (..., workers [10:50:48.628] |  :  globals found: [0] 
= availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.621] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.621] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.621] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.621] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.621] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.621] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.621] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.621] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.621] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.628] |  Searching for globals ... DONE
[10:50:48.628] |  globals: [0] <none>
[10:50:48.628] |  packages: [0] <none>
[10:50:48.628] getGlobalsAndPackages() ... done
[10:50:48.629]    + additional globals found: [n=0] 
[10:50:48.629] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.629]    + additional namespaces needed: [n=0] 
[10:50:48.629] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.629]  - Finding globals in '...' for chunk #4 ... DONE
[10:50:48.629] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.629]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:48.629] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.629]  - seeds: <none>
[10:50:48.629] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.629]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.630] getGlobalsAndPackages() ...
[10:50:48.623] |  :  .  |  :  .  |  :  List of 2
[10:50:48.623] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.623] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.623] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.623] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.623] |  :  .  |  :  .  |  :      ...)  
[10:50:48.623] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.623] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.623] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.623] |  :  .  |  :  .  |  :      ...)  
[10:50:48.623] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.630] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.629] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.629] |  :  .  |  :  .  |  1. multicore:
[10:50:48.629] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.629] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.629] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.630] |  Resolving globals: FALSE
[10:50:48.630] |  Search for packages associated with the globals ...
[10:50:48.631] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.631] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.631] |  :  Packages associated with globals: [0] 
[10:50:48.631] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.631] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.631] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.631] |  :  Packages: [0] 
[10:50:48.632] |  Search for packages associated with the globals ... DONE
[10:50:48.631] |  :  .  |  :  .  List of future strategies:
[10:50:48.631] |  :  .  |  :  .  1. sequential:
[10:50:48.631] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.631] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.631] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.632] |  Packages after dropping 'base': [0] 
[10:50:48.632] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.632] |  packages: [0] 
[10:50:48.632] getGlobalsAndPackages() ... done
[10:50:48.633] run() for Future (‘Future’) ...
[10:50:48.633] |  state: ‘created’
[10:50:48.633] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.634] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.634] |  Using MulticoreFutureBackend ...
[10:50:48.634] |  :  Launching futures ...
[10:50:48.634] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.635] |  :  .  |  getFutureData() ...
[10:50:48.635] |  :  .  |  :  getFutureCore() ...
[10:50:48.635] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.632] |  :  .  |  :  .  List of 1
[10:50:48.632] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.632] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.632] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.632] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.632] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.632] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.632] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.635] |  :  .  |  :  getFutureCore() ... done
[10:50:48.635] |  :  .  |  :  getFutureCapture() ...
[10:50:48.635] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.636] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.636] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.636] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.636] |  :  .  |  :  getFutureContext() ...
[10:50:48.636] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.636] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.636] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.636] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.636] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.630] |  :  .  |  :  .  |  List of 1
[10:50:48.630] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.630] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.630] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.630] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.630] |  :  .  |  :  .  |      ...)  
[10:50:48.630] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.630] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.630] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.630] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.630] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.630] |  :  .  |  :  .  |      ...)  
[10:50:48.630] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.630] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.636] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.637] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.637] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.637] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.637] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.637] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.637] |  :  .  |  :  getFutureContext() ... done
[10:50:48.637] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.637] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.637] |  :  .  |  getFutureData() ... done
[10:50:48.637] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.637] |  :  .  |  assign_globals() ...
[10:50:48.637] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.637] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.638] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.638] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.638] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.638] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:50:48.638] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.638] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.637] |  :  .  |  List of 5
[10:50:48.637] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.637] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.637] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.637] |  :  .  |    ..$ :List of 1
[10:50:48.637] |  :  .  |    .. ..$ : chr "C"
[10:50:48.637] |  :  .  |    ..$ :List of 1
[10:50:48.637] |  :  .  |    .. ..$ : int 3
[10:50:48.637] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.637] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.637] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.637] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.637] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.637] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.637] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.637] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.637] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.637] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.637] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.637] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.645] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.645] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.645] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.645] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.646] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.646] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.646] |  :  .  |  assign_globals() ... done
[10:50:48.649] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.649] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.649] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.649] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.649] |  :  .  |  :  .  |  :  New stack:
[10:50:48.649] |  :  .  |  :  .  |  :  List of 1
[10:50:48.649] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.649] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.649] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.649] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.649] |  :  .  |  :  .  |  :      ...)  
[10:50:48.649] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.649] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.649] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.649] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.649] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.649] |  :  .  |  :  .  |  :      ...)  
[10:50:48.649] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.649] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.654] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.654] |  :  .  |  :  .  |  :  List of 1
[10:50:48.654] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.654] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.654] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.654] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.654] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.654] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.654] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.657] |  :  .  |  :  .  |  :  Not identical
[10:50:48.657] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.657] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.657] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.657] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.657] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.657] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.657] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.657] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.657] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.657] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.657] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.657] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.663] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.663] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.663] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.663] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.667] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.667] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.667] |  :  .  |  :  .  |  1. multicore:
[10:50:48.667] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.667] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.667] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.670] |  :  .  |  :  readImmediateCondition() ...
[10:50:48.671] |  :  .  |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.671] |  :  .  |  :   - Number of RDS files: 0
[10:50:48.671] |  :  .  |  :  readImmediateCondition() ... DONE
[10:50:48.671] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.668] |  :  .  |  :  .  |  List of 1
[10:50:48.668] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.668] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.668] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.668] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.668] |  :  .  |  :  .  |      ...)  
[10:50:48.668] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.668] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.668] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.668] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.668] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.668] |  :  .  |  :  .  |      ...)  
[10:50:48.668] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.668] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.672] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.672] |  :  .  |  :  .  readImmediateCondition() ...
[10:50:48.672] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.672] |  :  .  |  :  .    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.672] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.672] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.672] |  :  .  |  :  .   - Number of RDS files: 0
[10:50:48.672] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.672] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:50:48.673] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.673] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.673] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:50:48.673] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.673] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:50:48.673] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.673] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.673] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.673] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.674] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.677] |  :  .  |  MulticoreFuture started
[10:50:48.677] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.677] |  :  .  |  attachPackages() ...
[10:50:48.677] |  :  Launching futures ... done
[10:50:48.678] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.678] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.678] |  Using MulticoreFutureBackend ... done
[10:50:48.678] |  :  .  |  attachPackages() ... DONE
[10:50:48.678] |  :  .  |  attachPackages() ...
[10:50:48.678] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.678] |  :  .  |  :  packages: [n=0] 
[10:50:48.678] Created future:
[10:50:48.678] |  :  .  |  attachPackages() ... DONE
[10:50:48.679] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.680] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.680] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.680] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.681] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.681] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.681] |  :  .  |  :  .  |  New stack:
[10:50:48.681] |  :  .  |  :  .  |  List of 1
[10:50:48.681] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.681] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.681] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.681] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.681] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.681] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.681] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.685] |  :  .  |  :  .  |  Old stack:
[10:50:48.690] readImmediateCondition() ...
[10:50:48.690]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.690]  - Number of RDS files: 0
[10:50:48.691] readImmediateCondition() ... DONE
[10:50:48.679] MulticoreFuture:
[10:50:48.679] Label: ‘future_mapply-4’
[10:50:48.679] Expression:
[10:50:48.679] {
[10:50:48.679]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.679]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.679]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.679]         on.exit(options(oopts), add = TRUE)
[10:50:48.679]     }
[10:50:48.679]     {
[10:50:48.679]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.679]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.679]         do.call(mapply, args = args)
[10:50:48.679]     }
[10:50:48.679] }
[10:50:48.679] Lazy evaluation: FALSE
[10:50:48.679] Asynchronous evaluation: TRUE
[10:50:48.679] Local evaluation: TRUE
[10:50:48.679] Environment: R_GlobalEnv
[10:50:48.679] Capture standard output: TRUE
[10:50:48.679] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.679] Immediate condition classes: ‘immediateCondition’
[10:50:48.679] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.679] Packages: <none>
[10:50:48.679] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.679] Resolved: FALSE
[10:50:48.679] Value: <not collected>
[10:50:48.679] Conditions captured: <none>
[10:50:48.679] Early signaling: FALSE
[10:50:48.679] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.679] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.691] Chunk #4 of 5 ... DONE
[10:50:48.691] Chunk #5 of 5 ...
[10:50:48.691]  - Finding globals in '...' for chunk #5 ...
[10:50:48.692] getGlobalsAndPackages() ...
[10:50:48.692] |  Searching for globals ...
[10:50:48.692] |  :  globals found: [0] 
[10:50:48.692] |  Searching for globals ... DONE
[10:50:48.693] |  globals: [0] <none>
[10:50:48.693] |  packages: [0] <none>
[10:50:48.693] getGlobalsAndPackages() ... done
[10:50:48.693]    + additional globals found: [n=0] 
[10:50:48.693]    + additional namespaces needed: [n=0] 
[10:50:48.693]  - Finding globals in '...' for chunk #5 ... DONE
[10:50:48.693]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:48.693]  - seeds: <none>
[10:50:48.693]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.694] getGlobalsAndPackages() ...
[10:50:48.694] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.694] |  Resolving globals: FALSE
[10:50:48.685] |  :  .  |  :  .  |  List of 1
[10:50:48.685] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.685] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.685] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.685] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.685] |  :  .  |  :  .  |      ...)  
[10:50:48.685] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.685] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.685] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.685] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.685] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.685] |  :  .  |  :  .  |      ...)  
[10:50:48.685] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.685] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.694] |  Search for packages associated with the globals ...
[10:50:48.694] |  :  .  |  :  .  |  Not identical
[10:50:48.694] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.694] |  :  Packages associated with globals: [0] 
[10:50:48.695] |  :  Packages: [0] 
[10:50:48.695] |  Search for packages associated with the globals ... DONE
[10:50:48.695] |  Packages after dropping 'base': [0] 
[10:50:48.695] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.695] |  packages: [0] 
[10:50:48.695] getGlobalsAndPackages() ... done
[10:50:48.696] run() for Future (‘Future’) ...
[10:50:48.696] |  state: ‘created’
[10:50:48.696] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.696] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.696] |  Using MulticoreFutureBackend ...
[10:50:48.697] |  :  Launching futures ...
[10:50:48.697] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.697] |  :  .  |  getFutureData() ...
[10:50:48.697] |  :  .  |  :  getFutureCore() ...
[10:50:48.697] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.697] |  :  .  |  :  getFutureCore() ... done
[10:50:48.697] |  :  .  |  :  getFutureCapture() ...
[10:50:48.697] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.698] |  :  .  |  :  getFutureContext() ...
[10:50:48.698] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.698] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.698] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.698] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.698] |  :  .  |  :  getFutureContext() ... done
[10:50:48.698] |  :  .  |  getFutureData() ... done
[10:50:48.694] |  :  .  |  :  .  |  :  List of 2
[10:50:48.694] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.694] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.694] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.694] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.694] |  :  .  |  :  .  |  :      ...)  
[10:50:48.694] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.694] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.694] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.694] |  :  .  |  :  .  |  :      ...)  
[10:50:48.694] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.701] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.701] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.699] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.701] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.701] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.701] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.701] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:50:48.701] |  :  .  |  :  .  List of future strategies:
[10:50:48.701] |  :  .  |  :  .  1. sequential:
[10:50:48.701] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.701] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.701] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.702] |  :  .  |  :  .  List of 1
[10:50:48.702] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.702] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.702] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.702] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.702] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.702] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.702] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.705] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.706] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.706] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.706] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.706] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.706] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.706] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.707] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.707] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.707] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.707] |  :  .  |  assign_globals() ...
[10:50:48.712] |  :  .  |  :  readImmediateCondition() ...
[10:50:48.712] |  :  .  |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.712] |  :  .  |  :   - Number of RDS files: 0
[10:50:48.712] |  :  .  |  :  readImmediateCondition() ... DONE
[10:50:48.713] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.713] |  :  .  |  :  .  readImmediateCondition() ...
[10:50:48.713] |  :  .  |  :  .    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.714] |  :  .  |  :  .   - Number of RDS files: 0
[10:50:48.714] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:50:48.714] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:50:48.714] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:50:48.714] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.714] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:48.714] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:48.715] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.707] |  :  .  |  List of 5
[10:50:48.707] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.707] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.707] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.707] |  :  .  |    ..$ :List of 1
[10:50:48.707] |  :  .  |    .. ..$ : chr "D"
[10:50:48.707] |  :  .  |    ..$ :List of 1
[10:50:48.707] |  :  .  |    .. ..$ : int 2
[10:50:48.707] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.707] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.707] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.707] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.707] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.707] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.707] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.707] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.707] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.707] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.707] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.707] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.716] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.716] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.717] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.717] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.717] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.717] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.717] |  :  .  |  MulticoreFuture started
[10:50:48.717] |  :  .  |  assign_globals() ... done
[10:50:48.718] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.718] |  :  Launching futures ... done
[10:50:48.718] |  :  .  |  attachPackages() ...
[10:50:48.718] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.718] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.718] |  Using MulticoreFutureBackend ... done
[10:50:48.719] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.719] |  :  .  |  attachPackages() ... DONE
[10:50:48.719] Created future:
[10:50:48.719] |  :  .  |  attachPackages() ...
[10:50:48.719] |  :  .  |  :  packages: [n=0] 
[10:50:48.719] |  :  .  |  attachPackages() ... DONE
[10:50:48.721] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.721] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.721] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.721] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.721] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.721] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.722] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.722] |  :  .  |  :  .  |  :  New stack:
[10:50:48.722] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.722] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.722] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.722] |  :  .  |  :  .  |  New stack:
[10:50:48.723] |  :  .  |  :  .  |  List of 1
[10:50:48.723] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.723] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.723] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.723] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.723] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.723] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.723] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.726] |  :  .  |  :  .  |  Old stack:
[10:50:48.722] |  :  .  |  :  .  |  :  List of 1
[10:50:48.722] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.722] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.722] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.722] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.722] |  :  .  |  :  .  |  :      ...)  
[10:50:48.722] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.722] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.722] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.722] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.722] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.722] |  :  .  |  :  .  |  :      ...)  
[10:50:48.722] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.722] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.727] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.727] |  :  .  |  :  .  |  :  List of 1
[10:50:48.727] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.727] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.727] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.727] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.727] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.727] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.727] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.730] |  :  .  |  :  .  |  :  Not identical
[10:50:48.730] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.727] |  :  .  |  :  .  |  List of 1
[10:50:48.727] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.727] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.727] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.727] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.727] |  :  .  |  :  .  |      ...)  
[10:50:48.727] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.727] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.727] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.727] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.727] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.727] |  :  .  |  :  .  |      ...)  
[10:50:48.727] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.727] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.731] readImmediateCondition() ...
[10:50:48.732] |  :  .  |  :  .  |  Not identical
[10:50:48.732]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.732] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.732]  - Number of RDS files: 0
[10:50:48.732] readImmediateCondition() ... DONE
[10:50:48.719] MulticoreFuture:
[10:50:48.719] Label: ‘future_mapply-5’
[10:50:48.719] Expression:
[10:50:48.719] {
[10:50:48.719]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.719]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.719]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.719]         on.exit(options(oopts), add = TRUE)
[10:50:48.719]     }
[10:50:48.719]     {
[10:50:48.719]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.719]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.719]         do.call(mapply, args = args)
[10:50:48.719]     }
[10:50:48.719] }
[10:50:48.719] Lazy evaluation: FALSE
[10:50:48.719] Asynchronous evaluation: TRUE
[10:50:48.719] Local evaluation: TRUE
[10:50:48.719] Environment: R_GlobalEnv
[10:50:48.719] Capture standard output: TRUE
[10:50:48.719] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.719] Immediate condition classes: ‘immediateCondition’
[10:50:48.719] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.719] Packages: <none>
[10:50:48.719] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.719] Resolved: FALSE
[10:50:48.719] Value: <not collected>
[10:50:48.719] Conditions captured: <none>
[10:50:48.719] Early signaling: FALSE
[10:50:48.719] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.719] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.733] Chunk #5 of 5 ... DONE
[10:50:48.733] Launching 5 futures (chunks) ... DONE
[10:50:48.733] Resolving 5 futures (chunks) ...
[10:50:48.734] value() on list ...
[10:50:48.734] |  recursive: 0
[10:50:48.734] |  length: 5
[10:50:48.734] |  
[10:50:48.734] |  Number of remaining objects: 5
[10:50:48.735] |  checking value #1 ...
[10:50:48.735] |  :  'obj' is MulticoreFuture
[10:50:48.735] |  :  MulticoreFuture #1
[10:50:48.735] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.735] |  :  .  nx: 5
[10:50:48.735] |  :  .  relay: TRUE
[10:50:48.736] |  :  .  stdout: TRUE
[10:50:48.736] |  :  .  signal: TRUE
[10:50:48.736] |  :  .  resignal: FALSE
[10:50:48.736] |  :  .  force: TRUE
[10:50:48.736] |  :  .  relayed: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:48.736] |  :  .  queued futures: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:48.730] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.730] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.730] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.730] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.730] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.730] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.730] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.737] |  :  .  until=1
[10:50:48.737] |  :  .  relaying element #1
[10:50:48.737] |  :  .  result() for MulticoreFuture ...
[10:50:48.737] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.737] |  :  .  result() for MulticoreFuture ... done
[10:50:48.737] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.738] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.738] |  :  .  result() for MulticoreFuture ...
[10:50:48.738] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.738] |  :  .  result() for MulticoreFuture ... done
[10:50:48.738] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.738] |  :  .  result() for MulticoreFuture ...
[10:50:48.738] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.738] |  :  .  |  :  .  |  1. multicore:
[10:50:48.738] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.738] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.738] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.738] |  :  .  result() for MulticoreFuture ... done
[10:50:48.739] |  :  .  result() for MulticoreFuture ...
[10:50:48.739] |  :  .  result() for MulticoreFuture ... done
[10:50:48.739] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.739] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.739] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.740] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.740] |  :  .  result() for MulticoreFuture ...
[10:50:48.740] |  :  .  result() for MulticoreFuture ... done
[10:50:48.740] |  :  .  result() for MulticoreFuture ...
[10:50:48.740] |  :  .  result() for MulticoreFuture ... done
[10:50:48.741] |  :  .  value: <list>
[10:50:48.741] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.741] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.741] |  :  .  nx: 5
[10:50:48.741] |  :  .  relay: TRUE
[10:50:48.741] |  :  .  stdout: TRUE
[10:50:48.742] |  :  .  signal: TRUE
[10:50:48.742] |  :  .  resignal: FALSE
[10:50:48.742] |  :  .  force: TRUE
[10:50:48.742] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.732] |  :  .  |  :  .  |  :  List of 2
[10:50:48.732] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.732] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.732] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.732] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.732] |  :  .  |  :  .  |  :      ...)  
[10:50:48.732] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.732] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.732] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.732] |  :  .  |  :  .  |  :      ...)  
[10:50:48.732] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.742] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.738] |  :  .  |  :  .  |  List of 1
[10:50:48.738] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.738] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.738] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.738] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.738] |  :  .  |  :  .  |      ...)  
[10:50:48.738] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.738] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.738] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.738] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.738] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.738] |  :  .  |  :  .  |      ...)  
[10:50:48.738] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.738] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.743] |  :  .  until=2
[10:50:48.743] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.743] |  :  .  relaying element #2
[10:50:48.743] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.743] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.743] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.743] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.743] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.743] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.743] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.744] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.744] |  :  length: 4 (resolved future 1)
[10:50:48.744] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.744] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.744] |  checking value #1 ... done
[10:50:48.744] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.744] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.744] |  checking value #2 ...
[10:50:48.744] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.744] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.744] |  :  'obj' is MulticoreFuture
[10:50:48.744] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.744] |  :  MulticoreFuture #2
[10:50:48.744] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.745] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.745] |  :  .  nx: 5
[10:50:48.745] |  :  .  relay: TRUE
[10:50:48.745] |  :  .  stdout: TRUE
[10:50:48.745] |  :  .  signal: TRUE
[10:50:48.745] |  :  .  resignal: FALSE
[10:50:48.745] |  :  .  force: TRUE
[10:50:48.746] |  :  .  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:48.745] |  :  .  |  :  .  List of future strategies:
[10:50:48.745] |  :  .  |  :  .  1. sequential:
[10:50:48.745] |  : [10:50:48.746] |  :  .  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
 .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.745] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.745] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.746] |  :  .  until=2
[10:50:48.746] |  :  .  relaying element #2
[10:50:48.746] |  :  .  result() for MulticoreFuture ...
[10:50:48.747] |  :  .  result() for MulticoreFuture ... done
[10:50:48.747] |  :  .  result() for MulticoreFuture ...
[10:50:48.747] |  :  .  result() for MulticoreFuture ... done
[10:50:48.747] |  :  .  result() for MulticoreFuture ...
[10:50:48.748] |  :  .  result() for MulticoreFuture ... done
[10:50:48.748] |  :  .  result() for MulticoreFuture ...
[10:50:48.748] |  :  .  result() for MulticoreFuture ... done
[10:50:48.748] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.748] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.749] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.749] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.749] |  :  .  result() for MulticoreFuture ...
[10:50:48.749] |  :  .  result() for MulticoreFuture ... done
[10:50:48.749] |  :  .  result() for MulticoreFuture ...
[10:50:48.750] |  :  .  result() for MulticoreFuture ... done
[10:50:48.750] |  :  .  value: <list>
[10:50:48.750] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.750] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.750] |  :  .  nx: 5
[10:50:48.751] |  :  .  relay: TRUE
[10:50:48.751] |  :  .  stdout: TRUE
[10:50:48.751] |  :  .  signal: TRUE
[10:50:48.746] |  :  .  |  :  .  List of 1
[10:50:48.746] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.746] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.746] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.746] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.746] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.746] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.746] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.751] |  :  .  resignal: FALSE
[10:50:48.751] |  :  .  force: TRUE
[10:50:48.751] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.752] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.752] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.752] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.752] |  :  .  until=3
[10:50:48.752] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.752] |  :  .  relaying element #3
[10:50:48.752] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.752] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.752] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.752] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.753] |  :  signalConditionsASAP(NULL, pos=2) ... done
[10:50:48.753] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.753] |  :  length: 3 (resolved future 2)
[10:50:48.753] |  checking value #2 ... done
[10:50:48.753] |  checking value #3 ...
[10:50:48.753] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.753] |  :  'obj' is MulticoreFuture
[10:50:48.753] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.754] |  :  MulticoreFuture #3
[10:50:48.754] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.754] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ...
[10:50:48.754] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.754] |  :  .  nx: 5
[10:50:48.754] |  :  .  relay: TRUE
[10:50:48.754] |  :  .  stdout: TRUE
[10:50:48.754] |  :  .  |  assign_globals() ...
[10:50:48.754] |  :  .  signal: TRUE
[10:50:48.755] |  :  .  resignal: FALSE
[10:50:48.755] |  :  .  force: TRUE
[10:50:48.755] |  :  .  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.755] |  :  .  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:48.755] |  :  .  until=3
[10:50:48.755] |  :  .  relaying element #3
[10:50:48.756] |  :  .  result() for MulticoreFuture ...
[10:50:48.756] |  :  .  result() for MulticoreFuture ... done
[10:50:48.756] |  :  .  result() for MulticoreFuture ...
[10:50:48.756] |  :  .  result() for MulticoreFuture ... done
[10:50:48.757] |  :  .  result() for MulticoreFuture ...
[10:50:48.757] |  :  .  result() for MulticoreFuture ... done
[10:50:48.757] |  :  .  result() for MulticoreFuture ...
[10:50:48.757] |  :  .  result() for MulticoreFuture ... done
[10:50:48.758] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.758] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.758] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ... done
[10:50:48.758] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.758] |  :  .  result() for MulticoreFuture ...
[10:50:48.758] |  :  .  result() for MulticoreFuture ... done
[10:50:48.759] |  :  .  result() for MulticoreFuture ...
[10:50:48.759] |  :  .  result() for MulticoreFuture ... done
[10:50:48.759] |  :  .  value: <list>
[10:50:48.759] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.759] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ...
[10:50:48.759] |  :  .  nx: 5
[10:50:48.759] |  :  .  relay: TRUE
[10:50:48.759] |  :  .  stdout: TRUE
[10:50:48.760] |  :  .  signal: TRUE
[10:50:48.760] |  :  .  resignal: FALSE
[10:50:48.760] |  :  .  force: TRUE
[10:50:48.760] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.760] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.760] |  :  .  until=4
[10:50:48.760] |  :  .  relaying element #4
[10:50:48.760] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.760] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.761] |  :  signalConditionsASAP(NULL, pos=3) ... done
[10:50:48.761] |  :  length: 2 (resolved future 3)
[10:50:48.761] |  checking value #3 ... done
[10:50:48.761] |  checking value #4 ...
[10:50:48.761] |  :  'obj' is MulticoreFuture
[10:50:48.761] |  :  readImmediateCondition() ...
[10:50:48.761] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.762] |  :   - Number of RDS files: 0
[10:50:48.762] |  :  readImmediateCondition() ... DONE
[10:50:48.762] |  :  MulticoreFuture #4
[10:50:48.762] |  :  signalConditionsASAP(MulticoreFuture, pos=4) ...
[10:50:48.762] |  :  .  nx: 5
[10:50:48.762] |  :  .  relay: TRUE
[10:50:48.763] |  :  .  stdout: TRUE
[10:50:48.763] |  :  .  signal: TRUE
[10:50:48.763] |  :  .  resignal: FALSE
[10:50:48.763] |  :  .  force: TRUE
[10:50:48.763] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.763] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:48.764] |  :  .  until=4
[10:50:48.764] |  :  .  relaying element #4
[10:50:48.764] |  :  .  result() for MulticoreFuture ...
[10:50:48.764] |  :  .  |  readImmediateCondition() ...
[10:50:48.765] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.765] |  :  .  |   - Number of RDS files: 0
[10:50:48.765] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.765] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.765] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.766] |  :  .  result() for MulticoreFuture ... done
[10:50:48.766] |  :  .  result() for MulticoreFuture ...
[10:50:48.766] |  :  .  result() for MulticoreFuture ... done
[10:50:48.766] |  :  .  result() for MulticoreFuture ...
[10:50:48.766] |  :  .  result() for MulticoreFuture ... done
[10:50:48.766] |  :  .  result() for MulticoreFuture ...
[10:50:48.766] |  :  .  result() for MulticoreFuture ... done
[10:50:48.766] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.754] |  :  .  |  List of 5
[10:50:48.754] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.754] |  :  .  |   $ MoreArgs                 : NULL
[10:50:48.754] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.754] |  :  .  |    ..$ :List of 1
[10:50:48.754] |  :  .  |    .. ..$ : chr "E"
[10:50:48.754] |  :  .  |    ..$ :List of 1
[10:50:48.754] |  :  .  |    .. ..$ : int 1
[10:50:48.754] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.754] |  :  .  |   $ ...[10:50:48.767] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
future.globals.maxSize: NULL
[10:50:48.754] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.754] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.754] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.754] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.754] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.754] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.754] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.754] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.754] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.754] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.767] |  :  signalConditionsASAP(MulticoreFuture, pos=4) ... done
[10:50:48.767] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.767] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.767] |  :  .  result() for MulticoreFuture ...
[10:50:48.767] |  :  .  result() for MulticoreFuture ... done
[10:50:48.767] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.767] |  :  .  result() for MulticoreFuture ...
[10:50:48.767] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.767] |  :  .  result() for MulticoreFuture ... done
[10:50:48.768] |  :  .  value: <list>
[10:50:48.768] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.768] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.768] |  :  signalConditionsASAP(MulticoreFuture, pos=4) ...
[10:50:48.768] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.768] |  :  .  nx: 5
[10:50:48.768] |  :  .  relay: TRUE
[10:50:48.768] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.768] |  :  .  stdout: TRUE
[10:50:48.768] |  :  .  |  assign_globals() ... done
[10:50:48.768] |  :  .  signal: TRUE
[10:50:48.768] |  :  .  resignal: FALSE
[10:50:48.769] |  :  .  force: TRUE
[10:50:48.769] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.769] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.769] |  :  .  until=5
[10:50:48.769] |  :  .  relaying element #5
[10:50:48.769] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.769] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.769] |  :  signalConditionsASAP(NULL, pos=4) ... done
[10:50:48.770] |  :  length: 1 (resolved future 4)
[10:50:48.770] |  checking value #4 ... done
[10:50:48.770] |  checking value #5 ...
[10:50:48.770] |  :  'obj' is MulticoreFuture
[10:50:48.772] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.773] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.773] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.773] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.773] |  :  .  |  :  .  |  :  New stack:
[10:50:48.773] |  :  .  |  :  .  |  :  List of 1
[10:50:48.773] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.773] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.773] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.773] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.773] |  :  .  |  :  .  |  :      ...)  
[10:50:48.773] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.773] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.773] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.773] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.773] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.773] |  :  .  |  :  .  |  :      ...)  
[10:50:48.773] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.773] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.779] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.780] |  :  readImmediateCondition() ...
[10:50:48.780] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.780] |  :   - Number of RDS files: 0
[10:50:48.781] |  :  readImmediateCondition() ... DONE
[10:50:48.781] |  checking value #5 ... done
[10:50:48.779] |  :  .  |  :  .  |  :  List of 1
[10:50:48.779] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.779] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.779] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.779] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.779] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.779] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.779] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.783] |  :  .  |  :  .  |  :  Not identical
[10:50:48.783] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.783] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.783] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.783] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.783] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.783] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.783] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.783] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.783] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.783] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.783] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.783] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.791] |  Number of remaining objects: 1
[10:50:48.791] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.791] |  checking value #5 ...
[10:50:48.791] |  :  'obj' is MulticoreFuture
[10:50:48.791] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.791] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.792] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.792] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.792] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.792] |  :  .  |  :  .  |  1. multicore:
[10:50:48.792] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.792] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.792] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.792] |  :  .  |  :  .  |  List of 1
[10:50:48.792] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.792] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.792] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.792] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.792] |  :  .  |  :  .  |      ...)  
[10:50:48.792] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.792] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.792] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.792] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.792] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.792] |  :  .  |  :  .  |      ...)  
[10:50:48.792] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.792] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.797] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.798] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.798] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.798] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.798] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.798] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.799] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.799] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.799] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.799] |  :  readImmediateCondition() ...
[10:50:48.799] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.800] |  :   - Number of RDS files: 0
[10:50:48.800] |  :  readImmediateCondition() ... DONE
[10:50:48.800] |  :  MulticoreFuture #5
[10:50:48.800] |  :  signalConditionsASAP(MulticoreFuture, pos=5) ...
[10:50:48.800] |  :  .  nx: 5
[10:50:48.800] |  :  .  relay: TRUE
[10:50:48.800] |  :  .  stdout: TRUE
[10:50:48.800] |  :  .  signal: TRUE
[10:50:48.801] |  :  .  resignal: FALSE
[10:50:48.801] |  :  .  force: TRUE
[10:50:48.801] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.801] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:48.801] |  :  .  until=5
[10:50:48.801] |  :  .  relaying element #5
[10:50:48.801] |  :  .  result() for MulticoreFuture ...
[10:50:48.802] |  :  .  |  readImmediateCondition() ...
[10:50:48.802] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.802] |  :  .  |   - Number of RDS files: 0
[10:50:48.802] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.802] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.802] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.803] |  :  .  result() for MulticoreFuture ... done
[10:50:48.803] |  :  .  result() for MulticoreFuture ...
[10:50:48.803] |  :  .  result() for MulticoreFuture ... done
[10:50:48.803] |  :  .  result() for MulticoreFuture ...
[10:50:48.803] |  :  .  result() for MulticoreFuture ... done
[10:50:48.803] |  :  .  result() for MulticoreFuture ...
[10:50:48.803] |  :  .  result() for MulticoreFuture ... done
[10:50:48.803] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.803] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.804] |  :  signalConditionsASAP(MulticoreFuture, pos=5) ... done
[10:50:48.804] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.804] |  :  .  result() for MulticoreFuture ...
[10:50:48.804] |  :  .  result() for MulticoreFuture ... done
[10:50:48.804] |  :  .  result() for MulticoreFuture ...
[10:50:48.804] |  :  .  result() for MulticoreFuture ... done
[10:50:48.804] |  :  .  value: <list>
[10:50:48.804] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.805] |  :  signalConditionsASAP(MulticoreFuture, pos=5) ...
[10:50:48.805] |  :  .  nx: 5
[10:50:48.805] |  :  .  relay: TRUE
[10:50:48.805] |  :  .  stdout: TRUE
[10:50:48.805] |  :  .  signal: TRUE
[10:50:48.805] |  :  .  resignal: FALSE
[10:50:48.805] |  :  .  force: TRUE
[10:50:48.805] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.805] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.805] |  :  .  until=5
[10:50:48.806] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.806] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.806] |  :  signalConditionsASAP(MulticoreFuture, pos=5) ... done
[10:50:48.806] |  :  length: 0 (resolved future 5)
[10:50:48.806] |  checking value #5 ... done
[10:50:48.806] |  Relaying remaining futures ...
[10:50:48.806] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.806] |  :  .  nx: 5
[10:50:48.806] |  :  .  relay: TRUE
[10:50:48.807] |  :  .  stdout: TRUE
[10:50:48.807] |  :  .  signal: TRUE
[10:50:48.807] |  :  .  resignal: FALSE
[10:50:48.807] |  :  .  force: TRUE
[10:50:48.807] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.807] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
 - flush all
[10:50:48.807] |  :  .  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.807] |  :  .  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:48.808] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.808] |  Relaying remaining futures ... done
[10:50:48.808] value() on list ... done
[10:50:48.808]  - Number of value chunks collected: 5
[10:50:48.808] Resolving 5 futures (chunks) ... DONE
[10:50:48.808] Reducing values from 5 chunks ...
[10:50:48.808]  - Number of values collected after concatenation: 5
[10:50:48.808]  - Number of values expected: 5
[10:50:48.808] Reducing values from 5 chunks ... DONE
[10:50:48.809] future_mapply() ... DONE
[10:50:48.809] future_mapply() ...
[10:50:48.809] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.809] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.809] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.810] Number of chunks: 2
[10:50:48.810] getGlobalsAndPackagesXApply() ...
[10:50:48.810]  - future.globals: TRUE
[10:50:48.810] getGlobalsAndPackages() ...
[10:50:48.810] |  Searching for globals ...
[10:50:48.812] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:48.812] |  Searching for globals ... DONE
[10:50:48.812] |  Resolving globals: FALSE
[10:50:48.813] |  Search for packages associated with the globals ...
[10:50:48.813] |  :  Packages associated with globals: [1] ‘base’
[10:50:48.813] |  :  Packages: [1] ‘base’
[10:50:48.813] |  Search for packages associated with the globals ... DONE
[10:50:48.813] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:48.814] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:48.814] |  Packages after dropping 'base': [0] 
[10:50:48.814] |  globals: [1] ‘FUN’
[10:50:48.814] |  packages: [0] 
[10:50:48.814] getGlobalsAndPackages() ... done
[10:50:48.814]  - globals found/used: [n=1] ‘FUN’
[10:50:48.815]  - needed namespaces: [n=0] 
[10:50:48.815] Finding globals ... DONE
[10:50:48.815] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.815] List of 2
[10:50:48.815]  $ ...future.FUN:function (C, k)  
[10:50:48.815]  $ MoreArgs     : list()
[10:50:48.815]  - attr(*, "where")=List of 2
[10:50:48.815]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.815]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.815]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.815]  - attr(*, "resolved")= logi FALSE
[10:50:48.815]  - attr(*, "total_size")= num NA
[10:50:48.818] Packages to be attached in all futures: [n=0] 
[10:50:48.818] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.819] Number of futures (= number of chunks): 2
[10:50:48.819] Launching 2 futures (chunks) ...
[10:50:48.819] Chunk #1 of 2 ...
[10:50:48.819]  - Finding globals in '...' for chunk #1 ...
[10:50:48.819] getGlobalsAndPackages() ...
[10:50:48.819] |  Searching for globals ...
[10:50:48.820] |  :  globals found: [0] 
[10:50:48.820] |  Searching for globals ... DONE
[10:50:48.820] |  globals: [0] <none>
[10:50:48.820] |  packages: [0] <none>
[10:50:48.820] getGlobalsAndPackages() ... done
[10:50:48.820]    + additional globals found: [n=0] 
[10:50:48.820]    + additional namespaces needed: [n=0] 
[10:50:48.820]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.820]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.821]  - seeds: <none>
[10:50:48.821]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.821] getGlobalsAndPackages() ...
[10:50:48.821] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.821] |  Resolving globals: FALSE
[10:50:48.821] |  Search for packages associated with the globals ...
[10:50:48.821] |  :  Packages associated with globals: [0] 
[10:50:48.822] |  :  Packages: [0] 
[10:50:48.822] |  Search for packages associated with the globals ... DONE
[10:50:48.822] |  Packages after dropping 'base': [0] 
[10:50:48.822] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.822] |  packages: [0] 
[10:50:48.822] getGlobalsAndPackages() ... done
[10:50:48.823] run() for Future (‘Future’) ...
[10:50:48.823] |  state: ‘created’
[10:50:48.823] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.823] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.823] |  Using MulticoreFutureBackend ...
[10:50:48.823] |  :  Launching futures ...
[10:50:48.823] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.824] |  :  .  |  getFutureData() ...
[10:50:48.824] |  :  .  |  :  getFutureCore() ...
[10:50:48.824] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.824] |  :  .  |  :  getFutureCore() ... done
[10:50:48.824] |  :  .  |  :  getFutureCapture() ...
[10:50:48.824] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.824] |  :  .  |  :  getFutureContext() ...
[10:50:48.824] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.824] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.825] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.825] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.825] |  :  .  |  :  getFutureContext() ... done
[10:50:48.825] |  :  .  |  getFutureData() ... done
[10:50:48.825] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.826] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.828] |  :  .  |  MulticoreFuture started
[10:50:48.828] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.828] |  :  Launching futures ... done
[10:50:48.828] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.828] |  :  .  |  attachPackages() ...
[10:50:48.829] |  Using MulticoreFutureBackend ... done
[10:50:48.829] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.829] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.829] Created future:
[10:50:48.829] |  :  .  |  attachPackages() ... DONE
[10:50:48.829] |  :  .  |  attachPackages() ...
[10:50:48.830] |  :  .  |  :  packages: [n=0] 
[10:50:48.830] |  :  .  |  attachPackages() ... DONE
[10:50:48.831] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.831] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.831] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.832] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.832] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.833] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.833] |  :  .  |  :  .  |  New stack:
[10:50:48.833] |  :  .  |  :  .  |  List of 1
[10:50:48.833] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.833] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.833] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.833] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.833] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.833] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.833] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.839] |  :  .  |  :  .  |  Old stack:
[10:50:48.841] readImmediateCondition() ...
[10:50:48.841]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.841]  - Number of RDS files: 0
[10:50:48.842] readImmediateCondition() ... DONE
[10:50:48.829] MulticoreFuture:
[10:50:48.829] Label: ‘future_.mapply-1’
[10:50:48.829] Expression:
[10:50:48.829] {
[10:50:48.829]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.829]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.829]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.829]         on.exit(options(oopts), add = TRUE)
[10:50:48.829]     }
[10:50:48.829]     {
[10:50:48.829]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.829]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.829]         do.call(mapply, args = args)
[10:50:48.829]     }
[10:50:48.829] }
[10:50:48.829] Lazy evaluation: FALSE
[10:50:48.829] Asynchronous evaluation: TRUE
[10:50:48.829] Local evaluation: TRUE
[10:50:48.829] Environment: R_GlobalEnv
[10:50:48.829] Capture standard output: TRUE
[10:50:48.829] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.829] Immediate condition classes: ‘immediateCondition’
[10:50:48.829] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.829] Packages: <none>
[10:50:48.829] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.829] Resolved: FALSE
[10:50:48.829] Value: <not collected>
[10:50:48.829] Conditions captured: <none>
[10:50:48.829] Early signaling: FALSE
[10:50:48.829] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.829] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.842] Chunk #1 of 2 ... DONE
[10:50:48.842] Chunk #2 of 2 ...
[10:50:48.842]  - Finding globals in '...' for chunk #2 ...
[10:50:48.843] getGlobalsAndPackages() ...
[10:50:48.843] |  Searching for globals ...
[10:50:48.843] |  :  globals found: [0] 
[10:50:48.844] |  Searching for globals ... DONE
[10:50:48.844] |  globals: [0] <none>
[10:50:48.844] |  packages: [0] <none>
[10:50:48.844] getGlobalsAndPackages() ... done
[10:50:48.844]    + additional globals found: [n=0] 
[10:50:48.844]    + additional namespaces needed: [n=0] 
[10:50:48.844]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.845]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:48.845]  - seeds: <none>
[10:50:48.845]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.839] |  :  .  |  :  .  |  List of 1
[10:50:48.839] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.839] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.839] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.839] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.839] |  :  .  |  :  .  |      ...)  
[10:50:48.839] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.839] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.839] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.839] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.839] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.839] |  :  .  |  :  .  |      ...)  
[10:50:48.839] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.839] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.845] getGlobalsAndPackages() ...
[10:50:48.845] |  :  .  |  :  .  |  Not identical
[10:50:48.845] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.845] |  Resolving globals: FALSE
[10:50:48.845] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.845] |  Search for packages associated with the globals ...
[10:50:48.846] |  :  Packages associated with globals: [0] 
[10:50:48.846] |  :  Packages: [0] 
[10:50:48.846] |  Search for packages associated with the globals ... DONE
[10:50:48.846] |  Packages after dropping 'base': [0] 
[10:50:48.847] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.847] |  packages: [0] 
[10:50:48.847] getGlobalsAndPackages() ... done
[10:50:48.847] run() for Future (‘Future’) ...
[10:50:48.847] |  state: ‘created’
[10:50:48.848] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.848] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.848] |  Using MulticoreFutureBackend ...
[10:50:48.848] |  :  Launching futures ...
[10:50:48.848] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.848] |  :  .  |  getFutureData() ...
[10:50:48.848] |  :  .  |  :  getFutureCore() ...
[10:50:48.849] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.849] |  :  .  |  :  getFutureCore() ... done
[10:50:48.849] |  :  .  |  :  getFutureCapture() ...
[10:50:48.849] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.849] |  :  .  |  :  getFutureContext() ...
[10:50:48.849] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.849] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.850] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.850] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.850] |  :  .  |  :  getFutureContext() ... done
[10:50:48.850] |  :  .  |  getFutureData() ... done
[10:50:48.850] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.851] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.845] |  :  .  |  :  .  |  :  List of 2
[10:50:48.845] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.845] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.845] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.845] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.845] |  :  .  |  :  .  |  :      ...)  
[10:50:48.845] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.845] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.845] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.845] |  :  .  |  :  .  |  :      ...)  
[10:50:48.845] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.852] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.852] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.852] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.853] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.853] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.853] |  :  .  |  MulticoreFuture started
[10:50:48.853] |  :  .  |  :  .  List of future strategies:
[10:50:48.853] |  :  .  |  :  .  1. sequential:
[10:50:48.853] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.853] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.853] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.853] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.854] |  :  Launching futures ... done
[10:50:48.854] |  :  .  |  attachPackages() ...
[10:50:48.854] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.854] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.854] |  Using MulticoreFutureBackend ... done
[10:50:48.854] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.855] |  :  .  |  attachPackages() ... DONE
[10:50:48.855] Created future:
[10:50:48.855] |  :  .  |  attachPackages() ...
[10:50:48.855] |  :  .  |  :  packages: [n=0] 
[10:50:48.855] |  :  .  |  attachPackages() ... DONE
[10:50:48.854] |  :  .  |  :  .  List of 1
[10:50:48.854] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.854] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.854] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.854] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.854] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.854] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.854] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.857] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.857] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.857] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.857] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.857] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.857] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.857] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.857] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.858] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.858] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.858] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.858] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.858] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.858] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.858] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.858] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.858] |  :  .  |  :  .  |  New stack:
[10:50:48.859] |  :  .  |  assign_globals() ...
[10:50:48.858] |  :  .  |  :  .  |  List of 1
[10:50:48.858] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.858] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.858] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.858] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.858] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.858] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.858] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.862] |  :  .  |  :  .  |  Old stack:
[10:50:48.862] |  :  .  |  :  .  |  List of 1
[10:50:48.862] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.862] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.862] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.862] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.862] |  :  .  |  :  .  |      ...)  
[10:50:48.862] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.862] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.862] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.862] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.862] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.862] |  :  .  |  :  .  |      ...)  
[10:50:48.862] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.862] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.859] |  :  .  |  List of 5
[10:50:48.859] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.859] |  :  .  |   $ MoreArgs                 : list()
[10:50:48.859] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.859] |  :  .  |    ..$ :List of 2
[10:50:48.859] |  :  .  |    .. ..$ : chr "A"
[10:50:48.859] |  :  .  |    .. ..$ : chr "B"
[10:50:48.859] |  :  .  |    ..$ :List of 2
[10:50:48.859] |  :  .  |    .. ..$ : int 5
[10:50:48.859] |  :  .  |    .. ..$ : int 4
[10:50:48.859] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.859] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.859] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.859] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.859] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.859] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.859] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.859] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.859] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.859] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.859] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.859] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.867] |  :  .  |  :  .  |  Not identical
[10:50:48.867] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.867] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.867] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.867] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.867] readImmediateCondition() ...
[10:50:48.867] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.867] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.867]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.868] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.868] |  :  .  |  assign_globals() ... done
[10:50:48.868]  - Number of RDS files: 0
[10:50:48.868] readImmediateCondition() ... DONE
[10:50:48.855] MulticoreFuture:
[10:50:48.855] Label: ‘future_.mapply-2’
[10:50:48.855] Expression:
[10:50:48.855] {
[10:50:48.855]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.855]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.855]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.855]         on.exit(options(oopts), add = TRUE)
[10:50:48.855]     }
[10:50:48.855]     {
[10:50:48.855]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.855]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.855]         do.call(mapply, args = args)
[10:50:48.855]     }
[10:50:48.855] }
[10:50:48.855] Lazy evaluation: FALSE
[10:50:48.855] Asynchronous evaluation: TRUE
[10:50:48.855] Local evaluation: TRUE
[10:50:48.855] Environment: R_GlobalEnv
[10:50:48.855] Capture standard output: TRUE
[10:50:48.855] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.855] Immediate condition classes: ‘immediateCondition’
[10:50:48.855] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.855] Packages: <none>
[10:50:48.855] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.855] Resolved: FALSE
[10:50:48.855] Value: <not collected>
[10:50:48.855] Conditions captured: <none>
[10:50:48.855] Early signaling: FALSE
[10:50:48.855] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.855] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.869] Chunk #2 of 2 ... DONE
[10:50:48.869] Launching 2 futures (chunks) ... DONE
[10:50:48.869] Resolving 2 futures (chunks) ...
[10:50:48.869] value() on list ...
[10:50:48.870] |  recursive: 0
[10:50:48.870] |  length: 2
[10:50:48.870] |  
[10:50:48.870] |  Number of remaining objects: 2
[10:50:48.870] |  checking value #1 ...
[10:50:48.870] |  :  'obj' is MulticoreFuture
[10:50:48.871] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.871] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.871] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.871] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.871] |  :  .  |  :  .  |  :  New stack:
[10:50:48.867] |  :  .  |  :  .  |  :  List of 2
[10:50:48.867] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.867] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.867] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.867] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.867] |  :  .  |  :  .  |  :      ...)  
[10:50:48.867] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.867] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.867] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.867] |  :  .  |  :  .  |  :      ...)  
[10:50:48.867] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.875] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.875] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.875] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.876] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.876] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.876] |  :  .  |  :  .  List of future strategies:
[10:50:48.876] |  :  .  |  :  .  1. sequential:
[10:50:48.876] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.876] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.876] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.871] |  :  .  |  :  .  |  :  List of 1
[10:50:48.871] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.871] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.871] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.871] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.871] |  :  .  |  :  .  |  :      ...)  
[10:50:48.871] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.871] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.871] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.871] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.871] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.871] |  :  .  |  :  .  |  :      ...)  
[10:50:48.871] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.871] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.879] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.876] |  :  .  |  :  .  List of 1
[10:50:48.876] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.876] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.876] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.876] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.876] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.876] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.876] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.880] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.880] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.880] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.880] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.880] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.880] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.881] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.881] |  :  readImmediateCondition() ...
[10:50:48.881] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.881] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.881] |  :   - Number of RDS files: 0
[10:50:48.881] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.881] |  :  readImmediateCondition() ... DONE
[10:50:48.881] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.882] |  checking value #1 ... done
[10:50:48.882] |  checking value #2 ...
[10:50:48.879] |  :  .  |  :  .  |  :  List of 1
[10:50:48.879] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.879] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.879] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.879] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.879] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.879] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.879] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.882] |  :  .  |  assign_globals() ...
[10:50:48.882] |  :  'obj' is MulticoreFuture
[10:50:48.882] |  :  .  |  :  .  |  :  Not identical
[10:50:48.882] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.882] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.882] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.882] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.882] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.882] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.882] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.882] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.882] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.882] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.882] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.882] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.889] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.889] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.889] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.889] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.889] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.889] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.889] |  :  .  |  :  .  |  1. multicore:
[10:50:48.889] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.889] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.889] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.892] |  :  readImmediateCondition() ...
[10:50:48.893] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.893] |  :   - Number of RDS files: 0
[10:50:48.893] |  :  readImmediateCondition() ... DONE
[10:50:48.893] |  checking value #2 ... done
[10:50:48.890] |  :  .  |  :  .  |  List of 1
[10:50:48.890] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.890] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.890] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.890] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.890] |  :  .  |  :  .  |      ...)  
[10:50:48.890] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.890] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.890] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.890] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.890] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.890] |  :  .  |  :  .  |      ...)  
[10:50:48.890] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.890] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.894] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.894] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.894] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.895] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.895] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.895] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.895] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.882] |  :  .  |  List of 5
[10:50:48.882] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:48.882] |  :  .  |   $ MoreArgs                 : list()
[10:50:48.882] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:48.882] |  :  .  |    ..$ :List of 3
[10:50:48.882] |  :  .  |    .. ..$ : chr "C"
[10:50:48.882] |  :  .  |    .. ..$ : chr "D"
[10:50:48.882] |  :  .  |    .. ..$ : chr "E"
[10:50:48.882] |  :  .  |    ..$ :List of 3
[10:50:48.882] |  :  .  |    .. ..$ : int 3
[10:50:48.882] |  :  .  |    .. ..$ : int 2
[10:50:48.882] |  :  .  |    .. ..$ : int 1
[10:50:48.882] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:48.882] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:48.882] |  :  .  |   - attr(*, "where")=List of 5
[10:50:48.882] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:48.882] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:48.882] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:48.882] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:48.882] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:48.882] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:48.882] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:48.882] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "G[10:50:48.895] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
lobals" "list"
[10:50:48.882] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:48.895] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.895] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:48.896] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:48.896] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:48.896] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:48.896] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:48.896] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:48.896] |  :  .  |  assign_globals() ... done
[10:50:48.899] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.899] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.900] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.900] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:48.900] |  :  .  |  :  .  |  :  New stack:
[10:50:48.904] |  Number of remaining objects: 2
[10:50:48.904] |  checking value #1 ...
[10:50:48.904] |  :  'obj' is MulticoreFuture
[10:50:48.904] |  :  readImmediateCondition() ...
[10:50:48.904] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.905] |  :   - Number of RDS files: 0
[10:50:48.900] |  :  .  |  :  .  |  :  List of 1
[10:50:48.900] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.900] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.900] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.900] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.900] |  :  .  |  :  .  |  :      ...)  
[10:50:48.900] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.900] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.900] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.900] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.900] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.900] |  :  .  |  :  .  |  :      ...)  
[10:50:48.900] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.900] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.905] |  :  readImmediateCondition() ... DONE
[10:50:48.905] |  :  .  |  :  .  |  :  Old stack:
[10:50:48.905] |  :  MulticoreFuture #1
[10:50:48.905] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.905] |  :  .  nx: 2
[10:50:48.906] |  :  .  relay: TRUE
[10:50:48.906] |  :  .  stdout: TRUE
[10:50:48.906] |  :  .  signal: TRUE
[10:50:48.906] |  :  .  resignal: FALSE
[10:50:48.906] |  :  .  force: TRUE
[10:50:48.906] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:48.907] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:48.907] |  :  .  until=1
[10:50:48.907] |  :  .  relaying element #1
[10:50:48.907] |  :  .  result() for MulticoreFuture ...
[10:50:48.908] |  :  .  |  readImmediateCondition() ...
[10:50:48.909] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.909] |  :  .  |   - Number of RDS files: 0
[10:50:48.909] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.909] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.910] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.910] |  :  .  result() for MulticoreFuture ... done
[10:50:48.905] |  :  .  |  :  .  |  :  List of 1
[10:50:48.905] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.905] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.905] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.905] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.905] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.905] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.905] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.910] |  :  .  result() for MulticoreFuture ...
[10:50:48.910] |  :  .  |  :  .  |  :  Not identical
[10:50:48.910] |  :  .  result() for MulticoreFuture ... done
[10:50:48.910] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:48.911] |  :  .  result() for MulticoreFuture ...
[10:50:48.911] |  :  .  result() for MulticoreFuture ... done
[10:50:48.911] |  :  .  result() for MulticoreFuture ...
[10:50:48.911] |  :  .  result() for MulticoreFuture ... done
[10:50:48.911] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.912] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.912] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:48.912] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.912] |  :  .  result() for MulticoreFuture ...
[10:50:48.912] |  :  .  result() for MulticoreFuture ... done
[10:50:48.913] |  :  .  result() for MulticoreFuture ...
[10:50:48.913] |  :  .  result() for MulticoreFuture ... done
[10:50:48.913] |  :  .  value: <list>
[10:50:48.913] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.913] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:48.914] |  :  .  nx: 2
[10:50:48.914] |  :  .  relay: TRUE
[10:50:48.914] |  :  .  stdout: TRUE
[10:50:48.914] |  :  .  signal: TRUE
[10:50:48.914] |  :  .  resignal: FALSE
[10:50:48.914] |  :  .  force: TRUE
[10:50:48.915] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.915] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.915] |  :  .  until=2
[10:50:48.915] |  :  .  relaying element #2
[10:50:48.915] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.915] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.916] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:48.916] |  :  length: 1 (resolved future 1)
[10:50:48.916] |  checking value #1 ... done
[10:50:48.916] |  checking value #2 ...
[10:50:48.916] |  :  'obj' is MulticoreFuture
[10:50:48.910] |  :  .  |  :  .  |  :  .  List of 2
[10:50:48.910] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.910] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.910] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.910] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.910] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.910] |  :  .  |  :  .  |  :  .      ...)  
[10:50:48.910] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.910] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.910] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.910] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.920] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:48.920] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:48.920] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:48.920] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:48.920] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:48.920] |  :  .  |  :  .  |  List of future strategies:
[10:50:48.920] |  :  .  |  :  .  |  1. multicore:
[10:50:48.920] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:48.920] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:48.920] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:48.921] |  :  .  |  :  .  |  List of 1
[10:50:48.921] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.921] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.921] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.921] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.921] |  :  .  |  :  .  |      ...)  
[10:50:48.921] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.921] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.921] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.921] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.921] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.921] |  :  .  |  :  .  |      ...)  
[10:50:48.921] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.921] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.926] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.926] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:48.926] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.926] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.927] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.927] |  :  readImmediateCondition() ...
[10:50:48.927] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:48.927] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.927] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.927] |  :   - Number of RDS files: 0
[10:50:48.927] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.927] |  :  readImmediateCondition() ... DONE
[10:50:48.928] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:48.928] |  checking value #2 ... done
[10:50:48.938] |  Number of remaining objects: 1
[10:50:48.938] |  checking value #2 ...
[10:50:48.938] |  :  'obj' is MulticoreFuture
[10:50:48.938] |  :  readImmediateCondition() ...
[10:50:48.938] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.939] |  :   - Number of RDS files: 0
[10:50:48.939] |  :  readImmediateCondition() ... DONE
[10:50:48.939] |  :  MulticoreFuture #2
[10:50:48.939] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.939] |  :  .  nx: 2
[10:50:48.939] |  :  .  relay: TRUE
[10:50:48.939] |  :  .  stdout: TRUE
[10:50:48.939] |  :  .  signal: TRUE
[10:50:48.939] |  :  .  resignal: FALSE
[10:50:48.940] |  :  .  force: TRUE
[10:50:48.940] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:48.940] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:48.940] |  :  .  until=2
[10:50:48.940] |  :  .  relaying element #2
[10:50:48.940] |  :  .  result() for MulticoreFuture ...
[10:50:48.941] |  :  .  |  readImmediateCondition() ...
[10:50:48.941] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.941] |  :  .  |   - Number of RDS files: 0
[10:50:48.941] |  :  .  |  readImmediateCondition() ... DONE
[10:50:48.941] |  :  .  |  result() for MulticoreFuture ...
[10:50:48.942] |  :  .  |  result() for MulticoreFuture ... done
[10:50:48.942] |  :  .  result() for MulticoreFuture ... done
[10:50:48.942] |  :  .  result() for MulticoreFuture ...
[10:50:48.942] |  :  .  result() for MulticoreFuture ... done
[10:50:48.942] |  :  .  result() for MulticoreFuture ...
[10:50:48.943] |  :  .  result() for MulticoreFuture ... done
[10:50:48.943] |  :  .  result() for MulticoreFuture ...
[10:50:48.943] |  :  .  result() for MulticoreFuture ... done
[10:50:48.943] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.943] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.943] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.943] |  :  value(<MulticoreFuture>, ...) ...
[10:50:48.944] |  :  .  result() for MulticoreFuture ...
[10:50:48.944] |  :  .  result() for MulticoreFuture ... done
[10:50:48.944] |  :  .  result() for MulticoreFuture ...
[10:50:48.944] |  :  .  result() for MulticoreFuture ... done
[10:50:48.944] |  :  .  value: <list>
[10:50:48.944] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:48.945] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:48.945] |  :  .  nx: 2
[10:50:48.945] |  :  .  relay: TRUE
[10:50:48.945] |  :  .  stdout: TRUE
[10:50:48.945] |  :  .  signal: TRUE
[10:50:48.945] |  :  .  resignal: FALSE
[10:50:48.945] |  :  .  force: TRUE
[10:50:48.946] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.946] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.946] |  :  .  until=2
[10:50:48.946] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.946] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.946] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:48.947] |  :  length: 0 (resolved future 2)
[10:50:48.947] |  checking value #2 ... done
[10:50:48.947] |  Relaying remaining futures ...
[10:50:48.947] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:48.947] |  :  .  nx: 2
[10:50:48.947] |  :  .  relay: TRUE
[10:50:48.947] |  :  .  stdout: TRUE
[10:50:48.947] |  :  .  signal: TRUE
[10:50:48.947] |  :  .  resignal: FALSE
[10:50:48.948] |  :  .  force: TRUE
[10:50:48.948] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.948] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:48.948] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:48.948] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:48.948] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:48.948] |  Relaying remaining futures ... done
[10:50:48.948] value() on list ... done
[10:50:48.949]  - Number of value chunks collected: 2
[10:50:48.949] Resolving 2 futures (chunks) ... DONE
[10:50:48.949] Reducing values from 2 chunks ...
[10:50:48.949]  - Number of values collected after concatenation: 5
[10:50:48.949]  - Number of values expected: 5
[10:50:48.949] Reducing values from 2 chunks ... DONE
[10:50:48.949] future_mapply() ... DONE
[10:50:48.950] future_mapply() ...
[10:50:48.950] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.950] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.950] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.951] Number of chunks: 3
[10:50:48.951] Index remapping (attribute 'ordering'): [n = 5] 2, 5, 1, 4, 3
[10:50:48.951] getGlobalsAndPackagesXApply() ...
[10:50:48.951]  - future.globals: TRUE
[10:50:48.951] getGlobalsAndPackages() ...
[10:50:48.951] |  Searching for globals ...
[10:50:48.955] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:48.956] |  Searching for globals ... DONE
[10:50:48.956] |  Resolving globals: FALSE
[10:50:48.956] |  Search for packages associated with the globals ...
[10:50:48.956] |  :  Packages associated with globals: [1] ‘base’
[10:50:48.956] |  :  Packages: [1] ‘base’
[10:50:48.956] |  Search for packages associated with the globals ... DONE
[10:50:48.957] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:48.957] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:48.957] |  Packages after dropping 'base': [0] 
[10:50:48.957] |  globals: [1] ‘FUN’
[10:50:48.957] |  packages: [0] 
[10:50:48.958] getGlobalsAndPackages() ... done
[10:50:48.958]  - globals found/used: [n=1] ‘FUN’
[10:50:48.958]  - needed namespaces: [n=0] 
[10:50:48.958] Finding globals ... DONE
[10:50:48.958] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:48.958] List of 2
[10:50:48.958]  $ ...future.FUN:function (C, k)  
[10:50:48.958]  $ MoreArgs     : NULL
[10:50:48.958]  - attr(*, "where")=List of 2
[10:50:48.958]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:48.958]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:48.958]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:48.958]  - attr(*, "resolved")= logi FALSE
[10:50:48.958]  - attr(*, "total_size")= num NA
[10:50:48.961] Packages to be attached in all futures: [n=0] 
[10:50:48.962] getGlobalsAndPackagesXApply() ... DONE
[10:50:48.962] Number of futures (= number of chunks): 3
[10:50:48.962] Launching 3 futures (chunks) ...
[10:50:48.962] Chunk #1 of 3 ...
[10:50:48.962]  - Finding globals in '...' for chunk #1 ...
[10:50:48.962] getGlobalsAndPackages() ...
[10:50:48.962] |  Searching for globals ...
[10:50:48.963] |  :  globals found: [0] 
[10:50:48.963] |  Searching for globals ... DONE
[10:50:48.963] |  globals: [0] <none>
[10:50:48.963] |  packages: [0] <none>
[10:50:48.963] getGlobalsAndPackages() ... done
[10:50:48.963]    + additional globals found: [n=0] 
[10:50:48.963]    + additional namespaces needed: [n=0] 
[10:50:48.964]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:48.964]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:48.964]  - seeds: <none>
[10:50:48.964]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.964] getGlobalsAndPackages() ...
[10:50:48.964] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.964] |  Resolving globals: FALSE
[10:50:48.964] |  Search for packages associated with the globals ...
[10:50:48.965] |  :  Packages associated with globals: [0] 
[10:50:48.965] |  :  Packages: [0] 
[10:50:48.965] |  Search for packages associated with the globals ... DONE
[10:50:48.965] |  Packages after dropping 'base': [0] 
[10:50:48.965] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.965] |  packages: [0] 
[10:50:48.965] getGlobalsAndPackages() ... done
[10:50:48.966] run() for Future (‘Future’) ...
[10:50:48.966] |  state: ‘created’
[10:50:48.966] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.966] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.966] |  Using MulticoreFutureBackend ...
[10:50:48.966] |  :  Launching futures ...
[10:50:48.967] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.967] |  :  .  |  getFutureData() ...
[10:50:48.967] |  :  .  |  :  getFutureCore() ...
[10:50:48.967] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.967] |  :  .  |  :  getFutureCore() ... done
[10:50:48.967] |  :  .  |  :  getFutureCapture() ...
[10:50:48.967] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.967] |  :  .  |  :  getFutureContext() ...
[10:50:48.967] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.968] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.968] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.968] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.968] |  :  .  |  :  getFutureContext() ... done
[10:50:48.968] |  :  .  |  getFutureData() ... done
[10:50:48.968] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.969] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.971] |  :  .  |  MulticoreFuture started
[10:50:48.971] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.971] |  :  Launching futures ... done
[10:50:48.971] |  :  .  |  attachPackages() ...
[10:50:48.971] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.972] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.972] |  Using MulticoreFutureBackend ... done
[10:50:48.972] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.972] |  :  .  |  attachPackages() ... DONE
[10:50:48.972] |  :  .  |  attachPackages() ...
[10:50:48.972] Created future:
[10:50:48.972] |  :  .  |  :  packages: [n=0] 
[10:50:48.972] |  :  .  |  attachPackages() ... DONE
[10:50:48.973] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.974] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:48.974] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.974] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:48.975] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:48.975] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:48.975] |  :  .  |  :  .  |  New stack:
[10:50:48.975] |  :  .  |  :  .  |  List of 1
[10:50:48.975] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.975] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.975] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.975] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.975] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.975] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.975] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.979] |  :  .  |  :  .  |  Old stack:
[10:50:48.984] readImmediateCondition() ...
[10:50:48.984]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:48.980] |  :  .  |  :  .  |  List of 1
[10:50:48.980] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.980] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.980] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.980] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.980] |  :  .  |  :  .  |      ...)  
[10:50:48.980] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.980] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.980] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:48.980] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.980] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.980] |  :  .  |  :  .  |      ...)  
[10:50:48.980] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.980] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.984] |  :  .  |  :  .  |  Not identical
[10:50:48.985]  - Number of RDS files: 0
[10:50:48.985] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:48.985] readImmediateCondition() ... DONE
[10:50:48.972] MulticoreFuture:
[10:50:48.972] Label: ‘future_mapply-1’
[10:50:48.972] Expression:
[10:50:48.972] {
[10:50:48.972]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.972]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.972]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.972]         on.exit(options(oopts), add = TRUE)
[10:50:48.972]     }
[10:50:48.972]     {
[10:50:48.972]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.972]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.972]         do.call(mapply, args = args)
[10:50:48.972]     }
[10:50:48.972] }
[10:50:48.972] Lazy evaluation: FALSE
[10:50:48.972] Asynchronous evaluation: TRUE
[10:50:48.972] Local evaluation: TRUE
[10:50:48.972] Environment: R_GlobalEnv
[10:50:48.972] Capture standard output: TRUE
[10:50:48.972] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.972] Immediate condition classes: ‘immediateCondition’
[10:50:48.972] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.972] Packages: <none>
[10:50:48.972] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.972] Resolved: FALSE
[10:50:48.972] Value: <not collected>
[10:50:48.972] Conditions captured: <none>
[10:50:48.972] Early signaling: FALSE
[10:50:48.972] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.972] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.985] Chunk #1 of 3 ... DONE
[10:50:48.985] Chunk #2 of 3 ...
[10:50:48.986]  - Finding globals in '...' for chunk #2 ...
[10:50:48.986] getGlobalsAndPackages() ...
[10:50:48.986] |  Searching for globals ...
[10:50:48.986] |  :  globals found: [0] 
[10:50:48.987] |  Searching for globals ... DONE
[10:50:48.987] |  globals: [0] <none>
[10:50:48.987] |  packages: [0] <none>
[10:50:48.987] getGlobalsAndPackages() ... done
[10:50:48.987]    + additional globals found: [n=0] 
[10:50:48.987]    + additional namespaces needed: [n=0] 
[10:50:48.987]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:48.987]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:48.987]  - seeds: <none>
[10:50:48.988]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.988] getGlobalsAndPackages() ...
[10:50:48.988] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.988] |  Resolving globals: FALSE
[10:50:48.988] |  Search for packages associated with the globals ...
[10:50:48.989] |  :  Packages associated with globals: [0] 
[10:50:48.989] |  :  Packages: [0] 
[10:50:48.989] |  Search for packages associated with the globals ... DONE
[10:50:48.989] |  Packages after dropping 'base': [0] 
[10:50:48.989] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:48.990] |  packages: [0] 
[10:50:48.990] getGlobalsAndPackages() ... done
[10:50:48.990] run() for Future (‘Future’) ...
[10:50:48.990] |  state: ‘created’
[10:50:48.990] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.991] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.991] |  Using MulticoreFutureBackend ...
[10:50:48.991] |  :  Launching futures ...
[10:50:48.991] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.991] |  :  .  |  getFutureData() ...
[10:50:48.991] |  :  .  |  :  getFutureCore() ...
[10:50:48.991] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:48.992] |  :  .  |  :  getFutureCore() ... done
[10:50:48.992] |  :  .  |  :  getFutureCapture() ...
[10:50:48.992] |  :  .  |  :  getFutureCapture() ... done
[10:50:48.992] |  :  .  |  :  getFutureContext() ...
[10:50:48.985] |  :  .  |  :  .  |  :  List of 2
[10:50:48.985] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.985] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.985] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:48.985] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.985] |  :  .  |  :  .  |  :      ...)  
[10:50:48.985] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:48.985] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:48.985] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:48.985] |  :  .  |  :  .  |  :      ...)  
[10:50:48.985] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:48.992] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.992] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:48.992] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.993] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:48.993] |  :  .  |  :  getFutureContext() ... done
[10:50:48.993] |  :  .  |  getFutureData() ... done
[10:50:48.993] |  :  .  |  :  .  |  :  Formals differ
[10:50:48.993] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.993] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:48.993] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:48.993] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:48.993] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:48.994] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:48.994] |  :  .  |  :  .  List of future strategies:
[10:50:48.994] |  :  .  |  :  .  1. sequential:
[10:50:48.994] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:48.994] |  :  .  |  :  .     - tweaked: FALSE
[10:50:48.994] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.996] |  :  .  |  MulticoreFuture started
[10:50:48.996] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:48.997] |  :  Launching futures ... done
[10:50:48.997] |  :  .  |  attachPackages() ...
[10:50:48.997] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:48.997] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:48.997] |  Using MulticoreFutureBackend ... done
[10:50:48.994] |  :  .  |  :  .  List of 1
[10:50:48.994] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:48.994] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:48.994] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:48.994] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.994] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:48.994] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:48.994] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:48.998] run() for Future (‘MulticoreFuture’) ... done
[10:50:48.998] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:48.998] |  :  .  |  attachPackages() ... DONE
[10:50:48.998] Created future:
[10:50:48.998] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup[10:50:48.998] |  :  .  |  attachPackages() ...
 = FALSE) ... done
[10:50:48.998] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:48.998] |  :  .  |  :  packages: [n=0] 
[10:50:48.998] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:48.998] |  :  .  |  attachPackages() ... DONE
[10:50:48.998] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:48.999] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:48.999] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:48.999] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:48.999] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:48.999] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.000] |  :  .  |  assign_globals() ...
[10:50:49.000] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.000] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.000] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.001] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.001] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.001] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.002] |  :  .  |  :  .  |  New stack:
[10:50:49.002] |  :  .  |  :  .  |  List of 1
[10:50:49.002] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.002] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.002] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.002] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.002] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.002] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.002] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.007] |  :  .  |  :  .  |  Old stack:
[10:50:49.000] |  :  .  |  List of 5
[10:50:49.000] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.000] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.000] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.000] |  :  .  |    ..$ :List of 2
[10:50:49.000] |  :  .  |    .. ..$ : chr "B"
[10:50:49.000] |  :  .  |    .. ..$ : chr "E"
[10:50:49.000] |  :  .  |    ..$ :List of 2
[10:50:49.000] |  :  .  |    .. ..$ : int 4
[10:50:49.000] |  :  .  |    .. ..$ : int 1
[10:50:49.000] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.000] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.000] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.000] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.000] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.000] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.000] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.000] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.000] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.000] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.000] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.000] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.009] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.009] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.009] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.009] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.009] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.009] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.010] |  :  .  |  assign_globals() ... done
[10:50:49.011] readImmediateCondition() ...
[10:50:49.011]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.011]  - Number of RDS files: 0
[10:50:49.011] readImmediateCondition() ... DONE
[10:50:48.998] MulticoreFuture:
[10:50:48.998] Label: ‘future_mapply-2’
[10:50:48.998] Expression:
[10:50:48.998] {
[10:50:48.998]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:48.998]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:48.998]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:48.998]         on.exit(options(oopts), add = TRUE)
[10:50:48.998]     }
[10:50:48.998]     {
[10:50:48.998]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:48.998]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:48.998]         do.call(mapply, args = args)
[10:50:48.998]     }
[10:50:48.998] }
[10:50:48.998] Lazy evaluation: FALSE
[10:50:48.998] Asynchronous evaluation: TRUE
[10:50:48.998] Local evaluation: TRUE
[10:50:48.998] Environment: R_GlobalEnv
[10:50:48.998] Capture standard output: TRUE
[10:50:48.998] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:48.998] Immediate condition classes: ‘immediateCondition’
[10:50:48.998] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:48.998] Packages: <none>
[10:50:48.998] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:48.998] Resolved: FALSE
[10:50:48.998] Value: <not collected>
[10:50:48.998] Conditions captured: <none>
[10:50:48.998] Early signaling: FALSE
[10:50:48.998] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:48.998] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.007] |  :  .  |  :  .  |  List of 1
[10:50:49.007] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.007] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.007] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.007] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.007] |  :  .  |  :  .  |      ...)  
[10:50:49.007] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.007] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.007] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.007] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.007] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.007] |  :  .  |  :  .  |      ...)  
[10:50:49.007] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.007] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.012] Chunk #2 of 3 ... DONE
[10:50:49.012] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.012] |  :  .  |  :  .  |  Not identical
[10:50:49.012] Chunk #3 of 3 ...
[10:50:49.013] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.013] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.013] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.013]  - Finding globals in '...' for chunk #3 ...
[10:50:49.013] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.013] |  :  .  |  :  .  |  :  New stack:
[10:50:49.013] getGlobalsAndPackages() ...
[10:50:49.013] |  Searching for globals ...
[10:50:49.014] |  :  globals found: [0] 
[10:50:49.015] |  Searching for globals ... DONE
[10:50:49.015] |  globals: [0] <none>
[10:50:49.015] |  packages: [0] <none>
[10:50:49.015] getGlobalsAndPackages() ... done
[10:50:49.015]    + additional globals found: [n=0] 
[10:50:49.016]    + additional namespaces needed: [n=0] 
[10:50:49.016]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:49.016]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:49.016]  - seeds: <none>
[10:50:49.016]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.017] getGlobalsAndPackages() ...
[10:50:49.017] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.017] |  Resolving globals: FALSE
[10:50:49.017] |  Search for packages associated with the globals ...
[10:50:49.013] |  :  .  |  :  .  |  :  List of 1
[10:50:49.013] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.013] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.013] |  :  .  |  :  .  |  :      ...)  
[10:50:49.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.013] |  :  .  |  :  .  |  :      ...)  
[10:50:49.013] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.013] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.018] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.018] |  :  Packages associated with globals: [0] 
[10:50:49.019] |  :  Packages: [0] 
[10:50:49.019] |  Search for packages associated with the globals ... DONE
[10:50:49.019] |  Packages after dropping 'base': [0] 
[10:50:49.019] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.019] |  packages: [0] 
[10:50:49.020] getGlobalsAndPackages() ... done
[10:50:49.020] run() for Future (‘Future’) ...
[10:50:49.020] |  state: ‘created’
[10:50:49.018] |  :  .  |  :  .  |  :  List of 1
[10:50:49.018] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.018] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.018] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.018] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.018] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.018] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.018] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.021] |  :  .  |  :  .  |  :  Not identical
[10:50:49.021] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.021] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.021] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.021] |  Using MulticoreFutureBackend ...
[10:50:49.021] |  :  Launching futures ...
[10:50:49.022] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.022] |  :  .  |  getFutureData() ...
[10:50:49.022] |  :  .  |  :  getFutureCore() ...
[10:50:49.022] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.023] |  :  .  |  :  getFutureCore() ... done
[10:50:49.013] |  :  .  |  :  .  |  :  List of 2
[10:50:49.013] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.013] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.013] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.013] |  :  .  |  :  .  |  :      ...)  
[10:50:49.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.013] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.013] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.013] |  :  .  |  :  .  |  :      ...)  
[10:50:49.013] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.023] |  :  .  |  :  getFutureCapture() ...
[10:50:49.023] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.023] |  :  .  |  :  getFutureContext() ...
[10:50:49.023] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.024] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.024] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.024] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.024] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.024] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.024] |  :  .  |  :  getFutureContext() ... done
[10:50:49.024] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.025] |  :  .  |  getFutureData() ... done
[10:50:49.025] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.025] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.025] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.025] |  :  .  |  :  Poll #1 (0): usedCores() = 2, workers = 2
[10:50:49.025] |  :  .  |  :  .  List of future strategies:
[10:50:49.025] |  :  .  |  :  .  1. sequential:
[10:50:49.025] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.025] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.025] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.021] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.021] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.021] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.021] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.021] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.021] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.021] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.021] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.021] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.028] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.028] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.028] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.028] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.028] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.028] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.028] |  :  .  |  :  .  |  1. multicore:
[10:50:49.028] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.028] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.028] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.026] |  :  .  |  :  .  List of 1
[10:50:49.026] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.026] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.026] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.026] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.026] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.026] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.026] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.029] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.030] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.030] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.030] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.030] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.030] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.031] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.031] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.031] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.031] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.031] |  :  .  |  assign_globals() ...
[10:50:49.029] |  :  .  |  :  .  |  List of 1
[10:50:49.029] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.029] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.029] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.029] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.029] |  :  .  |  :  .  |      ...)  
[10:50:49.029] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.029] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.029] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.029] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.029] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.029] |  :  .  |  :  .  |      ...)  
[10:50:49.029] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.029] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.033] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.033] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.033] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.033] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.034] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.034] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.034] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.034] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.034] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.036] |  :  .  |  :  readImmediateCondition() ...
[10:50:49.036] |  :  .  |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.036] |  :  .  |  :   - Number of RDS files: 0
[10:50:49.037] |  :  .  |  :  readImmediateCondition() ... DONE
[10:50:49.037] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:49.038] |  :  .  |  :  .  readImmediateCondition() ...
[10:50:49.038] |  :  .  |  :  .    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.038] |  :  .  |  :  .   - Number of RDS files: 0
[10:50:49.039] |  :  .  |  :  .  readImmediateCondition() ... DONE
[10:50:49.039] |  :  .  |  :  .  result() for MulticoreFuture ...
[10:50:49.039] |  :  .  |  :  .  result() for MulticoreFuture ... done
[10:50:49.039] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:49.040] |  :  .  |  :  result() for MulticoreFuture ...
[10:50:49.040] |  :  .  |  :  result() for MulticoreFuture ... done
[10:50:49.041] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.032] |  :  .  |  List of 5
[10:50:49.032] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.032] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.032] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.032] |  :  .  |    ..$ :List of 1
[10:50:49.032] |  :  .  |    .. ..$ : chr "A"
[10:50:49.032] |  :  .  |    ..$ :List of 1
[10:50:49.032] |  :  .  |    .. ..$ : int 5
[10:50:49.032] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.032] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.032] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.032] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.032] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.032] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.032] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.032] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.032] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.032] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.032] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.032] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.042] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.042] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.042] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.042] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.042] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.043] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.043] |  :  .  |  assign_globals() ... done
[10:50:49.044] |  :  .  |  MulticoreFuture started
[10:50:49.044] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.044] |  :  .  |  attachPackages() ...
[10:50:49.044] |  :  Launching futures ... done
[10:50:49.044] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.045] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.045] |  :  .  |  attachPackages() ... DONE
[10:50:49.045] |  Using MulticoreFutureBackend ... done
[10:50:49.045] |  :  .  |  attachPackages() ...
[10:50:49.045] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.045] |  :  .  |  :  packages: [n=0] 
[10:50:49.045] |  :  .  |  attachPackages() ... DONE
[10:50:49.046] Created future:
[10:50:49.046] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.047] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.047] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.047] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.047] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.047] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.047] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.048] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.048] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.048] |  :  .  |  :  .  |  :  New stack:
[10:50:49.048] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.048] |  :  .  |  :  .  |  New stack:
[10:50:49.048] |  :  .  |  :  .  |  List of 1
[10:50:49.048] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.048] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.048] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.048] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.048] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.048] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.048] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.048] |  :  .  |  :  .  |  :  List of 1
[10:50:49.048] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.048] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.048] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.048] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.048] |  :  .  |  :  .  |  :      ...)  
[10:50:49.048] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.048] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.048] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.048] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.048] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.048] |  :  .  |  :  .  |  :      ...)  
[10:50:49.048] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.048] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.052] |  :  .  |  :  .  |  Old stack:
[10:50:49.052] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.052] |  :  .  |  :  .  |  :  List of 1
[10:50:49.052] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.052] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.052] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.052] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.052] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.052] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.052] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.055] |  :  .  |  :  .  |  :  Not identical
[10:50:49.055] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.052] |  :  .  |  :  .  |  List of 1
[10:50:49.052] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.052] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.052] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.052] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.052] |  :  .  |  :  .  |      ...)  
[10:50:49.052] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.052] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.052] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.052] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.052] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.052] |  :  .  |  :  .  |      ...)  
[10:50:49.052] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.052] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.057] |  :  .  |  :  .  |  Not identical
[10:50:49.057] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.058] readImmediateCondition() ...
[10:50:49.058]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.058]  - Number of RDS files: 0
[10:50:49.059] readImmediateCondition() ... DONE
[10:50:49.046] MulticoreFuture:
[10:50:49.046] Label: ‘future_mapply-3’
[10:50:49.046] Expression:
[10:50:49.046] {
[10:50:49.046]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.046]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.046]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.046]         on.exit(options(oopts), add = TRUE)
[10:50:49.046]     }
[10:50:49.046]     {
[10:50:49.046]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.046]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.046]         do.call(mapply, args = args)
[10:50:49.046]     }
[10:50:49.046] }
[10:50:49.046] Lazy evaluation: FALSE
[10:50:49.046] Asynchronous evaluation: TRUE
[10:50:49.046] Local evaluation: TRUE
[10:50:49.046] Environment: R_GlobalEnv
[10:50:49.046] Capture standard output: TRUE
[10:50:49.046] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.046] Immediate condition classes: ‘immediateCondition’
[10:50:49.046] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.046] Packages: <none>
[10:50:49.046] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.046] Resolved: FALSE
[10:50:49.046] Value: <not collected>
[10:50:49.046] Conditions captured: <none>
[10:50:49.046] Early signaling: FALSE
[10:50:49.046] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.046] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.059] Chunk #3 of 3 ... DONE
[10:50:49.060] Launching 3 futures (chunks) ... DONE
[10:50:49.060] Resolving 3 futures (chunks) ...
[10:50:49.060] value() on list ...
[10:50:49.060] |  recursive: 0
[10:50:49.061] |  length: 3
[10:50:49.061] |  
[10:50:49.061] |  Number of remaining objects: 3
[10:50:49.061] |  checking value #1 ...
[10:50:49.061] |  :  'obj' is MulticoreFuture
[10:50:49.062] |  :  MulticoreFuture #1
[10:50:49.062] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.062] |  :  .  nx: 3
[10:50:49.062] |  :  .  relay: TRUE
[10:50:49.062] |  :  .  stdout: TRUE
[10:50:49.062] |  :  .  signal: TRUE
[10:50:49.063] |  :  .  resignal: FALSE
[10:50:49.063] |  :  .  force: TRUE
[10:50:49.063] |  :  .  relayed: [n=3] FALSE, FALSE, FALSE
[10:50:49.063] |  :  .  queued futures: [n=3] FALSE, FALSE, FALSE
[10:50:49.063] |  :  .  until=1
[10:50:49.056] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.056] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.056] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.056] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.056] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.056] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.056] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.056] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.056] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.056] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.056] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.064] |  :  .  relaying element #1
[10:50:49.057] |  :  .  |  :  .  |  :  List of 2
[10:50:49.057] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.057] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.057] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.057] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.057] |  :  .  |  :  .  |  :      ...)  
[10:50:49.057] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.057] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.057] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.057] |  :  .  |  :  .  |  :      ...)  
[10:50:49.057] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.064] |  :  .  result() for MulticoreFuture ...
[10:50:49.064] |  :  .  result() for MulticoreFuture ... done
[10:50:49.064] |  :  .  result() for MulticoreFuture ...
[10:50:49.064] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.064] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.065] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.065] |  :  .  result() for MulticoreFuture ... done
[10:50:49.065] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.065] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.065] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.065] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.065] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.065] |  :  .  result() for MulticoreFuture ...
[10:50:49.065] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.065] |  :  .  result() for MulticoreFuture ... done
[10:50:49.065] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.065] |  :  .  result() for MulticoreFuture ...
[10:50:49.065] |  :  .  result() for MulticoreFuture ... done
[10:50:49.065] |  :  .  |  :  .  List of future strategies:
[10:50:49.065] |  :  .  |  :  .  1. sequential:
[10:50:49.065] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.065] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.065] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.066] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:49.065] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.065] |  :  .  |  :  .  |  1. multicore:
[10:50:49.065] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.065] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.065] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.066] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:49.066] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.066] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.066] |  :  .  result() for MulticoreFuture ...
[10:50:49.067] |  :  .  result() for MulticoreFuture ... done
[10:50:49.067] |  :  .  result() for MulticoreFuture ...
[10:50:49.067] |  :  .  result() for MulticoreFuture ... done
[10:50:49.067] |  :  .  value: <list>
[10:50:49.067] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.068] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.068] |  :  .  nx: 3
[10:50:49.068] |  :  .  relay: TRUE
[10:50:49.068] |  :  .  stdout: TRUE
[10:50:49.068] |  :  .  signal: TRUE
[10:50:49.069] |  :  .  resignal: FALSE
[10:50:49.069] |  :  .  force: TRUE
[10:50:49.066] |  :  .  |  :  .  List of 1
[10:50:49.066] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.066] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.066] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.066] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.066] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.066] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.066] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.069] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:49.069] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:49.069] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.069] |  :  .  until=2
[10:50:49.069] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.069] |  :  .  relaying element #2
[10:50:49.070] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.070] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:49.070] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.070] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:49.070] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.070] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.070] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.070] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.070] |  :  length: 2 (resolved future 1)
[10:50:49.070] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.070] |  checking value #1 ... done
[10:50:49.071] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.071] |  checking value #2 ...
[10:50:49.071] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.071] |  :  'obj' is MulticoreFuture
[10:50:49.071] |  :  .  |  assign_globals() ...
[10:50:49.066] |  :  .  |  :  .  |  List of 1
[10:50:49.066] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.066] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.066] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.066] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.066] |  :  .  |  :  .  |      ...)  
[10:50:49.066] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.066] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.066] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.066] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.066] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.066] |  :  .  |  :  .  |      ...)  
[10:50:49.066] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.066] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.072] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.072] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.072] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.073] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.073] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.073] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.073] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.073] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.073] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.074] |  :  readImmediateCondition() ...
[10:50:49.074] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.074] |  :   - Number of RDS files: 0
[10:50:49.074] |  :  readImmediateCondition() ... DONE
[10:50:49.074] |  :  MulticoreFuture #2
[10:50:49.074] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.075] |  :  .  nx: 3
[10:50:49.075] |  :  .  relay: TRUE
[10:50:49.075] |  :  .  stdout: TRUE
[10:50:49.075] |  :  .  signal: TRUE
[10:50:49.075] |  :  .  resignal: FALSE
[10:50:49.075] |  :  .  force: TRUE
[10:50:49.075] |  :  .  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:49.075] |  :  .  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:49.075] |  :  .  until=2
[10:50:49.075] |  :  .  relaying element #2
[10:50:49.076] |  :  .  result() for MulticoreFuture ...
[10:50:49.076] |  :  .  |  readImmediateCondition() ...
[10:50:49.076] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.077] |  :  .  |   - Number of RDS files: 0
[10:50:49.077] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.077] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.077] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.078] |  :  .  result() for MulticoreFuture ... done
[10:50:49.078] |  :  .  result() for MulticoreFuture ...
[10:50:49.078] |  :  .  result() for MulticoreFuture ... done
[10:50:49.078] |  :  .  result() for MulticoreFuture ...
[10:50:49.078] |  :  .  result() for MulticoreFuture ... done
[10:50:49.078] |  :  .  result() for MulticoreFuture ...
[10:50:49.079] |  :  .  result() for MulticoreFuture ... done
[10:50:49.079] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:49.079] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:49.079] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.071] |  :  .  |  List of 5
[10:50:49.071] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.071] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.071] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.071] |  :  .  |    ..$ :List of 2
[10:50:49.071] |  :  .  |    .. ..$ : chr "D"
[10:50:49.071] |  :  .  |    .. ..$ : chr "C"
[10:50:49.071] |  :  .  |    ..$ :List of 2
[10:50:49.071] |  :  .  |    .. ..$ : int 2
[10:50:49.071] |  :  .  |    .. ..$ : int 3
[10:50:49.071] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.071] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.071] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.071] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.071] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.071] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.071] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.071] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.071] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.071] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.071] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.071] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.079] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.079] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.079] |  :  .  result() for MulticoreFuture ...
[10:50:49.080] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.080] |  :  .  result() for MulticoreFuture ... done
[10:50:49.080] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.080] |  :  .  result() for MulticoreFuture ...
[10:50:49.080] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.080] |  :  .  result() for MulticoreFuture ... done
[10:50:49.080] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.080] |  :  .  value: <list>
[10:50:49.080] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.080] |  :  .  |  assign_globals() ... done
[10:50:49.080] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.080] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.081] |  :  .  nx: 3
[10:50:49.081] |  :  .  relay: TRUE
[10:50:49.081] |  :  .  stdout: TRUE
[10:50:49.081] |  :  .  signal: TRUE
[10:50:49.081] |  :  .  resignal: FALSE
[10:50:49.081] |  :  .  force: TRUE
[10:50:49.081] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:49.082] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:49.082] |  :  .  until=3
[10:50:49.082] |  :  .  relaying element #3
[10:50:49.082] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:49.082] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:49.082] |  :  signalConditionsASAP(NULL, pos=2) ... done
[10:50:49.083] |  :  length: 1 (resolved future 2)
[10:50:49.083] |  checking value #2 ... done
[10:50:49.083] |  checking value #3 ...
[10:50:49.083] |  :  'obj' is MulticoreFuture
[10:50:49.083] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.083] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.084] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.084] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.084] |  :  .  |  :  .  |  :  New stack:
[10:50:49.084] |  :  .  |  :  .  |  :  List of 1
[10:50:49.084] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.084] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.084] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.084] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.084] |  :  .  |  :  .  |  :      ...)  
[10:50:49.084] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.084] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.084] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.084] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.084] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.084] |  :  .  |  :  .  |  :      ...)  
[10:50:49.084] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.084] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.088] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.088] |  :  .  |  :  .  |  :  List of 1
[10:50:49.088] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.088] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.088] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.088] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.088] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.088] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.088] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.091] |  :  .  |  :  .  |  :  Not identical
[10:50:49.092] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.093] |  :  readImmediateCondition() ...
[10:50:49.094] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.094] |  :   - Number of RDS files: 0
[10:50:49.094] |  :  readImmediateCondition() ... DONE
[10:50:49.094] |  checking value #3 ... done
[10:50:49.092] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.092] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.092] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.092] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.092] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.092] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.092] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.092] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.092] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.092] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.092] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.098] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.098] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.098] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.098] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.098] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.099] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.099] |  :  .  |  :  .  |  1. multicore:
[10:50:49.099] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.099] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.099] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.099] |  :  .  |  :  .  |  List of 1
[10:50:49.099] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.099] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.099] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.099] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.099] |  :  .  |  :  .  |      ...)  
[10:50:49.099] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.099] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.099] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.099] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.099] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.099] |  :  .  |  :  .  |      ...)  
[10:50:49.099] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.099] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.103] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.103] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.104] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.104] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.104] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.104] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.104] |  Number of remaining objects: 1
[10:50:49.104] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.104] |  checking value #3 ...
[10:50:49.104] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.104] |  :  'obj' is MulticoreFuture
[10:50:49.105] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.105] |  :  readImmediateCondition() ...
[10:50:49.105] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.105] |  :   - Number of RDS files: 0
[10:50:49.105] |  :  readImmediateCondition() ... DONE
[10:50:49.105] |  :  MulticoreFuture #3
[10:50:49.105] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ...
[10:50:49.106] |  :  .  nx: 3
[10:50:49.106] |  :  .  relay: TRUE
[10:50:49.106] |  :  .  stdout: TRUE
[10:50:49.106] |  :  .  signal: TRUE
[10:50:49.106] |  :  .  resignal: FALSE
[10:50:49.106] |  :  .  force: TRUE
[10:50:49.106] |  :  .  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:49.106] |  :  .  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:49.106] |  :  .  until=3
[10:50:49.107] |  :  .  relaying element #3
[10:50:49.107] |  :  .  result() for MulticoreFuture ...
[10:50:49.107] |  :  .  |  readImmediateCondition() ...
[10:50:49.107] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.108] |  :  .  |   - Number of RDS files: 0
[10:50:49.108] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.108] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.108] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.108] |  :  .  result() for MulticoreFuture ... done
[10:50:49.108] |  :  .  result() for MulticoreFuture ...
[10:50:49.108] |  :  .  result() for MulticoreFuture ... done
[10:50:49.109] |  :  .  result() for MulticoreFuture ...
[10:50:49.109] |  :  .  result() for MulticoreFuture ... done
[10:50:49.109] |  :  .  result() for MulticoreFuture ...
[10:50:49.109] |  :  .  result() for MulticoreFuture ... done
[10:50:49.109] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:49.109] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:49.109] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ... done
[10:50:49.109] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.110] |  :  .  result() for MulticoreFuture ...
[10:50:49.110] |  :  .  result() for MulticoreFuture ... done
[10:50:49.110] |  :  .  result() for MulticoreFuture ...
[10:50:49.110] |  :  .  result() for MulticoreFuture ... done
[10:50:49.110] |  :  .  value: <list>
[10:50:49.110] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.110] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ...
[10:50:49.110] |  :  .  nx: 3
[10:50:49.110] |  :  .  relay: TRUE
[10:50:49.111] |  :  .  stdout: TRUE
[10:50:49.111] |  :  .  signal: TRUE
[10:50:49.111] |  :  .  resignal: FALSE
[10:50:49.111] |  :  .  force: TRUE
[10:50:49.111] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:49.111] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:49.111] |  :  .  until=3
[10:50:49.111] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:49.111] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:49.111] |  :  signalConditionsASAP(MulticoreFuture, pos=3) ... done
[10:50:49.112] |  :  length: 0 (resolved future 3)
[10:50:49.112] |  checking value #3 ... done
[10:50:49.112] |  Relaying remaining futures ...
[10:50:49.112] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.112] |  :  .  nx: 3
[10:50:49.112] |  :  .  relay: TRUE
[10:50:49.112] |  :  .  stdout: TRUE
[10:50:49.112] |  :  .  signal: TRUE
[10:50:49.113] |  :  .  resignal: FALSE
[10:50:49.113] |  :  .  force: TRUE
[10:50:49.113] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:49.113] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
 - flush all
[10:50:49.113] |  :  .  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:49.113] |  :  .  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:49.113] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.113] |  Relaying remaining futures ... done
[10:50:49.113] value() on list ... done
[10:50:49.114]  - Number of value chunks collected: 3
[10:50:49.114] Resolving 3 futures (chunks) ... DONE
[10:50:49.114] Reducing values from 3 chunks ...
[10:50:49.114]  - Number of values collected after concatenation: 5
[10:50:49.114]  - Number of values expected: 5
[10:50:49.114] Reverse index remapping (attribute 'ordering'): [n = 5] 3, 1, 5, 4, 2
[10:50:49.114] Reducing values from 3 chunks ... DONE
[10:50:49.114] future_mapply() ... DONE
[10:50:49.115] future_mapply() ...
[10:50:49.115] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.115] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.115] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.116] Number of chunks: 2
[10:50:49.116] getGlobalsAndPackagesXApply() ...
[10:50:49.116]  - future.globals: TRUE
[10:50:49.116] getGlobalsAndPackages() ...
[10:50:49.116] |  Searching for globals ...
[10:50:49.118] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:49.118] |  Searching for globals ... DONE
[10:50:49.119] |  Resolving globals: FALSE
[10:50:49.119] |  Search for packages associated with the globals ...
[10:50:49.119] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.119] |  :  Packages: [1] ‘base’
[10:50:49.119] |  Search for packages associated with the globals ... DONE
[10:50:49.120] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:49.120] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:49.120] |  Packages after dropping 'base': [0] 
[10:50:49.120] |  globals: [1] ‘FUN’
[10:50:49.120] |  packages: [0] 
[10:50:49.121] getGlobalsAndPackages() ... done
[10:50:49.121]  - globals found/used: [n=1] ‘FUN’
[10:50:49.121]  - needed namespaces: [n=0] 
[10:50:49.121] Finding globals ... DONE
[10:50:49.121] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.121] List of 2
[10:50:49.121]  $ ...future.FUN:function (C, k)  
[10:50:49.121]  $ MoreArgs     : list()
[10:50:49.121]  - attr(*, "where")=List of 2
[10:50:49.121]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.121]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.121]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.121]  - attr(*, "resolved")= logi FALSE
[10:50:49.121]  - attr(*, "total_size")= num NA
[10:50:49.125] Packages to be attached in all futures: [n=0] 
[10:50:49.125] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.125] Number of futures (= number of chunks): 2
[10:50:49.125] Launching 2 futures (chunks) ...
[10:50:49.125] Chunk #1 of 2 ...
[10:50:49.125]  - Finding globals in '...' for chunk #1 ...
[10:50:49.125] getGlobalsAndPackages() ...
[10:50:49.126] |  Searching for globals ...
[10:50:49.126] |  :  globals found: [0] 
[10:50:49.126] |  Searching for globals ... DONE
[10:50:49.126] |  globals: [0] <none>
[10:50:49.126] |  packages: [0] <none>
[10:50:49.126] getGlobalsAndPackages() ... done
[10:50:49.126]    + additional globals found: [n=0] 
[10:50:49.127]    + additional namespaces needed: [n=0] 
[10:50:49.127]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.127]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.127]  - seeds: <none>
[10:50:49.127]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.127] getGlobalsAndPackages() ...
[10:50:49.127] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.127] |  Resolving globals: FALSE
[10:50:49.128] |  Search for packages associated with the globals ...
[10:50:49.128] |  :  Packages associated with globals: [0] 
[10:50:49.128] |  :  Packages: [0] 
[10:50:49.128] |  Search for packages associated with the globals ... DONE
[10:50:49.128] |  Packages after dropping 'base': [0] 
[10:50:49.128] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.129] |  packages: [0] 
[10:50:49.129] getGlobalsAndPackages() ... done
[10:50:49.129] run() for Future (‘Future’) ...
[10:50:49.129] |  state: ‘created’
[10:50:49.129] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.129] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.130] |  Using MulticoreFutureBackend ...
[10:50:49.130] |  :  Launching futures ...
[10:50:49.130] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.130] |  :  .  |  getFutureData() ...
[10:50:49.130] |  :  .  |  :  getFutureCore() ...
[10:50:49.130] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.130] |  :  .  |  :  getFutureCore() ... done
[10:50:49.130] |  :  .  |  :  getFutureCapture() ...
[10:50:49.131] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.131] |  :  .  |  :  getFutureContext() ...
[10:50:49.131] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.131] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.131] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.131] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.131] |  :  .  |  :  getFutureContext() ... done
[10:50:49.131] |  :  .  |  getFutureData() ... done
[10:50:49.132] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.132] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.134] |  :  .  |  MulticoreFuture started
[10:50:49.134] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.134] |  :  Launching futures ... done
[10:50:49.135] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.135] |  :  .  |  attachPackages() ...
[10:50:49.135] |  Using MulticoreFutureBackend ... done
[10:50:49.135] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.135] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.135] Created future:
[10:50:49.135] |  :  .  |  attachPackages() ... DONE
[10:50:49.136] |  :  .  |  attachPackages() ...
[10:50:49.136] |  :  .  |  :  packages: [n=0] 
[10:50:49.136] |  :  .  |  attachPackages() ... DONE
[10:50:49.137] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.137] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.137] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.138] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.138] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.138] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.138] |  :  .  |  :  .  |  New stack:
[10:50:49.138] |  :  .  |  :  .  |  List of 1
[10:50:49.138] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.138] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.138] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.138] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.138] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.138] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.138] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.142] |  :  .  |  :  .  |  Old stack:
[10:50:49.142] |  :  .  |  :  .  |  List of 1
[10:50:49.142] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.142] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.142] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.142] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.142] |  :  .  |  :  .  |      ...)  
[10:50:49.142] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.142] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.142] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.142] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.142] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.142] |  :  .  |  :  .  |      ...)  
[10:50:49.142] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.142] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.146] |  :  .  |  :  .  |  Not identical
[10:50:49.147] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.147] readImmediateCondition() ...
[10:50:49.147]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.147]  - Number of RDS files: 0
[10:50:49.148] readImmediateCondition() ... DONE
[10:50:49.135] MulticoreFuture:
[10:50:49.135] Label: ‘future_.mapply-1’
[10:50:49.135] Expression:
[10:50:49.135] {
[10:50:49.135]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.135]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.135]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.135]         on.exit(options(oopts), add = TRUE)
[10:50:49.135]     }
[10:50:49.135]     {
[10:50:49.135]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.135]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.135]         do.call(mapply, args = args)
[10:50:49.135]     }
[10:50:49.135] }
[10:50:49.135] Lazy evaluation: FALSE
[10:50:49.135] Asynchronous evaluation: TRUE
[10:50:49.135] Local evaluation: TRUE
[10:50:49.135] Environment: R_GlobalEnv
[10:50:49.135] Capture standard output: TRUE
[10:50:49.135] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.135] Immediate condition classes: ‘immediateCondition’
[10:50:49.135] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.135] Packages: <none>
[10:50:49.135] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.135] Resolved: FALSE
[10:50:49.135] Value: <not collected>
[10:50:49.135] Conditions captured: <none>
[10:50:49.135] Early signaling: FALSE
[10:50:49.135] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.135] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.148] Chunk #1 of 2 ... DONE
[10:50:49.148] Chunk #2 of 2 ...
[10:50:49.149]  - Finding globals in '...' for chunk #2 ...
[10:50:49.149] getGlobalsAndPackages() ...
[10:50:49.149] |  Searching for globals ...
[10:50:49.149] |  :  globals found: [0] 
[10:50:49.150] |  Searching for globals ... DONE
[10:50:49.150] |  globals: [0] <none>
[10:50:49.150] |  packages: [0] <none>
[10:50:49.150] getGlobalsAndPackages() ... done
[10:50:49.150]    + additional globals found: [n=0] 
[10:50:49.150]    + additional namespaces needed: [n=0] 
[10:50:49.150]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:49.150]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.150]  - seeds: <none>
[10:50:49.151]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.151] getGlobalsAndPackages() ...
[10:50:49.151] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.151] |  Resolving globals: FALSE
[10:50:49.151] |  Search for packages associated with the globals ...
[10:50:49.151] |  :  Packages associated with globals: [0] 
[10:50:49.152] |  :  Packages: [0] 
[10:50:49.152] |  Search for packages associated with the globals ... DONE
[10:50:49.152] |  Packages after dropping 'base': [0] 
[10:50:49.152] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.152] |  packages: [0] 
[10:50:49.153] getGlobalsAndPackages() ... done
[10:50:49.153] run() for Future (‘Future’) ...
[10:50:49.153] |  state: ‘created’
[10:50:49.153] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.153] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.153] |  Using MulticoreFutureBackend ...
[10:50:49.154] |  :  Launching futures ...
[10:50:49.154] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.154] |  :  .  |  getFutureData() ...
[10:50:49.154] |  :  .  |  :  getFutureCore() ...
[10:50:49.154] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.154] |  :  .  |  :  getFutureCore() ... done
[10:50:49.154] |  :  .  |  :  getFutureCapture() ...
[10:50:49.155] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.155] |  :  .  |  :  getFutureContext() ...
[10:50:49.155] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.155] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.155] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.155] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.155] |  :  .  |  :  getFutureContext() ... done
[10:50:49.156] |  :  .  |  getFutureData() ... done
[10:50:49.156] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.156] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.147] |  :  .  |  :  .  |  :  List of 2
[10:50:49.147] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.147] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.147] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.147] |  :  .  |  :  .  |  :      ...)  
[10:50:49.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.147] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.147] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.147] |  :  .  |  :  .  |  :      ...)  
[10:50:49.147] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.157] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.158] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.158] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.158] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.158] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.158] |  :  .  |  :  .  List of future strategies:
[10:50:49.158] |  :  .  |  :  .  1. sequential:
[10:50:49.158] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.158] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.158] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.159] |  :  .  |  MulticoreFuture started
[10:50:49.159] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.159] |  :  Launching futures ... done
[10:50:49.159] |  :  .  |  attachPackages() ...
[10:50:49.160] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.160] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.160] |  Using MulticoreFutureBackend ... done
[10:50:49.160] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.160] |  :  .  |  attachPackages() ... DONE
[10:50:49.161] Created future:
[10:50:49.161] |  :  .  |  attachPackages() ...
[10:50:49.161] |  :  .  |  :  packages: [n=0] 
[10:50:49.161] |  :  .  |  attachPackages() ... DONE
[10:50:49.159] |  :  .  |  :  .  List of 1
[10:50:49.159] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.159] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.159] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.159] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.159] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.159] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.159] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.162] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.162] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.162] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.162] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’,[10:50:49.162] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
 ‘future’, ‘function’
[10:50:49.163] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.163] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.163] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.163] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.163] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.163] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.163] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.163] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.163] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.164] |  :  .  |  assign_globals() ...
[10:50:49.164] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.164] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.164] |  :  .  |  :  .  |  New stack:
[10:50:49.164] |  :  .  |  List of 5
[10:50:49.164] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.164] |  :  .  |   $ MoreArgs                 : list()
[10:50:49.164] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.164] |  :  .  |    ..$ :List of 2
[10:50:49.164] |  :  .  |    .. ..$ : chr "A"
[10:50:49.164] |  :  .  |    .. ..$ : chr "B"
[10:50:49.164] |  :  .  |    ..$ :List of 2
[10:50:49.164] |  :  .  |    .. ..$ : int 5
[10:50:49.164] |  :  .  |    .. ..$ : int 4
[10:50:49.164] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.164] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.164] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.164] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.164] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.164] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.164] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.164] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.164] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.164] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.164] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.164] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.172] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.173] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.164] |  :  .  |  :  .  |  List of 1
[10:50:49.164] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.164] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.164] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.164] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.164] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.164] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.164] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.173] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.173] |  :  .  |  :  .  |  Old stack:
[10:50:49.173] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.173] readImmediateCondition() ...
[10:50:49.173] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.173] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.173]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.173] |  :  .  |  assign_globals() ... done
[10:50:49.174]  - Number of RDS files: 0
[10:50:49.174] readImmediateCondition() ... DONE
[10:50:49.161] MulticoreFuture:
[10:50:49.161] Label: ‘future_.mapply-2’
[10:50:49.161] Expression:
[10:50:49.161] {
[10:50:49.161]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.161]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.161]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.161]         on.exit(options(oopts), add = TRUE)
[10:50:49.161]     }
[10:50:49.161]     {
[10:50:49.161]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.161]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.161]         do.call(mapply, args = args)
[10:50:49.161]     }
[10:50:49.161] }
[10:50:49.161] Lazy evaluation: FALSE
[10:50:49.161] Asynchronous evaluation: TRUE
[10:50:49.161] Local evaluation: TRUE
[10:50:49.161] Environment: R_GlobalEnv
[10:50:49.161] Capture standard output: TRUE
[10:50:49.161] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.161] Immediate condition classes: ‘immediateCondition’
[10:50:49.161] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.161] Packages: <none>
[10:50:49.161] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.161] Resolved: FALSE
[10:50:49.161] Value: <not collected>
[10:50:49.161] Conditions captured: <none>
[10:50:49.161] Early signaling: FALSE
[10:50:49.161] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.161] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.174] Chunk #2 of 2 ... DONE
[10:50:49.175] Launching 2 futures (chunks) ... DONE
[10:50:49.175] Resolving 2 futures (chunks) ...
[10:50:49.175] value() on list ...
[10:50:49.175] |  recursive: 0
[10:50:49.176] |  length: 2
[10:50:49.176] |  
[10:50:49.176] |  Number of remaining objects: 2
[10:50:49.176] |  checking value #1 ...
[10:50:49.176] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.176] |  :  'obj' is MulticoreFuture
[10:50:49.176] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.177] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.177] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.177] |  :  .  |  :  .  |  :  New stack:
[10:50:49.173] |  :  .  |  :  .  |  List of 1
[10:50:49.173] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.173] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.173] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.173] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.173] |  :  .  |  :  .  |      ...)  
[10:50:49.173] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.173] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.173] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.173] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.173] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.173] |  :  .  |  :  .  |      ...)  
[10:50:49.173] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.173] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.179] |  :  .  |  :  .  |  Not identical
[10:50:49.179] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.177] |  :  .  |  :  .  |  :  List of 1
[10:50:49.177] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.177] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.177] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.177] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.177] |  :  .  |  :  .  |  :      ...)  
[10:50:49.177] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.177] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.177] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.177] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.177] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.177] |  :  .  |  :  .  |  :      ...)  
[10:50:49.177] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.177] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.182] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.179] |  :  .  |  :  .  |  :  List of 2
[10:50:49.179] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.179] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.179] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.179] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.179] |  :  .  |  :  .  |  :      ...)  
[10:50:49.179] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.179] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.179] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.179] |  :  .  |  :  .  |  :      ...)  
[10:50:49.179] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.182] |  :  .  |  :  .  |  :  List of 1
[10:50:49.182] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.182] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.182] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.182] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.182] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.182] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.182] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.185] |  :  .  |  :  .  |  :  Not identical
[10:50:49.186] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.186] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.186] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.186] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.186] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.187] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.187] |  :  readImmediateCondition() ...
[10:50:49.187] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.187] |  :   - Number of RDS files: 0
[10:50:49.187] |  :  readImmediateCondition() ... DONE
[10:50:49.188] |  checking value #1 ... done
[10:50:49.187] |  :  .  |  :  .  List of future strategies:
[10:50:49.187] |  :  .  |  :  .  1. sequential:
[10:50:49.187] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.187] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.187] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.188] |  checking value #2 ...
[10:50:49.188] |  :  'obj' is MulticoreFuture
[10:50:49.188] |  :  .  |  :  .  List of 1
[10:50:49.188] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.188] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.188] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.188] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.188] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.188] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.188] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.191] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.191] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.192] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.192] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.192] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.192] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.186] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.186] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.186] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.186] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.186] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.186] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.186] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.186] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.186] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.186] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.186] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.192] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.193] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.193] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.193] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.193] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.193] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.193] |  :  .  |  assign_globals() ...
[10:50:49.193] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.193] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.194] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.194] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.194] |  :  .  |  :  .  |  1. multicore:
[10:50:49.194] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.194] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.194] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.194] |  :  .  |  :  .  |  List of 1
[10:50:49.194] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.194] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.194] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.194] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.194] |  :  .  |  :  .  |      ...)  
[10:50:49.194] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.194] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.194] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.194] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.194] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.194] |  :  .  |  :  .  |      ...)  
[10:50:49.194] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.194] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.198] |  :  readImmediateCondition() ...
[10:50:49.198] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.198] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.199] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.199] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.199] |  :   - Number of RDS files: 0
[10:50:49.199] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.199] |  :  readImmediateCondition() ... DONE
[10:50:49.199] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.199] |  checking value #2 ... done
[10:50:49.199] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.199] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.200] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.200] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.193] |  :  .  |  List of 5
[10:50:49.193] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.193] |  :  .  |   $ MoreArgs                 : list()
[10:50:49.193] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.193] |  :  .  |    ..$ :List of 3
[10:50:49.193] |  :  .  |    .. ..$ : chr "C"
[10:50:49.193] |  :  .  |    .. ..$ : chr "D"
[10:50:49.193] |  :  .  |    .. ..$ : chr "E"
[10:50:49.193] |  :  .  |    ..$ :List of 3
[10:50:49.193] |  :  .  |    .. ..$ : int 3
[10:50:49.193] |  :  .  |    .. ..$ : int 2
[10:50:49.193] |  :  .  |    .. ..$ : int 1
[10:50:49.193] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.193] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.193] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.193] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.193] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.193] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.193] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.193] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.193] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.193] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.193] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.193] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.204] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.204] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.205] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.205] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.205] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.205] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.205] |  :  .  |  assign_globals() ... done
[10:50:49.208] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.209] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.209] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.209] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.209] |  :  .  |  :  .  |  :  New stack:
[10:50:49.209] |  Number of remaining objects: 2
[10:50:49.210] |  checking value #1 ...
[10:50:49.214] |  :  'obj' is MulticoreFuture
[10:50:49.214] |  :  readImmediateCondition() ...
[10:50:49.214] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.215] |  :   - Number of RDS files: 0
[10:50:49.215] |  :  readImmediateCondition() ... DONE
[10:50:49.215] |  :  MulticoreFuture #1
[10:50:49.215] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.215] |  :  .  nx: 2
[10:50:49.216] |  :  .  relay: TRUE
[10:50:49.216] |  :  .  stdout: TRUE
[10:50:49.216] |  :  .  signal: TRUE
[10:50:49.216] |  :  .  resignal: FALSE
[10:50:49.209] |  :  .  |  :  .  |  :  List of 1
[10:50:49.209] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.209] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.209] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.209] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.209] |  :  .  |  :  .  |  :      ...)  
[10:50:49.209] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.209] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.209] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.209] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.209] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.209] |  :  .  |  :  .  |  :      ...)  
[10:50:49.209] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.209] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.216] |  :  .  force: TRUE
[10:50:49.216] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.216] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:49.217] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:49.217] |  :  .  until=1
[10:50:49.217] |  :  .  relaying element #1
[10:50:49.217] |  :  .  result() for MulticoreFuture ...
[10:50:49.218] |  :  .  |  readImmediateCondition() ...
[10:50:49.218] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.218] |  :  .  |   - Number of RDS files: 0
[10:50:49.218] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.219] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.219] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.219] |  :  .  result() for MulticoreFuture ... done
[10:50:49.219] |  :  .  result() for MulticoreFuture ...
[10:50:49.219] |  :  .  result() for MulticoreFuture ... done
[10:50:49.219] |  :  .  result() for MulticoreFuture ...
[10:50:49.220] |  :  .  result() for MulticoreFuture ... done
[10:50:49.220] |  :  .  result() for MulticoreFuture ...
[10:50:49.220] |  :  .  result() for MulticoreFuture ... done
[10:50:49.220] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.220] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.220] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.220] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.220] |  :  .  result() for MulticoreFuture ...
[10:50:49.220] |  :  .  result() for MulticoreFuture ... done
[10:50:49.221] |  :  .  result() for MulticoreFuture ...
[10:50:49.221] |  :  .  result() for MulticoreFuture ... done
[10:50:49.221] |  :  .  value: <list>
[10:50:49.221] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.221] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.221] |  :  .  nx: 2
[10:50:49.221] |  :  .  relay: TRUE
[10:50:49.221] |  :  .  stdout: TRUE
[10:50:49.221] |  :  .  signal: TRUE
[10:50:49.216] |  :  .  |  :  .  |  :  List of 1
[10:50:49.216] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.216] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.216] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.216] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.216] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.216] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.216] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.222] |  :  .  resignal: FALSE
[10:50:49.222] |  :  .  force: TRUE
[10:50:49.222] |  :  .  |  :  .  |  :  Not identical
[10:50:49.222] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.222] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.222] |  :  .  until=2
[10:50:49.222] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.222] |  :  .  relaying element #2
[10:50:49.222] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.222] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.222] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.223] |  :  length: 1 (resolved future 1)
[10:50:49.223] |  checking value #1 ... done
[10:50:49.223] |  checking value #2 ...
[10:50:49.223] |  :  'obj' is MulticoreFuture
[10:50:49.222] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.222] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.222] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.222] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.222] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.222] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.222] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.222] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.222] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.222] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.222] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.230] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.230] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.230] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.230] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.230] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.231] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.231] |  :  .  |  :  .  |  1. multicore:
[10:50:49.231] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.231] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.231] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.233] |  :  readImmediateCondition() ...
[10:50:49.233] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.234] |  :   - Number of RDS files: 0
[10:50:49.234] |  :  readImmediateCondition() ... DONE
[10:50:49.234] |  checking value #2 ... done
[10:50:49.231] |  :  .  |  :  .  |  List of 1
[10:50:49.231] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.231] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.231] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.231] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.231] |  :  .  |  :  .  |      ...)  
[10:50:49.231] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.231] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.231] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.231] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.231] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.231] |  :  .  |  :  .  |      ...)  
[10:50:49.231] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.231] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.235] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.236] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.236] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.236] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.236] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.236] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.236] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.237] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.237] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.244] |  Number of remaining objects: 1
[10:50:49.244] |  checking value #2 ...
[10:50:49.244] |  :  'obj' is MulticoreFuture
[10:50:49.244] |  :  readImmediateCondition() ...
[10:50:49.245] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.245] |  :   - Number of RDS files: 0
[10:50:49.245] |  :  readImmediateCondition() ... DONE
[10:50:49.245] |  :  MulticoreFuture #2
[10:50:49.245] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.245] |  :  .  nx: 2
[10:50:49.245] |  :  .  relay: TRUE
[10:50:49.245] |  :  .  stdout: TRUE
[10:50:49.246] |  :  .  signal: TRUE
[10:50:49.246] |  :  .  resignal: FALSE
[10:50:49.246] |  :  .  force: TRUE
[10:50:49.246] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.246] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.246] |  :  .  until=2
[10:50:49.246] |  :  .  relaying element #2
[10:50:49.246] |  :  .  result() for MulticoreFuture ...
[10:50:49.247] |  :  .  |  readImmediateCondition() ...
[10:50:49.247] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.247] |  :  .  |   - Number of RDS files: 0
[10:50:49.247] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.247] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.248] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.248] |  :  .  result() for MulticoreFuture ... done
[10:50:49.248] |  :  .  result() for MulticoreFuture ...
[10:50:49.248] |  :  .  result() for MulticoreFuture ... done
[10:50:49.248] |  :  .  result() for MulticoreFuture ...
[10:50:49.248] |  :  .  result() for MulticoreFuture ... done
[10:50:49.248] |  :  .  result() for MulticoreFuture ...
[10:50:49.248] |  :  .  result() for MulticoreFuture ... done
[10:50:49.249] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.249] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.249] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.249] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.249] |  :  .  result() for MulticoreFuture ...
[10:50:49.249] |  :  .  result() for MulticoreFuture ... done
[10:50:49.249] |  :  .  result() for MulticoreFuture ...
[10:50:49.249] |  :  .  result() for MulticoreFuture ... done
[10:50:49.250] |  :  .  value: <list>
[10:50:49.250] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.250] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.250] |  :  .  nx: 2
[10:50:49.250] |  :  .  relay: TRUE
[10:50:49.250] |  :  .  stdout: TRUE
[10:50:49.250] |  :  .  signal: TRUE
[10:50:49.250] |  :  .  resignal: FALSE
[10:50:49.250] |  :  .  force: TRUE
[10:50:49.250] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.251] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.251] |  :  .  until=2
[10:50:49.251] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.251] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.251] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.251] |  :  length: 0 (resolved future 2)
[10:50:49.252] |  checking value #2 ... done
[10:50:49.252] |  Relaying remaining futures ...
[10:50:49.252] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.252] |  :  .  nx: 2
[10:50:49.252] |  :  .  relay: TRUE
[10:50:49.252] |  :  .  stdout: TRUE
[10:50:49.252] |  :  .  signal: TRUE
[10:50:49.252] |  :  .  resignal: FALSE
[10:50:49.252] |  :  .  force: TRUE
[10:50:49.252] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.253] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:49.253] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.253] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.253] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.253] |  Relaying remaining futures ... done
[10:50:49.253] value() on list ... done
[10:50:49.253]  - Number of value chunks collected: 2
[10:50:49.253] Resolving 2 futures (chunks) ... DONE
[10:50:49.254] Reducing values from 2 chunks ...
[10:50:49.254]  - Number of values collected after concatenation: 5
[10:50:49.254]  - Number of values expected: 5
[10:50:49.254] Reducing values from 2 chunks ... DONE
[10:50:49.254] future_mapply() ... DONE
[10:50:49.254] future_mapply() ...
[10:50:49.255] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.255] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.255] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.255] Number of chunks: 2
[10:50:49.255] Index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:49.256] getGlobalsAndPackagesXApply() ...
[10:50:49.256]  - future.globals: TRUE
[10:50:49.256] getGlobalsAndPackages() ...
[10:50:49.256] |  Searching for globals ...
[10:50:49.258] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:49.258] |  Searching for globals ... DONE
[10:50:49.258] |  Resolving globals: FALSE
[10:50:49.258] |  Search for packages associated with the globals ...
[10:50:49.259] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.259] |  :  Packages: [1] ‘base’
[10:50:49.259] |  Search for packages associated with the globals ... DONE
[10:50:49.259] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:49.260] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:49.260] |  Packages after dropping 'base': [0] 
[10:50:49.260] |  globals: [1] ‘FUN’
[10:50:49.260] |  packages: [0] 
[10:50:49.260] getGlobalsAndPackages() ... done
[10:50:49.260]  - globals found/used: [n=1] ‘FUN’
[10:50:49.260]  - needed namespaces: [n=0] 
[10:50:49.261] Finding globals ... DONE
[10:50:49.261] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.261] List of 2
[10:50:49.261]  $ ...future.FUN:function (C, k)  
[10:50:49.261]  $ MoreArgs     : NULL
[10:50:49.261]  - attr(*, "where")=List of 2
[10:50:49.261]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.261]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.261]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.261]  - attr(*, "resolved")= logi FALSE
[10:50:49.261]  - attr(*, "total_size")= num NA
[10:50:49.265] Packages to be attached in all futures: [n=0] 
[10:50:49.265] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.265] Number of futures (= number of chunks): 2
[10:50:49.265] Launching 2 futures (chunks) ...
[10:50:49.265] Chunk #1 of 2 ...
[10:50:49.265]  - Finding globals in '...' for chunk #1 ...
[10:50:49.265] getGlobalsAndPackages() ...
[10:50:49.266] |  Searching for globals ...
[10:50:49.266] |  :  globals found: [0] 
[10:50:49.266] |  Searching for globals ... DONE
[10:50:49.266] |  globals: [0] <none>
[10:50:49.266] |  packages: [0] <none>
[10:50:49.266] getGlobalsAndPackages() ... done
[10:50:49.267]    + additional globals found: [n=0] 
[10:50:49.267]    + additional namespaces needed: [n=0] 
[10:50:49.267]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.267]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.267]  - seeds: <none>
[10:50:49.267]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.267] getGlobalsAndPackages() ...
[10:50:49.267] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.268] |  Resolving globals: FALSE
[10:50:49.268] |  Search for packages associated with the globals ...
[10:50:49.268] |  :  Packages associated with globals: [0] 
[10:50:49.268] |  :  Packages: [0] 
[10:50:49.268] |  Search for packages associated with the globals ... DONE
[10:50:49.268] |  Packages after dropping 'base': [0] 
[10:50:49.269] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.269] |  packages: [0] 
[10:50:49.269] getGlobalsAndPackages() ... done
[10:50:49.269] run() for Future (‘Future’) ...
[10:50:49.269] |  state: ‘created’
[10:50:49.269] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.270] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.270] |  Using MulticoreFutureBackend ...
[10:50:49.270] |  :  Launching futures ...
[10:50:49.270] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.270] |  :  .  |  getFutureData() ...
[10:50:49.270] |  :  .  |  :  getFutureCore() ...
[10:50:49.270] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.270] |  :  .  |  :  getFutureCore() ... done
[10:50:49.270] |  :  .  |  :  getFutureCapture() ...
[10:50:49.271] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.271] |  :  .  |  :  getFutureContext() ...
[10:50:49.271] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.271] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.271] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.271] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.271] |  :  .  |  :  getFutureContext() ... done
[10:50:49.272] |  :  .  |  getFutureData() ... done
[10:50:49.272] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.272] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.274] |  :  .  |  MulticoreFuture started
[10:50:49.274] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.275] |  :  Launching futures ... done
[10:50:49.275] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.275] |  :  .  |  attachPackages() ...
[10:50:49.275] |  Using MulticoreFutureBackend ... done
[10:50:49.275] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.275] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.275] Created future:
[10:50:49.276] |  :  .  |  attachPackages() ... DONE
[10:50:49.276] |  :  .  |  attachPackages() ...
[10:50:49.276] |  :  .  |  :  packages: [n=0] 
[10:50:49.276] |  :  .  |  attachPackages() ... DONE
[10:50:49.277] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.277] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.277] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.278] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.278] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.278] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.278] |  :  .  |  :  .  |  New stack:
[10:50:49.279] |  :  .  |  :  .  |  List of 1
[10:50:49.279] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.279] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.279] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.279] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.279] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.279] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.279] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.282] |  :  .  |  :  .  |  Old stack:
[10:50:49.283] |  :  .  |  :  .  |  List of 1
[10:50:49.283] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.283] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.283] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.283] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.283] |  :  .  |  :  .  |      ...)  
[10:50:49.283] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.283] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.283] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.283] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.283] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.283] |  :  .  |  :  .  |      ...)  
[10:50:49.283] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.283] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.287] |  :  .  |  :  .  |  Not identical
[10:50:49.287] readImmediateCondition() ...
[10:50:49.287] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.287]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.288]  - Number of RDS files: 0
[10:50:49.288] readImmediateCondition() ... DONE
[10:50:49.276] MulticoreFuture:
[10:50:49.276] Label: ‘future_mapply-1’
[10:50:49.276] Expression:
[10:50:49.276] {
[10:50:49.276]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.276]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.276]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.276]         on.exit(options(oopts), add = TRUE)
[10:50:49.276]     }
[10:50:49.276]     {
[10:50:49.276]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.276]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.276]         do.call(mapply, args = args)
[10:50:49.276]     }
[10:50:49.276] }
[10:50:49.276] Lazy evaluation: FALSE
[10:50:49.276] Asynchronous evaluation: TRUE
[10:50:49.276] Local evaluation: TRUE
[10:50:49.276] Environment: R_GlobalEnv
[10:50:49.276] Capture standard output: TRUE
[10:50:49.276] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.276] Immediate condition classes: ‘immediateCondition’
[10:50:49.276] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.276] Packages: <none>
[10:50:49.276] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.276] Resolved: FALSE
[10:50:49.276] Value: <not collected>
[10:50:49.276] Conditions captured: <none>
[10:50:49.276] Early signaling: FALSE
[10:50:49.276] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.276] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.288] Chunk #1 of 2 ... DONE
[10:50:49.289] Chunk #2 of 2 ...
[10:50:49.289]  - Finding globals in '...' for chunk #2 ...
[10:50:49.289] getGlobalsAndPackages() ...
[10:50:49.289] |  Searching for globals ...
[10:50:49.290] |  :  globals found: [0] 
[10:50:49.290] |  Searching for globals ... DONE
[10:50:49.290] |  globals: [0] <none>
[10:50:49.290] |  packages: [0] <none>
[10:50:49.290] getGlobalsAndPackages() ... done
[10:50:49.290]    + additional globals found: [n=0] 
[10:50:49.290]    + additional namespaces needed: [n=0] 
[10:50:49.291]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:49.291]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.291]  - seeds: <none>
[10:50:49.291]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.291] getGlobalsAndPackages() ...
[10:50:49.291] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.291] |  Resolving globals: FALSE
[10:50:49.291] |  Search for packages associated with the globals ...
[10:50:49.292] |  :  Packages associated with globals: [0] 
[10:50:49.292] |  :  Packages: [0] 
[10:50:49.292] |  Search for packages associated with the globals ... DONE
[10:50:49.292] |  Packages after dropping 'base': [0] 
[10:50:49.293] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.293] |  packages: [0] 
[10:50:49.293] getGlobalsAndPackages() ... done
[10:50:49.293] run() for Future (‘Future’) ...
[10:50:49.293] |  state: ‘created’
[10:50:49.287] |  :  .  |  :  .  |  :  List of 2
[10:50:49.287] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.287] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.287] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.287] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.287] |  :  .  |  :  .  |  :      ...)  
[10:50:49.287] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.287] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.287] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.287] |  :  .  |  :  .  |  :      ...)  
[10:50:49.287] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.294] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.294] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.294] |  Using MulticoreFutureBackend ...
[10:50:49.294] |  :  Launching futures ...
[10:50:49.294] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.294] |  :  .  |  getFutureData() ...
[10:50:49.294] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.294] |  :  .  |  :  getFutureCore() ...
[10:50:49.294] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.295] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.295] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.295] |  :  .  |  :  getFutureCore() ... done
[10:50:49.295] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.295] |  :  .  |  :  getFutureCapture() ...
[10:50:49.295] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.295] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.295] |  :  .  |  :  getFutureContext() ...
[10:50:49.295] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.295] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.295] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.296] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.295] |  :  .  |  :  .  List of future strategies:
[10:50:49.295] |  :  .  |  :  .  1. sequential:
[10:50:49.295] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.295] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.295] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.296] |  :  .  |  :  getFutureContext() ... done
[10:50:49.296] |  :  .  |  getFutureData() ... done
[10:50:49.296] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.297] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.296] |  :  .  |  :  .  List of 1
[10:50:49.296] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.296] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.296] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.296] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.296] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.296] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.296] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.299] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.299] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.299] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.299] |  :  .  |  MulticoreFuture started
[10:50:49.299] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.300] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.299] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.300] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.300] |  :  Launching futures ... done
[10:50:49.300] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.300] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.300] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.300] |  :  .  |  attachPackages() ...
[10:50:49.300] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.300] |  Using MulticoreFutureBackend ... done
[10:50:49.300] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.300] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.301] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.301] |  :  .  |  assign_globals() ...
[10:50:49.301] Created future:
[10:50:49.301] |  :  .  |  attachPackages() ... DONE
[10:50:49.301] |  :  .  |  attachPackages() ...
[10:50:49.301] |  :  .  |  :  packages: [n=0] 
[10:50:49.302] |  :  .  |  attachPackages() ... DONE
[10:50:49.303] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.303] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.304] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.304] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.304] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.305] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.305] |  :  .  |  :  .  |  New stack:
[10:50:49.301] |  :  .  |  List of 5
[10:50:49.301] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.301] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.301] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.301] |  :  .  |    ..$ :List of 2
[10:50:49.301] |  :  .  |    .. ..$ : chr "E"
[10:50:49.301] |  :  .  |    .. ..$ : chr "D"
[10:50:49.301] |  :  .  |    ..$ :List of 2
[10:50:49.301] |  :  .  |    .. ..$ : int 1
[10:50:49.301] |  :  .  |    .. ..$ : int 2
[10:50:49.301] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.301] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.301] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.301] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.301] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.301] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.301] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.301] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.301] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.301] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.301] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.301] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.305] |  :  .  |  :  .  |  List of 1
[10:50:49.305] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.305] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.305] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.305] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.305] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.305] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.305] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.309] |  :  .  |  :  .  |  Old stack:
[10:50:49.309] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.309] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.309] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.309] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.310] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.310] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.310] |  :  .  |  assign_globals() ... done
[10:50:49.313] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.313] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.313] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.313] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.313] |  :  .  |  :  .  |  :  New stack:
[10:50:49.313] readImmediateCondition() ...
[10:50:49.314]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.309] |  :  .  |  :  .  |  List of 1
[10:50:49.309] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.309] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.309] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.309] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.309] |  :  .  |  :  .  |      ...)  
[10:50:49.309] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.309] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.309] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.309] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.309] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.309] |  :  .  |  :  .  |      ...)  
[10:50:49.309] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.309] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.314] |  :  .  |  :  .  |  Not identical
[10:50:49.314]  - Number of RDS files: 0
[10:50:49.314] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.314] readImmediateCondition() ... DONE
[10:50:49.301] MulticoreFuture:
[10:50:49.301] Label: ‘future_mapply-2’
[10:50:49.301] Expression:
[10:50:49.301] {
[10:50:49.301]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.301]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.301]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.301]         on.exit(options(oopts), add = TRUE)
[10:50:49.301]     }
[10:50:49.301]     {
[10:50:49.301]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.301]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.301]         do.call(mapply, args = args)
[10:50:49.301]     }
[10:50:49.301] }
[10:50:49.301] Lazy evaluation: FALSE
[10:50:49.301] Asynchronous evaluation: TRUE
[10:50:49.301] Local evaluation: TRUE
[10:50:49.301] Environment: R_GlobalEnv
[10:50:49.301] Capture standard output: TRUE
[10:50:49.301] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.301] Immediate condition classes: ‘immediateCondition’
[10:50:49.301] Globals: 5 objects totaling 905 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.301] Packages: <none>
[10:50:49.301] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.301] Resolved: FALSE
[10:50:49.301] Value: <not collected>
[10:50:49.301] Conditions captured: <none>
[10:50:49.301] Early signaling: FALSE
[10:50:49.301] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.301] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.315] Chunk #2 of 2 ... DONE
[10:50:49.315] Launching 2 futures (chunks) ... DONE
[10:50:49.315] Resolving 2 futures (chunks) ...
[10:50:49.316] value() on list ...
[10:50:49.316] |  recursive: 0
[10:50:49.316] |  length: 2
[10:50:49.316] |  
[10:50:49.316] |  Number of remaining objects: 2
[10:50:49.317] |  checking value #1 ...
[10:50:49.317] |  :  'obj' is MulticoreFuture
[10:50:49.313] |  :  .  |  :  .  |  :  List of 1
[10:50:49.313] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.313] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.313] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.313] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.313] |  :  .  |  :  .  |  :      ...)  
[10:50:49.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.313] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.313] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.313] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.313] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.313] |  :  .  |  :  .  |  :      ...)  
[10:50:49.313] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.313] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.318] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.318] |  :  .  |  :  .  |  :  List of 1
[10:50:49.318] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.318] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.318] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.318] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.318] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.318] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.318] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.321] |  :  .  |  :  .  |  :  Not identical
[10:50:49.321] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.314] |  :  .  |  :  .  |  :  List of 2
[10:50:49.314] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.314] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.314] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.314] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.314] |  :  .  |  :  .  |  :      ...)  
[10:50:49.314] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.314] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.314] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.314] |  :  .  |  :  .  |  :      ...)  
[10:50:49.314] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.322] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.322] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.323] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.323] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.323] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.323] |  :  .  |  :  .  List of future strategies:
[10:50:49.323] |  :  .  |  :  .  1. sequential:
[10:50:49.323] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.323] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.323] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.321] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.321] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.321] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.321] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.321] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.321] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.321] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.321] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.321] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.321] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.321] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.324] |  :  .  |  :  .  List of 1
[10:50:49.324] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.324] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.324] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.324] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.324] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.324] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.324] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.327] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.327] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.327] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.327] |  :  readImmediateCondition() ...
[10:50:49.327] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.327] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.327] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.327] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.328] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.328] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.328] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.328] |  :   - Number of RDS files: 0
[10:50:49.328] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.328] |  :  readImmediateCondition() ... DONE
[10:50:49.328] |  checking value #1 ... done
[10:50:49.328] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.328] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.328] |  :  .  |  :  .  |  1. multicore:
[10:50:49.328] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.328] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.328] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.328] |  checking value #2 ...
[10:50:49.328] |  :  'obj' is MulticoreFuture
[10:50:49.328] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.329] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.329] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.329] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.329] |  :  .  |  assign_globals() ...
[10:50:49.328] |  :  .  |  :  .  |  List of 1
[10:50:49.328] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.328] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.328] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.328] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.328] |  :  .  |  :  .  |      ...)  
[10:50:49.328] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.328] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.328] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.328] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.328] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.328] |  :  .  |  :  .  |      ...)  
[10:50:49.328] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.328] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.332] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.333] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.333] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.333] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.333] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.333] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.333] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.334] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.334] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.329] |  :  .  |  List of 5
[10:50:49.329] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.329] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.329] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.329] |  :  .  |    ..$ :List of 3
[10:50:49.329] |  :  .  |    .. ..$ : chr "C"
[10:50:49.329] |  :  .  |    .. ..$ : chr "B"
[10:50:49.329] |  :  .  |    .. ..$ : chr "A"
[10:50:49.329] |  :  .  |    ..$ :List of 3
[10:50:49.329] |  :  .  |    .. ..$ : int 3
[10:50:49.329] |  :  .  |    .. ..$ : int 4
[10:50:49.329] |  :  .  |    .. ..$ : int 5
[10:50:49.329] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.329] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.329] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.329] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.329] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.329] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.329] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.329] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.329] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.329] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.329] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.329] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.339] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.339] |  :  readImmediateCondition() ...
[10:50:49.339] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.339] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.339] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.339] |  :   - Number of RDS files: 0
[10:50:49.339] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.339] |  :  readImmediateCondition() ... DONE
[10:50:49.339] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.340] |  checking value #2 ... done
[10:50:49.340] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.340] |  :  .  |  assign_globals() ... done
[10:50:49.343] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.343] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.343] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.343] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.344] |  :  .  |  :  .  |  :  New stack:
[10:50:49.344] |  :  .  |  :  .  |  :  List of 1
[10:50:49.344] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.344] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.344] |  :  .  |  :  .  |  :      ...)  
[10:50:49.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.344] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.344] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.344] |  :  .  |  :  .  |  :      ...)  
[10:50:49.344] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.344] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.348] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.350] |  Number of remaining objects: 2
[10:50:49.350] |  checking value #1 ...
[10:50:49.350] |  :  'obj' is MulticoreFuture
[10:50:49.351] |  :  readImmediateCondition() ...
[10:50:49.351] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.351] |  :   - Number of RDS files: 0
[10:50:49.351] |  :  readImmediateCondition() ... DONE
[10:50:49.351] |  :  MulticoreFuture #1
[10:50:49.348] |  :  .  |  :  .  |  :  List of 1
[10:50:49.348] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.348] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.348] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.348] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.348] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.348] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.348] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.352] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.352] |  :  .  |  :  .  |  :  Not identical
[10:50:49.352] |  :  .  nx: 2
[10:50:49.352] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.352] |  :  .  relay: TRUE
[10:50:49.352] |  :  .  stdout: TRUE
[10:50:49.352] |  :  .  signal: TRUE
[10:50:49.353] |  :  .  resignal: FALSE
[10:50:49.353] |  :  .  force: TRUE
[10:50:49.353] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:49.353] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:49.353] |  :  .  until=1
[10:50:49.353] |  :  .  relaying element #1
[10:50:49.354] |  :  .  result() for MulticoreFuture ...
[10:50:49.355] |  :  .  |  readImmediateCondition() ...
[10:50:49.355] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.355] |  :  .  |   - Number of RDS files: 0
[10:50:49.355] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.356] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.356] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.356] |  :  .  result() for MulticoreFuture ... done
[10:50:49.356] |  :  .  result() for MulticoreFuture ...
[10:50:49.357] |  :  .  result() for MulticoreFuture ... done
[10:50:49.357] |  :  .  result() for MulticoreFuture ...
[10:50:49.357] |  :  .  result() for MulticoreFuture ... done
[10:50:49.357] |  :  .  result() for MulticoreFuture ...
[10:50:49.358] |  :  .  result() for MulticoreFuture ... done
[10:50:49.358] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.358] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.358] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.358] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.359] |  :  .  result() for MulticoreFuture ...
[10:50:49.359] |  :  .  result() for MulticoreFuture ... done
[10:50:49.359] |  :  .  result() for MulticoreFuture ...
[10:50:49.359] |  :  .  result() for MulticoreFuture ... done
[10:50:49.359] |  :  .  value: <list>
[10:50:49.360] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.360] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.360] |  :  .  nx: 2
[10:50:49.360] |  :  .  relay: TRUE
[10:50:49.360] |  :  .  stdout: TRUE
[10:50:49.361] |  :  .  signal: TRUE
[10:50:49.361] |  :  .  resignal: FALSE
[10:50:49.361] |  :  .  force: TRUE
[10:50:49.361] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.361] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.352] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.352] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.352] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.352] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.352] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.352] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.352] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.352] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.352] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.352] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.352] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.361] |  :  .  until=2
[10:50:49.362] |  :  .  relaying element #2
[10:50:49.362] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.362] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.362] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.362] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.362] |  :  length: 1 (resolved future 1)
[10:50:49.363] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.363] |  checking value #1 ... done
[10:50:49.363] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.363] |  checking value #2 ...
[10:50:49.363] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.363] |  :  'obj' is MulticoreFuture
[10:50:49.363] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.363] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.363] |  :  .  |  :  .  |  1. multicore:
[10:50:49.363] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.363] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.363] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.373] |  :  readImmediateCondition() ...
[10:50:49.364] |  :  .  |  :  .  |  List of 1
[10:50:49.364] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.364] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.364] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.364] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.364] |  :  .  |  :  .  |      ...)  
[10:50:49.364] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.364] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.364] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.364] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.364] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.364] |  :  .  |  :  .  |      ...)  
[10:50:49.364] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.364] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.374] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.374] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.374] |  :   - Number of RDS files: 0
[10:50:49.374] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.374] |  :  readImmediateCondition() ... DONE
[10:50:49.374] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.374] |  checking value #2 ... done
[10:50:49.374] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.375] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.375] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.375] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.375] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.375] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.384] |  Number of remaining objects: 1
[10:50:49.385] |  checking value #2 ...
[10:50:49.385] |  :  'obj' is MulticoreFuture
[10:50:49.385] |  :  readImmediateCondition() ...
[10:50:49.385] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.385] |  :   - Number of RDS files: 0
[10:50:49.385] |  :  readImmediateCondition() ... DONE
[10:50:49.385] |  :  MulticoreFuture #2
[10:50:49.386] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.386] |  :  .  nx: 2
[10:50:49.386] |  :  .  relay: TRUE
[10:50:49.386] |  :  .  stdout: TRUE
[10:50:49.386] |  :  .  signal: TRUE
[10:50:49.386] |  :  .  resignal: FALSE
[10:50:49.386] |  :  .  force: TRUE
[10:50:49.386] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.386] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.387] |  :  .  until=2
[10:50:49.387] |  :  .  relaying element #2
[10:50:49.387] |  :  .  result() for MulticoreFuture ...
[10:50:49.387] |  :  .  |  readImmediateCondition() ...
[10:50:49.387] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.388] |  :  .  |   - Number of RDS files: 0
[10:50:49.388] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.388] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.388] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.388] |  :  .  result() for MulticoreFuture ... done
[10:50:49.389] |  :  .  result() for MulticoreFuture ...
[10:50:49.389] |  :  .  result() for MulticoreFuture ... done
[10:50:49.389] |  :  .  result() for MulticoreFuture ...
[10:50:49.389] |  :  .  result() for MulticoreFuture ... done
[10:50:49.389] |  :  .  result() for MulticoreFuture ...
[10:50:49.389] |  :  .  result() for MulticoreFuture ... done
[10:50:49.390] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.390] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.390] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.390] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.390] |  :  .  result() for MulticoreFuture ...
[10:50:49.390] |  :  .  result() for MulticoreFuture ... done
[10:50:49.391] |  :  .  result() for MulticoreFuture ...
[10:50:49.391] |  :  .  result() for MulticoreFuture ... done
[10:50:49.391] |  :  .  value: <list>
[10:50:49.391] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.391] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.391] |  :  .  nx: 2
[10:50:49.392] |  :  .  relay: TRUE
[10:50:49.392] |  :  .  stdout: TRUE
[10:50:49.392] |  :  .  signal: TRUE
[10:50:49.392] |  :  .  resignal: FALSE
[10:50:49.392] |  :  .  force: TRUE
[10:50:49.392] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.392] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.393] |  :  .  until=2
[10:50:49.393] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.393] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.393] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.393] |  :  length: 0 (resolved future 2)
[10:50:49.393] |  checking value #2 ... done
[10:50:49.394] |  Relaying remaining futures ...
[10:50:49.394] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.394] |  :  .  nx: 2
[10:50:49.394] |  :  .  relay: TRUE
[10:50:49.394] |  :  .  stdout: TRUE
[10:50:49.394] |  :  .  signal: TRUE
[10:50:49.394] |  :  .  resignal: FALSE
[10:50:49.394] |  :  .  force: TRUE
[10:50:49.394] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.394] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:49.395] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.395] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.395] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.395] |  Relaying remaining futures ... done
[10:50:49.395] value() on list ... done
[10:50:49.395]  - Number of value chunks collected: 2
[10:50:49.395] Resolving 2 futures (chunks) ... DONE
[10:50:49.395] Reducing values from 2 chunks ...
[10:50:49.396]  - Number of values collected after concatenation: 5
[10:50:49.396]  - Number of values expected: 5
[10:50:49.396] Reverse index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:49.396] Reducing values from 2 chunks ... DONE
[10:50:49.396] future_mapply() ... DONE
[10:50:49.396] future_mapply() ...
[10:50:49.397] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.397] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.397] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.397] Number of chunks: 2
[10:50:49.398] getGlobalsAndPackagesXApply() ...
[10:50:49.398]  - future.globals: TRUE
[10:50:49.398] getGlobalsAndPackages() ...
[10:50:49.398] |  Searching for globals ...
[10:50:49.400] |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:49.400] |  Searching for globals ... DONE
[10:50:49.400] |  Resolving globals: FALSE
[10:50:49.400] |  Search for packages associated with the globals ...
[10:50:49.401] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.401] |  :  Packages: [1] ‘base’
[10:50:49.401] |  Search for packages associated with the globals ... DONE
[10:50:49.401] |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:49.402] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:49.402] |  Packages after dropping 'base': [0] 
[10:50:49.402] |  globals: [1] ‘FUN’
[10:50:49.402] |  packages: [0] 
[10:50:49.402] getGlobalsAndPackages() ... done
[10:50:49.402]  - globals found/used: [n=1] ‘FUN’
[10:50:49.402]  - needed namespaces: [n=0] 
[10:50:49.403] Finding globals ... DONE
[10:50:49.403] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.403] List of 2
[10:50:49.403]  $ ...future.FUN:function (C, k)  
[10:50:49.403]  $ MoreArgs     : list()
[10:50:49.403]  - attr(*, "where")=List of 2
[10:50:49.403]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.403]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.403]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.403]  - attr(*, "resolved")= logi FALSE
[10:50:49.403]  - attr(*, "total_size")= num NA
[10:50:49.406] Packages to be attached in all futures: [n=0] 
[10:50:49.406] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.406] Number of futures (= number of chunks): 2
[10:50:49.407] Launching 2 futures (chunks) ...
[10:50:49.407] Chunk #1 of 2 ...
[10:50:49.407]  - Finding globals in '...' for chunk #1 ...
[10:50:49.407] getGlobalsAndPackages() ...
[10:50:49.407] |  Searching for globals ...
[10:50:49.408] |  :  globals found: [0] 
[10:50:49.408] |  Searching for globals ... DONE
[10:50:49.408] |  globals: [0] <none>
[10:50:49.408] |  packages: [0] <none>
[10:50:49.408] getGlobalsAndPackages() ... done
[10:50:49.408]    + additional globals found: [n=0] 
[10:50:49.408]    + additional namespaces needed: [n=0] 
[10:50:49.408]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.408]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.409]  - seeds: <none>
[10:50:49.409]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.409] getGlobalsAndPackages() ...
[10:50:49.409] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.409] |  Resolving globals: FALSE
[10:50:49.409] |  Search for packages associated with the globals ...
[10:50:49.409] |  :  Packages associated with globals: [0] 
[10:50:49.410] |  :  Packages: [0] 
[10:50:49.410] |  Search for packages associated with the globals ... DONE
[10:50:49.410] |  Packages after dropping 'base': [0] 
[10:50:49.410] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.410] |  packages: [0] 
[10:50:49.410] getGlobalsAndPackages() ... done
[10:50:49.411] run() for Future (‘Future’) ...
[10:50:49.411] |  state: ‘created’
[10:50:49.411] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.411] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.411] |  Using MulticoreFutureBackend ...
[10:50:49.411] |  :  Launching futures ...
[10:50:49.411] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.411] |  :  .  |  getFutureData() ...
[10:50:49.412] |  :  .  |  :  getFutureCore() ...
[10:50:49.412] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.412] |  :  .  |  :  getFutureCore() ... done
[10:50:49.412] |  :  .  |  :  getFutureCapture() ...
[10:50:49.412] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.412] |  :  .  |  :  getFutureContext() ...
[10:50:49.412] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.412] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.413] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.413] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.413] |  :  .  |  :  getFutureContext() ... done
[10:50:49.413] |  :  .  |  getFutureData() ... done
[10:50:49.413] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.413] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.415] |  :  .  |  MulticoreFuture started
[10:50:49.416] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.416] |  :  Launching futures ... done
[10:50:49.416] |  :  .  |  attachPackages() ...
[10:50:49.416] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.416] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.416] |  Using MulticoreFutureBackend ... done
[10:50:49.416] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.417] |  :  .  |  attachPackages() ... DONE
[10:50:49.417] Created future:
[10:50:49.417] |  :  .  |  attachPackages() ...
[10:50:49.417] |  :  .  |  :  packages: [n=0] 
[10:50:49.417] |  :  .  |  attachPackages() ... DONE
[10:50:49.418] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.418] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.418] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.419] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.419] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.419] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.420] |  :  .  |  :  .  |  New stack:
[10:50:49.420] |  :  .  |  :  .  |  List of 1
[10:50:49.420] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.420] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.420] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.420] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.420] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.420] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.420] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.423] |  :  .  |  :  .  |  Old stack:
[10:50:49.428] readImmediateCondition() ...
[10:50:49.429]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.429]  - Number of RDS files: 0
[10:50:49.429] readImmediateCondition() ... DONE
[10:50:49.417] MulticoreFuture:
[10:50:49.417] Label: ‘future_.mapply-1’
[10:50:49.417] Expression:
[10:50:49.417] {
[10:50:49.417]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.417]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.417]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.417]         on.exit(options(oopts), add = TRUE)
[10:50:49.417]     }
[10:50:49.417]     {
[10:50:49.417]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.417]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.417]         do.call(mapply, args = args)
[10:50:49.417]     }
[10:50:49.417] }
[10:50:49.417] Lazy evaluation: FALSE
[10:50:49.417] Asynchronous evaluation: TRUE
[10:50:49.417] Local evaluation: TRUE
[10:50:49.417] Environment: R_GlobalEnv
[10:50:49.417] Capture standard output: TRUE
[10:50:49.417] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.417] Immediate condition classes: ‘immediateCondition’
[10:50:49.417] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.417] Packages: <none>
[10:50:49.417] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.417] Resolved: FALSE
[10:50:49.417] Value: <not collected>
[10:50:49.417] Conditions captured: <none>
[10:50:49.417] Early signaling: FALSE
[10:50:49.417] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.417] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.430] Chunk #1 of 2 ... DONE
[10:50:49.430] Chunk #2 of 2 ...
[10:50:49.430]  - Finding globals in '...' for chunk #2 ...
[10:50:49.430] getGlobalsAndPackages() ...
[10:50:49.430] |  Searching for globals ...
[10:50:49.431] |  :  globals found: [0] 
[10:50:49.431] |  Searching for globals ... DONE
[10:50:49.431] |  globals: [0] <none>
[10:50:49.431] |  packages: [0] <none>
[10:50:49.431] getGlobalsAndPackages() ... done
[10:50:49.432]    + additional globals found: [n=0] 
[10:50:49.432]    + additional namespaces needed: [n=0] 
[10:50:49.432]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:49.432]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.432]  - seeds: <none>
[10:50:49.432]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.432] getGlobalsAndPackages() ...
[10:50:49.432] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.432] |  Resolving globals: FALSE
[10:50:49.433] |  Search for packages associated with the globals ...
[10:50:49.433] |  :  Packages associated with globals: [0] 
[10:50:49.433] |  :  Packages: [0] 
[10:50:49.433] |  Search for packages associated with the globals ... DONE
[10:50:49.434] |  Packages after dropping 'base': [0] 
[10:50:49.434] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.434] |  packages: [0] 
[10:50:49.434] getGlobalsAndPackages() ... done
[10:50:49.434] run() for Future (‘Future’) ...
[10:50:49.435] |  state: ‘created’
[10:50:49.435] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.435] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.435] |  Using MulticoreFutureBackend ...
[10:50:49.435] |  :  Launching futures ...
[10:50:49.435] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.435] |  :  .  |  getFutureData() ...
[10:50:49.423] |  :  .  |  :  .  |  List of 1
[10:50:49.423] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.423] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.423] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.423] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.423] |  :  .  |  :  .  |      ...)  
[10:50:49.423] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.423] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.423] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.423] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.423] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.423] |  :  .  |  :  .  |      ...)  
[10:50:49.423] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.423] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.436] |  :  .  |  :  getFutureCore() ...
[10:50:49.436] |  :  .  |  :  .  |  Not identical
[10:50:49.436] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.436] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.436] |  :  .  |  :  getFutureCore() ... done
[10:50:49.436] |  :  .  |  :  getFutureCapture() ...
[10:50:49.436] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.436] |  :  .  |  :  getFutureContext() ...
[10:50:49.436] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.436] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.437] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.437] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.437] |  :  .  |  :  getFutureContext() ... done
[10:50:49.441] |  :  .  |  getFutureData() ... done
[10:50:49.436] |  :  .  |  :  .  |  :  List of 2
[10:50:49.436] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.436] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.436] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.436] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.436] |  :  .  |  :  .  |  :      ...)  
[10:50:49.436] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.436] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.436] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.436] |  :  .  |  :  .  |  :      ...)  
[10:50:49.436] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.442] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.442] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.442] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.442] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.442] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.443] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.443] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.443] |  :  .  |  :  .  List of future strategies:
[10:50:49.443] |  :  .  |  :  .  1. sequential:
[10:50:49.443] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.443] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.443] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.445] |  :  .  |  MulticoreFuture started
[10:50:49.445] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.446] |  :  Launching futures ... done
[10:50:49.446] |  :  .  |  attachPackages() ...
[10:50:49.446] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.446] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.446] |  Using MulticoreFutureBackend ... done
[10:50:49.443] |  :  .  |  :  .  List of 1
[10:50:49.443] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.443] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.443] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.443] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.443] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.443] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.443] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.447] |  :  .  |  attachPackages() ... DONE
[10:50:49.447] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.447] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.447] |  :  .  |  attachPackages() ...
[10:50:49.447] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.447] Created future:
[10:50:49.447] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.447] |  :  .  |  :  packages: [n=0] 
[10:50:49.447] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.447] |  :  .  |  attachPackages() ... DONE
[10:50:49.447] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.448] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.448] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.448] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.448] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.448] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.449] |  :  .  |  assign_globals() ...
[10:50:49.449] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.449] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.449] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.450] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.450] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.450] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.451] |  :  .  |  :  .  |  New stack:
[10:50:49.451] |  :  .  |  :  .  |  List of 1
[10:50:49.451] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.451] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.451] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.451] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.451] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.451] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.451] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.455] |  :  .  |  :  .  |  Old stack:
[10:50:49.449] |  :  .  |  List of 5
[10:50:49.449] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.449] |  :  .  |   $ MoreArgs                 : list()
[10:50:49.449] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.449] |  :  .  |    ..$ :List of 2
[10:50:49.449] |  :  .  |    .. ..$ : chr "A"
[10:50:49.449] |  :  .  |    .. ..$ : chr "B"
[10:50:49.449] |  :  .  |    ..$ :List of 2
[10:50:49.449] |  :  .  |    .. ..$ : int 5
[10:50:49.449] |  :  .  |    .. ..$ : int 4
[10:50:49.449] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.449] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.449] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.449] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.449] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.449] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.449] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.449] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.449] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.449] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.449] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.449] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.458] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.458] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.458] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.458] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.458] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.458] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.459] |  :  .  |  assign_globals() ... done
[10:50:49.459] readImmediateCondition() ...
[10:50:49.455] |  :  .  |  :  .  |  List of 1
[10:50:49.455] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.455] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.455] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.455] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.455] |  :  .  |  :  .  |      ...)  
[10:50:49.455] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.455] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.455] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.455] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.455] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.455] |  :  .  |  :  .  |      ...)  
[10:50:49.455] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.455] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.460] |  :  .  |  :  .  |  Not identical
[10:50:49.460]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.460] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.460]  - Number of RDS files: 0
[10:50:49.460] readImmediateCondition() ... DONE
[10:50:49.447] MulticoreFuture:
[10:50:49.447] Label: ‘future_.mapply-2’
[10:50:49.447] Expression:
[10:50:49.447] {
[10:50:49.447]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.447]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.447]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.447]         on.exit(options(oopts), add = TRUE)
[10:50:49.447]     }
[10:50:49.447]     {
[10:50:49.447]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.447]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.447]         do.call(mapply, args = args)
[10:50:49.447]     }
[10:50:49.447] }
[10:50:49.447] Lazy evaluation: FALSE
[10:50:49.447] Asynchronous evaluation: TRUE
[10:50:49.447] Local evaluation: TRUE
[10:50:49.447] Environment: R_GlobalEnv
[10:50:49.447] Capture standard output: TRUE
[10:50:49.447] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.447] Immediate condition classes: ‘immediateCondition’
[10:50:49.447] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.447] Packages: <none>
[10:50:49.447] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.447] Resolved: FALSE
[10:50:49.447] Value: <not collected>
[10:50:49.447] Conditions captured: <none>
[10:50:49.447] Early signaling: FALSE
[10:50:49.447] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.447] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.461] Chunk #2 of 2 ... DONE
[10:50:49.461] Launching 2 futures (chunks) ... DONE
[10:50:49.461] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.462] Resolving 2 futures (chunks) ...
[10:50:49.462] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.462] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.462] value() on list ...
[10:50:49.462] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.462] |  recursive: 0
[10:50:49.462] |  :  .  |  :  .  |  :  New stack:
[10:50:49.462] |  length: 2
[10:50:49.462] |  
[10:50:49.463] |  Number of remaining objects: 2
[10:50:49.463] |  checking value #1 ...
[10:50:49.463] |  :  'obj' is MulticoreFuture
[10:50:49.462] |  :  .  |  :  .  |  :  List of 1
[10:50:49.462] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.462] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.462] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.462] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.462] |  :  .  |  :  .  |  :      ...)  
[10:50:49.462] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.462] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.462] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.462] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.462] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.462] |  :  .  |  :  .  |  :      ...)  
[10:50:49.462] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.462] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.467] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.460] |  :  .  |  :  .  |  :  List of 2
[10:50:49.460] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.460] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.460] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.460] |  :  .  |  :  .  |  :      ...)  
[10:50:49.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.460] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.460] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.460] |  :  .  |  :  .  |  :      ...)  
[10:50:49.460] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.469] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.469] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.469] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.469] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.469] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.469] |  :  .  |  :  .  List of future strategies:
[10:50:49.469] |  :  .  |  :  .  1. sequential:
[10:50:49.469] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.469] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.469] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.467] |  :  .  |  :  .  |  :  List of 1
[10:50:49.467] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.467] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.467] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.467] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.467] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.467] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.467] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.470] |  :  .  |  :  .  |  :  Not identical
[10:50:49.470] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.473] |  :  readImmediateCondition() ...
[10:50:49.474] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.474] |  :   - Number of RDS files: 0
[10:50:49.470] |  :  .  |  :  .  List of 1
[10:50:49.470] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.470] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.470] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.470] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.470] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.470] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.470] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.474] |  :  readImmediateCondition() ... DONE
[10:50:49.474] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.474] |  checking value #1 ... done
[10:50:49.475] |  checking value #2 ...
[10:50:49.475] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.475] |  :  'obj' is MulticoreFuture
[10:50:49.475] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.475] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.475] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.476] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.476] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.476] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.476] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.476] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.471] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.471] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.471] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.471] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.471] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.471] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.471] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.471] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.471] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.471] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.471] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.477] |  :  .  |  assign_globals() ...
[10:50:49.477] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.477] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.478] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.478] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.478] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.478] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.478] |  :  .  |  :  .  |  1. multicore:
[10:50:49.478] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.478] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.478] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.478] |  :  .  |  :  .  |  List of 1
[10:50:49.478] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.478] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.478] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.478] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.478] |  :  .  |  :  .  |      ...)  
[10:50:49.478] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.478] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.478] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.478] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.478] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.478] |  :  .  |  :  .  |      ...)  
[10:50:49.478] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.478] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.482] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.483] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.483] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.483] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.483] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.483] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.484] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.484] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.484] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.485] |  :  readImmediateCondition() ...
[10:50:49.485] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.486] |  :   - Number of RDS files: 0
[10:50:49.486] |  :  readImmediateCondition() ... DONE
[10:50:49.486] |  checking value #2 ... done
[10:50:49.477] |  :  .  |  List of 5
[10:50:49.477] |  :  .  |   $ ...future.FUN            :function (C, k)  
[10:50:49.477] |  :  .  |   $ MoreArgs                 : list()
[10:50:49.477] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:49.477] |  :  .  |    ..$ :List of 3
[10:50:49.477] |  :  .  |    .. ..$ : chr "C"
[10:50:49.477] |  :  .  |    .. ..$ : chr "D"
[10:50:49.477] |  :  .  |    .. ..$ : chr "E"
[10:50:49.477] |  :  .  |    ..$ :List of 3
[10:50:49.477] |  :  .  |    .. ..$ : int 3
[10:50:49.477] |  :  .  |    .. ..$ : int 2
[10:50:49.477] |  :  .  |    .. ..$ : int 1
[10:50:49.477] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.477] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.477] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.477] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.477] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.477] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.477] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.477] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.477] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.477] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.477] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.477] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.488] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.488] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.489] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.489] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.489] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.489] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.489] |  :  .  |  assign_globals() ... done
[10:50:49.492] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.493] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.493] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.493] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.493] |  :  .  |  :  .  |  :  New stack:
[10:50:49.496] |  Number of remaining objects: 2
[10:50:49.497] |  checking value #1 ...
[10:50:49.497] |  :  'obj' is MulticoreFuture
[10:50:49.497] |  :  readImmediateCondition() ...
[10:50:49.497] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.497] |  :   - Number of RDS files: 0
[10:50:49.498] |  :  readImmediateCondition() ... DONE
[10:50:49.498] |  :  MulticoreFuture #1
[10:50:49.498] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.498] |  :  .  nx: 2
[10:50:49.493] |  :  .  |  :  .  |  :  List of 1
[10:50:49.493] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.493] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.493] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.493] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.493] |  :  .  |  :  .  |  :      ...)  
[10:50:49.493] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.493] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.493] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.493] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.493] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.493] |  :  .  |  :  .  |  :      ...)  
[10:50:49.493] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.493] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.498] |  :  .  relay: TRUE
[10:50:49.499] |  :  .  stdout: TRUE
[10:50:49.499] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.499] |  :  .  signal: TRUE
[10:50:49.499] |  :  .  resignal: FALSE
[10:50:49.499] |  :  .  force: TRUE
[10:50:49.499] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:49.499] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:49.500] |  :  .  until=1
[10:50:49.500] |  :  .  relaying element #1
[10:50:49.500] |  :  .  result() for MulticoreFuture ...
[10:50:49.501] |  :  .  |  readImmediateCondition() ...
[10:50:49.501] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.501] |  :  .  |   - Number of RDS files: 0
[10:50:49.502] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.502] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.502] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.502] |  :  .  result() for MulticoreFuture ... done
[10:50:49.503] |  :  .  result() for MulticoreFuture ...
[10:50:49.503] |  :  .  result() for MulticoreFuture ... done
[10:50:49.503] |  :  .  result() for MulticoreFuture ...
[10:50:49.503] |  :  .  result() for MulticoreFuture ... done
[10:50:49.499] |  :  .  |  :  .  |  :  List of 1
[10:50:49.499] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.499] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.499] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.499] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.499] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.499] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.499] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.504] |  :  .  result() for MulticoreFuture ...
[10:50:49.504] |  :  .  |  :  .  |  :  Not identical
[10:50:49.504] |  :  .  result() for MulticoreFuture ... done
[10:50:49.504] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.504] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.504] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.504] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.505] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.505] |  :  .  result() for MulticoreFuture ...
[10:50:49.505] |  :  .  result() for MulticoreFuture ... done
[10:50:49.505] |  :  .  result() for MulticoreFuture ...
[10:50:49.505] |  :  .  result() for MulticoreFuture ... done
[10:50:49.506] |  :  .  value: <list>
[10:50:49.506] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.506] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.506] |  :  .  nx: 2
[10:50:49.506] |  :  .  relay: TRUE
[10:50:49.507] |  :  .  stdout: TRUE
[10:50:49.507] |  :  .  signal: TRUE
[10:50:49.507] |  :  .  resignal: FALSE
[10:50:49.507] |  :  .  force: TRUE
[10:50:49.507] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.507] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.508] |  :  .  until=2
[10:50:49.508] |  :  .  relaying element #2
[10:50:49.508] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.508] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.508] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.509] |  :  length: 1 (resolved future 1)
[10:50:49.509] |  checking value #1 ... done
[10:50:49.509] |  checking value #2 ...
[10:50:49.509] |  :  'obj' is MulticoreFuture
[10:50:49.504] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.504] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.504] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.504] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.504] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.504] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.504] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.504] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.504] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.504] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.504] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.513] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.513] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.513] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.513] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.513] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.514] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.514] |  :  .  |  :  .  |  1. multicore:
[10:50:49.514] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.514] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.514] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.514] |  :  .  |  :  .  |  List of 1
[10:50:49.514] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.514] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.514] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.514] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.514] |  :  .  |  :  .  |      ...)  
[10:50:49.514] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.514] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.514] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.514] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.514] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.514] |  :  .  |  :  .  |      ...)  
[10:50:49.514] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.514] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.518] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.519] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.519] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.519] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.519] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.519] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.519] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.520] |  :  readImmediateCondition() ...
[10:50:49.520] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.520] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.520] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.520] |  :   - Number of RDS files: 0
[10:50:49.520] |  :  readImmediateCondition() ... DONE
[10:50:49.520] |  checking value #2 ... done
[10:50:49.531] |  Number of remaining objects: 1
[10:50:49.531] |  checking value #2 ...
[10:50:49.531] |  :  'obj' is MulticoreFuture
[10:50:49.531] |  :  readImmediateCondition() ...
[10:50:49.531] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.531] |  :   - Number of RDS files: 0
[10:50:49.531] |  :  readImmediateCondition() ... DONE
[10:50:49.532] |  :  MulticoreFuture #2
[10:50:49.532] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.532] |  :  .  nx: 2
[10:50:49.532] |  :  .  relay: TRUE
[10:50:49.532] |  :  .  stdout: TRUE
[10:50:49.532] |  :  .  signal: TRUE
[10:50:49.532] |  :  .  resignal: FALSE
[10:50:49.532] |  :  .  force: TRUE
[10:50:49.532] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.533] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.533] |  :  .  until=2
[10:50:49.533] |  :  .  relaying element #2
[10:50:49.533] |  :  .  result() for MulticoreFuture ...
[10:50:49.533] |  :  .  |  readImmediateCondition() ...
[10:50:49.534] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.534] |  :  .  |   - Number of RDS files: 0
[10:50:49.534] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.534] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.535] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.535] |  :  .  result() for MulticoreFuture ... done
[10:50:49.535] |  :  .  result() for MulticoreFuture ...
[10:50:49.535] |  :  .  result() for MulticoreFuture ... done
[10:50:49.535] |  :  .  result() for MulticoreFuture ...
[10:50:49.535] |  :  .  result() for MulticoreFuture ... done
[10:50:49.536] |  :  .  result() for MulticoreFuture ...
[10:50:49.536] |  :  .  result() for MulticoreFuture ... done
[10:50:49.536] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.536] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.536] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.536] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.537] |  :  .  result() for MulticoreFuture ...
[10:50:49.537] |  :  .  result() for MulticoreFuture ... done
[10:50:49.537] |  :  .  result() for MulticoreFuture ...
[10:50:49.537] |  :  .  result() for MulticoreFuture ... done
[10:50:49.537] |  :  .  value: <list>
[10:50:49.538] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.538] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.538] |  :  .  nx: 2
[10:50:49.538] |  :  .  relay: TRUE
[10:50:49.538] |  :  .  stdout: TRUE
[10:50:49.538] |  :  .  signal: TRUE
[10:50:49.538] |  :  .  resignal: FALSE
[10:50:49.539] |  :  .  force: TRUE
[10:50:49.539] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.539] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.539] |  :  .  until=2
[10:50:49.539] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.539] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.540] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.540] |  :  length: 0 (resolved future 2)
[10:50:49.540] |  checking value #2 ... done
[10:50:49.540] |  Relaying remaining futures ...
[10:50:49.540] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.540] |  :  .  nx: 2
[10:50:49.540] |  :  .  relay: TRUE
[10:50:49.541] |  :  .  stdout: TRUE
[10:50:49.541] |  :  .  signal: TRUE
[10:50:49.541] |  :  .  resignal: FALSE
[10:50:49.541] |  :  .  force: TRUE
[10:50:49.541] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.541] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:49.541] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.541] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.541] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.542] |  Relaying remaining futures ... done
[10:50:49.542] value() on list ... done
[10:50:49.542]  - Number of value chunks collected: 2
[10:50:49.542] Resolving 2 futures (chunks) ... DONE
[10:50:49.542] Reducing values from 2 chunks ...
[10:50:49.542]  - Number of values collected after concatenation: 5
[10:50:49.542]  - Number of values expected: 5
[10:50:49.542] Reducing values from 2 chunks ... DONE
[10:50:49.543] future_mapply() ... DONE
- Subsetting (Issue #17) ...
[10:50:49.543] future_mapply() ...
[10:50:49.543] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.543] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.544] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.544] Number of chunks: 1
[10:50:49.544] getGlobalsAndPackagesXApply() ...
[10:50:49.544]  - future.globals: TRUE
[10:50:49.544] getGlobalsAndPackages() ...
[10:50:49.544] |  Searching for globals ...
[10:50:49.546] |  :  globals found: [1] ‘FUN’
[10:50:49.546] |  Searching for globals ... DONE
[10:50:49.546] |  Resolving globals: FALSE
[10:50:49.546] |  Search for packages associated with the globals ...
[10:50:49.547] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.547] |  :  Packages: [1] ‘base’
[10:50:49.547] |  Search for packages associated with the globals ... DONE
[10:50:49.547] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:49.548] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:49.548] |  Packages after dropping 'base': [0] 
[10:50:49.548] |  globals: [1] ‘FUN’
[10:50:49.548] |  packages: [0] 
[10:50:49.548] getGlobalsAndPackages() ... done
[10:50:49.548]  - globals found/used: [n=1] ‘FUN’
[10:50:49.548]  - needed namespaces: [n=0] 
[10:50:49.548] Finding globals ... DONE
[10:50:49.549] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.549] List of 2
[10:50:49.549]  $ ...future.FUN:function (x)  
[10:50:49.549]  $ MoreArgs     : NULL
[10:50:49.549]  - attr(*, "where")=List of 2
[10:50:49.549]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.549]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.549]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.549]  - attr(*, "resolved")= logi FALSE
[10:50:49.549]  - attr(*, "total_size")= num NA
[10:50:49.552] Packages to be attached in all futures: [n=0] 
[10:50:49.552] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.553] Number of futures (= number of chunks): 1
[10:50:49.553] Launching 1 futures (chunks) ...
[10:50:49.553] Chunk #1 of 1 ...
[10:50:49.553]  - Finding globals in '...' for chunk #1 ...
[10:50:49.553] getGlobalsAndPackages() ...
[10:50:49.553] |  Searching for globals ...
[10:50:49.554] |  :  globals found: [0] 
[10:50:49.554] |  Searching for globals ... DONE
[10:50:49.554] |  globals: [0] <none>
[10:50:49.554] |  packages: [0] <none>
[10:50:49.554] getGlobalsAndPackages() ... done
[10:50:49.554]    + additional globals found: [n=0] 
[10:50:49.554]    + additional namespaces needed: [n=0] 
[10:50:49.554]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.555]  - seeds: <none>
[10:50:49.555]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.555] getGlobalsAndPackages() ...
[10:50:49.555] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.555] |  Resolving globals: FALSE
[10:50:49.555] |  Search for packages associated with the globals ...
[10:50:49.555] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.556] |  :  Packages: [1] ‘base’
[10:50:49.556] |  Search for packages associated with the globals ... DONE
[10:50:49.556] |  Packages after dropping 'base': [0] 
[10:50:49.556] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.556] |  packages: [0] 
[10:50:49.556] getGlobalsAndPackages() ... done
[10:50:49.557] run() for Future (‘Future’) ...
[10:50:49.557] |  state: ‘created’
[10:50:49.557] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.557] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.557] |  Using MulticoreFutureBackend ...
[10:50:49.557] |  :  Launching futures ...
[10:50:49.557] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.557] |  :  .  |  getFutureData() ...
[10:50:49.558] |  :  .  |  :  getFutureCore() ...
[10:50:49.558] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.558] |  :  .  |  :  getFutureCore() ... done
[10:50:49.558] |  :  .  |  :  getFutureCapture() ...
[10:50:49.558] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.558] |  :  .  |  :  getFutureContext() ...
[10:50:49.558] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.558] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.559] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.559] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.559] |  :  .  |  :  getFutureContext() ... done
[10:50:49.559] |  :  .  |  getFutureData() ... done
[10:50:49.559] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.559] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.561] |  :  .  |  MulticoreFuture started
[10:50:49.562] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.562] |  :  Launching futures ... done
[10:50:49.562] |  :  .  |  attachPackages() ...
[10:50:49.562] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.562] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.562] |  Using MulticoreFutureBackend ... done
[10:50:49.563] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.563] Created future:
[10:50:49.563] |  :  .  |  attachPackages() ... DONE
[10:50:49.563] |  :  .  |  attachPackages() ...
[10:50:49.563] |  :  .  |  :  packages: [n=0] 
[10:50:49.563] |  :  .  |  attachPackages() ... DONE
[10:50:49.564] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.564] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.565] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.565] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.565] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.566] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.566] |  :  .  |  :  .  |  New stack:
[10:50:49.566] |  :  .  |  :  .  |  List of 1
[10:50:49.566] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.566] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.566] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.566] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.566] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.566] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.566] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.570] |  :  .  |  :  .  |  Old stack:
[10:50:49.570] |  :  .  |  :  .  |  List of 1
[10:50:49.570] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.570] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.570] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.570] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.570] |  :  .  |  :  .  |      ...)  
[10:50:49.570] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.570] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.570] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.570] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.570] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.570] |  :  .  |  :  .  |      ...)  
[10:50:49.570] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.570] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.575] readImmediateCondition() ...
[10:50:49.575] |  :  .  |  :  .  |  Not identical
[10:50:49.575] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.575]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.575]  - Number of RDS files: 0
[10:50:49.575] readImmediateCondition() ... DONE
[10:50:49.563] MulticoreFuture:
[10:50:49.563] Label: ‘future_mapply-1’
[10:50:49.563] Expression:
[10:50:49.563] {
[10:50:49.563]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.563]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.563]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.563]         on.exit(options(oopts), add = TRUE)
[10:50:49.563]     }
[10:50:49.563]     {
[10:50:49.563]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.563]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.563]         do.call(mapply, args = args)
[10:50:49.563]     }
[10:50:49.563] }
[10:50:49.563] Lazy evaluation: FALSE
[10:50:49.563] Asynchronous evaluation: TRUE
[10:50:49.563] Local evaluation: TRUE
[10:50:49.563] Environment: R_GlobalEnv
[10:50:49.563] Capture standard output: TRUE
[10:50:49.563] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.563] Immediate condition classes: ‘immediateCondition’
[10:50:49.563] Globals: 5 objects totaling 366 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.563] Packages: <none>
[10:50:49.563] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.563] Resolved: FALSE
[10:50:49.563] Value: <not collected>
[10:50:49.563] Conditions captured: <none>
[10:50:49.563] Early signaling: FALSE
[10:50:49.563] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.563] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.576] Chunk #1 of 1 ... DONE
[10:50:49.576] Launching 1 futures (chunks) ... DONE
[10:50:49.576] Resolving 1 futures (chunks) ...
[10:50:49.576] value() on list ...
[10:50:49.576] |  recursive: 0
[10:50:49.577] |  length: 1
[10:50:49.577] |  
[10:50:49.577] |  Number of remaining objects: 1
[10:50:49.577] |  checking value #1 ...
[10:50:49.577] |  :  'obj' is MulticoreFuture
[10:50:49.575] |  :  .  |  :  .  |  :  List of 2
[10:50:49.575] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.575] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.575] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.575] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.575] |  :  .  |  :  .  |  :      ...)  
[10:50:49.575] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.575] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.575] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.575] |  :  .  |  :  .  |  :      ...)  
[10:50:49.575] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.582] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.582] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.582] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.582] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.582] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.582] |  :  .  |  :  .  List of future strategies:
[10:50:49.582] |  :  .  |  :  .  1. sequential:
[10:50:49.582] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.582] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.582] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.583] |  :  .  |  :  .  List of 1
[10:50:49.583] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.583] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.583] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.583] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.583] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.583] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.583] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.586] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.586] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.586] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.587] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.587] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.587] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.587] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.587] |  :  readImmediateCondition() ...
[10:50:49.587] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.587] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.587] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.588] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.588] |  :   - Number of RDS files: 0
[10:50:49.588] |  :  readImmediateCondition() ... DONE
[10:50:49.588] |  :  .  |  assign_globals() ...
[10:50:49.588] |  checking value #1 ... done
[10:50:49.588] |  :  .  |  List of 5
[10:50:49.588] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:49.588] |  :  .  |   $ MoreArgs                 : NULL
[10:50:49.588] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.588] |  :  .  |    ..$ :List of 1
[10:50:49.588] |  :  .  |    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:49.588] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.588] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.588] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.588] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.588] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.588] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.588] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.588] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.588] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.588] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.588] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.588] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.595] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.595] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.595] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.595] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.595] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.595] |  :  .  |  assign_globals() ... done
[10:50:49.598] |  Number of remaining objects: 1
[10:50:49.598] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.598] |  checking value #1 ...
[10:50:49.598] |  :  'obj' is MulticoreFuture
[10:50:49.598] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.599] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.599] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.599] |  :  .  |  :  .  |  :  New stack:
[10:50:49.599] |  :  .  |  :  .  |  :  List of 1
[10:50:49.599] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.599] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.599] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.599] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.599] |  :  .  |  :  .  |  :      ...)  
[10:50:49.599] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.599] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.599] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.599] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.599] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.599] |  :  .  |  :  .  |  :      ...)  
[10:50:49.599] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.599] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.603] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.603] |  :  .  |  :  .  |  :  List of 1
[10:50:49.603] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.603] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.603] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.603] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.603] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.603] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.603] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.607] |  :  .  |  :  .  |  :  Not identical
[10:50:49.607] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.609] |  :  readImmediateCondition() ...
[10:50:49.609] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.609] |  :   - Number of RDS files: 0
[10:50:49.609] |  :  readImmediateCondition() ... DONE
[10:50:49.609] |  checking value #1 ... done
[10:50:49.607] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.607] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.607] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.607] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.607] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.607] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.607] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.607] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.607] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.607] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.607] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.615] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.615] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.615] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.615] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.615] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.615] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.615] |  :  .  |  :  .  |  1. multicore:
[10:50:49.615] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.615] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.615] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.620] |  Number of remaining objects: 1
[10:50:49.620] |  checking value #1 ...
[10:50:49.620] |  :  'obj' is MulticoreFuture
[10:50:49.616] |  :  .  |  :  .  |  List of 1
[10:50:49.616] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.616] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.616] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.616] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.616] |  :  .  |  :  .  |      ...)  
[10:50:49.616] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.616] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.616] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.616] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.616] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.616] |  :  .  |  :  .  |      ...)  
[10:50:49.616] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.616] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.621] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.621] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.621] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.621] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.621] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.622] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.622] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.622] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.622] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.622] |  :  readImmediateCondition() ...
[10:50:49.623] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.623] |  :   - Number of RDS files: 0
[10:50:49.623] |  :  readImmediateCondition() ... DONE
[10:50:49.623] |  :  MulticoreFuture #1
[10:50:49.623] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.623] |  :  .  nx: 1
[10:50:49.624] |  :  .  relay: TRUE
[10:50:49.624] |  :  .  stdout: TRUE
[10:50:49.624] |  :  .  signal: TRUE
[10:50:49.624] |  :  .  resignal: FALSE
[10:50:49.624] |  :  .  force: TRUE
[10:50:49.624] |  :  .  relayed: [n=1] FALSE
[10:50:49.624] |  :  .  queued futures: [n=1] FALSE
[10:50:49.624] |  :  .  until=1
[10:50:49.624] |  :  .  relaying element #1
[10:50:49.625] |  :  .  result() for MulticoreFuture ...
[10:50:49.625] |  :  .  |  readImmediateCondition() ...
[10:50:49.625] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.626] |  :  .  |   - Number of RDS files: 0
[10:50:49.626] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.626] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.626] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.626] |  :  .  result() for MulticoreFuture ... done
[10:50:49.626] |  :  .  result() for MulticoreFuture ...
[10:50:49.627] |  :  .  result() for MulticoreFuture ... done
[10:50:49.627] |  :  .  result() for MulticoreFuture ...
[10:50:49.627] |  :  .  result() for MulticoreFuture ... done
[10:50:49.627] |  :  .  result() for MulticoreFuture ...
[10:50:49.627] |  :  .  result() for MulticoreFuture ... done
[10:50:49.627] |  :  .  relayed: [n=1] TRUE
[10:50:49.627] |  :  .  queued futures: [n=1] TRUE
[10:50:49.627] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.628] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.628] |  :  .  result() for MulticoreFuture ...
[10:50:49.628] |  :  .  result() for MulticoreFuture ... done
[10:50:49.628] |  :  .  result() for MulticoreFuture ...
[10:50:49.628] |  :  .  result() for MulticoreFuture ... done
[10:50:49.628] |  :  .  value: <list>
[10:50:49.628] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.628] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.629] |  :  .  nx: 1
[10:50:49.629] |  :  .  relay: TRUE
[10:50:49.629] |  :  .  stdout: TRUE
[10:50:49.629] |  :  .  signal: TRUE
[10:50:49.629] |  :  .  resignal: FALSE
[10:50:49.629] |  :  .  force: TRUE
[10:50:49.629] |  :  .  relayed: [n=1] TRUE
[10:50:49.629] |  :  .  queued futures: [n=1] TRUE
[10:50:49.629] |  :  .  until=1
[10:50:49.630] |  :  .  relayed: [n=1] TRUE
[10:50:49.630] |  :  .  queued futures: [n=1] TRUE
[10:50:49.630] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.630] |  :  length: 0 (resolved future 1)
[10:50:49.630] |  checking value #1 ... done
[10:50:49.630] |  Relaying remaining futures ...
[10:50:49.630] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.630] |  :  .  nx: 1
[10:50:49.631] |  :  .  relay: TRUE
[10:50:49.631] |  :  .  stdout: TRUE
[10:50:49.631] |  :  .  signal: TRUE
[10:50:49.631] |  :  .  resignal: FALSE
[10:50:49.631] |  :  .  force: TRUE
[10:50:49.631] |  :  .  relayed: [n=1] TRUE
[10:50:49.631] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:49.631] |  :  .  relayed: [n=1] TRUE
[10:50:49.631] |  :  .  queued futures: [n=1] TRUE
[10:50:49.631] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.632] |  Relaying remaining futures ... done
[10:50:49.632] value() on list ... done
[10:50:49.632]  - Number of value chunks collected: 1
[10:50:49.632] Resolving 1 futures (chunks) ... DONE
[10:50:49.632] Reducing values from 1 chunks ...
[10:50:49.632]  - Number of values collected after concatenation: 1
[10:50:49.632]  - Number of values expected: 1
[10:50:49.632] Reducing values from 1 chunks ... DONE
[10:50:49.632] future_mapply() ... DONE
[10:50:49.633] future_mapply() ...
[10:50:49.633] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.633] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.633] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.633] Number of chunks: 1
[10:50:49.634] getGlobalsAndPackagesXApply() ...
[10:50:49.634]  - future.globals: TRUE
[10:50:49.634] getGlobalsAndPackages() ...
[10:50:49.634] |  Searching for globals ...
[10:50:49.635] |  :  globals found: [1] ‘FUN’
[10:50:49.636] |  Searching for globals ... DONE
[10:50:49.636] |  Resolving globals: FALSE
[10:50:49.636] |  Search for packages associated with the globals ...
[10:50:49.636] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.636] |  :  Packages: [1] ‘base’
[10:50:49.636] |  Search for packages associated with the globals ... DONE
[10:50:49.637] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:49.637] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:49.637] |  Packages after dropping 'base': [0] 
[10:50:49.637] |  globals: [1] ‘FUN’
[10:50:49.637] |  packages: [0] 
[10:50:49.638] getGlobalsAndPackages() ... done
[10:50:49.638]  - globals found/used: [n=1] ‘FUN’
[10:50:49.638]  - needed namespaces: [n=0] 
[10:50:49.638] Finding globals ... DONE
[10:50:49.638] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.638] List of 2
[10:50:49.638]  $ ...future.FUN:function (x)  
[10:50:49.638]  $ MoreArgs     : list()
[10:50:49.638]  - attr(*, "where")=List of 2
[10:50:49.638]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.638]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.638]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.638]  - attr(*, "resolved")= logi FALSE
[10:50:49.638]  - attr(*, "total_size")= num NA
[10:50:49.642] Packages to be attached in all futures: [n=0] 
[10:50:49.642] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.642] Number of futures (= number of chunks): 1
[10:50:49.642] Launching 1 futures (chunks) ...
[10:50:49.642] Chunk #1 of 1 ...
[10:50:49.642]  - Finding globals in '...' for chunk #1 ...
[10:50:49.642] getGlobalsAndPackages() ...
[10:50:49.643] |  Searching for globals ...
[10:50:49.643] |  :  globals found: [0] 
[10:50:49.643] |  Searching for globals ... DONE
[10:50:49.643] |  globals: [0] <none>
[10:50:49.643] |  packages: [0] <none>
[10:50:49.643] getGlobalsAndPackages() ... done
[10:50:49.644]    + additional globals found: [n=0] 
[10:50:49.644]    + additional namespaces needed: [n=0] 
[10:50:49.644]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.644]  - seeds: <none>
[10:50:49.644]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.644] getGlobalsAndPackages() ...
[10:50:49.644] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.644] |  Resolving globals: FALSE
[10:50:49.644] |  Search for packages associated with the globals ...
[10:50:49.645] |  :  Packages associated with globals: [1] ‘base’
[10:50:49.645] |  :  Packages: [1] ‘base’
[10:50:49.645] |  Search for packages associated with the globals ... DONE
[10:50:49.645] |  Packages after dropping 'base': [0] 
[10:50:49.645] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.646] |  packages: [0] 
[10:50:49.646] getGlobalsAndPackages() ... done
[10:50:49.646] run() for Future (‘Future’) ...
[10:50:49.646] |  state: ‘created’
[10:50:49.646] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.646] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.646] |  Using MulticoreFutureBackend ...
[10:50:49.647] |  :  Launching futures ...
[10:50:49.647] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.647] |  :  .  |  getFutureData() ...
[10:50:49.647] |  :  .  |  :  getFutureCore() ...
[10:50:49.647] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.647] |  :  .  |  :  getFutureCore() ... done
[10:50:49.647] |  :  .  |  :  getFutureCapture() ...
[10:50:49.647] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.648] |  :  .  |  :  getFutureContext() ...
[10:50:49.648] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.648] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.648] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.648] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.648] |  :  .  |  :  getFutureContext() ... done
[10:50:49.648] |  :  .  |  getFutureData() ... done
[10:50:49.649] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.649] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.651] |  :  .  |  MulticoreFuture started
[10:50:49.651] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.651] |  :  Launching futures ... done
[10:50:49.651] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.652] |  Using MulticoreFutureBackend ... done
[10:50:49.652] |  :  .  |  attachPackages() ...
[10:50:49.652] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.652] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.652] Created future:
[10:50:49.652] |  :  .  |  attachPackages() ... DONE
[10:50:49.652] |  :  .  |  attachPackages() ...
[10:50:49.653] |  :  .  |  :  packages: [n=0] 
[10:50:49.653] |  :  .  |  attachPackages() ... DONE
[10:50:49.654] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.654] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.654] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.654] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.655] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.655] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.655] |  :  .  |  :  .  |  New stack:
[10:50:49.655] |  :  .  |  :  .  |  List of 1
[10:50:49.655] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.655] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.655] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.655] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.655] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.655] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.655] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.659] |  :  .  |  :  .  |  Old stack:
[10:50:49.659] |  :  .  |  :  .  |  List of 1
[10:50:49.659] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.659] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.659] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.659] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.659] |  :  .  |  :  .  |      ...)  
[10:50:49.659] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.659] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.659] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.659] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.659] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.659] |  :  .  |  :  .  |      ...)  
[10:50:49.659] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.659] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.663] |  :  .  |  :  .  |  Not identical
[10:50:49.663] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.664] readImmediateCondition() ...
[10:50:49.664]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.664]  - Number of RDS files: 0
[10:50:49.664] readImmediateCondition() ... DONE
[10:50:49.652] MulticoreFuture:
[10:50:49.652] Label: ‘future_.mapply-1’
[10:50:49.652] Expression:
[10:50:49.652] {
[10:50:49.652]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.652]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.652]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.652]         on.exit(options(oopts), add = TRUE)
[10:50:49.652]     }
[10:50:49.652]     {
[10:50:49.652]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.652]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.652]         do.call(mapply, args = args)
[10:50:49.652]     }
[10:50:49.652] }
[10:50:49.652] Lazy evaluation: FALSE
[10:50:49.652] Asynchronous evaluation: TRUE
[10:50:49.652] Local evaluation: TRUE
[10:50:49.652] Environment: R_GlobalEnv
[10:50:49.652] Capture standard output: TRUE
[10:50:49.652] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.652] Immediate condition classes: ‘immediateCondition’
[10:50:49.652] Globals: 5 objects totaling 370 bytes (function ‘...future.FUN’ of 185 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.652] Packages: <none>
[10:50:49.652] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.652] Resolved: FALSE
[10:50:49.652] Value: <not collected>
[10:50:49.652] Conditions captured: <none>
[10:50:49.652] Early signaling: FALSE
[10:50:49.652] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.652] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.665] Chunk #1 of 1 ... DONE
[10:50:49.665] Launching 1 futures (chunks) ... DONE
[10:50:49.665] Resolving 1 futures (chunks) ...
[10:50:49.665] value() on list ...
[10:50:49.665] |  recursive: 0
[10:50:49.665] |  length: 1
[10:50:49.666] |  
[10:50:49.666] |  Number of remaining objects: 1
[10:50:49.666] |  checking value #1 ...
[10:50:49.666] |  :  'obj' is MulticoreFuture
[10:50:49.664] |  :  .  |  :  .  |  :  List of 2
[10:50:49.664] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.664] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.664] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.664] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.664] |  :  .  |  :  .  |  :      ...)  
[10:50:49.664] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.664] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.664] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.664] |  :  .  |  :  .  |  :      ...)  
[10:50:49.664] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.670] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.670] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.670] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.670] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.670] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.671] |  :  .  |  :  .  List of future strategies:
[10:50:49.671] |  :  .  |  :  .  1. sequential:
[10:50:49.671] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.671] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.671] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.671] |  :  .  |  :  .  List of 1
[10:50:49.671] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.671] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.671] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.671] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.671] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.671] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.671] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.674] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.674] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.675] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.675] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.675] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.675] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.675] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.676] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.676] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.676] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.676] |  :  readImmediateCondition() ...
[10:50:49.676] |  :  .  |  assign_globals() ...
[10:50:49.676] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.677] |  :   - Number of RDS files: 0
[10:50:49.677] |  :  readImmediateCondition() ... DONE
[10:50:49.677] |  checking value #1 ... done
[10:50:49.687] |  Number of remaining objects: 1
[10:50:49.687] |  checking value #1 ...
[10:50:49.687] |  :  'obj' is MulticoreFuture
[10:50:49.676] |  :  .  |  List of 5
[10:50:49.676] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:49.676] |  :  .  |   $ MoreArgs                 : list()
[10:50:49.676] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.676] |  :  .  |    ..$ :List of 1
[10:50:49.676] |  :  .  |    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:49.676] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.676] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.676] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.676] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.676] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.676] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.676] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.676] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.676] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.676] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.676] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.676] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.688] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.689] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.689] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.689] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.689] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.689] |  :  .  |  assign_globals() ... done
[10:50:49.692] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.692] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.692] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.692] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.693] |  :  .  |  :  .  |  :  New stack:
[10:50:49.693] |  :  .  |  :  .  |  :  List of 1
[10:50:49.693] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.693] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.693] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.693] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.693] |  :  .  |  :  .  |  :      ...)  
[10:50:49.693] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.693] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.693] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.693] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.693] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.693] |  :  .  |  :  .  |  :      ...)  
[10:50:49.693] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.693] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.697] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.698] |  :  readImmediateCondition() ...
[10:50:49.698] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.698] |  :   - Number of RDS files: 0
[10:50:49.698] |  :  readImmediateCondition() ... DONE
[10:50:49.698] |  checking value #1 ... done
[10:50:49.697] |  :  .  |  :  .  |  :  List of 1
[10:50:49.697] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.697] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.697] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.697] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.697] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.697] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.697] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.700] |  :  .  |  :  .  |  :  Not identical
[10:50:49.700] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.700] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.700] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.700] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.700] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.700] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.700] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.700] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.700] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.700] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.700] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.700] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.708] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.708] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.708] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.708] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.708] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.709] |  Number of remaining objects: 1
[10:50:49.708] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.708] |  :  .  |  :  .  |  1. multicore:
[10:50:49.708] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.708] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.708] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.709] |  checking value #1 ...
[10:50:49.709] |  :  'obj' is MulticoreFuture
[10:50:49.709] |  :  .  |  :  .  |  List of 1
[10:50:49.709] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.709] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.709] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.709] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.709] |  :  .  |  :  .  |      ...)  
[10:50:49.709] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.709] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.709] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.709] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.709] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.709] |  :  .  |  :  .  |      ...)  
[10:50:49.709] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.709] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.713] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.714] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.714] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.714] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.714] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.714] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.715] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.715] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.715] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.715] |  :  readImmediateCondition() ...
[10:50:49.715] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.716] |  :   - Number of RDS files: 0
[10:50:49.716] |  :  readImmediateCondition() ... DONE
[10:50:49.716] |  :  MulticoreFuture #1
[10:50:49.716] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.716] |  :  .  nx: 1
[10:50:49.716] |  :  .  relay: TRUE
[10:50:49.716] |  :  .  stdout: TRUE
[10:50:49.716] |  :  .  signal: TRUE
[10:50:49.717] |  :  .  resignal: FALSE
[10:50:49.717] |  :  .  force: TRUE
[10:50:49.717] |  :  .  relayed: [n=1] FALSE
[10:50:49.717] |  :  .  queued futures: [n=1] FALSE
[10:50:49.717] |  :  .  until=1
[10:50:49.717] |  :  .  relaying element #1
[10:50:49.717] |  :  .  result() for MulticoreFuture ...
[10:50:49.718] |  :  .  |  readImmediateCondition() ...
[10:50:49.718] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.718] |  :  .  |   - Number of RDS files: 0
[10:50:49.718] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.719] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.719] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.719] |  :  .  result() for MulticoreFuture ... done
[10:50:49.719] |  :  .  result() for MulticoreFuture ...
[10:50:49.719] |  :  .  result() for MulticoreFuture ... done
[10:50:49.719] |  :  .  result() for MulticoreFuture ...
[10:50:49.719] |  :  .  result() for MulticoreFuture ... done
[10:50:49.719] |  :  .  result() for MulticoreFuture ...
[10:50:49.720] |  :  .  result() for MulticoreFuture ... done
[10:50:49.720] |  :  .  relayed: [n=1] TRUE
[10:50:49.720] |  :  .  queued futures: [n=1] TRUE
[10:50:49.720] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.720] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.720] |  :  .  result() for MulticoreFuture ...
[10:50:49.720] |  :  .  result() for MulticoreFuture ... done
[10:50:49.720] |  :  .  result() for MulticoreFuture ...
[10:50:49.721] |  :  .  result() for MulticoreFuture ... done
[10:50:49.721] |  :  .  value: <list>
[10:50:49.721] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.721] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.721] |  :  .  nx: 1
[10:50:49.721] |  :  .  relay: TRUE
[10:50:49.721] |  :  .  stdout: TRUE
[10:50:49.721] |  :  .  signal: TRUE
[10:50:49.721] |  :  .  resignal: FALSE
[10:50:49.721] |  :  .  force: TRUE
[10:50:49.722] |  :  .  relayed: [n=1] TRUE
[10:50:49.722] |  :  .  queued futures: [n=1] TRUE
[10:50:49.722] |  :  .  until=1
[10:50:49.722] |  :  .  relayed: [n=1] TRUE
[10:50:49.722] |  :  .  queued futures: [n=1] TRUE
[10:50:49.722] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.722] |  :  length: 0 (resolved future 1)
[10:50:49.722] |  checking value #1 ... done
[10:50:49.723] |  Relaying remaining futures ...
[10:50:49.723] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.723] |  :  .  nx: 1
[10:50:49.723] |  :  .  relay: TRUE
[10:50:49.723] |  :  .  stdout: TRUE
[10:50:49.723] |  :  .  signal: TRUE
[10:50:49.723] |  :  .  resignal: FALSE
[10:50:49.723] |  :  .  force: TRUE
[10:50:49.723] |  :  .  relayed: [n=1] TRUE
[10:50:49.724] |  :  .  queued futures: [n=1] TRUE
 - flush all
[10:50:49.724] |  :  .  relayed: [n=1] TRUE
[10:50:49.724] |  :  .  queued futures: [n=1] TRUE
[10:50:49.724] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.724] |  Relaying remaining futures ... done
[10:50:49.724] value() on list ... done
[10:50:49.724]  - Number of value chunks collected: 1
[10:50:49.724] Resolving 1 futures (chunks) ... DONE
[10:50:49.724] Reducing values from 1 chunks ...
[10:50:49.725]  - Number of values collected after concatenation: 1
[10:50:49.725]  - Number of values expected: 1
[10:50:49.725] Reducing values from 1 chunks ... DONE
[10:50:49.725] future_mapply() ... DONE
- Non-recycling of MoreArgs (Issue #51) ...
[10:50:49.725] future_mapply() ...
[10:50:49.725] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.726] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.726] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.726] Number of chunks: 2
[10:50:49.726] getGlobalsAndPackagesXApply() ...
[10:50:49.727]  - future.globals: TRUE
[10:50:49.727] getGlobalsAndPackages() ...
[10:50:49.727] |  Searching for globals ...
[10:50:49.728] |  :  globals found: [1] ‘FUN’
[10:50:49.728] |  Searching for globals ... DONE
[10:50:49.729] |  Resolving globals: FALSE
[10:50:49.729] |  Search for packages associated with the globals ...
[10:50:49.729] |  :  Packages associated with globals: [0] 
[10:50:49.729] |  :  Packages: [0] 
[10:50:49.729] |  Search for packages associated with the globals ... DONE
[10:50:49.729] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:49.730] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:49.730] |  Packages after dropping 'base': [0] 
[10:50:49.730] |  globals: [1] ‘FUN’
[10:50:49.730] |  packages: [0] 
[10:50:49.730] getGlobalsAndPackages() ... done
[10:50:49.731]  - globals found/used: [n=1] ‘FUN’
[10:50:49.731]  - needed namespaces: [n=0] 
[10:50:49.731] Finding globals ... DONE
[10:50:49.731] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.731] List of 2
[10:50:49.731]  $ ...future.FUN:function (x, y)  
[10:50:49.731]  $ MoreArgs     :List of 1
[10:50:49.731]   ..$ y: int [1:2] 3 4
[10:50:49.731]  - attr(*, "where")=List of 2
[10:50:49.731]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.731]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.731]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.731]  - attr(*, "resolved")= logi FALSE
[10:50:49.731]  - attr(*, "total_size")= num NA
[10:50:49.738] Packages to be attached in all futures: [n=0] 
[10:50:49.738] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.738] Number of futures (= number of chunks): 2
[10:50:49.738] Launching 2 futures (chunks) ...
[10:50:49.738] Chunk #1 of 2 ...
[10:50:49.738]  - Finding globals in '...' for chunk #1 ...
[10:50:49.739] getGlobalsAndPackages() ...
[10:50:49.739] |  Searching for globals ...
[10:50:49.739] |  :  globals found: [0] 
[10:50:49.739] |  Searching for globals ... DONE
[10:50:49.739] |  globals: [0] <none>
[10:50:49.739] |  packages: [0] <none>
[10:50:49.739] getGlobalsAndPackages() ... done
[10:50:49.740]    + additional globals found: [n=0] 
[10:50:49.740]    + additional namespaces needed: [n=0] 
[10:50:49.740]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.740]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.740]  - seeds: <none>
[10:50:49.740]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.740] getGlobalsAndPackages() ...
[10:50:49.740] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.740] |  Resolving globals: FALSE
[10:50:49.741] |  Search for packages associated with the globals ...
[10:50:49.741] |  :  Packages associated with globals: [0] 
[10:50:49.741] |  :  Packages: [0] 
[10:50:49.741] |  Search for packages associated with the globals ... DONE
[10:50:49.741] |  Packages after dropping 'base': [0] 
[10:50:49.741] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.742] |  packages: [0] 
[10:50:49.742] getGlobalsAndPackages() ... done
[10:50:49.742] run() for Future (‘Future’) ...
[10:50:49.742] |  state: ‘created’
[10:50:49.742] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.742] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.742] |  Using MulticoreFutureBackend ...
[10:50:49.743] |  :  Launching futures ...
[10:50:49.743] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.743] |  :  .  |  getFutureData() ...
[10:50:49.743] |  :  .  |  :  getFutureCore() ...
[10:50:49.743] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.743] |  :  .  |  :  getFutureCore() ... done
[10:50:49.743] |  :  .  |  :  getFutureCapture() ...
[10:50:49.743] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.744] |  :  .  |  :  getFutureContext() ...
[10:50:49.744] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.744] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.744] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.744] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.744] |  :  .  |  :  getFutureContext() ... done
[10:50:49.744] |  :  .  |  getFutureData() ... done
[10:50:49.744] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.745] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.747] |  :  .  |  MulticoreFuture started
[10:50:49.747] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.747] |  :  Launching futures ... done
[10:50:49.747] |  :  .  |  attachPackages() ...
[10:50:49.748] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.748] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.748] |  Using MulticoreFutureBackend ... done
[10:50:49.748] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.748] |  :  .  |  attachPackages() ... DONE
[10:50:49.748] Created future:
[10:50:49.748] |  :  .  |  attachPackages() ...
[10:50:49.748] |  :  .  |  :  packages: [n=0] 
[10:50:49.749] |  :  .  |  attachPackages() ... DONE
[10:50:49.749] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.750] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.750] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.750] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.751] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.751] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.751] |  :  .  |  :  .  |  New stack:
[10:50:49.751] |  :  .  |  :  .  |  List of 1
[10:50:49.751] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.751] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.751] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.751] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.751] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.751] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.751] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.755] |  :  .  |  :  .  |  Old stack:
[10:50:49.760] readImmediateCondition() ...
[10:50:49.755] |  :  .  |  :  .  |  List of 1
[10:50:49.755] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.755] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.755] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.755] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.755] |  :  .  |  :  .  |      ...)  
[10:50:49.755] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.755] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.755] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.755] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.755] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.755] |  :  .  |  :  .  |      ...)  
[10:50:49.755] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.755] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.760]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.760] |  :  .  |  :  .  |  Not identical
[10:50:49.761]  - Number of RDS files: 0
[10:50:49.761] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.761] readImmediateCondition() ... DONE
[10:50:49.748] MulticoreFuture:
[10:50:49.748] Label: ‘future_mapply-1’
[10:50:49.748] Expression:
[10:50:49.748] {
[10:50:49.748]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.748]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.748]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.748]         on.exit(options(oopts), add = TRUE)
[10:50:49.748]     }
[10:50:49.748]     {
[10:50:49.748]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.748]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.748]         do.call(mapply, args = args)
[10:50:49.748]     }
[10:50:49.748] }
[10:50:49.748] Lazy evaluation: FALSE
[10:50:49.748] Asynchronous evaluation: TRUE
[10:50:49.748] Local evaluation: TRUE
[10:50:49.748] Environment: R_GlobalEnv
[10:50:49.748] Capture standard output: TRUE
[10:50:49.748] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.748] Immediate condition classes: ‘immediateCondition’
[10:50:49.748] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.748] Packages: <none>
[10:50:49.748] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.748] Resolved: FALSE
[10:50:49.748] Value: <not collected>
[10:50:49.748] Conditions captured: <none>
[10:50:49.748] Early signaling: FALSE
[10:50:49.748] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.748] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.761] Chunk #1 of 2 ... DONE
[10:50:49.761] Chunk #2 of 2 ...
[10:50:49.762]  - Finding globals in '...' for chunk #2 ...
[10:50:49.762] getGlobalsAndPackages() ...
[10:50:49.762] |  Searching for globals ...
[10:50:49.763] |  :  globals found: [0] 
[10:50:49.763] |  Searching for globals ... DONE
[10:50:49.763] |  globals: [0] <none>
[10:50:49.763] |  packages: [0] <none>
[10:50:49.763] getGlobalsAndPackages() ... done
[10:50:49.763]    + additional globals found: [n=0] 
[10:50:49.763]    + additional namespaces needed: [n=0] 
[10:50:49.763]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:49.763]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.764]  - seeds: <none>
[10:50:49.764]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.764] getGlobalsAndPackages() ...
[10:50:49.764] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.764] |  Resolving globals: FALSE
[10:50:49.764] |  Search for packages associated with the globals ...
[10:50:49.765] |  :  Packages associated with globals: [0] 
[10:50:49.765] |  :  Packages: [0] 
[10:50:49.765] |  Search for packages associated with the globals ... DONE
[10:50:49.765] |  Packages after dropping 'base': [0] 
[10:50:49.765] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.766] |  packages: [0] 
[10:50:49.766] getGlobalsAndPackages() ... done
[10:50:49.766] run() for Future (‘Future’) ...
[10:50:49.766] |  state: ‘created’
[10:50:49.766] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.767] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.767] |  Using MulticoreFutureBackend ...
[10:50:49.767] |  :  Launching futures ...
[10:50:49.767] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.767] |  :  .  |  getFutureData() ...
[10:50:49.767] |  :  .  |  :  getFutureCore() ...
[10:50:49.767] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.768] |  :  .  |  :  getFutureCore() ... done
[10:50:49.761] |  :  .  |  :  .  |  :  List of 2
[10:50:49.761] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.761] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.761] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.761] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.761] |  :  .  |  :  .  |  :      ...)  
[10:50:49.761] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.761] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.761] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.761] |  :  .  |  :  .  |  :      ...)  
[10:50:49.761] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.768] |  :  .  |  :  getFutureCapture() ...
[10:50:49.768] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.768] |  :  .  |  :  getFutureContext() ...
[10:50:49.768] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.768] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.768] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.768] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.769] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.769] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.769] |  :  .  |  :  getFutureContext() ... done
[10:50:49.769] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.769] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.769] |  :  .  |  getFutureData() ... done
[10:50:49.769] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.769] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.770] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.769] |  :  .  |  :  .  List of future strategies:
[10:50:49.769] |  :  .  |  :  .  1. sequential:
[10:50:49.769] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.769] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.769] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.772] |  :  .  |  MulticoreFuture started
[10:50:49.773] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.773] |  :  Launching futures ... done
[10:50:49.773] |  :  .  |  attachPackages() ...
[10:50:49.773] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.773] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.774] |  Using MulticoreFutureBackend ... done
[10:50:49.770] |  :  .  |  :  .  List of 1
[10:50:49.770] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.770] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.770] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.770] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.770] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.770] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.770] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.774] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.774] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.774] |  :  .  |  attachPackages() ... DONE
[10:50:49.774] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.774] |  :  .  |  attachPackages() ...
[10:50:49.774] Created future:
[10:50:49.774] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.774] |  :  .  |  :  packages: [n=0] 
[10:50:49.775] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.775] |  :  .  |  attachPackages() ... DONE
[10:50:49.775] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.775] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.775] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.775] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.776] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.776] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.776] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.776] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.776] |  :  .  |  assign_globals() ...
[10:50:49.777] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.777] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.777] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.778] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.778] |  :  .  |  :  .  |  New stack:
[10:50:49.778] |  :  .  |  :  .  |  List of 1
[10:50:49.778] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.778] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.778] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.778] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.778] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.778] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.778] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.782] |  :  .  |  :  .  |  Old stack:
[10:50:49.777] |  :  .  |  List of 5
[10:50:49.777] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:49.777] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:49.777] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:49.777] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.777] |  :  .  |    ..$ x:List of 1
[10:50:49.777] |  :  .  |    .. ..$ : int 1
[10:50:49.777] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.777] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.777] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.777] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.777] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.777] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.777] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.777] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.777] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.777] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.777] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.777] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.784] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.785] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.785] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.785] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.785] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.785] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.785] |  :  .  |  assign_globals() ... done
[10:50:49.787] readImmediateCondition() ...
[10:50:49.787]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.788]  - Number of RDS files: 0
[10:50:49.788] readImmediateCondition() ... DONE
[10:50:49.788] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.782] |  :  .  |  :  .  |  List of 1
[10:50:49.782] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.782] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.782] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.782] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.782] |  :  .  |  :  .  |      ...)  
[10:50:49.782] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.782] |  :  .  |  :  .  |    ..- attr(*, "tweakabl[10:50:49.774] MulticoreFuture:
[10:50:49.774] Label: ‘future_mapply-2’
[10:50:49.774] Expression:
[10:50:49.774] {
[10:50:4e")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.782] |  :  .  |  :  .  |    ..- attr(*,9.774]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.774]     if (!identical(...future.glob "call")= language plan(strategy)
[10:50:49.782] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend',als.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.774]         oopts <- options(future.globals.maxSize = ...future.global 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.782] |  :  .  |  :  .  |  s.maxSize)
[10:50:49.774]         on.exit(options(oopts), add = TRUE)
[10:50:49.774]     }
[10:50:49.774]     {
[10:50:49.774]    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.7       args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:49.774]             MoreArgs = list(MoreArgs), SIMPLI82] |  :  .  |  :  .  |      ...)  
[10:50:49.782] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "mFY = FALSE, USE.NAMES = FALSE)
[10:50:49.774]         do.call(mapply, args = args)
[10:50:49.774]     }
[10:50:49.774] }
[10:50:axSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.782] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureSt49.774] Lazy evaluation: FALSE
[10:50:49.774] Asynchronous evaluation: TRUE
[10:50:49.774] Local evaluation: TRUE
[10:50:49.774]rategyList" "list"
 Environment: R_GlobalEnv
[10:50:49.774] Capture standard output: TRUE
[10:50:49.774] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.774] Immediate condition classes: ‘immediateCondition’
[10:50:49.774] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.774] Packages: <none>
[10:50:49.774] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:49.774] Resolved: FALSE
[10:50:49.774] Value: <not collected>
[10:50:49.774] Conditions captured: <none>
[10:50:49.774] Early signaling: FALSE
[10:50:49.774] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.774] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.788] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.788] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.788] Chunk #2 of 2 ... DONE
[10:50:49.788] |  :  .  |  :  .  |  Not identical
[10:50:49.789] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.789] Launching 2 futures (chunks) ... DONE
[10:50:49.789] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.789] |  :  .  |  :  .  |  :  New stack:
[10:50:49.789] Resolving 2 futures (chunks) ...
[10:50:49.789] value() on list ...
[10:50:49.789] |  recursive: 0
[10:50:49.790] |  length: 2
[10:50:49.790] |  
[10:50:49.790] |  Number of remaining objects: 2
[10:50:49.790] |  checking value #1 ...
[10:50:49.790] |  :  'obj' is MulticoreFuture
[10:50:49.789] |  :  .  |  :  .  |  :  List of 1
[10:50:49.789] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.789] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.789] |  :  .  |  :  .  |  :      ...)  
[10:50:49.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.789] |  :  .  |  :  .  |  :      ...)  
[10:50:49.789] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.789] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.793] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.794] |  :  .  |  :  .  |  :  List of 1
[10:50:49.794] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.794] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.794] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.794] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.794] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.794] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.794] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.797] |  :  .  |  :  .  |  :  Not identical
[10:50:49.797] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.789] |  :  .  |  :  .  |  :  List of 2
[10:50:49.789] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.789] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.789] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.789] |  :  .  |  :  .  |  :      ...)  
[10:50:49.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.789] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.789] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.789] |  :  .  |  :  .  |  :      ...)  
[10:50:49.789] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.798] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.798] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.798] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.798] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.798] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.798] |  :  .  |  :  .  List of future strategies:
[10:50:49.798] |  :  .  |  :  .  1. sequential:
[10:50:49.798] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.798] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.798] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.801] |  :  readImmediateCondition() ...
[10:50:49.801] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.801] |  :   - Number of RDS files: 0
[10:50:49.801] |  :  readImmediateCondition() ... DONE
[10:50:49.802] |  checking value #1 ... done
[10:50:49.802] |  checking value #2 ...
[10:50:49.802] |  :  'obj' is MulticoreFuture
[10:50:49.797] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.797] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.797] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.797] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.797] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.797] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.797] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.797] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.797] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.797] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.797] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.799] |  :  .  |  :  .  List of 1
[10:50:49.799] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.799] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.799] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.799] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.799] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.799] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.799] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.803] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.803] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.803] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.803] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.804] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.804] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.804] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.804] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.804] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.804] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.804] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.804] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.804] |  :  .  |  :  .  |  1. multicore:
[10:50:49.804] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.804] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.804] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.804] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.805] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.805] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.805] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.805] |  :  .  |  assign_globals() ...
[10:50:49.804] |  :  .  |  :  .  |  List of 1
[10:50:49.804] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.804] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.804] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.804] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.804] |  :  .  |  :  .  |      ...)  
[10:50:49.804] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.804] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.804] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.804] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.804] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.804] |  :  .  |  :  .  |      ...)  
[10:50:49.804] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.804] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.808] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.809] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.809] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.809] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.809] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.809] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.809] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.810] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.810] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.812] |  :  readImmediateCondition() ...
[10:50:49.813] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.813] |  :   - Number of RDS files: 0
[10:50:49.813] |  :  readImmediateCondition() ... DONE
[10:50:49.813] |  checking value #2 ... done
[10:50:49.805] |  :  .  |  List of 5
[10:50:49.805] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:49.805] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:49.805] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:49.805] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.805] |  :  .  |    ..$ x:List of 1
[10:50:49.805] |  :  .  |    .. ..$ : int 2
[10:50:49.805] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:49.805] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.805] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.805] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.805] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.805] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.805] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.805] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.805] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.805] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.805] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.805] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.814] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.814] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.814] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.814] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.814] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.814] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.815] |  :  .  |  assign_globals() ... done
[10:50:49.817] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.817] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.818] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.818] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.818] |  :  .  |  :  .  |  :  New stack:
[10:50:49.818] |  :  .  |  :  .  |  :  List of 1
[10:50:49.818] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.818] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.818] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.818] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.818] |  :  .  |  :  .  |  :      ...)  
[10:50:49.818] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.818] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.818] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.818] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.818] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.818] |  :  .  |  :  .  |  :      ...)  
[10:50:49.818] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.818] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.822] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.824] |  Number of remaining objects: 2
[10:50:49.824] |  checking value #1 ...
[10:50:49.824] |  :  'obj' is MulticoreFuture
[10:50:49.824] |  :  readImmediateCondition() ...
[10:50:49.825] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.825] |  :   - Number of RDS files: 0
[10:50:49.825] |  :  readImmediateCondition() ... DONE
[10:50:49.825] |  :  MulticoreFuture #1
[10:50:49.825] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.826] |  :  .  nx: 2
[10:50:49.826] |  :  .  relay: TRUE
[10:50:49.826] |  :  .  stdout: TRUE
[10:50:49.826] |  :  .  signal: TRUE
[10:50:49.822] |  :  .  |  :  .  |  :  List of 1
[10:50:49.822] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.822] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.822] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +[10:50:49.826] |  :  .  resignal: FALSE
Inf)  
[10:50:49.822] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.822] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.822] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.822] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.827] |  :  .  force: TRUE
[10:50:49.827] |  :  .  |  :  .  |  :  Not identical
[10:50:49.827] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:49.827] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.827] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:49.827] |  :  .  until=1
[10:50:49.827] |  :  .  relaying element #1
[10:50:49.828] |  :  .  result() for MulticoreFuture ...
[10:50:49.829] |  :  .  |  readImmediateCondition() ...
[10:50:49.829] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.829] |  :  .  |   - Number of RDS files: 0
[10:50:49.829] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.830] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.830] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.830] |  :  .  result() for MulticoreFuture ... done
[10:50:49.831] |  :  .  result() for MulticoreFuture ...
[10:50:49.831] |  :  .  result() for MulticoreFuture ... done
[10:50:49.831] |  :  .  result() for MulticoreFuture ...
[10:50:49.831] |  :  .  result() for MulticoreFuture ... done
[10:50:49.832] |  :  .  result() for MulticoreFuture ...
[10:50:49.832] |  :  .  result() for MulticoreFuture ... done
[10:50:49.832] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.832] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.833] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.833] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.833] |  :  .  result() for MulticoreFuture ...
[10:50:49.833] |  :  .  result() for MulticoreFuture ... done
[10:50:49.833] |  :  .  result() for MulticoreFuture ...
[10:50:49.834] |  :  .  result() for MulticoreFuture ... done
[10:50:49.834] |  :  .  value: <list>
[10:50:49.834] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.834] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.835] |  :  .  nx: 2
[10:50:49.835] |  :  .  relay: TRUE
[10:50:49.835] |  :  .  stdout: TRUE
[10:50:49.835] |  :  .  signal: TRUE
[10:50:49.835] |  :  .  resignal: FALSE
[10:50:49.835] |  :  .  force: TRUE
[10:50:49.836] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.836] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.836] |  :  .  until=2
[10:50:49.827] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.827] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.827] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.827] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.827] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.827] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.827] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.827] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.827] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.827] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.827] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.836] |  :  .  relaying element #2
[10:50:49.836] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.837] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.837] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.837] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.837] |  :  length: 1 (resolved future 1)
[10:50:49.837] |  checking value #1 ... done
[10:50:49.837] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.838] |  checking value #2 ...
[10:50:49.838] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.838] |  :  'obj' is MulticoreFuture
[10:50:49.838] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.838] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.838] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.838] |  :  .  |  :  .  |  1. multicore:
[10:50:49.838] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.838] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.838] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.839] |  :  .  |  :  .  |  List of 1
[10:50:49.839] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.839] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.839] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.839] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.839] |  :  .  |  :  .  |      ...)  
[10:50:49.839] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.839] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.839] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.839] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.839] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.839] |  :  .  |  :  .  |      ...)  
[10:50:49.839] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.839] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.843] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.843] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.843] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.843] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.843] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.844] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.844] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.844] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.844] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.844] |  :  readImmediateCondition() ...
[10:50:49.845] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.845] |  :   - Number of RDS files: 0
[10:50:49.845] |  :  readImmediateCondition() ... DONE
[10:50:49.845] |  :  MulticoreFuture #2
[10:50:49.845] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.845] |  :  .  nx: 2
[10:50:49.845] |  :  .  relay: TRUE
[10:50:49.846] |  :  .  stdout: TRUE
[10:50:49.846] |  :  .  signal: TRUE
[10:50:49.846] |  :  .  resignal: FALSE
[10:50:49.846] |  :  .  force: TRUE
[10:50:49.846] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.846] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.846] |  :  .  until=2
[10:50:49.846] |  :  .  relaying element #2
[10:50:49.846] |  :  .  result() for MulticoreFuture ...
[10:50:49.847] |  :  .  |  readImmediateCondition() ...
[10:50:49.847] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.847] |  :  .  |   - Number of RDS files: 0
[10:50:49.847] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.848] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.848] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.848] |  :  .  result() for MulticoreFuture ... done
[10:50:49.848] |  :  .  result() for MulticoreFuture ...
[10:50:49.848] |  :  .  result() for MulticoreFuture ... done
[10:50:49.849] |  :  .  result() for MulticoreFuture ...
[10:50:49.849] |  :  .  result() for MulticoreFuture ... done
[10:50:49.849] |  :  .  result() for MulticoreFuture ...
[10:50:49.849] |  :  .  result() for MulticoreFuture ... done
[10:50:49.849] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.850] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.850] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.850] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.850] |  :  .  result() for MulticoreFuture ...
[10:50:49.850] |  :  .  result() for MulticoreFuture ... done
[10:50:49.850] |  :  .  result() for MulticoreFuture ...
[10:50:49.851] |  :  .  result() for MulticoreFuture ... done
[10:50:49.851] |  :  .  value: <list>
[10:50:49.851] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.851] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.851] |  :  .  nx: 2
[10:50:49.851] |  :  .  relay: TRUE
[10:50:49.852] |  :  .  stdout: TRUE
[10:50:49.852] |  :  .  signal: TRUE
[10:50:49.852] |  :  .  resignal: FALSE
[10:50:49.852] |  :  .  force: TRUE
[10:50:49.852] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.852] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.852] |  :  .  until=2
[10:50:49.853] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.853] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.853] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.853] |  :  length: 0 (resolved future 2)
[10:50:49.853] |  checking value #2 ... done
[10:50:49.853] |  Relaying remaining futures ...
[10:50:49.853] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.854] |  :  .  nx: 2
[10:50:49.854] |  :  .  relay: TRUE
[10:50:49.854] |  :  .  stdout: TRUE
[10:50:49.854] |  :  .  signal: TRUE
[10:50:49.854] |  :  .  resignal: FALSE
[10:50:49.854] |  :  .  force: TRUE
[10:50:49.854] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.854] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:49.854] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.855] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.855] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.855] |  Relaying remaining futures ... done
[10:50:49.855] value() on list ... done
[10:50:49.855]  - Number of value chunks collected: 2
[10:50:49.855] Resolving 2 futures (chunks) ... DONE
[10:50:49.855] Reducing values from 2 chunks ...
[10:50:49.855]  - Number of values collected after concatenation: 2
[10:50:49.856]  - Number of values expected: 2
[10:50:49.856] Reducing values from 2 chunks ... DONE
[10:50:49.856] future_mapply() ... DONE
[10:50:49.856] future_mapply() ...
[10:50:49.856] Generating random seeds ...
[10:50:49.856] Generating random seed streams for 2 elements ...
[10:50:49.856] Generating random seed streams for 2 elements ... DONE
[10:50:49.857] Generating random seeds ... DONE
[10:50:49.857] Will set RNG state on exit: 10407, -1653334647, -277554022, -1043797267, -1527230611, -746334880, 421784323
[10:50:49.857] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.857] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.857] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.858] Number of chunks: 2
[10:50:49.858] getGlobalsAndPackagesXApply() ...
[10:50:49.858]  - future.globals: TRUE
[10:50:49.858] getGlobalsAndPackages() ...
[10:50:49.858] |  Searching for globals ...
[10:50:49.860] |  :  globals found: [1] ‘FUN’
[10:50:49.860] |  Searching for globals ... DONE
[10:50:49.860] |  Resolving globals: FALSE
[10:50:49.860] |  Search for packages associated with the globals ...
[10:50:49.860] |  :  Packages associated with globals: [0] 
[10:50:49.861] |  :  Packages: [0] 
[10:50:49.861] |  Search for packages associated with the globals ... DONE
[10:50:49.861] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:49.861] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:49.861] |  Packages after dropping 'base': [0] 
[10:50:49.862] |  globals: [1] ‘FUN’
[10:50:49.862] |  packages: [0] 
[10:50:49.862] getGlobalsAndPackages() ... done
[10:50:49.862]  - globals found/used: [n=1] ‘FUN’
[10:50:49.862]  - needed namespaces: [n=0] 
[10:50:49.862] Finding globals ... DONE
[10:50:49.863] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:49.863] List of 2
[10:50:49.863]  $ ...future.FUN:function (x, y)  
[10:50:49.863]  $ MoreArgs     :List of 1
[10:50:49.863]   ..$ y: int [1:2] 3 4
[10:50:49.863]  - attr(*, "where")=List of 2
[10:50:49.863]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:49.863]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:49.863]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.863]  - attr(*, "resolved")= logi FALSE
[10:50:49.863]  - attr(*, "total_size")= num NA
[10:50:49.866] Packages to be attached in all futures: [n=0] 
[10:50:49.866] getGlobalsAndPackagesXApply() ... DONE
[10:50:49.867] Number of futures (= number of chunks): 2
[10:50:49.867] Launching 2 futures (chunks) ...
[10:50:49.867] Chunk #1 of 2 ...
[10:50:49.867]  - Finding globals in '...' for chunk #1 ...
[10:50:49.867] getGlobalsAndPackages() ...
[10:50:49.867] |  Searching for globals ...
[10:50:49.868] |  :  globals found: [0] 
[10:50:49.868] |  Searching for globals ... DONE
[10:50:49.868] |  globals: [0] <none>
[10:50:49.868] |  packages: [0] <none>
[10:50:49.868] getGlobalsAndPackages() ... done
[10:50:49.868]    + additional globals found: [n=0] 
[10:50:49.868]    + additional namespaces needed: [n=0] 
[10:50:49.868]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:49.869]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.869]  - seeds: [1] <seeds>
[10:50:49.869]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.869] getGlobalsAndPackages() ...
[10:50:49.869] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.869] |  Resolving globals: FALSE
[10:50:49.869] |  Search for packages associated with the globals ...
[10:50:49.870] |  :  Packages associated with globals: [0] 
[10:50:49.870] |  :  Packages: [0] 
[10:50:49.870] |  Search for packages associated with the globals ... DONE
[10:50:49.870] |  Packages after dropping 'base': [0] 
[10:50:49.870] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.870] |  packages: [0] 
[10:50:49.870] getGlobalsAndPackages() ... done
[10:50:49.871] run() for Future (‘Future’) ...
[10:50:49.871] |  state: ‘created’
[10:50:49.871] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.871] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.871] |  Using MulticoreFutureBackend ...
[10:50:49.871] |  :  Launching futures ...
[10:50:49.872] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.872] |  :  .  |  getFutureData() ...
[10:50:49.872] |  :  .  |  :  getFutureCore() ...
[10:50:49.872] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.872] |  :  .  |  :  getFutureCore() ... done
[10:50:49.872] |  :  .  |  :  getFutureCapture() ...
[10:50:49.872] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.872] |  :  .  |  :  getFutureContext() ...
[10:50:49.872] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.873] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.873] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.873] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.873] |  :  .  |  :  getFutureContext() ... done
[10:50:49.873] |  :  .  |  getFutureData() ... done
[10:50:49.873] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.874] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.876] |  :  .  |  MulticoreFuture started
[10:50:49.876] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.876] |  :  Launching futures ... done
[10:50:49.876] |  :  .  |  attachPackages() ...
[10:50:49.876] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.877] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.877] |  Using MulticoreFutureBackend ... done
[10:50:49.877] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.877] |  :  .  |  attachPackages() ... DONE
[10:50:49.877] Created future:
[10:50:49.877] |  :  .  |  attachPackages() ...
[10:50:49.877] |  :  .  |  :  packages: [n=0] 
[10:50:49.877] |  :  .  |  attachPackages() ... DONE
[10:50:49.878] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.879] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.879] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.879] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.880] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.880] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.880] |  :  .  |  :  .  |  New stack:
[10:50:49.880] |  :  .  |  :  .  |  List of 1
[10:50:49.880] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.880] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.880] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.880] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.880] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.880] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.880] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.884] |  :  .  |  :  .  |  Old stack:
[10:50:49.884] |  :  .  |  :  .  |  List of 1
[10:50:49.884] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.884] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.884] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.884] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.884] |  :  .  |  :  .  |      ...)  
[10:50:49.884] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.884] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.884] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.884] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.884] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.884] |  :  .  |  :  .  |      ...)  
[10:50:49.884] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.884] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.888] |  :  .  |  :  .  |  Not identical
[10:50:49.888] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.889] readImmediateCondition() ...
[10:50:49.889]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.889]  - Number of RDS files: 0
[10:50:49.889] readImmediateCondition() ... DONE
[10:50:49.877] MulticoreFuture:
[10:50:49.877] Label: ‘future_mapply-1’
[10:50:49.877] Expression:
[10:50:49.877] {
[10:50:49.877]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.877]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.877]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.877]         on.exit(options(oopts), add = TRUE)
[10:50:49.877]     }
[10:50:49.877]     {
[10:50:49.877]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:49.877]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:49.877]                 inherits = FALSE)
[10:50:49.877]             ...future.FUN(...)
[10:50:49.877]         }
[10:50:49.877]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:49.877]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:49.877]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.877]         do.call(mapply, args = args)
[10:50:49.877]     }
[10:50:49.877] }
[10:50:49.877] Lazy evaluation: FALSE
[10:50:49.877] Asynchronous evaluation: TRUE
[10:50:49.877] Local evaluation: TRUE
[10:50:49.877] Environment: R_GlobalEnv
[10:50:49.877] Capture standard output: TRUE
[10:50:49.877] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.877] Immediate condition classes: ‘immediateCondition’
[10:50:49.877] Globals: 5 objects totaling 696 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, list ‘...future.seeds_ii’ of 67 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.877] Packages: <none>
[10:50:49.877] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:49.877] Resolved: FALSE
[10:50:49.877] Value: <not collected>
[10:50:49.877] Conditions captured: <none>
[10:50:49.877] Early signaling: FALSE
[10:50:49.877] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.877] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.890] Chunk #1 of 2 ... DONE
[10:50:49.890] Chunk #2 of 2 ...
[10:50:49.890]  - Finding globals in '...' for chunk #2 ...
[10:50:49.890] getGlobalsAndPackages() ...
[10:50:49.891] |  Searching for globals ...
[10:50:49.891] |  :  globals found: [0] 
[10:50:49.891] |  Searching for globals ... DONE
[10:50:49.891] |  globals: [0] <none>
[10:50:49.891] |  packages: [0] <none>
[10:50:49.892] getGlobalsAndPackages() ... done
[10:50:49.892]    + additional globals found: [n=0] 
[10:50:49.892]    + additional namespaces needed: [n=0] 
[10:50:49.892]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:49.892]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:49.892]  - seeds: [1] <seeds>
[10:50:49.892]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.892] getGlobalsAndPackages() ...
[10:50:49.893] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.893] |  Resolving globals: FALSE
[10:50:49.893] |  Search for packages associated with the globals ...
[10:50:49.893] |  :  Packages associated with globals: [0] 
[10:50:49.894] |  :  Packages: [0] 
[10:50:49.894] |  Search for packages associated with the globals ... DONE
[10:50:49.894] |  Packages after dropping 'base': [0] 
[10:50:49.894] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:49.894] |  packages: [0] 
[10:50:49.889] |  :  .  |  :  .  |  :  List of 2
[10:50:49.889] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.889] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.889] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.889] |  :  .  |  :  .  |  :      ...)  
[10:50:49.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.889] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.889] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.889] |  :  .  |  :  .  |  :      ...)  
[10:50:49.889] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.894] getGlobalsAndPackages() ... done
[10:50:49.895] run() for Future (‘Future’) ...
[10:50:49.895] |  state: ‘created’
[10:50:49.895] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.895] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.895] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.895] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.895] |  Using MulticoreFutureBackend ...
[10:50:49.895] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.895] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.895] |  :  Launching futures ...
[10:50:49.895] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.895] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.896] |  :  .  |  getFutureData() ...
[10:50:49.896] |  :  .  |  :  getFutureCore() ...
[10:50:49.896] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:49.896] |  :  .  |  :  getFutureCore() ... done
[10:50:49.896] |  :  .  |  :  getFutureCapture() ...
[10:50:49.896] |  :  .  |  :  .  List of future strategies:
[10:50:49.896] |  :  .  |  :  .  1. sequential:
[10:50:49.896] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.896] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.896] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.896] |  :  .  |  :  getFutureCapture() ... done
[10:50:49.896] |  :  .  |  :  getFutureContext() ...
[10:50:49.896] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.897] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:49.897] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.897] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:49.897] |  :  .  |  :  getFutureContext() ... done
[10:50:49.897] |  :  .  |  getFutureData() ... done
[10:50:49.897] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.898] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:49.896] |  :  .  |  :  .  List of 1
[10:50:49.896] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.896] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.896] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.896] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.896] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.896] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.896] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.899] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.899] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.900] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.900] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.900] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.900] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.900] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.900] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.900] |  :  .  |  MulticoreFuture started
[10:50:49.901] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.901] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:49.901] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.901] |  :  Launching futures ... done
[10:50:49.901] |  :  .  |  assign_globals() ...
[10:50:49.901] |  :  .  |  attachPackages() ...
[10:50:49.901] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.901] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:49.901] |  Using MulticoreFutureBackend ... done
[10:50:49.902] run() for Future (‘MulticoreFuture’) ... done
[10:50:49.902] |  :  .  |  attachPackages() ... DONE
[10:50:49.902] Created future:
[10:50:49.902] |  :  .  |  attachPackages() ...
[10:50:49.902] |  :  .  |  :  packages: [n=0] 
[10:50:49.902] |  :  .  |  attachPackages() ... DONE
[10:50:49.904] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.904] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.904] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.905] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.905] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.905] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:49.906] |  :  .  |  :  .  |  New stack:
[10:50:49.901] |  :  .  |  List of 5
[10:50:49.901] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:49.901] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:49.901] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:49.901] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.901] |  :  .  |    ..$ x:List of 1
[10:50:49.901] |  :  .  |    .. ..$ : int 1
[10:50:49.901] |  :  .  |   $ ...future.seeds_ii       :List of 1
[10:50:49.901] |  :  .  |    ..$ : int [1:7] 10407 -1388136534 -320520464 1183488000 1915543236 -1114072525 797448895
[10:50:49.901] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.901] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.901] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.901] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.901] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.901] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.901] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.901] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.901] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.901] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.901] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.909] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.906] |  :  .  |  :  .  |  List of 1
[10:50:49.906] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.906] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.906] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.906] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.906] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.906] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.906] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.909] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.909] |  :  .  |  :  .  |  Old stack:
[10:50:49.909] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.909] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.910] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.910] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.910] |  :  .  |  assign_globals() ... done
[10:50:49.913] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.913] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.913] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.913] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.913] |  :  .  |  :  .  |  :  New stack:
[10:50:49.909] |  :  .  |  :  .  |  List of 1
[10:50:49.909] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.909] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.909] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.909] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.909] |  :  .  |  :  .  |      ...)  
[10:50:49.909] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.909] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.909] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.909] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.909] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.909] |  :  .  |  :  .  |      ...)  
[10:50:49.909] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.909] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.914] |  :  .  |  :  .  |  Not identical
[10:50:49.914] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:49.915] readImmediateCondition() ...
[10:50:49.915]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.915]  - Number of RDS files: 0
[10:50:49.915] readImmediateCondition() ... DONE
[10:50:49.902] MulticoreFuture:
[10:50:49.902] Label: ‘future_mapply-2’
[10:50:49.902] Expression:
[10:50:49.902] {
[10:50:49.902]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:49.902]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:49.902]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:49.902]         on.exit(options(oopts), add = TRUE)
[10:50:49.902]     }
[10:50:49.902]     {
[10:50:49.902]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:49.902]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:49.902]                 inherits = FALSE)
[10:50:49.902]             ...future.FUN(...)
[10:50:49.902]         }
[10:50:49.902]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:49.902]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:49.902]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:49.902]         do.call(mapply, args = args)
[10:50:49.902]     }
[10:50:49.902] }
[10:50:49.902] Lazy evaluation: FALSE
[10:50:49.902] Asynchronous evaluation: TRUE
[10:50:49.902] Local evaluation: TRUE
[10:50:49.902] Environment: R_GlobalEnv
[10:50:49.902] Capture standard output: TRUE
[10:50:49.902] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:49.902] Immediate condition classes: ‘immediateCondition’
[10:50:49.902] Globals: 5 objects totaling 696 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, list ‘...future.seeds_ii’ of 67 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:49.902] Packages: <none>
[10:50:49.902] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:49.902] Resolved: FALSE
[10:50:49.902] Value: <not collected>
[10:50:49.902] Conditions captured: <none>
[10:50:49.902] Early signaling: FALSE
[10:50:49.902] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:49.902] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:49.916] Chunk #2 of 2 ... DONE
[10:50:49.916] Launching 2 futures (chunks) ... DONE
[10:50:49.916] Resolving 2 futures (chunks) ...
[10:50:49.917] value() on list ...
[10:50:49.917] |  recursive: 0
[10:50:49.917] |  length: 2
[10:50:49.917] |  
[10:50:49.917] |  Number of remaining objects: 2
[10:50:49.918] |  checking value #1 ...
[10:50:49.918] |  :  'obj' is MulticoreFuture
[10:50:49.914] |  :  .  |  :  .  |  :  List of 2
[10:50:49.914] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.914] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.914] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.914] |  :  .  |  :  .  |  :      ...)  
[10:50:49.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.914] |  :  .  |  :  .  |  :      ...)  
[10:50:49.914] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :  List of 1
[10:50:49.914] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.914] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.914] |  :  .  |  :  .  |  :      ...)  
[10:50:49.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.914] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.914] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.914] |  :  .  |  :  .  |  :      ...)  
[10:50:49.914] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.914] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.922] |  :  .  |  :  .  |  :  Formals differ
[10:50:49.922] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:49.922] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.922] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:49.922] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:49.923] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:49.923] |  :  .  |  :  .  List of future strategies:
[10:50:49.923] |  :  .  |  :  .  1. sequential:
[10:50:49.923] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:49.923] |  :  .  |  :  .     - tweaked: FALSE
[10:50:49.923] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.922] |  :  .  |  :  .  |  :  List of 1
[10:50:49.922] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.922] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.922] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.922] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.922] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.922] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.922] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.926] |  :  .  |  :  .  |  :  Not identical
[10:50:49.926] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.923] |  :  .  |  :  .  List of 1
[10:50:49.923] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.923] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.923] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.923] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.923] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.923] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.923] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.926] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.927] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.927] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.927] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:49.927] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.927] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:49.928] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:49.928] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:49.928] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.928] |  :  readImmediateCondition() ...
[10:50:49.928] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.928] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.929] |  :  .  |  assign_globals() ...
[10:50:49.929] |  :   - Number of RDS files: 0
[10:50:49.929] |  :  readImmediateCondition() ... DONE
[10:50:49.929] |  checking value #1 ... done
[10:50:49.929] |  checking value #2 ...
[10:50:49.929] |  :  'obj' is MulticoreFuture
[10:50:49.926] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.926] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.926] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.926] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.926] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.926] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.926] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.926] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.926] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.926] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.926] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.932] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.932] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.932] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.932] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.933] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.933] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.933] |  :  .  |  :  .  |  1. multicore:
[10:50:49.933] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.933] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.933] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.933] |  :  .  |  :  .  |  List of 1
[10:50:49.933] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.933] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.933] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.933] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.933] |  :  .  |  :  .  |      ...)  
[10:50:49.933] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.933] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.933] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.933] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.933] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.933] |  :  .  |  :  .  |      ...)  
[10:50:49.933] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.933] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.937] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.938] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.938] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.938] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.938] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.938] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.939] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.939] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.939] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.940] |  :  readImmediateCondition() ...
[10:50:49.940] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.940] |  :   - Number of RDS files: 0
[10:50:49.941] |  :  readImmediateCondition() ... DONE
[10:50:49.941] |  checking value #2 ... done
[10:50:49.929] |  :  .  |  List of 5
[10:50:49.929] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:49.929] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:49.929] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:49.929] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:49.929] |  :  .  |    ..$ x:List of 1
[10:50:49.929] |  :  .  |    .. ..$ : int 2
[10:50:49.929] |  :  .  |   $ ...future.seeds_ii       :List of 1
[10:50:49.929] |  :  .  |    ..$ : int [1:7] 10407 1492693913 1077816612 1239759419 -357503147 222641595 -1973704703
[10:50:49.929] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:49.929] |  :  .  |   - attr(*, "where")=List of 5
[10:50:49.929] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:49.929] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:49.929] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:49.929] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:49.929] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:49.929] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:49.929] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:49.929] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:49.929] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:49.943] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:49.943] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:49.943] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:49.943] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:49.944] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:49.944] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:49.944] |  :  .  |  assign_globals() ... done
[10:50:49.947] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.947] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:49.947] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:49.947] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:49.947] |  :  .  |  :  .  |  :  New stack:
[10:50:49.951] |  Number of remaining objects: 2
[10:50:49.951] |  checking value #1 ...
[10:50:49.951] |  :  'obj' is MulticoreFuture
[10:50:49.947] |  :  .  |  :  .  |  :  List of 1
[10:50:49.947] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.947] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.947] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.947] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.947] |  :  .  |  :  .  |  :      ...)  
[10:50:49.947] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.947] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.947] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:49.947] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.947] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.947] |  :  .  |  :  .  |  :      ...)  
[10:50:49.947] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.947] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.952] |  :  readImmediateCondition() ...
[10:50:49.952] |  :  .  |  :  .  |  :  Old stack:
[10:50:49.952] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.952] |  :   - Number of RDS files: 0
[10:50:49.952] |  :  readImmediateCondition() ... DONE
[10:50:49.953] |  :  MulticoreFuture #1
[10:50:49.953] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.953] |  :  .  nx: 2
[10:50:49.953] |  :  .  relay: TRUE
[10:50:49.953] |  :  .  stdout: TRUE
[10:50:49.953] |  :  .  signal: TRUE
[10:50:49.954] |  :  .  resignal: FALSE
[10:50:49.954] |  :  .  force: TRUE
[10:50:49.954] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:49.954] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:49.954] |  :  .  until=1
[10:50:49.955] |  :  .  relaying element #1
[10:50:49.955] |  :  .  result() for MulticoreFuture ...
[10:50:49.956] |  :  .  |  readImmediateCondition() ...
[10:50:49.956] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.956] |  :  .  |   - Number of RDS files: 0
[10:50:49.956] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.957] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.952] |  :  .  |  :  .  |  :  List of 1
[10:50:49.952] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.952] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.952] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.952] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.952] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.952] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.952] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.957] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.957] |  :  .  |  :  .  |  :  Not identical
[10:50:49.957] |  :  .  result() for MulticoreFuture ... done
[10:50:49.957] |  :  .  result() for MulticoreFuture ...
[10:50:49.957] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:49.958] |  :  .  result() for MulticoreFuture ... done
[10:50:49.958] |  :  .  result() for MulticoreFuture ...
[10:50:49.958] |  :  .  result() for MulticoreFuture ... done
[10:50:49.958] |  :  .  result() for MulticoreFuture ...
[10:50:49.959] |  :  .  result() for MulticoreFuture ... done
[10:50:49.959] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.959] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.959] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:49.959] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.960] |  :  .  result() for MulticoreFuture ...
[10:50:49.960] |  :  .  result() for MulticoreFuture ... done
[10:50:49.960] |  :  .  result() for MulticoreFuture ...
[10:50:49.960] |  :  .  result() for MulticoreFuture ... done
[10:50:49.960] |  :  .  value: <list>
[10:50:49.961] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.961] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:49.961] |  :  .  nx: 2
[10:50:49.961] |  :  .  relay: TRUE
[10:50:49.961] |  :  .  stdout: TRUE
[10:50:49.961] |  :  .  signal: TRUE
[10:50:49.962] |  :  .  resignal: FALSE
[10:50:49.962] |  :  .  force: TRUE
[10:50:49.962] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.962] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.962] |  :  .  until=2
[10:50:49.962] |  :  .  relaying element #2
[10:50:49.963] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.963] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.963] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:49.963] |  :  length: 1 (resolved future 1)
[10:50:49.964] |  checking value #1 ... done
[10:50:49.964] |  checking value #2 ...
[10:50:49.964] |  :  'obj' is MulticoreFuture
[10:50:49.958] |  :  .  |  :  .  |  :  .  List of 2
[10:50:49.958] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.958] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.958] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.958] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.958] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.958] |  :  .  |  :  .  |  :  .      ...)  
[10:50:49.958] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.958] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:49.958] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:49.958] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:49.967] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:49.967] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:49.967] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:49.967] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:49.967] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:49.968] |  :  .  |  :  .  |  List of future strategies:
[10:50:49.968] |  :  .  |  :  .  |  1. multicore:
[10:50:49.968] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:49.968] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:49.968] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:49.968] |  :  .  |  :  .  |  List of 1
[10:50:49.968] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:49.968] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:49.968] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:49.968] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.968] |  :  .  |  :  .  |      ...)  
[10:50:49.968] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.968] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.968] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:49.968] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:49.968] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:49.968] |  :  .  |  :  .  |      ...)  
[10:50:49.968] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:49.968] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:49.973] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:49.973] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:49.973] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.974] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.974] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.974] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:49.974] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:49.974] |  :  readImmediateCondition() ...
[10:50:49.974] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.974] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.975] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:49.975] |  :   - Number of RDS files: 0
[10:50:49.975] |  :  readImmediateCondition() ... DONE
[10:50:49.975] |  checking value #2 ... done
[10:50:49.985] |  Number of remaining objects: 1
[10:50:49.985] |  checking value #2 ...
[10:50:49.986] |  :  'obj' is MulticoreFuture
[10:50:49.986] |  :  readImmediateCondition() ...
[10:50:49.986] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.986] |  :   - Number of RDS files: 0
[10:50:49.986] |  :  readImmediateCondition() ... DONE
[10:50:49.986] |  :  MulticoreFuture #2
[10:50:49.986] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.986] |  :  .  nx: 2
[10:50:49.987] |  :  .  relay: TRUE
[10:50:49.987] |  :  .  stdout: TRUE
[10:50:49.987] |  :  .  signal: TRUE
[10:50:49.987] |  :  .  resignal: FALSE
[10:50:49.987] |  :  .  force: TRUE
[10:50:49.987] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:49.987] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:49.987] |  :  .  until=2
[10:50:49.987] |  :  .  relaying element #2
[10:50:49.987] |  :  .  result() for MulticoreFuture ...
[10:50:49.988] |  :  .  |  readImmediateCondition() ...
[10:50:49.988] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:49.988] |  :  .  |   - Number of RDS files: 0
[10:50:49.989] |  :  .  |  readImmediateCondition() ... DONE
[10:50:49.989] |  :  .  |  result() for MulticoreFuture ...
[10:50:49.989] |  :  .  |  result() for MulticoreFuture ... done
[10:50:49.989] |  :  .  result() for MulticoreFuture ... done
[10:50:49.989] |  :  .  result() for MulticoreFuture ...
[10:50:49.989] |  :  .  result() for MulticoreFuture ... done
[10:50:49.990] |  :  .  result() for MulticoreFuture ...
[10:50:49.990] |  :  .  result() for MulticoreFuture ... done
[10:50:49.990] |  :  .  result() for MulticoreFuture ...
[10:50:49.990] |  :  .  result() for MulticoreFuture ... done
[10:50:49.990] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.991] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.991] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.991] |  :  value(<MulticoreFuture>, ...) ...
[10:50:49.991] |  :  .  result() for MulticoreFuture ...
[10:50:49.991] |  :  .  result() for MulticoreFuture ... done
[10:50:49.991] |  :  .  result() for MulticoreFuture ...
[10:50:49.992] |  :  .  result() for MulticoreFuture ... done
[10:50:49.992] |  :  .  value: <list>
[10:50:49.992] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:49.992] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:49.992] |  :  .  nx: 2
[10:50:49.992] |  :  .  relay: TRUE
[10:50:49.992] |  :  .  stdout: TRUE
[10:50:49.993] |  :  .  signal: TRUE
[10:50:49.993] |  :  .  resignal: FALSE
[10:50:49.993] |  :  .  force: TRUE
[10:50:49.993] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.993] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.993] |  :  .  until=2
[10:50:49.994] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.994] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.994] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:49.994] |  :  length: 0 (resolved future 2)
[10:50:49.994] |  checking value #2 ... done
[10:50:49.994] |  Relaying remaining futures ...
[10:50:49.994] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:49.994] |  :  .  nx: 2
[10:50:49.995] |  :  .  relay: TRUE
[10:50:49.995] |  :  .  stdout: TRUE
[10:50:49.995] |  :  .  signal: TRUE
[10:50:49.995] |  :  .  resignal: FALSE
[10:50:49.995] |  :  .  force: TRUE
[10:50:49.995] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.995] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:49.995] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:49.996] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:49.996] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:49.996] |  Relaying remaining futures ... done
[10:50:49.996] value() on list ... done
[10:50:49.996]  - Number of value chunks collected: 2
[10:50:49.996] Resolving 2 futures (chunks) ... DONE
[10:50:49.996] Reducing values from 2 chunks ...
[10:50:49.996]  - Number of values collected after concatenation: 2
[10:50:49.996]  - Number of values expected: 2
[10:50:49.996] Reducing values from 2 chunks ... DONE
[10:50:49.997] future_mapply() ... DONE
[10:50:49.997] future_mapply() ...
[10:50:49.997] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:49.997] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:49.997] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:49.998] Number of chunks: 2
[10:50:49.998] getGlobalsAndPackagesXApply() ...
[10:50:49.998]  - future.globals: TRUE
[10:50:49.998] getGlobalsAndPackages() ...
[10:50:49.998] |  Searching for globals ...
[10:50:50.000] |  :  globals found: [1] ‘FUN’
[10:50:50.000] |  Searching for globals ... DONE
[10:50:50.000] |  Resolving globals: FALSE
[10:50:50.000] |  Search for packages associated with the globals ...
[10:50:50.001] |  :  Packages associated with globals: [0] 
[10:50:50.001] |  :  Packages: [0] 
[10:50:50.001] |  Search for packages associated with the globals ... DONE
[10:50:50.004] |  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:50.004] |  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:50.005] |  Packages after dropping 'base': [0] 
[10:50:50.005] |  globals: [1] ‘FUN’
[10:50:50.005] |  packages: [0] 
[10:50:50.005] getGlobalsAndPackages() ... done
[10:50:50.005]  - globals found/used: [n=1] ‘FUN’
[10:50:50.005]  - needed namespaces: [n=0] 
[10:50:50.005] Finding globals ... DONE
[10:50:50.006] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.006] List of 2
[10:50:50.006]  $ ...future.FUN:function (x, y)  
[10:50:50.006]  $ MoreArgs     :List of 1
[10:50:50.006]   ..$ y: int [1:2] 3 4
[10:50:50.006]  - attr(*, "where")=List of 2
[10:50:50.006]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.006]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.006]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.006]  - attr(*, "resolved")= logi FALSE
[10:50:50.006]  - attr(*, "total_size")= num NA
[10:50:50.009] Packages to be attached in all futures: [n=0] 
[10:50:50.009] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.010] Number of futures (= number of chunks): 2
[10:50:50.010] Launching 2 futures (chunks) ...
[10:50:50.010] Chunk #1 of 2 ...
[10:50:50.010]  - Finding globals in '...' for chunk #1 ...
[10:50:50.010] getGlobalsAndPackages() ...
[10:50:50.010] |  Searching for globals ...
[10:50:50.011] |  :  globals found: [0] 
[10:50:50.011] |  Searching for globals ... DONE
[10:50:50.011] |  globals: [0] <none>
[10:50:50.011] |  packages: [0] <none>
[10:50:50.011] getGlobalsAndPackages() ... done
[10:50:50.011]    + additional globals found: [n=0] 
[10:50:50.011]    + additional namespaces needed: [n=0] 
[10:50:50.011]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.012]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.012]  - seeds: <none>
[10:50:50.012]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.012] getGlobalsAndPackages() ...
[10:50:50.012] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.012] |  Resolving globals: FALSE
[10:50:50.012] |  Search for packages associated with the globals ...
[10:50:50.013] |  :  Packages associated with globals: [0] 
[10:50:50.013] |  :  Packages: [0] 
[10:50:50.013] |  Search for packages associated with the globals ... DONE
[10:50:50.013] |  Packages after dropping 'base': [0] 
[10:50:50.013] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.013] |  packages: [0] 
[10:50:50.013] getGlobalsAndPackages() ... done
[10:50:50.014] run() for Future (‘Future’) ...
[10:50:50.014] |  state: ‘created’
[10:50:50.014] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.014] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.014] |  Using MulticoreFutureBackend ...
[10:50:50.014] |  :  Launching futures ...
[10:50:50.015] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.015] |  :  .  |  getFutureData() ...
[10:50:50.015] |  :  .  |  :  getFutureCore() ...
[10:50:50.015] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.015] |  :  .  |  :  getFutureCore() ... done
[10:50:50.015] |  :  .  |  :  getFutureCapture() ...
[10:50:50.015] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.015] |  :  .  |  :  getFutureContext() ...
[10:50:50.015] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.016] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.016] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.016] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.016] |  :  .  |  :  getFutureContext() ... done
[10:50:50.016] |  :  .  |  getFutureData() ... done
[10:50:50.016] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.017] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.019] |  :  .  |  MulticoreFuture started
[10:50:50.019] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.019] |  :  Launching futures ... done
[10:50:50.019] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.019] |  :  .  |  attachPackages() ...
[10:50:50.020] |  Using MulticoreFutureBackend ... done
[10:50:50.020] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.020] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.020] Created future:
[10:50:50.020] |  :  .  |  attachPackages() ... DONE
[10:50:50.020] |  :  .  |  attachPackages() ...
[10:50:50.020] |  :  .  |  :  packages: [n=0] 
[10:50:50.021] |  :  .  |  attachPackages() ... DONE
[10:50:50.021] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.022] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.022] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.022] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.023] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.023] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.023] |  :  .  |  :  .  |  New stack:
[10:50:50.023] |  :  .  |  :  .  |  List of 1
[10:50:50.023] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.023] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.023] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.023] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.023] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.023] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.023] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.028] |  :  .  |  :  .  |  Old stack:
[10:50:50.032] readImmediateCondition() ...
[10:50:50.032]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.032]  - Number of RDS files: 0
[10:50:50.033] readImmediateCondition() ... DONE
[10:50:50.020] MulticoreFuture:
[10:50:50.020] Label: ‘future_.mapply-1’
[10:50:50.020] Expression:
[10:50:50.020] {
[10:50:50.020]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.020]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.020]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.020]         on.exit(options(oopts), add = TRUE)
[10:50:50.020]     }
[10:50:50.020]     {
[10:50:50.020]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.020]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.020]         do.call(mapply, args = args)
[10:50:50.020]     }
[10:50:50.020] }
[10:50:50.020] Lazy evaluation: FALSE
[10:50:50.020] Asynchronous evaluation: TRUE
[10:50:50.020] Local evaluation: TRUE
[10:50:50.020] Environment: R_GlobalEnv
[10:50:50.020] Capture standard output: TRUE
[10:50:50.020] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.020] Immediate condition classes: ‘immediateCondition’
[10:50:50.020] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.020] Packages: <none>
[10:50:50.020] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.020] Resolved: FALSE
[10:50:50.020] Value: <not collected>
[10:50:50.020] Conditions captured: <none>
[10:50:50.020] Early signaling: FALSE
[10:50:50.020] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.020] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.028] |  :  .  |  :  .  |  List of 1
[10:50:50.028] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.028] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.028] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.028] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.028] |  :  .  |  :  .  |      ...)  
[10:50:50.028] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.028] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.028] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.028] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.028] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.028] |  :  .  |  :  .  |      ...)  
[10:50:50.028] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.028] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.033] Chunk #1 of 2 ... DONE
[10:50:50.033] |  :  .  |  :  .  |  Not identical
[10:50:50.033] Chunk #2 of 2 ...
[10:50:50.033] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.033]  - Finding globals in '...' for chunk #2 ...
[10:50:50.034] getGlobalsAndPackages() ...
[10:50:50.034] |  Searching for globals ...
[10:50:50.034] |  :  globals found: [0] 
[10:50:50.034] |  Searching for globals ... DONE
[10:50:50.035] |  globals: [0] <none>
[10:50:50.035] |  packages: [0] <none>
[10:50:50.035] getGlobalsAndPackages() ... done
[10:50:50.035]    + additional globals found: [n=0] 
[10:50:50.035]    + additional namespaces needed: [n=0] 
[10:50:50.035]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.035]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.035]  - seeds: <none>
[10:50:50.036]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.036] getGlobalsAndPackages() ...
[10:50:50.036] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.036] |  Resolving globals: FALSE
[10:50:50.036] |  Search for packages associated with the globals ...
[10:50:50.036] |  :  Packages associated with globals: [0] 
[10:50:50.037] |  :  Packages: [0] 
[10:50:50.037] |  Search for packages associated with the globals ... DONE
[10:50:50.037] |  Packages after dropping 'base': [0] 
[10:50:50.037] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.037] |  packages: [0] 
[10:50:50.038] getGlobalsAndPackages() ... done
[10:50:50.038] run() for Future (‘Future’) ...
[10:50:50.038] |  state: ‘created’
[10:50:50.038] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.038] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.038] |  Using MulticoreFutureBackend ...
[10:50:50.039] |  :  Launching futures ...
[10:50:50.039] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.039] |  :  .  |  getFutureData() ...
[10:50:50.039] |  :  .  |  :  getFutureCore() ...
[10:50:50.039] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.039] |  :  .  |  :  getFutureCore() ... done
[10:50:50.040] |  :  .  |  :  getFutureCapture() ...
[10:50:50.040] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.040] |  :  .  |  :  getFutureContext() ...
[10:50:50.040] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.040] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.040] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.040] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.033] |  :  .  |  :  .  |  :  List of 2
[10:50:50.033] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.033] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.033] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.033] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.033] |  :  .  |  :  .  |  :      ...)  
[10:50:50.033] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.033] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.033] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.033] |  :  .  |  :  .  |  :      ...)  
[10:50:50.033] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.041] |  :  .  |  :  getFutureContext() ... done
[10:50:50.041] |  :  .  |  getFutureData() ... done
[10:50:50.041] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.041] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.041] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.041] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.042] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.042] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.042] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.042] |  :  .  |  :  .  List of future strategies:
[10:50:50.042] |  :  .  |  :  .  1. sequential:
[10:50:50.042] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.042] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.042] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.044] |  :  .  |  MulticoreFuture started
[10:50:50.044] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.045] |  :  Launching futures ... done
[10:50:50.045] |  :  .  |  attachPackages() ...
[10:50:50.045] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.045] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.045] |  Using MulticoreFutureBackend ... done
[10:50:50.046] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.046] |  :  .  |  attachPackages() ... DONE
[10:50:50.046] |  :  .  |  attachPackages() ...
[10:50:50.046] Created future:
[10:50:50.046] |  :  .  |  :  packages: [n=0] 
[10:50:50.046] |  :  .  |  attachPackages() ... DONE
[10:50:50.043] |  :  .  |  :  .  List of 1
[10:50:50.043] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.043] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.043] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.043] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.043] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.043] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.043] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.047] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.047] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.047] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.047] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.047] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.048] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.048] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.048] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.048] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.048] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.048] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.048] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.048] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.049] |  :  .  |  assign_globals() ...
[10:50:50.049] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.049] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.049] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.050] |  :  .  |  :  .  |  New stack:
[10:50:50.050] |  :  .  |  :  .  |  List of 1
[10:50:50.050] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.050] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.050] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.050] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.050] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.050] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.050] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.055] |  :  .  |  :  .  |  Old stack:
[10:50:50.049] |  :  .  |  List of 5
[10:50:50.049] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:50.049] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:50.049] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:50.049] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:50.049] |  :  .  |    ..$ x:List of 1
[10:50:50.049] |  :  .  |    .. ..$ : int 1
[10:50:50.049] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.049] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.049] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.049] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.049] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.049] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.049] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.049] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.049] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.049] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.049] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.049] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.057] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:50.057] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.057] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.057] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.057] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.057] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.057] |  :  .  |  assign_globals() ... done
[10:50:50.058] readImmediateCondition() ...
[10:50:50.059]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.059]  - Number of RDS files: 0
[10:50:50.059] readImmediateCondition() ... DONE
[10:50:50.046] MulticoreFuture:
[10:50:50.046] Label: ‘future_.mapply-2’
[10:50:50.046] Expression:
[10:50:50.046] {
[10:50:50.046]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.046]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.046]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.046]         on.exit(options(oopts), add = TRUE)
[10:50:50.046]     }
[10:50:50.046]     {
[10:50:50.046]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.046]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.046]         do.call(mapply, args = args)
[10:50:50.046]     }
[10:50:50.046] }
[10:50:50.046] Lazy evaluation: FALSE
[10:50:50.046] Asynchronous evaluation: TRUE
[10:50:50.046] Local evaluation: TRUE
[10:50:50.046] Environment: R_GlobalEnv
[10:50:50.046] Capture standard output: TRUE
[10:50:50.046] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.046] Immediate condition classes: ‘immediateCondition’
[10:50:50.046] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.046] Packages: <none>
[10:50:50.046] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.046] Resolved: FALSE
[10:50:50.046] Value: <not collected>
[10:50:50.046] Conditions captured: <none>
[10:50:50.046] Early signaling: FALSE
[10:50:50.046] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.046] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.060] Chunk #2 of 2 ... DONE
[10:50:50.060] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.060] Launching 2 futures (chunks) ... DONE
[10:50:50.060] Resolving 2 futures (chunks) ...
[10:50:50.060] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.061] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.061] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.061] value() on list ...
[10:50:50.061] |  :  .  |  :  .  |  :  New stack:
[10:50:50.061] |  recursive: 0
[10:50:50.055] |  :  .  |  :  .  |  List of 1
[10:50:50.055] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.055] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.055] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.055] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.055] |  :  .  |  :  .  |      ...)  
[10:50:50.055] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.055] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.055] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.055] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.055] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.055] |  :  .  |  :  .  |      ...)  
[10:50:50.055] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.055] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureSt[10:50:50.061] |  length: 2
rategyList" "list"
[10:50:50.061] |  
[10:50:50.061] |  :  .  |  :  .  |  Not identical
[10:50:50.062] |  Number of remaining objects: 2
[10:50:50.062] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.062] |  checking value #1 ...
[10:50:50.062] |  :  'obj' is MulticoreFuture
[10:50:50.061] |  :  .  |  :  .  |  :  List of 1
[10:50:50.061] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.061] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.061] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.061] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.061] |  :  .  |  :  .  |  :      ...)  
[10:50:50.061] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.061] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.061] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.061] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.061] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.061] |  :  .  |  :  .  |  :      ...)  
[10:50:50.061] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.061] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.066] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.062] |  :  .  |  :  .  |  :  List of 2
[10:50:50.062] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.062] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.062] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.062] |  :  .  |  :  .  |  :      ...)  
[10:50:50.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.062] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.062] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.062] |  :  .  |  :  .  |  :      ...)  
[10:50:50.062] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.066] |  :  .  |  :  .  |  :  List of 1
[10:50:50.066] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.066] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.066] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.066] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.066] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.066] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.066] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.069] |  :  .  |  :  .  |  :  Not identical
[10:50:50.069] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.069] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.069] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.070] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.070] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.070] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.070] |  :  .  |  :  .  List of future strategies:
[10:50:50.070] |  :  .  |  :  .  1. sequential:
[10:50:50.070] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.070] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.070] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.072] |  :  readImmediateCondition() ...
[10:50:50.073] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.073] |  :   - Number of RDS files: 0
[10:50:50.073] |  :  readImmediateCondition() ... DONE
[10:50:50.073] |  checking value #1 ... done
[10:50:50.074] |  checking value #2 ...
[10:50:50.074] |  :  'obj' is MulticoreFuture
[10:50:50.069] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.069] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.069] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.069] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.069] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.069] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.069] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.069] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.069] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.069] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.069] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.071] |  :  .  |  :  .  List of 1
[10:50:50.071] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.071] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.071] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.071] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.071] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.071] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.071] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.075] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.075] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.075] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.075] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.076] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.076] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.076] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.076] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.076] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.076] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.076] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.076] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.076] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.076] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.076] |  :  .  |  :  .  |  1. multicore:
[10:50:50.076] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.076] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.076] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.076] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.077] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.077] |  :  .  |  assign_globals() ...
[10:50:50.076] |  :  .  |  :  .  |  List of 1
[10:50:50.076] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.076] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.076] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.076] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.076] |  :  .  |  :  .  |      ...)  
[10:50:50.076] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.076] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.076] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.076] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.076] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.076] |  :  .  |  :  .  |      ...)  
[10:50:50.076] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.076] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.081] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.081] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.081] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.081] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.081] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.081] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.082] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.082] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.082] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.084] |  :  readImmediateCondition() ...
[10:50:50.077] |  :  .  |  List of 5
[10:50:50.077] |  :  .  |   $ ...future.FUN            :function (x, y)  
[10:50:50.077] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:50.077] |  :  .  |    ..$ y: int [1:2] 3 4
[10:50:50.077] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:50.077] |  :  .  |    ..$ x:List of 1
[10:50:50.077] |  :  .  |    .. ..$ : int 2
[10:50:50.077] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.077] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.077] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.077] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.077] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.077] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.077] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.077] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.077] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.077] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.077] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.077] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.085] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.085] |  :  .  |  - reassign environment for ‘...future.FUN’ [where=emptyenv()]
[10:50:50.085] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.085] |  :   - Number of RDS files: 0
[10:50:50.085] |  :  readImmediateCondition() ... DONE
[10:50:50.085] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.085] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.085] |  checking value #2 ... done
[10:50:50.086] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.086] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.086] |  :  .  |  assign_globals() ... done
[10:50:50.089] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.089] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.089] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.089] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.089] |  :  .  |  :  .  |  :  New stack:
[10:50:50.089] |  :  .  |  :  .  |  :  List of 1
[10:50:50.089] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.089] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.089] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.089] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.089] |  :  .  |  :  .  |  :      ...)  
[10:50:50.089] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.089] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.089] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.089] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.089] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.089] |  :  .  |  :  .  |  :      ...)  
[10:50:50.089] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.089] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.093] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.096] |  Number of remaining objects: 2
[10:50:50.096] |  checking value #1 ...
[10:50:50.096] |  :  'obj' is MulticoreFuture
[10:50:50.096] |  :  readImmediateCondition() ...
[10:50:50.097] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.094] |  :  .  |  :  .  |  :  List of 1
[10:50:50.094] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.094] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.094] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.094] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.094] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.094] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.094] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.097] |  :   - Number of RDS files: 0
[10:50:50.097] |  :  .  |  :  .  |  :  Not identical
[10:50:50.097] |  :  readImmediateCondition() ... DONE
[10:50:50.097] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.097] |  :  MulticoreFuture #1
[10:50:50.097] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.098] |  :  .  nx: 2
[10:50:50.098] |  :  .  relay: TRUE
[10:50:50.098] |  :  .  stdout: TRUE
[10:50:50.098] |  :  .  signal: TRUE
[10:50:50.098] |  :  .  resignal: FALSE
[10:50:50.099] |  :  .  force: TRUE
[10:50:50.099] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.099] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.099] |  :  .  until=1
[10:50:50.099] |  :  .  relaying element #1
[10:50:50.100] |  :  .  result() for MulticoreFuture ...
[10:50:50.101] |  :  .  |  readImmediateCondition() ...
[10:50:50.101] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.101] |  :  .  |   - Number of RDS files: 0
[10:50:50.101] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.102] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.102] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.102] |  :  .  result() for MulticoreFuture ... done
[10:50:50.103] |  :  .  result() for MulticoreFuture ...
[10:50:50.103] |  :  .  result() for MulticoreFuture ... done
[10:50:50.103] |  :  .  result() for MulticoreFuture ...
[10:50:50.103] |  :  .  result() for MulticoreFuture ... done
[10:50:50.104] |  :  .  result() for MulticoreFuture ...
[10:50:50.104] |  :  .  result() for MulticoreFuture ... done
[10:50:50.104] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.104] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.104] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.105] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.105] |  :  .  result() for MulticoreFuture ...
[10:50:50.105] |  :  .  result() for MulticoreFuture ... done
[10:50:50.105] |  :  .  result() for MulticoreFuture ...
[10:50:50.105] |  :  .  result() for MulticoreFuture ... done
[10:50:50.106] |  :  .  value: <list>
[10:50:50.106] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.106] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.106] |  :  .  nx: 2
[10:50:50.097] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.097] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.097] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.097] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.097] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' [10:50:50.106] |  :  .  relay: TRUE
<environment: 0x55f1c6ab7c88> 
[10:50:50.097] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.097] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.097] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.097] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.097] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.097] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.107] |  :  .  stdout: TRUE
[10:50:50.107] |  :  .  signal: TRUE
[10:50:50.107] |  :  .  resignal: FALSE
[10:50:50.107] |  :  .  force: TRUE
[10:50:50.107] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.107] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.107] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.107] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.107] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.107] |  :  .  until=2
[10:50:50.108] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.108] |  :  .  relaying element #2
[10:50:50.108] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.108] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.108] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.108] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.108] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.108] |  :  .  |  :  .  |  1. multicore:
[10:50:50.108] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.108] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.108] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.108] |  :  length: 1 (resolved future 1)
[10:50:50.108] |  checking value #1 ... done
[10:50:50.108] |  checking value #2 ...
[10:50:50.109] |  :  'obj' is MulticoreFuture
[10:50:50.108] |  :  .  |  :  .  |  List of 1
[10:50:50.108] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.108] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.108] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.108] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.108] |  :  .  |  :  .  |      ...)  
[10:50:50.108] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.108] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.108] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.108] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.108] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.108] |  :  .  |  :  .  |      ...)  
[10:50:50.108] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.108] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.112] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.113] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.113] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.113] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.113] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.113] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.114] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.114] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.114] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.114] |  :  readImmediateCondition() ...
[10:50:50.114] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.115] |  :   - Number of RDS files: 0
[10:50:50.115] |  :  readImmediateCondition() ... DONE
[10:50:50.115] |  :  MulticoreFuture #2
[10:50:50.115] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.115] |  :  .  nx: 2
[10:50:50.115] |  :  .  relay: TRUE
[10:50:50.115] |  :  .  stdout: TRUE
[10:50:50.115] |  :  .  signal: TRUE
[10:50:50.115] |  :  .  resignal: FALSE
[10:50:50.116] |  :  .  force: TRUE
[10:50:50.116] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.116] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.116] |  :  .  until=2
[10:50:50.116] |  :  .  relaying element #2
[10:50:50.116] |  :  .  result() for MulticoreFuture ...
[10:50:50.117] |  :  .  |  readImmediateCondition() ...
[10:50:50.117] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.117] |  :  .  |   - Number of RDS files: 0
[10:50:50.117] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.117] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.117] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.118] |  :  .  result() for MulticoreFuture ... done
[10:50:50.118] |  :  .  result() for MulticoreFuture ...
[10:50:50.118] |  :  .  result() for MulticoreFuture ... done
[10:50:50.118] |  :  .  result() for MulticoreFuture ...
[10:50:50.118] |  :  .  result() for MulticoreFuture ... done
[10:50:50.118] |  :  .  result() for MulticoreFuture ...
[10:50:50.118] |  :  .  result() for MulticoreFuture ... done
[10:50:50.118] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.119] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.119] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.119] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.119] |  :  .  result() for MulticoreFuture ...
[10:50:50.119] |  :  .  result() for MulticoreFuture ... done
[10:50:50.119] |  :  .  result() for MulticoreFuture ...
[10:50:50.119] |  :  .  result() for MulticoreFuture ... done
[10:50:50.119] |  :  .  value: <list>
[10:50:50.120] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.120] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.120] |  :  .  nx: 2
[10:50:50.120] |  :  .  relay: TRUE
[10:50:50.120] |  :  .  stdout: TRUE
[10:50:50.120] |  :  .  signal: TRUE
[10:50:50.120] |  :  .  resignal: FALSE
[10:50:50.120] |  :  .  force: TRUE
[10:50:50.120] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.120] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.121] |  :  .  until=2
[10:50:50.121] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.121] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.121] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.121] |  :  length: 0 (resolved future 2)
[10:50:50.121] |  checking value #2 ... done
[10:50:50.121] |  Relaying remaining futures ...
[10:50:50.121] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.122] |  :  .  nx: 2
[10:50:50.122] |  :  .  relay: TRUE
[10:50:50.122] |  :  .  stdout: TRUE
[10:50:50.122] |  :  .  signal: TRUE
[10:50:50.122] |  :  .  resignal: FALSE
[10:50:50.122] |  :  .  force: TRUE
[10:50:50.122] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.122] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.122] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.123] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.123] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.123] |  Relaying remaining futures ... done
[10:50:50.123] value() on list ... done
[10:50:50.123]  - Number of value chunks collected: 2
[10:50:50.123] Resolving 2 futures (chunks) ... DONE
[10:50:50.123] Reducing values from 2 chunks ...
[10:50:50.123]  - Number of values collected after concatenation: 2
[10:50:50.123]  - Number of values expected: 2
[10:50:50.123] Reducing values from 2 chunks ... DONE
[10:50:50.124] future_mapply() ... DONE
- Recycle arguments to same length ...
[10:50:50.124] future_mapply() ...
[10:50:50.124] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.124] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.124] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.125] Number of chunks: 2
[10:50:50.125] getGlobalsAndPackagesXApply() ...
[10:50:50.125]  - future.globals: TRUE
[10:50:50.125] getGlobalsAndPackages() ...
[10:50:50.125] |  Searching for globals ...
[10:50:50.126] |  :  globals found: [1] ‘FUN’
[10:50:50.126] |  Searching for globals ... DONE
[10:50:50.127] |  Resolving globals: FALSE
[10:50:50.127] |  Search for packages associated with the globals ...
[10:50:50.127] |  :  Packages associated with globals: [0] 
[10:50:50.127] |  :  Packages: [0] 
[10:50:50.127] |  Search for packages associated with the globals ... DONE
[10:50:50.127] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:50.128] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:50.128] |  Packages after dropping 'base': [0] 
[10:50:50.128] |  globals: [1] ‘FUN’
[10:50:50.128] |  packages: [0] 
[10:50:50.128] getGlobalsAndPackages() ... done
[10:50:50.128]  - globals found/used: [n=1] ‘FUN’
[10:50:50.129]  - needed namespaces: [n=0] 
[10:50:50.129] Finding globals ... DONE
[10:50:50.129] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.129] List of 2
[10:50:50.129]  $ ...future.FUN:function (x, ...)  
[10:50:50.129]  $ MoreArgs     : NULL
[10:50:50.129]  - attr(*, "where")=List of 2
[10:50:50.129]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.129]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.129]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.129]  - attr(*, "resolved")= logi FALSE
[10:50:50.129]  - attr(*, "total_size")= num NA
[10:50:50.132] Packages to be attached in all futures: [n=0] 
[10:50:50.133] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.133] Number of futures (= number of chunks): 2
[10:50:50.133] Launching 2 futures (chunks) ...
[10:50:50.133] Chunk #1 of 2 ...
[10:50:50.133]  - Finding globals in '...' for chunk #1 ...
[10:50:50.133] getGlobalsAndPackages() ...
[10:50:50.133] |  Searching for globals ...
[10:50:50.134] |  :  globals found: [0] 
[10:50:50.134] |  Searching for globals ... DONE
[10:50:50.134] |  globals: [0] <none>
[10:50:50.134] |  packages: [0] <none>
[10:50:50.134] getGlobalsAndPackages() ... done
[10:50:50.134]    + additional globals found: [n=0] 
[10:50:50.134]    + additional namespaces needed: [n=0] 
[10:50:50.135]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.135]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.135]  - seeds: <none>
[10:50:50.135]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.135] getGlobalsAndPackages() ...
[10:50:50.135] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.135] |  Resolving globals: FALSE
[10:50:50.135] |  Search for packages associated with the globals ...
[10:50:50.136] |  :  Packages associated with globals: [0] 
[10:50:50.136] |  :  Packages: [0] 
[10:50:50.136] |  Search for packages associated with the globals ... DONE
[10:50:50.136] |  Packages after dropping 'base': [0] 
[10:50:50.136] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.136] |  packages: [0] 
[10:50:50.137] getGlobalsAndPackages() ... done
[10:50:50.137] run() for Future (‘Future’) ...
[10:50:50.137] |  state: ‘created’
[10:50:50.137] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.137] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.137] |  Using MulticoreFutureBackend ...
[10:50:50.137] |  :  Launching futures ...
[10:50:50.138] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.138] |  :  .  |  getFutureData() ...
[10:50:50.138] |  :  .  |  :  getFutureCore() ...
[10:50:50.138] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.138] |  :  .  |  :  getFutureCore() ... done
[10:50:50.138] |  :  .  |  :  getFutureCapture() ...
[10:50:50.138] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.138] |  :  .  |  :  getFutureContext() ...
[10:50:50.138] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.139] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.139] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.139] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.139] |  :  .  |  :  getFutureContext() ... done
[10:50:50.139] |  :  .  |  getFutureData() ... done
[10:50:50.139] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.140] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.142] |  :  .  |  MulticoreFuture started
[10:50:50.142] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.142] |  :  .  |  attachPackages() ...
[10:50:50.142] |  :  Launching futures ... done
[10:50:50.143] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.143] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.143] |  Using MulticoreFutureBackend ... done
[10:50:50.143] |  :  .  |  attachPackages() ... DONE
[10:50:50.143] |  :  .  |  attachPackages() ...
[10:50:50.143] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.143] |  :  .  |  :  packages: [n=0] 
[10:50:50.143] Created future:
[10:50:50.143] |  :  .  |  attachPackages() ... DONE
[10:50:50.144] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.145] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.145] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.145] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.146] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.146] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.146] |  :  .  |  :  .  |  New stack:
[10:50:50.146] |  :  .  |  :  .  |  List of 1
[10:50:50.146] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.146] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.146] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.146] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.146] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.146] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.146] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.150] |  :  .  |  :  .  |  Old stack:
[10:50:50.150] |  :  .  |  :  .  |  List of 1
[10:50:50.150] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.150] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.150] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.150] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.150] |  :  .  |  :  .  |      ...)  
[10:50:50.150] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.150] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.150] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.150] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.150] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.150] |  :  .  |  :  .  |      ...)  
[10:50:50.150] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.150] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.154] |  :  .  |  :  .  |  Not identical
[10:50:50.154] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.155] readImmediateCondition() ...
[10:50:50.155]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.156]  - Number of RDS files: 0
[10:50:50.156] readImmediateCondition() ... DONE
[10:50:50.143] MulticoreFuture:
[10:50:50.143] Label: ‘future_mapply-1’
[10:50:50.143] Expression:
[10:50:50.143] {
[10:50:50.143]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.143]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.143]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.143]         on.exit(options(oopts), add = TRUE)
[10:50:50.143]     }
[10:50:50.143]     {
[10:50:50.143]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.143]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.143]         do.call(mapply, args = args)
[10:50:50.143]     }
[10:50:50.143] }
[10:50:50.143] Lazy evaluation: FALSE
[10:50:50.143] Asynchronous evaluation: TRUE
[10:50:50.143] Local evaluation: TRUE
[10:50:50.143] Environment: R_GlobalEnv
[10:50:50.143] Capture standard output: TRUE
[10:50:50.143] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.143] Immediate condition classes: ‘immediateCondition’
[10:50:50.143] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.143] Packages: <none>
[10:50:50.143] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.143] Resolved: FALSE
[10:50:50.143] Value: <not collected>
[10:50:50.143] Conditions captured: <none>
[10:50:50.143] Early signaling: FALSE
[10:50:50.143] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.143] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.156] Chunk #1 of 2 ... DONE
[10:50:50.156] Chunk #2 of 2 ...
[10:50:50.157]  - Finding globals in '...' for chunk #2 ...
[10:50:50.157] getGlobalsAndPackages() ...
[10:50:50.157] |  Searching for globals ...
[10:50:50.157] |  :  globals found: [0] 
[10:50:50.157] |  Searching for globals ... DONE
[10:50:50.158] |  globals: [0] <none>
[10:50:50.158] |  packages: [0] <none>
[10:50:50.158] getGlobalsAndPackages() ... done
[10:50:50.158]    + additional globals found: [n=0] 
[10:50:50.158]    + additional namespaces needed: [n=0] 
[10:50:50.158]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.158]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.158]  - seeds: <none>
[10:50:50.158]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.159] getGlobalsAndPackages() ...
[10:50:50.159] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.159] |  Resolving globals: FALSE
[10:50:50.159] |  Search for packages associated with the globals ...
[10:50:50.159] |  :  Packages associated with globals: [0] 
[10:50:50.160] |  :  Packages: [0] 
[10:50:50.160] |  Search for packages associated with the globals ... DONE
[10:50:50.154] |  :  .  |  :  .  |  :  List of 2
[10:50:50.154] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.154] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.154] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.154] |  :  .  |  :  .  |  :      ...)  
[10:50:50.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.154] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.154] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.154] |  :  .  |  :  .  |  :      ...)  
[10:50:50.154] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.160] |  Packages after dropping 'base': [0] 
[10:50:50.160] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.160] |  packages: [0] 
[10:50:50.160] getGlobalsAndPackages() ... done
[10:50:50.161] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.161] run() for Future (‘Future’) ...
[10:50:50.161] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.161] |  state: ‘created’
[10:50:50.161] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.161] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.161] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.161] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.161] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.161] |  Using MulticoreFutureBackend ...
[10:50:50.161] |  :  Launching futures ...
[10:50:50.162] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.162] |  :  .  |  getFutureData() ...
[10:50:50.162] |  :  .  |  :  getFutureCore() ...
[10:50:50.161] |  :  .  |  :  .  List of future strategies:
[10:50:50.161] |  :  .  |  :  .  1. sequential:
[10:50:50.161] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.161] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.161] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.162] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.162] |  :  .  |  :  getFutureCore() ... done
[10:50:50.162] |  :  .  |  :  getFutureCapture() ...
[10:50:50.162] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.162] |  :  .  |  :  getFutureContext() ...
[10:50:50.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.163] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.163] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.163] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.163] |  :  .  |  :  getFutureContext() ... done
[10:50:50.163] |  :  .  |  getFutureData() ... done
[10:50:50.163] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.164] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.162] |  :  .  |  :  .  List of 1
[10:50:50.162] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.162] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.162] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.162] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.162] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.162] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.162] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.165] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.165] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.165] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.166] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.166] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.166] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.166] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.166] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.167] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.167] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.166] |  :  .  |  MulticoreFuture started
[10:50:50.167] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.167] |  :  .  |  assign_globals() ...
[10:50:50.167] |  :  Launching futures ... done
[10:50:50.167] |  :  .  |  attachPackages() ...
[10:50:50.167] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.168] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.168] |  Using MulticoreFutureBackend ... done
[10:50:50.168] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.168] |  :  .  |  attachPackages() ... DONE
[10:50:50.168] Created future:
[10:50:50.168] |  :  .  |  attachPackages() ...
[10:50:50.168] |  :  .  |  :  packages: [n=0] 
[10:50:50.169] |  :  .  |  attachPackages() ... DONE
[10:50:50.170] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.170] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.171] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.171] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.171] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.172] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.172] |  :  .  |  :  .  |  New stack:
[10:50:50.172] |  :  .  |  :  .  |  List of 1
[10:50:50.172] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.172] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.172] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.172] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.172] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.172] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.172] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.176] |  :  .  |  :  .  |  Old stack:
[10:50:50.167] |  :  .  |  List of 5
[10:50:50.167] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:50.167] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.167] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.167] |  :  .  |    ..$ :List of 2
[10:50:50.167] |  :  .  |    .. ..$ : int 1
[10:50:50.167] |  :  .  |    .. ..$ : int 2
[10:50:50.167] |  :  .  |    ..$ :List of 2
[10:50:50.167] |  :  .  |    .. ..$ : int 2
[10:50:50.167] |  :  .  |    .. ..$ : int 1
[10:50:50.167] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.167] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.167] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.167] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.167] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.167] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.167] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.167] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.167] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.167] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.167] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.167] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.176] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.176] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.176] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.176] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.176] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.177] |  :  .  |  assign_globals() ... done
[10:50:50.180] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.180] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.176] |  :  .  |  :  .  |  List of 1
[10:50:50.176] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.176] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.176] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.176] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.176] |  :  .  |  :  .  |      ...)  
[10:50:50.176] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.176] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.176] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.176] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.176] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.176] |  :  .  |  :  .  |      ...)  
[10:50:50.176] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.176] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.180] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.180] |  :  .  |  :  .  |  Not identical
[10:50:50.180] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.180] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.180] |  :  .  |  :  .  |  :  New stack:
[10:50:50.181] readImmediateCondition() ...
[10:50:50.181]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.181]  - Number of RDS files: 0
[10:50:50.181] readImmediateCondition() ... DONE
[10:50:50.168] MulticoreFuture:
[10:50:50.168] Label: ‘future_mapply-2’
[10:50:50.168] Expression:
[10:50:50.168] {
[10:50:50.168]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.168]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.168]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.168]         on.exit(options(oopts), add = TRUE)
[10:50:50.168]     }
[10:50:50.168]     {
[10:50:50.168]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.168]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.168]         do.call(mapply, args = args)
[10:50:50.168]     }
[10:50:50.168] }
[10:50:50.168] Lazy evaluation: FALSE
[10:50:50.168] Asynchronous evaluation: TRUE
[10:50:50.168] Local evaluation: TRUE
[10:50:50.168] Environment: R_GlobalEnv
[10:50:50.168] Capture standard output: TRUE
[10:50:50.168] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.168] Immediate condition classes: ‘immediateCondition’
[10:50:50.168] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.168] Packages: <none>
[10:50:50.168] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.168] Resolved: FALSE
[10:50:50.168] Value: <not collected>
[10:50:50.168] Conditions captured: <none>
[10:50:50.168] Early signaling: FALSE
[10:50:50.168] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.168] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.182] Chunk #2 of 2 ... DONE
[10:50:50.182] Launching 2 futures (chunks) ... DONE
[10:50:50.182] Resolving 2 futures (chunks) ...
[10:50:50.183] value() on list ...
[10:50:50.183] |  recursive: 0
[10:50:50.183] |  length: 2
[10:50:50.183] |  
[10:50:50.183] |  Number of remaining objects: 2
[10:50:50.184] |  checking value #1 ...
[10:50:50.184] |  :  'obj' is MulticoreFuture
[10:50:50.180] |  :  .  |  :  .  |  :  List of 2
[10:50:50.180] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.180] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.180] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.180] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.180] |  :  .  |  :  .  |  :      ...)  
[10:50:50.180] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.180] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.180] |  :  .  |  :  .  |  :      ...)  
[10:50:50.180] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.188] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.188] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.188] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.189] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.189] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.189] |  :  .  |  :  .  List of future strategies:
[10:50:50.189] |  :  .  |  :  .  1. sequential:
[10:50:50.189] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.189] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.189] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.180] |  :  .  |  :  .  |  :  List of 1
[10:50:50.180] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.180] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.180] |  :  .  |  :  .  |  :      ...)  
[10:50:50.180] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.180] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.180] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.180] |  :  .  |  :  .  |  :      ...)  
[10:50:50.180] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.180] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.190] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.190] |  :  .  |  :  .  List of 1
[10:50:50.190] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.190] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.190] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.190] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.190] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.190] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.190] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.193] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.193] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.190] |  :  .  |  :  .  |  :  List of 1
[10:50:50.190] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.190] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.190] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.190] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.190] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.190] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.190] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.193] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.193] |  :  .  |  :  .  |  :  Not identical
[10:50:50.193] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.193] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.193] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.193] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.194] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.194] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.194] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.194] |  :  readImmediateCondition() ...
[10:50:50.194] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.194] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.195] |  :   - Number of RDS files: 0
[10:50:50.195] |  :  .  |  assign_globals() ...
[10:50:50.195] |  :  readImmediateCondition() ... DONE
[10:50:50.195] |  checking value #1 ... done
[10:50:50.195] |  checking value #2 ...
[10:50:50.195] |  :  'obj' is MulticoreFuture
[10:50:50.193] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.193] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.193] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.193] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.193] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.193] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.193] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.193] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.193] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.193] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.193] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.200] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.200] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.200] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.200] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.201] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.201] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.201] |  :  .  |  :  .  |  1. multicore:
[10:50:50.201] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.201] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.201] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.201] |  :  .  |  :  .  |  List of 1
[10:50:50.201] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.201] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.201] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.201] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.201] |  :  .  |  :  .  |      ...)  
[10:50:50.201] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.201] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.201] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.201] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.201] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.201] |  :  .  |  :  .  |      ...)  
[10:50:50.201] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.201] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.206] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.206] |  :  readImmediateCondition() ...
[10:50:50.206] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.206] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.206] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.206] |  :   - Number of RDS files: 0
[10:50:50.206] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.206] |  :  readImmediateCondition() ... DONE
[10:50:50.206] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.207] |  checking value #2 ... done
[10:50:50.207] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.207] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.207] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.207] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.195] |  :  .  |  List of 5
[10:50:50.195] |  :  .  |   $ ...future.FUN            :function (x, ...)  
[10:50:50.195] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.195] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.195] |  :  .  |    ..$ :List of 2
[10:50:50.195] |  :  .  |    .. ..$ : int 3
[10:50:50.195] |  :  .  |    .. ..$ : int 4
[10:50:50.195] |  :  .  |    ..$ :List of 2
[10:50:50.195] |  :  .  |    .. ..$ : int 2
[10:50:50.195] |  :  .  |    .. ..$ : int 1
[10:50:50.195] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.195] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.195] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.195] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.195] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.195] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.195] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.195] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.195] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.195] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.195] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.195] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.210] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.210] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.210] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.210] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.210] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.210] |  :  .  |  assign_globals() ... done
[10:50:50.213] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.213] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.213] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.214] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.214] |  :  .  |  :  .  |  :  New stack:
[10:50:50.217] |  Number of remaining objects: 2
[10:50:50.217] |  checking value #1 ...
[10:50:50.217] |  :  'obj' is MulticoreFuture
[10:50:50.218] |  :  readImmediateCondition() ...
[10:50:50.218] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.218] |  :   - Number of RDS files: 0
[10:50:50.218] |  :  readImmediateCondition() ... DONE
[10:50:50.218] |  :  MulticoreFuture #1
[10:50:50.219] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.219] |  :  .  nx: 2
[10:50:50.219] |  :  .  relay: TRUE
[10:50:50.214] |  :  .  |  :  .  |  :  List of 1
[10:50:50.214] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.214] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.214] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.214] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.214] |  :  .  |  :  .  |  :      ...)  
[10:50:50.214] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.214] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.214] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.214] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.214] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.214] |  :  .  |  :  .  |  :      ...)  
[10:50:50.214] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.214] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.219] |  :  .  stdout: TRUE
[10:50:50.219] |  :  .  signal: TRUE
[10:50:50.219] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.219] |  :  .  resignal: FALSE
[10:50:50.220] |  :  .  force: TRUE
[10:50:50.220] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.220] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.220] |  :  .  until=1
[10:50:50.220] |  :  .  relaying element #1
[10:50:50.221] |  :  .  result() for MulticoreFuture ...
[10:50:50.222] |  :  .  |  readImmediateCondition() ...
[10:50:50.222] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.222] |  :  .  |   - Number of RDS files: 0
[10:50:50.222] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.223] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.223] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.223] |  :  .  result() for MulticoreFuture ... done
[10:50:50.223] |  :  .  result() for MulticoreFuture ...
[10:50:50.223] |  :  .  result() for MulticoreFuture ... done
[10:50:50.224] |  :  .  result() for MulticoreFuture ...
[10:50:50.224] |  :  .  result() for MulticoreFuture ... done
[10:50:50.224] |  :  .  result() for MulticoreFuture ...
[10:50:50.219] |  :  .  |  :  .  |  :  List of 1
[10:50:50.219] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.219] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.219] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.219] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.219] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.219] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.219] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.224] |  :  .  result() for MulticoreFuture ... done
[10:50:50.224] |  :  .  |  :  .  |  :  Not identical
[10:50:50.225] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.225] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.225] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.225] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.225] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.225] |  :  .  result() for MulticoreFuture ...
[10:50:50.226] |  :  .  result() for MulticoreFuture ... done
[10:50:50.226] |  :  .  result() for MulticoreFuture ...
[10:50:50.226] |  :  .  result() for MulticoreFuture ... done
[10:50:50.226] |  :  .  value: <list>
[10:50:50.226] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.227] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.227] |  :  .  nx: 2
[10:50:50.227] |  :  .  relay: TRUE
[10:50:50.227] |  :  .  stdout: TRUE
[10:50:50.227] |  :  .  signal: TRUE
[10:50:50.227] |  :  .  resignal: FALSE
[10:50:50.228] |  :  .  force: TRUE
[10:50:50.228] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.228] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.228] |  :  .  until=2
[10:50:50.228] |  :  .  relaying element #2
[10:50:50.228] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.229] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.229] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.229] |  :  length: 1 (resolved future 1)
[10:50:50.229] |  checking value #1 ... done
[10:50:50.229] |  checking value #2 ...
[10:50:50.230] |  :  'obj' is MulticoreFuture
[10:50:50.225] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.225] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.225] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.225] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.225] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.225] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.225] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.225] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.225] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.225] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.225] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.234] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.234] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.234] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.234] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.234] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.235] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.235] |  :  .  |  :  .  |  1. multicore:
[10:50:50.235] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.235] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.235] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.235] |  :  .  |  :  .  |  List of 1
[10:50:50.235] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.235] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.235] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.235] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.235] |  :  .  |  :  .  |      ...)  
[10:50:50.235] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.235] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.235] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.235] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.235] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.235] |  :  .  |  :  .  |      ...)  
[10:50:50.235] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.235] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.240] |  :  readImmediateCondition() ...
[10:50:50.240] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.240] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.240] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.240] |  :   - Number of RDS files: 0
[10:50:50.241] |  :  readImmediateCondition() ... DONE
[10:50:50.241] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.241] |  checking value #2 ... done
[10:50:50.241] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.241] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.241] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.241] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.242] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.242] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.251] |  Number of remaining objects: 1
[10:50:50.251] |  checking value #2 ...
[10:50:50.251] |  :  'obj' is MulticoreFuture
[10:50:50.252] |  :  readImmediateCondition() ...
[10:50:50.252] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.252] |  :   - Number of RDS files: 0
[10:50:50.252] |  :  readImmediateCondition() ... DONE
[10:50:50.252] |  :  MulticoreFuture #2
[10:50:50.252] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.252] |  :  .  nx: 2
[10:50:50.252] |  :  .  relay: TRUE
[10:50:50.252] |  :  .  stdout: TRUE
[10:50:50.253] |  :  .  signal: TRUE
[10:50:50.253] |  :  .  resignal: FALSE
[10:50:50.253] |  :  .  force: TRUE
[10:50:50.253] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.253] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.253] |  :  .  until=2
[10:50:50.253] |  :  .  relaying element #2
[10:50:50.253] |  :  .  result() for MulticoreFuture ...
[10:50:50.254] |  :  .  |  readImmediateCondition() ...
[10:50:50.254] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.254] |  :  .  |   - Number of RDS files: 0
[10:50:50.254] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.255] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.255] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.255] |  :  .  result() for MulticoreFuture ... done
[10:50:50.255] |  :  .  result() for MulticoreFuture ...
[10:50:50.255] |  :  .  result() for MulticoreFuture ... done
[10:50:50.256] |  :  .  result() for MulticoreFuture ...
[10:50:50.256] |  :  .  result() for MulticoreFuture ... done
[10:50:50.256] |  :  .  result() for MulticoreFuture ...
[10:50:50.256] |  :  .  result() for MulticoreFuture ... done
[10:50:50.256] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.256] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.257] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.257] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.257] |  :  .  result() for MulticoreFuture ...
[10:50:50.257] |  :  .  result() for MulticoreFuture ... done
[10:50:50.257] |  :  .  result() for MulticoreFuture ...
[10:50:50.257] |  :  .  result() for MulticoreFuture ... done
[10:50:50.258] |  :  .  value: <list>
[10:50:50.258] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.258] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.258] |  :  .  nx: 2
[10:50:50.258] |  :  .  relay: TRUE
[10:50:50.258] |  :  .  stdout: TRUE
[10:50:50.258] |  :  .  signal: TRUE
[10:50:50.259] |  :  .  resignal: FALSE
[10:50:50.259] |  :  .  force: TRUE
[10:50:50.259] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.259] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.259] |  :  .  until=2
[10:50:50.259] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.259] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.260] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.260] |  :  length: 0 (resolved future 2)
[10:50:50.260] |  checking value #2 ... done
[10:50:50.260] |  Relaying remaining futures ...
[10:50:50.260] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.260] |  :  .  nx: 2
[10:50:50.261] |  :  .  relay: TRUE
[10:50:50.261] |  :  .  stdout: TRUE
[10:50:50.261] |  :  .  signal: TRUE
[10:50:50.261] |  :  .  resignal: FALSE
[10:50:50.261] |  :  .  force: TRUE
[10:50:50.261] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.261] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.261] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.261] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.262] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.262] |  Relaying remaining futures ... done
[10:50:50.262] value() on list ... done
[10:50:50.262]  - Number of value chunks collected: 2
[10:50:50.262] Resolving 2 futures (chunks) ... DONE
[10:50:50.262] Reducing values from 2 chunks ...
[10:50:50.262]  - Number of values collected after concatenation: 4
[10:50:50.262]  - Number of values expected: 4
[10:50:50.262] Reducing values from 2 chunks ... DONE
[10:50:50.263] future_mapply() ... DONE
- Parallel RNG ...
[10:50:50.263] future_mapply() ...
[10:50:50.263] Generating random seeds ...
[10:50:50.263] Generating random seed streams for 4 elements ...
[10:50:50.266] Generating random seed streams for 4 elements ... DONE
[10:50:50.266] Generating random seeds ... DONE
[10:50:50.266] Will set RNG state on exit: 10407, -1043797267, -1452188293, -2014504606, 421784323, -1161187911, -2067136920
[10:50:50.267] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.267] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.267] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.268] Number of chunks: 2
[10:50:50.268] getGlobalsAndPackagesXApply() ...
[10:50:50.268]  - future.globals: TRUE
[10:50:50.268] getGlobalsAndPackages() ...
[10:50:50.268] |  Searching for globals ...
[10:50:50.270] |  :  globals found: [3] ‘FUN’, ‘.Call’, ‘C_runif’
[10:50:50.270] |  Searching for globals ... DONE
[10:50:50.270] |  Resolving globals: FALSE
[10:50:50.270] |  Search for packages associated with the globals ...
[10:50:50.271] |  :  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:50.271] |  :  Packages: [2] ‘stats’, ‘base’
[10:50:50.271] |  Search for packages associated with the globals ... DONE
[10:50:50.271] |  The total size of the 1 globals is 501 bytes (501 bytes)
[10:50:50.272] |  The total size of the 1 globals exported for future expression (‘FUN(min = 1)’) is 501 bytes There is one global: ‘FUN’ (501 bytes of class ‘function’)
[10:50:50.272] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.272] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.272] |  globals: [1] ‘FUN’
[10:50:50.272] |  packages: [1] ‘stats’
[10:50:50.272] getGlobalsAndPackages() ... done
[10:50:50.273]  - globals found/used: [n=1] ‘FUN’
[10:50:50.273]  - needed namespaces: [n=1] ‘stats’
[10:50:50.273] Finding globals ... DONE
[10:50:50.273] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.273] List of 2
[10:50:50.273]  $ ...future.FUN:function (n, min = 0, max = 1)  
[10:50:50.273]  $ MoreArgs     :List of 1
[10:50:50.273]   ..$ min: num 1
[10:50:50.273]  - attr(*, "where")=List of 2
[10:50:50.273]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.273]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.273]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.273]  - attr(*, "resolved")= logi FALSE
[10:50:50.273]  - attr(*, "total_size")= num NA
[10:50:50.277] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:50.277] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.277] Number of futures (= number of chunks): 2
[10:50:50.277] Launching 2 futures (chunks) ...
[10:50:50.277] Chunk #1 of 2 ...
[10:50:50.278]  - Finding globals in '...' for chunk #1 ...
[10:50:50.278] getGlobalsAndPackages() ...
[10:50:50.278] |  Searching for globals ...
[10:50:50.278] |  :  globals found: [0] 
[10:50:50.278] |  Searching for globals ... DONE
[10:50:50.279] |  globals: [0] <none>
[10:50:50.279] |  packages: [0] <none>
[10:50:50.279] getGlobalsAndPackages() ... done
[10:50:50.279]    + additional globals found: [n=0] 
[10:50:50.279]    + additional namespaces needed: [n=0] 
[10:50:50.279]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.279]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.279]  - seeds: [2] <seeds>
[10:50:50.279]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.279] getGlobalsAndPackages() ...
[10:50:50.280] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.280] |  Resolving globals: FALSE
[10:50:50.280] |  Search for packages associated with the globals ...
[10:50:50.280] |  :  Packages associated with globals: [1] ‘stats’
[10:50:50.280] |  :  Packages: [1] ‘stats’
[10:50:50.281] |  Search for packages associated with the globals ... DONE
[10:50:50.281] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.281] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.281] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.281] |  packages: [1] ‘stats’
[10:50:50.281] getGlobalsAndPackages() ... done
[10:50:50.281] run() for Future (‘Future’) ...
[10:50:50.282] |  state: ‘created’
[10:50:50.282] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.282] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.282] |  Using MulticoreFutureBackend ...
[10:50:50.282] |  :  Launching futures ...
[10:50:50.282] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.282] |  :  .  |  getFutureData() ...
[10:50:50.283] |  :  .  |  :  getFutureCore() ...
[10:50:50.283] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:50.283] |  :  .  |  :  getFutureCore() ... done
[10:50:50.283] |  :  .  |  :  getFutureCapture() ...
[10:50:50.283] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.283] |  :  .  |  :  getFutureContext() ...
[10:50:50.283] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.283] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.284] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.284] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.284] |  :  .  |  :  getFutureContext() ... done
[10:50:50.284] |  :  .  |  getFutureData() ... done
[10:50:50.284] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.284] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.287] |  :  .  |  MulticoreFuture started
[10:50:50.287] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.287] |  :  Launching futures ... done
[10:50:50.287] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.287] |  :  .  |  attachPackages() ...
[10:50:50.288] |  Using MulticoreFutureBackend ... done
[10:50:50.288] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.288] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.288] Created future:
[10:50:50.288] |  :  .  |  attachPackages() ... DONE
[10:50:50.288] |  :  .  |  attachPackages() ...
[10:50:50.288] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:50.289] |  :  .  |  attachPackages() ... DONE
[10:50:50.290] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.290] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.290] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.291] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.291] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.291] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.292] |  :  .  |  :  .  |  New stack:
[10:50:50.292] |  :  .  |  :  .  |  List of 1
[10:50:50.292] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.292] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.292] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.292] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.292] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.292] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.292] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.296] |  :  .  |  :  .  |  Old stack:
[10:50:50.300] readImmediateCondition() ...
[10:50:50.300]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.301]  - Number of RDS files: 0
[10:50:50.301] readImmediateCondition() ... DONE
[10:50:50.288] MulticoreFuture:
[10:50:50.288] Label: ‘future_mapply-1’
[10:50:50.288] Expression:
[10:50:50.288] {
[10:50:50.288]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.288]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.288]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.288]         on.exit(options(oopts), add = TRUE)
[10:50:50.288]     }
[10:50:50.288]     {
[10:50:50.288]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:50.288]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:50.288]                 inherits = FALSE)
[10:50:50.288]             ...future.FUN(...)
[10:50:50.288]         }
[10:50:50.288]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:50.288]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:50.288]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.288]         do.call(mapply, args = args)
[10:50:50.288]     }
[10:50:50.288] }
[10:50:50.288] Lazy evaluation: FALSE
[10:50:50.288] Asynchronous evaluation: TRUE
[10:50:50.288] Local evaluation: TRUE
[10:50:50.288] Environment: R_GlobalEnv
[10:50:50.288] Capture standard output: TRUE
[10:50:50.288] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.288] Immediate condition classes: ‘immediateCondition’
[10:50:50.288] Globals: 5 objects totaling 870 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 148 bytes, list ‘...future.seeds_ii’ of 103 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.288] Packages: 1 packages (‘stats’)
[10:50:50.288] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:50.288] Resolved: FALSE
[10:50:50.288] Value: <not collected>
[10:50:50.288] Conditions captured: <none>
[10:50:50.288] Early signaling: FALSE
[10:50:50.288] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.288] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.301] Chunk #1 of 2 ... DONE
[10:50:50.301] Chunk #2 of 2 ...
[10:50:50.296] |  :  .  |  :  .  |  List of 1
[10:50:50.296] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.296] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.296] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.296] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.296] |  :  .  |  :  .  |      ...)  
[10:50:50.296] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.296] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.296] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.296] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.296] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.296] |  :  .  |  :  .  |      ...)  
[10:50:50.296] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.296] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.302]  - Finding globals in '...' for chunk #2 ...
[10:50:50.302] getGlobalsAndPackages() ...
[10:50:50.302] |  :  .  |  :  .  |  Not identical
[10:50:50.302] |  Searching for globals ...
[10:50:50.302] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.303] |  :  globals found: [0] 
[10:50:50.303] |  Searching for globals ... DONE
[10:50:50.303] |  globals: [0] <none>
[10:50:50.303] |  packages: [0] <none>
[10:50:50.303] getGlobalsAndPackages() ... done
[10:50:50.303]    + additional globals found: [n=0] 
[10:50:50.303]    + additional namespaces needed: [n=0] 
[10:50:50.303]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.304]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.304]  - seeds: [2] <seeds>
[10:50:50.304]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.304] getGlobalsAndPackages() ...
[10:50:50.304] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.304] |  Resolving globals: FALSE
[10:50:50.304] |  Search for packages associated with the globals ...
[10:50:50.305] |  :  Packages associated with globals: [1] ‘stats’
[10:50:50.305] |  :  Packages: [1] ‘stats’
[10:50:50.305] |  Search for packages associated with the globals ... DONE
[10:50:50.306] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.306] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.306] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.306] |  packages: [1] ‘stats’
[10:50:50.306] getGlobalsAndPackages() ... done
[10:50:50.307] run() for Future (‘Future’) ...
[10:50:50.307] |  state: ‘created’
[10:50:50.307] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.307] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.307] |  Using MulticoreFutureBackend ...
[10:50:50.307] |  :  Launching futures ...
[10:50:50.308] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.308] |  :  .  |  getFutureData() ...
[10:50:50.308] |  :  .  |  :  getFutureCore() ...
[10:50:50.308] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:50.308] |  :  .  |  :  getFutureCore() ... done
[10:50:50.308] |  :  .  |  :  getFutureCapture() ...
[10:50:50.308] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.309] |  :  .  |  :  getFutureContext() ...
[10:50:50.309] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.309] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.309] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.309] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.302] |  :  .  |  :  .  |  :  List of 2
[10:50:50.302] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, ea[10:50:50.309] |  :  .  |  :  getFutureContext() ... done
rlySignal = FALSE, envir = parent.frame())  
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.302] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.302] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.302] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.302] |  :  .  |  :  .  |  :      ...)  
[10:50:50.302] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.302] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.302] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.302] |  :  .  |  :  .  |  :      ...)  
[10:50:50.302] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.310] |  :  .  |  getFutureData() ... done
[10:50:50.310] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.310] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.310] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.310] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.311] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.311] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.311] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.311] |  :  .  |  :  .  List of future strategies:
[10:50:50.311] |  :  .  |  :  .  1. sequential:
[10:50:50.311] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.311] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.311] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.313] |  :  .  |  MulticoreFuture started
[10:50:50.313] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.313] |  :  Launching futures ... done
[10:50:50.314] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.314] |  Using MulticoreFutureBackend ... done
[10:50:50.314] |  :  .  |  attachPackages() ...
[10:50:50.314] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.314] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.314] Created future:
[10:50:50.315] |  :  .  |  attachPackages() ... DONE
[10:50:50.315] |  :  .  |  attachPackages() ...
[10:50:50.315] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:50.316] |  :  .  |  attachPackages() ... DONE
[10:50:50.312] |  :  .  |  :  .  List of 1
[10:50:50.312] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.312] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.312] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.312] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.312] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.312] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.312] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.317] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.317] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.317] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.317] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.317] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.318] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.318] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.318] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.318] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.318] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.319] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.319] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.319] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.319] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.319] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.319] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.319] |  :  .  |  :  .  |  New stack:
[10:50:50.320] |  :  .  |  assign_globals() ...
[10:50:50.320] |  :  .  |  :  .  |  List of 1
[10:50:50.320] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.320] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.320] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.320] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.320] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.320] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.320] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.326] |  :  .  |  :  .  |  Old stack:
[10:50:50.326] readImmediateCondition() ...
[10:50:50.326]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.327]  - Number of RDS files: 0
[10:50:50.327] readImmediateCondition() ... DONE
[10:50:50.314] MulticoreFuture:
[10:50:50.314] Label: ‘future_mapply-2’
[10:50:50.314] Expression:
[10:50:50.314] {
[10:50:50.314]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.314]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.314]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.314]         on.exit(options(oopts), add = TRUE)
[10:50:50.314]     }
[10:50:50.314]     {
[10:50:50.314]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:50.314]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:50.314]                 inherits = FALSE)
[10:50:50.314]             ...future.FUN(...)
[10:50:50.314]         }
[10:50:50.314]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:50.314]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:50.314]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.314]         do.call(mapply, args = args)
[10:50:50.314]     }
[10:50:50.314] }
[10:50:50.314] Lazy evaluation: FALSE
[10:50:50.314] Asynchronous evaluation: TRUE
[10:50:50.314] Local evaluation: TRUE
[10:50:50.314] Environment: R_GlobalEnv
[10:50:50.314] Capture standard output: TRUE
[10:50:50.314] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.314] Immediate condition classes: ‘immediateCondition’
[10:50:50.314] Globals: 5 objects totaling 870 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 148 bytes, list ‘...future.seeds_ii’ of 103 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.314] Packages: 1 packages (‘stats’)
[10:50:50.314] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:50.314] Resolved: FALSE
[10:50:50.314] Value: <not collected>
[10:50:50.314] Conditions captured: <none>
[10:50:50.314] Early signaling: FALSE
[10:50:50.314] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.314] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.327] Chunk #2 of 2 ... DONE
[10:50:50.328] Launching 2 futures (chunks) ... DONE
[10:50:50.328] Resolving 2 futures (chunks) ...
[10:50:50.328] value() on list ...
[10:50:50.328] |  recursive: 0
[10:50:50.328] |  length: 2
[10:50:50.328] |  
[10:50:50.328] |  Number of remaining objects: 2
[10:50:50.329] |  checking value #1 ...
[10:50:50.329] |  :  'obj' is MulticoreFuture
[10:50:50.326] |  :  .  |  :  .  |  List of 1
[10:50:50.326] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.326] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.326] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.326] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.326] |  :  .  |  :  .  |      ...)  
[10:50:50.326] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.326] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.326] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.326] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.326] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.326] |  :  .  |  :  .  |      ...)  
[10:50:50.326] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.326] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.332] |  :  .  |  :  .  |  Not identical
[10:50:50.332] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.320] |  :  .  |  List of 5
[10:50:50.320] |  :  .  |   $ ...future.FUN            :function (n, min = 0, max = 1)  
[10:50:50.320] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:50.320] |  :  .  |    ..$ min: num 1
[10:50:50.320] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.320] |  :  .  |    ..$ n  :List of 2
[10:50:50.320] |  :  .  |    .. ..$ : int 1
[10:50:50.320] |  :  .  |    .. ..$ : int 2
[10:50:50.320] |  :  .  |    ..$ max:List of 2
[10:50:50.320] |  :  .  |    .. ..$ : int 2
[10:50:50.320] |  :  .  |    .. ..$ : int 3
[10:50:50.320] |  :  .  |   $ ...future.seeds_ii       :List of 2
[10:50:50.320] |  :  .  |    ..$ : int [1:7] 10407 1242173061 -1150840343 -834448425 701050094 -1369558043 -650964284
[10:50:50.320] |  :  .  |    ..$ : int [1:7] 10407 859061261 1088872332 -1371790091 -942478768 -889560561 1393381402
[10:50:50.320] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.320] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.320] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.320] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.320] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.320] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.320] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.320] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.320] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.320] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.320] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.334] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.335] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.335] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.335] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.335] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.335] |  :  .  |  assign_globals() ... done
[10:50:50.332] |  :  .  |  :  .  |  :  List of 2
[10:50:50.332] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.332] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.332] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.332] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.332] |  :  .  |  :  .  |  :      ...)  
[10:50:50.332] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.332] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.332] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.332] |  :  .  |  :  .  |  :      ...)  
[10:50:50.332] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.339] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.339] |  :  readImmediateCondition() ...
[10:50:50.339] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.339] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.339] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.339] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.339] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.339] |  :   - Number of RDS files: 0
[10:50:50.340] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.340] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.340] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.340] |  :  readImmediateCondition() ... DONE
[10:50:50.340] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.340] |  checking value #1 ... done
[10:50:50.340] |  :  .  |  :  .  |  :  New stack:
[10:50:50.340] |  checking value #2 ...
[10:50:50.340] |  :  'obj' is MulticoreFuture
[10:50:50.340] |  :  .  |  :  .  List of future strategies:
[10:50:50.340] |  :  .  |  :  .  1. sequential:
[10:50:50.340] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.340] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.340] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.341] |  :  .  |  :  .  List of 1
[10:50:50.341] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.341] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.341] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.341] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.341] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.341] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.341] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.344] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.344] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.344] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.344] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.345] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.345] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.345] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.340] |  :  .  |  :  .  |  :  List of 1
[10:50:50.340] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.340] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.340] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.340] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.340] |  :  .  |  :  .  |  :      ...)  
[10:50:50.340] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.340] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.340] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.340] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.340] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.340] |  :  .  |  :  .  |  :      ...)  
[10:50:50.340] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.340] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.345] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.345] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.345] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.345] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.346] |  :  .  |  assign_globals() ...
[10:50:50.345] |  :  .  |  :  .  |  :  List of 1
[10:50:50.345] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.345] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.345] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.345] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.345] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.345] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.345] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.349] |  :  .  |  :  .  |  :  Not identical
[10:50:50.349] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.351] |  :  readImmediateCondition() ...
[10:50:50.351] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.351] |  :   - Number of RDS files: 0
[10:50:50.351] |  :  readImmediateCondition() ... DONE
[10:50:50.352] |  checking value #2 ... done
[10:50:50.346] |  :  .  |  List of 5
[10:50:50.346] |  :  .  |   $ ...future.FUN            :function (n, min = 0, max = 1)  
[10:50:50.346] |  :  .  |   $ MoreArgs                 :List of 1
[10:50:50.346] |  :  .  |    ..$ min: num 1
[10:50:50.346] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.346] |  :  .  |    ..$ n  :List of 2
[10:50:50.346] |  :  .  |    .. ..$ : int 3
[10:50:50.346] |  :  .  |    .. ..$ : int 4
[10:50:50.346] |  :  .  |    ..$ max:List of 2
[10:50:50.346] |  :  .  |    .. ..$ : int 4
[10:50:50.346] |  :  .  |    .. ..$ : int 5
[10:50:50.346] |  :  .  |   $ ...future.seeds_ii       :List of 2
[10:50:50.346] |  :  .  |    ..$ : int [1:7] 10407 -1977952646 362645338 -1927542548 -742448269 -2030870718 1472975712
[10:50:50.346] |  :  .  |    ..$ : int [1:7] 10407 -781199300 -1470244364 -1435938985 -1154922760 795337516 2089908040
[10:50:50.346] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.346] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.346] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.346] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.346] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.346] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.346] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.346] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.346] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.346] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.346] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.356] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.356] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.356] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.356] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.356] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.356] |  :  .  |  assign_globals() ... done
[10:50:50.349] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.349] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.349] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.349] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.349] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.349] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.349] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.349] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.349] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.349] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.349] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.357] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.357] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.358] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.358] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.358] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.358] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.358] |  :  .  |  :  .  |  1. multicore:
[10:50:50.358] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.358] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.358] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.359] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.360] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.360] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.360] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.360] |  :  .  |  :  .  |  :  New stack:
[10:50:50.362] |  Number of remaining objects: 2
[10:50:50.362] |  checking value #1 ...
[10:50:50.362] |  :  'obj' is MulticoreFuture
[10:50:50.359] |  :  .  |  :  .  |  List of 1
[10:50:50.359] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.359] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.359] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.359] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.359] |  :  .  |  :  .  |      ...)  
[10:50:50.359] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.359] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.359] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.359] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.359] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.359] |  :  .  |  :  .  |      ...)  
[10:50:50.359] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.359] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.364] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.364] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.364] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.364] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.360] |  :  .  |  :  .  |  :  List of 1
[10:50:50.360] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.360] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.360] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.360] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.360] |  :  .  |  :  .  |  :      ...)  
[10:50:50.360] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.360] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.360] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.360] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.360] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.360] |  :  .  |  :  .  |  :      ...)  
[10:50:50.360] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.360] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.364] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.364] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.365] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.365] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.365] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.365] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.365] |  :  readImmediateCondition() ...
[10:50:50.365] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.366] |  :   - Number of RDS files: 0
[10:50:50.366] |  :  readImmediateCondition() ... DONE
[10:50:50.366] |  :  MulticoreFuture #1
[10:50:50.366] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.366] |  :  .  nx: 2
[10:50:50.366] |  :  .  relay: TRUE
[10:50:50.366] |  :  .  stdout: TRUE
[10:50:50.367] |  :  .  signal: TRUE
[10:50:50.367] |  :  .  resignal: FALSE
[10:50:50.367] |  :  .  force: TRUE
[10:50:50.367] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.367] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.367] |  :  .  until=1
[10:50:50.367] |  :  .  relaying element #1
[10:50:50.367] |  :  .  result() for MulticoreFuture ...
[10:50:50.365] |  :  .  |  :  .  |  :  List of 1
[10:50:50.365] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.365] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.365] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.365] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.365] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.365] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.365] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.368] |  :  .  |  :  .  |  :  Not identical
[10:50:50.368] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.368] |  :  .  |  readImmediateCondition() ...
[10:50:50.368] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.369] |  :  .  |   - Number of RDS files: 0
[10:50:50.369] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.369] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.369] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.369] |  :  .  result() for MulticoreFuture ... done
[10:50:50.370] |  :  .  result() for MulticoreFuture ...
[10:50:50.370] |  :  .  result() for MulticoreFuture ... done
[10:50:50.370] |  :  .  result() for MulticoreFuture ...
[10:50:50.370] |  :  .  result() for MulticoreFuture ... done
[10:50:50.370] |  :  .  result() for MulticoreFuture ...
[10:50:50.371] |  :  .  result() for MulticoreFuture ... done
[10:50:50.371] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.371] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.371] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.371] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.372] |  :  .  result() for MulticoreFuture ...
[10:50:50.372] |  :  .  result() for MulticoreFuture ... done
[10:50:50.372] |  :  .  result() for MulticoreFuture ...
[10:50:50.372] |  :  .  result() for MulticoreFuture ... done
[10:50:50.372] |  :  .  value: <list>
[10:50:50.372] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.373] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.373] |  :  .  nx: 2
[10:50:50.373] |  :  .  relay: TRUE
[10:50:50.373] |  :  .  stdout: TRUE
[10:50:50.373] |  :  .  signal: TRUE
[10:50:50.373] |  :  .  resignal: FALSE
[10:50:50.373] |  :  .  force: TRUE
[10:50:50.368] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.368] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.368] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.368] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.368] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.368] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.368] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.368] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.368] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.368] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.368] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.374] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.374] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.374] |  :  .  until=2
[10:50:50.374] |  :  .  relaying element #2
[10:50:50.374] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.374] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.374] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.374] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.374] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.375] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.374] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.375] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.375] |  :  length: 1 (resolved future 1)
[10:50:50.375] |  checking value #1 ... done
[10:50:50.375] |  checking value #2 ...
[10:50:50.375] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.375] |  :  .  |  :  .  |  1. multicore:
[10:50:50.375] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.375] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.375] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.375] |  :  'obj' is MulticoreFuture
[10:50:50.375] |  :  .  |  :  .  |  List of 1
[10:50:50.375] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.375] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.375] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.375] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.375] |  :  .  |  :  .  |      ...)  
[10:50:50.375] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.375] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.375] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.375] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.375] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.375] |  :  .  |  :  .  |      ...)  
[10:50:50.375] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.375] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.379] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.380] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.380] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.380] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.380] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.380] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.380] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.381] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.381] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.381] |  :  readImmediateCondition() ...
[10:50:50.381] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.381] |  :   - Number of RDS files: 0
[10:50:50.381] |  :  readImmediateCondition() ... DONE
[10:50:50.382] |  :  MulticoreFuture #2
[10:50:50.382] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.382] |  :  .  nx: 2
[10:50:50.382] |  :  .  relay: TRUE
[10:50:50.382] |  :  .  stdout: TRUE
[10:50:50.382] |  :  .  signal: TRUE
[10:50:50.382] |  :  .  resignal: FALSE
[10:50:50.382] |  :  .  force: TRUE
[10:50:50.382] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.383] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.383] |  :  .  until=2
[10:50:50.383] |  :  .  relaying element #2
[10:50:50.383] |  :  .  result() for MulticoreFuture ...
[10:50:50.383] |  :  .  |  readImmediateCondition() ...
[10:50:50.383] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.384] |  :  .  |   - Number of RDS files: 0
[10:50:50.384] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.384] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.384] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.384] |  :  .  result() for MulticoreFuture ... done
[10:50:50.384] |  :  .  result() for MulticoreFuture ...
[10:50:50.384] |  :  .  result() for MulticoreFuture ... done
[10:50:50.385] |  :  .  result() for MulticoreFuture ...
[10:50:50.385] |  :  .  result() for MulticoreFuture ... done
[10:50:50.385] |  :  .  result() for MulticoreFuture ...
[10:50:50.385] |  :  .  result() for MulticoreFuture ... done
[10:50:50.385] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.385] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.385] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.385] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.386] |  :  .  result() for MulticoreFuture ...
[10:50:50.386] |  :  .  result() for MulticoreFuture ... done
[10:50:50.386] |  :  .  result() for MulticoreFuture ...
[10:50:50.386] |  :  .  result() for MulticoreFuture ... done
[10:50:50.386] |  :  .  value: <list>
[10:50:50.386] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.386] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.386] |  :  .  nx: 2
[10:50:50.386] |  :  .  relay: TRUE
[10:50:50.387] |  :  .  stdout: TRUE
[10:50:50.387] |  :  .  signal: TRUE
[10:50:50.387] |  :  .  resignal: FALSE
[10:50:50.387] |  :  .  force: TRUE
[10:50:50.387] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.387] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.387] |  :  .  until=2
[10:50:50.387] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.387] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.387] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.388] |  :  length: 0 (resolved future 2)
[10:50:50.388] |  checking value #2 ... done
[10:50:50.388] |  Relaying remaining futures ...
[10:50:50.388] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.388] |  :  .  nx: 2
[10:50:50.388] |  :  .  relay: TRUE
[10:50:50.388] |  :  .  stdout: TRUE
[10:50:50.388] |  :  .  signal: TRUE
[10:50:50.388] |  :  .  resignal: FALSE
[10:50:50.389] |  :  .  force: TRUE
[10:50:50.389] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.389] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.389] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.389] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.389] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.389] |  Relaying remaining futures ... done
[10:50:50.389] value() on list ... done
[10:50:50.389]  - Number of value chunks collected: 2
[10:50:50.390] Resolving 2 futures (chunks) ... DONE
[10:50:50.390] Reducing values from 2 chunks ...
[10:50:50.390]  - Number of values collected after concatenation: 4
[10:50:50.390]  - Number of values expected: 4
[10:50:50.390] Reducing values from 2 chunks ... DONE
[10:50:50.390] future_mapply() ... DONE
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
[10:50:50.391] future_mapply() ...
[10:50:50.391] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.391] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.391] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.392] Number of chunks: 2
[10:50:50.392] getGlobalsAndPackagesXApply() ...
[10:50:50.392]  - future.globals: TRUE
[10:50:50.392] getGlobalsAndPackages() ...
[10:50:50.392] |  Searching for globals ...
[10:50:50.394] |  :  globals found: [2] ‘FUN’, ‘UseMethod’
[10:50:50.394] |  Searching for globals ... DONE
[10:50:50.394] |  Resolving globals: FALSE
[10:50:50.394] |  Search for packages associated with the globals ...
[10:50:50.395] |  :  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:50.395] |  :  Packages: [2] ‘stats’, ‘base’
[10:50:50.395] |  Search for packages associated with the globals ... DONE
[10:50:50.395] |  The total size of the 1 globals is 337 bytes (337 bytes)
[10:50:50.396] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 337 bytes There is one global: ‘FUN’ (337 bytes of class ‘function’)
[10:50:50.396] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.396] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.396] |  globals: [1] ‘FUN’
[10:50:50.396] |  packages: [1] ‘stats’
[10:50:50.396] getGlobalsAndPackages() ... done
[10:50:50.396]  - globals found/used: [n=1] ‘FUN’
[10:50:50.396]  - needed namespaces: [n=1] ‘stats’
[10:50:50.397] Finding globals ... DONE
[10:50:50.397] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.397] List of 2
[10:50:50.397]  $ ...future.FUN:function (x, w, ...)  
[10:50:50.397]  $ MoreArgs     : NULL
[10:50:50.397]  - attr(*, "where")=List of 2
[10:50:50.397]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.397]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.397]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.397]  - attr(*, "resolved")= logi FALSE
[10:50:50.397]  - attr(*, "total_size")= num NA
[10:50:50.400] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:50.400] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.401] Number of futures (= number of chunks): 2
[10:50:50.401] Launching 2 futures (chunks) ...
[10:50:50.401] Chunk #1 of 2 ...
[10:50:50.401]  - Finding globals in '...' for chunk #1 ...
[10:50:50.401] getGlobalsAndPackages() ...
[10:50:50.401] |  Searching for globals ...
[10:50:50.402] |  :  globals found: [0] 
[10:50:50.402] |  Searching for globals ... DONE
[10:50:50.402] |  globals: [0] <none>
[10:50:50.402] |  packages: [0] <none>
[10:50:50.402] getGlobalsAndPackages() ... done
[10:50:50.402]    + additional globals found: [n=0] 
[10:50:50.402]    + additional namespaces needed: [n=0] 
[10:50:50.402]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.402]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.403]  - seeds: <none>
[10:50:50.403]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.403] getGlobalsAndPackages() ...
[10:50:50.403] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.403] |  Resolving globals: FALSE
[10:50:50.403] |  Search for packages associated with the globals ...
[10:50:50.403] |  :  Packages associated with globals: [1] ‘stats’
[10:50:50.404] |  :  Packages: [1] ‘stats’
[10:50:50.404] |  Search for packages associated with the globals ... DONE
[10:50:50.404] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.404] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.404] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.404] |  packages: [1] ‘stats’
[10:50:50.405] getGlobalsAndPackages() ... done
[10:50:50.405] run() for Future (‘Future’) ...
[10:50:50.405] |  state: ‘created’
[10:50:50.405] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.405] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.405] |  Using MulticoreFutureBackend ...
[10:50:50.405] |  :  Launching futures ...
[10:50:50.406] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.406] |  :  .  |  getFutureData() ...
[10:50:50.406] |  :  .  |  :  getFutureCore() ...
[10:50:50.406] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:50.406] |  :  .  |  :  getFutureCore() ... done
[10:50:50.406] |  :  .  |  :  getFutureCapture() ...
[10:50:50.406] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.406] |  :  .  |  :  getFutureContext() ...
[10:50:50.407] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.407] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.407] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.407] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.407] |  :  .  |  :  getFutureContext() ... done
[10:50:50.407] |  :  .  |  getFutureData() ... done
[10:50:50.407] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.408] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.410] |  :  .  |  MulticoreFuture started
[10:50:50.410] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.410] |  :  Launching futures ... done
[10:50:50.410] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.410] |  :  .  |  attachPackages() ...
[10:50:50.411] |  Using MulticoreFutureBackend ... done
[10:50:50.411] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.411] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.411] Created future:
[10:50:50.411] |  :  .  |  attachPackages() ... DONE
[10:50:50.411] |  :  .  |  attachPackages() ...
[10:50:50.411] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:50.411] |  :  .  |  attachPackages() ... DONE
[10:50:50.412] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.413] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.413] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.413] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.414] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.414] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.414] |  :  .  |  :  .  |  New stack:
[10:50:50.414] |  :  .  |  :  .  |  List of 1
[10:50:50.414] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.414] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.414] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.414] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.414] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.414] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.414] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.418] |  :  .  |  :  .  |  Old stack:
[10:50:50.418] |  :  .  |  :  .  |  List of 1
[10:50:50.418] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.418] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.418] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.418] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.418] |  :  .  |  :  .  |      ...)  
[10:50:50.418] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.418] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.418] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.418] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.418] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.418] |  :  .  |  :  .  |      ...)  
[10:50:50.418] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.418] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.422] |  :  .  |  :  .  |  Not identical
[10:50:50.422] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.423] readImmediateCondition() ...
[10:50:50.423]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.423]  - Number of RDS files: 0
[10:50:50.423] readImmediateCondition() ... DONE
[10:50:50.411] MulticoreFuture:
[10:50:50.411] Label: ‘future_Map-1’
[10:50:50.411] Expression:
[10:50:50.411] {
[10:50:50.411]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.411]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.411]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.411]         on.exit(options(oopts), add = TRUE)
[10:50:50.411]     }
[10:50:50.411]     {
[10:50:50.411]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.411]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.411]         do.call(mapply, args = args)
[10:50:50.411]     }
[10:50:50.411] }
[10:50:50.411] Lazy evaluation: FALSE
[10:50:50.411] Asynchronous evaluation: TRUE
[10:50:50.411] Local evaluation: TRUE
[10:50:50.411] Environment: R_GlobalEnv
[10:50:50.411] Capture standard output: TRUE
[10:50:50.411] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.411] Immediate condition classes: ‘immediateCondition’
[10:50:50.411] Globals: 5 objects totaling 817 bytes (function ‘...future.FUN’ of 337 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 399 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.411] Packages: 1 packages (‘stats’)
[10:50:50.411] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.411] Resolved: FALSE
[10:50:50.411] Value: <not collected>
[10:50:50.411] Conditions captured: <none>
[10:50:50.411] Early signaling: FALSE
[10:50:50.411] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.411] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.424] Chunk #1 of 2 ... DONE
[10:50:50.424] Chunk #2 of 2 ...
[10:50:50.424]  - Finding globals in '...' for chunk #2 ...
[10:50:50.424] getGlobalsAndPackages() ...
[10:50:50.424] |  Searching for globals ...
[10:50:50.425] |  :  globals found: [0] 
[10:50:50.425] |  Searching for globals ... DONE
[10:50:50.425] |  globals: [0] <none>
[10:50:50.425] |  packages: [0] <none>
[10:50:50.425] getGlobalsAndPackages() ... done
[10:50:50.425]    + additional globals found: [n=0] 
[10:50:50.426]    + additional namespaces needed: [n=0] 
[10:50:50.426]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.426]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.426]  - seeds: <none>
[10:50:50.426]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.426] getGlobalsAndPackages() ...
[10:50:50.426] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.427] |  Resolving globals: FALSE
[10:50:50.427] |  Search for packages associated with the globals ...
[10:50:50.427] |  :  Packages associated with globals: [1] ‘stats’
[10:50:50.427] |  :  Packages: [1] ‘stats’
[10:50:50.428] |  Search for packages associated with the globals ... DONE
[10:50:50.428] |  Packages after dropping 'base': [1] ‘stats’
[10:50:50.428] |  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:50.428] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.428] |  packages: [1] ‘stats’
[10:50:50.423] |  :  .  |  :  .  |  :  List of 2
[10:50:50.423] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.423] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.423] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.423] |  :  .  |  :  .  |  :      ...)  
[10:50:50.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.423] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.423] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.423] |  :  .  |  :  .  |  :      ...)  
[10:50:50.423] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.428] getGlobalsAndPackages() ... done
[10:50:50.429] run() for Future (‘Future’) ...
[10:50:50.429] |  state: ‘created’
[10:50:50.429] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.429] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.429] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.429] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.429] |  Using MulticoreFutureBackend ...
[10:50:50.429] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.429] |  :  Launching futures ...
[10:50:50.429] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.430] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.430] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.430] |  :  .  |  getFutureData() ...
[10:50:50.430] |  :  .  |  :  getFutureCore() ...
[10:50:50.430] |  :  .  |  :  .  Packages needed by the future expression (n = 1): ‘stats’
[10:50:50.430] |  :  .  |  :  getFutureCore() ... done
[10:50:50.430] |  :  .  |  :  getFutureCapture() ...
[10:50:50.430] |  :  .  |  :  .  List of future strategies:
[10:50:50.430] |  :  .  |  :  .  1. sequential:
[10:50:50.430] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.430] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.430] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.430] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.430] |  :  .  |  :  getFutureContext() ...
[10:50:50.431] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.431] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.431] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.431] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.431] |  :  .  |  :  getFutureContext() ... done
[10:50:50.431] |  :  .  |  getFutureData() ... done
[10:50:50.432] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.432] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.430] |  :  .  |  :  .  List of 1
[10:50:50.430] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.430] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.430] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.430] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.430] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.430] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.430] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.434] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.434] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.434] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.434] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.434] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.434] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.434] |  :  .  |  MulticoreFuture started
[10:50:50.435] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.435] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.435] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.435] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.435] |  :  Launching futures ... done
[10:50:50.435] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.435] |  :  .  |  attachPackages() ...
[10:50:50.435] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.435] |  :  .  |  assign_globals() ...
[10:50:50.435] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.436] |  Using MulticoreFutureBackend ... done
[10:50:50.436] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.436] |  :  .  |  attachPackages() ... DONE
[10:50:50.436] Created future:
[10:50:50.436] |  :  .  |  attachPackages() ...
[10:50:50.436] |  :  .  |  :  packages: [n=1] ‘stats’
[10:50:50.437] |  :  .  |  attachPackages() ... DONE
[10:50:50.438] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.438] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.439] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.439] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.439] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.440] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.440] |  :  .  |  :  .  |  New stack:
[10:50:50.440] |  :  .  |  :  .  |  List of 1
[10:50:50.440] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.440] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.440] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.440] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.440] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.440] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.440] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.443] |  :  .  |  :  .  |  Old stack:
[10:50:50.444] |  :  .  |  :  .  |  List of 1
[10:50:50.444] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.444] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.444] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.444] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.444] |  :  .  |  :  .  |      ...)  
[10:50:50.444] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.444] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.444] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.444] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.444] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.444] |  :  .  |  :  .  |      ...)  
[10:50:50.444] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.444] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.448] |  :  .  |  :  .  |  Not identical
[10:50:50.448] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.449] readImmediateCondition() ...
[10:50:50.449]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.449]  - Number of RDS files: 0
[10:50:50.449] readImmediateCondition() ... DONE
[10:50:50.436] |  :  .  |  List of 5
[10:50:50.436] |  :  .  |   $ ...future.FUN            :function (x, w, ...)  
[10:50:50.436] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.436] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.436] |  :  .  |    ..$ :List of 2
[10:50:50.436] |  :  .  |    .. ..$ : num [1:10] 0.536 0.745 0.36 0.763 0.226 ...
[10:50:50.436] |  :  .  |    .. ..$ : num [1:10] 0.904 0.658 0.157 0.63 0.808 ...
[10:50:50.436] |  :  .  |    ..$ :List of 2
[10:50:50.436] |  :  .  |    .. ..$ : num [1:10] 7 2 9 7 6 9 8 6 6 3
[10:50:50.436] |  :  .  |    .. ..$ : num [1:10] 4 6 5 7 5 9 6 3 6 4
[10:50:50.436] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.436] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.436] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.436] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.436] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.436] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.436] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.436] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.436] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.436] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.436] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.436] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.450] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.436] MulticoreFuture:
[10:50:50.436] Label: ‘future_Map-2’
[10:50:50.436] Expression:
[10:50:50.436] {
[10:50:50.436]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.436]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.436]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.436]         on.exit(options(oopts), add = TRUE)
[10:50:50.436]     }
[10:50:50.436]     {
[10:50:50.436]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.436]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.436]         do.call(mapply, args = args)
[10:50:50.436]     }
[10:50:50.436] }
[10:50:50.436] Lazy evaluation: FALSE
[10:50:50.436] Asynchronous evaluation: TRUE
[10:50:50.436] Local evaluation: TRUE
[10:50:50.436] Environment: R_GlobalEnv
[10:50:50.436] Capture standard output: TRUE
[10:50:50.436] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.436] Immediate condition classes: ‘immediateCondition’
[10:50:50.436] Globals: 5 objects totaling 993 bytes (function ‘...future.FUN’ of 337 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 575 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.436] Packages: 1 packages (‘stats’)
[10:50:50.436] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.436] Resolved: FALSE
[10:50:50.436] Value: <not collected>
[10:50:50.436] Conditions captured: <none>
[10:50:50.436] Early signaling: FALSE
[10:50:50.436] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.436] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.450] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.450] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.450] Chunk #2 of 2 ... DONE
[10:50:50.450] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.450] Launching 2 futures (chunks) ... DONE
[10:50:50.450] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.450] Resolving 2 futures (chunks) ...
[10:50:50.451] |  :  .  |  assign_globals() ... done
[10:50:50.451] value() on list ...
[10:50:50.451] |  recursive: 0
[10:50:50.451] |  length: 2
[10:50:50.451] |  
[10:50:50.452] |  Number of remaining objects: 2
[10:50:50.452] |  checking value #1 ...
[10:50:50.452] |  :  'obj' is MulticoreFuture
[10:50:50.453] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.454] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.454] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.454] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.454] |  :  .  |  :  .  |  :  New stack:
[10:50:50.448] |  :  .  |  :  .  |  :  List of 2
[10:50:50.448] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.448] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.448] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.448] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.448] |  :  .  |  :  .  |  :      ...)  
[10:50:50.448] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.448] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.448] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.448] |  :  .  |  :  .  |  :      ...)  
[10:50:50.448] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.456] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.456] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.456] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.456] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.454] |  :  .  |  :  .  |  :  List of 1
[10:50:50.454] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.454] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.454] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.454] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.454] |  :  .  |  :  .  |  :      ...)  
[10:50:50.454] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.454] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.454] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.454] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.454] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.454] |  :  .  |  :  .  |  :      ...)  
[10:50:50.454] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.454] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.459] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.457] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.459] |  :  .  |  :  .  |  :  List of 1
[10:50:50.459] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.459] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.459] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.459] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.459] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.459] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.459] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.462] |  :  .  |  :  .  |  :  Not identical
[10:50:50.462] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.462] |  :  readImmediateCondition() ...
[10:50:50.463] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.463] |  :   - Number of RDS files: 0
[10:50:50.463] |  :  readImmediateCondition() ... DONE
[10:50:50.461] |  :  .  |  :  .  List of future strategies:
[10:50:50.461] |  :  .  |  :  .  1. sequential:
[10:50:50.461] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.461] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.461] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.463] |  checking value #1 ... done
[10:50:50.463] |  checking value #2 ...
[10:50:50.464] |  :  'obj' is MulticoreFuture
[10:50:50.463] |  :  .  |  :  .  List of 1
[10:50:50.463] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.463] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.463] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.463] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.463] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.463] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.463] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.467] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.467] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.467] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.467] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.467] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.467] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.468] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.468] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.468] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.468] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.462] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.462] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.462] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.462] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.462] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.462] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.462] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.462] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.462] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.462] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.462] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.468] |  :  .  |  assign_globals() ...
[10:50:50.469] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.469] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.469] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.470] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.470] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.470] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.470] |  :  .  |  :  .  |  1. multicore:
[10:50:50.470] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.470] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.470] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.474] |  :  readImmediateCondition() ...
[10:50:50.474] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.474] |  :   - Number of RDS files: 0
[10:50:50.475] |  :  readImmediateCondition() ... DONE
[10:50:50.470] |  :  .  |  :  .  |  List of 1
[10:50:50.470] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.470] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.470] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.470] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.470] |  :  .  |  :  .  |      ...)  
[10:50:50.470] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.470] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.470] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.470] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.470] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.470] |  :  .  |  :  .  |      ...)  
[10:50:50.470] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.470] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.475] |  checking value #2 ... done
[10:50:50.475] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.475] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.475] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.476] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.476] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.476] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.476] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.476] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.476] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.469] |  :  .  |  List of 5
[10:50:50.469] |  :  .  |   $ ...future.FUN            :function (x, w, ...)  
[10:50:50.469] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.469] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.469] |  :  .  |    ..$ :List of 3
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 0.5055 0.0414 0.013 0.9428 0.0819 ...
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 0.863 0.176 0.18 0.77 0.656 ...
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 0.433 0.406 0.291 0.769 0.931 ...
[10:50:50.469] |  :  .  |    ..$ :List of 3
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 6 6 5 3 3 7 6 4 7 10
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 9 2 3 8 7 11 8 6 8 8
[10:50:50.469] |  :  .  |    .. ..$ : num [1:10] 6 6 8 9 4 6 3 8 8 7
[10:50:50.469] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.469] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.469] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.469] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.469] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.469] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.469] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.469] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.469] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.469] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.469] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.469] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.479] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.479] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.479] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.480] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.480] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.480] |  :  .  |  assign_globals() ... done
[10:50:50.483] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.483] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.483] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.483] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.483] |  :  .  |  :  .  |  :  New stack:
[10:50:50.485] |  Number of remaining objects: 2
[10:50:50.485] |  checking value #1 ...
[10:50:50.485] |  :  'obj' is MulticoreFuture
[10:50:50.486] |  :  readImmediateCondition() ...
[10:50:50.486] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.486] |  :   - Number of RDS files: 0
[10:50:50.486] |  :  readImmediateCondition() ... DONE
[10:50:50.487] |  :  MulticoreFuture #1
[10:50:50.487] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.487] |  :  .  nx: 2
[10:50:50.487] |  :  .  relay: TRUE
[10:50:50.487] |  :  .  stdout: TRUE
[10:50:50.488] |  :  .  signal: TRUE
[10:50:50.488] |  :  .  resignal: FALSE
[10:50:50.488] |  :  .  force: TRUE
[10:50:50.488] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.488] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.488] |  :  .  until=1
[10:50:50.489] |  :  .  relaying element #1
[10:50:50.489] |  :  .  result() for MulticoreFuture ...
[10:50:50.490] |  :  .  |  readImmediateCondition() ...
[10:50:50.490] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.484] |  :  .  |  :  .  |  :  List of 1
[10:50:50.484] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.484] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.484] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.484] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.484] |  :  .  |  :  .  |  :      ...)  
[10:50:50.484] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.484] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.484] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.484] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.484] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.484] |  :  .  |  :  .  |  :      ...)  
[10:50:50.484] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.484] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.490] |  :  .  |   - Number of RDS files: 0
[10:50:50.490] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.490] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.491] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.491] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.491] |  :  .  result() for MulticoreFuture ... done
[10:50:50.491] |  :  .  result() for MulticoreFuture ...
[10:50:50.492] |  :  .  result() for MulticoreFuture ... done
[10:50:50.492] |  :  .  result() for MulticoreFuture ...
[10:50:50.492] |  :  .  result() for MulticoreFuture ... done
[10:50:50.492] |  :  .  result() for MulticoreFuture ...
[10:50:50.493] |  :  .  result() for MulticoreFuture ... done
[10:50:50.493] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.493] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.493] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.493] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.494] |  :  .  result() for MulticoreFuture ...
[10:50:50.494] |  :  .  result() for MulticoreFuture ... done
[10:50:50.494] |  :  .  result() for MulticoreFuture ...
[10:50:50.494] |  :  .  result() for MulticoreFuture ... done
[10:50:50.494] |  :  .  value: <list>
[10:50:50.495] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.495] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.495] |  :  .  nx: 2
[10:50:50.495] |  :  .  relay: TRUE
[10:50:50.495] |  :  .  stdout: TRUE
[10:50:50.490] |  :  .  |  :  .  |  :  List of 1
[10:50:50.490] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.490] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.490] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.490] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.490] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.490] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.490] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.495] |  :  .  signal: TRUE
[10:50:50.496] |  :  .  |  :  .  |  :  Not identical
[10:50:50.496] |  :  .  resignal: FALSE
[10:50:50.496] |  :  .  force: TRUE
[10:50:50.496] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.496] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.496] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.496] |  :  .  until=2
[10:50:50.497] |  :  .  relaying element #2
[10:50:50.497] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.497] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.497] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.497] |  :  length: 1 (resolved future 1)
[10:50:50.498] |  checking value #1 ... done
[10:50:50.498] |  checking value #2 ...
[10:50:50.498] |  :  'obj' is MulticoreFuture
[10:50:50.496] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.496] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.496] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.496] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.496] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.496] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.496] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.496] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.496] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.496] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.496] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.504] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.504] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.505] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.505] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.505] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.505] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.505] |  :  .  |  :  .  |  1. multicore:
[10:50:50.505] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.505] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.505] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.508] |  :  readImmediateCondition() ...
[10:50:50.508] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.509] |  :   - Number of RDS files: 0
[10:50:50.509] |  :  readImmediateCondition() ... DONE
[10:50:50.509] |  checking value #2 ... done
[10:50:50.506] |  :  .  |  :  .  |  List of 1
[10:50:50.506] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.506] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.506] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.506] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.506] |  :  .  |  :  .  |      ...)  
[10:50:50.506] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.506] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.506] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.506] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.506] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.506] |  :  .  |  :  .  |      ...)  
[10:50:50.506] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.506] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.511] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.511] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.511] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.511] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.511] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.511] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.512] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.512] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.512] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.519] |  Number of remaining objects: 1
[10:50:50.520] |  checking value #2 ...
[10:50:50.520] |  :  'obj' is MulticoreFuture
[10:50:50.520] |  :  readImmediateCondition() ...
[10:50:50.520] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.520] |  :   - Number of RDS files: 0
[10:50:50.520] |  :  readImmediateCondition() ... DONE
[10:50:50.520] |  :  MulticoreFuture #2
[10:50:50.520] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.521] |  :  .  nx: 2
[10:50:50.521] |  :  .  relay: TRUE
[10:50:50.521] |  :  .  stdout: TRUE
[10:50:50.521] |  :  .  signal: TRUE
[10:50:50.521] |  :  .  resignal: FALSE
[10:50:50.521] |  :  .  force: TRUE
[10:50:50.521] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.521] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.521] |  :  .  until=2
[10:50:50.522] |  :  .  relaying element #2
[10:50:50.522] |  :  .  result() for MulticoreFuture ...
[10:50:50.522] |  :  .  |  readImmediateCondition() ...
[10:50:50.522] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.523] |  :  .  |   - Number of RDS files: 0
[10:50:50.523] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.523] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.527] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.527] |  :  .  result() for MulticoreFuture ... done
[10:50:50.528] |  :  .  result() for MulticoreFuture ...
[10:50:50.528] |  :  .  result() for MulticoreFuture ... done
[10:50:50.528] |  :  .  result() for MulticoreFuture ...
[10:50:50.528] |  :  .  result() for MulticoreFuture ... done
[10:50:50.528] |  :  .  result() for MulticoreFuture ...
[10:50:50.529] |  :  .  result() for MulticoreFuture ... done
[10:50:50.529] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.529] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.529] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.529] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.529] |  :  .  result() for MulticoreFuture ...
[10:50:50.529] |  :  .  result() for MulticoreFuture ... done
[10:50:50.529] |  :  .  result() for MulticoreFuture ...
[10:50:50.529] |  :  .  result() for MulticoreFuture ... done
[10:50:50.530] |  :  .  value: <list>
[10:50:50.530] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.530] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.530] |  :  .  nx: 2
[10:50:50.530] |  :  .  relay: TRUE
[10:50:50.530] |  :  .  stdout: TRUE
[10:50:50.530] |  :  .  signal: TRUE
[10:50:50.530] |  :  .  resignal: FALSE
[10:50:50.530] |  :  .  force: TRUE
[10:50:50.530] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.531] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.531] |  :  .  until=2
[10:50:50.531] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.531] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.531] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.531] |  :  length: 0 (resolved future 2)
[10:50:50.531] |  checking value #2 ... done
[10:50:50.531] |  Relaying remaining futures ...
[10:50:50.531] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.532] |  :  .  nx: 2
[10:50:50.532] |  :  .  relay: TRUE
[10:50:50.532] |  :  .  stdout: TRUE
[10:50:50.532] |  :  .  signal: TRUE
[10:50:50.532] |  :  .  resignal: FALSE
[10:50:50.532] |  :  .  force: TRUE
[10:50:50.532] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.532] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.532] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.533] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.533] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.533] |  Relaying remaining futures ... done
[10:50:50.533] value() on list ... done
[10:50:50.533]  - Number of value chunks collected: 2
[10:50:50.533] Resolving 2 futures (chunks) ... DONE
[10:50:50.533] Reducing values from 2 chunks ...
[10:50:50.533]  - Number of values collected after concatenation: 5
[10:50:50.533]  - Number of values expected: 5
[10:50:50.534] Reducing values from 2 chunks ... DONE
[10:50:50.534] future_mapply() ... DONE
- future_mapply() - 'max-or-0-if' recycling rule ...
[10:50:50.536] future_mapply() ...
[10:50:50.536] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.536] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.536] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.537] Number of chunks: 2
[10:50:50.537] getGlobalsAndPackagesXApply() ...
[10:50:50.537]  - future.globals: TRUE
[10:50:50.537] getGlobalsAndPackages() ...
[10:50:50.537] |  Searching for globals ...
[10:50:50.538] |  :  globals found: [1] ‘FUN’
[10:50:50.538] |  Searching for globals ... DONE
[10:50:50.538] |  Resolving globals: FALSE
[10:50:50.539] |  Search for packages associated with the globals ...
[10:50:50.539] |  :  Packages associated with globals: [0] 
[10:50:50.539] |  :  Packages: [0] 
[10:50:50.539] |  Search for packages associated with the globals ... DONE
[10:50:50.539] |  The total size of the 1 globals is 32 bytes (32 bytes)
[10:50:50.540] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 32 bytes There is one global: ‘FUN’ (32 bytes of class ‘function’)
[10:50:50.540] |  Packages after dropping 'base': [0] 
[10:50:50.540] |  globals: [1] ‘FUN’
[10:50:50.540] |  packages: [0] 
[10:50:50.540] getGlobalsAndPackages() ... done
[10:50:50.540]  - globals found/used: [n=1] ‘FUN’
[10:50:50.541]  - needed namespaces: [n=0] 
[10:50:50.541] Finding globals ... DONE
[10:50:50.541] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.541] List of 2
[10:50:50.541]  $ ...future.FUN:function (e1, e2)  
[10:50:50.541]  $ MoreArgs     : NULL
[10:50:50.541]  - attr(*, "where")=List of 2
[10:50:50.541]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.541]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.541]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.541]  - attr(*, "resolved")= logi FALSE
[10:50:50.541]  - attr(*, "total_size")= num NA
[10:50:50.544] Packages to be attached in all futures: [n=0] 
[10:50:50.545] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.545] Number of futures (= number of chunks): 2
[10:50:50.545] Launching 2 futures (chunks) ...
[10:50:50.545] Chunk #1 of 2 ...
[10:50:50.545]  - Finding globals in '...' for chunk #1 ...
[10:50:50.545] getGlobalsAndPackages() ...
[10:50:50.545] |  Searching for globals ...
[10:50:50.546] |  :  globals found: [0] 
[10:50:50.546] |  Searching for globals ... DONE
[10:50:50.546] |  globals: [0] <none>
[10:50:50.546] |  packages: [0] <none>
[10:50:50.546] getGlobalsAndPackages() ... done
[10:50:50.546]    + additional globals found: [n=0] 
[10:50:50.546]    + additional namespaces needed: [n=0] 
[10:50:50.547]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.547]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.547]  - seeds: <none>
[10:50:50.547]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.547] getGlobalsAndPackages() ...
[10:50:50.547] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.547] |  Resolving globals: FALSE
[10:50:50.547] |  Search for packages associated with the globals ...
[10:50:50.548] |  :  Packages associated with globals: [0] 
[10:50:50.548] |  :  Packages: [0] 
[10:50:50.548] |  Search for packages associated with the globals ... DONE
[10:50:50.548] |  Packages after dropping 'base': [0] 
[10:50:50.548] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.548] |  packages: [0] 
[10:50:50.549] getGlobalsAndPackages() ... done
[10:50:50.549] run() for Future (‘Future’) ...
[10:50:50.549] |  state: ‘created’
[10:50:50.549] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.549] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.549] |  Using MulticoreFutureBackend ...
[10:50:50.550] |  :  Launching futures ...
[10:50:50.550] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.550] |  :  .  |  getFutureData() ...
[10:50:50.550] |  :  .  |  :  getFutureCore() ...
[10:50:50.550] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.550] |  :  .  |  :  getFutureCore() ... done
[10:50:50.550] |  :  .  |  :  getFutureCapture() ...
[10:50:50.550] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.551] |  :  .  |  :  getFutureContext() ...
[10:50:50.551] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.551] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.551] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.551] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.551] |  :  .  |  :  getFutureContext() ... done
[10:50:50.551] |  :  .  |  getFutureData() ... done
[10:50:50.552] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.552] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.554] |  :  .  |  MulticoreFuture started
[10:50:50.554] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.554] |  :  Launching futures ... done
[10:50:50.555] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.555] |  :  .  |  attachPackages() ...
[10:50:50.555] |  Using MulticoreFutureBackend ... done
[10:50:50.555] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.555] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.555] Created future:
[10:50:50.555] |  :  .  |  attachPackages() ... DONE
[10:50:50.556] |  :  .  |  attachPackages() ...
[10:50:50.556] |  :  .  |  :  packages: [n=0] 
[10:50:50.556] |  :  .  |  attachPackages() ... DONE
[10:50:50.557] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.557] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.557] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.558] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.558] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.559] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.559] |  :  .  |  :  .  |  New stack:
[10:50:50.559] |  :  .  |  :  .  |  List of 1
[10:50:50.559] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.559] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.559] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.559] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.559] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.559] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.559] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.564] |  :  .  |  :  .  |  Old stack:
[10:50:50.567] readImmediateCondition() ...
[10:50:50.567]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.568]  - Number of RDS files: 0
[10:50:50.568] readImmediateCondition() ... DONE
[10:50:50.555] MulticoreFuture:
[10:50:50.555] Label: ‘future_Map-1’
[10:50:50.555] Expression:
[10:50:50.555] {
[10:50:50.555]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.555]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.555]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.555]         on.exit(options(oopts), add = TRUE)
[10:50:50.555]     }
[10:50:50.555]     {
[10:50:50.555]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.555]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.555]         do.call(mapply, args = args)
[10:50:50.555]     }
[10:50:50.555] }
[10:50:50.555] Lazy evaluation: FALSE
[10:50:50.555] Asynchronous evaluation: TRUE
[10:50:50.555] Local evaluation: TRUE
[10:50:50.555] Environment: R_GlobalEnv
[10:50:50.555] Capture standard output: TRUE
[10:50:50.555] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.555] Immediate condition classes: ‘immediateCondition’
[10:50:50.555] Globals: 5 objects totaling 188 bytes (function ‘...future.FUN’ of 32 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 75 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.555] Packages: <none>
[10:50:50.555] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.555] Resolved: FALSE
[10:50:50.555] Value: <not collected>
[10:50:50.555] Conditions captured: <none>
[10:50:50.555] Early signaling: FALSE
[10:50:50.555] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.555] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.569] Chunk #1 of 2 ... DONE
[10:50:50.564] |  :  .  |  :  .  |  List of 1
[10:50:50.564] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.564] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.564] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.564] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.564] |  :  .  |  :  .  |      ...)  
[10:50:50.564] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.564] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.564] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.564] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.564] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.564] |  :  .  |  :  .  |      ...)  
[10:50:50.564] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.564] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.569] Chunk #2 of 2 ...
[10:50:50.569] |  :  .  |  :  .  |  Not identical
[10:50:50.569]  - Finding globals in '...' for chunk #2 ...
[10:50:50.569] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.569] getGlobalsAndPackages() ...
[10:50:50.569] |  Searching for globals ...
[10:50:50.570] |  :  globals found: [0] 
[10:50:50.570] |  Searching for globals ... DONE
[10:50:50.570] |  globals: [0] <none>
[10:50:50.570] |  packages: [0] <none>
[10:50:50.571] getGlobalsAndPackages() ... done
[10:50:50.571]    + additional globals found: [n=0] 
[10:50:50.571]    + additional namespaces needed: [n=0] 
[10:50:50.571]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.571]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.571]  - seeds: <none>
[10:50:50.571]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.571] getGlobalsAndPackages() ...
[10:50:50.572] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.572] |  Resolving globals: FALSE
[10:50:50.572] |  Search for packages associated with the globals ...
[10:50:50.572] |  :  Packages associated with globals: [0] 
[10:50:50.573] |  :  Packages: [0] 
[10:50:50.573] |  Search for packages associated with the globals ... DONE
[10:50:50.573] |  Packages after dropping 'base': [0] 
[10:50:50.573] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.573] |  packages: [0] 
[10:50:50.573] getGlobalsAndPackages() ... done
[10:50:50.574] run() for Future (‘Future’) ...
[10:50:50.574] |  state: ‘created’
[10:50:50.574] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.574] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.574] |  Using MulticoreFutureBackend ...
[10:50:50.575] |  :  Launching futures ...
[10:50:50.575] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.575] |  :  .  |  getFutureData() ...
[10:50:50.575] |  :  .  |  :  getFutureCore() ...
[10:50:50.575] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.575] |  :  .  |  :  getFutureCore() ... done
[10:50:50.575] |  :  .  |  :  getFutureCapture() ...
[10:50:50.575] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.569] |  :  .  |  :  .  |  :  List of 2
[10:50:50.569] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "[10:50:50.576] |  :  .  |  :  getFutureContext() ...
gc" "interrupts" ...
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.569] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.569] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.569] |  :  .  |  :  .  |  :      ...)  
[10:50:50.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.569] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.569] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.569] |  :  .  |  :  .  |  :      ...)  
[10:50:50.569] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.576] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.576] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.576] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.576] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.576] |  :  .  |  :  getFutureContext() ... done
[10:50:50.576] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.576] |  :  .  |  getFutureData() ... done
[10:50:50.576] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.577] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.577] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.577] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.577] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.577] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.577] |  :  .  |  :  .  List of future strategies:
[10:50:50.577] |  :  .  |  :  .  1. sequential:
[10:50:50.577] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.577] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.577] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.579] |  :  .  |  MulticoreFuture started
[10:50:50.580] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.580] |  :  Launching futures ... done
[10:50:50.580] |  :  .  |  attachPackages() ...
[10:50:50.578] |  :  .  |  :  .  List of 1
[10:50:50.578] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.578] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.578] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.578] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.578] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.578] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.578] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.580] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.581] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup[10:50:50.581] |  :  .  |  :  packages: [n=1] ‘future’
 = FALSE) ...
[10:50:50.581] |  Using MulticoreFutureBackend ... done
[10:50:50.581] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.581] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.581] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.581] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.581] |  :  .  |  attachPackages() ... DONE
[10:50:50.581] Created future:
[10:50:50.582] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.582] |  :  .  |  attachPackages() ...
[10:50:50.582] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.582] |  :  .  |  :  packages: [n=0] 
[10:50:50.582] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.582] |  :  .  |  attachPackages() ... DONE
[10:50:50.582] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.582] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.582] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.583] |  :  .  |  assign_globals() ...
[10:50:50.583] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.584] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.584] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.584] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.585] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.585] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.585] |  :  .  |  :  .  |  New stack:
[10:50:50.585] |  :  .  |  :  .  |  List of 1
[10:50:50.585] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.585] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.585] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.585] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.585] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.585] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.585] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.589] |  :  .  |  :  .  |  Old stack:
[10:50:50.583] |  :  .  |  List of 5
[10:50:50.583] |  :  .  |   $ ...future.FUN            :function (e1, e2)  
[10:50:50.583] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.583] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.583] |  :  .  |    ..$ :List of 1
[10:50:50.583] |  :  .  |    .. ..$ : num 1
[10:50:50.583] |  :  .  |    ..$ :List of 1
[10:50:50.583] |  :  .  |    .. ..$ : int 1
[10:50:50.583] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.583] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.583] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.583] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.583] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.583] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.583] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.583] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.583] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.583] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.583] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.583] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.590] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.591] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.591] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.591] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.591] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.591] |  :  .  |  assign_globals() ... done
[10:50:50.594] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.589] |  :  .  |  :  .  |  List of 1
[10:50:50.589] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(co[10:50:50.594] readImmediateCondition() ...
nstraints = "multicore"), gc = FALSE, 
[10:50:50.589] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.589] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.589] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.589] |  :  .  |  :  .  |      ...)  
[10:50:50.589] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.589] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.589] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.589] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.589] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.589] |  :  .  |  :  .  |      ...)  
[10:50:50.589] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.589] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.594] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.594] |  :  .  |  :  .  |  Not identical
[10:50:50.594]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.594] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.594] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.594] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.595] |  :  .  |  :  .  |  :  New stack:
[10:50:50.594]  - Number of RDS files: 0
[10:50:50.595] readImmediateCondition() ... DONE
[10:50:50.582] MulticoreFuture:
[10:50:50.582] Label: ‘future_Map-2’
[10:50:50.582] Expression:
[10:50:50.582] {
[10:50:50.582]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.582]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.582]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.582]         on.exit(options(oopts), add = TRUE)
[10:50:50.582]     }
[10:50:50.582]     {
[10:50:50.582]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.582]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.582]         do.call(mapply, args = args)
[10:50:50.582]     }
[10:50:50.582] }
[10:50:50.582] Lazy evaluation: FALSE
[10:50:50.582] Asynchronous evaluation: TRUE
[10:50:50.582] Local evaluation: TRUE
[10:50:50.582] Environment: R_GlobalEnv
[10:50:50.582] Capture standard output: TRUE
[10:50:50.582] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.582] Immediate condition classes: ‘immediateCondition’
[10:50:50.582] Globals: 5 objects totaling 216 bytes (function ‘...future.FUN’ of 32 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 103 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.582] Packages: <none>
[10:50:50.582] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.582] Resolved: FALSE
[10:50:50.582] Value: <not collected>
[10:50:50.582] Conditions captured: <none>
[10:50:50.582] Early signaling: FALSE
[10:50:50.582] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.582] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.595] Chunk #2 of 2 ... DONE
[10:50:50.596] Launching 2 futures (chunks) ... DONE
[10:50:50.596] Resolving 2 futures (chunks) ...
[10:50:50.596] value() on list ...
[10:50:50.596] |  recursive: 0
[10:50:50.597] |  length: 2
[10:50:50.597] |  
[10:50:50.597] |  Number of remaining objects: 2
[10:50:50.597] |  checking value #1 ...
[10:50:50.597] |  :  'obj' is MulticoreFuture
[10:50:50.595] |  :  .  |  :  .  |  :  List of 1
[10:50:50.595] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.595] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.595] |  :  .  |  :  .  |  :      ...)  
[10:50:50.595] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.595] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.595] |  :  .  |  :  .  |  :      ...)  
[10:50:50.595] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.595] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.599] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.595] |  :  .  |  :  .  |  :  List of 2
[10:50:50.595] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.595] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.595] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.595] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.595] |  :  .  |  :  .  |  :      ...)  
[10:50:50.595] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.595] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.595] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.595] |  :  .  |  :  .  |  :      ...)  
[10:50:50.595] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.599] |  :  .  |  :  .  |  :  List of 1
[10:50:50.599] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.599] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.599] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.599] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.599] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.599] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.599] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.602] |  :  .  |  :  .  |  :  Not identical
[10:50:50.602] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.602] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.603] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.603] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.603] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.603] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.603] |  :  .  |  :  .  List of future strategies:
[10:50:50.603] |  :  .  |  :  .  1. sequential:
[10:50:50.603] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.603] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.603] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.604] |  :  .  |  :  .  List of 1
[10:50:50.604] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.604] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.604] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.604] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.604] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.604] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.604] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.607] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.607] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.607] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.607] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.608] |  :  readImmediateCondition() ...
[10:50:50.608] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.608] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.608] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.602] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.602] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.602] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.602] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.602] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.602] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.602] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.602] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.602] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.602] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.602] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.608] |  :   - Number of RDS files: 0
[10:50:50.608] |  :  readImmediateCondition() ... DONE
[10:50:50.608] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.609] |  checking value #1 ... done
[10:50:50.609] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.609] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.609] |  checking value #2 ...
[10:50:50.609] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.609] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.609] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.609] |  :  'obj' is MulticoreFuture
[10:50:50.609] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.609] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.609] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.609] |  :  .  |  assign_globals() ...
[10:50:50.609] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.609] |  :  .  |  :  .  |  1. multicore:
[10:50:50.609] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.609] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.609] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.610] |  :  .  |  :  .  |  List of 1
[10:50:50.610] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.610] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.610] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.610] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.610] |  :  .  |  :  .  |      ...)  
[10:50:50.610] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.610] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.610] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.610] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.610] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.610] |  :  .  |  :  .  |      ...)  
[10:50:50.610] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.610] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.614] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.614] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.614] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.614] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.615] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.615] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.615] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.615] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.615] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.610] |  :  .  |  List of 5
[10:50:50.610] |  :  .  |   $ ...future.FUN            :function (e1, e2)  
[10:50:50.610] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.610] |  :  .  |   $ ...future.elements_ii    :List of 2
[10:50:50.610] |  :  .  |    ..$ :List of 2
[10:50:50.610] |  :  .  |    .. ..$ : num 1
[10:50:50.610] |  :  .  |    .. ..$ : num 1
[10:50:50.610] |  :  .  |    ..$ :List of 2
[10:50:50.610] |  :  .  |    .. ..$ : int 2
[10:50:50.610] |  :  .  |    .. ..$ : int 3
[10:50:50.610] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.610] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.610] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.610] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.610] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.610] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.610] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.610] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.610] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.610] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.610] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.610] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.618] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.618] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.618] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.619] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.619] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.619] |  :  .  |  assign_globals() ... done
[10:50:50.619] |  :  readImmediateCondition() ...
[10:50:50.619] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.620] |  :   - Number of RDS files: 0
[10:50:50.620] |  :  readImmediateCondition() ... DONE
[10:50:50.620] |  checking value #2 ... done
[10:50:50.622] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.622] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.622] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.623] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.623] |  :  .  |  :  .  |  :  New stack:
[10:50:50.623] |  :  .  |  :  .  |  :  List of 1
[10:50:50.623] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.623] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.623] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.623] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.623] |  :  .  |  :  .  |  :      ...)  
[10:50:50.623] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.623] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.623] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.623] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.623] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.623] |  :  .  |  :  .  |  :      ...)  
[10:50:50.623] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.623] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.627] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.627] |  :  .  |  :  .  |  :  List of 1
[10:50:50.627] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.627] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.627] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.627] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.627] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.627] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.627] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.630] |  :  .  |  :  .  |  :  Not identical
[10:50:50.630] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.630] |  Number of remaining objects: 2
[10:50:50.631] |  checking value #1 ...
[10:50:50.631] |  :  'obj' is MulticoreFuture
[10:50:50.631] |  :  readImmediateCondition() ...
[10:50:50.631] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.632] |  :   - Number of RDS files: 0
[10:50:50.632] |  :  readImmediateCondition() ... DONE
[10:50:50.632] |  :  MulticoreFuture #1
[10:50:50.632] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.632] |  :  .  nx: 2
[10:50:50.632] |  :  .  relay: TRUE
[10:50:50.633] |  :  .  stdout: TRUE
[10:50:50.633] |  :  .  signal: TRUE
[10:50:50.633] |  :  .  resignal: FALSE
[10:50:50.633] |  :  .  force: TRUE
[10:50:50.633] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.634] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.634] |  :  .  until=1
[10:50:50.634] |  :  .  relaying element #1
[10:50:50.634] |  :  .  result() for MulticoreFuture ...
[10:50:50.635] |  :  .  |  readImmediateCondition() ...
[10:50:50.635] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.636] |  :  .  |   - Number of RDS files: 0
[10:50:50.636] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.636] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.636] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.637] |  :  .  result() for MulticoreFuture ... done
[10:50:50.637] |  :  .  result() for MulticoreFuture ...
[10:50:50.637] |  :  .  result() for MulticoreFuture ... done
[10:50:50.637] |  :  .  result() for MulticoreFuture ...
[10:50:50.638] |  :  .  result() for MulticoreFuture ... done
[10:50:50.638] |  :  .  result() for MulticoreFuture ...
[10:50:50.638] |  :  .  result() for MulticoreFuture ... done
[10:50:50.638] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.638] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.639] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.639] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.639] |  :  .  result() for MulticoreFuture ...
[10:50:50.639] |  :  .  result() for MulticoreFuture ... done
[10:50:50.639] |  :  .  result() for MulticoreFuture ...
[10:50:50.640] |  :  .  result() for MulticoreFuture ... done
[10:50:50.630] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.630] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.630] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.630] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.630] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.630] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.630] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.630] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.630] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.630] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.630] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.640] |  :  .  value: <list>
[10:50:50.640] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.640] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.641] |  :  .  nx: 2
[10:50:50.641] |  :  .  relay: TRUE
[10:50:50.641] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.641] |  :  .  stdout: TRUE
[10:50:50.641] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.641] |  :  .  signal: TRUE
[10:50:50.641] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.641] |  :  .  resignal: FALSE
[10:50:50.641] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.641] |  :  .  force: TRUE
[10:50:50.641] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.641] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.642] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.642] |  :  .  until=2
[10:50:50.642] |  :  .  relaying element #2
[10:50:50.642] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.642] |  :  .  |  :  .  |  1. multicore:
[10:50:50.642] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.642] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.642] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.642] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.642] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.643] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.643] |  :  length: 1 (resolved future 1)
[10:50:50.643] |  checking value #1 ... done
[10:50:50.643] |  checking value #2 ...
[10:50:50.643] |  :  'obj' is MulticoreFuture
[10:50:50.642] |  :  .  |  :  .  |  List of 1
[10:50:50.642] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.642] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.642] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.642] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.642] |  :  .  |  :  .  |      ...)  
[10:50:50.642] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.642] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.642] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.642] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.642] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.642] |  :  .  |  :  .  |      ...)  
[10:50:50.642] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.642] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.647] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.647] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.647] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.648] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.648] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.648] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.648] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.648] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.648] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.649] |  :  readImmediateCondition() ...
[10:50:50.649] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.649] |  :   - Number of RDS files: 0
[10:50:50.649] |  :  readImmediateCondition() ... DONE
[10:50:50.649] |  :  MulticoreFuture #2
[10:50:50.649] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.649] |  :  .  nx: 2
[10:50:50.650] |  :  .  relay: TRUE
[10:50:50.650] |  :  .  stdout: TRUE
[10:50:50.650] |  :  .  signal: TRUE
[10:50:50.650] |  :  .  resignal: FALSE
[10:50:50.650] |  :  .  force: TRUE
[10:50:50.650] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.650] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.650] |  :  .  until=2
[10:50:50.650] |  :  .  relaying element #2
[10:50:50.651] |  :  .  result() for MulticoreFuture ...
[10:50:50.651] |  :  .  |  readImmediateCondition() ...
[10:50:50.651] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.651] |  :  .  |   - Number of RDS files: 0
[10:50:50.652] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.652] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.652] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.652] |  :  .  result() for MulticoreFuture ... done
[10:50:50.652] |  :  .  result() for MulticoreFuture ...
[10:50:50.653] |  :  .  result() for MulticoreFuture ... done
[10:50:50.653] |  :  .  result() for MulticoreFuture ...
[10:50:50.653] |  :  .  result() for MulticoreFuture ... done
[10:50:50.653] |  :  .  result() for MulticoreFuture ...
[10:50:50.653] |  :  .  result() for MulticoreFuture ... done
[10:50:50.654] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.654] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.654] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.654] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.654] |  :  .  result() for MulticoreFuture ...
[10:50:50.654] |  :  .  result() for MulticoreFuture ... done
[10:50:50.655] |  :  .  result() for MulticoreFuture ...
[10:50:50.655] |  :  .  result() for MulticoreFuture ... done
[10:50:50.655] |  :  .  value: <list>
[10:50:50.655] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.655] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.655] |  :  .  nx: 2
[10:50:50.655] |  :  .  relay: TRUE
[10:50:50.656] |  :  .  stdout: TRUE
[10:50:50.656] |  :  .  signal: TRUE
[10:50:50.656] |  :  .  resignal: FALSE
[10:50:50.656] |  :  .  force: TRUE
[10:50:50.656] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.656] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.656] |  :  .  until=2
[10:50:50.657] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.657] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.657] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.657] |  :  length: 0 (resolved future 2)
[10:50:50.657] |  checking value #2 ... done
[10:50:50.657] |  Relaying remaining futures ...
[10:50:50.657] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.658] |  :  .  nx: 2
[10:50:50.658] |  :  .  relay: TRUE
[10:50:50.658] |  :  .  stdout: TRUE
[10:50:50.658] |  :  .  signal: TRUE
[10:50:50.658] |  :  .  resignal: FALSE
[10:50:50.658] |  :  .  force: TRUE
[10:50:50.658] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.658] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.658] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.658] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.659] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.659] |  Relaying remaining futures ... done
[10:50:50.659] value() on list ... done
[10:50:50.659]  - Number of value chunks collected: 2
[10:50:50.659] Resolving 2 futures (chunks) ... DONE
[10:50:50.659] Reducing values from 2 chunks ...
[10:50:50.659]  - Number of values collected after concatenation: 3
[10:50:50.659]  - Number of values expected: 3
[10:50:50.659] Reducing values from 2 chunks ... DONE
[10:50:50.660] future_mapply() ... DONE
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
[10:50:50.660] future_mapply() ...
[10:50:50.660] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.661] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.661] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.661] Number of chunks: 2
[10:50:50.661] getGlobalsAndPackagesXApply() ...
[10:50:50.661]  - future.globals: TRUE
[10:50:50.662] getGlobalsAndPackages() ...
[10:50:50.662] |  Searching for globals ...
[10:50:50.663] |  :  globals found: [1] ‘FUN’
[10:50:50.663] |  Searching for globals ... DONE
[10:50:50.663] |  Resolving globals: FALSE
[10:50:50.664] |  Search for packages associated with the globals ...
[10:50:50.664] |  :  Packages associated with globals: [1] ‘base’
[10:50:50.664] |  :  Packages: [1] ‘base’
[10:50:50.664] |  Search for packages associated with the globals ... DONE
[10:50:50.664] |  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:50.665] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:50.665] |  Packages after dropping 'base': [0] 
[10:50:50.665] |  globals: [1] ‘FUN’
[10:50:50.665] |  packages: [0] 
[10:50:50.665] getGlobalsAndPackages() ... done
[10:50:50.665]  - globals found/used: [n=1] ‘FUN’
[10:50:50.666]  - needed namespaces: [n=0] 
[10:50:50.666] Finding globals ... DONE
[10:50:50.666] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:50.666] List of 2
[10:50:50.666]  $ ...future.FUN:function (x)  
[10:50:50.666]  $ MoreArgs     : NULL
[10:50:50.666]  - attr(*, "where")=List of 2
[10:50:50.666]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:50.666]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:50.666]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.666]  - attr(*, "resolved")= logi FALSE
[10:50:50.666]  - attr(*, "total_size")= num NA
[10:50:50.669] Packages to be attached in all futures: [n=0] 
[10:50:50.669] getGlobalsAndPackagesXApply() ... DONE
[10:50:50.670] Number of futures (= number of chunks): 2
[10:50:50.670] Launching 2 futures (chunks) ...
[10:50:50.670] Chunk #1 of 2 ...
[10:50:50.670]  - Finding globals in '...' for chunk #1 ...
[10:50:50.670] getGlobalsAndPackages() ...
[10:50:50.670] |  Searching for globals ...
[10:50:50.671] |  :  globals found: [0] 
[10:50:50.671] |  Searching for globals ... DONE
[10:50:50.671] |  globals: [0] <none>
[10:50:50.671] |  packages: [0] <none>
[10:50:50.671] getGlobalsAndPackages() ... done
[10:50:50.671]    + additional globals found: [n=0] 
[10:50:50.671]    + additional namespaces needed: [n=0] 
[10:50:50.671]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:50.672]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.672]  - seeds: <none>
[10:50:50.672]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.672] getGlobalsAndPackages() ...
[10:50:50.672] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.672] |  Resolving globals: FALSE
[10:50:50.672] |  Search for packages associated with the globals ...
[10:50:50.673] |  :  Packages associated with globals: [1] ‘base’
[10:50:50.673] |  :  Packages: [1] ‘base’
[10:50:50.673] |  Search for packages associated with the globals ... DONE
[10:50:50.673] |  Packages after dropping 'base': [0] 
[10:50:50.673] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.673] |  packages: [0] 
[10:50:50.673] getGlobalsAndPackages() ... done
[10:50:50.674] run() for Future (‘Future’) ...
[10:50:50.674] |  state: ‘created’
[10:50:50.674] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.674] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.674] |  Using MulticoreFutureBackend ...
[10:50:50.674] |  :  Launching futures ...
[10:50:50.675] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.675] |  :  .  |  getFutureData() ...
[10:50:50.675] |  :  .  |  :  getFutureCore() ...
[10:50:50.675] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.675] |  :  .  |  :  getFutureCore() ... done
[10:50:50.675] |  :  .  |  :  getFutureCapture() ...
[10:50:50.675] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.675] |  :  .  |  :  getFutureContext() ...
[10:50:50.676] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.676] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.676] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.676] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.676] |  :  .  |  :  getFutureContext() ... done
[10:50:50.676] |  :  .  |  getFutureData() ... done
[10:50:50.676] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.677] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.679] |  :  .  |  MulticoreFuture started
[10:50:50.679] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.679] |  :  Launching futures ... done
[10:50:50.679] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.679] |  :  .  |  attachPackages() ...
[10:50:50.679] |  Using MulticoreFutureBackend ... done
[10:50:50.680] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.680] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.680] Created future:
[10:50:50.680] |  :  .  |  attachPackages() ... DONE
[10:50:50.680] |  :  .  |  attachPackages() ...
[10:50:50.680] |  :  .  |  :  packages: [n=0] 
[10:50:50.680] |  :  .  |  attachPackages() ... DONE
[10:50:50.681] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.681] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.682] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.682] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.682] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.683] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.683] |  :  .  |  :  .  |  New stack:
[10:50:50.683] |  :  .  |  :  .  |  List of 1
[10:50:50.683] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.683] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.683] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.683] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.683] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.683] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.683] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.687] |  :  .  |  :  .  |  Old stack:
[10:50:50.687] |  :  .  |  :  .  |  List of 1
[10:50:50.687] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.687] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.687] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.687] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.687] |  :  .  |  :  .  |      ...)  
[10:50:50.687] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.687] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.687] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.687] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.687] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.687] |  :  .  |  :  .  |      ...)  
[10:50:50.687] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.687] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.691] |  :  .  |  :  .  |  Not identical
[10:50:50.691] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.692] readImmediateCondition() ...
[10:50:50.692]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.692]  - Number of RDS files: 0
[10:50:50.692] readImmediateCondition() ... DONE
[10:50:50.680] MulticoreFuture:
[10:50:50.680] Label: ‘future_mapply-1’
[10:50:50.680] Expression:
[10:50:50.680] {
[10:50:50.680]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.680]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.680]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.680]         on.exit(options(oopts), add = TRUE)
[10:50:50.680]     }
[10:50:50.680]     {
[10:50:50.680]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.680]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.680]         do.call(mapply, args = args)
[10:50:50.680]     }
[10:50:50.680] }
[10:50:50.680] Lazy evaluation: FALSE
[10:50:50.680] Asynchronous evaluation: TRUE
[10:50:50.680] Local evaluation: TRUE
[10:50:50.680] Environment: R_GlobalEnv
[10:50:50.680] Capture standard output: TRUE
[10:50:50.680] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.680] Immediate condition classes: ‘immediateCondition’
[10:50:50.680] Globals: 5 objects totaling 363 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 97 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.680] Packages: <none>
[10:50:50.680] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.680] Resolved: FALSE
[10:50:50.680] Value: <not collected>
[10:50:50.680] Conditions captured: <none>
[10:50:50.680] Early signaling: FALSE
[10:50:50.680] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.680] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.693] Chunk #1 of 2 ... DONE
[10:50:50.693] Chunk #2 of 2 ...
[10:50:50.693]  - Finding globals in '...' for chunk #2 ...
[10:50:50.693] getGlobalsAndPackages() ...
[10:50:50.693] |  Searching for globals ...
[10:50:50.694] |  :  globals found: [0] 
[10:50:50.694] |  Searching for globals ... DONE
[10:50:50.694] |  globals: [0] <none>
[10:50:50.694] |  packages: [0] <none>
[10:50:50.694] getGlobalsAndPackages() ... done
[10:50:50.694]    + additional globals found: [n=0] 
[10:50:50.695]    + additional namespaces needed: [n=0] 
[10:50:50.695]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:50.695]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:50.695]  - seeds: <none>
[10:50:50.695]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.695] getGlobalsAndPackages() ...
[10:50:50.695] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.695] |  Resolving globals: FALSE
[10:50:50.696] |  Search for packages associated with the globals ...
[10:50:50.696] |  :  Packages associated with globals: [1] ‘base’
[10:50:50.696] |  :  Packages: [1] ‘base’
[10:50:50.696] |  Search for packages associated with the globals ... DONE
[10:50:50.697] |  Packages after dropping 'base': [0] 
[10:50:50.697] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:50.691] |  :  .  |  :  .  |  :  List of 2
[10:50:50.691] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.691] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.691] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.691] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.691] |  :  .  |  :  .  |  :      ...)  
[10:50:50.691] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.691] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.691] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.691] |  :  .  |  :  .  |  :      ...)  
[10:50:50.691] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.697] |  packages: [0] 
[10:50:50.697] getGlobalsAndPackages() ... done
[10:50:50.697] run() for Future (‘Future’) ...
[10:50:50.698] |  state: ‘created’
[10:50:50.698] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.698] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.698] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.698] |  plan(<multicore>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.698] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.698] |  Using MulticoreFutureBackend ...
[10:50:50.698] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.698] |  :  Launching futures ...
[10:50:50.698] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.698] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.698] |  :  .  |  getFutureData() ...
[10:50:50.699] |  :  .  |  :  getFutureCore() ...
[10:50:50.699] |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:50.699] |  :  .  |  :  getFutureCore() ... done
[10:50:50.699] |  :  .  |  :  getFutureCapture() ...
[10:50:50.698] |  :  .  |  :  .  List of future strategies:
[10:50:50.698] |  :  .  |  :  .  1. sequential:
[10:50:50.698] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.698] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.698] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.699] |  :  .  |  :  getFutureCapture() ... done
[10:50:50.699] |  :  .  |  :  getFutureContext() ...
[10:50:50.699] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.699] |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:50.700] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.700] |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:50.700] |  :  .  |  :  getFutureContext() ... done
[10:50:50.700] |  :  .  |  getFutureData() ... done
[10:50:50.700] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.701] |  :  .  |  requestCore(..., workers = 2) ...
[10:50:50.699] |  :  .  |  :  .  List of 1
[10:50:50.699] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.699] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.699] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.699] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.699] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.699] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.699] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.702] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.702] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.703] |  :  .  |  MulticoreFuture started
[10:50:50.704] |  :  .  launchFuture() for MulticoreFutureBackend ...
[10:50:50.704] |  :  Launching futures ... done
[10:50:50.704] |  :  .  |  attachPackages() ...
[10:50:50.704] |  :  Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.704] |  :  .  |  :  packages: [n=1] ‘future’
[10:50:50.704] |  Using MulticoreFutureBackend ... done
[10:50:50.705] run() for Future (‘MulticoreFuture’) ... done
[10:50:50.705] |  :  .  |  attachPackages() ... DONE
[10:50:50.705] Created future:
[10:50:50.705] |  :  .  |  attachPackages() ...
[10:50:50.705] |  :  .  |  :  packages: [n=0] 
[10:50:50.705] |  :  .  |  attachPackages() ... DONE
[10:50:50.707] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.702] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.707] |  :  .  |  :  Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.707] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.707] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.708] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.708] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.708] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.708] |  :  .  |  :  .  all.equal() for FutureStrategyList ...
[10:50:50.708] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.708] |  :  .  |  :  .  |  New stack:
[10:50:50.709] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.709] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.709] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.709] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.710] |  :  .  |  assign_globals() ...
[10:50:50.709] |  :  .  |  :  .  |  List of 1
[10:50:50.709] |  :  .  |  :  .  |   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.709] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.709] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.709] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.709] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.709] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.709] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.712] |  :  .  |  :  .  |  Old stack:
[10:50:50.712] |  :  .  |  :  .  |  List of 1
[10:50:50.712] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.712] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.712] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.712] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.712] |  :  .  |  :  .  |      ...)  
[10:50:50.712] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.712] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.712] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.712] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.712] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.712] |  :  .  |  :  .  |      ...)  
[10:50:50.712] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.712] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.710] |  :  .  |  List of 5
[10:50:50.710] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:50.710] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.710] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:50.710] |  :  .  |    ..$ :List of 1
[10:50:50.710] |  :  .  |    .. ..$ a: num 0
[10:50:50.710] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.710] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.710] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.710] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.710] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.710] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.710] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.710] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.710] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.710] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.710] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.710] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.717] |  :  .  |  :  .  |  Not identical
[10:50:50.717] |  :  .  |  :  .  |  all.equal() for future ...
[10:50:50.717] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.717] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.717] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.717] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.717] readImmediateCondition() ...
[10:50:50.717] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.718] |  :  .  |  assign_globals() ... done
[10:50:50.718]   - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.718]  - Number of RDS files: 0
[10:50:50.718] readImmediateCondition() ... DONE
[10:50:50.705] MulticoreFuture:
[10:50:50.705] Label: ‘future_mapply-2’
[10:50:50.705] Expression:
[10:50:50.705] {
[10:50:50.705]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:50.705]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:50.705]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:50.705]         on.exit(options(oopts), add = TRUE)
[10:50:50.705]     }
[10:50:50.705]     {
[10:50:50.705]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:50.705]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:50.705]         do.call(mapply, args = args)
[10:50:50.705]     }
[10:50:50.705] }
[10:50:50.705] Lazy evaluation: FALSE
[10:50:50.705] Asynchronous evaluation: TRUE
[10:50:50.705] Local evaluation: TRUE
[10:50:50.705] Environment: R_GlobalEnv
[10:50:50.705] Capture standard output: TRUE
[10:50:50.705] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:50.705] Immediate condition classes: ‘immediateCondition’
[10:50:50.705] Globals: 5 objects totaling 363 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 97 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:50.705] Packages: <none>
[10:50:50.705] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:50.705] Resolved: FALSE
[10:50:50.705] Value: <not collected>
[10:50:50.705] Conditions captured: <none>
[10:50:50.705] Early signaling: FALSE
[10:50:50.705] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:50.705] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:50.719] Chunk #2 of 2 ... DONE
[10:50:50.719] Launching 2 futures (chunks) ... DONE
[10:50:50.719] Resolving 2 futures (chunks) ...
[10:50:50.720] value() on list ...
[10:50:50.720] |  recursive: 0
[10:50:50.720] |  length: 2
[10:50:50.720] |  
[10:50:50.720] |  Number of remaining objects: 2
[10:50:50.720] |  checking value #1 ...
[10:50:50.720] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.721] |  :  'obj' is MulticoreFuture
[10:50:50.721] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.721] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.721] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.721] |  :  .  |  :  .  |  :  New stack:
[10:50:50.721] |  :  .  |  :  .  |  :  List of 1
[10:50:50.721] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.721] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.721] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.721] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.721] |  :  .  |  :  .  |  :      ...)  
[10:50:50.721] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.721] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.721] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.721] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.721] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.721] |  :  .  |  :  .  |  :      ...)  
[10:50:50.721] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.721] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.726] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.726] |  :  .  |  :  .  |  :  List of 1
[10:50:50.726] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.726] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.726] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.726] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.726] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.726] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.726] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.729] |  :  .  |  :  .  |  :  Not identical
[10:50:50.729] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.717] |  :  .  |  :  .  |  :  List of 2
[10:50:50.717] |  :  .  |  :  .  |  :   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.717] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.717] |  :  .  |  :  .  |  :   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.717] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.717] |  :  .  |  :  .  |  :      ...)  
[10:50:50.717] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.717] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.717] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.717] |  :  .  |  :  .  |  :      ...)  
[10:50:50.717] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.731] |  :  .  |  :  .  |  :  Formals differ
[10:50:50.731] |  :  .  |  :  .  |  all.equal() for future ... done
[10:50:50.731] |  :  readImmediateCondition() ...
[10:50:50.731] |  :  .  |  :  .  |  Future strategies differ at level 1
[10:50:50.731] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.731] |  :  .  |  :  .  all.equal() for FutureStrategyList ... done
[10:50:50.731] |  :  .  |  :  .  plan(): Setting new future strategy stack:
[10:50:50.731] |  :   - Number of RDS files: 0
[10:50:50.732] |  :  readImmediateCondition() ... DONE
[10:50:50.732] |  checking value #1 ... done
[10:50:50.732] |  checking value #2 ...
[10:50:50.732] |  :  'obj' is MulticoreFuture
[10:50:50.732] |  :  .  |  :  .  List of future strategies:
[10:50:50.732] |  :  .  |  :  .  1. sequential:
[10:50:50.732] |  :  .  |  :  .     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.732] |  :  .  |  :  .     - tweaked: FALSE
[10:50:50.732] |  :  .  |  :  .     - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.733] |  :  .  |  :  .  List of 1
[10:50:50.733] |  :  .  |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.733] |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.733] |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.733] |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.733] |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.733] |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.733] |  :  .  |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.736] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.736] |  :  .  |  :  .  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.730] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.730] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.730] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.730] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.730] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.730] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.730] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.730] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.730] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.736] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.736] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.736] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.737] |  :  .  |  :  .  Backend function: <‘NULL’>
[10:50:50.737] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.737] |  :  .  |  :  .  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.737] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.737] |  :  .  |  :  .  plan(): nbrOfWorkers() = 1
[10:50:50.737] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.737] |  :  .  |  :  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.737] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.737] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.737] |  :  .  |  plan(<sequential>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.738] |  :  .  |  assign_globals() ...
[10:50:50.738] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.738] |  :  .  |  :  .  |  1. multicore:
[10:50:50.738] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.738] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.738] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.743] |  :  readImmediateCondition() ...
[10:50:50.743] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.738] |  :  .  |  :  .  |  List of 1
[10:50:50.738] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.738] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.738] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.738] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.738] |  :  .  |  :  .  |      ...)  
[10:50:50.738] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.738] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.738] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.738] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.738] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.738] |  :  .  |  :  .  |      ...)  
[10:50:50.738] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.738] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.743] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.743] |  :   - Number of RDS files: 0
[10:50:50.743] |  :  readImmediateCondition() ... DONE
[10:50:50.743] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.743] |  checking value #2 ... done
[10:50:50.743] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.744] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.744] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.744] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.744] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.744] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.745] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.738] |  :  .  |  List of 5
[10:50:50.738] |  :  .  |   $ ...future.FUN            :function (x)  
[10:50:50.738] |  :  .  |   $ MoreArgs                 : NULL
[10:50:50.738] |  :  .  |   $ ...future.elements_ii    :List of 1
[10:50:50.738] |  :  .  |    ..$ :List of 1
[10:50:50.738] |  :  .  |    .. ..$ b: num 0
[10:50:50.738] |  :  .  |   $ ...future.seeds_ii       : NULL
[10:50:50.738] |  :  .  |   $ ...future.globals.maxSize: NULL
[10:50:50.738] |  :  .  |   - attr(*, "where")=List of 5
[10:50:50.738] |  :  .  |    ..$ ...future.FUN            :<environment: R_EmptyEnv> 
[10:50:50.738] |  :  .  |    ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[10:50:50.738] |  :  .  |    ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[10:50:50.738] |  :  .  |    ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[10:50:50.738] |  :  .  |    ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[10:50:50.738] |  :  .  |   - attr(*, "resolved")= logi FALSE
[10:50:50.738] |  :  .  |   - attr(*, "total_size")= num NA
[10:50:50.738] |  :  .  |   - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:50.738] |  :  .  |   - attr(*, "already-done")= logi TRUE
[10:50:50.746] |  :  .  |  - copied ‘...future.FUN’ to environment
[10:50:50.746] |  :  .  |  - copied ‘MoreArgs’ to environment
[10:50:50.746] |  :  .  |  - copied ‘...future.elements_ii’ to environment
[10:50:50.746] |  :  .  |  - copied ‘...future.seeds_ii’ to environment
[10:50:50.746] |  :  .  |  - copied ‘...future.globals.maxSize’ to environment
[10:50:50.746] |  :  .  |  assign_globals() ... done
[10:50:50.749] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.750] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[10:50:50.750] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[10:50:50.750] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ...
[10:50:50.750] |  :  .  |  :  .  |  :  New stack:
[10:50:50.754] |  Number of remaining objects: 2
[10:50:50.754] |  checking value #1 ...
[10:50:50.754] |  :  'obj' is MulticoreFuture
[10:50:50.754] |  :  readImmediateCondition() ...
[10:50:50.755] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.755] |  :   - Number of RDS files: 0
[10:50:50.755] |  :  readImmediateCondition() ... DONE
[10:50:50.755] |  :  MulticoreFuture #1
[10:50:50.755] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.756] |  :  .  nx: 2
[10:50:50.751] |  :  .  |  :  .  |  :  List of 1
[10:50:50.751] |  :  .  |  :  .  |  :   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.751] |  :  .  |  :  .  |  :      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.751] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.751] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.751] |  :  .  |  :  .  |  :      ...)  
[10:50:50.751] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.751] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.751] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.751] |  :  .  |  :  .  |  :    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.751] |  :  .  |  :  .  |  :    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.751] |  :  .  |  :  .  |  :      ...)  
[10:50:50.751] |  :  .  |  :  .  |  :    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.751] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.756] |  :  .  relay: TRUE
[10:50:50.756] |  :  .  |  :  .  |  :  Old stack:
[10:50:50.756] |  :  .  stdout: TRUE
[10:50:50.756] |  :  .  signal: TRUE
[10:50:50.756] |  :  .  resignal: FALSE
[10:50:50.756] |  :  .  force: TRUE
[10:50:50.757] |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:50.757] |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:50.757] |  :  .  until=1
[10:50:50.757] |  :  .  relaying element #1
[10:50:50.757] |  :  .  result() for MulticoreFuture ...
[10:50:50.758] |  :  .  |  readImmediateCondition() ...
[10:50:50.759] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.759] |  :  .  |   - Number of RDS files: 0
[10:50:50.759] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.759] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.760] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.760] |  :  .  result() for MulticoreFuture ... done
[10:50:50.760] |  :  .  result() for MulticoreFuture ...
[10:50:50.760] |  :  .  result() for MulticoreFuture ... done
[10:50:50.761] |  :  .  result() for MulticoreFuture ...
[10:50:50.761] |  :  .  result() for MulticoreFuture ... done
[10:50:50.761] |  :  .  result() for MulticoreFuture ...
[10:50:50.761] |  :  .  result() for MulticoreFuture ... done
[10:50:50.761] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.756] |  :  .  |  :  .  |  :  List of 1
[10:50:50.756] |  :  .  |  :  .  |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.756] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.756] |  :  .  |  :  .  |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.756] |  :  .  |  :  .  |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.756] |  :  .  |  :  .  |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.756] |  :  .  |  :  .  |  :    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.756] |  :  .  |  :  .  |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.762] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.762] |  :  .  |  :  .  |  :  Not identical
[10:50:50.762] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ... done
[10:50:50.762] |  :  .  |  :  .  |  :  all.equal() for future ...
[10:50:50.762] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.762] |  :  .  result() for MulticoreFuture ...
[10:50:50.762] |  :  .  result() for MulticoreFuture ... done
[10:50:50.763] |  :  .  result() for MulticoreFuture ...
[10:50:50.763] |  :  .  result() for MulticoreFuture ... done
[10:50:50.763] |  :  .  value: <list>
[10:50:50.763] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.763] |  :  signalConditionsASAP(MulticoreFuture, pos=1) ...
[10:50:50.764] |  :  .  nx: 2
[10:50:50.764] |  :  .  relay: TRUE
[10:50:50.764] |  :  .  stdout: TRUE
[10:50:50.764] |  :  .  signal: TRUE
[10:50:50.764] |  :  .  resignal: FALSE
[10:50:50.768] |  :  .  force: TRUE
[10:50:50.769] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.769] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.769] |  :  .  until=2
[10:50:50.770] |  :  .  relaying element #2
[10:50:50.770] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.770] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.770] |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:50.770] |  :  length: 1 (resolved future 1)
[10:50:50.770] |  checking value #1 ... done
[10:50:50.770] |  checking value #2 ...
[10:50:50.770] |  :  'obj' is MulticoreFuture
[10:50:50.762] |  :  .  |  :  .  |  :  .  List of 2
[10:50:50.762] |  :  .  |  :  .  |  :  .   $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.762] |  :  .  |  :  .  |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.762] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.762] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.762] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.762] |  :  .  |  :  .  |  :  .      ...)  
[10:50:50.762] |  :  .  |  :  .  |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.762] |  :  .  |  :  .  |  :  .   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.762] |  :  .  |  :  .  |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.762] |  :  .  |  :  .  |  :  .    ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[10:50:50.772] |  :  .  |  :  .  |  :  .  Formals differ
[10:50:50.773] |  :  .  |  :  .  |  :  all.equal() for future ... done
[10:50:50.773] |  :  .  |  :  .  |  :  Future strategies differ at level 1
[10:50:50.773] |  :  .  |  :  .  |  all.equal() for FutureStrategyList ... done
[10:50:50.773] |  :  .  |  :  .  |  plan(): Setting new future strategy stack:
[10:50:50.773] |  :  .  |  :  .  |  List of future strategies:
[10:50:50.773] |  :  .  |  :  .  |  1. multicore:
[10:50:50.773] |  :  .  |  :  .  |     - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.773] |  :  .  |  :  .  |     - tweaked: FALSE
[10:50:50.773] |  :  .  |  :  .  |     - call: plan(strategy)
[10:50:50.774] |  :  .  |  :  .  |  List of 1
[10:50:50.774] |  :  .  |  :  .  |   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.774] |  :  .  |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.774] |  :  .  |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.774] |  :  .  |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.774] |  :  .  |  :  .  |      ...)  
[10:50:50.774] |  :  .  |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.774] |  :  .  |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.774] |  :  .  |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.774] |  :  .  |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.774] |  :  .  |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.774] |  :  .  |  :  .  |      ...)  
[10:50:50.774] |  :  .  |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.774] |  :  .  |  :  .  |   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.779] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[10:50:50.779] |  :  .  |  :  .  |  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[10:50:50.779] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.779] |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.780] |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.780] |  :  .  |  :  .  |  plan(): nbrOfWorkers() = 2
[10:50:50.780] |  :  .  |  :  .  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[10:50:50.780] |  :  .  |  :  plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.780] |  :  .  |  plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[10:50:50.781] |  :  readImmediateCondition() ...
[10:50:50.781] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.781] |  :   - Number of RDS files: 0
[10:50:50.781] |  :  readImmediateCondition() ... DONE
[10:50:50.781] |  checking value #2 ... done
[10:50:50.791] |  Number of remaining objects: 1
[10:50:50.792] |  checking value #2 ...
[10:50:50.792] |  :  'obj' is MulticoreFuture
[10:50:50.792] |  :  readImmediateCondition() ...
[10:50:50.792] |  :    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.792] |  :   - Number of RDS files: 0
[10:50:50.792] |  :  readImmediateCondition() ... DONE
[10:50:50.792] |  :  MulticoreFuture #2
[10:50:50.792] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.793] |  :  .  nx: 2
[10:50:50.793] |  :  .  relay: TRUE
[10:50:50.793] |  :  .  stdout: TRUE
[10:50:50.793] |  :  .  signal: TRUE
[10:50:50.793] |  :  .  resignal: FALSE
[10:50:50.793] |  :  .  force: TRUE
[10:50:50.793] |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:50.793] |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:50.793] |  :  .  until=2
[10:50:50.793] |  :  .  relaying element #2
[10:50:50.794] |  :  .  result() for MulticoreFuture ...
[10:50:50.794] |  :  .  |  readImmediateCondition() ...
[10:50:50.794] |  :  .  |    - path: ‘/tmp/Rtmphtb6tv/.future/immediateConditions’
[10:50:50.794] |  :  .  |   - Number of RDS files: 0
[10:50:50.794] |  :  .  |  readImmediateCondition() ... DONE
[10:50:50.795] |  :  .  |  result() for MulticoreFuture ...
[10:50:50.795] |  :  .  |  result() for MulticoreFuture ... done
[10:50:50.795] |  :  .  result() for MulticoreFuture ... done
[10:50:50.795] |  :  .  result() for MulticoreFuture ...
[10:50:50.795] |  :  .  result() for MulticoreFuture ... done
[10:50:50.795] |  :  .  result() for MulticoreFuture ...
[10:50:50.795] |  :  .  result() for MulticoreFuture ... done
[10:50:50.795] |  :  .  result() for MulticoreFuture ...
[10:50:50.796] |  :  .  result() for MulticoreFuture ... done
[10:50:50.796] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.796] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.796] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.796] |  :  value(<MulticoreFuture>, ...) ...
[10:50:50.796] |  :  .  result() for MulticoreFuture ...
[10:50:50.796] |  :  .  result() for MulticoreFuture ... done
[10:50:50.796] |  :  .  result() for MulticoreFuture ...
[10:50:50.797] |  :  .  result() for MulticoreFuture ... done
[10:50:50.797] |  :  .  value: <list>
[10:50:50.797] |  :  value(<MulticoreFuture>, ...) ... done
[10:50:50.797] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ...
[10:50:50.797] |  :  .  nx: 2
[10:50:50.797] |  :  .  relay: TRUE
[10:50:50.797] |  :  .  stdout: TRUE
[10:50:50.797] |  :  .  signal: TRUE
[10:50:50.797] |  :  .  resignal: FALSE
[10:50:50.797] |  :  .  force: TRUE
[10:50:50.798] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.798] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.798] |  :  .  until=2
[10:50:50.798] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.798] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.798] |  :  signalConditionsASAP(MulticoreFuture, pos=2) ... done
[10:50:50.798] |  :  length: 0 (resolved future 2)
[10:50:50.798] |  checking value #2 ... done
[10:50:50.798] |  Relaying remaining futures ...
[10:50:50.799] |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:50.799] |  :  .  nx: 2
[10:50:50.799] |  :  .  relay: TRUE
[10:50:50.799] |  :  .  stdout: TRUE
[10:50:50.799] |  :  .  signal: TRUE
[10:50:50.799] |  :  .  resignal: FALSE
[10:50:50.799] |  :  .  force: TRUE
[10:50:50.799] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.799] |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:50.800] |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:50.800] |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:50.800] |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:50.800] |  Relaying remaining futures ... done
[10:50:50.800] value() on list ... done
[10:50:50.800]  - Number of value chunks collected: 2
[10:50:50.800] Resolving 2 futures (chunks) ... DONE
[10:50:50.800] Reducing values from 2 chunks ...
[10:50:50.801]  - Number of values collected after concatenation: 2
[10:50:50.801]  - Number of values expected: 2
[10:50:50.801] Reducing values from 2 chunks ... DONE
[10:50:50.801] future_mapply() ... DONE
[10:50:50.801] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.801] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:50.801] |  :  all.equal() for FutureStrategyList ...
[10:50:50.802] |  :  .  New stack:
[10:50:50.802] |  :  .  List of 1
[10:50:50.802] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.802] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.802] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.802] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.802] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.802] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:50.802] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.805] |  :  .  Old stack:
[10:50:50.805] |  :  .  List of 1
[10:50:50.805] |  :  .   $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.805] |  :  .      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.805] |  :  .    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.805] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.805] |  :  .      ...)  
[10:50:50.805] |  :  .    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.805] |  :  .    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.805] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.805] |  :  .    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.805] |  :  .    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.805] |  :  .      ...)  
[10:50:50.805] |  :  .    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.805] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.808] |  :  .  Not identical
[10:50:50.809] |  :  .  all.equal() for future ...
[10:50:50.809] |  :  .  |  List of 2
[10:50:50.809] |  :  .  |   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.809] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.809] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.809] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.809] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.809] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:50.809] |  :  .  |   $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[10:50:50.809] |  :  .  |      earlySignal = FALSE, envir = parent.frame())  
[10:50:50.809] |  :  .  |    ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[10:50:50.809] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.809] |  :  .  |      ...)  
[10:50:50.809] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.809] |  :  .  |    ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.809] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.809] |  :  .  |    ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c6ab7c88> 
[10:50:50.809] |  :  .  |    .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[10:50:50.809] |  :  .  |      ...)  
[10:50:50.809] |  :  .  |    .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[10:50:50.814] |  :  .  |  Formals differ
[10:50:50.815] |  :  .  all.equal() for future ... done
[10:50:50.815] |  :  .  Future strategies differ at level 1
[10:50:50.815] |  :  all.equal() for FutureStrategyList ... done
[10:50:50.815] |  :  plan(): Setting new future strategy stack:
[10:50:50.815] |  :  List of future strategies:
[10:50:50.815] |  :  1. sequential:
[10:50:50.815] |  :     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:50.815] |  :     - tweaked: FALSE
[10:50:50.815] |  :     - call: plan(sequential)
[10:50:50.816] |  :  List of 1
[10:50:50.816] |  :   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.816] |  :    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.816] |  :    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.816] |  :    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.816] |  :    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.816] |  :    ..- attr(*, "call")= language plan(sequential)
[10:50:50.816] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.818] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:50:50.819] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.819] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[10:50:50.819] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.820] |  :  .  Legacy shutdown of cluster workers ...
[10:50:50.820] |  :  .  |  Stopping existing cluster ...
[10:50:50.821] |  :  .  |  :  No pre-existing cluster. Skipping
[10:50:50.821] |  :  .  |  Stopping existing cluster ... done
[10:50:50.821] |  :  .  Legacy shutdown of cluster workers ... done
[10:50:50.821] |  :  plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:50:50.821] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:50:50.821] |  :  .  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.821] |  :  .   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.821] |  :  .   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.821] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.821] |  :  .   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.821] |  :  .   - attr(*, "call")= language plan(sequential)
[10:50:50.823] |  :  .  init: NULL
[10:50:50.823] |  :  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:50:50.823] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.823] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.824] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.824] |  :  Backend function: <‘NULL’>
[10:50:50.824] |  :  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:50.824] |  :  plan(): nbrOfWorkers() = 1
[10:50:50.824] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:50.824] plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
*** strategy = ‘multicore’ ... done
*** strategy = ‘multisession’ ...
[10:50:50.825] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.825] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:50.825] |  :  all.equal() for FutureStrategyList ...
[10:50:50.825] |  :  .  New stack:
[10:50:50.825] |  :  .  List of 1
[10:50:50.825] |  :  .   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:50.825] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.825] |  :  .    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:50.825] |  :  .    ..- attr(*, "init")= logi TRUE
[10:50:50.825] |  :  .    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:50.825] |  :  .    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.825] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.825] |  :  .    ..- attr(*, "untweakable")= chr "persistent"
[10:50:50.825] |  :  .    ..- attr(*, "call")= language plan(strategy)
[10:50:50.825] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.829] |  :  .  Old stack:
[10:50:50.829] |  :  .  List of 1
[10:50:50.829] |  :  .   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.829] |  :  .    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.829] |  :  .    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.829] |  :  .    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.829] |  :  .    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.829] |  :  .    ..- attr(*, "call")= language plan(sequential)
[10:50:50.829] |  :  .   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.831] |  :  .  Not identical
[10:50:50.831] |  :  .  all.equal() for future ...
[10:50:50.831] |  :  .  |  List of 2
[10:50:50.831] |  :  .  |   $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:50.831] |  :  .  |      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.831] |  :  .  |    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:50.831] |  :  .  |    ..- attr(*, "init")= logi TRUE
[10:50:50.831] |  :  .  |    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:50.831] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.831] |  :  .  |    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.831] |  :  .  |    ..- attr(*, "untweakable")= chr "persistent"
[10:50:50.831] |  :  .  |    ..- attr(*, "call")= language plan(strategy)
[10:50:50.831] |  :  .  |   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.831] |  :  .  |    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:50.831] |  :  .  |    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:50.831] |  :  .  |    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.831] |  :  .  |    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:50.831] |  :  .  |    ..- attr(*, "call")= language plan(sequential)
[10:50:50.836] |  :  .  |  Formals differ
[10:50:50.836] |  :  .  all.equal() for future ... done
[10:50:50.836] |  :  .  Future strategies differ at level 1
[10:50:50.837] |  :  all.equal() for FutureStrategyList ... done
[10:50:50.837] |  :  plan(): Setting new future strategy stack:
[10:50:50.837] |  :  List of future strategies:
[10:50:50.837] |  :  1. multisession:
[10:50:50.837] |  :     - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[10:50:50.837] |  :     - tweaked: FALSE
[10:50:50.837] |  :     - call: plan(strategy)
[10:50:50.837] |  :  List of 1
[10:50:50.837] |  :   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:50.837] |  :      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.837] |  :    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:50.837] |  :    ..- attr(*, "init")= logi TRUE
[10:50:50.837] |  :    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:50.837] |  :    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.837] |  :    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.837] |  :    ..- attr(*, "untweakable")= chr "persistent"
[10:50:50.837] |  :    ..- attr(*, "call")= language plan(strategy)
[10:50:50.837] |  :   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:50.840] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:50:50.841] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:50.841] |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:50.841] |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:50.841] |  :  .  Legacy shutdown of cluster workers ...
[10:50:50.841] |  :  .  |  Stopping existing cluster ...
[10:50:50.841] |  :  .  |  :  No pre-existing cluster. Skipping
[10:50:50.841] |  :  .  |  Stopping existing cluster ... done
[10:50:50.841] |  :  .  Legacy shutdown of cluster workers ... done
[10:50:50.841] |  :  plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:50:50.842] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[10:50:50.842] |  :  .  function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:50.842] |  :  .      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:50.842] |  :  .   - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:50.842] |  :  .   - attr(*, "init")= logi TRUE
[10:50:50.842] |  :  .   - attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:50.842] |  :  .    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.842] |  :  .   - attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:50.842] |  :  .   - attr(*, "untweakable")= chr "persistent"
[10:50:50.842] |  :  .   - attr(*, "call")= language plan(strategy)
[10:50:50.844] |  :  .  init: TRUE
[10:50:50.844] |  :  .  makeFutureBackend(<multisession>) ...
[10:50:50.844] |  :  .  |  Backend function: <‘NULL’>
[10:50:50.846] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[10:50:50.846] |  :  .  |  :  workers: 2
[10:50:50.847] |  :  .  |  :  getCluster() ...
[10:50:50.847] |  :  .  |  :  getCluster() ... done
[10:50:50.847] |  :  .  |  :  Stopping existing cluster ...
[10:50:50.847] |  :  .  |  :  .  No pre-existing cluster. Skipping
[10:50:50.847] |  :  .  |  :  Stopping existing cluster ... done
[10:50:50.847] |  :  .  |  :  Starting new cluster ...
[10:50:50.847] |  :  .  |  :  .  makeCluster(workers, ...) ...
[10:50:50.847] |  :  .  |  :  .  |  Arguments:
[10:50:50.847] |  :  .  |  :  .  |  List of 2
[10:50:50.847] |  :  .  |  :  .  |   $             : int 2
[10:50:50.847] |  :  .  |  :  .  |   $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[10:50:51.345] |  :  .  |  :  .  |  Generated cluster UUID
[10:50:51.345] |  :  .  |  :  .  |  Cluster UUID: ‘7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.346] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.348] |  :  .  |  :  .  makeCluster(workers, ...) ... done
[10:50:51.348] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.349] |  :  .  |  :  Starting new cluster ... done
[10:50:51.350] |  :  .  |  :  Number of workers: 2
[10:50:51.350] |  :  .  |  :  Workers UUID: ‘7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.350] |  :  .  |  ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[10:50:51.350] |  :  .  |  Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:51.350] |  :  .  makeFutureBackend(<multisession>) ... done
[10:50:51.350] |  :  plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[10:50:51.350] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.351] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:51.351] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.351] |  :  plan(): nbrOfWorkers() = 2
[10:50:51.351] |  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:51.351] plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- From example(mapply) ...
[10:50:51.351] future_mapply() ...
[10:50:51.351] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.351] |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:51.352] plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.352] Number of chunks: 2
[10:50:51.352] getGlobalsAndPackagesXApply() ...
[10:50:51.352]  - future.globals: TRUE
[10:50:51.352] getGlobalsAndPackages() ...
[10:50:51.352] |  Searching for globals ...
[10:50:51.353] |  :  globals found: [1] ‘FUN’
[10:50:51.353] |  Searching for globals ... DONE
[10:50:51.353] |  Resolving globals: FALSE
[10:50:51.353] |  Search for packages associated with the globals ...
[10:50:51.353] |  :  Packages associated with globals: [0] 
[10:50:51.354] |  :  Packages: [0] 
[10:50:51.354] |  Search for packages associated with the globals ... DONE
[10:50:51.354] |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:51.354] |  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:51.354] |  Packages after dropping 'base': [0] 
[10:50:51.354] |  globals: [1] ‘FUN’
[10:50:51.355] |  packages: [0] 
[10:50:51.355] getGlobalsAndPackages() ... done
[10:50:51.355]  - globals found/used: [n=1] ‘FUN’
[10:50:51.355]  - needed namespaces: [n=0] 
[10:50:51.355] Finding globals ... DONE
[10:50:51.355] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:51.355] List of 2
[10:50:51.355]  $ ...future.FUN:function (x, ...)  
[10:50:51.355]  $ MoreArgs     : NULL
[10:50:51.355]  - attr(*, "where")=List of 2
[10:50:51.355]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:51.355]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:51.355]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:51.355]  - attr(*, "resolved")= logi FALSE
[10:50:51.355]  - attr(*, "total_size")= num NA
[10:50:51.358] Packages to be attached in all futures: [n=0] 
[10:50:51.358] getGlobalsAndPackagesXApply() ... DONE
[10:50:51.358] Number of futures (= number of chunks): 2
[10:50:51.358] Launching 2 futures (chunks) ...
[10:50:51.358] Chunk #1 of 2 ...
[10:50:51.358]  - Finding globals in '...' for chunk #1 ...
[10:50:51.358] getGlobalsAndPackages() ...
[10:50:51.359] |  Searching for globals ...
[10:50:51.359] |  :  globals found: [0] 
[10:50:51.359] |  Searching for globals ... DONE
[10:50:51.359] |  globals: [0] <none>
[10:50:51.359] |  packages: [0] <none>
[10:50:51.359] getGlobalsAndPackages() ... done
[10:50:51.359]    + additional globals found: [n=0] 
[10:50:51.359]    + additional namespaces needed: [n=0] 
[10:50:51.360]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:51.360]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.360]  - seeds: <none>
[10:50:51.360]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.360] getGlobalsAndPackages() ...
[10:50:51.360] |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.360] |  Resolving globals: FALSE
[10:50:51.360] |  Search for packages associated with the globals ...
[10:50:51.360] |  :  Packages associated with globals: [0] 
[10:50:51.361] |  :  Packages: [0] 
[10:50:51.361] |  Search for packages associated with the globals ... DONE
[10:50:51.361] |  Packages after dropping 'base': [0] 
[10:50:51.361] |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.361] |  packages: [0] 
[10:50:51.361] getGlobalsAndPackages() ... done
[10:50:51.361] run() for Future (‘Future’) ...
[10:50:51.361] |  state: ‘created’
[10:50:51.362] |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.362] |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.362] |  Using MultisessionFutureBackend ...
[10:50:51.362] |  :  Launching futures ...
[10:50:51.362] |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:51.362] |  :  .  |  Workers: [n=2]
[10:50:51.362] |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.364] |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.364] |  :  .  |  requestWorker() ...
[10:50:51.364] |  :  .  |  :  requestNode() ...
[10:50:51.364] |  :  .  |  :  .  Number of workers: 2
[10:50:51.365] |  :  .  |  :  .  Polling for a free worker ...
[10:50:51.365] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.365] |  :  .  |  :  .  |  :  Created empty registry ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.365] |  :  .  |  :  .  |  :  Listing all futures
[10:50:51.365] |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:51.365] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.365] |  :  .  |  :  .  |  Total time: 0
[10:50:51.365] |  :  .  |  :  .  Polling for a free worker ... done
[10:50:51.365] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.365] |  :  .  |  :  .  |  Listing all futures
[10:50:51.365] |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:51.366] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.366] |  :  .  |  :  .  Index of first available worker: 1
[10:50:51.366] |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:51.425] |  :  .  |  :  .  |  Worker is functional
[10:50:51.426] |  :  .  |  :  .  requestNode() ... done
[10:50:51.426] |  :  .  |  :  .  cluster node index: 1
[10:50:51.426] |  :  .  |  :  requestWorker() ... done
[10:50:51.426] |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:51.428] |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:51.428] |  :  .  |  :  launchFuture() ...
[10:50:51.428] |  :  .  |  :  .  cluster node index: 1
[10:50:51.428] |  :  .  |  :  .  getFutureData() ...
[10:50:51.428] |  :  .  |  :  .  |  getFutureCore() ...
[10:50:51.428] |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:51.428] |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:51.429] |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:51.429] |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:51.429] |  :  .  |  :  .  |  getFutureContext() ...
[10:50:51.429] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.429] |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:51.429] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.429] |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:51.429] |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:51.430] |  :  .  |  :  .  getFutureData() ... done
[10:50:51.430] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:51.430] |  :  .  |  :  .  |  Appended future to position #1
[10:50:51.430] |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:51.430] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:51.430] |  :  .  |  :  launchFuture() ... done
[10:50:51.430] |  :  .  |  :  MultisessionFuture started
[10:50:51.431] |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:51.431] |  :  .  Launching futures ... done
[10:50:51.431] |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.431] |  :  Using MultisessionFutureBackend ... done
[10:50:51.431] |  run() for Future (‘MultisessionFuture’) ... done
[10:50:51.431] Created future:
[10:50:51.432] |  isFutureResolved() ...
[10:50:51.433] |  :  assertValidConnection() ...
[10:50:51.433] |  :  .  cluster node index: 1
[10:50:51.433] |  :  assertValidConnection() ... done
[10:50:51.443] |  isFutureResolved() ... done
[10:50:51.431] MultisessionFuture:
[10:50:51.431] Label: ‘future_mapply-1’
[10:50:51.431] Expression:
[10:50:51.431] {
[10:50:51.431]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:51.431]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:51.431]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:51.431]         on.exit(options(oopts), add = TRUE)
[10:50:51.431]     }
[10:50:51.431]     {
[10:50:51.431]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:51.431]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:51.431]         do.call(mapply, args = args)
[10:50:51.431]     }
[10:50:51.431] }
[10:50:51.431] Lazy evaluation: FALSE
[10:50:51.431] Asynchronous evaluation: TRUE
[10:50:51.431] Local evaluation: TRUE
[10:50:51.431] Environment: R_GlobalEnv
[10:50:51.431] Capture standard output: TRUE
[10:50:51.431] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:51.431] Immediate condition classes: ‘immediateCondition’
[10:50:51.431] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:51.431] Packages: <none>
[10:50:51.431] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:51.431] Resolved: FALSE
[10:50:51.431] Value: <not collected>
[10:50:51.431] Conditions captured: <none>
[10:50:51.431] Early signaling: FALSE
[10:50:51.431] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:51.431] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.444] Chunk #1 of 2 ... DONE
[10:50:51.444] Chunk #2 of 2 ...
[10:50:51.444]  - Finding globals in '...' for chunk #2 ...
[10:50:51.444] |  getGlobalsAndPackages() ...
[10:50:51.444] |  :  Searching for globals ...
[10:50:51.445] |  :  .  globals found: [0] 
[10:50:51.445] |  :  Searching for globals ... DONE
[10:50:51.445] |  :  globals: [0] <none>
[10:50:51.445] |  :  packages: [0] <none>
[10:50:51.445] |  getGlobalsAndPackages() ... done
[10:50:51.445]    + additional globals found: [n=0] 
[10:50:51.445]    + additional namespaces needed: [n=0] 
[10:50:51.445]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:51.446]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.446]  - seeds: <none>
[10:50:51.446]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.446] |  getGlobalsAndPackages() ...
[10:50:51.446] |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.446] |  :  Resolving globals: FALSE
[10:50:51.446] |  :  Search for packages associated with the globals ...
[10:50:51.446] |  :  .  Packages associated with globals: [0] 
[10:50:51.447] |  :  .  Packages: [0] 
[10:50:51.447] |  :  Search for packages associated with the globals ... DONE
[10:50:51.447] |  :  Packages after dropping 'base': [0] 
[10:50:51.447] |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.447] |  :  packages: [0] 
[10:50:51.447] |  getGlobalsAndPackages() ... done
[10:50:51.447] |  run() for Future (‘Future’) ...
[10:50:51.448] |  :  state: ‘created’
[10:50:51.448] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.448] |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.448] |  :  Using MultisessionFutureBackend ...
[10:50:51.448] |  :  .  Launching futures ...
[10:50:51.448] |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:51.448] |  :  .  |  :  Workers: [n=2]
[10:50:51.448] |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.450] |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.450] |  :  .  |  :  requestWorker() ...
[10:50:51.450] |  :  .  |  :  .  requestNode() ...
[10:50:51.450] |  :  .  |  :  .  |  Number of workers: 2
[10:50:51.450] |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:51.450] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.451] |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:51.451] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:51.451] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.451] |  :  .  |  :  .  |  :  Total time: 0
[10:50:51.451] |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:51.451] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.451] |  :  .  |  :  .  |  :  Listing all futures
[10:50:51.451] |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:51.451] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.451] |  :  .  |  :  .  |  Index of first available worker: 2
[10:50:51.451] |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:51.517] |  :  .  |  :  .  |  :  Worker is functional
[10:50:51.517] |  :  .  |  :  .  |  requestNode() ... done
[10:50:51.517] |  :  .  |  :  .  |  cluster node index: 2
[10:50:51.517] |  :  .  |  :  .  requestWorker() ... done
[10:50:51.518] |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:51.518] |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:51.518] |  :  .  |  :  .  launchFuture() ...
[10:50:51.519] |  :  .  |  :  .  |  cluster node index: 2
[10:50:51.519] |  :  .  |  :  .  |  getFutureData() ...
[10:50:51.519] |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:51.519] |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:51.519] |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:51.520] |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:51.520] |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:51.520] |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:51.520] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.520] |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:51.521] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.521] |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:51.521] |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:51.521] |  :  .  |  :  .  |  getFutureData() ... done
[10:50:51.522] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:51.522] |  :  .  |  :  .  |  :  Appended future to position #2
[10:50:51.522] |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:51.522] |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:51.522] |  :  .  |  :  .  launchFuture() ... done
[10:50:51.522] |  :  .  |  :  .  MultisessionFuture started
[10:50:51.523] |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:51.523] |  :  .  |  Launching futures ... done
[10:50:51.523] |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.523] |  :  .  Using MultisessionFutureBackend ... done
[10:50:51.523] |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:51.524] Created future:
[10:50:51.525] |  :  isFutureResolved() ...
[10:50:51.525] |  :  .  assertValidConnection() ...
[10:50:51.526] |  :  .  |  cluster node index: 2
[10:50:51.526] |  :  .  assertValidConnection() ... done
[10:50:51.537] |  :  isFutureResolved() ... done
[10:50:51.524] MultisessionFuture:
[10:50:51.524] Label: ‘future_mapply-2’
[10:50:51.524] Expression:
[10:50:51.524] {
[10:50:51.524]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:51.524]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:51.524]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:51.524]         on.exit(options(oopts), add = TRUE)
[10:50:51.524]     }
[10:50:51.524]     {
[10:50:51.524]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:51.524]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:51.524]         do.call(mapply, args = args)
[10:50:51.524]     }
[10:50:51.524] }
[10:50:51.524] Lazy evaluation: FALSE
[10:50:51.524] Asynchronous evaluation: TRUE
[10:50:51.524] Local evaluation: TRUE
[10:50:51.524] Environment: R_GlobalEnv
[10:50:51.524] Capture standard output: TRUE
[10:50:51.524] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:51.524] Immediate condition classes: ‘immediateCondition’
[10:50:51.524] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:51.524] Packages: <none>
[10:50:51.524] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:51.524] Resolved: FALSE
[10:50:51.524] Value: <not collected>
[10:50:51.524] Conditions captured: <none>
[10:50:51.524] Early signaling: FALSE
[10:50:51.524] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:51.524] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.537] Chunk #2 of 2 ... DONE
[10:50:51.537] Launching 2 futures (chunks) ... DONE
[10:50:51.537] Resolving 2 futures (chunks) ...
[10:50:51.537] |  :  value() on list ...
[10:50:51.537] |  :  .  recursive: 0
[10:50:51.538] |  :  .  length: 2
[10:50:51.538] |  :  .  
[10:50:51.538] |  :  .  Number of remaining objects: 2
[10:50:51.538] |  :  .  checking value #1 ...
[10:50:51.538] |  :  .  |  'obj' is MultisessionFuture
[10:50:51.538] |  :  .  |  isFutureResolved() ...
[10:50:51.538] |  :  .  |  :  assertValidConnection() ...
[10:50:51.538] |  :  .  |  :  .  cluster node index: 1
[10:50:51.539] |  :  .  |  :  assertValidConnection() ... done
[10:50:51.539] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:51.539] |  :  .  |  :  .  cluster node index: 1
[10:50:51.540] |  :  .  |  :  .  [1] TRUE
[10:50:51.540] |  :  .  |  :  .  received data:
[10:50:51.540] |  :  .  |  :  .  List of 5
[10:50:51.540] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:51.540] |  :  .  |  :  .   $ value  :List of 13
[10:50:51.540] |  :  .  |  :  .    ..$ value            :List of 2
[10:50:51.540] |  :  .  |  :  .    .. ..$ : int [1:4] 1 1 1 1
[10:50:51.540] |  :  .  |  :  .    .. ..$ : int [1:3] 2 2 2
[10:50:51.540] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:51.540] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:51.540] |  :  .  |  :  .    ..$ conditions       : list()
[10:50:51.540] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:51.540] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:51.540] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:51.540] |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:51.540] |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:51.540] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:51.540] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:51.540] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.540] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.540] |  :  .  |  :  .    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:51.540] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:51.540] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:51.540] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ pid   : int 65747
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:51.540] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:51.540] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:51.540] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:51.540] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:51.540] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:51.540] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:51.540] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:51.540] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:51.540] |  :  .  |  :  .   $ success: logi TRUE
[10:50:51.540] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.057 0.007 0.064 0 0
[10:50:51.540] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:51.540] |  :  .  |  :  .   $ tag    : NULL
[10:50:51.551] |  :  .  |  :  .  Received FutureResult
[10:50:51.551] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:51.551] |  :  .  |  :  .  |  Removed future from position #1
[10:50:51.551] |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:51.551] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:51.551] |  :  .  |  :  .  Erased future from future backend
[10:50:51.552] |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:51.552] |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:51.552] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:51.552] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:51.552] |  :  .  |  isFutureResolved() ... done
[10:50:51.552] |  :  .  |  MultisessionFuture #1
[10:50:51.552] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:51.552] |  :  .  |  :  nx: 2
[10:50:51.552] |  :  .  |  :  relay: TRUE
[10:50:51.552] |  :  .  |  :  stdout: TRUE
[10:50:51.552] |  :  .  |  :  signal: TRUE
[10:50:51.553] |  :  .  |  :  resignal: FALSE
[10:50:51.553] |  :  .  |  :  force: TRUE
[10:50:51.553] |  :  .  |  :  relayed: [n=2] FALSE, FALSE
[10:50:51.553] |  :  .  |  :  queued futures: [n=2] FALSE, FALSE
[10:50:51.553] |  :  .  |  :  until=1
[10:50:51.553] |  :  .  |  :  relaying element #1
[10:50:51.553] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.553] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.553] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.553] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.553] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.554] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.554] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.554] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.554] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.554] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.554] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.554] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.554] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:51.554] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:51.554] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:51.555] |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:51.555] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.555] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.555] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.555] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.555] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.555] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.555] |  :  .  |  :  value: <list>
[10:50:51.555] |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:51.555] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:51.555] |  :  .  |  :  nx: 2
[10:50:51.556] |  :  .  |  :  relay: TRUE
[10:50:51.556] |  :  .  |  :  stdout: TRUE
[10:50:51.556] |  :  .  |  :  signal: TRUE
[10:50:51.556] |  :  .  |  :  resignal: FALSE
[10:50:51.556] |  :  .  |  :  force: TRUE
[10:50:51.556] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:51.556] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:51.556] |  :  .  |  :  until=2
[10:50:51.556] |  :  .  |  :  relaying element #2
[10:50:51.557] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:51.557] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:51.557] |  :  .  |  signalConditionsASAP(NULL, pos=1) ... done
[10:50:51.557] |  :  .  |  length: 1 (resolved future 1)
[10:50:51.557] |  :  .  checking value #1 ... done
[10:50:51.557] |  :  .  checking value #2 ...
[10:50:51.557] |  :  .  |  'obj' is MultisessionFuture
[10:50:51.558] |  :  .  |  isFutureResolved() ...
[10:50:51.558] |  :  .  |  :  assertValidConnection() ...
[10:50:51.558] |  :  .  |  :  .  cluster node index: 2
[10:50:51.558] |  :  .  |  :  assertValidConnection() ... done
[10:50:51.569] |  :  .  |  isFutureResolved() ... done
[10:50:51.569] |  :  .  checking value #2 ... done
[10:50:51.579] |  :  .  Number of remaining objects: 1
[10:50:51.579] |  :  .  checking value #2 ...
[10:50:51.581] |  :  .  |  'obj' is MultisessionFuture
[10:50:51.582] |  :  .  |  isFutureResolved() ...
[10:50:51.582] |  :  .  |  :  assertValidConnection() ...
[10:50:51.582] |  :  .  |  :  .  cluster node index: 2
[10:50:51.582] |  :  .  |  :  assertValidConnection() ... done
[10:50:51.592] |  :  .  |  isFutureResolved() ... done
[10:50:51.593] |  :  .  checking value #2 ... done
[10:50:51.603] |  :  .  Number of remaining objects: 1
[10:50:51.603] |  :  .  checking value #2 ...
[10:50:51.603] |  :  .  |  'obj' is MultisessionFuture
[10:50:51.603] |  :  .  |  isFutureResolved() ...
[10:50:51.604] |  :  .  |  :  assertValidConnection() ...
[10:50:51.604] |  :  .  |  :  .  cluster node index: 2
[10:50:51.604] |  :  .  |  :  assertValidConnection() ... done
[10:50:51.611] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:51.611] |  :  .  |  :  .  cluster node index: 2
[10:50:51.612] |  :  .  |  :  .  [1] TRUE
[10:50:51.612] |  :  .  |  :  .  received data:
[10:50:51.612] |  :  .  |  :  .  List of 5
[10:50:51.612] |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:51.612] |  :  .  |  :  .   $ value  :List of 13
[10:50:51.612] |  :  .  |  :  .    ..$ value            :List of 2
[10:50:51.612] |  :  .  |  :  .    .. ..$ : int [1:2] 3 3
[10:50:51.612] |  :  .  |  :  .    .. ..$ : int 4
[10:50:51.612] |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:51.612] |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:51.612] |  :  .  |  :  .    ..$ conditions       : list()
[10:50:51.612] |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:51.612] |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:51.612] |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:51.612] |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:51.612] |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:51.612] |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:51.612] |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:51.612] |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.612] |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.612] |  :  .  |  :  .    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:51.612] |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:51.612] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:51.612] |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ pid   : int 65746
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:51.612] |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:51.612] |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:51.612] |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:51.612] |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:51.612] |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:51.612] |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:51.612] |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:51.612] |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:51.612] |  :  .  |  :  .   $ success: logi TRUE
[10:50:51.612] |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.046 0.004 0.049 0 0
[10:50:51.612] |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:51.612] |  :  .  |  :  .   $ tag    : NULL
[10:50:51.622] |  :  .  |  :  .  Received FutureResult
[10:50:51.623] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:51.623] |  :  .  |  :  .  |  Removed future from position #1
[10:50:51.623] |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:51.623] |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:51.623] |  :  .  |  :  .  Erased future from future backend
[10:50:51.623] |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:51.623] |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:51.623] |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:51.623] |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:51.623] |  :  .  |  isFutureResolved() ... done
[10:50:51.624] |  :  .  |  MultisessionFuture #2
[10:50:51.624] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:51.624] |  :  .  |  :  nx: 2
[10:50:51.624] |  :  .  |  :  relay: TRUE
[10:50:51.624] |  :  .  |  :  stdout: TRUE
[10:50:51.624] |  :  .  |  :  signal: TRUE
[10:50:51.624] |  :  .  |  :  resignal: FALSE
[10:50:51.624] |  :  .  |  :  force: TRUE
[10:50:51.624] |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:51.624] |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:51.624] |  :  .  |  :  until=2
[10:50:51.624] |  :  .  |  :  relaying element #2
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.625] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.625] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.625] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.625] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.626] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.626] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.626] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:51.626] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:51.626] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:51.626] |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:51.626] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.626] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.626] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.626] |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.626] |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.627] |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.627] |  :  .  |  :  value: <list>
[10:50:51.627] |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:51.627] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:51.627] |  :  .  |  :  nx: 2
[10:50:51.627] |  :  .  |  :  relay: TRUE
[10:50:51.627] |  :  .  |  :  stdout: TRUE
[10:50:51.627] |  :  .  |  :  signal: TRUE
[10:50:51.627] |  :  .  |  :  resignal: FALSE
[10:50:51.627] |  :  .  |  :  force: TRUE
[10:50:51.627] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:51.627] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:51.628] |  :  .  |  :  until=2
[10:50:51.628] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:51.628] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:51.628] |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:51.628] |  :  .  |  length: 0 (resolved future 2)
[10:50:51.628] |  :  .  checking value #2 ... done
[10:50:51.628] |  :  .  Relaying remaining futures ...
[10:50:51.628] |  :  .  |  signalConditionsASAP(NULL, pos=0) ...
[10:50:51.628] |  :  .  |  :  nx: 2
[10:50:51.628] |  :  .  |  :  relay: TRUE
[10:50:51.628] |  :  .  |  :  stdout: TRUE
[10:50:51.628] |  :  .  |  :  signal: TRUE
[10:50:51.629] |  :  .  |  :  resignal: FALSE
[10:50:51.629] |  :  .  |  :  force: TRUE
[10:50:51.629] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:51.629] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:51.629] |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:51.629] |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:51.629] |  :  .  |  signalConditionsASAP(NULL, pos=0) ... done
[10:50:51.629] |  :  .  Relaying remaining futures ... done
[10:50:51.629] |  :  value() on list ... done
[10:50:51.629]  - Number of value chunks collected: 2
[10:50:51.630] Resolving 2 futures (chunks) ... DONE
[10:50:51.630] Reducing values from 2 chunks ...
[10:50:51.630]  - Number of values collected after concatenation: 4
[10:50:51.630]  - Number of values expected: 4
[10:50:51.630] Reducing values from 2 chunks ... DONE
[10:50:51.630] future_mapply() ... DONE
[10:50:51.630] future_mapply() ...
[10:50:51.630] |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.630] |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:51.631] |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.631] Number of chunks: 2
[10:50:51.631] getGlobalsAndPackagesXApply() ...
[10:50:51.631]  - future.globals: TRUE
[10:50:51.631] |  :  getGlobalsAndPackages() ...
[10:50:51.631] |  :  .  Searching for globals ...
[10:50:51.632] |  :  .  |  globals found: [1] ‘FUN’
[10:50:51.632] |  :  .  Searching for globals ... DONE
[10:50:51.632] |  :  .  Resolving globals: FALSE
[10:50:51.632] |  :  .  Search for packages associated with the globals ...
[10:50:51.632] |  :  .  |  Packages associated with globals: [0] 
[10:50:51.633] |  :  .  |  Packages: [0] 
[10:50:51.633] |  :  .  Search for packages associated with the globals ... DONE
[10:50:51.633] |  :  .  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:51.633] |  :  .  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:51.633] |  :  .  Packages after dropping 'base': [0] 
[10:50:51.633] |  :  .  globals: [1] ‘FUN’
[10:50:51.633] |  :  .  packages: [0] 
[10:50:51.634] |  :  getGlobalsAndPackages() ... done
[10:50:51.634]  - globals found/used: [n=1] ‘FUN’
[10:50:51.634]  - needed namespaces: [n=0] 
[10:50:51.634] Finding globals ... DONE
[10:50:51.634] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:51.634] List of 2
[10:50:51.634]  $ ...future.FUN:function (x, ...)  
[10:50:51.634]  $ MoreArgs     : NULL
[10:50:51.634]  - attr(*, "where")=List of 2
[10:50:51.634]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:51.634]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:51.634]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:51.634]  - attr(*, "resolved")= logi FALSE
[10:50:51.634]  - attr(*, "total_size")= num NA
[10:50:51.637] Packages to be attached in all futures: [n=0] 
[10:50:51.637] getGlobalsAndPackagesXApply() ... DONE
[10:50:51.637] Number of futures (= number of chunks): 2
[10:50:51.637] Launching 2 futures (chunks) ...
[10:50:51.637] Chunk #1 of 2 ...
[10:50:51.637]  - Finding globals in '...' for chunk #1 ...
[10:50:51.637] |  :  getGlobalsAndPackages() ...
[10:50:51.638] |  :  .  Searching for globals ...
[10:50:51.638] |  :  .  |  globals found: [0] 
[10:50:51.638] |  :  .  Searching for globals ... DONE
[10:50:51.638] |  :  .  globals: [0] <none>
[10:50:51.638] |  :  .  packages: [0] <none>
[10:50:51.638] |  :  getGlobalsAndPackages() ... done
[10:50:51.638]    + additional globals found: [n=0] 
[10:50:51.638]    + additional namespaces needed: [n=0] 
[10:50:51.639]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:51.639]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.639]  - seeds: <none>
[10:50:51.639]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.639] |  :  getGlobalsAndPackages() ...
[10:50:51.639] |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.639] |  :  .  Resolving globals: FALSE
[10:50:51.639] |  :  .  Search for packages associated with the globals ...
[10:50:51.639] |  :  .  |  Packages associated with globals: [0] 
[10:50:51.640] |  :  .  |  Packages: [0] 
[10:50:51.640] |  :  .  Search for packages associated with the globals ... DONE
[10:50:51.640] |  :  .  Packages after dropping 'base': [0] 
[10:50:51.640] |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.640] |  :  .  packages: [0] 
[10:50:51.640] |  :  getGlobalsAndPackages() ... done
[10:50:51.640] |  :  run() for Future (‘Future’) ...
[10:50:51.640] |  :  .  state: ‘created’
[10:50:51.641] |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.641] |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.641] |  :  .  Using MultisessionFutureBackend ...
[10:50:51.641] |  :  .  |  Launching futures ...
[10:50:51.641] |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:51.641] |  :  .  |  :  .  Workers: [n=2]
[10:50:51.641] |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.643] |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.643] |  :  .  |  :  .  requestWorker() ...
[10:50:51.643] |  :  .  |  :  .  |  requestNode() ...
[10:50:51.643] |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:51.643] |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:51.643] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.643] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:51.643] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:51.644] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.644] |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:51.644] |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:51.644] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.644] |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:51.644] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:51.644] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.644] |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:50:51.644] |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:51.684] |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:51.684] |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:51.684] |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:51.684] |  :  .  |  :  .  |  requestWorker() ... done
[10:50:51.684] |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:51.685] |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:51.685] |  :  .  |  :  .  |  launchFuture() ...
[10:50:51.685] |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:51.685] |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:51.685] |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:51.685] |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:51.685] |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:51.685] |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:51.685] |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:51.686] |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:51.686] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.686] |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:51.686] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.686] |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:51.686] |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:51.686] |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:51.687] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:51.687] |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:50:51.687] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:51.687] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:51.687] |  :  .  |  :  .  |  launchFuture() ... done
[10:50:51.687] |  :  .  |  :  .  |  MultisessionFuture started
[10:50:51.687] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:51.687] |  :  .  |  :  Launching futures ... done
[10:50:51.687] |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.687] |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:51.687] |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:51.688] Created future:
[10:50:51.688] |  :  .  isFutureResolved() ...
[10:50:51.689] |  :  .  |  assertValidConnection() ...
[10:50:51.689] |  :  .  |  :  cluster node index: 1
[10:50:51.689] |  :  .  |  assertValidConnection() ... done
[10:50:51.699] |  :  .  isFutureResolved() ... done
[10:50:51.688] MultisessionFuture:
[10:50:51.688] Label: ‘future_mapply-1’
[10:50:51.688] Expression:
[10:50:51.688] {
[10:50:51.688]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:51.688]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:51.688]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:51.688]         on.exit(options(oopts), add = TRUE)
[10:50:51.688]     }
[10:50:51.688]     {
[10:50:51.688]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:51.688]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:51.688]         do.call(mapply, args = args)
[10:50:51.688]     }
[10:50:51.688] }
[10:50:51.688] Lazy evaluation: FALSE
[10:50:51.688] Asynchronous evaluation: TRUE
[10:50:51.688] Local evaluation: TRUE
[10:50:51.688] Environment: R_GlobalEnv
[10:50:51.688] Capture standard output: TRUE
[10:50:51.688] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:51.688] Immediate condition classes: ‘immediateCondition’
[10:50:51.688] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:51.688] Packages: <none>
[10:50:51.688] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:51.688] Resolved: FALSE
[10:50:51.688] Value: <not collected>
[10:50:51.688] Conditions captured: <none>
[10:50:51.688] Early signaling: FALSE
[10:50:51.688] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:51.688] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.700] Chunk #1 of 2 ... DONE
[10:50:51.700] Chunk #2 of 2 ...
[10:50:51.700]  - Finding globals in '...' for chunk #2 ...
[10:50:51.700] |  :  .  getGlobalsAndPackages() ...
[10:50:51.700] |  :  .  |  Searching for globals ...
[10:50:51.701] |  :  .  |  :  globals found: [0] 
[10:50:51.701] |  :  .  |  Searching for globals ... DONE
[10:50:51.701] |  :  .  |  globals: [0] <none>
[10:50:51.701] |  :  .  |  packages: [0] <none>
[10:50:51.701] |  :  .  getGlobalsAndPackages() ... done
[10:50:51.701]    + additional globals found: [n=0] 
[10:50:51.701]    + additional namespaces needed: [n=0] 
[10:50:51.701]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:51.701]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.701]  - seeds: <none>
[10:50:51.701]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.702] |  :  .  getGlobalsAndPackages() ...
[10:50:51.702] |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.702] |  :  .  |  Resolving globals: FALSE
[10:50:51.702] |  :  .  |  Search for packages associated with the globals ...
[10:50:51.702] |  :  .  |  :  Packages associated with globals: [0] 
[10:50:51.702] |  :  .  |  :  Packages: [0] 
[10:50:51.702] |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:51.703] |  :  .  |  Packages after dropping 'base': [0] 
[10:50:51.703] |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.703] |  :  .  |  packages: [0] 
[10:50:51.703] |  :  .  getGlobalsAndPackages() ... done
[10:50:51.703] |  :  .  run() for Future (‘Future’) ...
[10:50:51.703] |  :  .  |  state: ‘created’
[10:50:51.703] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.703] |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.704] |  :  .  |  Using MultisessionFutureBackend ...
[10:50:51.704] |  :  .  |  :  Launching futures ...
[10:50:51.704] |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:51.704] |  :  .  |  :  .  |  Workers: [n=2]
[10:50:51.704] |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.705] |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.705] |  :  .  |  :  .  |  requestWorker() ...
[10:50:51.706] |  :  .  |  :  .  |  :  requestNode() ...
[10:50:51.706] |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:51.706] |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:51.706] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.706] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:51.706] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:51.706] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.706] |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:50:51.706] |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:51.706] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.707] |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:51.707] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:51.707] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.707] |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:50:51.707] |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:51.748] |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:51.748] |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:51.748] |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:51.748] |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:51.748] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:51.749] |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:51.749] |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:51.749] |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:51.749] |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:51.749] |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:51.749] |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:51.749] |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:51.749] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:51.750] |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:51.750] |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:51.751] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:51.751] |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:50:51.751] |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:51.751] |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:51.751] |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:51.751] |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:51.751] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:51.751] |  :  .  |  :  .  Launching futures ... done
[10:50:51.751] |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.752] |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:51.752] |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:51.752] Created future:
[10:50:51.752] |  :  .  |  isFutureResolved() ...
[10:50:51.753] |  :  .  |  :  assertValidConnection() ...
[10:50:51.753] |  :  .  |  :  .  cluster node index: 2
[10:50:51.753] |  :  .  |  :  assertValidConnection() ... done
[10:50:51.764] |  :  .  |  isFutureResolved() ... done
[10:50:51.752] MultisessionFuture:
[10:50:51.752] Label: ‘future_mapply-2’
[10:50:51.752] Expression:
[10:50:51.752] {
[10:50:51.752]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:51.752]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:51.752]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:51.752]         on.exit(options(oopts), add = TRUE)
[10:50:51.752]     }
[10:50:51.752]     {
[10:50:51.752]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:51.752]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:51.752]         do.call(mapply, args = args)
[10:50:51.752]     }
[10:50:51.752] }
[10:50:51.752] Lazy evaluation: FALSE
[10:50:51.752] Asynchronous evaluation: TRUE
[10:50:51.752] Local evaluation: TRUE
[10:50:51.752] Environment: R_GlobalEnv
[10:50:51.752] Capture standard output: TRUE
[10:50:51.752] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:51.752] Immediate condition classes: ‘immediateCondition’
[10:50:51.752] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:51.752] Packages: <none>
[10:50:51.752] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:51.752] Resolved: FALSE
[10:50:51.752] Value: <not collected>
[10:50:51.752] Conditions captured: <none>
[10:50:51.752] Early signaling: FALSE
[10:50:51.752] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:51.752] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.764] Chunk #2 of 2 ... DONE
[10:50:51.764] Launching 2 futures (chunks) ... DONE
[10:50:51.764] Resolving 2 futures (chunks) ...
[10:50:51.764] |  :  .  |  value() on list ...
[10:50:51.764] |  :  .  |  :  recursive: 0
[10:50:51.765] |  :  .  |  :  length: 2
[10:50:51.765] |  :  .  |  :  
[10:50:51.765] |  :  .  |  :  Number of remaining objects: 2
[10:50:51.765] |  :  .  |  :  checking value #1 ...
[10:50:51.765] |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:51.765] |  :  .  |  :  .  isFutureResolved() ...
[10:50:51.765] |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:51.765] |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:51.766] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:51.766] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:51.766] |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:51.766] |  :  .  |  :  .  |  :  [1] TRUE
[10:50:51.766] |  :  .  |  :  .  |  :  received data:
[10:50:51.766] |  :  .  |  :  .  |  :  List of 5
[10:50:51.766] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:51.766] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ value            :List of 2
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ : int [1:4] 1 1 1 1
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ : int [1:3] 2 2 2
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65747
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:51.766] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:51.766] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:51.766] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:51.766] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:51.766] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:51.766] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:51.766] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:51.766] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:51.779] |  :  .  |  :  .  |  :  Received FutureResult
[10:50:51.779] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:51.779] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:51.779] |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:51.779] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:51.779] |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:51.779] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.779] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.779] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.779] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:51.779] |  :  .  |  :  .  isFutureResolved() ... done
[10:50:51.780] |  :  .  |  :  .  MultisessionFuture #1
[10:50:51.780] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:51.780] |  :  .  |  :  .  |  nx: 2
[10:50:51.780] |  :  .  |  :  .  |  relay: TRUE
[10:50:51.780] |  :  .  |  :  .  |  stdout: TRUE
[10:50:51.780] |  :  .  |  :  .  |  signal: TRUE
[10:50:51.780] |  :  .  |  :  .  |  resignal: FALSE
[10:50:51.780] |  :  .  |  :  .  |  force: TRUE
[10:50:51.780] |  :  .  |  :  .  |  relayed: [n=2] FALSE, FALSE
[10:50:51.780] |  :  .  |  :  .  |  queued futures: [n=2] FALSE, FALSE
[10:50:51.780] |  :  .  |  :  .  |  until=1
[10:50:51.780] |  :  .  |  :  .  |  relaying element #1
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.781] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.781] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.781] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.781] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.782] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.782] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.782] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:51.782] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:51.782] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:51.782] |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:51.782] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.782] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.782] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.782] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.782] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.783] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.783] |  :  .  |  :  .  |  value: <list>
[10:50:51.783] |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:51.783] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:51.783] |  :  .  |  :  .  |  nx: 2
[10:50:51.783] |  :  .  |  :  .  |  relay: TRUE
[10:50:51.783] |  :  .  |  :  .  |  stdout: TRUE
[10:50:51.783] |  :  .  |  :  .  |  signal: TRUE
[10:50:51.783] |  :  .  |  :  .  |  resignal: FALSE
[10:50:51.783] |  :  .  |  :  .  |  force: TRUE
[10:50:51.783] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:51.783] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:51.784] |  :  .  |  :  .  |  until=2
[10:50:51.784] |  :  .  |  :  .  |  relaying element #2
[10:50:51.784] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:51.784] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:51.784] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:50:51.784] |  :  .  |  :  .  length: 1 (resolved future 1)
[10:50:51.784] |  :  .  |  :  checking value #1 ... done
[10:50:51.784] |  :  .  |  :  checking value #2 ...
[10:50:51.784] |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:51.785] |  :  .  |  :  .  isFutureResolved() ...
[10:50:51.785] |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:51.785] |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:51.785] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:51.794] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:51.794] |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:51.795] |  :  .  |  :  .  |  :  [1] TRUE
[10:50:51.795] |  :  .  |  :  .  |  :  received data:
[10:50:51.795] |  :  .  |  :  .  |  :  List of 5
[10:50:51.795] |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:51.795] |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ value            :List of 2
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ : int [1:2] 3 3
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ : int 4
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65746
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:51.795] |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:51.795] |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:51.795] |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:51.795] |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:51.795] |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:51.795] |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:51.795] |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:51.795] |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:51.805] |  :  .  |  :  .  |  :  Received FutureResult
[10:50:51.806] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:51.806] |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:51.806] |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:51.806] |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:51.806] |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:51.806] |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:51.806] |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:51.806] |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:51.806] |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:51.806] |  :  .  |  :  .  isFutureResolved() ... done
[10:50:51.806] |  :  .  |  :  .  MultisessionFuture #2
[10:50:51.807] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:51.807] |  :  .  |  :  .  |  nx: 2
[10:50:51.807] |  :  .  |  :  .  |  relay: TRUE
[10:50:51.807] |  :  .  |  :  .  |  stdout: TRUE
[10:50:51.807] |  :  .  |  :  .  |  signal: TRUE
[10:50:51.807] |  :  .  |  :  .  |  resignal: FALSE
[10:50:51.807] |  :  .  |  :  .  |  force: TRUE
[10:50:51.807] |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:51.807] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:51.807] |  :  .  |  :  .  |  until=2
[10:50:51.807] |  :  .  |  :  .  |  relaying element #2
[10:50:51.807] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.808] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.808] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.808] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.808] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.808] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.809] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.809] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:51.809] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:51.809] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:51.809] |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:51.809] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.809] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.809] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.809] |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:51.809] |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:51.809] |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:51.810] |  :  .  |  :  .  |  value: <list>
[10:50:51.810] |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:51.810] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:51.810] |  :  .  |  :  .  |  nx: 2
[10:50:51.810] |  :  .  |  :  .  |  relay: TRUE
[10:50:51.810] |  :  .  |  :  .  |  stdout: TRUE
[10:50:51.810] |  :  .  |  :  .  |  signal: TRUE
[10:50:51.810] |  :  .  |  :  .  |  resignal: FALSE
[10:50:51.810] |  :  .  |  :  .  |  force: TRUE
[10:50:51.810] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:51.810] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:51.810] |  :  .  |  :  .  |  until=2
[10:50:51.811] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:51.811] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:51.811] |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:51.811] |  :  .  |  :  .  length: 0 (resolved future 2)
[10:50:51.811] |  :  .  |  :  checking value #2 ... done
[10:50:51.811] |  :  .  |  :  Relaying remaining futures ...
[10:50:51.811] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:50:51.811] |  :  .  |  :  .  |  nx: 2
[10:50:51.811] |  :  .  |  :  .  |  relay: TRUE
[10:50:51.811] |  :  .  |  :  .  |  stdout: TRUE
[10:50:51.811] |  :  .  |  :  .  |  signal: TRUE
[10:50:51.812] |  :  .  |  :  .  |  resignal: FALSE
[10:50:51.812] |  :  .  |  :  .  |  force: TRUE
[10:50:51.812] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:51.812] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:51.812] |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:51.812] |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:51.812] |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:50:51.812] |  :  .  |  :  Relaying remaining futures ... done
[10:50:51.812] |  :  .  |  value() on list ... done
[10:50:51.812]  - Number of value chunks collected: 2
[10:50:51.812] Resolving 2 futures (chunks) ... DONE
[10:50:51.813] Reducing values from 2 chunks ...
[10:50:51.813]  - Number of values collected after concatenation: 4
[10:50:51.813]  - Number of values expected: 4
[10:50:51.813] Reducing values from 2 chunks ... DONE
[10:50:51.813] future_mapply() ... DONE
[10:50:51.813] future_mapply() ...
[10:50:51.813] |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.813] |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:51.813] |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.814] Number of chunks: 2
[10:50:51.814] getGlobalsAndPackagesXApply() ...
[10:50:51.814]  - future.globals: TRUE
[10:50:51.814] |  :  .  |  getGlobalsAndPackages() ...
[10:50:51.814] |  :  .  |  :  Searching for globals ...
[10:50:51.815] |  :  .  |  :  .  globals found: [1] ‘FUN’
[10:50:51.815] |  :  .  |  :  Searching for globals ... DONE
[10:50:51.815] |  :  .  |  :  Resolving globals: FALSE
[10:50:51.815] |  :  .  |  :  Search for packages associated with the globals ...
[10:50:51.815] |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:51.816] |  :  .  |  :  .  Packages: [0] 
[10:50:51.816] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:51.816] |  :  .  |  :  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:51.816] |  :  .  |  :  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:51.816] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:51.816] |  :  .  |  :  globals: [1] ‘FUN’
[10:50:51.816] |  :  .  |  :  packages: [0] 
[10:50:51.817] |  :  .  |  getGlobalsAndPackages() ... done
[10:50:51.817]  - globals found/used: [n=1] ‘FUN’
[10:50:51.817]  - needed namespaces: [n=0] 
[10:50:51.817] Finding globals ... DONE
[10:50:51.817] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:51.817] List of 2
[10:50:51.817]  $ ...future.FUN:function (x, ...)  
[10:50:51.817]  $ MoreArgs     : NULL
[10:50:51.817]  - attr(*, "where")=List of 2
[10:50:51.817]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:51.817]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:51.817]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:51.817]  - attr(*, "resolved")= logi FALSE
[10:50:51.817]  - attr(*, "total_size")= num NA
[10:50:51.820] Packages to be attached in all futures: [n=0] 
[10:50:51.820] getGlobalsAndPackagesXApply() ... DONE
[10:50:51.820] Number of futures (= number of chunks): 2
[10:50:51.820] Launching 2 futures (chunks) ...
[10:50:51.820] Chunk #1 of 2 ...
[10:50:51.820]  - Finding globals in '...' for chunk #1 ...
[10:50:51.820] |  :  .  |  getGlobalsAndPackages() ...
[10:50:51.821] |  :  .  |  :  Searching for globals ...
[10:50:51.821] |  :  .  |  :  .  globals found: [0] 
[10:50:51.821] |  :  .  |  :  Searching for globals ... DONE
[10:50:51.821] |  :  .  |  :  globals: [0] <none>
[10:50:51.821] |  :  .  |  :  packages: [0] <none>
[10:50:51.821] |  :  .  |  getGlobalsAndPackages() ... done
[10:50:51.821]    + additional globals found: [n=0] 
[10:50:51.821]    + additional namespaces needed: [n=0] 
[10:50:51.821]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:51.822]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.822]  - seeds: <none>
[10:50:51.822]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.822] |  :  .  |  getGlobalsAndPackages() ...
[10:50:51.822] |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.822] |  :  .  |  :  Resolving globals: FALSE
[10:50:51.822] |  :  .  |  :  Search for packages associated with the globals ...
[10:50:51.822] |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:51.823] |  :  .  |  :  .  Packages: [0] 
[10:50:51.823] |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:51.823] |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:51.823] |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.823] |  :  .  |  :  packages: [0] 
[10:50:51.823] |  :  .  |  getGlobalsAndPackages() ... done
[10:50:51.823] |  :  .  |  run() for Future (‘Future’) ...
[10:50:51.823] |  :  .  |  :  state: ‘created’
[10:50:51.824] |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.824] |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.824] |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:51.824] |  :  .  |  :  .  Launching futures ...
[10:50:51.824] |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:51.824] |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:51.824] |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.826] |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.826] |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:51.826] |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:51.826] |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:51.826] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:51.826] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.826] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:50:51.827] |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:51.905] |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:51.905] |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:51.906] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:51.906] |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:51.906] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:51.906] |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:51.906] |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:51.906] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.907] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:51.908] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:51.909] |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:51.909] |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:51.909] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:51.909] |  :  .  |  :  .  |  Launching futures ... done
[10:50:51.909] |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.909] |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:51.909] |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:51.909] Created future:
[10:50:51.910] |  :  .  |  :  isFutureResolved() ...
[10:50:51.910] |  :  .  |  :  .  assertValidConnection() ...
[10:50:51.911] |  :  .  |  :  .  |  cluster node index: 1
[10:50:51.911] |  :  .  |  :  .  assertValidConnection() ... done
[10:50:51.921] |  :  .  |  :  isFutureResolved() ... done
[10:50:51.909] MultisessionFuture:
[10:50:51.909] Label: ‘future_mapply-1’
[10:50:51.909] Expression:
[10:50:51.909] {
[10:50:51.909]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:51.909]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:51.909]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:51.909]         on.exit(options(oopts), add = TRUE)
[10:50:51.909]     }
[10:50:51.909]     {
[10:50:51.909]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:51.909]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:51.909]         do.call(mapply, args = args)
[10:50:51.909]     }
[10:50:51.909] }
[10:50:51.909] Lazy evaluation: FALSE
[10:50:51.909] Asynchronous evaluation: TRUE
[10:50:51.909] Local evaluation: TRUE
[10:50:51.909] Environment: R_GlobalEnv
[10:50:51.909] Capture standard output: TRUE
[10:50:51.909] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:51.909] Immediate condition classes: ‘immediateCondition’
[10:50:51.909] Globals: 5 objects totaling 265 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:51.909] Packages: <none>
[10:50:51.909] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:51.909] Resolved: FALSE
[10:50:51.909] Value: <not collected>
[10:50:51.909] Conditions captured: <none>
[10:50:51.909] Early signaling: FALSE
[10:50:51.909] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:51.909] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:51.922] Chunk #1 of 2 ... DONE
[10:50:51.922] Chunk #2 of 2 ...
[10:50:51.922]  - Finding globals in '...' for chunk #2 ...
[10:50:51.922] |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:51.922] |  :  .  |  :  .  Searching for globals ...
[10:50:51.922] |  :  .  |  :  .  |  globals found: [0] 
[10:50:51.923] |  :  .  |  :  .  Searching for globals ... DONE
[10:50:51.923] |  :  .  |  :  .  globals: [0] <none>
[10:50:51.923] |  :  .  |  :  .  packages: [0] <none>
[10:50:51.923] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:51.923]    + additional globals found: [n=0] 
[10:50:51.923]    + additional namespaces needed: [n=0] 
[10:50:51.923]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:51.923]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:51.923]  - seeds: <none>
[10:50:51.923]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.923] |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:51.924] |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.924] |  :  .  |  :  .  Resolving globals: FALSE
[10:50:51.924] |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:51.924] |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:51.924] |  :  .  |  :  .  |  Packages: [0] 
[10:50:51.924] |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:51.924] |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:51.925] |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:51.925] |  :  .  |  :  .  packages: [0] 
[10:50:51.925] |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:51.925] |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:51.925] |  :  .  |  :  .  state: ‘created’
[10:50:51.925] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:51.925] |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:51.925] |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:51.926] |  :  .  |  :  .  |  Launching futures ...
[10:50:51.926] |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:51.926] |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:51.926] |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:51.927] |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:51.928] |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:51.928] |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:50:51.929] |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:52.009] |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:52.010] |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:52.010] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.010] |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:52.010] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:52.010] |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:52.011] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:52.012] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.013] |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:50:52.013] |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:52.013] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.013] |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:52.013] |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:52.013] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:52.013] |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:52.013] |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.013] |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:52.013] |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.014] Created future:
[10:50:52.014] |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.015] |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.015] |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.015] |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.025] |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.014] MultisessionFuture:
[10:50:52.014] Label: ‘future_mapply-2’
[10:50:52.014] Expression:
[10:50:52.014] {
[10:50:52.014]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.014]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.014]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.014]         on.exit(options(oopts), add = TRUE)
[10:50:52.014]     }
[10:50:52.014]     {
[10:50:52.014]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.014]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.014]         do.call(mapply, args = args)
[10:50:52.014]     }
[10:50:52.014] }
[10:50:52.014] Lazy evaluation: FALSE
[10:50:52.014] Asynchronous evaluation: TRUE
[10:50:52.014] Local evaluation: TRUE
[10:50:52.014] Environment: R_GlobalEnv
[10:50:52.014] Capture standard output: TRUE
[10:50:52.014] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.014] Immediate condition classes: ‘immediateCondition’
[10:50:52.014] Globals: 5 objects totaling 265 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.014] Packages: <none>
[10:50:52.014] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.014] Resolved: FALSE
[10:50:52.014] Value: <not collected>
[10:50:52.014] Conditions captured: <none>
[10:50:52.014] Early signaling: FALSE
[10:50:52.014] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.014] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.026] Chunk #2 of 2 ... DONE
[10:50:52.026] Launching 2 futures (chunks) ... DONE
[10:50:52.026] Resolving 2 futures (chunks) ...
[10:50:52.026] |  :  .  |  :  .  value() on list ...
[10:50:52.028] |  :  .  |  :  .  |  recursive: 0
[10:50:52.028] |  :  .  |  :  .  |  length: 2
[10:50:52.028] |  :  .  |  :  .  |  
[10:50:52.028] |  :  .  |  :  .  |  Number of remaining objects: 2
[10:50:52.028] |  :  .  |  :  .  |  checking value #1 ...
[10:50:52.028] |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:52.029] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.029] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.029] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.029] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.029] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.029] |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.030] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:52.030] |  :  .  |  :  .  |  :  .  |  received data:
[10:50:52.030] |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:52.030] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 2
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ : int 4
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ : int [1:2] 3 3
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65747
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.030] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:52.030] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:52.030] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.030] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.041] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.041] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.042] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.042] |  :  .  |  :  .  |  :  MultisessionFuture #1
[10:50:52.042] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.042] |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.042] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.042] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.042] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.042] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.042] |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.042] |  :  .  |  :  .  |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:52.042] |  :  .  |  :  .  |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:52.042] |  :  .  |  :  .  |  :  .  until=1
[10:50:52.043] |  :  .  |  :  .  |  :  .  relaying element #1
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.043] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.043] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.043] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.043] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.044] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.044] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.044] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.044] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.044] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.044] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:52.044] |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:52.044] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.044] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.044] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.045] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.045] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.045] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.045] |  :  .  |  :  .  |  :  .  value: <list>
[10:50:52.045] |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:52.045] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.045] |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.045] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.045] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.045] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.045] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.045] |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.046] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.046] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.046] |  :  .  |  :  .  |  :  .  until=2
[10:50:52.046] |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:52.046] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.046] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.046] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:52.046] |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:50:52.046] |  :  .  |  :  .  |  checking value #1 ... done
[10:50:52.046] |  :  .  |  :  .  |  checking value #2 ...
[10:50:52.046] |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:52.047] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.047] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.047] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.047] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.056] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.057] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.057] |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:52.057] |  :  .  |  :  .  |  :  .  |  received data:
[10:50:52.057] |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:52.057] |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 2
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ : int [1:3] 2 2 2
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ : int [1:4] 1 1 1 1
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65746
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.057] |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:52.057] |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:52.057] |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.057] |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.068] |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.069] |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.069] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.069] |  :  .  |  :  .  |  :  MultisessionFuture #2
[10:50:52.069] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.069] |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.069] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.069] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.069] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.069] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.069] |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.069] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.069] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.070] |  :  .  |  :  .  |  :  .  until=2
[10:50:52.070] |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.070] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.070] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.070] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.070] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.071] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.071] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.071] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.071] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.071] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.071] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.071] |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:52.071] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.071] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.071] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.072] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.072] |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.072] |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.072] |  :  .  |  :  .  |  :  .  value: <list>
[10:50:52.072] |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:52.072] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.072] |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.072] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.072] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.072] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.072] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.072] |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.073] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.073] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.073] |  :  .  |  :  .  |  :  .  until=2
[10:50:52.073] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.073] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.073] |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.073] |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:50:52.073] |  :  .  |  :  .  |  checking value #2 ... done
[10:50:52.073] |  :  .  |  :  .  |  Relaying remaining futures ...
[10:50:52.073] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:52.073] |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.074] |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.074] |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:52.074] |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.074] |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:52.074] |  :  .  |  :  .  |  Relaying remaining futures ... done
[10:50:52.074] |  :  .  |  :  .  value() on list ... done
[10:50:52.075]  - Number of value chunks collected: 2
[10:50:52.075] Resolving 2 futures (chunks) ... DONE
[10:50:52.075] Reducing values from 2 chunks ...
[10:50:52.075]  - Number of values collected after concatenation: 4
[10:50:52.075]  - Number of values expected: 4
[10:50:52.075] Reducing values from 2 chunks ... DONE
[10:50:52.075] future_mapply() ... DONE
[10:50:52.075] future_mapply() ...
[10:50:52.075] |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.076] |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:52.076] |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.076] Number of chunks: 2
[10:50:52.076] getGlobalsAndPackagesXApply() ...
[10:50:52.076]  - future.globals: TRUE
[10:50:52.076] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.076] |  :  .  |  :  .  |  Searching for globals ...
[10:50:52.077] |  :  .  |  :  .  |  :  globals found: [1] ‘FUN’
[10:50:52.077] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:52.077] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:52.077] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:52.078] |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:52.078] |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:52.078] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:52.078] |  :  .  |  :  .  |  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:52.078] |  :  .  |  :  .  |  The total size of the 1 globals exported for future expression (‘FUN(x = 42)’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:52.078] |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:52.079] |  :  .  |  :  .  |  globals: [1] ‘FUN’
[10:50:52.079] |  :  .  |  :  .  |  packages: [0] 
[10:50:52.079] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.079]  - globals found/used: [n=1] ‘FUN’
[10:50:52.079]  - needed namespaces: [n=0] 
[10:50:52.079] Finding globals ... DONE
[10:50:52.079] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:52.079] List of 2
[10:50:52.079]  $ ...future.FUN:function (x, ...)  
[10:50:52.079]  $ MoreArgs     :List of 1
[10:50:52.079]   ..$ x: num 42
[10:50:52.079]  - attr(*, "where")=List of 2
[10:50:52.079]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:52.079]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:52.079]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:52.079]  - attr(*, "resolved")= logi FALSE
[10:50:52.079]  - attr(*, "total_size")= num NA
[10:50:52.082] Packages to be attached in all futures: [n=0] 
[10:50:52.082] getGlobalsAndPackagesXApply() ... DONE
[10:50:52.083] Number of futures (= number of chunks): 2
[10:50:52.083] Launching 2 futures (chunks) ...
[10:50:52.083] Chunk #1 of 2 ...
[10:50:52.083]  - Finding globals in '...' for chunk #1 ...
[10:50:52.083] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.083] |  :  .  |  :  .  |  Searching for globals ...
[10:50:52.083] |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:52.084] |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:52.084] |  :  .  |  :  .  |  globals: [0] <none>
[10:50:52.084] |  :  .  |  :  .  |  packages: [0] <none>
[10:50:52.084] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.084]    + additional globals found: [n=0] 
[10:50:52.084]    + additional namespaces needed: [n=0] 
[10:50:52.084]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:52.084]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.084]  - seeds: <none>
[10:50:52.084]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.084] |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.085] |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.085] |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:52.085] |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:52.085] |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:52.085] |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:52.085] |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:52.085] |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:52.085] |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.086] |  :  .  |  :  .  |  packages: [0] 
[10:50:52.086] |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.086] |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:52.086] |  :  .  |  :  .  |  state: ‘created’
[10:50:52.086] |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.086] |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.086] |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:52.086] |  :  .  |  :  .  |  :  Launching futures ...
[10:50:52.087] |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:52.087] |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:52.087] |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.088] |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.088] |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:52.089] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.090] |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:52.090] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:52.090] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.090] |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:50:52.090] |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:52.168] |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:52.168] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:52.169] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.170] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.171] |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:52.172] |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:52.172] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:52.172] |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:52.172] |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.172] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:52.172] |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.172] Created future:
[10:50:52.173] |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:52.173] |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:52.173] |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:52.174] |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:52.184] |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:52.172] MultisessionFuture:
[10:50:52.172] Label: ‘future_mapply-1’
[10:50:52.172] Expression:
[10:50:52.172] {
[10:50:52.172]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.172]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.172]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.172]         on.exit(options(oopts), add = TRUE)
[10:50:52.172]     }
[10:50:52.172]     {
[10:50:52.172]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.172]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.172]         do.call(mapply, args = args)
[10:50:52.172]     }
[10:50:52.172] }
[10:50:52.172] Lazy evaluation: FALSE
[10:50:52.172] Asynchronous evaluation: TRUE
[10:50:52.172] Local evaluation: TRUE
[10:50:52.172] Environment: R_GlobalEnv
[10:50:52.172] Capture standard output: TRUE
[10:50:52.172] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.172] Immediate condition classes: ‘immediateCondition’
[10:50:52.172] Globals: 5 objects totaling 286 bytes (function ‘...future.FUN’ of 34 bytes, list ‘MoreArgs’ of 89 bytes, list ‘...future.elements_ii’ of 109 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.172] Packages: <none>
[10:50:52.172] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.172] Resolved: FALSE
[10:50:52.172] Value: <not collected>
[10:50:52.172] Conditions captured: <none>
[10:50:52.172] Early signaling: FALSE
[10:50:52.172] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.172] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.184] Chunk #1 of 2 ... DONE
[10:50:52.184] Chunk #2 of 2 ...
[10:50:52.185]  - Finding globals in '...' for chunk #2 ...
[10:50:52.185] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:52.185] |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:52.185] |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:52.185] |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:52.185] |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:52.185] |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:52.185] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:52.186]    + additional globals found: [n=0] 
[10:50:52.186]    + additional namespaces needed: [n=0] 
[10:50:52.186]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:52.186]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.186]  - seeds: <none>
[10:50:52.186]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.186] |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:52.186] |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.186] |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:52.186] |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:52.187] |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:52.187] |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:52.187] |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:52.187] |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:52.187] |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.187] |  :  .  |  :  .  |  :  packages: [0] 
[10:50:52.187] |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:52.188] |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:52.188] |  :  .  |  :  .  |  :  state: ‘created’
[10:50:52.188] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.188] |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.188] |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:52.188] |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:52.188] |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:52.188] |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:52.188] |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:52.190] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.191] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:52.193] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:52.193] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.193] |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:50:52.193] |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:52.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:52.273] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:52.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:52.275] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.276] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:52.276] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:52.276] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:52.276] |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:52.276] |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.276] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:52.276] |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.276] Created future:
[10:50:52.277] |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.277] |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.277] |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.278] |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.288] |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.276] MultisessionFuture:
[10:50:52.276] Label: ‘future_mapply-2’
[10:50:52.276] Expression:
[10:50:52.276] {
[10:50:52.276]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.276]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.276]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.276]         on.exit(options(oopts), add = TRUE)
[10:50:52.276]     }
[10:50:52.276]     {
[10:50:52.276]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.276]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.276]         do.call(mapply, args = args)
[10:50:52.276]     }
[10:50:52.276] }
[10:50:52.276] Lazy evaluation: FALSE
[10:50:52.276] Asynchronous evaluation: TRUE
[10:50:52.276] Local evaluation: TRUE
[10:50:52.276] Environment: R_GlobalEnv
[10:50:52.276] Capture standard output: TRUE
[10:50:52.276] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.276] Immediate condition classes: ‘immediateCondition’
[10:50:52.276] Globals: 5 objects totaling 286 bytes (function ‘...future.FUN’ of 34 bytes, list ‘MoreArgs’ of 89 bytes, list ‘...future.elements_ii’ of 109 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.276] Packages: <none>
[10:50:52.276] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.276] Resolved: FALSE
[10:50:52.276] Value: <not collected>
[10:50:52.276] Conditions captured: <none>
[10:50:52.276] Early signaling: FALSE
[10:50:52.276] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.276] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.288] Chunk #2 of 2 ... DONE
[10:50:52.289] Launching 2 futures (chunks) ... DONE
[10:50:52.289] Resolving 2 futures (chunks) ...
[10:50:52.289] |  :  .  |  :  .  |  :  value() on list ...
[10:50:52.289] |  :  .  |  :  .  |  :  .  recursive: 0
[10:50:52.289] |  :  .  |  :  .  |  :  .  length: 2
[10:50:52.289] |  :  .  |  :  .  |  :  .  
[10:50:52.289] |  :  .  |  :  .  |  :  .  Number of remaining objects: 2
[10:50:52.289] |  :  .  |  :  .  |  :  .  checking value #1 ...
[10:50:52.289] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:52.289] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:52.290] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 2
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num 42
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num [1:2] 42 42
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65747
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.291] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:52.301] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:52.301] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  MultisessionFuture #1
[10:50:52.302] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] FALSE, FALSE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] FALSE, FALSE
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  until=1
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  relaying element #1
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.303] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.304] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.305] |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:52.306] |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=1) ... done
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  length: 1 (resolved future 1)
[10:50:52.307] |  :  .  |  :  .  |  :  .  checking value #1 ... done
[10:50:52.307] |  :  .  |  :  .  |  :  .  checking value #2 ...
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:52.307] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:52.308] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.308] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:52.318] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:52.318] |  :  .  |  :  .  |  :  .  checking value #2 ... done
[10:50:52.329] |  :  .  |  :  .  |  :  .  Number of remaining objects: 1
[10:50:52.329] |  :  .  |  :  .  |  :  .  checking value #2 ...
[10:50:52.329] |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:52.329] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:52.329] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:52.330] |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 2
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num [1:3] 42 42 42
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : num [1:4] 42 42 42 42
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65746
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.331] |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:52.341] |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:52.341] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.341] |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:50:52.341] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:52.341] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  MultisessionFuture #2
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:52.342] |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.343] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:52.344] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.345] |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:52.346] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 2)
[10:50:52.347] |  :  .  |  :  .  |  :  .  checking value #2 ... done
[10:50:52.347] |  :  .  |  :  .  |  :  .  Relaying remaining futures ...
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ...
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:52.347] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:52.348] |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:52.348] |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:52.348] |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ... done
[10:50:52.348] |  :  .  |  :  .  |  :  .  Relaying remaining futures ... done
[10:50:52.348] |  :  .  |  :  .  |  :  value() on list ... done
[10:50:52.348]  - Number of value chunks collected: 2
[10:50:52.348] Resolving 2 futures (chunks) ... DONE
[10:50:52.348] Reducing values from 2 chunks ...
[10:50:52.348]  - Number of values collected after concatenation: 4
[10:50:52.348]  - Number of values expected: 4
[10:50:52.348] Reducing values from 2 chunks ... DONE
[10:50:52.349] future_mapply() ... DONE
[10:50:52.349] future_mapply() ...
[10:50:52.349] |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.349] |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:52.349] |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.349] Number of chunks: 2
[10:50:52.350] getGlobalsAndPackagesXApply() ...
[10:50:52.350]  - future.globals: TRUE
[10:50:52.350] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:52.350] |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:52.351] |  :  .  |  :  .  |  :  .  |  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:52.351] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:52.352] |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:52.352] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:52.352] |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:50:52.352] |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:50:52.352] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:52.352] |  :  .  |  :  .  |  :  .  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:52.353] |  :  .  |  :  .  |  :  .  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:52.353] |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:52.353] |  :  .  |  :  .  |  :  .  globals: [1] ‘FUN’
[10:50:52.353] |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:52.353] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:52.353]  - globals found/used: [n=1] ‘FUN’
[10:50:52.353]  - needed namespaces: [n=0] 
[10:50:52.353] Finding globals ... DONE
[10:50:52.354] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:52.354] List of 2
[10:50:52.354]  $ ...future.FUN:function (x, y)  
[10:50:52.354]  $ MoreArgs     : NULL
[10:50:52.354]  - attr(*, "where")=List of 2
[10:50:52.354]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:52.354]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:52.354]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:52.354]  - attr(*, "resolved")= logi FALSE
[10:50:52.354]  - attr(*, "total_size")= num NA
[10:50:52.356] Packages to be attached in all futures: [n=0] 
[10:50:52.356] getGlobalsAndPackagesXApply() ... DONE
[10:50:52.357] Number of futures (= number of chunks): 2
[10:50:52.357] Launching 2 futures (chunks) ...
[10:50:52.357] Chunk #1 of 2 ...
[10:50:52.357]  - Finding globals in '...' for chunk #1 ...
[10:50:52.357] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:52.357] |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:52.357] |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:52.358] |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:52.358] |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:52.358] |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:52.358] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:52.358]    + additional globals found: [n=0] 
[10:50:52.358]    + additional namespaces needed: [n=0] 
[10:50:52.358]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:52.358]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.358]  - seeds: <none>
[10:50:52.358]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.358] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:52.359] |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.359] |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:52.359] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:52.359] |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:52.359] |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:52.359] |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:52.359] |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:52.360] |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.360] |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:52.360] |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:52.360] |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:52.360] |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:52.360] |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.360] |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.360] |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:52.361] |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:52.361] |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:52.361] |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:52.361] |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.362] |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:52.363] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:50:52.364] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:52.444] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:52.444] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:52.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:52.445] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:52.445] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:52.445] |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:52.445] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.446] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:52.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.448] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:52.448] |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.448] Created future:
[10:50:52.449] |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.449] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.449] |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:52.450] |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.460] |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.448] MultisessionFuture:
[10:50:52.448] Label: ‘future_mapply-1’
[10:50:52.448] Expression:
[10:50:52.448] {
[10:50:52.448]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.448]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.448]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.448]         on.exit(options(oopts), add = TRUE)
[10:50:52.448]     }
[10:50:52.448]     {
[10:50:52.448]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.448]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.448]         do.call(mapply, args = args)
[10:50:52.448]     }
[10:50:52.448] }
[10:50:52.448] Lazy evaluation: FALSE
[10:50:52.448] Asynchronous evaluation: TRUE
[10:50:52.448] Local evaluation: TRUE
[10:50:52.448] Environment: R_GlobalEnv
[10:50:52.448] Capture standard output: TRUE
[10:50:52.448] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.448] Immediate condition classes: ‘immediateCondition’
[10:50:52.448] Globals: 5 objects totaling 645 bytes (function ‘...future.FUN’ of 414 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.448] Packages: <none>
[10:50:52.448] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.448] Resolved: FALSE
[10:50:52.448] Value: <not collected>
[10:50:52.448] Conditions captured: <none>
[10:50:52.448] Early signaling: FALSE
[10:50:52.448] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.448] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.460] Chunk #1 of 2 ... DONE
[10:50:52.461] Chunk #2 of 2 ...
[10:50:52.461]  - Finding globals in '...' for chunk #2 ...
[10:50:52.461] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.461] |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:52.461] |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:52.461] |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:52.461] |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:52.462] |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:52.462] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.462]    + additional globals found: [n=0] 
[10:50:52.462]    + additional namespaces needed: [n=0] 
[10:50:52.462]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:52.462]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.462]  - seeds: <none>
[10:50:52.462]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.462] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.462] |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.462] |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.463] |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:52.464] |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.464] |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:52.464] |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:52.465] |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:52.465] |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.466] |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.466] |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:52.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:52.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:52.466] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.467] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:50:52.468] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:52.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:52.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:52.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:52.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:52.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:52.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:52.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:52.552] |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.552] Created future:
[10:50:52.553] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:52.553] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:52.553] |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:52.554] |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:52.564] |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:52.552] MultisessionFuture:
[10:50:52.552] Label: ‘future_mapply-2’
[10:50:52.552] Expression:
[10:50:52.552] {
[10:50:52.552]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.552]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.552]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.552]         on.exit(options(oopts), add = TRUE)
[10:50:52.552]     }
[10:50:52.552]     {
[10:50:52.552]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.552]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.552]         do.call(mapply, args = args)
[10:50:52.552]     }
[10:50:52.552] }
[10:50:52.552] Lazy evaluation: FALSE
[10:50:52.552] Asynchronous evaluation: TRUE
[10:50:52.552] Local evaluation: TRUE
[10:50:52.552] Environment: R_GlobalEnv
[10:50:52.552] Capture standard output: TRUE
[10:50:52.552] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.552] Immediate condition classes: ‘immediateCondition’
[10:50:52.552] Globals: 5 objects totaling 695 bytes (function ‘...future.FUN’ of 414 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 200 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.552] Packages: <none>
[10:50:52.552] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.552] Resolved: FALSE
[10:50:52.552] Value: <not collected>
[10:50:52.552] Conditions captured: <none>
[10:50:52.552] Early signaling: FALSE
[10:50:52.552] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.552] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.564] Chunk #2 of 2 ... DONE
[10:50:52.564] Launching 2 futures (chunks) ... DONE
[10:50:52.565] Resolving 2 futures (chunks) ...
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  value() on list ...
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  recursive: 0
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 2
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  checking value #1 ...
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:52.565] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:52.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 1
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : num 11
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65747
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #1
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:52.578] |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] FALSE, FALSE
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] FALSE, FALSE
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  until=1
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #1
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:52.580] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.581] |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:52.582] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  .  length: 1 (resolved future 1)
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  checking value #1 ... done
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.584] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.594] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.594] |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:52.604] |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 1
[10:50:52.604] |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:52.604] |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:52.605] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.605] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.605] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.605] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 2
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : num [1:2] 1 2
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : num [1:3] -9 -8 -7
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65746
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.606] |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:52.617] |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #2
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:52.618] |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.619] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.620] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:52.621] |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 2)
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ...
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:50:52.622] |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:50:52.623] |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ... done
[10:50:52.624] |  :  .  |  :  .  |  :  .  |  value() on list ... done
[10:50:52.624]  - Number of value chunks collected: 2
[10:50:52.624] Resolving 2 futures (chunks) ... DONE
[10:50:52.624] Reducing values from 2 chunks ...
[10:50:52.624]  - Number of values collected after concatenation: 3
[10:50:52.624]  - Number of values expected: 3
[10:50:52.624] Reducing values from 2 chunks ... DONE
[10:50:52.624] future_mapply() ... DONE
- future_.mapply()
[10:50:52.624] future_mapply() ...
[10:50:52.625] |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.625] |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:52.625] |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.625] Number of chunks: 2
[10:50:52.625] getGlobalsAndPackagesXApply() ...
[10:50:52.625]  - future.globals: TRUE
[10:50:52.625] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:52.626] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:52.627] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [3] ‘FUN’, ‘+’, ‘seq_len’
[10:50:52.627] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:52.627] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:52.627] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals is 414 bytes (414 bytes)
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals exported for future expression (‘FUN()’) is 414 bytes There is one global: ‘FUN’ (414 bytes of class ‘function’)
[10:50:52.628] |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:52.629] |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘FUN’
[10:50:52.629] |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:52.629] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:52.629]  - globals found/used: [n=1] ‘FUN’
[10:50:52.629]  - needed namespaces: [n=0] 
[10:50:52.629] Finding globals ... DONE
[10:50:52.629] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:52.629] List of 2
[10:50:52.629]  $ ...future.FUN:function (x, y)  
[10:50:52.629]  $ MoreArgs     : list()
[10:50:52.629]  - attr(*, "where")=List of 2
[10:50:52.629]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:52.629]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:52.629]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:52.629]  - attr(*, "resolved")= logi FALSE
[10:50:52.629]  - attr(*, "total_size")= num NA
[10:50:52.634] Packages to be attached in all futures: [n=0] 
[10:50:52.634] getGlobalsAndPackagesXApply() ... DONE
[10:50:52.634] Number of futures (= number of chunks): 2
[10:50:52.634] Launching 2 futures (chunks) ...
[10:50:52.634] Chunk #1 of 2 ...
[10:50:52.634]  - Finding globals in '...' for chunk #1 ...
[10:50:52.634] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:52.635] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:52.635]    + additional globals found: [n=0] 
[10:50:52.635]    + additional namespaces needed: [n=0] 
[10:50:52.636]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:52.636]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.636]  - seeds: <none>
[10:50:52.636]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.636] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:52.636] |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.636] |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:52.636] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:52.636] |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:52.637] |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:52.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:52.640] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:50:52.641] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:52.728] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:52.728] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:52.728] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.728] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:52.728] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:52.729] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:52.730] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:52.731] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.732] Created future:
[10:50:52.732] |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.733] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.733] |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.733] |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.743] |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.732] MultisessionFuture:
[10:50:52.732] Label: ‘future_.mapply-1’
[10:50:52.732] Expression:
[10:50:52.732] {
[10:50:52.732]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.732]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.732]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.732]         on.exit(options(oopts), add = TRUE)
[10:50:52.732]     }
[10:50:52.732]     {
[10:50:52.732]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.732]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.732]         do.call(mapply, args = args)
[10:50:52.732]     }
[10:50:52.732] }
[10:50:52.732] Lazy evaluation: FALSE
[10:50:52.732] Asynchronous evaluation: TRUE
[10:50:52.732] Local evaluation: TRUE
[10:50:52.732] Environment: R_GlobalEnv
[10:50:52.732] Capture standard output: TRUE
[10:50:52.732] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.732] Immediate condition classes: ‘immediateCondition’
[10:50:52.732] Globals: 5 objects totaling 649 bytes (function ‘...future.FUN’ of 414 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 150 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.732] Packages: <none>
[10:50:52.732] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.732] Resolved: FALSE
[10:50:52.732] Value: <not collected>
[10:50:52.732] Conditions captured: <none>
[10:50:52.732] Early signaling: FALSE
[10:50:52.732] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.732] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.744] Chunk #1 of 2 ... DONE
[10:50:52.744] Chunk #2 of 2 ...
[10:50:52.744]  - Finding globals in '...' for chunk #2 ...
[10:50:52.744] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:52.744] |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:52.745] |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:52.745] |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:52.745] |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:52.745] |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:52.745] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:52.745]    + additional globals found: [n=0] 
[10:50:52.745]    + additional namespaces needed: [n=0] 
[10:50:52.745]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:52.745]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:52.746]  - seeds: <none>
[10:50:52.746]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:52.746] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:52.747] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:52.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:52.750] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:50:52.751] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:52.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:52.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:50:52.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:52.834] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:52.834] Created future:
[10:50:52.835] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:52.835] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:52.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:52.836] |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:52.846] |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:52.834] MultisessionFuture:
[10:50:52.834] Label: ‘future_.mapply-2’
[10:50:52.834] Expression:
[10:50:52.834] {
[10:50:52.834]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:52.834]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:52.834]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:52.834]         on.exit(options(oopts), add = TRUE)
[10:50:52.834]     }
[10:50:52.834]     {
[10:50:52.834]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:52.834]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:52.834]         do.call(mapply, args = args)
[10:50:52.834]     }
[10:50:52.834] }
[10:50:52.834] Lazy evaluation: FALSE
[10:50:52.834] Asynchronous evaluation: TRUE
[10:50:52.834] Local evaluation: TRUE
[10:50:52.834] Environment: R_GlobalEnv
[10:50:52.834] Capture standard output: TRUE
[10:50:52.834] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:52.834] Immediate condition classes: ‘immediateCondition’
[10:50:52.834] Globals: 5 objects totaling 699 bytes (function ‘...future.FUN’ of 414 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 200 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:52.834] Packages: <none>
[10:50:52.834] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:52.834] Resolved: FALSE
[10:50:52.834] Value: <not collected>
[10:50:52.834] Conditions captured: <none>
[10:50:52.834] Early signaling: FALSE
[10:50:52.834] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:52.834] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:52.847] Chunk #2 of 2 ... DONE
[10:50:52.847] Launching 2 futures (chunks) ... DONE
[10:50:52.847] Resolving 2 futures (chunks) ...
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  value() on list ...
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  recursive: 0
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  length: 2
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of remaining objects: 2
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #1 ...
[10:50:52.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:52.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 1
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : num 11
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65747
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:52.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:52.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture #1
[10:50:52.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=1
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #1
[10:50:52.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value: <list>
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #1 ... done
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ...
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:52.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.876] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.876] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ... done
[10:50:52.887] |  :  .  |  :  .  |  :  .  |  :  .  |  Number of remaining objects: 1
[10:50:52.887] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ...
[10:50:52.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:52.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:52.887] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:52.888] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.888] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:52.888] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:52.888] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:52.888] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 2
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : num [1:2] 1 2
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : num [1:3] -9 -8 -7
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:52"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65746
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:52.889] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:52.902] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture #2
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.903] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:52.905] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.906] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:52.907] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value: <list>
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.908] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ... done
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  Relaying remaining futures ...
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:52.909] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  |  Relaying remaining futures ... done
[10:50:52.910] |  :  .  |  :  .  |  :  .  |  :  .  value() on list ... done
[10:50:52.910]  - Number of value chunks collected: 2
[10:50:52.910] Resolving 2 futures (chunks) ... DONE
[10:50:52.911] Reducing values from 2 chunks ...
[10:50:52.911]  - Number of values collected after concatenation: 3
[10:50:52.911]  - Number of values expected: 3
[10:50:52.911] Reducing values from 2 chunks ... DONE
[10:50:52.911] future_mapply() ... DONE
[10:50:52.911] future_mapply() ...
[10:50:52.911] |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.911] |  :  .  |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:52.912] |  :  .  |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.912] Number of chunks: 5
[10:50:52.912] getGlobalsAndPackagesXApply() ...
[10:50:52.912]  - future.globals: TRUE
[10:50:52.912] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.912] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:50:52.914] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘FUN’
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:52.915] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.916]  - globals found/used: [n=1] ‘FUN’
[10:50:52.916]  - needed namespaces: [n=0] 
[10:50:52.916] Finding globals ... DONE
[10:50:52.916] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:52.916] List of 2
[10:50:52.916]  $ ...future.FUN:function (C, k)  
[10:50:52.916]  $ MoreArgs     : NULL
[10:50:52.916]  - attr(*, "where")=List of 2
[10:50:52.916]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:52.916]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:52.916]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:52.916]  - attr(*, "resolved")= logi FALSE
[10:50:52.916]  - attr(*, "total_size")= num NA
[10:50:52.919] Packages to be attached in all futures: [n=0] 
[10:50:52.919] getGlobalsAndPackagesXApply() ... DONE
[10:50:52.919] Number of futures (= number of chunks): 5
[10:50:52.919] Launching 5 futures (chunks) ...
[10:50:52.919] Chunk #1 of 5 ...
[10:50:52.919]  - Finding globals in '...' for chunk #1 ...
[10:50:52.919] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.919] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:52.920] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:52.920] |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:52.920] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:52.920] |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:52.920] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.920]    + additional globals found: [n=0] 
[10:50:52.920]    + additional namespaces needed: [n=0] 
[10:50:52.920]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:52.921]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:52.921]  - seeds: <none>
[10:50:52.921]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.921] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:52.921] |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.921] |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:52.921] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:52.921] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:52.922] |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:52.923] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:52.925] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:50:52.926] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:53.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:53.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:53.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:53.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:53.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:53.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #1
[10:50:53.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:53.013] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.013] Created future:
[10:50:53.014] |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.025] |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.013] MultisessionFuture:
[10:50:53.013] Label: ‘future_mapply-1’
[10:50:53.013] Expression:
[10:50:53.013] {
[10:50:53.013]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.013]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.013]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.013]         on.exit(options(oopts), add = TRUE)
[10:50:53.013]     }
[10:50:53.013]     {
[10:50:53.013]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.013]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.013]         do.call(mapply, args = args)
[10:50:53.013]     }
[10:50:53.013] }
[10:50:53.013] Lazy evaluation: FALSE
[10:50:53.013] Asynchronous evaluation: TRUE
[10:50:53.013] Local evaluation: TRUE
[10:50:53.013] Environment: R_GlobalEnv
[10:50:53.013] Capture standard output: TRUE
[10:50:53.013] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.013] Immediate condition classes: ‘immediateCondition’
[10:50:53.013] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.013] Packages: <none>
[10:50:53.013] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.013] Resolved: FALSE
[10:50:53.013] Value: <not collected>
[10:50:53.013] Conditions captured: <none>
[10:50:53.013] Early signaling: FALSE
[10:50:53.013] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.013] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.026] Chunk #1 of 5 ... DONE
[10:50:53.026] Chunk #2 of 5 ...
[10:50:53.026]  - Finding globals in '...' for chunk #2 ...
[10:50:53.026] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:53.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:53.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:53.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:53.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:53.027] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.027]    + additional globals found: [n=0] 
[10:50:53.027]    + additional namespaces needed: [n=0] 
[10:50:53.027]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:53.027]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:53.027]  - seeds: <none>
[10:50:53.027]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.027] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:53.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.029] |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:53.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:53.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:53.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:53.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:53.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 2
[10:50:53.033] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:53.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:53.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:53.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:53.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:53.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:53.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:53.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:50:53.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:53.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.115] Created future:
[10:50:53.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:53.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:53.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:53.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:53.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:53.115] MultisessionFuture:
[10:50:53.115] Label: ‘future_mapply-2’
[10:50:53.115] Expression:
[10:50:53.115] {
[10:50:53.115]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.115]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.115]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.115]         on.exit(options(oopts), add = TRUE)
[10:50:53.115]     }
[10:50:53.115]     {
[10:50:53.115]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.115]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.115]         do.call(mapply, args = args)
[10:50:53.115]     }
[10:50:53.115] }
[10:50:53.115] Lazy evaluation: FALSE
[10:50:53.115] Asynchronous evaluation: TRUE
[10:50:53.115] Local evaluation: TRUE
[10:50:53.115] Environment: R_GlobalEnv
[10:50:53.115] Capture standard output: TRUE
[10:50:53.115] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.115] Immediate condition classes: ‘immediateCondition’
[10:50:53.115] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.115] Packages: <none>
[10:50:53.115] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.115] Resolved: FALSE
[10:50:53.115] Value: <not collected>
[10:50:53.115] Conditions captured: <none>
[10:50:53.115] Early signaling: FALSE
[10:50:53.115] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.115] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.128] Chunk #2 of 5 ... DONE
[10:50:53.128] Chunk #3 of 5 ...
[10:50:53.128]  - Finding globals in '...' for chunk #3 ...
[10:50:53.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:53.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:53.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:53.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:53.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:53.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.129]    + additional globals found: [n=0] 
[10:50:53.129]    + additional namespaces needed: [n=0] 
[10:50:53.129]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:53.129]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:53.129]  - seeds: <none>
[10:50:53.129]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:53.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:53.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:53.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Poll #1 (0): usedNodes() = 2, workers = 2
[10:50:53.145] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ...
[10:50:53.145] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ...
[10:50:53.145] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:53.145] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:53.145] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 1
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "AAAAA"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65747
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.146] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.157] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ...
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:53.158] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future at position #1 is resolved ... done
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ... done
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ...
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of futures with early signaling requested: 0
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Early signaling of 2 future candidates ... done
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:53.159] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ... done
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0.0253729820251465
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.160] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.162] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.162] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:50:53.162] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:53.241] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:53.241] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:53.242] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:53.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:53.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.245] Created future:
[10:50:53.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.245] MultisessionFuture:
[10:50:53.245] Label: ‘future_mapply-3’
[10:50:53.245] Expression:
[10:50:53.245] {
[10:50:53.245]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.245]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.245]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.245]         on.exit(options(oopts), add = TRUE)
[10:50:53.245]     }
[10:50:53.245]     {
[10:50:53.245]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.245]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.245]         do.call(mapply, args = args)
[10:50:53.245]     }
[10:50:53.245] }
[10:50:53.245] Lazy evaluation: FALSE
[10:50:53.245] Asynchronous evaluation: TRUE
[10:50:53.245] Local evaluation: TRUE
[10:50:53.245] Environment: R_GlobalEnv
[10:50:53.245] Capture standard output: TRUE
[10:50:53.245] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.245] Immediate condition classes: ‘immediateCondition’
[10:50:53.245] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.245] Packages: <none>
[10:50:53.245] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.245] Resolved: FALSE
[10:50:53.245] Value: <not collected>
[10:50:53.245] Conditions captured: <none>
[10:50:53.245] Early signaling: FALSE
[10:50:53.245] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.245] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.257] Chunk #3 of 5 ... DONE
[10:50:53.257] Chunk #4 of 5 ...
[10:50:53.258]  - Finding globals in '...' for chunk #4 ...
[10:50:53.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:53.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:53.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:53.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:53.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:53.259] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:53.259] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:53.259]    + additional globals found: [n=0] 
[10:50:53.259]    + additional namespaces needed: [n=0] 
[10:50:53.259]  - Finding globals in '...' for chunk #4 ... DONE
[10:50:53.259]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:53.259]  - seeds: <none>
[10:50:53.259]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.259] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:53.259] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.259] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.260] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:53.261] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:53.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:53.262] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:53.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:53.263] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.264] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Poll #1 (0): usedNodes() = 2, workers = 2
[10:50:53.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ...
[10:50:53.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ...
[10:50:53.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 1
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "BBBB"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65746
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:53.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ...
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ... done
[10:50:53.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ... done
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ...
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ... done
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ... done
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0.0253598690032959
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:50:53.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:53.368] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:53.368] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:53.369] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:53.370] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:53.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:53.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.372] Created future:
[10:50:53.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.372] MultisessionFuture:
[10:50:53.372] Label: ‘future_mapply-4’
[10:50:53.372] Expression:
[10:50:53.372] {
[10:50:53.372]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.372]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.372]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.372]         on.exit(options(oopts), add = TRUE)
[10:50:53.372]     }
[10:50:53.372]     {
[10:50:53.372]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.372]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.372]         do.call(mapply, args = args)
[10:50:53.372]     }
[10:50:53.372] }
[10:50:53.372] Lazy evaluation: FALSE
[10:50:53.372] Asynchronous evaluation: TRUE
[10:50:53.372] Local evaluation: TRUE
[10:50:53.372] Environment: R_GlobalEnv
[10:50:53.372] Capture standard output: TRUE
[10:50:53.372] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.372] Immediate condition classes: ‘immediateCondition’
[10:50:53.372] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.372] Packages: <none>
[10:50:53.372] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.372] Resolved: FALSE
[10:50:53.372] Value: <not collected>
[10:50:53.372] Conditions captured: <none>
[10:50:53.372] Early signaling: FALSE
[10:50:53.372] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.372] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.384] Chunk #4 of 5 ... DONE
[10:50:53.385] Chunk #5 of 5 ...
[10:50:53.385]  - Finding globals in '...' for chunk #5 ...
[10:50:53.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:53.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:53.385] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:53.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:53.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:53.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.386]    + additional globals found: [n=0] 
[10:50:53.386]    + additional namespaces needed: [n=0] 
[10:50:53.386]  - Finding globals in '...' for chunk #5 ... DONE
[10:50:53.386]  - Adjusted option 'future.globals.maxSize': 524288000 -> 5 * 524288000 = 2621440000 (bytes)
[10:50:53.386]  - seeds: <none>
[10:50:53.386]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.386] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:53.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:53.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:53.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:53.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:53.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:53.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Poll #1 (0): usedNodes() = 2, workers = 2
[10:50:53.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ...
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ...
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 1
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "CCC"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65747
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:53.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:53.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ...
[10:50:53.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future at position #1 is resolved ... done
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ... done
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ...
[10:50:53.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of futures with early signaling requested: 0
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Early signaling of 2 future candidates ... done
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ... done
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0.0250577926635742
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:53.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:50:53.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:53.495] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:53.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:53.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:53.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:53.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:53.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #2
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:53.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.501] Created future:
[10:50:53.502] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:53.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:53.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.503] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:53.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:53.502] MultisessionFuture:
[10:50:53.502] Label: ‘future_mapply-5’
[10:50:53.502] Expression:
[10:50:53.502] {
[10:50:53.502]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.502]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.502]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.502]         on.exit(options(oopts), add = TRUE)
[10:50:53.502]     }
[10:50:53.502]     {
[10:50:53.502]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.502]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.502]         do.call(mapply, args = args)
[10:50:53.502]     }
[10:50:53.502] }
[10:50:53.502] Lazy evaluation: FALSE
[10:50:53.502] Asynchronous evaluation: TRUE
[10:50:53.502] Local evaluation: TRUE
[10:50:53.502] Environment: R_GlobalEnv
[10:50:53.502] Capture standard output: TRUE
[10:50:53.502] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.502] Immediate condition classes: ‘immediateCondition’
[10:50:53.502] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.502] Packages: <none>
[10:50:53.502] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.502] Resolved: FALSE
[10:50:53.502] Value: <not collected>
[10:50:53.502] Conditions captured: <none>
[10:50:53.502] Early signaling: FALSE
[10:50:53.502] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.502] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.514] Chunk #5 of 5 ... DONE
[10:50:53.514] Launching 5 futures (chunks) ... DONE
[10:50:53.514] Resolving 5 futures (chunks) ...
[10:50:53.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ...
[10:50:53.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 0
[10:50:53.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 5
[10:50:53.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  
[10:50:53.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of remaining objects: 5
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ...
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #1
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] FALSE, FALSE, FALSE, FALSE, FALSE
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=1
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #1
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=1) ... done
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 4 (resolved future 1)
[10:50:53.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ... done
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ...
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #2
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, FALSE, FALSE, FALSE, FALSE
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=3
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #3
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=2) ... done
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 3 (resolved future 2)
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ... done
[10:50:53.524] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #3 ...
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #3
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=3) ...
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, FALSE, FALSE, FALSE
[10:50:53.525] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=3
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #3
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.526] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=3) ... done
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=3) ...
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=4
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #4
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=3) ... done
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 2 (resolved future 3)
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #3 ... done
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #4 ...
[10:50:53.529] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 1
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "DD"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65746
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.531] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:53.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:53.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:50:53.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #4
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=4) ...
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, FALSE, FALSE
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=4
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #4
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=4) ... done
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:53.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=4) ...
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=5
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #5
[10:50:53.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=4) ... done
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 1 (resolved future 4)
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #4 ... done
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #5 ...
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 1
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "E"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65747
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Removed future from position #1
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:53.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #5
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=5) ...
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, FALSE
[10:50:53.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=5
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #5
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=5) ... done
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=5) ...
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=5
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=5) ... done
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 5)
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #5 ... done
[10:50:53.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ...
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ...
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 5
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
 - flush all
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=5] TRUE, TRUE, TRUE, TRUE, TRUE
[10:50:53.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ... done
[10:50:53.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ... done
[10:50:53.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ... done
[10:50:53.566]  - Number of value chunks collected: 5
[10:50:53.566] Resolving 5 futures (chunks) ... DONE
[10:50:53.566] Reducing values from 5 chunks ...
[10:50:53.566]  - Number of values collected after concatenation: 5
[10:50:53.566]  - Number of values expected: 5
[10:50:53.566] Reducing values from 5 chunks ... DONE
[10:50:53.566] future_mapply() ... DONE
[10:50:53.567] future_mapply() ...
[10:50:53.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:53.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.567] Number of chunks: 2
[10:50:53.567] getGlobalsAndPackagesXApply() ...
[10:50:53.568]  - future.globals: TRUE
[10:50:53.568] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.568] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:53.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:53.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:53.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:53.569] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:53.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:50:53.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:50:53.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:53.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:53.570] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:53.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:53.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘FUN’
[10:50:53.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:53.571] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.571]  - globals found/used: [n=1] ‘FUN’
[10:50:53.571]  - needed namespaces: [n=0] 
[10:50:53.571] Finding globals ... DONE
[10:50:53.571] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:53.572] List of 2
[10:50:53.572]  $ ...future.FUN:function (C, k)  
[10:50:53.572]  $ MoreArgs     : list()
[10:50:53.572]  - attr(*, "where")=List of 2
[10:50:53.572]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:53.572]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:53.572]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:53.572]  - attr(*, "resolved")= logi FALSE
[10:50:53.572]  - attr(*, "total_size")= num NA
[10:50:53.574] Packages to be attached in all futures: [n=0] 
[10:50:53.574] getGlobalsAndPackagesXApply() ... DONE
[10:50:53.574] Number of futures (= number of chunks): 2
[10:50:53.575] Launching 2 futures (chunks) ...
[10:50:53.575] Chunk #1 of 2 ...
[10:50:53.575]  - Finding globals in '...' for chunk #1 ...
[10:50:53.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:53.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:53.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:53.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:53.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:53.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.578]    + additional globals found: [n=0] 
[10:50:53.578]    + additional namespaces needed: [n=0] 
[10:50:53.578]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:53.578]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:53.578]  - seeds: <none>
[10:50:53.578]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:53.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:53.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:53.580] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:53.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 0
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 1
[10:50:53.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:53.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:53.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:53.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:53.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:53.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:53.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #1
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:53.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.666] Created future:
[10:50:53.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.678] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.667] MultisessionFuture:
[10:50:53.667] Label: ‘future_.mapply-1’
[10:50:53.667] Expression:
[10:50:53.667] {
[10:50:53.667]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.667]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.667]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.667]         on.exit(options(oopts), add = TRUE)
[10:50:53.667]     }
[10:50:53.667]     {
[10:50:53.667]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.667]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.667]         do.call(mapply, args = args)
[10:50:53.667]     }
[10:50:53.667] }
[10:50:53.667] Lazy evaluation: FALSE
[10:50:53.667] Asynchronous evaluation: TRUE
[10:50:53.667] Local evaluation: TRUE
[10:50:53.667] Environment: R_GlobalEnv
[10:50:53.667] Capture standard output: TRUE
[10:50:53.667] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.667] Immediate condition classes: ‘immediateCondition’
[10:50:53.667] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.667] Packages: <none>
[10:50:53.667] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.667] Resolved: FALSE
[10:50:53.667] Value: <not collected>
[10:50:53.667] Conditions captured: <none>
[10:50:53.667] Early signaling: FALSE
[10:50:53.667] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.667] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.679] Chunk #1 of 2 ... DONE
[10:50:53.679] Chunk #2 of 2 ...
[10:50:53.679]  - Finding globals in '...' for chunk #2 ...
[10:50:53.679] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:53.679] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:53.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:53.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:53.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:53.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:53.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:53.680]    + additional globals found: [n=0] 
[10:50:53.680]    + additional namespaces needed: [n=0] 
[10:50:53.680]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:53.680]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:53.680]  - seeds: <none>
[10:50:53.680]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:53.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:53.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:53.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.685] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 2
[10:50:53.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:53.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:53.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:53.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.771] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:53.772] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.772] Created future:
[10:50:53.773] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:53.773] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:53.773] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:53.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:53.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:53.772] MultisessionFuture:
[10:50:53.772] Label: ‘future_.mapply-2’
[10:50:53.772] Expression:
[10:50:53.772] {
[10:50:53.772]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.772]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.772]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.772]         on.exit(options(oopts), add = TRUE)
[10:50:53.772]     }
[10:50:53.772]     {
[10:50:53.772]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.772]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.772]         do.call(mapply, args = args)
[10:50:53.772]     }
[10:50:53.772] }
[10:50:53.772] Lazy evaluation: FALSE
[10:50:53.772] Asynchronous evaluation: TRUE
[10:50:53.772] Local evaluation: TRUE
[10:50:53.772] Environment: R_GlobalEnv
[10:50:53.772] Capture standard output: TRUE
[10:50:53.772] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.772] Immediate condition classes: ‘immediateCondition’
[10:50:53.772] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.772] Packages: <none>
[10:50:53.772] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.772] Resolved: FALSE
[10:50:53.772] Value: <not collected>
[10:50:53.772] Conditions captured: <none>
[10:50:53.772] Early signaling: FALSE
[10:50:53.772] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.772] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.784] Chunk #2 of 2 ... DONE
[10:50:53.785] Launching 2 futures (chunks) ... DONE
[10:50:53.785] Resolving 2 futures (chunks) ...
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ...
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 0
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 2
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ...
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:53.785] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.786] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 2
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "AAAAA"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "BBBB"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65747
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.006 0 0
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.787] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:53.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #1
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] FALSE, FALSE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] FALSE, FALSE
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=1
[10:50:53.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #1
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:53.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1 (resolved future 1)
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ... done
[10:50:53.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:53.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:53.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.815] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:53.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 1
[10:50:53.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:53.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:53.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:53.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 1
[10:50:53.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:53.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:53.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:53.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:53.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 3
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "CCC"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "DD"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "E"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:53"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65746
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.032 0 0.032 0 0
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:53.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:53.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:53.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:53.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #2
[10:50:53.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:53.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:53.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, FALSE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, FALSE
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:53.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:53.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 2)
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ...
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 2
[10:50:53.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=2] TRUE, TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=2] TRUE, TRUE
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ... done
[10:50:53.868] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ... done
[10:50:53.869]  - Number of value chunks collected: 2
[10:50:53.869] Resolving 2 futures (chunks) ... DONE
[10:50:53.869] Reducing values from 2 chunks ...
[10:50:53.869]  - Number of values collected after concatenation: 5
[10:50:53.869]  - Number of values expected: 5
[10:50:53.869] Reducing values from 2 chunks ... DONE
[10:50:53.869] future_mapply() ... DONE
[10:50:53.869] future_mapply() ...
[10:50:53.869] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.870] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:53.870] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.870] Number of chunks: 3
[10:50:53.870] Index remapping (attribute 'ordering'): [n = 5] 3, 4, 5, 1, 2
[10:50:53.870] getGlobalsAndPackagesXApply() ...
[10:50:53.870]  - future.globals: TRUE
[10:50:53.870] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.871] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:53.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:53.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:53.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:53.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:53.872] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:53.873] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘FUN’
[10:50:53.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:53.874] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.874]  - globals found/used: [n=1] ‘FUN’
[10:50:53.874]  - needed namespaces: [n=0] 
[10:50:53.874] Finding globals ... DONE
[10:50:53.874] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:53.874] List of 2
[10:50:53.874]  $ ...future.FUN:function (C, k)  
[10:50:53.874]  $ MoreArgs     : NULL
[10:50:53.874]  - attr(*, "where")=List of 2
[10:50:53.874]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:53.874]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:53.874]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:53.874]  - attr(*, "resolved")= logi FALSE
[10:50:53.874]  - attr(*, "total_size")= num NA
[10:50:53.877] Packages to be attached in all futures: [n=0] 
[10:50:53.877] getGlobalsAndPackagesXApply() ... DONE
[10:50:53.877] Number of futures (= number of chunks): 3
[10:50:53.877] Launching 3 futures (chunks) ...
[10:50:53.877] Chunk #1 of 3 ...
[10:50:53.877]  - Finding globals in '...' for chunk #1 ...
[10:50:53.877] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:53.878] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.878]    + additional globals found: [n=0] 
[10:50:53.878]    + additional namespaces needed: [n=0] 
[10:50:53.879]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:53.879]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:53.879]  - seeds: <none>
[10:50:53.879]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.879] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:53.879] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.879] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:53.879] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:53.879] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:53.880] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:53.881] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:53.883] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:50:53.884] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:53.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:53.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:53.970] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.971] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting stack without first strategy: [n=0] 
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:50:53.972] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:53.973] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:53.973] Created future:
[10:50:53.974] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:53.974] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:53.975] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:53.975] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:53.985] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:53.973] MultisessionFuture:
[10:50:53.973] Label: ‘future_mapply-1’
[10:50:53.973] Expression:
[10:50:53.973] {
[10:50:53.973]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:53.973]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:53.973]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:53.973]         on.exit(options(oopts), add = TRUE)
[10:50:53.973]     }
[10:50:53.973]     {
[10:50:53.973]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:53.973]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:53.973]         do.call(mapply, args = args)
[10:50:53.973]     }
[10:50:53.973] }
[10:50:53.973] Lazy evaluation: FALSE
[10:50:53.973] Asynchronous evaluation: TRUE
[10:50:53.973] Local evaluation: TRUE
[10:50:53.973] Environment: R_GlobalEnv
[10:50:53.973] Capture standard output: TRUE
[10:50:53.973] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:53.973] Immediate condition classes: ‘immediateCondition’
[10:50:53.973] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:53.973] Packages: <none>
[10:50:53.973] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:53.973] Resolved: FALSE
[10:50:53.973] Value: <not collected>
[10:50:53.973] Conditions captured: <none>
[10:50:53.973] Early signaling: FALSE
[10:50:53.973] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:53.973] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:53.986] Chunk #1 of 3 ... DONE
[10:50:53.986] Chunk #2 of 3 ...
[10:50:53.986]  - Finding globals in '...' for chunk #2 ...
[10:50:53.986] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.986] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:53.987] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:53.987] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:53.987] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:53.987] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:53.987] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.987]    + additional globals found: [n=0] 
[10:50:53.987]    + additional namespaces needed: [n=0] 
[10:50:53.987]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:53.987]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:53.987]  - seeds: <none>
[10:50:53.987]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:53.988] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:53.989] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:53.990] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:53.990] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:53.990] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:53.990] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:53.990] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:53.992] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:50:53.993] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:54.073] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:54.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:54.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:54.074] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by the future expression (n = 0): <none>
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:54.075] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting stack without first strategy: [n=0] 
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages needed by future strategies (n = 0): <none>
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:54.076] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:54.077] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:54.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.078] Created future:
[10:50:54.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:54.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:54.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.078] MultisessionFuture:
[10:50:54.078] Label: ‘future_mapply-2’
[10:50:54.078] Expression:
[10:50:54.078] {
[10:50:54.078]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.078]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.078]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.078]         on.exit(options(oopts), add = TRUE)
[10:50:54.078]     }
[10:50:54.078]     {
[10:50:54.078]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.078]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.078]         do.call(mapply, args = args)
[10:50:54.078]     }
[10:50:54.078] }
[10:50:54.078] Lazy evaluation: FALSE
[10:50:54.078] Asynchronous evaluation: TRUE
[10:50:54.078] Local evaluation: TRUE
[10:50:54.078] Environment: R_GlobalEnv
[10:50:54.078] Capture standard output: TRUE
[10:50:54.078] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.078] Immediate condition classes: ‘immediateCondition’
[10:50:54.078] Globals: 5 objects totaling 847 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 76 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.078] Packages: <none>
[10:50:54.078] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.078] Resolved: FALSE
[10:50:54.078] Value: <not collected>
[10:50:54.078] Conditions captured: <none>
[10:50:54.078] Early signaling: FALSE
[10:50:54.078] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.078] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.090] Chunk #2 of 3 ... DONE
[10:50:54.090] Chunk #3 of 3 ...
[10:50:54.090]  - Finding globals in '...' for chunk #3 ...
[10:50:54.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:54.091] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.091]    + additional globals found: [n=0] 
[10:50:54.091]    + additional namespaces needed: [n=0] 
[10:50:54.092]  - Finding globals in '...' for chunk #3 ... DONE
[10:50:54.092]  - Adjusted option 'future.globals.maxSize': 524288000 -> 3 * 524288000 = 1572864000 (bytes)
[10:50:54.092]  - seeds: <none>
[10:50:54.092]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.092] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.092] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.092] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:54.092] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:54.093] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:54.094] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:54.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:54.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:54.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:54.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:54.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:54.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Poll #1 (0): usedNodes() = 2, workers = 2
[10:50:54.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ...
[10:50:54.107] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ...
[10:50:54.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ...
[10:50:54.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:54.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ... done
[10:50:54.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  [1] TRUE
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  received data:
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  List of 5
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ type   : chr "VALUE"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ value  :List of 13
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ value            :List of 2
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "CCC"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "DD"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ visible          : logi TRUE
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ stdout           : chr ""
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ conditions       : list()
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ rng              : logi FALSE
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseConnections:List of 3
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ added   : NULL
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ removed : NULL
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ replaced: NULL
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseDevices    : NULL
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ pid   : int 65747
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ random: int 2147483647
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ r_info           :List of 4
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os           : chr "unix"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ version          : chr "1.8"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ success: logi TRUE
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ tag    : NULL
[10:50:54.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Received FutureResult
[10:50:54.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Removed future from position #1
[10:50:54.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 1
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Erased future from future backend
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ...
[10:50:54.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:54.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future at position #1 is resolved ... done
[10:50:54.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  collectValues('workers-7936db94dbb7f1e6892a1ad4d02dd671', firstOnly = TRUE) ... done
[10:50:54.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ...
[10:50:54.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of futures with early signaling requested: 0
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Early signaling of 2 future candidates ... done
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 2
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'collect-first', earlySignal = 1) ... done
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Total time: 0.0302107334136963
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:54.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Listing all futures
[10:50:54.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 1
[10:50:54.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:50:54.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:54.208] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Worker is functional
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:54.209] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ...
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by the future expression (n = 0): <none>
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCore() ... done
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ...
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureCapture() ... done
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ...
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting stack without first strategy: [n=0] 
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages needed by future strategies (n = 0): <none>
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureContext() ... done
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Appended future to position #2
[10:50:54.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of registered futures: 2
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:54.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.212] Created future:
[10:50:54.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:54.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:54.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:54.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:54.213] MultisessionFuture:
[10:50:54.213] Label: ‘future_mapply-3’
[10:50:54.213] Expression:
[10:50:54.213] {
[10:50:54.213]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.213]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.213]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.213]         on.exit(options(oopts), add = TRUE)
[10:50:54.213]     }
[10:50:54.213]     {
[10:50:54.213]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.213]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.213]         do.call(mapply, args = args)
[10:50:54.213]     }
[10:50:54.213] }
[10:50:54.213] Lazy evaluation: FALSE
[10:50:54.213] Asynchronous evaluation: TRUE
[10:50:54.213] Local evaluation: TRUE
[10:50:54.213] Environment: R_GlobalEnv
[10:50:54.213] Capture standard output: TRUE
[10:50:54.213] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.213] Immediate condition classes: ‘immediateCondition’
[10:50:54.213] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.213] Packages: <none>
[10:50:54.213] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.213] Resolved: FALSE
[10:50:54.213] Value: <not collected>
[10:50:54.213] Conditions captured: <none>
[10:50:54.213] Early signaling: FALSE
[10:50:54.213] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.213] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.225] Chunk #3 of 3 ... DONE
[10:50:54.225] Launching 3 futures (chunks) ... DONE
[10:50:54.225] Resolving 3 futures (chunks) ...
[10:50:54.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ...
[10:50:54.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 0
[10:50:54.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 3
[10:50:54.225] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 3
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ...
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #1
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] FALSE, FALSE, FALSE
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] FALSE, FALSE, FALSE
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=1
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #1
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:54.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.229] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:54.230] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 2 (resolved future 1)
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ... done
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:54.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 1
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "E"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65746
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:54.243] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #2
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.244] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, FALSE, FALSE
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, FALSE, FALSE
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=2
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #2
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.245] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:54.246] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:54.247] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=3
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #3
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:54.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=2) ... done
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1 (resolved future 2)
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #3 ...
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:54.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:54.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:54.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  [1] TRUE
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  received data:
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  List of 5
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ type   : chr "VALUE"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ value  :List of 13
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ value            :List of 2
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "AAAAA"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ : chr "BBBB"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ visible          : logi TRUE
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ stdout           : chr ""
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ conditions       : list()
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ rng              : logi FALSE
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseGlobalEnv  : NULL
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseConnections:List of 3
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ added   : NULL
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ removed : NULL
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ replaced: NULL
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ misuseDevices    : NULL
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..- attr(*, "source")=List of 5
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ pid   : int 65747
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ random: int 2147483647
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ r_info           :List of 4
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os           : chr "unix"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ os_name      : chr "Linux"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    .. ..$ captures_utf8: logi TRUE
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..$ version          : chr "1.8"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ success: logi TRUE
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :   $ tag    : NULL
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Received FutureResult
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Removed future from position #1
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Erased future from future backend
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.267] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #3
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=3) ...
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, FALSE
[10:50:54.268] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, FALSE
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=3
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relaying element #3
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.269] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=3) ... done
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.270] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value: <list>
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=3) ...
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  until=3
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=3) ... done
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 3)
[10:50:54.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #3 ... done
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ...
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  nx: 3
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relay: TRUE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  stdout: TRUE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signal: TRUE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  resignal: FALSE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  force: TRUE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, TRUE
 - flush all
[10:50:54.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  relayed: [n=3] TRUE, TRUE, TRUE
[10:50:54.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  queued futures: [n=3] TRUE, TRUE, TRUE
[10:50:54.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:50:54.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ... done
[10:50:54.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ... done
[10:50:54.274]  - Number of value chunks collected: 3
[10:50:54.274] Resolving 3 futures (chunks) ... DONE
[10:50:54.274] Reducing values from 3 chunks ...
[10:50:54.274]  - Number of values collected after concatenation: 5
[10:50:54.274]  - Number of values expected: 5
[10:50:54.274] Reverse index remapping (attribute 'ordering'): [n = 5] 4, 5, 1, 2, 3
[10:50:54.274] Reducing values from 3 chunks ... DONE
[10:50:54.275] future_mapply() ... DONE
[10:50:54.275] future_mapply() ...
[10:50:54.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:54.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.276] Number of chunks: 2
[10:50:54.276] getGlobalsAndPackagesXApply() ...
[10:50:54.276]  - future.globals: TRUE
[10:50:54.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:54.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:54.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:50:54.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘FUN’
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:54.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:54.279]  - globals found/used: [n=1] ‘FUN’
[10:50:54.279]  - needed namespaces: [n=0] 
[10:50:54.280] Finding globals ... DONE
[10:50:54.280] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:54.280] List of 2
[10:50:54.280]  $ ...future.FUN:function (C, k)  
[10:50:54.280]  $ MoreArgs     : list()
[10:50:54.280]  - attr(*, "where")=List of 2
[10:50:54.280]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:54.280]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:54.280]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:54.280]  - attr(*, "resolved")= logi FALSE
[10:50:54.280]  - attr(*, "total_size")= num NA
[10:50:54.282] Packages to be attached in all futures: [n=0] 
[10:50:54.283] getGlobalsAndPackagesXApply() ... DONE
[10:50:54.283] Number of futures (= number of chunks): 2
[10:50:54.283] Launching 2 futures (chunks) ...
[10:50:54.283] Chunk #1 of 2 ...
[10:50:54.283]  - Finding globals in '...' for chunk #1 ...
[10:50:54.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:54.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:54.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:54.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:54.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:54.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:54.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:54.284]    + additional globals found: [n=0] 
[10:50:54.284]    + additional namespaces needed: [n=0] 
[10:50:54.284]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:54.284]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.285]  - seeds: <none>
[10:50:54.285]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:54.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:54.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:54.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:54.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:54.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:54.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:54.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of workers: 2
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ...
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 0
[10:50:54.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Total time: 0
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Polling for a free worker ... done
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Listing all futures
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Index of first available worker: 1
[10:50:54.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Validate that the worker is functional ...
[10:50:54.371] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Worker is functional
[10:50:54.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ... done
[10:50:54.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:54.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:54.372] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ...
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ...
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by the future expression (n = 0): <none>
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCore() ... done
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ...
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureCapture() ... done
[10:50:54.373] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ...
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Getting stack without first strategy: [n=0] 
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages needed by future strategies (n = 0): <none>
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureContext() ... done
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getFutureData() ... done
[10:50:54.374] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Appended future to position #1
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:54.375] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.376] Created future:
[10:50:54.376] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:54.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:54.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:54.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:54.387] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:54.376] MultisessionFuture:
[10:50:54.376] Label: ‘future_.mapply-1’
[10:50:54.376] Expression:
[10:50:54.376] {
[10:50:54.376]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.376]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.376]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.376]         on.exit(options(oopts), add = TRUE)
[10:50:54.376]     }
[10:50:54.376]     {
[10:50:54.376]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.376]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.376]         do.call(mapply, args = args)
[10:50:54.376]     }
[10:50:54.376] }
[10:50:54.376] Lazy evaluation: FALSE
[10:50:54.376] Asynchronous evaluation: TRUE
[10:50:54.376] Local evaluation: TRUE
[10:50:54.376] Environment: R_GlobalEnv
[10:50:54.376] Capture standard output: TRUE
[10:50:54.376] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.376] Immediate condition classes: ‘immediateCondition’
[10:50:54.376] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.376] Packages: <none>
[10:50:54.376] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.376] Resolved: FALSE
[10:50:54.376] Value: <not collected>
[10:50:54.376] Conditions captured: <none>
[10:50:54.376] Early signaling: FALSE
[10:50:54.376] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.376] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.388] Chunk #1 of 2 ... DONE
[10:50:54.388] Chunk #2 of 2 ...
[10:50:54.388]  - Finding globals in '...' for chunk #2 ...
[10:50:54.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:54.388] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:54.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:54.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:54.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:54.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:54.389] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:54.389]    + additional globals found: [n=0] 
[10:50:54.389]    + additional namespaces needed: [n=0] 
[10:50:54.389]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:54.390]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.390]  - seeds: <none>
[10:50:54.390]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:54.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:54.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:54.390] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:54.391] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:54.392] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestNode() ...
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of workers: 2
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ...
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Listing all futures
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 1
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Total time: 0
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Polling for a free worker ... done
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Listing all futures
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 1
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Index of first available worker: 2
[10:50:54.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Validate that the worker is functional ...
[10:50:54.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Worker is functional
[10:50:54.480] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ... done
[10:50:54.481] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.481] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ... done
[10:50:54.481] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ...
[10:50:54.481] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  eraseGlobalEnvironment() ... done
[10:50:54.481] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ...
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ...
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ...
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages needed by the future expression (n = 0): <none>
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCore() ... done
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ...
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureCapture() ... done
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ...
[10:50:54.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages needed by future strategies (n = 0): <none>
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureContext() ... done
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getFutureData() ... done
[10:50:54.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Appended future to position #2
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of registered futures: 2
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() ... done
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture started
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:54.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.485] Created future:
[10:50:54.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:54.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 2
[10:50:54.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:54.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.485] MultisessionFuture:
[10:50:54.485] Label: ‘future_.mapply-2’
[10:50:54.485] Expression:
[10:50:54.485] {
[10:50:54.485]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.485]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.485]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.485]         on.exit(options(oopts), add = TRUE)
[10:50:54.485]     }
[10:50:54.485]     {
[10:50:54.485]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.485]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.485]         do.call(mapply, args = args)
[10:50:54.485]     }
[10:50:54.485] }
[10:50:54.485] Lazy evaluation: FALSE
[10:50:54.485] Asynchronous evaluation: TRUE
[10:50:54.485] Local evaluation: TRUE
[10:50:54.485] Environment: R_GlobalEnv
[10:50:54.485] Capture standard output: TRUE
[10:50:54.485] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.485] Immediate condition classes: ‘immediateCondition’
[10:50:54.485] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.485] Packages: <none>
[10:50:54.485] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.485] Resolved: FALSE
[10:50:54.485] Value: <not collected>
[10:50:54.485] Conditions captured: <none>
[10:50:54.485] Early signaling: FALSE
[10:50:54.485] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.485] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.497] Chunk #2 of 2 ... DONE
[10:50:54.497] Launching 2 futures (chunks) ... DONE
[10:50:54.497] Resolving 2 futures (chunks) ...
[10:50:54.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value() on list ...
[10:50:54.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  recursive: 0
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 2
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of remaining objects: 2
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #1 ...
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:54.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 1
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:54.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 2
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "AAAAA"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "BBBB"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65747
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:54.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:54.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:54.510] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 1
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture #1
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.511] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] FALSE, FALSE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] FALSE, FALSE
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=1
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #1
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value: <list>
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:54.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=1) ... done
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 1 (resolved future 1)
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #1 ... done
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ...
[10:50:54.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:54.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:54.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:54.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:54.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:54.527] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:54.528] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ... done
[10:50:54.538] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Number of remaining objects: 1
[10:50:54.538] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ...
[10:50:54.538] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  'obj' is MultisessionFuture
[10:50:54.538] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:54.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:54.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:54.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:54.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.539] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  [1] TRUE
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  received data:
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  List of 5
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ type   : chr "VALUE"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ value  :List of 13
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ value            :List of 3
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "CCC"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "DD"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ : chr "E"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ visible          : logi TRUE
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ stdout           : chr ""
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ conditions       : list()
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ rng              : logi FALSE
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseGlobalEnv  : NULL
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseConnections:List of 3
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ added   : NULL
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ removed : NULL
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ replaced: NULL
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ misuseDevices    : NULL
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..- attr(*, "source")=List of 5
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ pid   : int 65746
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ random: int 2147483647
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ r_info           :List of 4
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os           : chr "unix"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ os_name      : chr "Linux"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    .. ..$ captures_utf8: logi TRUE
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..$ version          : chr "1.8"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ success: logi TRUE
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.540] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |   $ tag    : NULL
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Received FutureResult
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Removed future from position #1
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of registered futures: 0
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Erased future from future backend
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ...
[10:50:54.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result already collected: FutureResult
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result() for ClusterFuture ... done
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture #2
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:54.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, FALSE
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, FALSE
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relaying element #2
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:54.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ...
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  result already collected: FutureResult
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value: <list>
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value(<MultisessionFuture>, ...) ... done
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:54.556] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:54.556] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  until=2
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:54.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 0 (resolved future 2)
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  checking value #2 ... done
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Relaying remaining futures ...
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ...
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  nx: 2
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relay: TRUE
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  stdout: TRUE
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signal: TRUE
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  resignal: FALSE
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  force: TRUE
[10:50:54.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  relayed: [n=2] TRUE, TRUE
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  queued futures: [n=2] TRUE, TRUE
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signalConditionsASAP(NULL, pos=0) ... done
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Relaying remaining futures ... done
[10:50:54.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value() on list ... done
[10:50:54.560]  - Number of value chunks collected: 2
[10:50:54.560] Resolving 2 futures (chunks) ... DONE
[10:50:54.560] Reducing values from 2 chunks ...
[10:50:54.560]  - Number of values collected after concatenation: 5
[10:50:54.561]  - Number of values expected: 5
[10:50:54.561] Reducing values from 2 chunks ... DONE
[10:50:54.561] future_mapply() ... DONE
[10:50:54.561] future_mapply() ...
[10:50:54.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:54.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.562] Number of chunks: 2
[10:50:54.562] Index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:54.562] getGlobalsAndPackagesXApply() ...
[10:50:54.562]  - future.globals: TRUE
[10:50:54.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:54.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:54.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:54.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:54.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:54.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [1] ‘base’
[10:50:54.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [1] ‘base’
[10:50:54.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:54.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:54.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:54.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:54.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [1] ‘FUN’
[10:50:54.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:54.567] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.567]  - globals found/used: [n=1] ‘FUN’
[10:50:54.567]  - needed namespaces: [n=0] 
[10:50:54.567] Finding globals ... DONE
[10:50:54.568] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:54.568] List of 2
[10:50:54.568]  $ ...future.FUN:function (C, k)  
[10:50:54.568]  $ MoreArgs     : NULL
[10:50:54.568]  - attr(*, "where")=List of 2
[10:50:54.568]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:54.568]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:54.568]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:54.568]  - attr(*, "resolved")= logi FALSE
[10:50:54.568]  - attr(*, "total_size")= num NA
[10:50:54.572] Packages to be attached in all futures: [n=0] 
[10:50:54.572] getGlobalsAndPackagesXApply() ... DONE
[10:50:54.572] Number of futures (= number of chunks): 2
[10:50:54.572] Launching 2 futures (chunks) ...
[10:50:54.572] Chunk #1 of 2 ...
[10:50:54.573]  - Finding globals in '...' for chunk #1 ...
[10:50:54.573] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.573] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:54.573] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:54.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:54.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:54.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:54.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.574]    + additional globals found: [n=0] 
[10:50:54.574]    + additional namespaces needed: [n=0] 
[10:50:54.574]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:54.575]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.575]  - seeds: <none>
[10:50:54.575]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:54.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:54.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:54.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:54.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:54.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:54.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:54.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:54.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:54.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:54.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:54.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:54.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Workers: [n=2]
[10:50:54.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  requestWorker() ...
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestNode() ...
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of workers: 2
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ...
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Listing all futures
[10:50:54.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 0
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Total time: 0
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Polling for a free worker ... done
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Listing all futures
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 0
[10:50:54.583] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.584] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Index of first available worker: 1
[10:50:54.584] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Validate that the worker is functional ...
[10:50:54.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Worker is functional
[10:50:54.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ... done
[10:50:54.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ... done
[10:50:54.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ...
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  eraseGlobalEnvironment() ... done
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ...
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ...
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCore() ...
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:54.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCore() ... done
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCapture() ...
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureCapture() ... done
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureContext() ...
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:54.672] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureContext() ... done
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getFutureData() ... done
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Appended future to position #1
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 1
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() ... done
[10:50:54.673] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  MultisessionFuture started
[10:50:54.674] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ... done
[10:50:54.674] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:54.674] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.674] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:54.674] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.674] Created future:
[10:50:54.675] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:54.675] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:54.675] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:54.686] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:54.674] MultisessionFuture:
[10:50:54.674] Label: ‘future_mapply-1’
[10:50:54.674] Expression:
[10:50:54.674] {
[10:50:54.674]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.674]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.674]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.674]         on.exit(options(oopts), add = TRUE)
[10:50:54.674]     }
[10:50:54.674]     {
[10:50:54.674]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.674]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.674]         do.call(mapply, args = args)
[10:50:54.674]     }
[10:50:54.674] }
[10:50:54.674] Lazy evaluation: FALSE
[10:50:54.674] Asynchronous evaluation: TRUE
[10:50:54.674] Local evaluation: TRUE
[10:50:54.674] Environment: R_GlobalEnv
[10:50:54.674] Capture standard output: TRUE
[10:50:54.674] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.674] Immediate condition classes: ‘immediateCondition’
[10:50:54.674] Globals: 5 objects totaling 876 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.674] Packages: <none>
[10:50:54.674] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.674] Resolved: FALSE
[10:50:54.674] Value: <not collected>
[10:50:54.674] Conditions captured: <none>
[10:50:54.674] Early signaling: FALSE
[10:50:54.674] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.674] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.686] Chunk #1 of 2 ... DONE
[10:50:54.687] Chunk #2 of 2 ...
[10:50:54.687]  - Finding globals in '...' for chunk #2 ...
[10:50:54.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:54.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:54.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:54.687] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:54.688] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:54.688] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:54.688] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:54.688]    + additional globals found: [n=0] 
[10:50:54.688]    + additional namespaces needed: [n=0] 
[10:50:54.688]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:54.688]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.688]  - seeds: <none>
[10:50:54.688]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.688] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:54.688] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [0] 
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [0] 
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:54.689] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:54.690] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:54.691] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  launchFuture() for ClusterFutureBackend ...
[10:50:54.691] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Workers: [n=2]
[10:50:54.691] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.692] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.692] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  requestWorker() ...
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestNode() ...
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of workers: 2
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Polling for a free worker ...
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Listing all futures
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 1
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Total time: 0
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Polling for a free worker ... done
[10:50:54.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Listing all futures
[10:50:54.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 1
[10:50:54.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Index of first available worker: 2
[10:50:54.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Validate that the worker is functional ...
[10:50:54.773] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Worker is functional
[10:50:54.773] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestNode() ... done
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 2
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ... done
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ...
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  eraseGlobalEnvironment() ... done
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ...
[10:50:54.774] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 2
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureData() ...
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCore() ...
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCore() ... done
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCapture() ...
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureCapture() ... done
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureContext() ...
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.775] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureContext() ... done
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getFutureData() ... done
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Appended future to position #2
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of registered futures: 2
[10:50:54.776] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() ... done
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture started
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ... done
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ... done
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:54.777] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.777] Created future:
[10:50:54.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:54.778] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:54.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  cluster node index: 2
[10:50:54.779] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:54.789] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:54.777] MultisessionFuture:
[10:50:54.777] Label: ‘future_mapply-2’
[10:50:54.777] Expression:
[10:50:54.777] {
[10:50:54.777]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.777]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.777]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.777]         on.exit(options(oopts), add = TRUE)
[10:50:54.777]     }
[10:50:54.777]     {
[10:50:54.777]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.777]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.777]         do.call(mapply, args = args)
[10:50:54.777]     }
[10:50:54.777] }
[10:50:54.777] Lazy evaluation: FALSE
[10:50:54.777] Asynchronous evaluation: TRUE
[10:50:54.777] Local evaluation: TRUE
[10:50:54.777] Environment: R_GlobalEnv
[10:50:54.777] Capture standard output: TRUE
[10:50:54.777] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.777] Immediate condition classes: ‘immediateCondition’
[10:50:54.777] Globals: 5 objects totaling 905 bytes (function ‘...future.FUN’ of 690 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.777] Packages: <none>
[10:50:54.777] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.777] Resolved: FALSE
[10:50:54.777] Value: <not collected>
[10:50:54.777] Conditions captured: <none>
[10:50:54.777] Early signaling: FALSE
[10:50:54.777] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.777] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.790] Chunk #2 of 2 ... DONE
[10:50:54.790] Launching 2 futures (chunks) ... DONE
[10:50:54.790] Resolving 2 futures (chunks) ...
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ...
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 0
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 2
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of remaining objects: 2
[10:50:54.790] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ...
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:54.791] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 1
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 2
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "E"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "DD"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65747
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.792] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:54.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:54.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Removed future from position #1
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 1
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result already collected: FutureResult
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:54.803] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #1
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] FALSE, FALSE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] FALSE, FALSE
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=1
[10:50:54.804] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #1
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.805] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.806] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:54.807] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=1) ... done
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 1 (resolved future 1)
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ... done
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ...
[10:50:54.808] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:54.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:54.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:54.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:54.809] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:54.820] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:54.820] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ... done
[10:50:54.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of remaining objects: 1
[10:50:54.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ...
[10:50:54.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  'obj' is MultisessionFuture
[10:50:54.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ...
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:54.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  [1] TRUE
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  received data:
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  List of 5
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ type   : chr "VALUE"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ value  :List of 13
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ value            :List of 3
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "CCC"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "BBBB"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ : chr "AAAAA"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ visible          : logi TRUE
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ stdout           : chr ""
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ conditions       : list()
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ rng              : logi FALSE
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseGlobalEnv  : NULL
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseConnections:List of 3
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ added   : NULL
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ removed : NULL
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ replaced: NULL
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ misuseDevices    : NULL
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..- attr(*, "source")=List of 5
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ pid   : int 65746
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ random: int 2147483647
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ r_info           :List of 4
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. .. ..$ : int [1:3] 4 5 0
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os           : chr "unix"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ os_name      : chr "Linux"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    .. ..$ captures_utf8: logi TRUE
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..$ version          : chr "1.8"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "class")= chr "FutureResult"
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ success: logi TRUE
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:54.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .   $ tag    : NULL
[10:50:54.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Received FutureResult
[10:50:54.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:54.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Removed future from position #1
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of registered futures: 0
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Erased future from future backend
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ...
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result already collected: FutureResult
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result() for ClusterFuture ... done
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  MultisessionFuture #2
[10:50:54.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, FALSE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, FALSE
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relaying element #2
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ...
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ...
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  result already collected: FutureResult
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  result() for ClusterFuture ... done
[10:50:54.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value: <list>
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value(<MultisessionFuture>, ...) ... done
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  until=2
[10:50:54.849] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  length: 0 (resolved future 2)
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #2 ... done
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ...
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ...
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  nx: 2
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relay: TRUE
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  stdout: TRUE
[10:50:54.850] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  signal: TRUE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  resignal: FALSE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  force: TRUE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  relayed: [n=2] TRUE, TRUE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  queued futures: [n=2] TRUE, TRUE
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  signalConditionsASAP(NULL, pos=0) ... done
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ... done
[10:50:54.851] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ... done
[10:50:54.851]  - Number of value chunks collected: 2
[10:50:54.851] Resolving 2 futures (chunks) ... DONE
[10:50:54.852] Reducing values from 2 chunks ...
[10:50:54.852]  - Number of values collected after concatenation: 5
[10:50:54.852]  - Number of values expected: 5
[10:50:54.852] Reverse index remapping (attribute 'ordering'): [n = 5] 5, 4, 3, 2, 1
[10:50:54.852] Reducing values from 2 chunks ... DONE
[10:50:54.852] future_mapply() ... DONE
[10:50:54.852] future_mapply() ...
[10:50:54.852] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.853] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:54.853] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.853] Number of chunks: 2
[10:50:54.853] getGlobalsAndPackagesXApply() ...
[10:50:54.853]  - future.globals: TRUE
[10:50:54.853] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:54.853] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:54.855] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [3] ‘FUN’, ‘paste’, ‘rep.int’
[10:50:54.855] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:54.855] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:54.855] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:54.855] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [1] ‘base’
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [1] ‘base’
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals is 690 bytes (690 bytes)
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals exported for future expression (‘FUN()’) is 690 bytes There is one global: ‘FUN’ (690 bytes of class ‘function’)
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘FUN’
[10:50:54.856] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:54.857] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:54.857]  - globals found/used: [n=1] ‘FUN’
[10:50:54.857]  - needed namespaces: [n=0] 
[10:50:54.857] Finding globals ... DONE
[10:50:54.857] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:54.857] List of 2
[10:50:54.857]  $ ...future.FUN:function (C, k)  
[10:50:54.857]  $ MoreArgs     : list()
[10:50:54.857]  - attr(*, "where")=List of 2
[10:50:54.857]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:54.857]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:54.857]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:54.857]  - attr(*, "resolved")= logi FALSE
[10:50:54.857]  - attr(*, "total_size")= num NA
[10:50:54.860] Packages to be attached in all futures: [n=0] 
[10:50:54.860] getGlobalsAndPackagesXApply() ... DONE
[10:50:54.860] Number of futures (= number of chunks): 2
[10:50:54.860] Launching 2 futures (chunks) ...
[10:50:54.860] Chunk #1 of 2 ...
[10:50:54.860]  - Finding globals in '...' for chunk #1 ...
[10:50:54.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals found: [0] 
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:54.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:54.861]    + additional globals found: [n=0] 
[10:50:54.861]    + additional namespaces needed: [n=0] 
[10:50:54.862]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:54.862]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.862]  - seeds: <none>
[10:50:54.862]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:54.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:54.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:54.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages associated with globals: [0] 
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages: [0] 
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:54.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Launching futures ...
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  launchFuture() for ClusterFutureBackend ...
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Workers: [n=2]
[10:50:54.864] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  requestWorker() ...
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestNode() ...
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Number of workers: 2
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Polling for a free worker ...
[10:50:54.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Listing all futures
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 0
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Total time: 0
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Polling for a free worker ... done
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Listing all futures
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 0
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Index of first available worker: 1
[10:50:54.867] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Validate that the worker is functional ...
[10:50:54.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Worker is functional
[10:50:54.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestNode() ... done
[10:50:54.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:54.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestWorker() ... done
[10:50:54.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  eraseGlobalEnvironment() ...
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  eraseGlobalEnvironment() ... done
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() ...
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureData() ...
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCore() ...
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCore() ... done
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCapture() ...
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureCapture() ... done
[10:50:54.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureContext() ...
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureContext() ... done
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getFutureData() ... done
[10:50:54.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Appended future to position #1
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 1
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() ... done
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  MultisessionFuture started
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ... done
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ... done
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ... done
[10:50:54.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:54.950] Created future:
[10:50:54.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:54.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ...
[10:50:54.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  cluster node index: 1
[10:50:54.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  assertValidConnection() ... done
[10:50:54.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:54.950] MultisessionFuture:
[10:50:54.950] Label: ‘future_.mapply-1’
[10:50:54.950] Expression:
[10:50:54.950] {
[10:50:54.950]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:54.950]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:54.950]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:54.950]         on.exit(options(oopts), add = TRUE)
[10:50:54.950]     }
[10:50:54.950]     {
[10:50:54.950]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:54.950]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:54.950]         do.call(mapply, args = args)
[10:50:54.950]     }
[10:50:54.950] }
[10:50:54.950] Lazy evaluation: FALSE
[10:50:54.950] Asynchronous evaluation: TRUE
[10:50:54.950] Local evaluation: TRUE
[10:50:54.950] Environment: R_GlobalEnv
[10:50:54.950] Capture standard output: TRUE
[10:50:54.950] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:54.950] Immediate condition classes: ‘immediateCondition’
[10:50:54.950] Globals: 5 objects totaling 880 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 105 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:54.950] Packages: <none>
[10:50:54.950] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:54.950] Resolved: FALSE
[10:50:54.950] Value: <not collected>
[10:50:54.950] Conditions captured: <none>
[10:50:54.950] Early signaling: FALSE
[10:50:54.950] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:54.950] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:54.962] Chunk #1 of 2 ... DONE
[10:50:54.962] Chunk #2 of 2 ...
[10:50:54.962]  - Finding globals in '...' for chunk #2 ...
[10:50:54.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ...
[10:50:54.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals found: [0] 
[10:50:54.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Searching for globals ... DONE
[10:50:54.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [0] <none>
[10:50:54.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] <none>
[10:50:54.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.963]    + additional globals found: [n=0] 
[10:50:54.963]    + additional namespaces needed: [n=0] 
[10:50:54.963]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:54.964]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:54.964]  - seeds: <none>
[10:50:54.964]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:54.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Resolving globals: FALSE
[10:50:54.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ...
[10:50:54.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages associated with globals: [0] 
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages: [0] 
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Search for packages associated with the globals ... DONE
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Packages after dropping 'base': [0] 
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  packages: [0] 
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:54.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  state: ‘created’
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  Using MultisessionFutureBackend ...
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Launching futures ...
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  launchFuture() for ClusterFutureBackend ...
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Workers: [n=2]
[10:50:54.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  requestWorker() ...
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestNode() ...
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of workers: 2
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Polling for a free worker ...
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Listing all futures
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Total time: 0
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Polling for a free worker ... done
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Listing all futures
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 1
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Index of first available worker: 2
[10:50:54.969] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Worker is functional
[10:50:55.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestNode() ... done
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 2
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestWorker() ... done
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  launchFuture() ...
[10:50:55.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 2
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureData() ...
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getFutureData() ... done
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Appended future to position #2
[10:50:55.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 2
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  launchFuture() ... done
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  MultisessionFuture started
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ... done
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ... done
[10:50:55.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.052] Created future:
[10:50:55.053] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ...
[10:50:55.053] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ...
[10:50:55.054] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  cluster node index: 2
[10:50:55.054] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  assertValidConnection() ... done
[10:50:55.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  isFutureResolved() ... done
[10:50:55.052] MultisessionFuture:
[10:50:55.052] Label: ‘future_.mapply-2’
[10:50:55.052] Expression:
[10:50:55.052] {
[10:50:55.052]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.052]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.052]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.052]         on.exit(options(oopts), add = TRUE)
[10:50:55.052]     }
[10:50:55.052]     {
[10:50:55.052]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:55.052]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.052]         do.call(mapply, args = args)
[10:50:55.052]     }
[10:50:55.052] }
[10:50:55.052] Lazy evaluation: FALSE
[10:50:55.052] Asynchronous evaluation: TRUE
[10:50:55.052] Local evaluation: TRUE
[10:50:55.052] Environment: R_GlobalEnv
[10:50:55.052] Capture standard output: TRUE
[10:50:55.052] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.052] Immediate condition classes: ‘immediateCondition’
[10:50:55.052] Globals: 5 objects totaling 909 bytes (function ‘...future.FUN’ of 690 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 134 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.052] Packages: <none>
[10:50:55.052] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:55.052] Resolved: FALSE
[10:50:55.052] Value: <not collected>
[10:50:55.052] Conditions captured: <none>
[10:50:55.052] Early signaling: FALSE
[10:50:55.052] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.052] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.065] Chunk #2 of 2 ... DONE
[10:50:55.065] Launching 2 futures (chunks) ... DONE
[10:50:55.065] Resolving 2 futures (chunks) ...
[10:50:55.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ...
[10:50:55.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  recursive: 0
[10:50:55.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  length: 2
[10:50:55.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  
[10:50:55.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Number of remaining objects: 2
[10:50:55.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ...
[10:50:55.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:55.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:55.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ...
[10:50:55.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ... done
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  [1] TRUE
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  received data:
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  List of 5
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ type   : chr "VALUE"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ value  :List of 13
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ value            :List of 2
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "AAAAA"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "BBBB"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ visible          : logi TRUE
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ stdout           : chr ""
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ conditions       : list()
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ rng              : logi FALSE
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ added   : NULL
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ removed : NULL
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ replaced: NULL
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:54"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ pid   : int 65747
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ r_info           :List of 4
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ version          : chr "1.8"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ success: logi TRUE
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ tag    : NULL
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Received FutureResult
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Removed future from position #1
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 1
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Erased future from future backend
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #1
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  nx: 2
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relay: TRUE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  stdout: TRUE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signal: TRUE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resignal: FALSE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  force: TRUE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] FALSE, FALSE
[10:50:55.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] FALSE, FALSE
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  until=1
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relaying element #1
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.087] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value: <list>
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  nx: 2
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relay: TRUE
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  stdout: TRUE
[10:50:55.088] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signal: TRUE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resignal: FALSE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  force: TRUE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  until=2
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relaying element #2
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=1) ... done
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1 (resolved future 1)
[10:50:55.089] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #1 ... done
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ...
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  'obj' is MultisessionFuture
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ...
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 2
[10:50:55.090] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ... done
[10:50:55.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 2
[10:50:55.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  [1] TRUE
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  received data:
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  List of 5
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ type   : chr "VALUE"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ value  :List of 13
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ value            :List of 3
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "CCC"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "DD"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ : chr "E"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ visible          : logi TRUE
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ stdout           : chr ""
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ conditions       : list()
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ rng              : logi FALSE
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ added   : NULL
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ removed : NULL
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ replaced: NULL
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ pid   : int 65746
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ r_info           :List of 4
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..$ version          : chr "1.8"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ success: logi TRUE
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.098] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA   $ tag    : NULL
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Received FutureResult
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Removed future from position #1
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of registered futures: 0
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Erased future from future backend
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  MultisessionFuture #2
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  nx: 2
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relay: TRUE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  stdout: TRUE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signal: TRUE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resignal: FALSE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  force: TRUE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  until=2
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relaying element #2
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ...
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ...
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result already collected: FutureResult
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  result() for ClusterFuture ... done
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value: <list>
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value(<MultisessionFuture>, ...) ... done
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  nx: 2
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relay: TRUE
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  stdout: TRUE
[10:50:55.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signal: TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resignal: FALSE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  force: TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  until=2
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 0 (resolved future 2)
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  checking value #2 ... done
[10:50:55.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ...
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ...
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  nx: 2
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relay: TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  stdout: TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signal: TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  resignal: FALSE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  force: TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  signalConditionsASAP(NULL, pos=0) ... done
[10:50:55.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Relaying remaining futures ... done
[10:50:55.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  value() on list ... done
[10:50:55.116]  - Number of value chunks collected: 2
[10:50:55.116] Resolving 2 futures (chunks) ... DONE
[10:50:55.116] Reducing values from 2 chunks ...
[10:50:55.116]  - Number of values collected after concatenation: 5
[10:50:55.116]  - Number of values expected: 5
[10:50:55.116] Reducing values from 2 chunks ... DONE
[10:50:55.116] future_mapply() ... DONE
- Subsetting (Issue #17) ...
[10:50:55.117] future_mapply() ...
[10:50:55.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:55.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.117] Number of chunks: 1
[10:50:55.117] getGlobalsAndPackagesXApply() ...
[10:50:55.117]  - future.globals: TRUE
[10:50:55.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:55.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [1] ‘FUN’
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:50:55.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [1] ‘FUN’
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:55.120] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:55.121]  - globals found/used: [n=1] ‘FUN’
[10:50:55.121]  - needed namespaces: [n=0] 
[10:50:55.121] Finding globals ... DONE
[10:50:55.121] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:55.121] List of 2
[10:50:55.121]  $ ...future.FUN:function (x)  
[10:50:55.121]  $ MoreArgs     : NULL
[10:50:55.121]  - attr(*, "where")=List of 2
[10:50:55.121]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:55.121]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:55.121]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:55.121]  - attr(*, "resolved")= logi FALSE
[10:50:55.121]  - attr(*, "total_size")= num NA
[10:50:55.124] Packages to be attached in all futures: [n=0] 
[10:50:55.124] getGlobalsAndPackagesXApply() ... DONE
[10:50:55.124] Number of futures (= number of chunks): 1
[10:50:55.124] Launching 1 futures (chunks) ...
[10:50:55.124] Chunk #1 of 1 ...
[10:50:55.124]  - Finding globals in '...' for chunk #1 ...
[10:50:55.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:55.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ...
[10:50:55.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals found: [0] 
[10:50:55.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Searching for globals ... DONE
[10:50:55.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [0] <none>
[10:50:55.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] <none>
[10:50:55.125] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:55.125]    + additional globals found: [n=0] 
[10:50:55.125]    + additional namespaces needed: [n=0] 
[10:50:55.125]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:55.125]  - seeds: <none>
[10:50:55.126]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ...
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Resolving globals: FALSE
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ...
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages associated with globals: [1] ‘base’
[10:50:55.126] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages: [1] ‘base’
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Search for packages associated with the globals ... DONE
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Packages after dropping 'base': [0] 
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  packages: [0] 
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  getGlobalsAndPackages() ... done
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  run() for Future (‘Future’) ...
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  state: ‘created’
[10:50:55.127] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  Using MultisessionFutureBackend ...
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Launching futures ...
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Workers: [n=2]
[10:50:55.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  requestWorker() ...
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestNode() ...
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of workers: 2
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Index of first available worker: 1
[10:50:55.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.210] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestNode() ... done
[10:50:55.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:50:55.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestWorker() ... done
[10:50:55.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.211] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() ...
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureData() ...
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.212] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:55.213] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() ... done
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  MultisessionFuture started
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Launching futures ... done
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ... done
[10:50:55.214] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.214] Created future:
[10:50:55.215] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ...
[10:50:55.215] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ...
[10:50:55.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  cluster node index: 1
[10:50:55.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  assertValidConnection() ... done
[10:50:55.226] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  isFutureResolved() ... done
[10:50:55.215] MultisessionFuture:
[10:50:55.215] Label: ‘future_mapply-1’
[10:50:55.215] Expression:
[10:50:55.215] {
[10:50:55.215]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.215]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.215]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.215]         on.exit(options(oopts), add = TRUE)
[10:50:55.215]     }
[10:50:55.215]     {
[10:50:55.215]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:55.215]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.215]         do.call(mapply, args = args)
[10:50:55.215]     }
[10:50:55.215] }
[10:50:55.215] Lazy evaluation: FALSE
[10:50:55.215] Asynchronous evaluation: TRUE
[10:50:55.215] Local evaluation: TRUE
[10:50:55.215] Environment: R_GlobalEnv
[10:50:55.215] Capture standard output: TRUE
[10:50:55.215] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.215] Immediate condition classes: ‘immediateCondition’
[10:50:55.215] Globals: 5 objects totaling 366 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.215] Packages: <none>
[10:50:55.215] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:55.215] Resolved: FALSE
[10:50:55.215] Value: <not collected>
[10:50:55.215] Conditions captured: <none>
[10:50:55.215] Early signaling: FALSE
[10:50:55.215] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.215] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.227] Chunk #1 of 1 ... DONE
[10:50:55.227] Launching 1 futures (chunks) ... DONE
[10:50:55.227] Resolving 1 futures (chunks) ...
[10:50:55.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ...
[10:50:55.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  recursive: 0
[10:50:55.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  length: 1
[10:50:55.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  
[10:50:55.227] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of remaining objects: 1
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ...
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  'obj' is MultisessionFuture
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:50:55.228] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:50:55.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:50:55.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ... done
[10:50:55.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Number of remaining objects: 1
[10:50:55.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ...
[10:50:55.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  'obj' is MultisessionFuture
[10:50:55.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:50:55.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:50:55.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:50:55.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:50:55.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  [1] TRUE
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  received data:
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  List of 5
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ value  :List of 13
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ value            :List of 1
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ conditions       : list()
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ success: logi TRUE
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA   $ tag    : NULL
[10:50:55.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Received FutureResult
[10:50:55.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Removed future from position #1
[10:50:55.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.271] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Erased future from future backend
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:50:55.272] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  MultisessionFuture #1
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  nx: 1
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relay: TRUE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  stdout: TRUE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signal: TRUE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  resignal: FALSE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  force: TRUE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] FALSE
[10:50:55.273] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] FALSE
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  until=1
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relaying element #1
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.274] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] TRUE
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] TRUE
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value(<MultisessionFuture>, ...) ...
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.275] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ...
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result already collected: FutureResult
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  result() for ClusterFuture ... done
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  value: <list>
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  value(<MultisessionFuture>, ...) ... done
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  nx: 1
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relay: TRUE
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  stdout: TRUE
[10:50:55.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signal: TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  resignal: FALSE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  force: TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  until=1
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] TRUE
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  length: 0 (resolved future 1)
[10:50:55.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  checking value #1 ... done
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ...
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  nx: 1
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relay: TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  stdout: TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signal: TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  resignal: FALSE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  force: TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] TRUE
 - flush all
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  relayed: [n=1] TRUE
[10:50:55.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  queued futures: [n=1] TRUE
[10:50:55.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:55.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Relaying remaining futures ... done
[10:50:55.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  value() on list ... done
[10:50:55.279]  - Number of value chunks collected: 1
[10:50:55.279] Resolving 1 futures (chunks) ... DONE
[10:50:55.279] Reducing values from 1 chunks ...
[10:50:55.279]  - Number of values collected after concatenation: 1
[10:50:55.279]  - Number of values expected: 1
[10:50:55.279] Reducing values from 1 chunks ... DONE
[10:50:55.279] future_mapply() ... DONE
[10:50:55.280] future_mapply() ...
[10:50:55.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:55.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.280] Number of chunks: 1
[10:50:55.280] getGlobalsAndPackagesXApply() ...
[10:50:55.280]  - future.globals: TRUE
[10:50:55.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:55.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals found: [1] ‘FUN’
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages associated with globals: [1] ‘base’
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages: [1] ‘base’
[10:50:55.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [1] ‘FUN’
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:55.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:55.283]  - globals found/used: [n=1] ‘FUN’
[10:50:55.284]  - needed namespaces: [n=0] 
[10:50:55.284] Finding globals ... DONE
[10:50:55.284] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:55.284] List of 2
[10:50:55.284]  $ ...future.FUN:function (x)  
[10:50:55.284]  $ MoreArgs     : list()
[10:50:55.284]  - attr(*, "where")=List of 2
[10:50:55.284]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:55.284]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:55.284]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:55.284]  - attr(*, "resolved")= logi FALSE
[10:50:55.284]  - attr(*, "total_size")= num NA
[10:50:55.286] Packages to be attached in all futures: [n=0] 
[10:50:55.287] getGlobalsAndPackagesXApply() ... DONE
[10:50:55.287] Number of futures (= number of chunks): 1
[10:50:55.287] Launching 1 futures (chunks) ...
[10:50:55.287] Chunk #1 of 1 ...
[10:50:55.287]  - Finding globals in '...' for chunk #1 ...
[10:50:55.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:55.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ...
[10:50:55.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals found: [0] 
[10:50:55.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Searching for globals ... DONE
[10:50:55.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [0] <none>
[10:50:55.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] <none>
[10:50:55.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:55.288]    + additional globals found: [n=0] 
[10:50:55.288]    + additional namespaces needed: [n=0] 
[10:50:55.288]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:55.288]  - seeds: <none>
[10:50:55.288]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ...
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Resolving globals: FALSE
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ...
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages associated with globals: [1] ‘base’
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages: [1] ‘base’
[10:50:55.289] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Search for packages associated with the globals ... DONE
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Packages after dropping 'base': [0] 
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  packages: [0] 
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  getGlobalsAndPackages() ... done
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  run() for Future (‘Future’) ...
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  state: ‘created’
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.290] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  Using MultisessionFutureBackend ...
[10:50:55.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Launching futures ...
[10:50:55.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Workers: [n=2]
[10:50:55.291] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  requestWorker() ...
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestNode() ...
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:55.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.377] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:55.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestWorker() ... done
[10:50:55.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() ...
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() ... done
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  MultisessionFuture started
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Launching futures ... done
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Using MultisessionFutureBackend ... done
[10:50:55.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.382] Created future:
[10:50:55.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ...
[10:50:55.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ...
[10:50:55.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  cluster node index: 1
[10:50:55.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  assertValidConnection() ... done
[10:50:55.393] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  isFutureResolved() ... done
[10:50:55.382] MultisessionFuture:
[10:50:55.382] Label: ‘future_.mapply-1’
[10:50:55.382] Expression:
[10:50:55.382] {
[10:50:55.382]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.382]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.382]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.382]         on.exit(options(oopts), add = TRUE)
[10:50:55.382]     }
[10:50:55.382]     {
[10:50:55.382]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:55.382]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.382]         do.call(mapply, args = args)
[10:50:55.382]     }
[10:50:55.382] }
[10:50:55.382] Lazy evaluation: FALSE
[10:50:55.382] Asynchronous evaluation: TRUE
[10:50:55.382] Local evaluation: TRUE
[10:50:55.382] Environment: R_GlobalEnv
[10:50:55.382] Capture standard output: TRUE
[10:50:55.382] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.382] Immediate condition classes: ‘immediateCondition’
[10:50:55.382] Globals: 5 objects totaling 370 bytes (function ‘...future.FUN’ of 185 bytes, list ‘MoreArgs’ of 31 bytes, list ‘...future.elements_ii’ of 100 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.382] Packages: <none>
[10:50:55.382] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:55.382] Resolved: FALSE
[10:50:55.382] Value: <not collected>
[10:50:55.382] Conditions captured: <none>
[10:50:55.382] Early signaling: FALSE
[10:50:55.382] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.382] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.394] Chunk #1 of 1 ... DONE
[10:50:55.394] Launching 1 futures (chunks) ... DONE
[10:50:55.394] Resolving 1 futures (chunks) ...
[10:50:55.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value() on list ...
[10:50:55.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  recursive: 0
[10:50:55.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  length: 1
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of remaining objects: 1
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  checking value #1 ...
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  'obj' is MultisessionFuture
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ...
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ...
[10:50:55.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:50:55.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ... done
[10:50:55.406] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ... done
[10:50:55.406] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  checking value #1 ... done
[10:50:55.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Number of remaining objects: 1
[10:50:55.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  checking value #1 ...
[10:50:55.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  'obj' is MultisessionFuture
[10:50:55.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ...
[10:50:55.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ...
[10:50:55.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:50:55.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ... done
[10:50:55.424] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 1
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  [1] TRUE
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  received data:
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  List of 5
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ value  :List of 13
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ : Date[1:1], format: "2018-06-01"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ success: logi TRUE
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.425] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA   $ tag    : NULL
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Received FutureResult
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Erased future from future backend
[10:50:55.436] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ... done
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  MultisessionFuture #1
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  nx: 1
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relay: TRUE
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  stdout: TRUE
[10:50:55.437] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  signal: TRUE
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resignal: FALSE
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  force: TRUE
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] FALSE
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] FALSE
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  until=1
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relaying element #1
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.438] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] TRUE
[10:50:55.439] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] TRUE
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  value: <list>
[10:50:55.440] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  nx: 1
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relay: TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  stdout: TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  signal: TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resignal: FALSE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  force: TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] TRUE
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  until=1
[10:50:55.441] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] TRUE
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] TRUE
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  length: 0 (resolved future 1)
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  checking value #1 ... done
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Relaying remaining futures ...
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  nx: 1
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relay: TRUE
[10:50:55.442] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  stdout: TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  signal: TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  resignal: FALSE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  force: TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] TRUE
 - flush all
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  relayed: [n=1] TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  queued futures: [n=1] TRUE
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Relaying remaining futures ... done
[10:50:55.443] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  value() on list ... done
[10:50:55.444]  - Number of value chunks collected: 1
[10:50:55.444] Resolving 1 futures (chunks) ... DONE
[10:50:55.444] Reducing values from 1 chunks ...
[10:50:55.444]  - Number of values collected after concatenation: 1
[10:50:55.444]  - Number of values expected: 1
[10:50:55.444] Reducing values from 1 chunks ... DONE
[10:50:55.444] future_mapply() ... DONE
- Non-recycling of MoreArgs (Issue #51) ...
[10:50:55.444] future_mapply() ...
[10:50:55.444] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:55.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.445] Number of chunks: 2
[10:50:55.445] getGlobalsAndPackagesXApply() ...
[10:50:55.445]  - future.globals: TRUE
[10:50:55.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:55.445] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Searching for globals ...
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals found: [1] ‘FUN’
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Searching for globals ... DONE
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Resolving globals: FALSE
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Search for packages associated with the globals ...
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages associated with globals: [0] 
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages: [0] 
[10:50:55.447] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Search for packages associated with the globals ... DONE
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages after dropping 'base': [0] 
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals: [1] ‘FUN’
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  packages: [0] 
[10:50:55.448] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:55.449]  - globals found/used: [n=1] ‘FUN’
[10:50:55.449]  - needed namespaces: [n=0] 
[10:50:55.449] Finding globals ... DONE
[10:50:55.449] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:55.449] List of 2
[10:50:55.449]  $ ...future.FUN:function (x, y)  
[10:50:55.449]  $ MoreArgs     :List of 1
[10:50:55.449]   ..$ y: int [1:2] 3 4
[10:50:55.449]  - attr(*, "where")=List of 2
[10:50:55.449]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:55.449]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:55.449]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:55.449]  - attr(*, "resolved")= logi FALSE
[10:50:55.449]  - attr(*, "total_size")= num NA
[10:50:55.452] Packages to be attached in all futures: [n=0] 
[10:50:55.452] getGlobalsAndPackagesXApply() ... DONE
[10:50:55.452] Number of futures (= number of chunks): 2
[10:50:55.453] Launching 2 futures (chunks) ...
[10:50:55.453] Chunk #1 of 2 ...
[10:50:55.453]  - Finding globals in '...' for chunk #1 ...
[10:50:55.453] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:55.453] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Searching for globals ...
[10:50:55.453] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals found: [0] 
[10:50:55.453] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Searching for globals ... DONE
[10:50:55.453] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals: [0] <none>
[10:50:55.454] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  packages: [0] <none>
[10:50:55.454] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:55.454]    + additional globals found: [n=0] 
[10:50:55.454]    + additional namespaces needed: [n=0] 
[10:50:55.454]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:55.454]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:55.454]  - seeds: <none>
[10:50:55.454]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.454] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ...
[10:50:55.454] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Resolving globals: FALSE
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Search for packages associated with the globals ...
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages associated with globals: [0] 
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages: [0] 
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Search for packages associated with the globals ... DONE
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Packages after dropping 'base': [0] 
[10:50:55.455] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  packages: [0] 
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  getGlobalsAndPackages() ... done
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  run() for Future (‘Future’) ...
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  state: ‘created’
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.456] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  Using MultisessionFutureBackend ...
[10:50:55.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Launching futures ...
[10:50:55.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Workers: [n=2]
[10:50:55.457] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.458] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  requestWorker() ...
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestNode() ...
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.459] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:55.460] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.558] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:55.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:55.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Launching futures ... done
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Using MultisessionFutureBackend ... done
[10:50:55.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.563] Created future:
[10:50:55.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ...
[10:50:55.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ...
[10:50:55.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  cluster node index: 1
[10:50:55.564] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  assertValidConnection() ... done
[10:50:55.574] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  isFutureResolved() ... done
[10:50:55.563] MultisessionFuture:
[10:50:55.563] Label: ‘future_mapply-1’
[10:50:55.563] Expression:
[10:50:55.563] {
[10:50:55.563]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.563]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.563]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.563]         on.exit(options(oopts), add = TRUE)
[10:50:55.563]     }
[10:50:55.563]     {
[10:50:55.563]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:55.563]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.563]         do.call(mapply, args = args)
[10:50:55.563]     }
[10:50:55.563] }
[10:50:55.563] Lazy evaluation: FALSE
[10:50:55.563] Asynchronous evaluation: TRUE
[10:50:55.563] Local evaluation: TRUE
[10:50:55.563] Environment: R_GlobalEnv
[10:50:55.563] Capture standard output: TRUE
[10:50:55.563] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.563] Immediate condition classes: ‘immediateCondition’
[10:50:55.563] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.563] Packages: <none>
[10:50:55.563] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:55.563] Resolved: FALSE
[10:50:55.563] Value: <not collected>
[10:50:55.563] Conditions captured: <none>
[10:50:55.563] Early signaling: FALSE
[10:50:55.563] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.563] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.575] Chunk #1 of 2 ... DONE
[10:50:55.575] Chunk #2 of 2 ...
[10:50:55.575]  - Finding globals in '...' for chunk #2 ...
[10:50:55.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ...
[10:50:55.575] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Searching for globals ...
[10:50:55.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals found: [0] 
[10:50:55.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Searching for globals ... DONE
[10:50:55.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals: [0] <none>
[10:50:55.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  packages: [0] <none>
[10:50:55.576] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ... done
[10:50:55.576]    + additional globals found: [n=0] 
[10:50:55.576]    + additional namespaces needed: [n=0] 
[10:50:55.576]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:55.576]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:55.577]  - seeds: <none>
[10:50:55.577]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ...
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Resolving globals: FALSE
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Search for packages associated with the globals ...
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages associated with globals: [0] 
[10:50:55.577] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages: [0] 
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Search for packages associated with the globals ... DONE
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Packages after dropping 'base': [0] 
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  packages: [0] 
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  getGlobalsAndPackages() ... done
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  run() for Future (‘Future’) ...
[10:50:55.578] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  state: ‘created’
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  Using MultisessionFutureBackend ...
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Launching futures ...
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:55.579] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.581] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:55.582] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:55.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:55.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:55.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Launching futures ... done
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:55.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.669] Created future:
[10:50:55.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ...
[10:50:55.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ...
[10:50:55.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  cluster node index: 2
[10:50:55.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  assertValidConnection() ... done
[10:50:55.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  isFutureResolved() ... done
[10:50:55.669] MultisessionFuture:
[10:50:55.669] Label: ‘future_mapply-2’
[10:50:55.669] Expression:
[10:50:55.669] {
[10:50:55.669]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.669]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.669]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.669]         on.exit(options(oopts), add = TRUE)
[10:50:55.669]     }
[10:50:55.669]     {
[10:50:55.669]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:55.669]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.669]         do.call(mapply, args = args)
[10:50:55.669]     }
[10:50:55.669] }
[10:50:55.669] Lazy evaluation: FALSE
[10:50:55.669] Asynchronous evaluation: TRUE
[10:50:55.669] Local evaluation: TRUE
[10:50:55.669] Environment: R_GlobalEnv
[10:50:55.669] Capture standard output: TRUE
[10:50:55.669] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.669] Immediate condition classes: ‘immediateCondition’
[10:50:55.669] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.669] Packages: <none>
[10:50:55.669] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:55.669] Resolved: FALSE
[10:50:55.669] Value: <not collected>
[10:50:55.669] Conditions captured: <none>
[10:50:55.669] Early signaling: FALSE
[10:50:55.669] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.669] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.682] Chunk #2 of 2 ... DONE
[10:50:55.682] Launching 2 futures (chunks) ... DONE
[10:50:55.682] Resolving 2 futures (chunks) ...
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  value() on list ...
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  recursive: 0
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  length: 2
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of remaining objects: 2
[10:50:55.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #1 ...
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.683] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  received data:
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  List of 5
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.684] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:55.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:55.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:55.695] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  MultisessionFuture #1
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  nx: 2
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  until=1
[10:50:55.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relaying element #1
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  value: <list>
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  nx: 2
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  until=2
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relaying element #2
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #1 ... done
[10:50:55.700] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #2 ...
[10:50:55.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:55.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.712] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:55.712] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #2 ... done
[10:50:55.722] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Number of remaining objects: 1
[10:50:55.722] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #2 ...
[10:50:55.722] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:55.722] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.723] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  received data:
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  List of 5
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.724] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:55.734] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:55.734] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.734] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:55.734] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.734] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  MultisessionFuture #2
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  nx: 2
[10:50:55.735] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  until=2
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relaying element #2
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.736] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.737] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.738] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  value: <list>
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  nx: 2
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.739] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  until=2
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  checking value #2 ... done
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Relaying remaining futures ...
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  nx: 2
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.740] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Relaying remaining futures ... done
[10:50:55.741] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  value() on list ... done
[10:50:55.742]  - Number of value chunks collected: 2
[10:50:55.742] Resolving 2 futures (chunks) ... DONE
[10:50:55.742] Reducing values from 2 chunks ...
[10:50:55.742]  - Number of values collected after concatenation: 2
[10:50:55.742]  - Number of values expected: 2
[10:50:55.742] Reducing values from 2 chunks ... DONE
[10:50:55.742] future_mapply() ... DONE
[10:50:55.742] future_mapply() ...
[10:50:55.742] Generating random seeds ...
[10:50:55.742] Generating random seed streams for 2 elements ...
[10:50:55.743] Generating random seed streams for 2 elements ... DONE
[10:50:55.743] Generating random seeds ... DONE
[10:50:55.743] Will set RNG state on exit: 10407, 70526889, -409689279, -1703692929, 1495322199, 919477592, -2102341090
[10:50:55.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:55.743] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.743] Number of chunks: 2
[10:50:55.744] getGlobalsAndPackagesXApply() ...
[10:50:55.744]  - future.globals: TRUE
[10:50:55.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ...
[10:50:55.744] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ...
[10:50:55.747] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals found: [1] ‘FUN’
[10:50:55.747] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ... DONE
[10:50:55.747] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Resolving globals: FALSE
[10:50:55.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ...
[10:50:55.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:55.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages: [0] 
[10:50:55.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:55.748] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:55.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:55.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:55.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [1] ‘FUN’
[10:50:55.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  packages: [0] 
[10:50:55.749] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ... done
[10:50:55.749]  - globals found/used: [n=1] ‘FUN’
[10:50:55.749]  - needed namespaces: [n=0] 
[10:50:55.750] Finding globals ... DONE
[10:50:55.750] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:55.750] List of 2
[10:50:55.750]  $ ...future.FUN:function (x, y)  
[10:50:55.750]  $ MoreArgs     :List of 1
[10:50:55.750]   ..$ y: int [1:2] 3 4
[10:50:55.750]  - attr(*, "where")=List of 2
[10:50:55.750]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:55.750]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:55.750]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:55.750]  - attr(*, "resolved")= logi FALSE
[10:50:55.750]  - attr(*, "total_size")= num NA
[10:50:55.753] Packages to be attached in all futures: [n=0] 
[10:50:55.753] getGlobalsAndPackagesXApply() ... DONE
[10:50:55.753] Number of futures (= number of chunks): 2
[10:50:55.753] Launching 2 futures (chunks) ...
[10:50:55.753] Chunk #1 of 2 ...
[10:50:55.753]  - Finding globals in '...' for chunk #1 ...
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ...
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ...
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals found: [0] 
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Searching for globals ... DONE
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [0] <none>
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  packages: [0] <none>
[10:50:55.754] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ... done
[10:50:55.754]    + additional globals found: [n=0] 
[10:50:55.755]    + additional namespaces needed: [n=0] 
[10:50:55.755]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:55.755]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:55.755]  - seeds: [1] <seeds>
[10:50:55.755]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.755] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ...
[10:50:55.755] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.755] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Resolving globals: FALSE
[10:50:55.755] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ...
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages: [0] 
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  packages: [0] 
[10:50:55.756] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  getGlobalsAndPackages() ... done
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  run() for Future (‘Future’) ...
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  state: ‘created’
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Launching futures ...
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:55.757] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.759] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:55.760] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:55.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:55.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:55.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.846] Created future:
[10:50:55.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ...
[10:50:55.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.858] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  isFutureResolved() ... done
[10:50:55.846] MultisessionFuture:
[10:50:55.846] Label: ‘future_mapply-1’
[10:50:55.846] Expression:
[10:50:55.846] {
[10:50:55.846]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.846]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.846]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.846]         on.exit(options(oopts), add = TRUE)
[10:50:55.846]     }
[10:50:55.846]     {
[10:50:55.846]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:55.846]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:55.846]                 inherits = FALSE)
[10:50:55.846]             ...future.FUN(...)
[10:50:55.846]         }
[10:50:55.846]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:55.846]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:55.846]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.846]         do.call(mapply, args = args)
[10:50:55.846]     }
[10:50:55.846] }
[10:50:55.846] Lazy evaluation: FALSE
[10:50:55.846] Asynchronous evaluation: TRUE
[10:50:55.846] Local evaluation: TRUE
[10:50:55.846] Environment: R_GlobalEnv
[10:50:55.846] Capture standard output: TRUE
[10:50:55.846] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.846] Immediate condition classes: ‘immediateCondition’
[10:50:55.846] Globals: 5 objects totaling 696 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, list ‘...future.seeds_ii’ of 67 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.846] Packages: <none>
[10:50:55.846] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:55.846] Resolved: FALSE
[10:50:55.846] Value: <not collected>
[10:50:55.846] Conditions captured: <none>
[10:50:55.846] Early signaling: FALSE
[10:50:55.846] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.846] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.859] Chunk #1 of 2 ... DONE
[10:50:55.859] Chunk #2 of 2 ...
[10:50:55.859]  - Finding globals in '...' for chunk #2 ...
[10:50:55.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:55.859] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Searching for globals ...
[10:50:55.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:55.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:55.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals: [0] <none>
[10:50:55.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  packages: [0] <none>
[10:50:55.860] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:55.860]    + additional globals found: [n=0] 
[10:50:55.860]    + additional namespaces needed: [n=0] 
[10:50:55.860]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:55.860]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:55.860]  - seeds: [1] <seeds>
[10:50:55.861]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:55.861] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  packages: [0] 
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  state: ‘created’
[10:50:55.862] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Launching futures ...
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:55.863] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.865] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:55.866] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:55.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:55.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:55.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:55.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:55.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:55.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:55.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:55.950] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:55.951] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:55.951] Created future:
[10:50:55.952] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.952] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.952] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.953] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:55.951] MultisessionFuture:
[10:50:55.951] Label: ‘future_mapply-2’
[10:50:55.951] Expression:
[10:50:55.951] {
[10:50:55.951]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:55.951]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:55.951]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:55.951]         on.exit(options(oopts), add = TRUE)
[10:50:55.951]     }
[10:50:55.951]     {
[10:50:55.951]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:55.951]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:55.951]                 inherits = FALSE)
[10:50:55.951]             ...future.FUN(...)
[10:50:55.951]         }
[10:50:55.951]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:55.951]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:55.951]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:55.951]         do.call(mapply, args = args)
[10:50:55.951]     }
[10:50:55.951] }
[10:50:55.951] Lazy evaluation: FALSE
[10:50:55.951] Asynchronous evaluation: TRUE
[10:50:55.951] Local evaluation: TRUE
[10:50:55.951] Environment: R_GlobalEnv
[10:50:55.951] Capture standard output: TRUE
[10:50:55.951] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:55.951] Immediate condition classes: ‘immediateCondition’
[10:50:55.951] Globals: 5 objects totaling 696 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, list ‘...future.seeds_ii’ of 67 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:55.951] Packages: <none>
[10:50:55.951] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:55.951] Resolved: FALSE
[10:50:55.951] Value: <not collected>
[10:50:55.951] Conditions captured: <none>
[10:50:55.951] Early signaling: FALSE
[10:50:55.951] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:55.951] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:55.963] Chunk #2 of 2 ... DONE
[10:50:55.963] Launching 2 futures (chunks) ... DONE
[10:50:55.964] Resolving 2 futures (chunks) ...
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value() on list ...
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  recursive: 0
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  length: 2
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:55.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi TRUE
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.002 0 0.003 0 0
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:55.976] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:55.976] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:55.977] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:55.978] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.979] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.980] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:55.981] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:55.982] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:55.983] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.984] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi TRUE
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:55"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:55.994] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.008] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.009] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.010] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.011] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.012] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.013] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.014] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:56.015] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  value() on list ... done
[10:50:56.015]  - Number of value chunks collected: 2
[10:50:56.016] Resolving 2 futures (chunks) ... DONE
[10:50:56.016] Reducing values from 2 chunks ...
[10:50:56.016]  - Number of values collected after concatenation: 2
[10:50:56.016]  - Number of values expected: 2
[10:50:56.016] Reducing values from 2 chunks ... DONE
[10:50:56.016] future_mapply() ... DONE
[10:50:56.016] future_mapply() ...
[10:50:56.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.016] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:56.017] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.017] Number of chunks: 2
[10:50:56.017] getGlobalsAndPackagesXApply() ...
[10:50:56.017]  - future.globals: TRUE
[10:50:56.017] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.017] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.018] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals found: [1] ‘FUN’
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.019] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  The total size of the 1 globals is 326 bytes (326 bytes)
[10:50:56.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN(y = 3:4)’) is 326 bytes There is one global: ‘FUN’ (326 bytes of class ‘function’)
[10:50:56.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:56.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.020] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.020]  - globals found/used: [n=1] ‘FUN’
[10:50:56.020]  - needed namespaces: [n=0] 
[10:50:56.021] Finding globals ... DONE
[10:50:56.021] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:56.021] List of 2
[10:50:56.021]  $ ...future.FUN:function (x, y)  
[10:50:56.021]  $ MoreArgs     :List of 1
[10:50:56.021]   ..$ y: int [1:2] 3 4
[10:50:56.021]  - attr(*, "where")=List of 2
[10:50:56.021]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:56.021]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:56.021]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:56.021]  - attr(*, "resolved")= logi FALSE
[10:50:56.021]  - attr(*, "total_size")= num NA
[10:50:56.024] Packages to be attached in all futures: [n=0] 
[10:50:56.024] getGlobalsAndPackagesXApply() ... DONE
[10:50:56.024] Number of futures (= number of chunks): 2
[10:50:56.024] Launching 2 futures (chunks) ...
[10:50:56.024] Chunk #1 of 2 ...
[10:50:56.024]  - Finding globals in '...' for chunk #1 ...
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.025] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.025]    + additional globals found: [n=0] 
[10:50:56.026]    + additional namespaces needed: [n=0] 
[10:50:56.026]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:56.026]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.026]  - seeds: <none>
[10:50:56.026]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.026] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.027] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.028] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.030] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.031] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:56.032] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.116] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.117] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.117] Created future:
[10:50:56.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.117] MultisessionFuture:
[10:50:56.117] Label: ‘future_.mapply-1’
[10:50:56.117] Expression:
[10:50:56.117] {
[10:50:56.117]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.117]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.117]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.117]         on.exit(options(oopts), add = TRUE)
[10:50:56.117]     }
[10:50:56.117]     {
[10:50:56.117]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:56.117]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.117]         do.call(mapply, args = args)
[10:50:56.117]     }
[10:50:56.117] }
[10:50:56.117] Lazy evaluation: FALSE
[10:50:56.117] Asynchronous evaluation: TRUE
[10:50:56.117] Local evaluation: TRUE
[10:50:56.117] Environment: R_GlobalEnv
[10:50:56.117] Capture standard output: TRUE
[10:50:56.117] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.117] Immediate condition classes: ‘immediateCondition’
[10:50:56.117] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.117] Packages: <none>
[10:50:56.117] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:56.117] Resolved: FALSE
[10:50:56.117] Value: <not collected>
[10:50:56.117] Conditions captured: <none>
[10:50:56.117] Early signaling: FALSE
[10:50:56.117] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.117] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.129] Chunk #1 of 2 ... DONE
[10:50:56.129] Chunk #2 of 2 ...
[10:50:56.129]  - Finding globals in '...' for chunk #2 ...
[10:50:56.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.131]    + additional globals found: [n=0] 
[10:50:56.131]    + additional namespaces needed: [n=0] 
[10:50:56.131]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:56.131]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.131]  - seeds: <none>
[10:50:56.131]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.133] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.136] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.137] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.137] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.137] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:56.137] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.222] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.223] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.223] Created future:
[10:50:56.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.224] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.223] MultisessionFuture:
[10:50:56.223] Label: ‘future_.mapply-2’
[10:50:56.223] Expression:
[10:50:56.223] {
[10:50:56.223]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.223]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.223]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.223]         on.exit(options(oopts), add = TRUE)
[10:50:56.223]     }
[10:50:56.223]     {
[10:50:56.223]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:56.223]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.223]         do.call(mapply, args = args)
[10:50:56.223]     }
[10:50:56.223] }
[10:50:56.223] Lazy evaluation: FALSE
[10:50:56.223] Asynchronous evaluation: TRUE
[10:50:56.223] Local evaluation: TRUE
[10:50:56.223] Environment: R_GlobalEnv
[10:50:56.223] Capture standard output: TRUE
[10:50:56.223] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.223] Immediate condition classes: ‘immediateCondition’
[10:50:56.223] Globals: 5 objects totaling 656 bytes (function ‘...future.FUN’ of 326 bytes, list ‘MoreArgs’ of 183 bytes, list ‘...future.elements_ii’ of 93 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.223] Packages: <none>
[10:50:56.223] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:56.223] Resolved: FALSE
[10:50:56.223] Value: <not collected>
[10:50:56.223] Conditions captured: <none>
[10:50:56.223] Early signaling: FALSE
[10:50:56.223] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.223] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.235] Chunk #2 of 2 ... DONE
[10:50:56.235] Launching 2 futures (chunks) ... DONE
[10:50:56.235] Resolving 2 futures (chunks) ...
[10:50:56.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:56.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.237] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.248] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:56.249] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:56.250] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.251] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.252] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.253] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.253] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.253] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.253] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.253] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.255] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.256] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.257] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.258] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.265] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 4
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.266] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.276] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.277] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.278] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.279] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.280] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.281] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:56.282] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.283] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:56.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:56.284] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:56.284]  - Number of value chunks collected: 2
[10:50:56.284] Resolving 2 futures (chunks) ... DONE
[10:50:56.284] Reducing values from 2 chunks ...
[10:50:56.284]  - Number of values collected after concatenation: 2
[10:50:56.284]  - Number of values expected: 2
[10:50:56.284] Reducing values from 2 chunks ... DONE
[10:50:56.284] future_mapply() ... DONE
- Recycle arguments to same length ...
[10:50:56.284] future_mapply() ...
[10:50:56.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:56.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.285] Number of chunks: 2
[10:50:56.285] getGlobalsAndPackagesXApply() ...
[10:50:56.285]  - future.globals: TRUE
[10:50:56.285] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [1] ‘FUN’
[10:50:56.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.286] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals is 34 bytes (34 bytes)
[10:50:56.287] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN()’) is 34 bytes There is one global: ‘FUN’ (34 bytes of class ‘function’)
[10:50:56.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:56.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.288] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.288]  - globals found/used: [n=1] ‘FUN’
[10:50:56.288]  - needed namespaces: [n=0] 
[10:50:56.288] Finding globals ... DONE
[10:50:56.288] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:56.289] List of 2
[10:50:56.289]  $ ...future.FUN:function (x, ...)  
[10:50:56.289]  $ MoreArgs     : NULL
[10:50:56.289]  - attr(*, "where")=List of 2
[10:50:56.289]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:56.289]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:56.289]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:56.289]  - attr(*, "resolved")= logi FALSE
[10:50:56.289]  - attr(*, "total_size")= num NA
[10:50:56.291] Packages to be attached in all futures: [n=0] 
[10:50:56.291] getGlobalsAndPackagesXApply() ... DONE
[10:50:56.291] Number of futures (= number of chunks): 2
[10:50:56.291] Launching 2 futures (chunks) ...
[10:50:56.292] Chunk #1 of 2 ...
[10:50:56.292]  - Finding globals in '...' for chunk #1 ...
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.292] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.293]    + additional globals found: [n=0] 
[10:50:56.293]    + additional namespaces needed: [n=0] 
[10:50:56.293]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:56.293]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.293]  - seeds: <none>
[10:50:56.293]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.293] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.294] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.295] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.296] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.296] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.297] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.297] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.297] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.298] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:56.299] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.381] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.382] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.382] Created future:
[10:50:56.383] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.384] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.383] MultisessionFuture:
[10:50:56.383] Label: ‘future_mapply-1’
[10:50:56.383] Expression:
[10:50:56.383] {
[10:50:56.383]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.383]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.383]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.383]         on.exit(options(oopts), add = TRUE)
[10:50:56.383]     }
[10:50:56.383]     {
[10:50:56.383]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:56.383]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.383]         do.call(mapply, args = args)
[10:50:56.383]     }
[10:50:56.383] }
[10:50:56.383] Lazy evaluation: FALSE
[10:50:56.383] Asynchronous evaluation: TRUE
[10:50:56.383] Local evaluation: TRUE
[10:50:56.383] Environment: R_GlobalEnv
[10:50:56.383] Capture standard output: TRUE
[10:50:56.383] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.383] Immediate condition classes: ‘immediateCondition’
[10:50:56.383] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.383] Packages: <none>
[10:50:56.383] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:56.383] Resolved: FALSE
[10:50:56.383] Value: <not collected>
[10:50:56.383] Conditions captured: <none>
[10:50:56.383] Early signaling: FALSE
[10:50:56.383] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.383] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.395] Chunk #1 of 2 ... DONE
[10:50:56.395] Chunk #2 of 2 ...
[10:50:56.395]  - Finding globals in '...' for chunk #2 ...
[10:50:56.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.396]    + additional globals found: [n=0] 
[10:50:56.396]    + additional namespaces needed: [n=0] 
[10:50:56.396]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:56.396]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.397]  - seeds: <none>
[10:50:56.397]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:56.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:56.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.482] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.483] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.484] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.485] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.486] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.487] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.487] Created future:
[10:50:56.487] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.488] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.488] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.488] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.487] MultisessionFuture:
[10:50:56.487] Label: ‘future_mapply-2’
[10:50:56.487] Expression:
[10:50:56.487] {
[10:50:56.487]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.487]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.487]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.487]         on.exit(options(oopts), add = TRUE)
[10:50:56.487]     }
[10:50:56.487]     {
[10:50:56.487]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:56.487]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.487]         do.call(mapply, args = args)
[10:50:56.487]     }
[10:50:56.487] }
[10:50:56.487] Lazy evaluation: FALSE
[10:50:56.487] Asynchronous evaluation: TRUE
[10:50:56.487] Local evaluation: TRUE
[10:50:56.487] Environment: R_GlobalEnv
[10:50:56.487] Capture standard output: TRUE
[10:50:56.487] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.487] Immediate condition classes: ‘immediateCondition’
[10:50:56.487] Globals: 5 objects totaling 210 bytes (function ‘...future.FUN’ of 34 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 95 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.487] Packages: <none>
[10:50:56.487] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:56.487] Resolved: FALSE
[10:50:56.487] Value: <not collected>
[10:50:56.487] Conditions captured: <none>
[10:50:56.487] Early signaling: FALSE
[10:50:56.487] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.487] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.499] Chunk #2 of 2 ... DONE
[10:50:56.499] Launching 2 futures (chunks) ... DONE
[10:50:56.499] Resolving 2 futures (chunks) ...
[10:50:56.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:56.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 1 1
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int 2
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:56.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:56.521] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:56.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:56.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.522] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.523] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int [1:2] 3 3
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : int 4
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.530] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.541] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.542] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.543] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.544] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.545] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.546] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.547] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:56.548] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:56.549] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:56.549]  - Number of value chunks collected: 2
[10:50:56.549] Resolving 2 futures (chunks) ... DONE
[10:50:56.549] Reducing values from 2 chunks ...
[10:50:56.549]  - Number of values collected after concatenation: 4
[10:50:56.549]  - Number of values expected: 4
[10:50:56.549] Reducing values from 2 chunks ... DONE
[10:50:56.549] future_mapply() ... DONE
- Parallel RNG ...
[10:50:56.549] future_mapply() ...
[10:50:56.549] Generating random seeds ...
[10:50:56.550] Generating random seed streams for 4 elements ...
[10:50:56.550] Generating random seed streams for 4 elements ... DONE
[10:50:56.550] Generating random seeds ... DONE
[10:50:56.550] Will set RNG state on exit: 10407, -1703692929, 1056736434, 558024509, -2102341090, 2043983551, 784351828
[10:50:56.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:56.550] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.551] Number of chunks: 2
[10:50:56.551] getGlobalsAndPackagesXApply() ...
[10:50:56.551]  - future.globals: TRUE
[10:50:56.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.551] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.552] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [3] ‘FUN’, ‘.Call’, ‘C_runif’
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [2] ‘stats’, ‘base’
[10:50:56.553] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals is 501 bytes (501 bytes)
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN(min = 1)’) is 501 bytes There is one global: ‘FUN’ (501 bytes of class ‘function’)
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:56.554] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.555] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.555]  - globals found/used: [n=1] ‘FUN’
[10:50:56.555]  - needed namespaces: [n=1] ‘stats’
[10:50:56.555] Finding globals ... DONE
[10:50:56.555] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:56.555] List of 2
[10:50:56.555]  $ ...future.FUN:function (n, min = 0, max = 1)  
[10:50:56.555]  $ MoreArgs     :List of 1
[10:50:56.555]   ..$ min: num 1
[10:50:56.555]  - attr(*, "where")=List of 2
[10:50:56.555]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:56.555]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:56.555]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:56.555]  - attr(*, "resolved")= logi FALSE
[10:50:56.555]  - attr(*, "total_size")= num NA
[10:50:56.558] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:56.558] getGlobalsAndPackagesXApply() ... DONE
[10:50:56.558] Number of futures (= number of chunks): 2
[10:50:56.559] Launching 2 futures (chunks) ...
[10:50:56.559] Chunk #1 of 2 ...
[10:50:56.559]  - Finding globals in '...' for chunk #1 ...
[10:50:56.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.559] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.560]    + additional globals found: [n=0] 
[10:50:56.560]    + additional namespaces needed: [n=0] 
[10:50:56.560]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:56.560]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.560]  - seeds: [2] <seeds>
[10:50:56.560]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.560] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘stats’
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘stats’
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.561] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.562] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.563] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.565] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:56.566] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.645] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.645] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘stats’
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.647] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.648] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.649] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.650] Created future:
[10:50:56.650] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.651] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.650] MultisessionFuture:
[10:50:56.650] Label: ‘future_mapply-1’
[10:50:56.650] Expression:
[10:50:56.650] {
[10:50:56.650]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.650]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.650]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.650]         on.exit(options(oopts), add = TRUE)
[10:50:56.650]     }
[10:50:56.650]     {
[10:50:56.650]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:56.650]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:56.650]                 inherits = FALSE)
[10:50:56.650]             ...future.FUN(...)
[10:50:56.650]         }
[10:50:56.650]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:56.650]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:56.650]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.650]         do.call(mapply, args = args)
[10:50:56.650]     }
[10:50:56.650] }
[10:50:56.650] Lazy evaluation: FALSE
[10:50:56.650] Asynchronous evaluation: TRUE
[10:50:56.650] Local evaluation: TRUE
[10:50:56.650] Environment: R_GlobalEnv
[10:50:56.650] Capture standard output: TRUE
[10:50:56.650] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.650] Immediate condition classes: ‘immediateCondition’
[10:50:56.650] Globals: 5 objects totaling 870 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 148 bytes, list ‘...future.seeds_ii’ of 103 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.650] Packages: 1 packages (‘stats’)
[10:50:56.650] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:56.650] Resolved: FALSE
[10:50:56.650] Value: <not collected>
[10:50:56.650] Conditions captured: <none>
[10:50:56.650] Early signaling: FALSE
[10:50:56.650] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.650] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.662] Chunk #1 of 2 ... DONE
[10:50:56.662] Chunk #2 of 2 ...
[10:50:56.662]  - Finding globals in '...' for chunk #2 ...
[10:50:56.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.663]    + additional globals found: [n=0] 
[10:50:56.663]    + additional namespaces needed: [n=0] 
[10:50:56.663]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:56.664]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.664]  - seeds: [2] <seeds>
[10:50:56.664]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘stats’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘stats’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.666] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.667] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.669] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:56.670] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.764] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.765] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘stats’
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.766] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.767] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.768] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.769] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.769] Created future:
[10:50:56.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.770] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.781] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.769] MultisessionFuture:
[10:50:56.769] Label: ‘future_mapply-2’
[10:50:56.769] Expression:
[10:50:56.769] {
[10:50:56.769]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.769]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.769]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.769]         on.exit(options(oopts), add = TRUE)
[10:50:56.769]     }
[10:50:56.769]     {
[10:50:56.769]         ...future.FUN2 <- function(..., ...future.seeds_ii_jj) {
[10:50:56.769]             assign(".Random.seed", ...future.seeds_ii_jj, envir = globalenv(), 
[10:50:56.769]                 inherits = FALSE)
[10:50:56.769]             ...future.FUN(...)
[10:50:56.769]         }
[10:50:56.769]         args <- c(list(FUN = ...future.FUN2), ...future.elements_ii, 
[10:50:56.769]             list(...future.seeds_ii_jj = ...future.seeds_ii), 
[10:50:56.769]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.769]         do.call(mapply, args = args)
[10:50:56.769]     }
[10:50:56.769] }
[10:50:56.769] Lazy evaluation: FALSE
[10:50:56.769] Asynchronous evaluation: TRUE
[10:50:56.769] Local evaluation: TRUE
[10:50:56.769] Environment: R_GlobalEnv
[10:50:56.769] Capture standard output: TRUE
[10:50:56.769] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.769] Immediate condition classes: ‘immediateCondition’
[10:50:56.769] Globals: 5 objects totaling 870 bytes (function ‘...future.FUN’ of 501 bytes, list ‘MoreArgs’ of 91 bytes, list ‘...future.elements_ii’ of 148 bytes, list ‘...future.seeds_ii’ of 103 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.769] Packages: 1 packages (‘stats’)
[10:50:56.769] L'Ecuyer-CMRG RNG seed: <none> (seed = NULL)
[10:50:56.769] Resolved: FALSE
[10:50:56.769] Value: <not collected>
[10:50:56.769] Conditions captured: <none>
[10:50:56.769] Early signaling: FALSE
[10:50:56.769] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.769] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.781] Chunk #2 of 2 ... DONE
[10:50:56.781] Launching 2 futures (chunks) ... DONE
[10:50:56.781] Resolving 2 futures (chunks) ...
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.782] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.783] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 1.75
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num [1:2] 2.77 2.04
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi TRUE
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.006 0 0
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.784] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.794] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.795] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:56.796] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.797] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.798] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.799] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:56.800] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.801] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.802] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num [1:3] 1.42 3.53 1.02
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num [1:4] 4.49 3.55 1.4 4.3
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi TRUE
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:56.812] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:56.823] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:56.823] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:56.823] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:56.824] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:56.825] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.826] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.827] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.828] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:56.829] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:56.830] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:56.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:56.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:56.831] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:56.831]  - Number of value chunks collected: 2
[10:50:56.831] Resolving 2 futures (chunks) ... DONE
[10:50:56.831] Reducing values from 2 chunks ...
[10:50:56.831]  - Number of values collected after concatenation: 4
[10:50:56.831]  - Number of values expected: 4
[10:50:56.831] Reducing values from 2 chunks ... DONE
[10:50:56.831] future_mapply() ... DONE
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
[10:50:56.832] future_mapply() ...
[10:50:56.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:56.832] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.833] Number of chunks: 2
[10:50:56.833] getGlobalsAndPackagesXApply() ...
[10:50:56.833]  - future.globals: TRUE
[10:50:56.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.833] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [2] ‘FUN’, ‘UseMethod’
[10:50:56.834] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [2] ‘stats’, ‘base’
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [2] ‘stats’, ‘base’
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.835] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals is 337 bytes (337 bytes)
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN()’) is 337 bytes There is one global: ‘FUN’ (337 bytes of class ‘function’)
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.836] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.836]  - globals found/used: [n=1] ‘FUN’
[10:50:56.837]  - needed namespaces: [n=1] ‘stats’
[10:50:56.837] Finding globals ... DONE
[10:50:56.837] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:56.837] List of 2
[10:50:56.837]  $ ...future.FUN:function (x, w, ...)  
[10:50:56.837]  $ MoreArgs     : NULL
[10:50:56.837]  - attr(*, "where")=List of 2
[10:50:56.837]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:56.837]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:56.837]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:56.837]  - attr(*, "resolved")= logi FALSE
[10:50:56.837]  - attr(*, "total_size")= num NA
[10:50:56.840] Packages to be attached in all futures: [n=1] ‘stats’
[10:50:56.840] getGlobalsAndPackagesXApply() ... DONE
[10:50:56.840] Number of futures (= number of chunks): 2
[10:50:56.840] Launching 2 futures (chunks) ...
[10:50:56.840] Chunk #1 of 2 ...
[10:50:56.840]  - Finding globals in '...' for chunk #1 ...
[10:50:56.840] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.840] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.841] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.841] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.841] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.841] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.841] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.841]    + additional globals found: [n=0] 
[10:50:56.841]    + additional namespaces needed: [n=0] 
[10:50:56.842]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:56.842]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.842]  - seeds: <none>
[10:50:56.842]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.842] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘stats’
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘stats’
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.843] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.844] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.845] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.846] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.847] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:56.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:56.848] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:56.941] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:56.942] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:56.942] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.942] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:56.942] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:56.943] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:56.943] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:56.943] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.943] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:56.943] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘stats’
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:56.944] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:56.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:56.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:56.945] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:56.946] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:56.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:56.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:56.947] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:56.947] Created future:
[10:50:56.948] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:56.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:56.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:56.949] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:56.960] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:56.947] MultisessionFuture:
[10:50:56.947] Label: ‘future_Map-1’
[10:50:56.947] Expression:
[10:50:56.947] {
[10:50:56.947]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:56.947]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:56.947]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:56.947]         on.exit(options(oopts), add = TRUE)
[10:50:56.947]     }
[10:50:56.947]     {
[10:50:56.947]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:56.947]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:56.947]         do.call(mapply, args = args)
[10:50:56.947]     }
[10:50:56.947] }
[10:50:56.947] Lazy evaluation: FALSE
[10:50:56.947] Asynchronous evaluation: TRUE
[10:50:56.947] Local evaluation: TRUE
[10:50:56.947] Environment: R_GlobalEnv
[10:50:56.947] Capture standard output: TRUE
[10:50:56.947] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:56.947] Immediate condition classes: ‘immediateCondition’
[10:50:56.947] Globals: 5 objects totaling 817 bytes (function ‘...future.FUN’ of 337 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 399 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:56.947] Packages: 1 packages (‘stats’)
[10:50:56.947] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:56.947] Resolved: FALSE
[10:50:56.947] Value: <not collected>
[10:50:56.947] Conditions captured: <none>
[10:50:56.947] Early signaling: FALSE
[10:50:56.947] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:56.947] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:56.960] Chunk #1 of 2 ... DONE
[10:50:56.960] Chunk #2 of 2 ...
[10:50:56.961]  - Finding globals in '...' for chunk #2 ...
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:56.961] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:56.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.962]    + additional globals found: [n=0] 
[10:50:56.962]    + additional namespaces needed: [n=0] 
[10:50:56.962]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:56.962]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:56.962]  - seeds: <none>
[10:50:56.962]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:56.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:56.962] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:56.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘stats’
[10:50:56.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘stats’
[10:50:56.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:56.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [1] ‘stats’
[10:50:56.963] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping non-attached packages: [1] ‘stats’
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [1] ‘stats’
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:56.964] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:56.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:56.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:56.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:56.965] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:56.966] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:56.967] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:56.968] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:57.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:57.048] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:57.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:57.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:57.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:57.049] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 1): ‘stats’
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:57.050] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:57.051] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:57.052] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:57.053] Created future:
[10:50:57.053] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.054] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.054] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.054] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.064] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.053] MultisessionFuture:
[10:50:57.053] Label: ‘future_Map-2’
[10:50:57.053] Expression:
[10:50:57.053] {
[10:50:57.053]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:57.053]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:57.053]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:57.053]         on.exit(options(oopts), add = TRUE)
[10:50:57.053]     }
[10:50:57.053]     {
[10:50:57.053]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:57.053]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:57.053]         do.call(mapply, args = args)
[10:50:57.053]     }
[10:50:57.053] }
[10:50:57.053] Lazy evaluation: FALSE
[10:50:57.053] Asynchronous evaluation: TRUE
[10:50:57.053] Local evaluation: TRUE
[10:50:57.053] Environment: R_GlobalEnv
[10:50:57.053] Capture standard output: TRUE
[10:50:57.053] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:57.053] Immediate condition classes: ‘immediateCondition’
[10:50:57.053] Globals: 5 objects totaling 993 bytes (function ‘...future.FUN’ of 337 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 575 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:57.053] Packages: 1 packages (‘stats’)
[10:50:57.053] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:57.053] Resolved: FALSE
[10:50:57.053] Value: <not collected>
[10:50:57.053] Conditions captured: <none>
[10:50:57.053] Early signaling: FALSE
[10:50:57.053] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:57.053] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.065] Chunk #2 of 2 ... DONE
[10:50:57.065] Launching 2 futures (chunks) ... DONE
[10:50:57.065] Resolving 2 futures (chunks) ...
[10:50:57.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:57.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:57.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:57.065] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.066] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0.54
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0.343
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:56"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.067] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.078] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.079] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:57.080] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.081] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.082] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.083] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.084] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.085] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.086] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.096] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 3
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0.529
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0.51
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0.628
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.002 0.001 0.004 0 0
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.097] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.108] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.109] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.110] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.111] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.112] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.113] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.114] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:57.115] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:57.115]  - Number of value chunks collected: 2
[10:50:57.115] Resolving 2 futures (chunks) ... DONE
[10:50:57.116] Reducing values from 2 chunks ...
[10:50:57.116]  - Number of values collected after concatenation: 5
[10:50:57.116]  - Number of values expected: 5
[10:50:57.116] Reducing values from 2 chunks ... DONE
[10:50:57.116] future_mapply() ... DONE
- future_mapply() - 'max-or-0-if' recycling rule ...
[10:50:57.118] future_mapply() ...
[10:50:57.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:57.118] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.118] Number of chunks: 2
[10:50:57.119] getGlobalsAndPackagesXApply() ...
[10:50:57.119]  - future.globals: TRUE
[10:50:57.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.119] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [1] ‘FUN’
[10:50:57.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.122] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:57.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:57.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.123] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals is 32 bytes (32 bytes)
[10:50:57.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN()’) is 32 bytes There is one global: ‘FUN’ (32 bytes of class ‘function’)
[10:50:57.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:57.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.124] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.124]  - globals found/used: [n=1] ‘FUN’
[10:50:57.124]  - needed namespaces: [n=0] 
[10:50:57.124] Finding globals ... DONE
[10:50:57.125] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:57.125] List of 2
[10:50:57.125]  $ ...future.FUN:function (e1, e2)  
[10:50:57.125]  $ MoreArgs     : NULL
[10:50:57.125]  - attr(*, "where")=List of 2
[10:50:57.125]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:57.125]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:57.125]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:57.125]  - attr(*, "resolved")= logi FALSE
[10:50:57.125]  - attr(*, "total_size")= num NA
[10:50:57.127] Packages to be attached in all futures: [n=0] 
[10:50:57.127] getGlobalsAndPackagesXApply() ... DONE
[10:50:57.128] Number of futures (= number of chunks): 2
[10:50:57.128] Launching 2 futures (chunks) ...
[10:50:57.128] Chunk #1 of 2 ...
[10:50:57.128]  - Finding globals in '...' for chunk #1 ...
[10:50:57.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.128] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:57.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:57.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:57.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.129]    + additional globals found: [n=0] 
[10:50:57.129]    + additional namespaces needed: [n=0] 
[10:50:57.129]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:57.129]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:57.129]  - seeds: <none>
[10:50:57.129]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.129] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:57.130] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.131] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:57.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:57.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:57.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:57.132] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.134] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:57.135] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:57.215] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:57.215] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:57.216] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.217] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:57.218] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:57.219] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:57.220] Created future:
[10:50:57.220] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.221] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.231] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.220] MultisessionFuture:
[10:50:57.220] Label: ‘future_Map-1’
[10:50:57.220] Expression:
[10:50:57.220] {
[10:50:57.220]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:57.220]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:57.220]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:57.220]         on.exit(options(oopts), add = TRUE)
[10:50:57.220]     }
[10:50:57.220]     {
[10:50:57.220]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:57.220]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:57.220]         do.call(mapply, args = args)
[10:50:57.220]     }
[10:50:57.220] }
[10:50:57.220] Lazy evaluation: FALSE
[10:50:57.220] Asynchronous evaluation: TRUE
[10:50:57.220] Local evaluation: TRUE
[10:50:57.220] Environment: R_GlobalEnv
[10:50:57.220] Capture standard output: TRUE
[10:50:57.220] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:57.220] Immediate condition classes: ‘immediateCondition’
[10:50:57.220] Globals: 5 objects totaling 188 bytes (function ‘...future.FUN’ of 32 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 75 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:57.220] Packages: <none>
[10:50:57.220] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:57.220] Resolved: FALSE
[10:50:57.220] Value: <not collected>
[10:50:57.220] Conditions captured: <none>
[10:50:57.220] Early signaling: FALSE
[10:50:57.220] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:57.220] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.232] Chunk #1 of 2 ... DONE
[10:50:57.232] Chunk #2 of 2 ...
[10:50:57.232]  - Finding globals in '...' for chunk #2 ...
[10:50:57.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.232] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:57.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:57.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:57.233] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.233]    + additional globals found: [n=0] 
[10:50:57.233]    + additional namespaces needed: [n=0] 
[10:50:57.233]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:57.233]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:57.233]  - seeds: <none>
[10:50:57.234]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [0] 
[10:50:57.234] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [0] 
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:57.235] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:57.236] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.238] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:57.239] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:57.319] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:57.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:57.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:57.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:57.320] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:57.321] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:57.322] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:57.323] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:57.324] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:57.324] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.324] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:57.324] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:57.324] Created future:
[10:50:57.325] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.325] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.325] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.326] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.336] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.324] MultisessionFuture:
[10:50:57.324] Label: ‘future_Map-2’
[10:50:57.324] Expression:
[10:50:57.324] {
[10:50:57.324]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:57.324]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:57.324]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:57.324]         on.exit(options(oopts), add = TRUE)
[10:50:57.324]     }
[10:50:57.324]     {
[10:50:57.324]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:57.324]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:57.324]         do.call(mapply, args = args)
[10:50:57.324]     }
[10:50:57.324] }
[10:50:57.324] Lazy evaluation: FALSE
[10:50:57.324] Asynchronous evaluation: TRUE
[10:50:57.324] Local evaluation: TRUE
[10:50:57.324] Environment: R_GlobalEnv
[10:50:57.324] Capture standard output: TRUE
[10:50:57.324] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:57.324] Immediate condition classes: ‘immediateCondition’
[10:50:57.324] Globals: 5 objects totaling 216 bytes (function ‘...future.FUN’ of 32 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 103 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:57.324] Packages: <none>
[10:50:57.324] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:57.324] Resolved: FALSE
[10:50:57.324] Value: <not collected>
[10:50:57.324] Conditions captured: <none>
[10:50:57.324] Early signaling: FALSE
[10:50:57.324] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:57.324] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.336] Chunk #2 of 2 ... DONE
[10:50:57.337] Launching 2 futures (chunks) ... DONE
[10:50:57.337] Resolving 2 futures (chunks) ...
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:57.337] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.338] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.338] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.338] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.338] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.338] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 2
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.009 0 0.01 0 0
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.339] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.350] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.351] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.352] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.353] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.354] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.355] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.356] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.357] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.357] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.357] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.367] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:57.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 1
[10:50:57.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:57.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.378] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.379] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 2
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 3
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 4
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.380] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.393] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.393] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:57.394] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.395] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.396] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.397] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.398] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:57.399] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.400] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:57.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:57.401] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:57.401]  - Number of value chunks collected: 2
[10:50:57.401] Resolving 2 futures (chunks) ... DONE
[10:50:57.401] Reducing values from 2 chunks ...
[10:50:57.401]  - Number of values collected after concatenation: 3
[10:50:57.401]  - Number of values expected: 3
[10:50:57.401] Reducing values from 2 chunks ... DONE
[10:50:57.401] future_mapply() ... DONE
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
[10:50:57.402] future_mapply() ...
[10:50:57.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:57.402] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.403] Number of chunks: 2
[10:50:57.403] getGlobalsAndPackagesXApply() ...
[10:50:57.403]  - future.globals: TRUE
[10:50:57.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.403] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [1] ‘FUN’
[10:50:57.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.404] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘base’
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals is 185 bytes (185 bytes)
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  The total size of the 1 globals exported for future expression (‘FUN()’) is 185 bytes There is one global: ‘FUN’ (185 bytes of class ‘function’)
[10:50:57.405] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.406] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [1] ‘FUN’
[10:50:57.406] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.406] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.406]  - globals found/used: [n=1] ‘FUN’
[10:50:57.406]  - needed namespaces: [n=0] 
[10:50:57.406] Finding globals ... DONE
[10:50:57.406] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[10:50:57.406] List of 2
[10:50:57.406]  $ ...future.FUN:function (x)  
[10:50:57.406]  $ MoreArgs     : NULL
[10:50:57.406]  - attr(*, "where")=List of 2
[10:50:57.406]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:50:57.406]   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[10:50:57.406]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:50:57.406]  - attr(*, "resolved")= logi FALSE
[10:50:57.406]  - attr(*, "total_size")= num NA
[10:50:57.409] Packages to be attached in all futures: [n=0] 
[10:50:57.409] getGlobalsAndPackagesXApply() ... DONE
[10:50:57.409] Number of futures (= number of chunks): 2
[10:50:57.409] Launching 2 futures (chunks) ...
[10:50:57.410] Chunk #1 of 2 ...
[10:50:57.410]  - Finding globals in '...' for chunk #1 ...
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:57.410] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:57.411] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.411]    + additional globals found: [n=0] 
[10:50:57.411]    + additional namespaces needed: [n=0] 
[10:50:57.411]  - Finding globals in '...' for chunk #1 ... DONE
[10:50:57.411]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:57.411]  - seeds: <none>
[10:50:57.411]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.411] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.411] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.411] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘base’
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.412] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:57.413] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:57.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:57.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:57.414] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:57.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:57.415] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:57.416] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 1
[10:50:57.417] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:57.495] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:57.495] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:57.496] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.497] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:57.498] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #1
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:57.499] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:57.500] Created future:
[10:50:57.500] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.501] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.500] MultisessionFuture:
[10:50:57.500] Label: ‘future_mapply-1’
[10:50:57.500] Expression:
[10:50:57.500] {
[10:50:57.500]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:57.500]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:57.500]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:57.500]         on.exit(options(oopts), add = TRUE)
[10:50:57.500]     }
[10:50:57.500]     {
[10:50:57.500]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:57.500]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:57.500]         do.call(mapply, args = args)
[10:50:57.500]     }
[10:50:57.500] }
[10:50:57.500] Lazy evaluation: FALSE
[10:50:57.500] Asynchronous evaluation: TRUE
[10:50:57.500] Local evaluation: TRUE
[10:50:57.500] Environment: R_GlobalEnv
[10:50:57.500] Capture standard output: TRUE
[10:50:57.500] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:57.500] Immediate condition classes: ‘immediateCondition’
[10:50:57.500] Globals: 5 objects totaling 363 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 97 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:57.500] Packages: <none>
[10:50:57.500] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:57.500] Resolved: FALSE
[10:50:57.500] Value: <not collected>
[10:50:57.500] Conditions captured: <none>
[10:50:57.500] Early signaling: FALSE
[10:50:57.500] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:57.500] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.512] Chunk #1 of 2 ... DONE
[10:50:57.512] Chunk #2 of 2 ...
[10:50:57.512]  - Finding globals in '...' for chunk #2 ...
[10:50:57.512] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ...
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals found: [0] 
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Searching for globals ... DONE
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [0] <none>
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] <none>
[10:50:57.513] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.513]    + additional globals found: [n=0] 
[10:50:57.513]    + additional namespaces needed: [n=0] 
[10:50:57.514]  - Finding globals in '...' for chunk #2 ... DONE
[10:50:57.514]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:50:57.514]  - seeds: <none>
[10:50:57.514]  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ...
[10:50:57.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Resolving globals: FALSE
[10:50:57.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ...
[10:50:57.514] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages associated with globals: [1] ‘base’
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages: [1] ‘base’
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Search for packages associated with the globals ... DONE
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages after dropping 'base': [0] 
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  packages: [0] 
[10:50:57.515] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getGlobalsAndPackages() ... done
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘Future’) ...
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  state: ‘created’
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<multisession>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ...
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ...
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ...
[10:50:57.516] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Workers: [n=2]
[10:50:57.517] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:57.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry: ‘workers-7936db94dbb7f1e6892a1ad4d02dd671’
[10:50:57.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ...
[10:50:57.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ...
[10:50:57.518] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of workers: 2
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ...
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Total time: 0
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Polling for a free worker ... done
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ...
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Listing all futures
[10:50:57.519] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'list', earlySignal = 0) ... done
[10:50:57.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Index of first available worker: 2
[10:50:57.520] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Validate that the worker is functional ...
[10:50:57.598] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Worker is functional
[10:50:57.599] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestNode() ... done
[10:50:57.599] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.599] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  requestWorker() ... done
[10:50:57.599] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ...
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  eraseGlobalEnvironment() ... done
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ...
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ...
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ...
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by the future expression (n = 0): <none>
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCore() ... done
[10:50:57.600] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ...
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureCapture() ... done
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ...
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting stack without first strategy: [n=0] 
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Packages needed by future strategies (n = 0): <none>
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureContext() ... done
[10:50:57.601] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  getFutureData() ... done
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ...
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Appended future to position #2
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 2
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'add', earlySignal = 0) ... done
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() ... done
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture started
[10:50:57.602] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  launchFuture() for ClusterFutureBackend ... done
[10:50:57.603] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Launching futures ... done
[10:50:57.603] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.603] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Using MultisessionFutureBackend ... done
[10:50:57.603] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  run() for Future (‘MultisessionFuture’) ... done
[10:50:57.603] Created future:
[10:50:57.604] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.604] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.604] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.605] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.615] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.603] MultisessionFuture:
[10:50:57.603] Label: ‘future_mapply-2’
[10:50:57.603] Expression:
[10:50:57.603] {
[10:50:57.603]     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:50:57.603]     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:50:57.603]         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:50:57.603]         on.exit(options(oopts), add = TRUE)
[10:50:57.603]     }
[10:50:57.603]     {
[10:50:57.603]         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[10:50:57.603]             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[10:50:57.603]         do.call(mapply, args = args)
[10:50:57.603]     }
[10:50:57.603] }
[10:50:57.603] Lazy evaluation: FALSE
[10:50:57.603] Asynchronous evaluation: TRUE
[10:50:57.603] Local evaluation: TRUE
[10:50:57.603] Environment: R_GlobalEnv
[10:50:57.603] Capture standard output: TRUE
[10:50:57.603] Capture condition classes: ‘condition’ (excluding ‘<none>’)
[10:50:57.603] Immediate condition classes: ‘immediateCondition’
[10:50:57.603] Globals: 5 objects totaling 363 bytes (function ‘...future.FUN’ of 185 bytes, NULL ‘MoreArgs’ of 27 bytes, list ‘...future.elements_ii’ of 97 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[10:50:57.603] Packages: <none>
[10:50:57.603] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:50:57.603] Resolved: FALSE
[10:50:57.603] Value: <not collected>
[10:50:57.603] Conditions captured: <none>
[10:50:57.603] Early signaling: FALSE
[10:50:57.603] Owner process: fde89371b4fca76053fd14aca43ebb44
[10:50:57.603] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[10:50:57.615] Chunk #2 of 2 ... DONE
[10:50:57.616] Launching 2 futures (chunks) ... DONE
[10:50:57.616] Resolving 2 futures (chunks) ...
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ...
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  recursive: 0
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 2
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of remaining objects: 2
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ...
[10:50:57.616] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.617] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 1
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "6296d3a8375df3dbce7f889dbfa4312b"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65747
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.618] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.631] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.631] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 1
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.632] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #1
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] FALSE, FALSE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] FALSE, FALSE
[10:50:57.633] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=1
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #1
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.634] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ... done
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.635] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=1) ...
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.636] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=1) ... done
[10:50:57.637] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 1 (resolved future 1)
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #1 ... done
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ...
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  'obj' is MultisessionFuture
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ...
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ...
[10:50:57.638] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.639] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  assertValidConnection() ... done
[10:50:57.645] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ...
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  cluster node index: 2
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  [1] TRUE
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  received data:
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 5
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ type   : chr "VALUE"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ value  :List of 13
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ value            :List of 1
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ : num 0
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ visible          : logi TRUE
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ stdout           : chr ""
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ conditions       : list()
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ rng              : logi FALSE
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseGlobalEnv  : NULL
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseConnections:List of 3
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ added   : NULL
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ removed : NULL
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ replaced: NULL
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ misuseDevices    : NULL
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ started          : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ finished         : POSIXct[1:1], format: "2025-05-06 10:50:57"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ session_uuid     : chr "3f2417b99ba52baa3295159b0d141c7a"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "source")=List of 5
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ host  : Named chr "5995ac22cdae"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1012-azure" "#12~24.04.1-Ubuntu SMP Mon Mar 10 19:00:39 UTC 2025" "5995ac22cdae" ...
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ pid   : int 65746
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ time  : POSIXct[1:1], format: "2025-05-06 10:50:51"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ random: int 2147483647
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ r_info           :List of 4
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..$ : int [1:3] 4 5 0
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os           : chr "unix"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ os_name      : chr "Linux"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..$ captures_utf8: logi TRUE
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..$ version          : chr "1.8"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr "FutureResult"
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ success: logi TRUE
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[10:50:57.646] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ tag    : NULL
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Received FutureResult
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ...
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Removed future from position #1
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of registered futures: 0
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  FutureRegistry('workers-7936db94dbb7f1e6892a1ad4d02dd671', action = 'remove', earlySignal = 0) ... done
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Erased future from future backend
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.657] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  receiveMessageFromWorker() for ClusterFuture ... done
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  isFutureResolved() ... done
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  MultisessionFuture #2
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.658] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, FALSE
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, FALSE
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relaying element #2
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.659] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.660] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ...
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ...
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result already collected: FutureResult
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  result() for ClusterFuture ... done
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value: <list>
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value(<MultisessionFuture>, ...) ... done
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ...
[10:50:57.661] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  until=2
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.662] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(MultisessionFuture, pos=2) ... done
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  length: 0 (resolved future 2)
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  checking value #2 ... done
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ...
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ...
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  nx: 2
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relay: TRUE
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stdout: TRUE
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signal: TRUE
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  resignal: FALSE
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  force: TRUE
[10:50:57.663] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
 - flush all
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  relayed: [n=2] TRUE, TRUE
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  queued futures: [n=2] TRUE, TRUE
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  signalConditionsASAP(NULL, pos=0) ... done
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Relaying remaining futures ... done
[10:50:57.664] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  value() on list ... done
[10:50:57.664]  - Number of value chunks collected: 2
[10:50:57.664] Resolving 2 futures (chunks) ... DONE
[10:50:57.664] Reducing values from 2 chunks ...
[10:50:57.664]  - Number of values collected after concatenation: 2
[10:50:57.665]  - Number of values expected: 2
[10:50:57.665] Reducing values from 2 chunks ... DONE
[10:50:57.665] future_mapply() ... DONE
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ...
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  New stack:
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.665] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Old stack:
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "init")= chr "done"
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "untweakable")= chr "persistent"
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(strategy)
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8e03930> 
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.668] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Not identical
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 2
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ current:function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA      gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "init")= chr "done"
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "untweakable")= chr "persistent"
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(strategy)
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55f1c8e03930> 
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "factory")=function (workers = availableCores(), interrupts = TRUE, ...)  
[10:50:57.671] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. .. ..- attr(*, "tweakable")= chr [1:10] "workers" "interrupts" "gc" "earlySignal" ...
[10:50:57.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Formals differ
[10:50:57.676] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ... done
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Future strategies differ at level 1
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ... done
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): Setting new future strategy stack:
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of future strategies:
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  1. sequential:
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - tweaked: FALSE
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - call: plan(sequential)
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.677] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:57.679] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[10:50:57.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[10:50:57.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stopWorkers() for MultisessionFutureBackend ...
[10:50:57.680] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Interrupt active futures ...
[10:50:57.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Number of futures: 0
[10:50:57.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Interrupt active futures ... done
[10:50:57.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Clear future registry ...
[10:50:57.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Clear future registry ... done
[10:50:57.681] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stop cluster workers ...
[10:50:57.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ...
[10:50:57.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Cluster to shut down:
[10:50:57.682] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[10:50:57.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopped cluster: ‘NULL’
[10:50:57.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ... done
[10:50:57.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stop cluster workers ... done
[10:50:57.693] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  stopWorkers() for MultisessionFutureBackend ... done
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Legacy shutdown of cluster workers ...
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ...
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  No pre-existing cluster. Skipping
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Stopping existing cluster ... done
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Legacy shutdown of cluster workers ... done
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.694] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "call")= language plan(sequential)
[10:50:57.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  init: NULL
[10:50:57.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[10:50:57.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.696] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Backend function: <‘NULL’>
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): nbrOfWorkers() = 1
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:57.697] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<sequential>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
*** strategy = ‘multisession’ ... done
> 
> message("- Empty input [non parallel] ...")
- Empty input [non parallel] ...
> y0 <- mapply(search)
> y1 <- future_mapply(search)
> stopifnot(identical(y1, y0))
> 
> y0 <- mapply(list, integer(0L))
> y1 <- future_mapply(list, integer(0L))
> stopifnot(identical(y1, y0))
> 
> message("*** future_mapply() - special cases ...")
*** future_mapply() - special cases ...
> 
> X <- list()
> names(X) <- character(0L)
> 
> y <- future_mapply(FUN = identity, X)
> stopifnot(length(y) == 0L, !is.null(names(y)), identical(y, X))
> 
> y <- future_mapply(FUN = identity, X, X)
> stopifnot(length(y) == 0L, !is.null(names(y)), identical(y, X))
> 
> message("*** future_mapply() - special cases ... DONE")
*** future_mapply() - special cases ... DONE
> 
> message("*** future_mapply() ... DONE")
*** future_mapply() ... DONE
> 
> source("incl/end.R")
[10:50:57.698] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  New stack:
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "FutureStrategy" "sequential" "uniprocess" "future" ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.699] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Old stack:
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 1
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.701] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[10:50:57.703] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  Not identical
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of 2
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:5] "FutureStrategy" "sequential" "uniprocess" "future" ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA   $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[10:50:57.704] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA    ..- attr(*, "call")= language plan(sequential)
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for future ... done
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  all.equal() for FutureStrategyList ... done
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): Skip setting new future strategy stack because it is the same as the current one:
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  List of future strategies:
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  1. sequential:
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - tweaked: FALSE
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA     - call: plan(sequential)
[10:50:57.708] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[10:50:57.709] |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  |  :  .  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  plan(<FutureStrategy>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
> 
