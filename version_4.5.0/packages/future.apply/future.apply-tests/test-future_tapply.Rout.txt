
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-future_tapply.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future.apply:::testme("future_tapply")
Test ‘future_tapply’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future.apply/testme/test-future_tapply.R’

> library(future.apply)
Loading required package: future

> library("datasets")

> options(future.debug = FALSE)

> message("*** future_tapply() ...")
*** future_tapply() ...

> for (strategy in supportedStrategies()[1]) {
+     message(sprintf("*** strategy = %s ...", sQuote(strategy)))
+     plan(strategy)
+     message("- ..." ... [TRUNCATED] 
*** strategy = ‘sequential’ ...
- From example(tapply) ...
  - Example #1
groups
10 13 15 
 2  2  1 
10 13 15 
 2  2  1 
10 13 15 
 2  2  1 
10 13 15 
 2  2  1 
  - Example #2
    tension
wool   L   M   H
   A 401 216 221
   B 254 259 169
    tension
wool   L   M   H
   A 401 216 221
   B 254 259 169
  - Example #3
tension
  L   M   H 
655 475 390 
tension
  L   M   H 
655 475 390 
  - Example #4
 1  2  3  4  5 
51 57 45 NA NA 
 1  2  3  4  5 
51 57 45 NA NA 
  - Example #5
 1  2  3  4  5 
51 57 45  0  0 
 1  2  3  4  5 
51 57 45  0  0 
  - Example #6
$`1`
[1] 51

$`2`
[1] 57

$`3`
[1] 45

$`4`
NULL

$`5`
NULL

$`1`
[1] 51

$`2`
[1] 57

$`3`
[1] 45

$`4`
NULL

$`5`
NULL

  - Example #7
$`1`
[1]  1 16

$`2`
[1]  2 17

$`3`
[1]  3 15

$`4`
NULL

$`5`
NULL

$`1`
[1]  1 16

$`2`
[1]  2 17

$`3`
[1]  3 15

$`4`
NULL

$`5`
NULL

  - Example #8
$`1`
   0%   25%   50%   75%  100% 
 1.00  4.75  8.50 12.25 16.00 

$`2`
   0%   25%   50%   75%  100% 
 2.00  5.75  9.50 13.25 17.00 

$`3`
  0%  25%  50%  75% 100% 
   3    6    9   12   15 

$`4`
NULL

$`5`
NULL

$`1`
   0%   25%   50%   75%  100% 
 1.00  4.75  8.50 12.25 16.00 

$`2`
   0%   25%   50%   75%  100% 
 2.00  5.75  9.50 13.25 17.00 

$`3`
  0%  25%  50%  75% 100% 
   3    6    9   12   15 

$`4`
NULL

$`5`
NULL

  - Example #9
 1  2  3  4  5 
 6  6  5 NA NA 
 1  2  3  4  5 
 6  6  5 NA NA 
  - Example #10
1 2 3 4 5 
6 6 5 0 0 
1 2 3 4 5 
6 6 5 0 0 
  - Example #11
       1        2        3        4 
58.44828 56.43333 57.22222 53.07143 
       1        2        3        4 
58.44828 56.43333 57.22222 53.07143 
  - Example #12
     ind.2
ind.1 A B
    1 1 0
    2 1 1
[1] 1 2 4
[1] 1 2 4
  - Example #13
  A  B
1 1 NA
2 2  3
  A  B
1 1 NA
2 2  3
  - Example #14
  - Example #15
  - Example #16
*** strategy = ‘sequential’ ... done

> message("*** exceptions ...")
*** exceptions ...

> res <- tryCatch({
+     y <- future_tapply(1, INDEX = list())
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch({
+     y <- future_tapply(1:216, INDEX = rep(list(1:216), times = 4))
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> res <- tryCatch({
+     y <- future_tapply(1, INDEX = list(1:2))
+ }, error = identity)

> stopifnot(inherits(res, "error"))

> message("*** future_tapply() ... DONE")
*** future_tapply() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.3s, sys.self=0.009s, elapsed=0.3s, user.child=0.004s, sys.child=0.001s
Test ‘future_tapply’ ... success
> 
