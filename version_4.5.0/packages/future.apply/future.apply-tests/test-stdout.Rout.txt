
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-stdout.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future.apply:::testme("stdout")
Test ‘stdout’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future.apply/testme/test-stdout.R’

> library(future.apply)
Loading required package: future

> message("*** future_*apply() and 'future.stdout' ...")
*** future_*apply() and 'future.stdout' ...

> options(future.debug = TRUE)

> truth <- list()

> out <- utils::capture.output({
+     y <- lapply(1:0, FUN = function(x) {
+         print(x)
+     })
+ })

> truth[["lapply"]] <- list(value = y, stdout = out)

> out <- utils::capture.output({
+     y <- mapply(1:0, 0:1, FUN = function(x, y) {
+         print(list(x = x, y = y))
+     })
+ })

> truth[["mapply"]] <- list(value = y, stdout = out)

> for (cores in 1:availCores) {
+     message(sprintf("  - Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     for (strategy in  .... [TRUNCATED] 
  - Testing with 1 cores ...
* plan('sequential') ...
[08:07:12.064] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.065] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:12.065] | : all.equal() for FutureStrategyList ...
[08:07:12.065] | : . New stack:
[08:07:12.065] | : . List of 1
[08:07:12.065] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.065] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.065] | : .   ..- attr(*, "init")= logi TRUE
[08:07:12.065] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.065] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.065] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.065] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:12.065] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.070] | : . Old stack:
[08:07:12.070] | : . List of 1
[08:07:12.070] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.070] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.070] | : .   ..- attr(*, "init")= logi TRUE
[08:07:12.070] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.070] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.070] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.070] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:12.070] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.074] | : . Not identical
[08:07:12.074] | : . all.equal() for future ...
[08:07:12.074] | : . ' List of 2
[08:07:12.074] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.074] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.074] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:12.074] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.074] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.074] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.074] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:12.074] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.074] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.074] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:12.074] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.074] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.074] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.074] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:12.079] | : . all.equal() for future ... done
[08:07:12.079] | : all.equal() for FutureStrategyList ... done
[08:07:12.079] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:12.079] | : List of future strategies:
[08:07:12.079] | : 1. sequential:
[08:07:12.079] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:12.079] | :    - tweaked: FALSE
[08:07:12.079] | :    - call: plan(sequential)
[08:07:12.080] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:12.080] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
* future_lapply(x, ..., future.stdout = FALSE) ...
[08:07:12.080] future_lapply() ...
[08:07:12.086] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:12.086] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:12.087] | future_lapply() -> future_xapply() ...
[08:07:12.087] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.088] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:12.088] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.088] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.088] | : . '  - attr(*, "init")= logi TRUE
[08:07:12.088] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.088] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.088] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.088] | : . '  - attr(*, "call")= language plan(sequential)
[08:07:12.090] | : . ' init: TRUE
[08:07:12.090] | : . ' makeFutureBackend(<sequential>) ...
[08:07:12.090] | : . ' , Backend function: <‘NULL’>
[08:07:12.090] | : . ' , Evaluator tweak arguments: [n=0]
[08:07:12.090] | : . ' ,  list()
[08:07:12.091] | : . ' , Evaluator formal arguments: [n=2]
[08:07:12.091] | : . ' ,  list()
[08:07:12.091] | : . ' , Backend factory arguments: [n=2]
[08:07:12.091] | : . ' , Dotted pair list of 2
[08:07:12.091] | : . ' ,  $ gc         : logi FALSE
[08:07:12.091] | : . ' ,  $ earlySignal: logi FALSE
[08:07:12.092] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:12.092] | : . ' makeFutureBackend(<sequential>) ... done
[08:07:12.093] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:12.093] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.093] | : Number of chunks: 1
[08:07:12.093] | : getGlobalsAndPackagesXApply() ...
[08:07:12.093] | : . future.globals: TRUE
[08:07:12.094] | : . getGlobalsAndPackages() ...
[08:07:12.094] | : . ' Searching for globals ...
[08:07:12.105] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:12.105] | : . ' Searching for globals ... done
[08:07:12.105] | : . ' Resolving globals: FALSE
[08:07:12.105] | : . ' Search for packages associated with the globals ...
[08:07:12.105] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:12.106] | : . ' , Packages: [1] ‘base’
[08:07:12.106] | : . ' Search for packages associated with the globals ... done
[08:07:12.106] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:12.107] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:12.107] | : . ' Packages after dropping 'base': [0] 
[08:07:12.107] | : . ' globals: [1] ‘FUN’
[08:07:12.107] | : . ' packages: [0] 
[08:07:12.107] | : . getGlobalsAndPackages() ... done
[08:07:12.108] | : . globals found/used: [n=1] ‘FUN’
[08:07:12.108] | : . needed namespaces: [n=0] 
[08:07:12.108] | : . use_args: TRUE
[08:07:12.108] | : . Getting '...' globals ...
[08:07:12.108] | : . ' resolve() for FutureGlobals ...
[08:07:12.108] | : . ' , recursive: 0
[08:07:12.109] | : . ' , Number of elements: 1
[08:07:12.109] | : . ' , elements: ‘...’
[08:07:12.109] | : . ' , 'obj' is DotDotDotList
[08:07:12.109] | : . ' , resolve(obj, ...) ...
[08:07:12.110] | : . ' , ; resolve() for DotDotDotList ...
[08:07:12.110] | : . ' , ; ` recursive: -1
[08:07:12.110] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:12.110] | : . ' , resolve(obj, ...) ... done
[08:07:12.110] | : . ' , resolved() for DotDotDotList ...
[08:07:12.110] | : . ' , ; Number of elements: 0
[08:07:12.110] | : . ' , ; Number of futures: 0
[08:07:12.110] | : . ' , resolved() for DotDotDotList ... done
[08:07:12.111] | : . ' , length: 0 (resolved future 1)
[08:07:12.111] | : . ' resolve() for FutureGlobals ... done
[08:07:12.111] | : . ' '...' content: [n=0] 
[08:07:12.111] | : . ' List of 1
[08:07:12.111] | : . '  $ ...: list()
[08:07:12.111] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.111] | : . '  - attr(*, "where")=List of 1
[08:07:12.111] | : . '   ..$ ...:<environment: 0x55ab9453e170> 
[08:07:12.111] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.111] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:12.111] | : . '  - attr(*, "total_size")= num NA
[08:07:12.113] | : . Getting '...' globals ... done
[08:07:12.114] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:12.114] | : . List of 2
[08:07:12.114] | : .  $ ...future.FUN:function (x)  
[08:07:12.114] | : .  $ ...          : list()
[08:07:12.114] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.114] | : .  - attr(*, "where")=List of 2
[08:07:12.114] | : .   ..$ ...future.FUN:<environment: 0x55ab9453e170> 
[08:07:12.114] | : .   ..$ ...          :<environment: 0x55ab9453e170> 
[08:07:12.114] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.114] | : .  - attr(*, "resolved")= logi FALSE
[08:07:12.114] | : .  - attr(*, "total_size")= num 6008
[08:07:12.117] | : . Packages to be attached in all futures: [n=0] 
[08:07:12.117] | : getGlobalsAndPackagesXApply() ... done
[08:07:12.117] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.117] | : List of 5
[08:07:12.117] | :  $ ...future.FUN            :function (x)  
[08:07:12.117] | :  $ ...                      : list()
[08:07:12.117] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.117] | :  $ ...future.elements_ii    : NULL
[08:07:12.117] | :  $ ...future.seeds_ii       : NULL
[08:07:12.117] | :  $ ...future.globals.maxSize: NULL
[08:07:12.117] | :  - attr(*, "where")=List of 5
[08:07:12.117] | :   ..$ ...future.FUN            :<environment: 0x55ab9453e170> 
[08:07:12.117] | :   ..$ ...                      :<environment: 0x55ab9453e170> 
[08:07:12.117] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:12.117] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:12.117] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:12.117] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.117] | :  - attr(*, "resolved")= logi FALSE
[08:07:12.117] | :  - attr(*, "total_size")= num 6008
[08:07:12.121] | : Number of futures (= number of chunks): 1
[08:07:12.121] | : Launching 1 futures (chunks) ...
[08:07:12.122] | : Chunk #1 of 1 ...
[08:07:12.122] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:12.122] | : getGlobalsAndPackages() ...
[08:07:12.122] | : . Searching for globals ...
[08:07:12.122] | : . ' globals found: [0] 
[08:07:12.123] | : . Searching for globals ... done
[08:07:12.123] | : . globals: [0] <none>
[08:07:12.123] | : . packages: [0] <none>
[08:07:12.123] | : getGlobalsAndPackages() ... done
[08:07:12.123] | :    + additional globals found: [n=0] 
[08:07:12.123] | :    + additional namespaces needed: [n=0] 
[08:07:12.123] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:12.123] | :  - seeds: <none>
[08:07:12.123] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.123] | : future(..., label = ‘future_lapply-1’) ...
[08:07:12.124] | : . lazy: FALSE
[08:07:12.124] | : . stdout: FALSE
[08:07:12.124] | : . conditions: [n=1] ‘condition’
[08:07:12.124] | : . gc: FALSE
[08:07:12.124] | : . earlySignal: FALSE
[08:07:12.124] | : . getGlobalsAndPackages() ...
[08:07:12.126] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.126] | : . ' Resolving globals: FALSE
[08:07:12.126] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:12.126] | : . ' , {
[08:07:12.126] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:12.126] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:12.126] | : . ' ,     "# as a global variable                                         "
[08:07:12.126] | : . ' ,     do.call(function(...) {
[08:07:12.126] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:12.126] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:12.126] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:12.126] | : . ' ,         "# anonymous function.                                          "
[08:07:12.126] | : . ' ,         "#                                                              "
[08:07:12.126] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:12.126] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:12.126] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:12.126] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:12.126] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:12.126] | : . ' ,         repeat {
[08:07:12.126] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:12.126] | : . ' ,                 emptyenv())) 
[08:07:12.126] | : . ' ,                 break
[08:07:12.126] | : . ' ,             penv <- env
[08:07:12.126] | : . ' ,             env <- parent.env(env)
[08:07:12.126] | : . ' ,         }
[08:07:12.126] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:12.126] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:12.126] | : . ' ,         }
[08:07:12.126] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:12.126] | : . ' ,             !isNamespace(penv)) {
[08:07:12.126] | : . ' ,             parent.env(penv) <- environment()
[08:07:12.126] | : . ' ,         }
[08:07:12.126] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:12.126] | : . ' ,         {
[08:07:12.126] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:12.126] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:12.126] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:12.126] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:12.126] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:12.126] | : . ' ,             }
[08:07:12.126] | : . ' ,             {
[08:07:12.126] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:12.126] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:12.126] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:12.126] | : . ' ,                   {
[08:07:12.126] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:12.126] | : . ' ,                   }
[08:07:12.126] | : . ' ,                 })
[08:07:12.126] | : . ' ,             }
[08:07:12.126] | : . ' ,         }
[08:07:12.126] | : . ' ,     }, args = future.call.arguments)
[08:07:12.126] | : . ' , }
[08:07:12.127] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:12.127] | : . ' Search for packages associated with the globals ...
[08:07:12.127] | : . ' , Packages associated with globals: [0] 
[08:07:12.127] | : . ' , Packages: [0] 
[08:07:12.127] | : . ' Search for packages associated with the globals ... done
[08:07:12.128] | : . ' Packages after dropping 'base': [0] 
[08:07:12.128] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.128] | : . ' packages: [0] 
[08:07:12.128] | : . getGlobalsAndPackages() ... done
[08:07:12.129] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:12.129] | : . ' state: ‘created’
[08:07:12.129] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.129] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.129] | : . ' Using SequentialFutureBackend ...
[08:07:12.129] | : . ' , Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:12.129] | : . ' , Launching futures ...
[08:07:12.130] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:12.130] | : . ' , ; ` getFutureData() ...
[08:07:12.130] | : . ' , ; ` | getFutureCore() ...
[08:07:12.130] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:12.130] | : . ' , ; ` | getFutureCore() ... done
[08:07:12.130] | : . ' , ; ` | getFutureCapture() ...
[08:07:12.130] | : . ' , ; ` | getFutureCapture() ... done
[08:07:12.131] | : . ' , ; ` | getFutureContext() ...
[08:07:12.131] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.131] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:12.131] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.131] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:12.131] | : . ' , ; ` | getFutureContext() ... done
[08:07:12.131] | : . ' , ; ` getFutureData() ... done
[08:07:12.134] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.134] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:12.134] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.134] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:12.135] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:12.135] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:12.135] | : . ' , ; ` | : . New stack:
[08:07:12.135] | : . ' , ; ` | : . List of 1
[08:07:12.135] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.135] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.135] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:12.135] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.135] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.135] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.135] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:12.135] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.138] | : . ' , ; ` | : . Old stack:
[08:07:12.138] | : . ' , ; ` | : . List of 1
[08:07:12.138] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.138] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:12.138] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.138] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.138] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.138] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.141] | : . ' , ; ` | : . Not identical
[08:07:12.141] | : . ' , ; ` | : . all.equal() for future ...
[08:07:12.141] | : . ' , ; ` | : . ' List of 2
[08:07:12.141] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.141] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:12.141] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.141] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:12.141] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.141] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.141] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.146] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:12.146] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:12.147] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:12.147] | : . ' , ; ` | : List of future strategies:
[08:07:12.147] | : . ' , ; ` | : 1. sequential:
[08:07:12.147] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:12.147] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:12.147] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:12.147] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:12.147] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:12.147] | : . ' , ; ` assign_globals() ...
[08:07:12.148] | : . ' , ; ` List of 5
[08:07:12.148] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:12.148] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:12.148] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.148] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:12.148] | : . ' , ; `   ..$ : int 1
[08:07:12.148] | : . ' , ; `   ..$ : int 0
[08:07:12.148] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:12.148] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:12.148] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:12.148] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab9453e170> 
[08:07:12.148] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab9453e170> 
[08:07:12.148] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:12.148] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:12.148] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:12.148] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:12.148] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:12.148] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.148] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:12.155] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:12.155] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:12.155] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:12.155] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:12.155] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:12.155] | : . ' , ; ` assign_globals() ... done
[08:07:12.659] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:12.659] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:12.659] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:12.659] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:12.659] | : . ' , ; ` | : . ' New stack:
[08:07:12.660] | : . ' , ; ` | : . ' List of 1
[08:07:12.660] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.660] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:12.660] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.660] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.660] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.660] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.663] | : . ' , ; ` | : . ' Old stack:
[08:07:12.663] | : . ' , ; ` | : . ' List of 1
[08:07:12.663] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.663] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:12.663] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.663] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.663] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.663] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.666] | : . ' , ; ` | : . ' Identical
[08:07:12.666] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:12.667] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:12.667] | : . ' , ; ` | : . List of future strategies:
[08:07:12.667] | : . ' , ; ` | : . 1. sequential:
[08:07:12.667] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:12.667] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:12.667] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:12.667] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:12.667] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:12.667] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:12.671] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:12.671] | : . ' , ; ` signalConditions() ...
[08:07:12.671] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:12.671] | : . ' , ; ` | exclude = 
[08:07:12.671] | : . ' , ; ` | resignal = FALSE
[08:07:12.673] | : . ' , ; ` | Number of conditions: 6
[08:07:12.673] | : . ' , ; ` |  int 6
[08:07:12.674] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.674] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:12.674] | : . ' , ; ` signalConditions() ... done
[08:07:12.675] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:12.675] | : . ' , Launching futures ... done
[08:07:12.675] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:12.675] | : . ' Using SequentialFutureBackend ... done
[08:07:12.675] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:12.675] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:12.675] | : Created future:
[08:07:12.675] | : SequentialFuture:
[08:07:12.675] | : Label: ‘future_lapply-1’
[08:07:12.675] | : Expression:
[08:07:12.675] | : {
[08:07:12.675] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:12.675] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:12.675] | :     "# as a global variable                                         "
[08:07:12.675] | :     do.call(function(...) {
[08:07:12.675] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:12.675] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:12.675] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:12.675] | :         "# anonymous function.                                          "
[08:07:12.675] | :         "#                                                              "
[08:07:12.675] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:12.675] | :         "# function environment of FUN() to the calling environment.    "
[08:07:12.675] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:12.675] | :         "# global environment, which is where globals are written.      "
[08:07:12.675] | :         penv <- env <- environment(...future.FUN)
[08:07:12.675] | :         repeat {
[08:07:12.675] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:12.675] | :                 emptyenv())) 
[08:07:12.675] | :                 break
[08:07:12.675] | :             penv <- env
[08:07:12.675] | :             env <- parent.env(env)
[08:07:12.675] | :         }
[08:07:12.675] | :         if (identical(penv, globalenv())) {
[08:07:12.675] | :             environment(...future.FUN) <- environment()
[08:07:12.675] | :         }
[08:07:12.675] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:12.675] | :             !isNamespace(penv)) {
[08:07:12.675] | :             parent.env(penv) <- environment()
[08:07:12.675] | :         }
[08:07:12.675] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:12.675] | :         {
[08:07:12.675] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:12.675] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:12.675] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:12.675] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:12.675] | :                 on.exit(options(oopts), add = TRUE)
[08:07:12.675] | :             }
[08:07:12.675] | :             {
[08:07:12.675] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:12.675] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:12.675] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:12.675] | :                   {
[08:07:12.675] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:12.675] | :                   }
[08:07:12.675] | :                 })
[08:07:12.675] | :             }
[08:07:12.675] | :         }
[08:07:12.675] | :     }, args = future.call.arguments)
[08:07:12.675] | : }
[08:07:12.675] | : Globals: 5 objects totaling 6.13 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 55 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:12.675] | : Packages: <none>
[08:07:12.675] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:12.675] | : Capture standard output: FALSE
[08:07:12.675] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:12.675] | : Immediate condition classes: ‘immediateCondition’
[08:07:12.675] | : Lazy evaluation: FALSE
[08:07:12.675] | : Local evaluation: TRUE
[08:07:12.675] | : Asynchronous evaluation: TRUE
[08:07:12.675] | : Early signaling: FALSE
[08:07:12.675] | : Environment: R_GlobalEnv
[08:07:12.675] | : State: ‘finished’
[08:07:12.675] | : Resolved: TRUE
[08:07:12.675] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-1
[08:07:12.675] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:12.675] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:12.675] | : Value: 55 bytes of class ‘list’
[08:07:12.675] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:12.675] | : Duration: 0.5257809 secs (started 2025-06-17 08:07:12.133083)
[08:07:12.675] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:12.678] | : Chunk #1 of 1 ... DONE
[08:07:12.678] | : Launching 1 futures (chunks) ... DONE
[08:07:12.678] | : Resolving 1 futures (chunks) ...
[08:07:12.678] | : value() for list ...
[08:07:12.679] | : . recursive: 0
[08:07:12.679] | : . reduce: FALSE
[08:07:12.679] | : . length: 1

[08:07:12.679] | : . Number of remaining objects: 1
[08:07:12.679] | : . checking value #1:
[08:07:12.679] | : . 'obj' is SequentialFuture
[08:07:12.679] | : . resolved() for SequentialFuture (‘future_lapply-1’) ...
[08:07:12.679] | : . ' state: ‘finished’
[08:07:12.680] | : . ' run: TRUE
[08:07:12.680] | : . ' result: ‘FutureResult’
[08:07:12.680] | : . resolved() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:12.680] | : . SequentialFuture #1
[08:07:12.680] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:12.680] | : . ' nx: 1
[08:07:12.680] | : . ' relay: TRUE
[08:07:12.680] | : . ' stdout: TRUE
[08:07:12.680] | : . ' signal: TRUE
[08:07:12.680] | : . ' resignal: FALSE
[08:07:12.681] | : . ' force: TRUE
[08:07:12.681] | : . ' relayed: [n=1] FALSE
[08:07:12.681] | : . ' queued futures: [n=1] FALSE
[08:07:12.681] | : . ' until=1
[08:07:12.681] | : . ' relaying element #1
[08:07:12.681] | : . ' value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:12.682] | : . ' , signalConditions() ...
[08:07:12.682] | : . ' , ; include = ‘immediateCondition’
[08:07:12.682] | : . ' , ; exclude = 
[08:07:12.682] | : . ' , ; resignal = FALSE
[08:07:12.682] | : . ' , ; Number of conditions: 6
[08:07:12.682] | : . ' , ;  int 6
[08:07:12.683] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.683] | : . ' , ; Drop signaled conditions: 0
[08:07:12.683] | : . ' , signalConditions() ... done
[08:07:12.683] | : . ' , relay stdout ...
[08:07:12.684] | : . ' , relay stdout ... done
[08:07:12.684] | : . ' , check for misuse ...
[08:07:12.684] | : . ' , check for misuse ... done
[08:07:12.684] | : . ' value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:12.684] | : . ' signalConditions() ...
[08:07:12.684] | : . ' , include = ‘immediateCondition’
[08:07:12.684] | : . ' , exclude = 
[08:07:12.684] | : . ' , resignal = FALSE
[08:07:12.684] | : . ' , Number of conditions: 6
[08:07:12.684] | : . ' ,  int 6
[08:07:12.685] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.685] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.685] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.685] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.685] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.685] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.686] | : . ' , Drop signaled conditions: 0
[08:07:12.686] | : . ' signalConditions() ... done
[08:07:12.686] | : . ' signalConditions() ...
[08:07:12.686] | : . ' , include = ‘condition’
[08:07:12.686] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:12.686] | : . ' , resignal = TRUE
[08:07:12.686] | : . ' , Number of conditions: 6
[08:07:12.686] | : . ' ,  int 6
[08:07:12.687] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.687] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` attachPackages() ...
[08:07:12.687] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.687] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:12.687] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.687] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` attachPackages() ... done
[08:07:12.687] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.688] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` attachPackages() ...
[08:07:12.688] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.688] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` | packages: [n=0] 
[08:07:12.688] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:12.688] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.133] | : . ' , ; ` attachPackages() ... done
[08:07:12.688] | : . ' , Drop signaled conditions: 6
[08:07:12.688] | : . ' signalConditions() ... done
[08:07:12.688] | : . ' relayed: [n=1] TRUE
[08:07:12.688] | : . ' queued futures: [n=1] TRUE
[08:07:12.689] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:12.689] | : . value(<SequentialFuture>, ...) ...
[08:07:12.689] | : . value(<SequentialFuture>, ...) ... done
[08:07:12.689] | : . value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:12.689] | : . ' signalConditions() ...
[08:07:12.689] | : . ' , include = ‘immediateCondition’
[08:07:12.689] | : . ' , exclude = 
[08:07:12.689] | : . ' , resignal = FALSE
[08:07:12.689] | : . ' , Number of conditions: 0
[08:07:12.690] | : . ' ,  int 0
[08:07:12.690] | : . ' signalConditions() ... done
[08:07:12.690] | : . ' check for misuse ...
[08:07:12.690] | : . ' check for misuse ... done
[08:07:12.690] | : . value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:12.690] | : . value: <list>
[08:07:12.690] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:12.691] | : . ' nx: 1
[08:07:12.691] | : . ' relay: TRUE
[08:07:12.691] | : . ' stdout: TRUE
[08:07:12.691] | : . ' signal: TRUE
[08:07:12.691] | : . ' resignal: FALSE
[08:07:12.691] | : . ' force: TRUE
[08:07:12.691] | : . ' relayed: [n=1] TRUE
[08:07:12.691] | : . ' queued futures: [n=1] TRUE
[08:07:12.691] | : . ' until=1
[08:07:12.691] | : . ' relayed: [n=1] TRUE
[08:07:12.692] | : . ' queued futures: [n=1] TRUE
[08:07:12.692] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:12.692] | : . resolve() for SequentialFuture ...
[08:07:12.692] | : . resolve() for SequentialFuture ... done
[08:07:12.692] | : . length: 0 (resolved future 1)
[08:07:12.692] | : value() for list ... done
[08:07:12.692] | : Relaying remaining futures ...
[08:07:12.692] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:12.693] | : . ' nx: 1
[08:07:12.693] | : . ' relay: TRUE
[08:07:12.693] | : . ' stdout: TRUE
[08:07:12.693] | : . ' signal: TRUE
[08:07:12.693] | : . ' resignal: FALSE
[08:07:12.693] | : . ' force: TRUE
[08:07:12.693] | : . ' relayed: [n=1] TRUE
[08:07:12.693] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:12.693] | : . ' relayed: [n=1] TRUE
[08:07:12.694] | : . ' queued futures: [n=1] TRUE
[08:07:12.694] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:12.696] | : Relaying remaining futures ... done
[08:07:12.696] | future_lapply() -> future_xapply() ... done
[08:07:12.696] |  - Number of value chunks collected: 1
[08:07:12.696] | Resolving 1 futures (chunks) ... DONE
[08:07:12.696] | Reducing values from 1 chunks ...
[08:07:12.696] |  - Number of values collected after concatenation: 2
[08:07:12.696] |  - Number of values expected: 2
[08:07:12.696] | Reducing values from 1 chunks ... DONE
[08:07:12.697] future_lapply() ... done

* future_lapply(x, ..., future.stdout = FALSE) ... DONE
* future_lapply(x, ..., future.stdout = TRUE) ...
[08:07:12.697] future_lapply() ...
[08:07:12.698] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:12.698] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:12.698] | future_lapply() -> future_xapply() ...
[08:07:12.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.699] | : Number of chunks: 1
[08:07:12.699] | : getGlobalsAndPackagesXApply() ...
[08:07:12.699] | : . future.globals: TRUE
[08:07:12.699] | : . getGlobalsAndPackages() ...
[08:07:12.699] | : . ' Searching for globals ...
[08:07:12.706] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:12.706] | : . ' Searching for globals ... done
[08:07:12.706] | : . ' Resolving globals: FALSE
[08:07:12.706] | : . ' Search for packages associated with the globals ...
[08:07:12.706] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:12.707] | : . ' , Packages: [1] ‘base’
[08:07:12.707] | : . ' Search for packages associated with the globals ... done
[08:07:12.707] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:12.707] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:12.708] | : . ' Packages after dropping 'base': [0] 
[08:07:12.708] | : . ' globals: [1] ‘FUN’
[08:07:12.708] | : . ' packages: [0] 
[08:07:12.708] | : . getGlobalsAndPackages() ... done
[08:07:12.708] | : . globals found/used: [n=1] ‘FUN’
[08:07:12.708] | : . needed namespaces: [n=0] 
[08:07:12.708] | : . use_args: TRUE
[08:07:12.708] | : . Getting '...' globals ...
[08:07:12.708] | : . ' resolve() for FutureGlobals ...
[08:07:12.709] | : . ' , recursive: 0
[08:07:12.709] | : . ' , Number of elements: 1
[08:07:12.709] | : . ' , elements: ‘...’
[08:07:12.709] | : . ' , 'obj' is DotDotDotList
[08:07:12.709] | : . ' , resolve(obj, ...) ...
[08:07:12.709] | : . ' , ; resolve() for DotDotDotList ...
[08:07:12.709] | : . ' , ; ` recursive: -1
[08:07:12.710] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:12.710] | : . ' , resolve(obj, ...) ... done
[08:07:12.710] | : . ' , resolved() for DotDotDotList ...
[08:07:12.710] | : . ' , ; Number of elements: 0
[08:07:12.710] | : . ' , ; Number of futures: 0
[08:07:12.710] | : . ' , resolved() for DotDotDotList ... done
[08:07:12.710] | : . ' , length: 0 (resolved future 1)
[08:07:12.710] | : . ' resolve() for FutureGlobals ... done
[08:07:12.710] | : . ' '...' content: [n=0] 
[08:07:12.711] | : . ' List of 1
[08:07:12.711] | : . '  $ ...: list()
[08:07:12.711] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.711] | : . '  - attr(*, "where")=List of 1
[08:07:12.711] | : . '   ..$ ...:<environment: 0x55ab95581320> 
[08:07:12.711] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.711] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:12.711] | : . '  - attr(*, "total_size")= num NA
[08:07:12.715] | : . Getting '...' globals ... done
[08:07:12.715] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:12.715] | : . List of 2
[08:07:12.715] | : .  $ ...future.FUN:function (x)  
[08:07:12.715] | : .  $ ...          : list()
[08:07:12.715] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.715] | : .  - attr(*, "where")=List of 2
[08:07:12.715] | : .   ..$ ...future.FUN:<environment: 0x55ab95581320> 
[08:07:12.715] | : .   ..$ ...          :<environment: 0x55ab95581320> 
[08:07:12.715] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.715] | : .  - attr(*, "resolved")= logi FALSE
[08:07:12.715] | : .  - attr(*, "total_size")= num 6008
[08:07:12.718] | : . Packages to be attached in all futures: [n=0] 
[08:07:12.718] | : getGlobalsAndPackagesXApply() ... done
[08:07:12.719] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.719] | : List of 5
[08:07:12.719] | :  $ ...future.FUN            :function (x)  
[08:07:12.719] | :  $ ...                      : list()
[08:07:12.719] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.719] | :  $ ...future.elements_ii    : NULL
[08:07:12.719] | :  $ ...future.seeds_ii       : NULL
[08:07:12.719] | :  $ ...future.globals.maxSize: NULL
[08:07:12.719] | :  - attr(*, "where")=List of 5
[08:07:12.719] | :   ..$ ...future.FUN            :<environment: 0x55ab95581320> 
[08:07:12.719] | :   ..$ ...                      :<environment: 0x55ab95581320> 
[08:07:12.719] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:12.719] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:12.719] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:12.719] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.719] | :  - attr(*, "resolved")= logi FALSE
[08:07:12.719] | :  - attr(*, "total_size")= num 6008
[08:07:12.723] | : Number of futures (= number of chunks): 1
[08:07:12.723] | : Launching 1 futures (chunks) ...
[08:07:12.723] | : Chunk #1 of 1 ...
[08:07:12.723] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:12.723] | : getGlobalsAndPackages() ...
[08:07:12.723] | : . Searching for globals ...
[08:07:12.724] | : . ' globals found: [0] 
[08:07:12.724] | : . Searching for globals ... done
[08:07:12.724] | : . globals: [0] <none>
[08:07:12.724] | : . packages: [0] <none>
[08:07:12.724] | : getGlobalsAndPackages() ... done
[08:07:12.724] | :    + additional globals found: [n=0] 
[08:07:12.725] | :    + additional namespaces needed: [n=0] 
[08:07:12.725] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:12.725] | :  - seeds: <none>
[08:07:12.725] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.725] | : future(..., label = ‘future_lapply-1’) ...
[08:07:12.725] | : . lazy: FALSE
[08:07:12.725] | : . stdout: TRUE
[08:07:12.725] | : . conditions: [n=1] ‘condition’
[08:07:12.725] | : . gc: FALSE
[08:07:12.725] | : . earlySignal: FALSE
[08:07:12.726] | : . getGlobalsAndPackages() ...
[08:07:12.726] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.726] | : . ' Resolving globals: FALSE
[08:07:12.726] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:12.726] | : . ' , {
[08:07:12.726] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:12.726] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:12.726] | : . ' ,     "# as a global variable                                         "
[08:07:12.726] | : . ' ,     do.call(function(...) {
[08:07:12.726] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:12.726] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:12.726] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:12.726] | : . ' ,         "# anonymous function.                                          "
[08:07:12.726] | : . ' ,         "#                                                              "
[08:07:12.726] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:12.726] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:12.726] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:12.726] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:12.726] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:12.726] | : . ' ,         repeat {
[08:07:12.726] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:12.726] | : . ' ,                 emptyenv())) 
[08:07:12.726] | : . ' ,                 break
[08:07:12.726] | : . ' ,             penv <- env
[08:07:12.726] | : . ' ,             env <- parent.env(env)
[08:07:12.726] | : . ' ,         }
[08:07:12.726] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:12.726] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:12.726] | : . ' ,         }
[08:07:12.726] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:12.726] | : . ' ,             !isNamespace(penv)) {
[08:07:12.726] | : . ' ,             parent.env(penv) <- environment()
[08:07:12.726] | : . ' ,         }
[08:07:12.726] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:12.726] | : . ' ,         {
[08:07:12.726] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:12.726] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:12.726] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:12.726] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:12.726] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:12.726] | : . ' ,             }
[08:07:12.726] | : . ' ,             {
[08:07:12.726] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:12.726] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:12.726] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:12.726] | : . ' ,                   {
[08:07:12.726] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:12.726] | : . ' ,                   }
[08:07:12.726] | : . ' ,                 })
[08:07:12.726] | : . ' ,             }
[08:07:12.726] | : . ' ,         }
[08:07:12.726] | : . ' ,     }, args = future.call.arguments)
[08:07:12.726] | : . ' , }
[08:07:12.727] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:12.727] | : . ' Search for packages associated with the globals ...
[08:07:12.727] | : . ' , Packages associated with globals: [0] 
[08:07:12.727] | : . ' , Packages: [0] 
[08:07:12.727] | : . ' Search for packages associated with the globals ... done
[08:07:12.727] | : . ' Packages after dropping 'base': [0] 
[08:07:12.727] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:12.728] | : . ' packages: [0] 
[08:07:12.728] | : . getGlobalsAndPackages() ... done
[08:07:12.728] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:12.728] | : . ' state: ‘created’
[08:07:12.728] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.728] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.728] | : . ' Using SequentialFutureBackend ...
[08:07:12.729] | : . ' , Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:07:12.729] | : . ' , Launching futures ...
[08:07:12.729] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:12.729] | : . ' , ; ` getFutureData() ...
[08:07:12.729] | : . ' , ; ` | getFutureCore() ...
[08:07:12.729] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:12.729] | : . ' , ; ` | getFutureCore() ... done
[08:07:12.729] | : . ' , ; ` | getFutureCapture() ...
[08:07:12.729] | : . ' , ; ` | getFutureCapture() ... done
[08:07:12.730] | : . ' , ; ` | getFutureContext() ...
[08:07:12.730] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.730] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:12.730] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.730] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:12.730] | : . ' , ; ` | getFutureContext() ... done
[08:07:12.730] | : . ' , ; ` getFutureData() ... done
[08:07:12.732] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:12.732] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:12.732] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:12.732] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:12.732] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:12.732] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:12.733] | : . ' , ; ` | : . New stack:
[08:07:12.733] | : . ' , ; ` | : . List of 1
[08:07:12.733] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.733] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.733] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:12.733] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.733] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.733] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.733] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:12.733] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.737] | : . ' , ; ` | : . Old stack:
[08:07:12.737] | : . ' , ; ` | : . List of 1
[08:07:12.737] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.737] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:12.737] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.737] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.737] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.737] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:12.740] | : . ' , ; ` | : . Not identical
[08:07:12.740] | : . ' , ; ` | : . all.equal() for future ...
[08:07:12.740] | : . ' , ; ` | : . ' List of 2
[08:07:12.740] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.740] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:12.740] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.740] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:12.740] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:12.740] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:12.740] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:12.746] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:12.746] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:12.746] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:12.746] | : . ' , ; ` | : List of future strategies:
[08:07:12.746] | : . ' , ; ` | : 1. sequential:
[08:07:12.746] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:12.746] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:12.746] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:12.746] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:12.747] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:12.747] | : . ' , ; ` assign_globals() ...
[08:07:12.747] | : . ' , ; ` List of 5
[08:07:12.747] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:12.747] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:12.747] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:12.747] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:12.747] | : . ' , ; `   ..$ : int 1
[08:07:12.747] | : . ' , ; `   ..$ : int 0
[08:07:12.747] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:12.747] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:12.747] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:12.747] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab95581320> 
[08:07:12.747] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab95581320> 
[08:07:12.747] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:12.747] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:12.747] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:12.747] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:12.747] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:12.747] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:12.747] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:12.753] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:12.754] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:12.754] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:12.754] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:12.754] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:12.754] | : . ' , ; ` assign_globals() ... done
[08:07:13.257] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.257] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.257] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:13.257] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:13.257] | : . ' , ; ` | : . ' New stack:
[08:07:13.258] | : . ' , ; ` | : . ' List of 1
[08:07:13.258] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.258] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.258] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.258] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.258] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.258] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.261] | : . ' , ; ` | : . ' Old stack:
[08:07:13.261] | : . ' , ; ` | : . ' List of 1
[08:07:13.261] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.261] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.261] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.261] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.261] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.261] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.264] | : . ' , ; ` | : . ' Identical
[08:07:13.265] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:13.265] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:13.265] | : . ' , ; ` | : . List of future strategies:
[08:07:13.265] | : . ' , ; ` | : . 1. sequential:
[08:07:13.265] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:13.265] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:13.265] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:13.265] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:13.265] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.265] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.266] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:13.266] | : . ' , ; ` signalConditions() ...
[08:07:13.266] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:13.266] | : . ' , ; ` | exclude = 
[08:07:13.266] | : . ' , ; ` | resignal = FALSE
[08:07:13.266] | : . ' , ; ` | Number of conditions: 6
[08:07:13.266] | : . ' , ; ` |  int 6
[08:07:13.267] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.267] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.267] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.267] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.267] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.267] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.268] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:13.268] | : . ' , ; ` signalConditions() ... done
[08:07:13.268] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:13.268] | : . ' , Launching futures ... done
[08:07:13.268] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:13.268] | : . ' Using SequentialFutureBackend ... done
[08:07:13.268] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:13.268] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:13.268] | : Created future:
[08:07:13.268] | : SequentialFuture:
[08:07:13.268] | : Label: ‘future_lapply-1’
[08:07:13.268] | : Expression:
[08:07:13.268] | : {
[08:07:13.268] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:13.268] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:13.268] | :     "# as a global variable                                         "
[08:07:13.268] | :     do.call(function(...) {
[08:07:13.268] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:13.268] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:13.268] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:13.268] | :         "# anonymous function.                                          "
[08:07:13.268] | :         "#                                                              "
[08:07:13.268] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:13.268] | :         "# function environment of FUN() to the calling environment.    "
[08:07:13.268] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:13.268] | :         "# global environment, which is where globals are written.      "
[08:07:13.268] | :         penv <- env <- environment(...future.FUN)
[08:07:13.268] | :         repeat {
[08:07:13.268] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:13.268] | :                 emptyenv())) 
[08:07:13.268] | :                 break
[08:07:13.268] | :             penv <- env
[08:07:13.268] | :             env <- parent.env(env)
[08:07:13.268] | :         }
[08:07:13.268] | :         if (identical(penv, globalenv())) {
[08:07:13.268] | :             environment(...future.FUN) <- environment()
[08:07:13.268] | :         }
[08:07:13.268] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:13.268] | :             !isNamespace(penv)) {
[08:07:13.268] | :             parent.env(penv) <- environment()
[08:07:13.268] | :         }
[08:07:13.268] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:13.268] | :         {
[08:07:13.268] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:13.268] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:13.268] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:13.268] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:13.268] | :                 on.exit(options(oopts), add = TRUE)
[08:07:13.268] | :             }
[08:07:13.268] | :             {
[08:07:13.268] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:13.268] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:13.268] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:13.268] | :                   {
[08:07:13.268] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:13.268] | :                   }
[08:07:13.268] | :                 })
[08:07:13.268] | :             }
[08:07:13.268] | :         }
[08:07:13.268] | :     }, args = future.call.arguments)
[08:07:13.268] | : }
[08:07:13.268] | : Globals: 5 objects totaling 6.13 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 55 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:13.268] | : Packages: <none>
[08:07:13.268] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:13.268] | : Capture standard output: TRUE
[08:07:13.268] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:13.268] | : Immediate condition classes: ‘immediateCondition’
[08:07:13.268] | : Lazy evaluation: FALSE
[08:07:13.268] | : Local evaluation: TRUE
[08:07:13.268] | : Asynchronous evaluation: TRUE
[08:07:13.268] | : Early signaling: FALSE
[08:07:13.268] | : Environment: R_GlobalEnv
[08:07:13.268] | : State: ‘finished’
[08:07:13.268] | : Resolved: TRUE
[08:07:13.268] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-2
[08:07:13.268] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:13.268] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:13.268] | : Value: 55 bytes of class ‘list’
[08:07:13.268] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:13.268] | : Duration: 0.5260572 secs (started 2025-06-17 08:07:12.73093)
[08:07:13.268] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:13.270] | : Chunk #1 of 1 ... DONE
[08:07:13.270] | : Launching 1 futures (chunks) ... DONE
[08:07:13.270] | : Resolving 1 futures (chunks) ...
[08:07:13.270] | : value() for list ...
[08:07:13.270] | : . recursive: 0
[08:07:13.270] | : . reduce: FALSE
[08:07:13.270] | : . length: 1

[08:07:13.271] | : . Number of remaining objects: 1
[08:07:13.271] | : . checking value #1:
[08:07:13.271] | : . 'obj' is SequentialFuture
[08:07:13.271] | : . resolved() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.271] | : . ' state: ‘finished’
[08:07:13.271] | : . ' run: TRUE
[08:07:13.271] | : . ' result: ‘FutureResult’
[08:07:13.271] | : . resolved() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.272] | : . SequentialFuture #1
[08:07:13.272] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:13.272] | : . ' nx: 1
[08:07:13.272] | : . ' relay: TRUE
[08:07:13.272] | : . ' stdout: TRUE
[08:07:13.274] | : . ' signal: TRUE
[08:07:13.274] | : . ' resignal: FALSE
[08:07:13.274] | : . ' force: TRUE
[08:07:13.274] | : . ' relayed: [n=1] FALSE
[08:07:13.274] | : . ' queued futures: [n=1] FALSE
[08:07:13.274] | : . ' until=1
[08:07:13.274] | : . ' relaying element #1
[08:07:13.274] | : . ' value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.274] | : . ' , signalConditions() ...
[08:07:13.275] | : . ' , ; include = ‘immediateCondition’
[08:07:13.275] | : . ' , ; exclude = 
[08:07:13.275] | : . ' , ; resignal = FALSE
[08:07:13.275] | : . ' , ; Number of conditions: 6
[08:07:13.275] | : . ' , ;  int 6
[08:07:13.275] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.275] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.276] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.276] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.276] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.276] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.276] | : . ' , ; Drop signaled conditions: 0
[08:07:13.276] | : . ' , signalConditions() ... done
[08:07:13.276] | : . ' , relay stdout ...
[08:07:13.276] | : . ' , relay stdout ... done
[08:07:13.276] | : . ' , check for misuse ...
[08:07:13.277] | : . ' , check for misuse ... done
[08:07:13.277] | : . ' value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.277] | : . ' signalConditions() ...
[08:07:13.277] | : . ' , include = ‘immediateCondition’
[08:07:13.277] | : . ' , exclude = 
[08:07:13.277] | : . ' , resignal = FALSE
[08:07:13.277] | : . ' , Number of conditions: 6
[08:07:13.277] | : . ' ,  int 6
[08:07:13.278] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.278] | : . ' , Drop signaled conditions: 0
[08:07:13.278] | : . ' signalConditions() ... done
[08:07:13.279] | : . ' signalConditions() ...
[08:07:13.279] | : . ' , include = ‘condition’
[08:07:13.279] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:13.279] | : . ' , resignal = TRUE
[08:07:13.279] | : . ' , Number of conditions: 6
[08:07:13.279] | : . ' ,  int 6
[08:07:13.279] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.279] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` attachPackages() ...
[08:07:13.280] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.280] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:13.280] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.280] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` attachPackages() ... done
[08:07:13.280] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.280] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` attachPackages() ...
[08:07:13.280] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.280] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` | packages: [n=0] 
[08:07:13.281] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.281] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:12.731] | : . ' , ; ` attachPackages() ... done
[08:07:13.281] | : . ' , Drop signaled conditions: 6
[08:07:13.281] | : . ' signalConditions() ... done
[08:07:13.281] | : . ' relayed: [n=1] TRUE
[08:07:13.281] | : . ' queued futures: [n=1] TRUE
[08:07:13.281] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:13.281] | : . value(<SequentialFuture>, ...) ...
[08:07:13.281] | : . value(<SequentialFuture>, ...) ... done
[08:07:13.281] | : . value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.282] | : . ' signalConditions() ...
[08:07:13.282] | : . ' , include = ‘immediateCondition’
[08:07:13.282] | : . ' , exclude = 
[08:07:13.282] | : . ' , resignal = FALSE
[08:07:13.282] | : . ' , Number of conditions: 0
[08:07:13.282] | : . ' ,  int 0
[08:07:13.282] | : . ' signalConditions() ... done
[08:07:13.283] | : . ' check for misuse ...
[08:07:13.283] | : . ' check for misuse ... done
[08:07:13.283] | : . value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.283] | : . value: <list>
[08:07:13.283] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:13.283] | : . ' nx: 1
[08:07:13.283] | : . ' relay: TRUE
[08:07:13.283] | : . ' stdout: TRUE
[08:07:13.283] | : . ' signal: TRUE
[08:07:13.283] | : . ' resignal: FALSE
[08:07:13.284] | : . ' force: TRUE
[08:07:13.284] | : . ' relayed: [n=1] TRUE
[08:07:13.284] | : . ' queued futures: [n=1] TRUE
[08:07:13.284] | : . ' until=1
[08:07:13.284] | : . ' relayed: [n=1] TRUE
[08:07:13.284] | : . ' queued futures: [n=1] TRUE
[08:07:13.284] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:13.284] | : . resolve() for SequentialFuture ...
[08:07:13.284] | : . resolve() for SequentialFuture ... done
[08:07:13.284] | : . length: 0 (resolved future 1)
[08:07:13.285] | : value() for list ... done
[08:07:13.285] | : Relaying remaining futures ...
[08:07:13.285] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:13.285] | : . ' nx: 1
[08:07:13.285] | : . ' relay: TRUE
[08:07:13.285] | : . ' stdout: TRUE
[08:07:13.285] | : . ' signal: TRUE
[08:07:13.285] | : . ' resignal: FALSE
[08:07:13.285] | : . ' force: TRUE
[08:07:13.285] | : . ' relayed: [n=1] TRUE
[08:07:13.285] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:13.286] | : . ' relayed: [n=1] TRUE
[08:07:13.286] | : . ' queued futures: [n=1] TRUE
[08:07:13.286] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:13.286] | : Relaying remaining futures ... done
[08:07:13.286] | future_lapply() -> future_xapply() ... done
[08:07:13.286] |  - Number of value chunks collected: 1
[08:07:13.286] | Resolving 1 futures (chunks) ... DONE
[08:07:13.286] | Reducing values from 1 chunks ...
[08:07:13.286] |  - Number of values collected after concatenation: 2
[08:07:13.286] |  - Number of values expected: 2
[08:07:13.286] | Reducing values from 1 chunks ... DONE
[08:07:13.287] future_lapply() ... done

* future_lapply(x, ..., future.stdout = TRUE) ... DONE
* future_lapply(x, ..., future.stdout = NA) ...
[08:07:13.287] future_lapply() ...
[08:07:13.288] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:13.288] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:13.288] | future_lapply() -> future_xapply() ...
[08:07:13.288] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.288] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.288] | : Number of chunks: 1
[08:07:13.288] | : getGlobalsAndPackagesXApply() ...
[08:07:13.289] | : . future.globals: TRUE
[08:07:13.289] | : . getGlobalsAndPackages() ...
[08:07:13.289] | : . ' Searching for globals ...
[08:07:13.296] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:13.297] | : . ' Searching for globals ... done
[08:07:13.297] | : . ' Resolving globals: FALSE
[08:07:13.297] | : . ' Search for packages associated with the globals ...
[08:07:13.297] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:13.297] | : . ' , Packages: [1] ‘base’
[08:07:13.297] | : . ' Search for packages associated with the globals ... done
[08:07:13.298] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:13.298] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:13.298] | : . ' Packages after dropping 'base': [0] 
[08:07:13.298] | : . ' globals: [1] ‘FUN’
[08:07:13.298] | : . ' packages: [0] 
[08:07:13.298] | : . getGlobalsAndPackages() ... done
[08:07:13.298] | : . globals found/used: [n=1] ‘FUN’
[08:07:13.299] | : . needed namespaces: [n=0] 
[08:07:13.299] | : . use_args: TRUE
[08:07:13.299] | : . Getting '...' globals ...
[08:07:13.299] | : . ' resolve() for FutureGlobals ...
[08:07:13.299] | : . ' , recursive: 0
[08:07:13.299] | : . ' , Number of elements: 1
[08:07:13.299] | : . ' , elements: ‘...’
[08:07:13.300] | : . ' , 'obj' is DotDotDotList
[08:07:13.300] | : . ' , resolve(obj, ...) ...
[08:07:13.300] | : . ' , ; resolve() for DotDotDotList ...
[08:07:13.300] | : . ' , ; ` recursive: -1
[08:07:13.300] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:13.300] | : . ' , resolve(obj, ...) ... done
[08:07:13.300] | : . ' , resolved() for DotDotDotList ...
[08:07:13.300] | : . ' , ; Number of elements: 0
[08:07:13.300] | : . ' , ; Number of futures: 0
[08:07:13.300] | : . ' , resolved() for DotDotDotList ... done
[08:07:13.301] | : . ' , length: 0 (resolved future 1)
[08:07:13.301] | : . ' resolve() for FutureGlobals ... done
[08:07:13.301] | : . ' '...' content: [n=0] 
[08:07:13.301] | : . ' List of 1
[08:07:13.301] | : . '  $ ...: list()
[08:07:13.301] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:13.301] | : . '  - attr(*, "where")=List of 1
[08:07:13.301] | : . '   ..$ ...:<environment: 0x55ab9618fd40> 
[08:07:13.301] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.301] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:13.301] | : . '  - attr(*, "total_size")= num NA
[08:07:13.303] | : . Getting '...' globals ... done
[08:07:13.303] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:13.304] | : . List of 2
[08:07:13.304] | : .  $ ...future.FUN:function (x)  
[08:07:13.304] | : .  $ ...          : list()
[08:07:13.304] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:13.304] | : .  - attr(*, "where")=List of 2
[08:07:13.304] | : .   ..$ ...future.FUN:<environment: 0x55ab9618fd40> 
[08:07:13.304] | : .   ..$ ...          :<environment: 0x55ab9618fd40> 
[08:07:13.304] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.304] | : .  - attr(*, "resolved")= logi FALSE
[08:07:13.304] | : .  - attr(*, "total_size")= num 6008
[08:07:13.306] | : . Packages to be attached in all futures: [n=0] 
[08:07:13.306] | : getGlobalsAndPackagesXApply() ... done
[08:07:13.307] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.308] | : List of 5
[08:07:13.308] | :  $ ...future.FUN            :function (x)  
[08:07:13.308] | :  $ ...                      : list()
[08:07:13.308] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:13.308] | :  $ ...future.elements_ii    : NULL
[08:07:13.308] | :  $ ...future.seeds_ii       : NULL
[08:07:13.308] | :  $ ...future.globals.maxSize: NULL
[08:07:13.308] | :  - attr(*, "where")=List of 5
[08:07:13.308] | :   ..$ ...future.FUN            :<environment: 0x55ab9618fd40> 
[08:07:13.308] | :   ..$ ...                      :<environment: 0x55ab9618fd40> 
[08:07:13.308] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:13.308] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:13.308] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:13.308] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.308] | :  - attr(*, "resolved")= logi FALSE
[08:07:13.308] | :  - attr(*, "total_size")= num 6008
[08:07:13.312] | : Number of futures (= number of chunks): 1
[08:07:13.312] | : Launching 1 futures (chunks) ...
[08:07:13.312] | : Chunk #1 of 1 ...
[08:07:13.312] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:13.312] | : getGlobalsAndPackages() ...
[08:07:13.312] | : . Searching for globals ...
[08:07:13.312] | : . ' globals found: [0] 
[08:07:13.313] | : . Searching for globals ... done
[08:07:13.313] | : . globals: [0] <none>
[08:07:13.313] | : . packages: [0] <none>
[08:07:13.313] | : getGlobalsAndPackages() ... done
[08:07:13.313] | :    + additional globals found: [n=0] 
[08:07:13.313] | :    + additional namespaces needed: [n=0] 
[08:07:13.313] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:13.313] | :  - seeds: <none>
[08:07:13.313] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.313] | : future(..., label = ‘future_lapply-1’) ...
[08:07:13.314] | : . lazy: FALSE
[08:07:13.314] | : . stdout: NA
[08:07:13.314] | : . conditions: [n=1] ‘condition’
[08:07:13.314] | : . gc: FALSE
[08:07:13.314] | : . earlySignal: FALSE
[08:07:13.314] | : . getGlobalsAndPackages() ...
[08:07:13.314] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.314] | : . ' Resolving globals: FALSE
[08:07:13.314] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:13.314] | : . ' , {
[08:07:13.314] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:13.314] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:13.314] | : . ' ,     "# as a global variable                                         "
[08:07:13.314] | : . ' ,     do.call(function(...) {
[08:07:13.314] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:13.314] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:13.314] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:13.314] | : . ' ,         "# anonymous function.                                          "
[08:07:13.314] | : . ' ,         "#                                                              "
[08:07:13.314] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:13.314] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:13.314] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:13.314] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:13.314] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:13.314] | : . ' ,         repeat {
[08:07:13.314] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:13.314] | : . ' ,                 emptyenv())) 
[08:07:13.314] | : . ' ,                 break
[08:07:13.314] | : . ' ,             penv <- env
[08:07:13.314] | : . ' ,             env <- parent.env(env)
[08:07:13.314] | : . ' ,         }
[08:07:13.314] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:13.314] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:13.314] | : . ' ,         }
[08:07:13.314] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:13.314] | : . ' ,             !isNamespace(penv)) {
[08:07:13.314] | : . ' ,             parent.env(penv) <- environment()
[08:07:13.314] | : . ' ,         }
[08:07:13.314] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:13.314] | : . ' ,         {
[08:07:13.314] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:13.314] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:13.314] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:13.314] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:13.314] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:13.314] | : . ' ,             }
[08:07:13.314] | : . ' ,             {
[08:07:13.314] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:13.314] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:13.314] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:13.314] | : . ' ,                   {
[08:07:13.314] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:13.314] | : . ' ,                   }
[08:07:13.314] | : . ' ,                 })
[08:07:13.314] | : . ' ,             }
[08:07:13.314] | : . ' ,         }
[08:07:13.314] | : . ' ,     }, args = future.call.arguments)
[08:07:13.314] | : . ' , }
[08:07:13.315] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:13.315] | : . ' Search for packages associated with the globals ...
[08:07:13.315] | : . ' , Packages associated with globals: [0] 
[08:07:13.315] | : . ' , Packages: [0] 
[08:07:13.316] | : . ' Search for packages associated with the globals ... done
[08:07:13.316] | : . ' Packages after dropping 'base': [0] 
[08:07:13.316] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.316] | : . ' packages: [0] 
[08:07:13.316] | : . getGlobalsAndPackages() ... done
[08:07:13.316] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:13.316] | : . ' state: ‘created’
[08:07:13.316] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.317] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.317] | : . ' Using SequentialFutureBackend ...
[08:07:13.317] | : . ' , Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:13.317] | : . ' , Launching futures ...
[08:07:13.317] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:13.317] | : . ' , ; ` getFutureData() ...
[08:07:13.317] | : . ' , ; ` | getFutureCore() ...
[08:07:13.317] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:13.317] | : . ' , ; ` | getFutureCore() ... done
[08:07:13.317] | : . ' , ; ` | getFutureCapture() ...
[08:07:13.318] | : . ' , ; ` | getFutureCapture() ... done
[08:07:13.318] | : . ' , ; ` | getFutureContext() ...
[08:07:13.318] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.318] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:13.318] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.318] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:13.318] | : . ' , ; ` | getFutureContext() ... done
[08:07:13.318] | : . ' , ; ` getFutureData() ... done
[08:07:13.320] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.320] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:13.320] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.320] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.320] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:13.320] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:13.320] | : . ' , ; ` | : . New stack:
[08:07:13.320] | : . ' , ; ` | : . List of 1
[08:07:13.320] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.320] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.320] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:13.320] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.320] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.320] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.320] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:13.320] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.323] | : . ' , ; ` | : . Old stack:
[08:07:13.323] | : . ' , ; ` | : . List of 1
[08:07:13.323] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.323] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:13.323] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.323] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.323] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.323] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.327] | : . ' , ; ` | : . Not identical
[08:07:13.327] | : . ' , ; ` | : . all.equal() for future ...
[08:07:13.327] | : . ' , ; ` | : . ' List of 2
[08:07:13.327] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.327] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:13.327] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.327] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.327] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.327] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.327] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.332] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:13.332] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:13.332] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:13.332] | : . ' , ; ` | : List of future strategies:
[08:07:13.332] | : . ' , ; ` | : 1. sequential:
[08:07:13.332] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:13.332] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:13.332] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:13.333] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:13.333] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.333] | : . ' , ; ` assign_globals() ...
[08:07:13.333] | : . ' , ; ` List of 5
[08:07:13.333] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:13.333] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:13.333] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:13.333] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:13.333] | : . ' , ; `   ..$ : int 1
[08:07:13.333] | : . ' , ; `   ..$ : int 0
[08:07:13.333] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:13.333] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:13.333] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:13.333] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab9618fd40> 
[08:07:13.333] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab9618fd40> 
[08:07:13.333] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:13.333] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:13.333] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:13.333] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:13.333] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:13.333] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.333] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:13.338] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:13.339] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:13.339] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:13.339] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:13.339] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:13.339] | : . ' , ; ` assign_globals() ... done
[08:07:13.842] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.844] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.844] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:13.844] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:13.844] | : . ' , ; ` | : . ' New stack:
[08:07:13.844] | : . ' , ; ` | : . ' List of 1
[08:07:13.844] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.844] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.844] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.844] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.844] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.844] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.848] | : . ' , ; ` | : . ' Old stack:
[08:07:13.848] | : . ' , ; ` | : . ' List of 1
[08:07:13.848] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.848] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.848] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.848] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.848] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.848] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.851] | : . ' , ; ` | : . ' Identical
[08:07:13.851] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:13.851] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:13.851] | : . ' , ; ` | : . List of future strategies:
[08:07:13.851] | : . ' , ; ` | : . 1. sequential:
[08:07:13.851] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:13.851] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:13.851] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:13.852] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:13.852] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.852] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.852] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:13.852] | : . ' , ; ` signalConditions() ...
[08:07:13.852] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:13.853] | : . ' , ; ` | exclude = 
[08:07:13.853] | : . ' , ; ` | resignal = FALSE
[08:07:13.853] | : . ' , ; ` | Number of conditions: 6
[08:07:13.853] | : . ' , ; ` |  int 6
[08:07:13.853] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.853] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.854] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.854] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.854] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.854] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.854] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:13.854] | : . ' , ; ` signalConditions() ... done
[08:07:13.854] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:13.854] | : . ' , Launching futures ... done
[08:07:13.854] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:13.854] | : . ' Using SequentialFutureBackend ... done
[08:07:13.855] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:13.855] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:13.855] | : Created future:
[08:07:13.855] | : SequentialFuture:
[08:07:13.855] | : Label: ‘future_lapply-1’
[08:07:13.855] | : Expression:
[08:07:13.855] | : {
[08:07:13.855] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:13.855] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:13.855] | :     "# as a global variable                                         "
[08:07:13.855] | :     do.call(function(...) {
[08:07:13.855] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:13.855] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:13.855] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:13.855] | :         "# anonymous function.                                          "
[08:07:13.855] | :         "#                                                              "
[08:07:13.855] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:13.855] | :         "# function environment of FUN() to the calling environment.    "
[08:07:13.855] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:13.855] | :         "# global environment, which is where globals are written.      "
[08:07:13.855] | :         penv <- env <- environment(...future.FUN)
[08:07:13.855] | :         repeat {
[08:07:13.855] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:13.855] | :                 emptyenv())) 
[08:07:13.855] | :                 break
[08:07:13.855] | :             penv <- env
[08:07:13.855] | :             env <- parent.env(env)
[08:07:13.855] | :         }
[08:07:13.855] | :         if (identical(penv, globalenv())) {
[08:07:13.855] | :             environment(...future.FUN) <- environment()
[08:07:13.855] | :         }
[08:07:13.855] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:13.855] | :             !isNamespace(penv)) {
[08:07:13.855] | :             parent.env(penv) <- environment()
[08:07:13.855] | :         }
[08:07:13.855] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:13.855] | :         {
[08:07:13.855] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:13.855] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:13.855] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:13.855] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:13.855] | :                 on.exit(options(oopts), add = TRUE)
[08:07:13.855] | :             }
[08:07:13.855] | :             {
[08:07:13.855] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:13.855] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:13.855] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:13.855] | :                   {
[08:07:13.855] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:13.855] | :                   }
[08:07:13.855] | :                 })
[08:07:13.855] | :             }
[08:07:13.855] | :         }
[08:07:13.855] | :     }, args = future.call.arguments)
[08:07:13.855] | : }
[08:07:13.855] | : Globals: 5 objects totaling 6.13 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 55 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:13.855] | : Packages: <none>
[08:07:13.855] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:13.855] | : Capture standard output: NA
[08:07:13.855] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:13.855] | : Immediate condition classes: ‘immediateCondition’
[08:07:13.855] | : Lazy evaluation: FALSE
[08:07:13.855] | : Local evaluation: TRUE
[08:07:13.855] | : Asynchronous evaluation: TRUE
[08:07:13.855] | : Early signaling: FALSE
[08:07:13.855] | : Environment: R_GlobalEnv
[08:07:13.855] | : State: ‘finished’
[08:07:13.855] | : Resolved: TRUE
[08:07:13.855] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-3
[08:07:13.855] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:13.855] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:13.855] | : Value: 55 bytes of class ‘list’
[08:07:13.855] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:13.855] | : Duration: 0.5228796 secs (started 2025-06-17 08:07:13.318988)
[08:07:13.855] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:13.856] | : Chunk #1 of 1 ... DONE
[08:07:13.856] | : Launching 1 futures (chunks) ... DONE
[08:07:13.856] | : Resolving 1 futures (chunks) ...
[08:07:13.857] | : value() for list ...
[08:07:13.857] | : . recursive: 0
[08:07:13.857] | : . reduce: FALSE
[08:07:13.857] | : . length: 1

[08:07:13.857] | : . Number of remaining objects: 1
[08:07:13.857] | : . checking value #1:
[08:07:13.857] | : . 'obj' is SequentialFuture
[08:07:13.857] | : . resolved() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.857] | : . ' state: ‘finished’
[08:07:13.858] | : . ' run: TRUE
[08:07:13.858] | : . ' result: ‘FutureResult’
[08:07:13.858] | : . resolved() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.858] | : . SequentialFuture #1
[08:07:13.858] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:13.858] | : . ' nx: 1
[08:07:13.858] | : . ' relay: TRUE
[08:07:13.858] | : . ' stdout: TRUE
[08:07:13.858] | : . ' signal: TRUE
[08:07:13.858] | : . ' resignal: FALSE
[08:07:13.859] | : . ' force: TRUE
[08:07:13.859] | : . ' relayed: [n=1] FALSE
[08:07:13.859] | : . ' queued futures: [n=1] FALSE
[08:07:13.859] | : . ' until=1
[08:07:13.859] | : . ' relaying element #1
[08:07:13.859] | : . ' value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.859] | : . ' , signalConditions() ...
[08:07:13.859] | : . ' , ; include = ‘immediateCondition’
[08:07:13.859] | : . ' , ; exclude = 
[08:07:13.859] | : . ' , ; resignal = FALSE
[08:07:13.860] | : . ' , ; Number of conditions: 6
[08:07:13.860] | : . ' , ;  int 6
[08:07:13.860] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.860] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.860] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.860] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.860] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.861] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.861] | : . ' , ; Drop signaled conditions: 0
[08:07:13.861] | : . ' , signalConditions() ... done
[08:07:13.861] | : . ' , relay stdout ...
[08:07:13.861] | : . ' , relay stdout ... done
[08:07:13.862] | : . ' , check for misuse ...
[08:07:13.863] | : . ' , check for misuse ... done
[08:07:13.863] | : . ' value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.863] | : . ' signalConditions() ...
[08:07:13.863] | : . ' , include = ‘immediateCondition’
[08:07:13.863] | : . ' , exclude = 
[08:07:13.863] | : . ' , resignal = FALSE
[08:07:13.863] | : . ' , Number of conditions: 6
[08:07:13.863] | : . ' ,  int 6
[08:07:13.864] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.864] | : . ' , Drop signaled conditions: 0
[08:07:13.864] | : . ' signalConditions() ... done
[08:07:13.865] | : . ' signalConditions() ...
[08:07:13.865] | : . ' , include = ‘condition’
[08:07:13.865] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:13.865] | : . ' , resignal = TRUE
[08:07:13.865] | : . ' , Number of conditions: 6
[08:07:13.865] | : . ' ,  int 6
[08:07:13.865] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.866] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` attachPackages() ...
[08:07:13.866] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.866] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:13.866] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.866] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` attachPackages() ... done
[08:07:13.866] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.866] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` attachPackages() ...
[08:07:13.866] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.866] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` | packages: [n=0] 
[08:07:13.867] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:13.867] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.319] | : . ' , ; ` attachPackages() ... done
[08:07:13.867] | : . ' , Drop signaled conditions: 6
[08:07:13.867] | : . ' signalConditions() ... done
[08:07:13.867] | : . ' relayed: [n=1] TRUE
[08:07:13.867] | : . ' queued futures: [n=1] TRUE
[08:07:13.867] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:13.867] | : . value(<SequentialFuture>, ...) ...
[08:07:13.867] | : . value(<SequentialFuture>, ...) ... done
[08:07:13.868] | : . value() for SequentialFuture (‘future_lapply-1’) ...
[08:07:13.868] | : . ' signalConditions() ...
[08:07:13.868] | : . ' , include = ‘immediateCondition’
[08:07:13.868] | : . ' , exclude = 
[08:07:13.868] | : . ' , resignal = FALSE
[08:07:13.868] | : . ' , Number of conditions: 0
[08:07:13.868] | : . ' ,  int 0
[08:07:13.869] | : . ' signalConditions() ... done
[08:07:13.869] | : . ' check for misuse ...
[08:07:13.869] | : . ' check for misuse ... done
[08:07:13.869] | : . value() for SequentialFuture (‘future_lapply-1’) ... done
[08:07:13.869] | : . value: <list>
[08:07:13.869] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:13.869] | : . ' nx: 1
[08:07:13.869] | : . ' relay: TRUE
[08:07:13.869] | : . ' stdout: TRUE
[08:07:13.869] | : . ' signal: TRUE
[08:07:13.869] | : . ' resignal: FALSE
[08:07:13.870] | : . ' force: TRUE
[08:07:13.870] | : . ' relayed: [n=1] TRUE
[08:07:13.870] | : . ' queued futures: [n=1] TRUE
[08:07:13.870] | : . ' until=1
[08:07:13.870] | : . ' relayed: [n=1] TRUE
[08:07:13.870] | : . ' queued futures: [n=1] TRUE
[08:07:13.870] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:13.870] | : . resolve() for SequentialFuture ...
[08:07:13.870] | : . resolve() for SequentialFuture ... done
[08:07:13.871] | : . length: 0 (resolved future 1)
[08:07:13.871] | : value() for list ... done
[08:07:13.871] | : Relaying remaining futures ...
[08:07:13.871] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:13.871] | : . ' nx: 1
[08:07:13.871] | : . ' relay: TRUE
[08:07:13.871] | : . ' stdout: TRUE
[08:07:13.871] | : . ' signal: TRUE
[08:07:13.871] | : . ' resignal: FALSE
[08:07:13.871] | : . ' force: TRUE
[08:07:13.871] | : . ' relayed: [n=1] TRUE
[08:07:13.872] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:13.872] | : . ' relayed: [n=1] TRUE
[08:07:13.872] | : . ' queued futures: [n=1] TRUE
[08:07:13.872] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:13.872] | : Relaying remaining futures ... done
[08:07:13.872] | future_lapply() -> future_xapply() ... done
[08:07:13.872] |  - Number of value chunks collected: 1
[08:07:13.872] | Resolving 1 futures (chunks) ... DONE
[08:07:13.872] | Reducing values from 1 chunks ...
[08:07:13.872] |  - Number of values collected after concatenation: 2
[08:07:13.872] |  - Number of values expected: 2
[08:07:13.873] | Reducing values from 1 chunks ... DONE
[08:07:13.873] future_lapply() ... done

* future_lapply(x, ..., future.stdout = NA) ... DONE
* future_mapply(x, ..., future.stdout = FALSE) ...
[08:07:13.873] future_mapply() ...
[08:07:13.873] | future_mapply() -> future_xapply() ...
[08:07:13.873] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.873] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.874] | : Number of chunks: 1
[08:07:13.874] | : getGlobalsAndPackagesXApply() ...
[08:07:13.874] | : . future.globals: TRUE
[08:07:13.874] | : . getGlobalsAndPackages() ...
[08:07:13.874] | : . ' Searching for globals ...
[08:07:13.883] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:13.883] | : . ' Searching for globals ... done
[08:07:13.883] | : . ' Resolving globals: FALSE
[08:07:13.883] | : . ' Search for packages associated with the globals ...
[08:07:13.883] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:13.884] | : . ' , Packages: [1] ‘base’
[08:07:13.884] | : . ' Search for packages associated with the globals ... done
[08:07:13.884] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:13.884] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:13.884] | : . ' Packages after dropping 'base': [0] 
[08:07:13.885] | : . ' globals: [1] ‘FUN’
[08:07:13.885] | : . ' packages: [0] 
[08:07:13.885] | : . getGlobalsAndPackages() ... done
[08:07:13.885] | : . globals found/used: [n=1] ‘FUN’
[08:07:13.885] | : . needed namespaces: [n=0] 
[08:07:13.885] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:13.885] | : . List of 2
[08:07:13.885] | : .  $ ...future.FUN:function (x, y)  
[08:07:13.885] | : .  $ MoreArgs     : NULL
[08:07:13.885] | : .  - attr(*, "where")=List of 2
[08:07:13.885] | : .   ..$ ...future.FUN:<environment: 0x55ab95ea9f48> 
[08:07:13.885] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:13.885] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.885] | : .  - attr(*, "resolved")= logi FALSE
[08:07:13.885] | : .  - attr(*, "total_size")= num NA
[08:07:13.888] | : . Packages to be attached in all futures: [n=0] 
[08:07:13.888] | : getGlobalsAndPackagesXApply() ... done
[08:07:13.888] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.888] | : List of 5
[08:07:13.888] | :  $ ...future.FUN            :function (x, y)  
[08:07:13.888] | :  $ MoreArgs                 : NULL
[08:07:13.888] | :  $ ...future.elements_ii    : NULL
[08:07:13.888] | :  $ ...future.seeds_ii       : NULL
[08:07:13.888] | :  $ ...future.globals.maxSize: NULL
[08:07:13.888] | :  - attr(*, "where")=List of 5
[08:07:13.888] | :   ..$ ...future.FUN            :<environment: 0x55ab95ea9f48> 
[08:07:13.888] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:13.888] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:13.888] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:13.888] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:13.888] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.888] | :  - attr(*, "resolved")= logi FALSE
[08:07:13.888] | :  - attr(*, "total_size")= num NA
[08:07:13.892] | : Number of futures (= number of chunks): 1
[08:07:13.892] | : Launching 1 futures (chunks) ...
[08:07:13.892] | : Chunk #1 of 1 ...
[08:07:13.892] | :  - Finding globals in '...' for chunk #1 ...
[08:07:13.892] | : getGlobalsAndPackages() ...
[08:07:13.892] | : . Searching for globals ...
[08:07:13.893] | : . ' globals found: [0] 
[08:07:13.893] | : . Searching for globals ... done
[08:07:13.893] | : . globals: [0] <none>
[08:07:13.893] | : . packages: [0] <none>
[08:07:13.893] | : getGlobalsAndPackages() ... done
[08:07:13.893] | :    + additional globals found: [n=0] 
[08:07:13.893] | :    + additional namespaces needed: [n=0] 
[08:07:13.894] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:13.895] | :  - seeds: <none>
[08:07:13.895] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.895] | : future(..., label = ‘future_mapply-1’) ...
[08:07:13.895] | : . lazy: FALSE
[08:07:13.895] | : . stdout: FALSE
[08:07:13.895] | : . conditions: [n=1] ‘condition’
[08:07:13.895] | : . gc: FALSE
[08:07:13.895] | : . earlySignal: FALSE
[08:07:13.895] | : . getGlobalsAndPackages() ...
[08:07:13.895] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.896] | : . ' Resolving globals: FALSE
[08:07:13.896] | : . ' Search for packages associated with the globals ...
[08:07:13.896] | : . ' , Packages associated with globals: [0] 
[08:07:13.896] | : . ' , Packages: [0] 
[08:07:13.896] | : . ' Search for packages associated with the globals ... done
[08:07:13.896] | : . ' Packages after dropping 'base': [0] 
[08:07:13.896] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:13.897] | : . ' packages: [0] 
[08:07:13.897] | : . getGlobalsAndPackages() ... done
[08:07:13.897] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:13.897] | : . ' state: ‘created’
[08:07:13.897] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.897] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.897] | : . ' Using SequentialFutureBackend ...
[08:07:13.897] | : . ' , Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:07:13.897] | : . ' , Launching futures ...
[08:07:13.898] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:13.898] | : . ' , ; ` getFutureData() ...
[08:07:13.898] | : . ' , ; ` | getFutureCore() ...
[08:07:13.898] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:13.898] | : . ' , ; ` | getFutureCore() ... done
[08:07:13.898] | : . ' , ; ` | getFutureCapture() ...
[08:07:13.898] | : . ' , ; ` | getFutureCapture() ... done
[08:07:13.898] | : . ' , ; ` | getFutureContext() ...
[08:07:13.898] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.899] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:13.899] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.899] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:13.899] | : . ' , ; ` | getFutureContext() ... done
[08:07:13.899] | : . ' , ; ` getFutureData() ... done
[08:07:13.900] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:13.900] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:13.900] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:13.901] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:13.901] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:13.901] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:13.901] | : . ' , ; ` | : . New stack:
[08:07:13.901] | : . ' , ; ` | : . List of 1
[08:07:13.901] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.901] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.901] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:13.901] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.901] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.901] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.901] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:13.901] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.904] | : . ' , ; ` | : . Old stack:
[08:07:13.904] | : . ' , ; ` | : . List of 1
[08:07:13.904] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.904] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:13.904] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.904] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.904] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.904] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:13.907] | : . ' , ; ` | : . Not identical
[08:07:13.907] | : . ' , ; ` | : . all.equal() for future ...
[08:07:13.907] | : . ' , ; ` | : . ' List of 2
[08:07:13.907] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.907] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:13.907] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.907] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:13.907] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:13.907] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:13.907] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:13.939] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:13.940] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:13.940] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:13.940] | : . ' , ; ` | : List of future strategies:
[08:07:13.940] | : . ' , ; ` | : 1. sequential:
[08:07:13.940] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:13.940] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:13.940] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:13.940] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:13.940] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:13.940] | : . ' , ; ` assign_globals() ...
[08:07:13.941] | : . ' , ; ` List of 5
[08:07:13.941] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:13.941] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:13.941] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:13.941] | : . ' , ; `   ..$ :List of 2
[08:07:13.941] | : . ' , ; `   .. ..$ : int 1
[08:07:13.941] | : . ' , ; `   .. ..$ : int 0
[08:07:13.941] | : . ' , ; `   ..$ :List of 2
[08:07:13.941] | : . ' , ; `   .. ..$ : int 0
[08:07:13.941] | : . ' , ; `   .. ..$ : int 1
[08:07:13.941] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:13.941] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:13.941] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:13.941] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab95ea9f48> 
[08:07:13.941] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:13.941] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:13.941] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:13.941] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:13.941] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:13.941] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:13.941] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:13.941] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:13.946] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:13.947] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:13.947] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:13.947] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:13.947] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:13.947] | : . ' , ; ` assign_globals() ... done
[08:07:14.450] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:14.450] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:14.450] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:14.450] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:14.451] | : . ' , ; ` | : . ' New stack:
[08:07:14.451] | : . ' , ; ` | : . ' List of 1
[08:07:14.451] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.451] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:14.451] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:14.451] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.451] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.451] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:14.454] | : . ' , ; ` | : . ' Old stack:
[08:07:14.454] | : . ' , ; ` | : . ' List of 1
[08:07:14.454] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.454] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:14.454] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:14.454] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.454] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.454] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:14.459] | : . ' , ; ` | : . ' Identical
[08:07:14.459] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:14.459] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:14.459] | : . ' , ; ` | : . List of future strategies:
[08:07:14.459] | : . ' , ; ` | : . 1. sequential:
[08:07:14.459] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:14.459] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:14.459] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:14.460] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:14.460] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:14.460] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:14.460] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:14.461] | : . ' , ; ` signalConditions() ...
[08:07:14.461] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:14.461] | : . ' , ; ` | exclude = 
[08:07:14.461] | : . ' , ; ` | resignal = FALSE
[08:07:14.461] | : . ' , ; ` | Number of conditions: 6
[08:07:14.461] | : . ' , ; ` |  int 6
[08:07:14.462] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.462] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:14.462] | : . ' , ; ` signalConditions() ... done
[08:07:14.462] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:14.463] | : . ' , Launching futures ... done
[08:07:14.463] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:14.463] | : . ' Using SequentialFutureBackend ... done
[08:07:14.463] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:14.463] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:14.463] | : Created future:
[08:07:14.463] | : SequentialFuture:
[08:07:14.463] | : Label: ‘future_mapply-1’
[08:07:14.463] | : Expression:
[08:07:14.463] | : {
[08:07:14.463] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:14.463] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:14.463] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:14.463] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:14.463] | :         on.exit(options(oopts), add = TRUE)
[08:07:14.463] | :     }
[08:07:14.463] | :     {
[08:07:14.463] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:14.463] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:14.463] | :         do.call(mapply, args = args)
[08:07:14.463] | :     }
[08:07:14.463] | : }
[08:07:14.463] | : Globals: 5 objects totaling 6.53 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 95 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:14.463] | : Packages: <none>
[08:07:14.463] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:14.463] | : Capture standard output: FALSE
[08:07:14.463] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:14.463] | : Immediate condition classes: ‘immediateCondition’
[08:07:14.463] | : Lazy evaluation: FALSE
[08:07:14.463] | : Local evaluation: TRUE
[08:07:14.463] | : Asynchronous evaluation: TRUE
[08:07:14.463] | : Early signaling: FALSE
[08:07:14.463] | : Environment: R_GlobalEnv
[08:07:14.463] | : State: ‘finished’
[08:07:14.463] | : Resolved: TRUE
[08:07:14.463] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-4
[08:07:14.463] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:14.463] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:14.463] | : Value: 184 bytes of class ‘list’
[08:07:14.463] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:14.463] | : Duration: 0.5504715 secs (started 2025-06-17 08:07:13.899582)
[08:07:14.463] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:14.464] | : Chunk #1 of 1 ... DONE
[08:07:14.464] | : Launching 1 futures (chunks) ... DONE
[08:07:14.465] | : Resolving 1 futures (chunks) ...
[08:07:14.465] | : value() for list ...
[08:07:14.465] | : . recursive: 0
[08:07:14.465] | : . reduce: FALSE
[08:07:14.465] | : . length: 1

[08:07:14.465] | : . Number of remaining objects: 1
[08:07:14.465] | : . checking value #1:
[08:07:14.465] | : . 'obj' is SequentialFuture
[08:07:14.465] | : . resolved() for SequentialFuture (‘future_mapply-1’) ...
[08:07:14.466] | : . ' state: ‘finished’
[08:07:14.466] | : . ' run: TRUE
[08:07:14.466] | : . ' result: ‘FutureResult’
[08:07:14.466] | : . resolved() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:14.466] | : . SequentialFuture #1
[08:07:14.466] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:14.466] | : . ' nx: 1
[08:07:14.466] | : . ' relay: TRUE
[08:07:14.466] | : . ' stdout: TRUE
[08:07:14.466] | : . ' signal: TRUE
[08:07:14.467] | : . ' resignal: FALSE
[08:07:14.467] | : . ' force: TRUE
[08:07:14.467] | : . ' relayed: [n=1] FALSE
[08:07:14.467] | : . ' queued futures: [n=1] FALSE
[08:07:14.467] | : . ' until=1
[08:07:14.467] | : . ' relaying element #1
[08:07:14.467] | : . ' value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:14.467] | : . ' , signalConditions() ...
[08:07:14.467] | : . ' , ; include = ‘immediateCondition’
[08:07:14.467] | : . ' , ; exclude = 
[08:07:14.468] | : . ' , ; resignal = FALSE
[08:07:14.468] | : . ' , ; Number of conditions: 6
[08:07:14.468] | : . ' , ;  int 6
[08:07:14.468] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.468] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.468] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.469] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.469] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.469] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.469] | : . ' , ; Drop signaled conditions: 0
[08:07:14.469] | : . ' , signalConditions() ... done
[08:07:14.469] | : . ' , relay stdout ...
[08:07:14.469] | : . ' , relay stdout ... done
[08:07:14.469] | : . ' , check for misuse ...
[08:07:14.469] | : . ' , check for misuse ... done
[08:07:14.469] | : . ' value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:14.470] | : . ' signalConditions() ...
[08:07:14.470] | : . ' , include = ‘immediateCondition’
[08:07:14.470] | : . ' , exclude = 
[08:07:14.470] | : . ' , resignal = FALSE
[08:07:14.470] | : . ' , Number of conditions: 6
[08:07:14.470] | : . ' ,  int 6
[08:07:14.470] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.471] | : . ' , Drop signaled conditions: 0
[08:07:14.471] | : . ' signalConditions() ... done
[08:07:14.471] | : . ' signalConditions() ...
[08:07:14.471] | : . ' , include = ‘condition’
[08:07:14.472] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:14.472] | : . ' , resignal = TRUE
[08:07:14.472] | : . ' , Number of conditions: 6
[08:07:14.472] | : . ' ,  int 6
[08:07:14.472] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.472] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.899] | : . ' , ; ` attachPackages() ...
[08:07:14.472] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.473] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.899] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:14.473] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.473] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.899] | : . ' , ; ` attachPackages() ... done
[08:07:14.473] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.473] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.900] | : . ' , ; ` attachPackages() ...
[08:07:14.473] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.473] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.900] | : . ' , ; ` | packages: [n=0] 
[08:07:14.473] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:14.473] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:13.900] | : . ' , ; ` attachPackages() ... done
[08:07:14.474] | : . ' , Drop signaled conditions: 6
[08:07:14.474] | : . ' signalConditions() ... done
[08:07:14.474] | : . ' relayed: [n=1] TRUE
[08:07:14.474] | : . ' queued futures: [n=1] TRUE
[08:07:14.474] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:14.474] | : . value(<SequentialFuture>, ...) ...
[08:07:14.474] | : . value(<SequentialFuture>, ...) ... done
[08:07:14.474] | : . value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:14.474] | : . ' signalConditions() ...
[08:07:14.475] | : . ' , include = ‘immediateCondition’
[08:07:14.475] | : . ' , exclude = 
[08:07:14.475] | : . ' , resignal = FALSE
[08:07:14.475] | : . ' , Number of conditions: 0
[08:07:14.475] | : . ' ,  int 0
[08:07:14.475] | : . ' signalConditions() ... done
[08:07:14.475] | : . ' check for misuse ...
[08:07:14.476] | : . ' check for misuse ... done
[08:07:14.476] | : . value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:14.476] | : . value: <list>
[08:07:14.476] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:14.476] | : . ' nx: 1
[08:07:14.476] | : . ' relay: TRUE
[08:07:14.476] | : . ' stdout: TRUE
[08:07:14.476] | : . ' signal: TRUE
[08:07:14.476] | : . ' resignal: FALSE
[08:07:14.476] | : . ' force: TRUE
[08:07:14.476] | : . ' relayed: [n=1] TRUE
[08:07:14.477] | : . ' queued futures: [n=1] TRUE
[08:07:14.477] | : . ' until=1
[08:07:14.477] | : . ' relayed: [n=1] TRUE
[08:07:14.477] | : . ' queued futures: [n=1] TRUE
[08:07:14.477] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:14.477] | : . resolve() for SequentialFuture ...
[08:07:14.477] | : . resolve() for SequentialFuture ... done
[08:07:14.477] | : . length: 0 (resolved future 1)
[08:07:14.478] | : value() for list ... done
[08:07:14.478] | : Relaying remaining futures ...
[08:07:14.479] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:14.479] | : . ' nx: 1
[08:07:14.479] | : . ' relay: TRUE
[08:07:14.479] | : . ' stdout: TRUE
[08:07:14.479] | : . ' signal: TRUE
[08:07:14.479] | : . ' resignal: FALSE
[08:07:14.479] | : . ' force: TRUE
[08:07:14.479] | : . ' relayed: [n=1] TRUE
[08:07:14.479] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:14.479] | : . ' relayed: [n=1] TRUE
[08:07:14.480] | : . ' queued futures: [n=1] TRUE
[08:07:14.480] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:14.480] | : Relaying remaining futures ... done
[08:07:14.480] | future_mapply() -> future_xapply() ... done
[08:07:14.480] |  - Number of value chunks collected: 1
[08:07:14.480] | Resolving 1 futures (chunks) ... DONE
[08:07:14.480] | Reducing values from 1 chunks ...
[08:07:14.480] |  - Number of values collected after concatenation: 2
[08:07:14.480] |  - Number of values expected: 2
[08:07:14.480] | Reducing values from 1 chunks ... DONE
[08:07:14.480] future_mapply() ... done

* future_mapply(x, ..., future.stdout = FALSE) ... DONE
* future_mapply(x, ..., future.stdout = TRUE) ...
[08:07:14.481] future_mapply() ...
[08:07:14.481] | future_mapply() -> future_xapply() ...
[08:07:14.481] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:14.481] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:14.481] | : Number of chunks: 1
[08:07:14.481] | : getGlobalsAndPackagesXApply() ...
[08:07:14.482] | : . future.globals: TRUE
[08:07:14.482] | : . getGlobalsAndPackages() ...
[08:07:14.482] | : . ' Searching for globals ...
[08:07:14.490] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:14.490] | : . ' Searching for globals ... done
[08:07:14.490] | : . ' Resolving globals: FALSE
[08:07:14.490] | : . ' Search for packages associated with the globals ...
[08:07:14.490] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:14.490] | : . ' , Packages: [1] ‘base’
[08:07:14.491] | : . ' Search for packages associated with the globals ... done
[08:07:14.491] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:14.491] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:14.491] | : . ' Packages after dropping 'base': [0] 
[08:07:14.491] | : . ' globals: [1] ‘FUN’
[08:07:14.491] | : . ' packages: [0] 
[08:07:14.492] | : . getGlobalsAndPackages() ... done
[08:07:14.492] | : . globals found/used: [n=1] ‘FUN’
[08:07:14.492] | : . needed namespaces: [n=0] 
[08:07:14.492] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:14.492] | : . List of 2
[08:07:14.492] | : .  $ ...future.FUN:function (x, y)  
[08:07:14.492] | : .  $ MoreArgs     : NULL
[08:07:14.492] | : .  - attr(*, "where")=List of 2
[08:07:14.492] | : .   ..$ ...future.FUN:<environment: 0x55ab9554b1f0> 
[08:07:14.492] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:14.492] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:14.492] | : .  - attr(*, "resolved")= logi FALSE
[08:07:14.492] | : .  - attr(*, "total_size")= num NA
[08:07:14.495] | : . Packages to be attached in all futures: [n=0] 
[08:07:14.496] | : getGlobalsAndPackagesXApply() ... done
[08:07:14.496] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:14.496] | : List of 5
[08:07:14.496] | :  $ ...future.FUN            :function (x, y)  
[08:07:14.496] | :  $ MoreArgs                 : NULL
[08:07:14.496] | :  $ ...future.elements_ii    : NULL
[08:07:14.496] | :  $ ...future.seeds_ii       : NULL
[08:07:14.496] | :  $ ...future.globals.maxSize: NULL
[08:07:14.496] | :  - attr(*, "where")=List of 5
[08:07:14.496] | :   ..$ ...future.FUN            :<environment: 0x55ab9554b1f0> 
[08:07:14.496] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:14.496] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:14.496] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:14.496] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:14.496] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:14.496] | :  - attr(*, "resolved")= logi FALSE
[08:07:14.496] | :  - attr(*, "total_size")= num NA
[08:07:14.500] | : Number of futures (= number of chunks): 1
[08:07:14.500] | : Launching 1 futures (chunks) ...
[08:07:14.500] | : Chunk #1 of 1 ...
[08:07:14.500] | :  - Finding globals in '...' for chunk #1 ...
[08:07:14.500] | : getGlobalsAndPackages() ...
[08:07:14.500] | : . Searching for globals ...
[08:07:14.501] | : . ' globals found: [0] 
[08:07:14.501] | : . Searching for globals ... done
[08:07:14.501] | : . globals: [0] <none>
[08:07:14.501] | : . packages: [0] <none>
[08:07:14.501] | : getGlobalsAndPackages() ... done
[08:07:14.501] | :    + additional globals found: [n=0] 
[08:07:14.501] | :    + additional namespaces needed: [n=0] 
[08:07:14.501] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:14.502] | :  - seeds: <none>
[08:07:14.502] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:14.502] | : future(..., label = ‘future_mapply-1’) ...
[08:07:14.502] | : . lazy: FALSE
[08:07:14.502] | : . stdout: TRUE
[08:07:14.502] | : . conditions: [n=1] ‘condition’
[08:07:14.502] | : . gc: FALSE
[08:07:14.502] | : . earlySignal: FALSE
[08:07:14.502] | : . getGlobalsAndPackages() ...
[08:07:14.502] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:14.502] | : . ' Resolving globals: FALSE
[08:07:14.503] | : . ' Search for packages associated with the globals ...
[08:07:14.503] | : . ' , Packages associated with globals: [0] 
[08:07:14.503] | : . ' , Packages: [0] 
[08:07:14.503] | : . ' Search for packages associated with the globals ... done
[08:07:14.503] | : . ' Packages after dropping 'base': [0] 
[08:07:14.503] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:14.504] | : . ' packages: [0] 
[08:07:14.504] | : . getGlobalsAndPackages() ... done
[08:07:14.504] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:14.504] | : . ' state: ‘created’
[08:07:14.504] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:14.504] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:14.504] | : . ' Using SequentialFutureBackend ...
[08:07:14.504] | : . ' , Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:14.505] | : . ' , Launching futures ...
[08:07:14.505] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:14.505] | : . ' , ; ` getFutureData() ...
[08:07:14.505] | : . ' , ; ` | getFutureCore() ...
[08:07:14.505] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:14.505] | : . ' , ; ` | getFutureCore() ... done
[08:07:14.505] | : . ' , ; ` | getFutureCapture() ...
[08:07:14.505] | : . ' , ; ` | getFutureCapture() ... done
[08:07:14.505] | : . ' , ; ` | getFutureContext() ...
[08:07:14.505] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:14.506] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:14.506] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:14.506] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:14.506] | : . ' , ; ` | getFutureContext() ... done
[08:07:14.506] | : . ' , ; ` getFutureData() ... done
[08:07:14.507] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:14.507] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:14.508] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:14.508] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:14.508] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:14.508] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:14.508] | : . ' , ; ` | : . New stack:
[08:07:14.508] | : . ' , ; ` | : . List of 1
[08:07:14.508] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.508] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.508] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:14.508] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.508] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.508] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.508] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:14.508] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:14.511] | : . ' , ; ` | : . Old stack:
[08:07:14.511] | : . ' , ; ` | : . List of 1
[08:07:14.511] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.511] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:14.511] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:14.511] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.511] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.511] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:14.515] | : . ' , ; ` | : . Not identical
[08:07:14.515] | : . ' , ; ` | : . all.equal() for future ...
[08:07:14.515] | : . ' , ; ` | : . ' List of 2
[08:07:14.515] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.515] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:14.515] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.515] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:14.515] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:14.515] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:14.515] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:14.520] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:14.520] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:14.520] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:14.520] | : . ' , ; ` | : List of future strategies:
[08:07:14.520] | : . ' , ; ` | : 1. sequential:
[08:07:14.520] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:14.520] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:14.520] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:14.521] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:14.521] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:14.521] | : . ' , ; ` assign_globals() ...
[08:07:14.521] | : . ' , ; ` List of 5
[08:07:14.521] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:14.521] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:14.521] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:14.521] | : . ' , ; `   ..$ :List of 2
[08:07:14.521] | : . ' , ; `   .. ..$ : int 1
[08:07:14.521] | : . ' , ; `   .. ..$ : int 0
[08:07:14.521] | : . ' , ; `   ..$ :List of 2
[08:07:14.521] | : . ' , ; `   .. ..$ : int 0
[08:07:14.521] | : . ' , ; `   .. ..$ : int 1
[08:07:14.521] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:14.521] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:14.521] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:14.521] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab9554b1f0> 
[08:07:14.521] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:14.521] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:14.521] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:14.521] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:14.521] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:14.521] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:14.521] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:14.521] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:14.527] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:14.527] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:14.527] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:14.527] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:14.527] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:14.527] | : . ' , ; ` assign_globals() ... done
[08:07:15.030] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.030] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.031] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.031] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:15.031] | : . ' , ; ` | : . ' New stack:
[08:07:15.031] | : . ' , ; ` | : . ' List of 1
[08:07:15.031] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.031] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.031] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.031] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.031] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.031] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.036] | : . ' , ; ` | : . ' Old stack:
[08:07:15.036] | : . ' , ; ` | : . ' List of 1
[08:07:15.036] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.036] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.036] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.036] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.036] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.036] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.040] | : . ' , ; ` | : . ' Identical
[08:07:15.040] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:15.040] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:15.040] | : . ' , ; ` | : . List of future strategies:
[08:07:15.040] | : . ' , ; ` | : . 1. sequential:
[08:07:15.040] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:15.040] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:15.040] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:15.040] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.040] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.041] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.041] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:15.041] | : . ' , ; ` signalConditions() ...
[08:07:15.041] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:15.041] | : . ' , ; ` | exclude = 
[08:07:15.041] | : . ' , ; ` | resignal = FALSE
[08:07:15.041] | : . ' , ; ` | Number of conditions: 6
[08:07:15.042] | : . ' , ; ` |  int 6
[08:07:15.042] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.042] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.042] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.042] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.042] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.043] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.043] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:15.043] | : . ' , ; ` signalConditions() ... done
[08:07:15.043] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:15.043] | : . ' , Launching futures ... done
[08:07:15.043] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:15.043] | : . ' Using SequentialFutureBackend ... done
[08:07:15.043] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:15.043] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:15.044] | : Created future:
[08:07:15.044] | : SequentialFuture:
[08:07:15.044] | : Label: ‘future_mapply-1’
[08:07:15.044] | : Expression:
[08:07:15.044] | : {
[08:07:15.044] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:15.044] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.044] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.044] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.044] | :         on.exit(options(oopts), add = TRUE)
[08:07:15.044] | :     }
[08:07:15.044] | :     {
[08:07:15.044] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:15.044] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:15.044] | :         do.call(mapply, args = args)
[08:07:15.044] | :     }
[08:07:15.044] | : }
[08:07:15.044] | : Globals: 5 objects totaling 6.53 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 95 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:15.044] | : Packages: <none>
[08:07:15.044] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:15.044] | : Capture standard output: TRUE
[08:07:15.044] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:15.044] | : Immediate condition classes: ‘immediateCondition’
[08:07:15.044] | : Lazy evaluation: FALSE
[08:07:15.044] | : Local evaluation: TRUE
[08:07:15.044] | : Asynchronous evaluation: TRUE
[08:07:15.044] | : Early signaling: FALSE
[08:07:15.044] | : Environment: R_GlobalEnv
[08:07:15.044] | : State: ‘finished’
[08:07:15.044] | : Resolved: TRUE
[08:07:15.044] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-5
[08:07:15.044] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:15.044] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:15.044] | : Value: 184 bytes of class ‘list’
[08:07:15.044] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:15.044] | : Duration: 0.5236309 secs (started 2025-06-17 08:07:14.506676)
[08:07:15.044] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:15.045] | : Chunk #1 of 1 ... DONE
[08:07:15.045] | : Launching 1 futures (chunks) ... DONE
[08:07:15.045] | : Resolving 1 futures (chunks) ...
[08:07:15.045] | : value() for list ...
[08:07:15.045] | : . recursive: 0
[08:07:15.045] | : . reduce: FALSE
[08:07:15.045] | : . length: 1

[08:07:15.046] | : . Number of remaining objects: 1
[08:07:15.046] | : . checking value #1:
[08:07:15.046] | : . 'obj' is SequentialFuture
[08:07:15.046] | : . resolved() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.046] | : . ' state: ‘finished’
[08:07:15.046] | : . ' run: TRUE
[08:07:15.046] | : . ' result: ‘FutureResult’
[08:07:15.046] | : . resolved() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.046] | : . SequentialFuture #1
[08:07:15.046] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:15.047] | : . ' nx: 1
[08:07:15.047] | : . ' relay: TRUE
[08:07:15.047] | : . ' stdout: TRUE
[08:07:15.047] | : . ' signal: TRUE
[08:07:15.047] | : . ' resignal: FALSE
[08:07:15.047] | : . ' force: TRUE
[08:07:15.047] | : . ' relayed: [n=1] FALSE
[08:07:15.047] | : . ' queued futures: [n=1] FALSE
[08:07:15.047] | : . ' until=1
[08:07:15.047] | : . ' relaying element #1
[08:07:15.048] | : . ' value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.048] | : . ' , signalConditions() ...
[08:07:15.048] | : . ' , ; include = ‘immediateCondition’
[08:07:15.048] | : . ' , ; exclude = 
[08:07:15.048] | : . ' , ; resignal = FALSE
[08:07:15.048] | : . ' , ; Number of conditions: 6
[08:07:15.048] | : . ' , ;  int 6
[08:07:15.049] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.049] | : . ' , ; Drop signaled conditions: 0
[08:07:15.049] | : . ' , signalConditions() ... done
[08:07:15.049] | : . ' , relay stdout ...
[08:07:15.050] | : . ' , relay stdout ... done
[08:07:15.050] | : . ' , check for misuse ...
[08:07:15.050] | : . ' , check for misuse ... done
[08:07:15.050] | : . ' value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.050] | : . ' signalConditions() ...
[08:07:15.050] | : . ' , include = ‘immediateCondition’
[08:07:15.050] | : . ' , exclude = 
[08:07:15.050] | : . ' , resignal = FALSE
[08:07:15.050] | : . ' , Number of conditions: 6
[08:07:15.050] | : . ' ,  int 6
[08:07:15.051] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.051] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.051] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.051] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.051] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.051] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.052] | : . ' , Drop signaled conditions: 0
[08:07:15.052] | : . ' signalConditions() ... done
[08:07:15.052] | : . ' signalConditions() ...
[08:07:15.053] | : . ' , include = ‘condition’
[08:07:15.053] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:15.053] | : . ' , resignal = TRUE
[08:07:15.053] | : . ' , Number of conditions: 6
[08:07:15.053] | : . ' ,  int 6
[08:07:15.054] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.054] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.506] | : . ' , ; ` attachPackages() ...
[08:07:15.054] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.054] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.506] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:15.054] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.054] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.507] | : . ' , ; ` attachPackages() ... done
[08:07:15.054] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.055] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.507] | : . ' , ; ` attachPackages() ...
[08:07:15.055] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.055] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.507] | : . ' , ; ` | packages: [n=0] 
[08:07:15.055] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.055] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:14.507] | : . ' , ; ` attachPackages() ... done
[08:07:15.055] | : . ' , Drop signaled conditions: 6
[08:07:15.055] | : . ' signalConditions() ... done
[08:07:15.055] | : . ' relayed: [n=1] TRUE
[08:07:15.055] | : . ' queued futures: [n=1] TRUE
[08:07:15.056] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:15.056] | : . value(<SequentialFuture>, ...) ...
[08:07:15.056] | : . value(<SequentialFuture>, ...) ... done
[08:07:15.056] | : . value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.056] | : . ' signalConditions() ...
[08:07:15.056] | : . ' , include = ‘immediateCondition’
[08:07:15.056] | : . ' , exclude = 
[08:07:15.056] | : . ' , resignal = FALSE
[08:07:15.056] | : . ' , Number of conditions: 0
[08:07:15.056] | : . ' ,  int 0
[08:07:15.057] | : . ' signalConditions() ... done
[08:07:15.057] | : . ' check for misuse ...
[08:07:15.057] | : . ' check for misuse ... done
[08:07:15.057] | : . value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.057] | : . value: <list>
[08:07:15.057] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:15.057] | : . ' nx: 1
[08:07:15.058] | : . ' relay: TRUE
[08:07:15.058] | : . ' stdout: TRUE
[08:07:15.058] | : . ' signal: TRUE
[08:07:15.058] | : . ' resignal: FALSE
[08:07:15.058] | : . ' force: TRUE
[08:07:15.058] | : . ' relayed: [n=1] TRUE
[08:07:15.058] | : . ' queued futures: [n=1] TRUE
[08:07:15.058] | : . ' until=1
[08:07:15.058] | : . ' relayed: [n=1] TRUE
[08:07:15.058] | : . ' queued futures: [n=1] TRUE
[08:07:15.058] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:15.059] | : . resolve() for SequentialFuture ...
[08:07:15.059] | : . resolve() for SequentialFuture ... done
[08:07:15.059] | : . length: 0 (resolved future 1)
[08:07:15.059] | : value() for list ... done
[08:07:15.059] | : Relaying remaining futures ...
[08:07:15.059] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:15.059] | : . ' nx: 1
[08:07:15.059] | : . ' relay: TRUE
[08:07:15.059] | : . ' stdout: TRUE
[08:07:15.059] | : . ' signal: TRUE
[08:07:15.060] | : . ' resignal: FALSE
[08:07:15.060] | : . ' force: TRUE
[08:07:15.060] | : . ' relayed: [n=1] TRUE
[08:07:15.060] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:15.060] | : . ' relayed: [n=1] TRUE
[08:07:15.060] | : . ' queued futures: [n=1] TRUE
[08:07:15.060] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:15.060] | : Relaying remaining futures ... done
[08:07:15.060] | future_mapply() -> future_xapply() ... done
[08:07:15.060] |  - Number of value chunks collected: 1
[08:07:15.060] | Resolving 1 futures (chunks) ... DONE
[08:07:15.061] | Reducing values from 1 chunks ...
[08:07:15.061] |  - Number of values collected after concatenation: 2
[08:07:15.061] |  - Number of values expected: 2
[08:07:15.061] | Reducing values from 1 chunks ... DONE
[08:07:15.061] future_mapply() ... done

* future_mapply(x, ..., future.stdout = TRUE) ... DONE
* future_mapply(x, ..., future.stdout = NA) ...
[08:07:15.061] future_mapply() ...
[08:07:15.061] | future_mapply() -> future_xapply() ...
[08:07:15.062] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.062] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.062] | : Number of chunks: 1
[08:07:15.062] | : getGlobalsAndPackagesXApply() ...
[08:07:15.062] | : . future.globals: TRUE
[08:07:15.062] | : . getGlobalsAndPackages() ...
[08:07:15.062] | : . ' Searching for globals ...
[08:07:15.071] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:15.071] | : . ' Searching for globals ... done
[08:07:15.071] | : . ' Resolving globals: FALSE
[08:07:15.071] | : . ' Search for packages associated with the globals ...
[08:07:15.071] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:15.072] | : . ' , Packages: [1] ‘base’
[08:07:15.072] | : . ' Search for packages associated with the globals ... done
[08:07:15.072] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:15.072] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:15.072] | : . ' Packages after dropping 'base': [0] 
[08:07:15.072] | : . ' globals: [1] ‘FUN’
[08:07:15.072] | : . ' packages: [0] 
[08:07:15.073] | : . getGlobalsAndPackages() ... done
[08:07:15.073] | : . globals found/used: [n=1] ‘FUN’
[08:07:15.073] | : . needed namespaces: [n=0] 
[08:07:15.073] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:15.073] | : . List of 2
[08:07:15.073] | : .  $ ...future.FUN:function (x, y)  
[08:07:15.073] | : .  $ MoreArgs     : NULL
[08:07:15.073] | : .  - attr(*, "where")=List of 2
[08:07:15.073] | : .   ..$ ...future.FUN:<environment: 0x55ab95a9ff28> 
[08:07:15.073] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:15.073] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.073] | : .  - attr(*, "resolved")= logi FALSE
[08:07:15.073] | : .  - attr(*, "total_size")= num NA
[08:07:15.076] | : . Packages to be attached in all futures: [n=0] 
[08:07:15.076] | : getGlobalsAndPackagesXApply() ... done
[08:07:15.076] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.076] | : List of 5
[08:07:15.076] | :  $ ...future.FUN            :function (x, y)  
[08:07:15.076] | :  $ MoreArgs                 : NULL
[08:07:15.076] | :  $ ...future.elements_ii    : NULL
[08:07:15.076] | :  $ ...future.seeds_ii       : NULL
[08:07:15.076] | :  $ ...future.globals.maxSize: NULL
[08:07:15.076] | :  - attr(*, "where")=List of 5
[08:07:15.076] | :   ..$ ...future.FUN            :<environment: 0x55ab95a9ff28> 
[08:07:15.076] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:15.076] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:15.076] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:15.076] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:15.076] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.076] | :  - attr(*, "resolved")= logi FALSE
[08:07:15.076] | :  - attr(*, "total_size")= num NA
[08:07:15.079] | : Number of futures (= number of chunks): 1
[08:07:15.080] | : Launching 1 futures (chunks) ...
[08:07:15.080] | : Chunk #1 of 1 ...
[08:07:15.080] | :  - Finding globals in '...' for chunk #1 ...
[08:07:15.080] | : getGlobalsAndPackages() ...
[08:07:15.080] | : . Searching for globals ...
[08:07:15.081] | : . ' globals found: [0] 
[08:07:15.081] | : . Searching for globals ... done
[08:07:15.081] | : . globals: [0] <none>
[08:07:15.081] | : . packages: [0] <none>
[08:07:15.081] | : getGlobalsAndPackages() ... done
[08:07:15.081] | :    + additional globals found: [n=0] 
[08:07:15.081] | :    + additional namespaces needed: [n=0] 
[08:07:15.081] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:15.081] | :  - seeds: <none>
[08:07:15.081] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.082] | : future(..., label = ‘future_mapply-1’) ...
[08:07:15.082] | : . lazy: FALSE
[08:07:15.082] | : . stdout: NA
[08:07:15.082] | : . conditions: [n=1] ‘condition’
[08:07:15.082] | : . gc: FALSE
[08:07:15.082] | : . earlySignal: FALSE
[08:07:15.082] | : . getGlobalsAndPackages() ...
[08:07:15.082] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.082] | : . ' Resolving globals: FALSE
[08:07:15.082] | : . ' Search for packages associated with the globals ...
[08:07:15.083] | : . ' , Packages associated with globals: [0] 
[08:07:15.083] | : . ' , Packages: [0] 
[08:07:15.083] | : . ' Search for packages associated with the globals ... done
[08:07:15.083] | : . ' Packages after dropping 'base': [0] 
[08:07:15.083] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.083] | : . ' packages: [0] 
[08:07:15.083] | : . getGlobalsAndPackages() ... done
[08:07:15.084] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:15.084] | : . ' state: ‘created’
[08:07:15.084] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.084] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.084] | : . ' Using SequentialFutureBackend ...
[08:07:15.084] | : . ' , Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:07:15.084] | : . ' , Launching futures ...
[08:07:15.084] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:15.084] | : . ' , ; ` getFutureData() ...
[08:07:15.085] | : . ' , ; ` | getFutureCore() ...
[08:07:15.085] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:15.085] | : . ' , ; ` | getFutureCore() ... done
[08:07:15.085] | : . ' , ; ` | getFutureCapture() ...
[08:07:15.085] | : . ' , ; ` | getFutureCapture() ... done
[08:07:15.085] | : . ' , ; ` | getFutureContext() ...
[08:07:15.085] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.085] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:15.085] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.086] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:15.086] | : . ' , ; ` | getFutureContext() ... done
[08:07:15.087] | : . ' , ; ` getFutureData() ... done
[08:07:15.088] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.088] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:15.088] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.088] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.088] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.089] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:15.089] | : . ' , ; ` | : . New stack:
[08:07:15.089] | : . ' , ; ` | : . List of 1
[08:07:15.089] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.089] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.089] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:15.089] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.089] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.089] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.089] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.089] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.091] | : . ' , ; ` | : . Old stack:
[08:07:15.091] | : . ' , ; ` | : . List of 1
[08:07:15.091] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.091] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:15.091] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.091] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.091] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.091] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.094] | : . ' , ; ` | : . Not identical
[08:07:15.094] | : . ' , ; ` | : . all.equal() for future ...
[08:07:15.094] | : . ' , ; ` | : . ' List of 2
[08:07:15.094] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.094] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.094] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.094] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.094] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.094] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.094] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.099] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:15.100] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:15.100] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:15.100] | : . ' , ; ` | : List of future strategies:
[08:07:15.100] | : . ' , ; ` | : 1. sequential:
[08:07:15.100] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:15.100] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:15.100] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:15.100] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.100] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.100] | : . ' , ; ` assign_globals() ...
[08:07:15.101] | : . ' , ; ` List of 5
[08:07:15.101] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:15.101] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:15.101] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:15.101] | : . ' , ; `   ..$ :List of 2
[08:07:15.101] | : . ' , ; `   .. ..$ : int 1
[08:07:15.101] | : . ' , ; `   .. ..$ : int 0
[08:07:15.101] | : . ' , ; `   ..$ :List of 2
[08:07:15.101] | : . ' , ; `   .. ..$ : int 0
[08:07:15.101] | : . ' , ; `   .. ..$ : int 1
[08:07:15.101] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:15.101] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:15.101] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:15.101] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab95a9ff28> 
[08:07:15.101] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:15.101] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:15.101] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:15.101] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:15.101] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:15.101] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:15.101] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.101] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:15.107] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:15.107] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:15.107] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:15.107] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:15.107] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:15.107] | : . ' , ; ` assign_globals() ... done
[08:07:15.610] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.611] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.611] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.611] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:15.611] | : . ' , ; ` | : . ' New stack:
[08:07:15.611] | : . ' , ; ` | : . ' List of 1
[08:07:15.611] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.611] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.611] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.611] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.611] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.611] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.614] | : . ' , ; ` | : . ' Old stack:
[08:07:15.615] | : . ' , ; ` | : . ' List of 1
[08:07:15.615] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.615] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.615] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.615] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.615] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.615] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.618] | : . ' , ; ` | : . ' Identical
[08:07:15.618] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:15.618] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:15.618] | : . ' , ; ` | : . List of future strategies:
[08:07:15.618] | : . ' , ; ` | : . 1. sequential:
[08:07:15.618] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:15.618] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:15.618] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:15.619] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.619] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.619] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.619] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:15.619] | : . ' , ; ` signalConditions() ...
[08:07:15.620] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:15.620] | : . ' , ; ` | exclude = 
[08:07:15.620] | : . ' , ; ` | resignal = FALSE
[08:07:15.620] | : . ' , ; ` | Number of conditions: 6
[08:07:15.620] | : . ' , ; ` |  int 6
[08:07:15.620] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.621] | : . ' , ; ` | Drop signaled conditions: 0
[08:07:15.621] | : . ' , ; ` signalConditions() ... done
[08:07:15.621] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:15.621] | : . ' , Launching futures ... done
[08:07:15.622] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:15.622] | : . ' Using SequentialFutureBackend ... done
[08:07:15.622] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:15.623] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:15.624] | : Created future:
[08:07:15.624] | : SequentialFuture:
[08:07:15.624] | : Label: ‘future_mapply-1’
[08:07:15.624] | : Expression:
[08:07:15.624] | : {
[08:07:15.624] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:15.624] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.624] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.624] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.624] | :         on.exit(options(oopts), add = TRUE)
[08:07:15.624] | :     }
[08:07:15.624] | :     {
[08:07:15.624] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:15.624] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:15.624] | :         do.call(mapply, args = args)
[08:07:15.624] | :     }
[08:07:15.624] | : }
[08:07:15.624] | : Globals: 5 objects totaling 6.53 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 95 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:15.624] | : Packages: <none>
[08:07:15.624] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:15.624] | : Capture standard output: NA
[08:07:15.624] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:15.624] | : Immediate condition classes: ‘immediateCondition’
[08:07:15.624] | : Lazy evaluation: FALSE
[08:07:15.624] | : Local evaluation: TRUE
[08:07:15.624] | : Asynchronous evaluation: TRUE
[08:07:15.624] | : Early signaling: FALSE
[08:07:15.624] | : Environment: R_GlobalEnv
[08:07:15.624] | : State: ‘finished’
[08:07:15.624] | : Resolved: TRUE
[08:07:15.624] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-6
[08:07:15.624] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:15.624] | : Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:15.624] | : Value: 184 bytes of class ‘list’
[08:07:15.624] | : Conditions captured: [n=6] ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’, ‘simpleMessage’
[08:07:15.624] | : Duration: 0.5232313 secs (started 2025-06-17 08:07:15.087239)
[08:07:15.624] | : Worker process: e64dd8772be5ab339364b28950120fcc
[08:07:15.625] | : Chunk #1 of 1 ... DONE
[08:07:15.625] | : Launching 1 futures (chunks) ... DONE
[08:07:15.625] | : Resolving 1 futures (chunks) ...
[08:07:15.626] | : value() for list ...
[08:07:15.626] | : . recursive: 0
[08:07:15.626] | : . reduce: FALSE
[08:07:15.626] | : . length: 1

[08:07:15.626] | : . Number of remaining objects: 1
[08:07:15.626] | : . checking value #1:
[08:07:15.626] | : . 'obj' is SequentialFuture
[08:07:15.626] | : . resolved() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.627] | : . ' state: ‘finished’
[08:07:15.627] | : . ' run: TRUE
[08:07:15.627] | : . ' result: ‘FutureResult’
[08:07:15.627] | : . resolved() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.627] | : . SequentialFuture #1
[08:07:15.627] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:15.627] | : . ' nx: 1
[08:07:15.627] | : . ' relay: TRUE
[08:07:15.627] | : . ' stdout: TRUE
[08:07:15.627] | : . ' signal: TRUE
[08:07:15.628] | : . ' resignal: FALSE
[08:07:15.628] | : . ' force: TRUE
[08:07:15.628] | : . ' relayed: [n=1] FALSE
[08:07:15.628] | : . ' queued futures: [n=1] FALSE
[08:07:15.628] | : . ' until=1
[08:07:15.628] | : . ' relaying element #1
[08:07:15.628] | : . ' value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.628] | : . ' , signalConditions() ...
[08:07:15.628] | : . ' , ; include = ‘immediateCondition’
[08:07:15.628] | : . ' , ; exclude = 
[08:07:15.629] | : . ' , ; resignal = FALSE
[08:07:15.629] | : . ' , ; Number of conditions: 6
[08:07:15.629] | : . ' , ;  int 6
[08:07:15.629] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.629] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.629] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.630] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.630] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.630] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.630] | : . ' , ; Drop signaled conditions: 0
[08:07:15.630] | : . ' , signalConditions() ... done
[08:07:15.630] | : . ' , relay stdout ...
[08:07:15.630] | : . ' , relay stdout ... done
[08:07:15.630] | : . ' , check for misuse ...
[08:07:15.630] | : . ' , check for misuse ... done
[08:07:15.631] | : . ' value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.631] | : . ' signalConditions() ...
[08:07:15.631] | : . ' , include = ‘immediateCondition’
[08:07:15.631] | : . ' , exclude = 
[08:07:15.631] | : . ' , resignal = FALSE
[08:07:15.631] | : . ' , Number of conditions: 6
[08:07:15.631] | : . ' ,  int 6
[08:07:15.632] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.632] | : . ' , Drop signaled conditions: 0
[08:07:15.632] | : . ' signalConditions() ... done
[08:07:15.633] | : . ' signalConditions() ...
[08:07:15.633] | : . ' , include = ‘condition’
[08:07:15.633] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:15.633] | : . ' , resignal = TRUE
[08:07:15.633] | : . ' , Number of conditions: 6
[08:07:15.633] | : . ' ,  int 6
[08:07:15.633] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.634] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` attachPackages() ...
[08:07:15.634] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.634] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:15.634] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.634] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` attachPackages() ... done
[08:07:15.634] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.634] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` attachPackages() ...
[08:07:15.634] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.635] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` | packages: [n=0] 
[08:07:15.635] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.635] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.087] | : . ' , ; ` attachPackages() ... done
[08:07:15.635] | : . ' , Drop signaled conditions: 6
[08:07:15.635] | : . ' signalConditions() ... done
[08:07:15.635] | : . ' relayed: [n=1] TRUE
[08:07:15.635] | : . ' queued futures: [n=1] TRUE
[08:07:15.635] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:15.635] | : . value(<SequentialFuture>, ...) ...
[08:07:15.636] | : . value(<SequentialFuture>, ...) ... done
[08:07:15.636] | : . value() for SequentialFuture (‘future_mapply-1’) ...
[08:07:15.636] | : . ' signalConditions() ...
[08:07:15.636] | : . ' , include = ‘immediateCondition’
[08:07:15.636] | : . ' , exclude = 
[08:07:15.636] | : . ' , resignal = FALSE
[08:07:15.636] | : . ' , Number of conditions: 0
[08:07:15.636] | : . ' ,  int 0
[08:07:15.637] | : . ' signalConditions() ... done
[08:07:15.637] | : . ' check for misuse ...
[08:07:15.637] | : . ' check for misuse ... done
[08:07:15.637] | : . value() for SequentialFuture (‘future_mapply-1’) ... done
[08:07:15.637] | : . value: <list>
[08:07:15.637] | : . signalConditionsASAP(SequentialFuture, pos=1) ...
[08:07:15.637] | : . ' nx: 1
[08:07:15.637] | : . ' relay: TRUE
[08:07:15.638] | : . ' stdout: TRUE
[08:07:15.638] | : . ' signal: TRUE
[08:07:15.638] | : . ' resignal: FALSE
[08:07:15.638] | : . ' force: TRUE
[08:07:15.638] | : . ' relayed: [n=1] TRUE
[08:07:15.638] | : . ' queued futures: [n=1] TRUE
[08:07:15.638] | : . ' until=1
[08:07:15.638] | : . ' relayed: [n=1] TRUE
[08:07:15.638] | : . ' queued futures: [n=1] TRUE
[08:07:15.638] | : . signalConditionsASAP(SequentialFuture, pos=1) ... done
[08:07:15.638] | : . resolve() for SequentialFuture ...
[08:07:15.639] | : . resolve() for SequentialFuture ... done
[08:07:15.639] | : . length: 0 (resolved future 1)
[08:07:15.639] | : value() for list ... done
[08:07:15.639] | : Relaying remaining futures ...
[08:07:15.639] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:15.639] | : . ' nx: 1
[08:07:15.639] | : . ' relay: TRUE
[08:07:15.639] | : . ' stdout: TRUE
[08:07:15.639] | : . ' signal: TRUE
[08:07:15.640] | : . ' resignal: FALSE
[08:07:15.640] | : . ' force: TRUE
[08:07:15.640] | : . ' relayed: [n=1] TRUE
[08:07:15.640] | : . ' queued futures: [n=1] TRUE
 - flush all
[08:07:15.640] | : . ' relayed: [n=1] TRUE
[08:07:15.640] | : . ' queued futures: [n=1] TRUE
[08:07:15.640] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:15.640] | : Relaying remaining futures ... done
[08:07:15.640] | future_mapply() -> future_xapply() ... done
[08:07:15.640] |  - Number of value chunks collected: 1
[08:07:15.641] | Resolving 1 futures (chunks) ... DONE
[08:07:15.641] | Reducing values from 1 chunks ...
[08:07:15.641] |  - Number of values collected after concatenation: 2
[08:07:15.641] |  - Number of values expected: 2
[08:07:15.641] | Reducing values from 1 chunks ... DONE
[08:07:15.641] future_mapply() ... done

* future_mapply(x, ..., future.stdout = NA) ... DONE
* plan('sequential') ... DONE
  - Testing with 1 cores ... DONE
  - Testing with 2 cores ...
* plan('multicore') ...
[08:07:15.642] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.644] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:15.644] | : all.equal() for FutureStrategyList ...
[08:07:15.644] | : . New stack:
[08:07:15.644] | : . List of 1
[08:07:15.644] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.644] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.644] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.644] | : .   ..- attr(*, "init")= logi TRUE
[08:07:15.644] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.644] | : .     ...)  
[08:07:15.644] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.644] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.644] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:15.644] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.647] | : . Old stack:
[08:07:15.647] | : . List of 1
[08:07:15.647] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.647] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.647] | : .   ..- attr(*, "init")= chr "done"
[08:07:15.647] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.647] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.647] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.647] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:15.647] | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.647] | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.647] | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.647] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.650] | : . Not identical
[08:07:15.651] | : . all.equal() for future ...
[08:07:15.651] | : . ' List of 2
[08:07:15.651] | : . '  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.651] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.651] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.651] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:15.651] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.651] | : . '     ...)  
[08:07:15.651] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.651] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.651] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:15.651] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.651] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.651] | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.651] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.651] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.651] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.651] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:15.651] | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96166878> 
[08:07:15.651] | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.651] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.656] | : . ' Formals differ
[08:07:15.656] | : . all.equal() for future ... done
[08:07:15.656] | : . Future strategies differ at level 1
[08:07:15.656] | : all.equal() for FutureStrategyList ... done
[08:07:15.656] | : plan(): Setting new future backend stack:
[08:07:15.656] | : List of future strategies:
[08:07:15.656] | : 1. multicore:
[08:07:15.656] | :    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:15.656] | :    - tweaked: FALSE
[08:07:15.656] | :    - call: plan(strategy)
[08:07:15.657] | : List of 1
[08:07:15.657] | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.657] | :     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.657] | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.657] | :   ..- attr(*, "init")= logi TRUE
[08:07:15.657] | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.657] | :     ...)  
[08:07:15.657] | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.657] | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.657] | :   ..- attr(*, "call")= language plan(strategy)
[08:07:15.657] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.659] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:15.659] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.660] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:15.660] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.660] | : . Legacy shutdown of cluster workers ...
[08:07:15.660] | : . ' Stopping existing cluster ...
[08:07:15.660] | : . ' , No pre-existing cluster. Skipping
[08:07:15.660] | : . ' Stopping existing cluster ... done
[08:07:15.660] | : . Legacy shutdown of cluster workers ... done
[08:07:15.661] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:15.661] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:15.661] | : . function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.661] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.661] | : .  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.661] | : .  - attr(*, "init")= logi TRUE
[08:07:15.661] | : .  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.661] | : .     ...)  
[08:07:15.661] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.661] | : .  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.661] | : .  - attr(*, "call")= language plan(strategy)
[08:07:15.664] | : . init: TRUE
[08:07:15.665] | : . makeFutureBackend(<multicore>) ...
[08:07:15.665] | : . ' Backend function: <‘NULL’>
[08:07:15.665] | : . ' Evaluator tweak arguments: [n=0]
[08:07:15.665] | : . '  list()
[08:07:15.665] | : . ' Evaluator formal arguments: [n=3]
[08:07:15.665] | : . '  list()
[08:07:15.665] | : . ' Backend factory arguments: [n=3]
[08:07:15.666] | : . ' Dotted pair list of 3
[08:07:15.666] | : . '  $ workers    : language availableCores(constraints = "multicore")
[08:07:15.666] | : . '  $ gc         : logi FALSE
[08:07:15.666] | : . '  $ earlySignal: logi FALSE
[08:07:15.668] | : . ' Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:15.669] | : . makeFutureBackend(<multicore>) ... done
[08:07:15.669] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:15.669] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.669] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.669] | : plan(): nbrOfWorkers() = 2
[08:07:15.669] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:15.669] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
* future_lapply(x, ..., future.stdout = FALSE) ...
[08:07:15.670] future_lapply() ...
[08:07:15.670] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:15.671] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:15.671] | future_lapply() -> future_xapply() ...
[08:07:15.671] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.671] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.672] | : Number of chunks: 2
[08:07:15.672] | : getGlobalsAndPackagesXApply() ...
[08:07:15.673] | : . future.globals: TRUE
[08:07:15.673] | : . getGlobalsAndPackages() ...
[08:07:15.673] | : . ' Searching for globals ...
[08:07:15.681] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:15.681] | : . ' Searching for globals ... done
[08:07:15.682] | : . ' Resolving globals: FALSE
[08:07:15.682] | : . ' Search for packages associated with the globals ...
[08:07:15.682] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:15.682] | : . ' , Packages: [1] ‘base’
[08:07:15.682] | : . ' Search for packages associated with the globals ... done
[08:07:15.683] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:15.683] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:15.683] | : . ' Packages after dropping 'base': [0] 
[08:07:15.683] | : . ' globals: [1] ‘FUN’
[08:07:15.683] | : . ' packages: [0] 
[08:07:15.684] | : . getGlobalsAndPackages() ... done
[08:07:15.684] | : . globals found/used: [n=1] ‘FUN’
[08:07:15.684] | : . needed namespaces: [n=0] 
[08:07:15.684] | : . use_args: TRUE
[08:07:15.684] | : . Getting '...' globals ...
[08:07:15.684] | : . ' resolve() for FutureGlobals ...
[08:07:15.684] | : . ' , recursive: 0
[08:07:15.685] | : . ' , Number of elements: 1
[08:07:15.685] | : . ' , elements: ‘...’
[08:07:15.685] | : . ' , 'obj' is DotDotDotList
[08:07:15.685] | : . ' , resolve(obj, ...) ...
[08:07:15.685] | : . ' , ; resolve() for DotDotDotList ...
[08:07:15.685] | : . ' , ; ` recursive: -1
[08:07:15.685] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:15.685] | : . ' , resolve(obj, ...) ... done
[08:07:15.685] | : . ' , resolved() for DotDotDotList ...
[08:07:15.686] | : . ' , ; Number of elements: 0
[08:07:15.686] | : . ' , ; Number of futures: 0
[08:07:15.686] | : . ' , resolved() for DotDotDotList ... done
[08:07:15.686] | : . ' , length: 0 (resolved future 1)
[08:07:15.686] | : . ' resolve() for FutureGlobals ... done
[08:07:15.686] | : . ' '...' content: [n=0] 
[08:07:15.686] | : . ' List of 1
[08:07:15.686] | : . '  $ ...: list()
[08:07:15.686] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:15.686] | : . '  - attr(*, "where")=List of 1
[08:07:15.686] | : . '   ..$ ...:<environment: 0x55ab9451d338> 
[08:07:15.686] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.686] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:15.686] | : . '  - attr(*, "total_size")= num NA
[08:07:15.689] | : . Getting '...' globals ... done
[08:07:15.689] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:15.689] | : . List of 2
[08:07:15.689] | : .  $ ...future.FUN:function (x)  
[08:07:15.689] | : .  $ ...          : list()
[08:07:15.689] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:15.689] | : .  - attr(*, "where")=List of 2
[08:07:15.689] | : .   ..$ ...future.FUN:<environment: 0x55ab9451d338> 
[08:07:15.689] | : .   ..$ ...          :<environment: 0x55ab9451d338> 
[08:07:15.689] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.689] | : .  - attr(*, "resolved")= logi FALSE
[08:07:15.689] | : .  - attr(*, "total_size")= num 6008
[08:07:15.692] | : . Packages to be attached in all futures: [n=0] 
[08:07:15.692] | : getGlobalsAndPackagesXApply() ... done
[08:07:15.692] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.692] | : List of 5
[08:07:15.692] | :  $ ...future.FUN            :function (x)  
[08:07:15.692] | :  $ ...                      : list()
[08:07:15.692] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:15.692] | :  $ ...future.elements_ii    : NULL
[08:07:15.692] | :  $ ...future.seeds_ii       : NULL
[08:07:15.692] | :  $ ...future.globals.maxSize: NULL
[08:07:15.692] | :  - attr(*, "where")=List of 5
[08:07:15.692] | :   ..$ ...future.FUN            :<environment: 0x55ab9451d338> 
[08:07:15.692] | :   ..$ ...                      :<environment: 0x55ab9451d338> 
[08:07:15.692] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:15.692] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:15.692] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:15.692] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.692] | :  - attr(*, "resolved")= logi FALSE
[08:07:15.692] | :  - attr(*, "total_size")= num 6008
[08:07:15.697] | : Number of futures (= number of chunks): 2
[08:07:15.697] | : Launching 2 futures (chunks) ...
[08:07:15.697] | : Chunk #1 of 2 ...
[08:07:15.697] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:15.697] | : getGlobalsAndPackages() ...
[08:07:15.697] | : . Searching for globals ...
[08:07:15.698] | : . ' globals found: [0] 
[08:07:15.698] | : . Searching for globals ... done
[08:07:15.698] | : . globals: [0] <none>
[08:07:15.698] | : . packages: [0] <none>
[08:07:15.699] | : getGlobalsAndPackages() ... done
[08:07:15.700] | :    + additional globals found: [n=0] 
[08:07:15.700] | :    + additional namespaces needed: [n=0] 
[08:07:15.700] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:15.700] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:15.700] | :  - seeds: <none>
[08:07:15.700] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.700] | : future(..., label = ‘future_lapply-1’) ...
[08:07:15.701] | : . lazy: FALSE
[08:07:15.701] | : . stdout: FALSE
[08:07:15.701] | : . conditions: [n=1] ‘condition’
[08:07:15.701] | : . gc: FALSE
[08:07:15.701] | : . earlySignal: FALSE
[08:07:15.701] | : . getGlobalsAndPackages() ...
[08:07:15.701] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.701] | : . ' Resolving globals: FALSE
[08:07:15.702] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:15.702] | : . ' , {
[08:07:15.702] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:15.702] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:15.702] | : . ' ,     "# as a global variable                                         "
[08:07:15.702] | : . ' ,     do.call(function(...) {
[08:07:15.702] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:15.702] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:15.702] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:15.702] | : . ' ,         "# anonymous function.                                          "
[08:07:15.702] | : . ' ,         "#                                                              "
[08:07:15.702] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:15.702] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:15.702] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:15.702] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:15.702] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:15.702] | : . ' ,         repeat {
[08:07:15.702] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:15.702] | : . ' ,                 emptyenv())) 
[08:07:15.702] | : . ' ,                 break
[08:07:15.702] | : . ' ,             penv <- env
[08:07:15.702] | : . ' ,             env <- parent.env(env)
[08:07:15.702] | : . ' ,         }
[08:07:15.702] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:15.702] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:15.702] | : . ' ,         }
[08:07:15.702] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:15.702] | : . ' ,             !isNamespace(penv)) {
[08:07:15.702] | : . ' ,             parent.env(penv) <- environment()
[08:07:15.702] | : . ' ,         }
[08:07:15.702] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:15.702] | : . ' ,         {
[08:07:15.702] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:15.702] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.702] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.702] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.702] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:15.702] | : . ' ,             }
[08:07:15.702] | : . ' ,             {
[08:07:15.702] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:15.702] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:15.702] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:15.702] | : . ' ,                   {
[08:07:15.702] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:15.702] | : . ' ,                   }
[08:07:15.702] | : . ' ,                 })
[08:07:15.702] | : . ' ,             }
[08:07:15.702] | : . ' ,         }
[08:07:15.702] | : . ' ,     }, args = future.call.arguments)
[08:07:15.702] | : . ' , }
[08:07:15.702] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:15.702] | : . ' Search for packages associated with the globals ...
[08:07:15.703] | : . ' , Packages associated with globals: [0] 
[08:07:15.703] | : . ' , Packages: [0] 
[08:07:15.703] | : . ' Search for packages associated with the globals ... done
[08:07:15.703] | : . ' Packages after dropping 'base': [0] 
[08:07:15.703] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.703] | : . ' packages: [0] 
[08:07:15.703] | : . getGlobalsAndPackages() ... done
[08:07:15.704] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:15.704] | : . ' state: ‘created’
[08:07:15.704] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.704] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.704] | : . ' Using MulticoreFutureBackend ...
[08:07:15.704] | : . ' , Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:15.704] | : . ' , Launching futures ...
[08:07:15.705] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:15.705] | : . ' , ; ` getFutureData() ...
[08:07:15.705] | : . ' , ; ` | getFutureCore() ...
[08:07:15.705] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:15.705] | : . ' , ; ` | getFutureCore() ... done
[08:07:15.705] | : . ' , ; ` | getFutureCapture() ...
[08:07:15.705] | : . ' , ; ` | getFutureCapture() ... done
[08:07:15.705] | : . ' , ; ` | getFutureContext() ...
[08:07:15.706] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.706] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:15.706] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.706] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:15.706] | : . ' , ; ` | getFutureContext() ... done
[08:07:15.707] | : . ' , ; ` getFutureData() ... done
[08:07:15.707] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:15.707] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:15.710] | : . ' , ; ` MulticoreFuture started
[08:07:15.710] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:15.711] | : . ' , Launching futures ... done
[08:07:15.711] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:15.711] | : . ' Using MulticoreFutureBackend ... done
[08:07:15.712] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:15.712] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:15.712] | : Created future:
[08:07:15.713] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.713] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:15.714] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.714] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.715] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.715] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:15.715] | : . ' , ; ` | : . New stack:
[08:07:15.715] | : . ' , ; ` | : . List of 1
[08:07:15.715] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.715] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.715] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:15.715] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.715] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.715] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.715] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.715] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.722] | : . ' , ; ` | : . Old stack:
[08:07:15.726] | : readImmediateCondition() ...
[08:07:15.726] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.726] | : . Number of RDS files: 0
[08:07:15.727] | : . Returned conditions set:
[08:07:15.727] | : .  list()
[08:07:15.727] | : readImmediateCondition() ... done
[08:07:15.712] | : MulticoreFuture:
[08:07:15.712] | : Label: ‘future_lapply-1’
[08:07:15.712] | : Expression:
[08:07:15.712] | : {
[08:07:15.712] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:15.712] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:15.712] | :     "# as a global variable                                         "
[08:07:15.712] | :     do.call(function(...) {
[08:07:15.712] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:15.712] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:15.712] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:15.712] | :         "# anonymous function.                                          "
[08:07:15.712] | :         "#                                                              "
[08:07:15.712] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:15.712] | :         "# function environment of FUN() to the calling environment.    "
[08:07:15.712] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:15.712] | :         "# global environment, which is where globals are written.      "
[08:07:15.712] | :         penv <- env <- environment(...future.FUN)
[08:07:15.712] | :         repeat {
[08:07:15.712] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:15.712] | :                 emptyenv())) 
[08:07:15.712] | :                 break
[08:07:15.712] | :             penv <- env
[08:07:15.712] | :             env <- parent.env(env)
[08:07:15.712] | :         }
[08:07:15.712] | :         if (identical(penv, globalenv())) {
[08:07:15.712] | :             environment(...future.FUN) <- environment()
[08:07:15.712] | :         }
[08:07:15.712] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:15.712] | :             !isNamespace(penv)) {
[08:07:15.712] | :             parent.env(penv) <- environment()
[08:07:15.712] | :         }
[08:07:15.712] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:15.712] | :         {
[08:07:15.712] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:15.712] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.712] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.712] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.712] | :                 on.exit(options(oopts), add = TRUE)
[08:07:15.712] | :             }
[08:07:15.712] | :             {
[08:07:15.712] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:15.712] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:15.712] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:15.712] | :                   {
[08:07:15.712] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:15.712] | :                   }
[08:07:15.712] | :                 })
[08:07:15.712] | :             }
[08:07:15.712] | :         }
[08:07:15.712] | :     }, args = future.call.arguments)
[08:07:15.712] | : }
[08:07:15.712] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:15.712] | : Packages: <none>
[08:07:15.712] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:15.712] | : Capture standard output: FALSE
[08:07:15.712] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:15.712] | : Immediate condition classes: ‘immediateCondition’
[08:07:15.712] | : Lazy evaluation: FALSE
[08:07:15.712] | : Local evaluation: TRUE
[08:07:15.712] | : Asynchronous evaluation: TRUE
[08:07:15.712] | : Early signaling: FALSE
[08:07:15.712] | : Environment: R_GlobalEnv
[08:07:15.712] | : State: ‘running’
[08:07:15.712] | : Resolved: FALSE
[08:07:15.712] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-7
[08:07:15.712] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:15.712] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:15.712] | : Value: <not collected>
[08:07:15.712] | : Conditions captured: <none>
[08:07:15.728] | : Chunk #1 of 2 ... DONE
[08:07:15.728] | : Chunk #2 of 2 ...
[08:07:15.728] | :  - Finding globals in 'X' for chunk #2 ...
[08:07:15.728] | : getGlobalsAndPackages() ...
[08:07:15.722] | : . ' , ; ` | : . List of 1
[08:07:15.722] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.722] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.722] | : . ' , ; ` | : .     ...)  
[08:07:15.722] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:15.722] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.722] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.722] | : . ' , ; ` | : .     ...)  
[08:07:15.722] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.722] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.728] | : . Searching for globals ...
[08:07:15.729] | : . ' , ; ` | : . Not identical
[08:07:15.729] | : . ' , ; ` | : . all.equal() for future ...
[08:07:15.729] | : . ' globals found: [0] 
[08:07:15.729] | : . Searching for globals ... done
[08:07:15.729] | : . globals: [0] <none>
[08:07:15.729] | : . packages: [0] <none>
[08:07:15.730] | : getGlobalsAndPackages() ... done
[08:07:15.730] | :    + additional globals found: [n=0] 
[08:07:15.730] | :    + additional namespaces needed: [n=0] 
[08:07:15.730] | :  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:15.730] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:15.730] | :  - seeds: <none>
[08:07:15.730] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.731] | : future(..., label = ‘future_lapply-2’) ...
[08:07:15.731] | : . lazy: FALSE
[08:07:15.731] | : . stdout: FALSE
[08:07:15.731] | : . conditions: [n=1] ‘condition’
[08:07:15.731] | : . gc: FALSE
[08:07:15.731] | : . earlySignal: FALSE
[08:07:15.731] | : . getGlobalsAndPackages() ...
[08:07:15.732] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.732] | : . ' Resolving globals: FALSE
[08:07:15.732] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:15.732] | : . ' , {
[08:07:15.732] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:15.732] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:15.732] | : . ' ,     "# as a global variable                                         "
[08:07:15.732] | : . ' ,     do.call(function(...) {
[08:07:15.732] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:15.732] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:15.732] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:15.732] | : . ' ,         "# anonymous function.                                          "
[08:07:15.732] | : . ' ,         "#                                                              "
[08:07:15.732] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:15.732] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:15.732] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:15.732] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:15.732] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:15.732] | : . ' ,         repeat {
[08:07:15.732] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:15.732] | : . ' ,                 emptyenv())) 
[08:07:15.732] | : . ' ,                 break
[08:07:15.732] | : . ' ,             penv <- env
[08:07:15.732] | : . ' ,             env <- parent.env(env)
[08:07:15.732] | : . ' ,         }
[08:07:15.732] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:15.732] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:15.732] | : . ' ,         }
[08:07:15.732] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:15.732] | : . ' ,             !isNamespace(penv)) {
[08:07:15.732] | : . ' ,             parent.env(penv) <- environment()
[08:07:15.732] | : . ' ,         }
[08:07:15.732] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:15.732] | : . ' ,         {
[08:07:15.732] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:15.732] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.732] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.732] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.732] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:15.732] | : . ' ,             }
[08:07:15.732] | : . ' ,             {
[08:07:15.732] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:15.732] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:15.732] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:15.732] | : . ' ,                   {
[08:07:15.732] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:15.732] | : . ' ,                   }
[08:07:15.732] | : . ' ,                 })
[08:07:15.732] | : . ' ,             }
[08:07:15.732] | : . ' ,         }
[08:07:15.732] | : . ' ,     }, args = future.call.arguments)
[08:07:15.732] | : . ' , }
[08:07:15.733] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:15.733] | : . ' Search for packages associated with the globals ...
[08:07:15.733] | : . ' , Packages associated with globals: [0] 
[08:07:15.733] | : . ' , Packages: [0] 
[08:07:15.734] | : . ' Search for packages associated with the globals ... done
[08:07:15.734] | : . ' Packages after dropping 'base': [0] 
[08:07:15.734] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:15.734] | : . ' packages: [0] 
[08:07:15.734] | : . getGlobalsAndPackages() ... done
[08:07:15.735] | : . run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:15.735] | : . ' state: ‘created’
[08:07:15.735] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.735] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.735] | : . ' Using MulticoreFutureBackend ...
[08:07:15.735] | : . ' , Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:15.736] | : . ' , Launching futures ...
[08:07:15.736] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:15.736] | : . ' , ; ` getFutureData() ...
[08:07:15.736] | : . ' , ; ` | getFutureCore() ...
[08:07:15.736] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:15.736] | : . ' , ; ` | getFutureCore() ... done
[08:07:15.736] | : . ' , ; ` | getFutureCapture() ...
[08:07:15.737] | : . ' , ; ` | getFutureCapture() ... done
[08:07:15.737] | : . ' , ; ` | getFutureContext() ...
[08:07:15.737] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.737] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:15.737] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.737] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:15.737] | : . ' , ; ` | getFutureContext() ... done
[08:07:15.738] | : . ' , ; ` getFutureData() ... done
[08:07:15.738] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:15.738] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:15.740] | : . ' , ; ` MulticoreFuture started
[08:07:15.741] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:15.741] | : . ' , Launching futures ... done
[08:07:15.742] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:15.729] | : . ' , ; ` | : . ' List of 2
[08:07:15.729] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.729] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.729] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.729] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.729] | : . ' , ; ` | : . '     ...)  
[08:07:15.729] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:15.729] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.729] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.729] | : . ' , ; ` | : . '     ...)  
[08:07:15.729] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.745] | : . ' , ; ` | : . ' Formals differ
[08:07:15.745] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:15.745] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:15.745] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:15.746] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:15.746] | : . ' , ; ` | : List of future strategies:
[08:07:15.746] | : . ' , ; ` | : 1. sequential:
[08:07:15.746] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:15.746] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:15.746] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.747] | : . ' Using MulticoreFutureBackend ... done
[08:07:15.748] | : . run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:15.748] | : future(..., label = ‘future_lapply-2’) ... done
[08:07:15.749] | : Created future:
[08:07:15.747] | : . ' , ; ` | : List of 1
[08:07:15.747] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.747] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.747] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:15.747] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.747] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.747] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.747] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.747] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.750] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:15.750] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:15.750] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.751] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:15.751] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.752] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:15.751] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.751] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.751] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:15.751] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.751] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.751] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.751] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.752] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.753] | : . ' , ; ` | : . ' init: TRUE
[08:07:15.753] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:15.753] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:15.753] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:15.753] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.753] | : . ' , ; ` | : . ' ,  list()
[08:07:15.754] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:15.754] | : . ' , ; ` | : . ' ,  list()
[08:07:15.754] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.754] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:15.754] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:15.755] | : . ' , ; ` | : . New stack:
[08:07:15.754] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:15.754] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:15.754] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:15.755] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:15.755] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:15.756] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:15.756] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.756] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:15.756] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.756] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.756] | : . ' , ; ` assign_globals() ...
[08:07:15.755] | : . ' , ; ` | : . List of 1
[08:07:15.755] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.755] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.755] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:15.755] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.755] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.755] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.755] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.755] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.760] | : . ' , ; ` | : . Old stack:
[08:07:15.763] | : readImmediateCondition() ...
[08:07:15.763] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.764] | : . Number of RDS files: 0
[08:07:15.764] | : . Returned conditions set:
[08:07:15.764] | : .  list()
[08:07:15.760] | : . ' , ; ` | : . List of 1
[08:07:15.760] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.760] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.760] | : . ' , ; ` | : .     ...)  
[08:07:15.760] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:15.760] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.760] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.760] | : . ' , ; ` | : .     ...)  
[08:07:15.760] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.760] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.765] | : readImmediateCondition() ... done
[08:07:15.765] | : . ' , ; ` | : . Not identical
[08:07:15.766] | : . ' , ; ` | : . all.equal() for future ...
[08:07:15.749] | : MulticoreFuture:
[08:07:15.749] | : Label: ‘future_lapply-2’
[08:07:15.749] | : Expression:
[08:07:15.749] | : {
[08:07:15.749] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:15.749] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:15.749] | :     "# as a global variable                                         "
[08:07:15.749] | :     do.call(function(...) {
[08:07:15.749] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:15.749] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:15.749] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:15.749] | :         "# anonymous function.                                          "
[08:07:15.749] | :         "#                                                              "
[08:07:15.749] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:15.749] | :         "# function environment of FUN() to the calling environment.    "
[08:07:15.749] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:15.749] | :         "# global environment, which is where globals are written.      "
[08:07:15.749] | :         penv <- env <- environment(...future.FUN)
[08:07:15.749] | :         repeat {
[08:07:15.749] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:15.749] | :                 emptyenv())) 
[08:07:15.749] | :                 break
[08:07:15.749] | :             penv <- env
[08:07:15.749] | :             env <- parent.env(env)
[08:07:15.749] | :         }
[08:07:15.749] | :         if (identical(penv, globalenv())) {
[08:07:15.749] | :             environment(...future.FUN) <- environment()
[08:07:15.749] | :         }
[08:07:15.749] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:15.749] | :             !isNamespace(penv)) {
[08:07:15.749] | :             parent.env(penv) <- environment()
[08:07:15.749] | :         }
[08:07:15.749] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:15.749] | :         {
[08:07:15.749] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:15.749] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:15.749] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:15.749] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:15.749] | :                 on.exit(options(oopts), add = TRUE)
[08:07:15.749] | :             }
[08:07:15.749] | :             {
[08:07:15.749] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:15.749] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:15.749] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:15.749] | :                   {
[08:07:15.749] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:15.749] | :                   }
[08:07:15.749] | :                 })
[08:07:15.749] | :             }
[08:07:15.749] | :         }
[08:07:15.749] | :     }, args = future.call.arguments)
[08:07:15.749] | : }
[08:07:15.749] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:15.749] | : Packages: <none>
[08:07:15.749] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:15.749] | : Capture standard output: FALSE
[08:07:15.749] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:15.749] | : Immediate condition classes: ‘immediateCondition’
[08:07:15.749] | : Lazy evaluation: FALSE
[08:07:15.749] | : Local evaluation: TRUE
[08:07:15.749] | : Asynchronous evaluation: TRUE
[08:07:15.749] | : Early signaling: FALSE
[08:07:15.749] | : Environment: R_GlobalEnv
[08:07:15.749] | : State: ‘running’
[08:07:15.749] | : Resolved: FALSE
[08:07:15.749] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-8
[08:07:15.749] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:15.749] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:15.749] | : Value: <not collected>
[08:07:15.749] | : Conditions captured: <none>
[08:07:15.766] | : Chunk #2 of 2 ... DONE
[08:07:15.766] | : Launching 2 futures (chunks) ... DONE
[08:07:15.756] | : . ' , ; ` List of 5
[08:07:15.756] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:15.756] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:15.756] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:15.756] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:15.756] | : . ' , ; `   ..$ : int 1
[08:07:15.756] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:15.756] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:15.756] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:15.756] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab9451d338> 
[08:07:15.756] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab9451d338> 
[08:07:15.756] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:15.756] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:15.756] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:15.756] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:15.756] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:15.756] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.756] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:15.766] | : Resolving 2 futures (chunks) ...
[08:07:15.767] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:15.767] | : value() for list ...
[08:07:15.767] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:15.767] | : . recursive: 0
[08:07:15.767] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:15.767] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:15.767] | : . reduce: FALSE
[08:07:15.767] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:15.767] | : . ' , ; ` assign_globals() ... done
[08:07:15.767] | : . length: 2

[08:07:15.768] | : . Number of remaining objects: 2
[08:07:15.768] | : . checking value #1:
[08:07:15.768] | : . 'obj' is MulticoreFuture
[08:07:15.766] | : . ' , ; ` | : . ' List of 2
[08:07:15.766] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.766] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.766] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.766] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.766] | : . ' , ; ` | : . '     ...)  
[08:07:15.766] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:15.766] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.766] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.766] | : . ' , ; ` | : . '     ...)  
[08:07:15.766] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.774] | : . ' , ; ` | : . ' Formals differ
[08:07:15.774] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:15.774] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:15.774] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:15.774] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:15.775] | : . ' , ; ` | : List of future strategies:
[08:07:15.775] | : . ' , ; ` | : 1. sequential:
[08:07:15.775] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:15.775] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:15.775] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.779] | : . readImmediateCondition() ...
[08:07:15.779] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.779] | : . ' Number of RDS files: 0
[08:07:15.779] | : . ' Returned conditions set:
[08:07:15.779] | : . '  list()
[08:07:15.780] | : . readImmediateCondition() ... done
[08:07:15.780] | : . checking value #2:
[08:07:15.780] | : . 'obj' is MulticoreFuture
[08:07:15.775] | : . ' , ; ` | : List of 1
[08:07:15.775] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.775] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.775] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:15.775] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.775] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.775] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.775] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.775] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.782] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:15.783] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:15.783] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.783] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:15.783] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.783] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.783] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:15.783] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.783] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.783] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.783] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.785] | : . ' , ; ` | : . ' init: TRUE
[08:07:15.785] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:15.785] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:15.785] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:15.786] | : . ' , ; ` | : . ' ,  list()
[08:07:15.786] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:15.786] | : . ' , ; ` | : . ' ,  list()
[08:07:15.786] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:15.786] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:15.786] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:15.786] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:15.787] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:15.788] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:15.788] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:15.788] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.788] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:15.788] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.788] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.788] | : . ' , ; ` assign_globals() ...
[08:07:15.791] | : . readImmediateCondition() ...
[08:07:15.791] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.791] | : . ' Number of RDS files: 0
[08:07:15.791] | : . ' Returned conditions set:
[08:07:15.792] | : . '  list()
[08:07:15.792] | : . readImmediateCondition() ... done
[08:07:15.788] | : . ' , ; ` List of 5
[08:07:15.788] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:15.788] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:15.788] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:15.788] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:15.788] | : . ' , ; `   ..$ : int 0
[08:07:15.788] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:15.788] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:15.788] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:15.788] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab9451d338> 
[08:07:15.788] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab9451d338> 
[08:07:15.788] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:15.788] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:15.788] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:15.788] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:15.788] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:15.788] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:15.788] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:15.794] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:15.794] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:15.794] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:15.794] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:15.795] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:15.795] | : . ' , ; ` assign_globals() ... done
[08:07:15.797] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.797] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:15.797] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:15.797] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:15.797] | : . ' , ; ` | : . ' New stack:
[08:07:15.798] | : . ' , ; ` | : . ' List of 1
[08:07:15.798] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.798] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.798] | : . ' , ; ` | : . '     ...)  
[08:07:15.798] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:15.798] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.798] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.798] | : . ' , ; ` | : . '     ...)  
[08:07:15.798] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.798] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.802] | : . ' , ; ` | : . ' Old stack:
[08:07:15.802] | : . Number of remaining objects: 2
[08:07:15.803] | : . checking value #1:
[08:07:15.803] | : . 'obj' is MulticoreFuture
[08:07:15.802] | : . ' , ; ` | : . ' List of 1
[08:07:15.802] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.802] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.802] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93f069b8> 
[08:07:15.802] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.802] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.802] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.806] | : . ' , ; ` | : . ' Not identical
[08:07:15.806] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:15.806] | : . ' , ; ` | : . ' , List of 2
[08:07:15.806] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.806] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.806] | : . ' , ; ` | : . ' ,     ...)  
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.806] | : . ' , ; ` | : . ' ,     ...)  
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.806] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:15.806] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93f069b8> 
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:15.806] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:15.812] | : . ' , ; ` | : . ' , Formals differ
[08:07:15.812] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:15.812] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:15.812] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:15.812] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:15.812] | : . ' , ; ` | : . List of future strategies:
[08:07:15.812] | : . ' , ; ` | : . 1. multicore:
[08:07:15.812] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:15.812] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:15.812] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:15.813] | : . readImmediateCondition() ...
[08:07:15.813] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.814] | : . ' Number of RDS files: 0
[08:07:15.814] | : . ' Returned conditions set:
[08:07:15.814] | : . '  list()
[08:07:15.815] | : . readImmediateCondition() ... done
[08:07:15.815] | : . checking value #2:
[08:07:15.815] | : . 'obj' is MulticoreFuture
[08:07:15.813] | : . ' , ; ` | : . List of 1
[08:07:15.813] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:15.813] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.813] | : . ' , ; ` | : .     ...)  
[08:07:15.813] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:15.813] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:15.813] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:15.813] | : . ' , ; ` | : .     ...)  
[08:07:15.813] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:15.813] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:15.817] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:15.817] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:15.817] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:15.817] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:15.817] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:15.817] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:15.817] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.818] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:15.819] | : . readImmediateCondition() ...
[08:07:15.819] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.819] | : . ' Number of RDS files: 0
[08:07:15.819] | : . ' Returned conditions set:
[08:07:15.819] | : . '  list()
[08:07:15.820] | : . readImmediateCondition() ... done
[08:07:15.820] | : . MulticoreFuture #2
[08:07:15.820] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:15.820] | : . ' nx: 2
[08:07:15.820] | : . ' relay: TRUE
[08:07:15.820] | : . ' stdout: TRUE
[08:07:15.820] | : . ' signal: TRUE
[08:07:15.821] | : . ' resignal: FALSE
[08:07:15.821] | : . ' force: TRUE
[08:07:15.821] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:15.821] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:15.821] | : . ' until=1
[08:07:15.821] | : . ' relaying element #1
[08:07:15.821] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:15.821] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:15.822] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:15.822] | : . value(<MulticoreFuture>, ...) ...
[08:07:15.822] | : . value(<MulticoreFuture>, ...) ... done
[08:07:15.822] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:15.823] | : . ' result() for MulticoreFuture ...
[08:07:15.824] | : . ' , readImmediateCondition() ...
[08:07:15.824] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.824] | : . ' , ; Number of RDS files: 0
[08:07:15.825] | : . ' , ; Returned conditions set:
[08:07:15.825] | : . ' , ;  list()
[08:07:15.825] | : . ' , readImmediateCondition() ... done
[08:07:15.825] | : . ' , result() for MulticoreFuture ...
[08:07:15.826] | : . ' , result() for MulticoreFuture ... done
[08:07:15.826] | : . ' , signalConditions() ...
[08:07:15.826] | : . ' , ; include = ‘immediateCondition’
[08:07:15.826] | : . ' , ; exclude = 
[08:07:15.826] | : . ' , ; resignal = FALSE
[08:07:15.826] | : . ' , ; Number of conditions: 6
[08:07:15.826] | : . ' , ;  int 6
[08:07:15.827] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.827] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.827] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.827] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.827] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.827] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.828] | : . ' , ; Drop signaled conditions: 0
[08:07:15.828] | : . ' , signalConditions() ... done
[08:07:15.828] | : . ' result() for MulticoreFuture ... done
[08:07:15.828] | : . ' result() for MulticoreFuture ...
[08:07:15.828] | : . ' result() for MulticoreFuture ... done
[08:07:15.828] | : . ' signalConditions() ...
[08:07:15.828] | : . ' , include = ‘immediateCondition’
[08:07:15.828] | : . ' , exclude = 
[08:07:15.829] | : . ' , resignal = FALSE
[08:07:15.829] | : . ' , Number of conditions: 6
[08:07:15.829] | : . ' ,  int 6
[08:07:15.829] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.829] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.829] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.830] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.830] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.830] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:15.830] | : . ' , Drop signaled conditions: 0
[08:07:15.830] | : . ' signalConditions() ... done
[08:07:15.830] | : . ' check for misuse ...
[08:07:15.830] | : . ' check for misuse ... done
[08:07:15.830] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:15.831] | : . value: <list>
[08:07:15.831] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:15.831] | : . ' nx: 2
[08:07:15.831] | : . ' relay: TRUE
[08:07:15.831] | : . ' stdout: TRUE
[08:07:15.831] | : . ' signal: TRUE
[08:07:15.831] | : . ' resignal: FALSE
[08:07:15.831] | : . ' force: TRUE
[08:07:15.831] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:15.832] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:15.832] | : . ' until=1
[08:07:15.832] | : . ' relaying element #1
[08:07:15.835] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:15.835] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:15.836] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:15.836] | : . resolve() for MulticoreFuture ...
[08:07:15.836] | : . resolve() for MulticoreFuture ... done
[08:07:15.836] | : . length: 1 (resolved future 2)
[08:07:15.836] | : value() for list ... done
[08:07:15.846] | : Number of remaining objects: 1
[08:07:15.846] | : checking value #1:
[08:07:15.847] | : 'obj' is MulticoreFuture
[08:07:15.857] | : readImmediateCondition() ...
[08:07:15.857] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.857] | : . Number of RDS files: 0
[08:07:15.857] | : . Returned conditions set:
[08:07:15.857] | : .  list()
[08:07:15.858] | : readImmediateCondition() ... done
[08:07:15.868] | : Number of remaining objects: 1
[08:07:15.868] | : checking value #1:
[08:07:15.868] | : 'obj' is MulticoreFuture
[08:07:15.879] | : readImmediateCondition() ...
[08:07:15.879] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.879] | : . Number of RDS files: 0
[08:07:15.879] | : . Returned conditions set:
[08:07:15.879] | : .  list()
[08:07:15.880] | : readImmediateCondition() ... done
[08:07:15.890] | : Number of remaining objects: 1
[08:07:15.890] | : checking value #1:
[08:07:15.890] | : 'obj' is MulticoreFuture
[08:07:15.900] | : readImmediateCondition() ...
[08:07:15.901] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.901] | : . Number of RDS files: 0
[08:07:15.901] | : . Returned conditions set:
[08:07:15.901] | : .  list()
[08:07:15.901] | : readImmediateCondition() ... done
[08:07:15.911] | : Number of remaining objects: 1
[08:07:15.912] | : checking value #1:
[08:07:15.912] | : 'obj' is MulticoreFuture
[08:07:15.922] | : readImmediateCondition() ...
[08:07:15.922] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.922] | : . Number of RDS files: 0
[08:07:15.922] | : . Returned conditions set:
[08:07:15.923] | : .  list()
[08:07:15.923] | : readImmediateCondition() ... done
[08:07:15.933] | : Number of remaining objects: 1
[08:07:15.933] | : checking value #1:
[08:07:15.933] | : 'obj' is MulticoreFuture
[08:07:15.943] | : readImmediateCondition() ...
[08:07:15.944] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.944] | : . Number of RDS files: 0
[08:07:15.944] | : . Returned conditions set:
[08:07:15.944] | : .  list()
[08:07:15.944] | : readImmediateCondition() ... done
[08:07:15.955] | : Number of remaining objects: 1
[08:07:15.955] | : checking value #1:
[08:07:15.955] | : 'obj' is MulticoreFuture
[08:07:15.965] | : readImmediateCondition() ...
[08:07:15.965] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.965] | : . Number of RDS files: 0
[08:07:15.966] | : . Returned conditions set:
[08:07:15.966] | : .  list()
[08:07:15.966] | : readImmediateCondition() ... done
[08:07:15.976] | : Number of remaining objects: 1
[08:07:15.976] | : checking value #1:
[08:07:15.976] | : 'obj' is MulticoreFuture
[08:07:15.987] | : readImmediateCondition() ...
[08:07:15.987] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:15.987] | : . Number of RDS files: 0
[08:07:15.987] | : . Returned conditions set:
[08:07:15.987] | : .  list()
[08:07:15.988] | : readImmediateCondition() ... done
[08:07:15.998] | : Number of remaining objects: 1
[08:07:15.998] | : checking value #1:
[08:07:15.998] | : 'obj' is MulticoreFuture
[08:07:16.008] | : readImmediateCondition() ...
[08:07:16.008] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.009] | : . Number of RDS files: 0
[08:07:16.009] | : . Returned conditions set:
[08:07:16.009] | : .  list()
[08:07:16.009] | : readImmediateCondition() ... done
[08:07:16.019] | : Number of remaining objects: 1
[08:07:16.020] | : checking value #1:
[08:07:16.020] | : 'obj' is MulticoreFuture
[08:07:16.030] | : readImmediateCondition() ...
[08:07:16.030] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.030] | : . Number of RDS files: 0
[08:07:16.030] | : . Returned conditions set:
[08:07:16.031] | : .  list()
[08:07:16.031] | : readImmediateCondition() ... done
[08:07:16.041] | : Number of remaining objects: 1
[08:07:16.041] | : checking value #1:
[08:07:16.041] | : 'obj' is MulticoreFuture
[08:07:16.052] | : readImmediateCondition() ...
[08:07:16.052] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.052] | : . Number of RDS files: 0
[08:07:16.052] | : . Returned conditions set:
[08:07:16.052] | : .  list()
[08:07:16.052] | : readImmediateCondition() ... done
[08:07:16.063] | : Number of remaining objects: 1
[08:07:16.063] | : checking value #1:
[08:07:16.063] | : 'obj' is MulticoreFuture
[08:07:16.073] | : readImmediateCondition() ...
[08:07:16.073] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.073] | : . Number of RDS files: 0
[08:07:16.074] | : . Returned conditions set:
[08:07:16.074] | : .  list()
[08:07:16.074] | : readImmediateCondition() ... done
[08:07:16.084] | : Number of remaining objects: 1
[08:07:16.084] | : checking value #1:
[08:07:16.085] | : 'obj' is MulticoreFuture
[08:07:16.095] | : readImmediateCondition() ...
[08:07:16.095] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.095] | : . Number of RDS files: 0
[08:07:16.095] | : . Returned conditions set:
[08:07:16.095] | : .  list()
[08:07:16.096] | : readImmediateCondition() ... done
[08:07:16.106] | : Number of remaining objects: 1
[08:07:16.106] | : checking value #1:
[08:07:16.106] | : 'obj' is MulticoreFuture
[08:07:16.116] | : readImmediateCondition() ...
[08:07:16.117] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.117] | : . Number of RDS files: 0
[08:07:16.117] | : . Returned conditions set:
[08:07:16.117] | : .  list()
[08:07:16.117] | : readImmediateCondition() ... done
[08:07:16.127] | : Number of remaining objects: 1
[08:07:16.128] | : checking value #1:
[08:07:16.128] | : 'obj' is MulticoreFuture
[08:07:16.138] | : readImmediateCondition() ...
[08:07:16.138] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.138] | : . Number of RDS files: 0
[08:07:16.138] | : . Returned conditions set:
[08:07:16.139] | : .  list()
[08:07:16.139] | : readImmediateCondition() ... done
[08:07:16.149] | : Number of remaining objects: 1
[08:07:16.149] | : checking value #1:
[08:07:16.149] | : 'obj' is MulticoreFuture
[08:07:16.160] | : readImmediateCondition() ...
[08:07:16.162] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.162] | : . Number of RDS files: 0
[08:07:16.162] | : . Returned conditions set:
[08:07:16.162] | : .  list()
[08:07:16.163] | : readImmediateCondition() ... done
[08:07:16.173] | : Number of remaining objects: 1
[08:07:16.173] | : checking value #1:
[08:07:16.173] | : 'obj' is MulticoreFuture
[08:07:16.183] | : readImmediateCondition() ...
[08:07:16.184] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.184] | : . Number of RDS files: 0
[08:07:16.184] | : . Returned conditions set:
[08:07:16.184] | : .  list()
[08:07:16.185] | : readImmediateCondition() ... done
[08:07:16.195] | : Number of remaining objects: 1
[08:07:16.195] | : checking value #1:
[08:07:16.195] | : 'obj' is MulticoreFuture
[08:07:16.205] | : readImmediateCondition() ...
[08:07:16.206] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.206] | : . Number of RDS files: 0
[08:07:16.206] | : . Returned conditions set:
[08:07:16.206] | : .  list()
[08:07:16.206] | : readImmediateCondition() ... done
[08:07:16.217] | : Number of remaining objects: 1
[08:07:16.217] | : checking value #1:
[08:07:16.217] | : 'obj' is MulticoreFuture
[08:07:16.227] | : readImmediateCondition() ...
[08:07:16.227] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.227] | : . Number of RDS files: 0
[08:07:16.228] | : . Returned conditions set:
[08:07:16.228] | : .  list()
[08:07:16.228] | : readImmediateCondition() ... done
[08:07:16.238] | : Number of remaining objects: 1
[08:07:16.238] | : checking value #1:
[08:07:16.239] | : 'obj' is MulticoreFuture
[08:07:16.249] | : readImmediateCondition() ...
[08:07:16.249] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.249] | : . Number of RDS files: 0
[08:07:16.249] | : . Returned conditions set:
[08:07:16.250] | : .  list()
[08:07:16.250] | : readImmediateCondition() ... done
[08:07:16.260] | : Number of remaining objects: 1
[08:07:16.260] | : checking value #1:
[08:07:16.260] | : 'obj' is MulticoreFuture
[08:07:16.271] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.271] | : readImmediateCondition() ...
[08:07:16.271] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.271] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.271] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:16.271] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:16.271] | : . Number of RDS files: 0
[08:07:16.271] | : . ' , ; ` | : . ' New stack:
[08:07:16.271] | : . Returned conditions set:
[08:07:16.271] | : .  list()
[08:07:16.272] | : readImmediateCondition() ... done
[08:07:16.271] | : . ' , ; ` | : . ' List of 1
[08:07:16.271] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.271] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.271] | : . ' , ; ` | : . '     ...)  
[08:07:16.271] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:16.271] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.271] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.271] | : . ' , ; ` | : . '     ...)  
[08:07:16.271] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.271] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.275] | : . ' , ; ` | : . ' Old stack:
[08:07:16.275] | : . ' , ; ` | : . ' List of 1
[08:07:16.275] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.275] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.275] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9604fb60> 
[08:07:16.275] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.275] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.275] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.278] | : . ' , ; ` | : . ' Not identical
[08:07:16.279] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:16.282] | : Number of remaining objects: 1
[08:07:16.282] | : checking value #1:
[08:07:16.282] | : 'obj' is MulticoreFuture
[08:07:16.279] | : . ' , ; ` | : . ' , List of 2
[08:07:16.279] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.279] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.279] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.279] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.279] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.279] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9604fb60> 
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.279] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.286] | : . ' , ; ` | : . ' , Formals differ
[08:07:16.287] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:16.287] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:16.287] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:16.287] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:16.287] | : . ' , ; ` | : . List of future strategies:
[08:07:16.287] | : . ' , ; ` | : . 1. multicore:
[08:07:16.287] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:16.287] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:16.287] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:16.287] | : . ' , ; ` | : . List of 1
[08:07:16.287] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.287] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.287] | : . ' , ; ` | : .     ...)  
[08:07:16.287] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:16.287] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.287] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.287] | : . ' , ; ` | : .     ...)  
[08:07:16.287] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.287] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.291] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:16.291] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:16.291] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.291] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.291] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:16.291] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:16.292] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.292] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.292] | : readImmediateCondition() ...
[08:07:16.292] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.292] | : . Number of RDS files: 0
[08:07:16.293] | : . Returned conditions set:
[08:07:16.293] | : .  list()
[08:07:16.293] | : readImmediateCondition() ... done
[08:07:16.293] | : MulticoreFuture #1
[08:07:16.293] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:16.293] | : . nx: 2
[08:07:16.293] | : . relay: TRUE
[08:07:16.294] | : . stdout: TRUE
[08:07:16.294] | : . signal: TRUE
[08:07:16.294] | : . resignal: FALSE
[08:07:16.294] | : . force: TRUE
[08:07:16.294] | : . relayed: [n=2] FALSE, FALSE
[08:07:16.294] | : . queued futures: [n=2] FALSE, TRUE
[08:07:16.294] | : . until=1
[08:07:16.294] | : . relaying element #1
[08:07:16.294] | : . value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:16.294] | : . ' result() for MulticoreFuture ...
[08:07:16.295] | : . ' , readImmediateCondition() ...
[08:07:16.295] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.295] | : . ' , ; Number of RDS files: 0
[08:07:16.295] | : . ' , ; Returned conditions set:
[08:07:16.295] | : . ' , ;  list()
[08:07:16.296] | : . ' , readImmediateCondition() ... done
[08:07:16.296] | : . ' , result() for MulticoreFuture ...
[08:07:16.296] | : . ' , result() for MulticoreFuture ... done
[08:07:16.296] | : . ' , signalConditions() ...
[08:07:16.296] | : . ' , ; include = ‘immediateCondition’
[08:07:16.296] | : . ' , ; exclude = 
[08:07:16.297] | : . ' , ; resignal = FALSE
[08:07:16.297] | : . ' , ; Number of conditions: 6
[08:07:16.297] | : . ' , ;  int 6
[08:07:16.297] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.297] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.297] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.298] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.298] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.298] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.298] | : . ' , ; Drop signaled conditions: 0
[08:07:16.298] | : . ' , signalConditions() ... done
[08:07:16.298] | : . ' result() for MulticoreFuture ... done
[08:07:16.298] | : . ' result() for MulticoreFuture ...
[08:07:16.298] | : . ' result() for MulticoreFuture ... done
[08:07:16.298] | : . ' signalConditions() ...
[08:07:16.299] | : . ' , include = ‘immediateCondition’
[08:07:16.299] | : . ' , exclude = 
[08:07:16.299] | : . ' , resignal = FALSE
[08:07:16.299] | : . ' , Number of conditions: 6
[08:07:16.299] | : . ' ,  int 6
[08:07:16.299] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.300] | : . ' , Drop signaled conditions: 0
[08:07:16.300] | : . ' signalConditions() ... done
[08:07:16.300] | : . ' relay stdout ...
[08:07:16.300] | : . ' relay stdout ... done
[08:07:16.301] | : . ' check for misuse ...
[08:07:16.301] | : . ' check for misuse ... done
[08:07:16.301] | : . value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:16.301] | : . result() for MulticoreFuture ...
[08:07:16.301] | : . result() for MulticoreFuture ... done
[08:07:16.301] | : . signalConditions() ...
[08:07:16.301] | : . ' include = ‘immediateCondition’
[08:07:16.301] | : . ' exclude = 
[08:07:16.301] | : . ' resignal = FALSE
[08:07:16.301] | : . ' Number of conditions: 6
[08:07:16.302] | : . '  int 6
[08:07:16.302] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.302] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.302] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.302] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.302] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.303] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.303] | : . ' Drop signaled conditions: 0
[08:07:16.303] | : . signalConditions() ... done
[08:07:16.303] | : . result() for MulticoreFuture ...
[08:07:16.303] | : . result() for MulticoreFuture ... done
[08:07:16.303] | : . signalConditions() ...
[08:07:16.305] | : . ' include = ‘condition’
[08:07:16.305] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:16.305] | : . ' resignal = TRUE
[08:07:16.305] | : . ' Number of conditions: 6
[08:07:16.306] | : . '  int 6
[08:07:16.306] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.306] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.710] | : . ' , ; ` attachPackages() ...
[08:07:16.306] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.307] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.711] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:16.307] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.307] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.711] | : . ' , ; ` attachPackages() ... done
[08:07:16.307] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.307] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.712] | : . ' , ; ` attachPackages() ...
[08:07:16.307] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.308] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.712] | : . ' , ; ` | packages: [n=0] 
[08:07:16.308] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.308] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.712] | : . ' , ; ` attachPackages() ... done
[08:07:16.308] | : . ' Drop signaled conditions: 6
[08:07:16.308] | : . signalConditions() ... done
[08:07:16.308] | : . relayed: [n=2] TRUE, FALSE
[08:07:16.308] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.308] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:16.309] | : value(<MulticoreFuture>, ...) ...
[08:07:16.309] | : value(<MulticoreFuture>, ...) ... done
[08:07:16.309] | : value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:16.309] | : . result() for MulticoreFuture ...
[08:07:16.309] | : . result() for MulticoreFuture ... done
[08:07:16.309] | : . result() for MulticoreFuture ...
[08:07:16.309] | : . result() for MulticoreFuture ... done
[08:07:16.309] | : . signalConditions() ...
[08:07:16.309] | : . ' include = ‘immediateCondition’
[08:07:16.310] | : . ' exclude = 
[08:07:16.310] | : . ' resignal = FALSE
[08:07:16.310] | : . ' Number of conditions: 0
[08:07:16.310] | : . '  int 0
[08:07:16.310] | : . signalConditions() ... done
[08:07:16.310] | : . check for misuse ...
[08:07:16.310] | : . check for misuse ... done
[08:07:16.311] | : value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:16.311] | : value: <list>
[08:07:16.311] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:16.311] | : . nx: 2
[08:07:16.311] | : . relay: TRUE
[08:07:16.311] | : . stdout: TRUE
[08:07:16.311] | : . signal: TRUE
[08:07:16.311] | : . resignal: FALSE
[08:07:16.311] | : . force: TRUE
[08:07:16.311] | : . relayed: [n=2] TRUE, FALSE
[08:07:16.312] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.312] | : . until=2
[08:07:16.312] | : . relaying element #2
[08:07:16.312] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:16.312] | : . ' result() for MulticoreFuture ...
[08:07:16.312] | : . ' result() for MulticoreFuture ... done
[08:07:16.312] | : . ' result() for MulticoreFuture ...
[08:07:16.312] | : . ' result() for MulticoreFuture ... done
[08:07:16.312] | : . ' signalConditions() ...
[08:07:16.312] | : . ' , include = ‘immediateCondition’
[08:07:16.313] | : . ' , exclude = 
[08:07:16.313] | : . ' , resignal = FALSE
[08:07:16.313] | : . ' , Number of conditions: 6
[08:07:16.313] | : . ' ,  int 6
[08:07:16.313] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.313] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.314] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.314] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.314] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.314] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.314] | : . ' , Drop signaled conditions: 0
[08:07:16.314] | : . ' signalConditions() ... done
[08:07:16.314] | : . ' relay stdout ...
[08:07:16.314] | : . ' relay stdout ... done
[08:07:16.314] | : . ' check for misuse ...
[08:07:16.314] | : . ' check for misuse ... done
[08:07:16.315] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:16.315] | : . result() for MulticoreFuture ...
[08:07:16.315] | : . result() for MulticoreFuture ... done
[08:07:16.315] | : . signalConditions() ...
[08:07:16.315] | : . ' include = ‘immediateCondition’
[08:07:16.315] | : . ' exclude = 
[08:07:16.315] | : . ' resignal = FALSE
[08:07:16.315] | : . ' Number of conditions: 6
[08:07:16.315] | : . '  int 6
[08:07:16.316] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.316] | : . ' Drop signaled conditions: 0
[08:07:16.317] | : . signalConditions() ... done
[08:07:16.317] | : . result() for MulticoreFuture ...
[08:07:16.317] | : . result() for MulticoreFuture ... done
[08:07:16.317] | : . signalConditions() ...
[08:07:16.317] | : . ' include = ‘condition’
[08:07:16.317] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:16.317] | : . ' resignal = TRUE
[08:07:16.317] | : . ' Number of conditions: 6
[08:07:16.317] | : . '  int 6
[08:07:16.318] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.318] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.742] | : . ' , ; ` attachPackages() ...
[08:07:16.318] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.318] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.742] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:16.318] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.318] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.747] | : . ' , ; ` attachPackages() ... done
[08:07:16.318] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.319] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.748] | : . ' , ; ` attachPackages() ...
[08:07:16.319] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.319] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.749] | : . ' , ; ` | packages: [n=0] 
[08:07:16.319] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.319] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:15.749] | : . ' , ; ` attachPackages() ... done
[08:07:16.319] | : . ' Drop signaled conditions: 6
[08:07:16.319] | : . signalConditions() ... done
[08:07:16.319] | : . relayed: [n=2] TRUE, TRUE
[08:07:16.319] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.320] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:16.320] | : resolve() for MulticoreFuture ...
[08:07:16.320] | : resolve() for MulticoreFuture ... done
[08:07:16.320] | : length: 0 (resolved future 1)
[08:07:16.320] | future_lapply() -> future_xapply() ... done
[08:07:16.320] | Relaying remaining futures ...
[08:07:16.320] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:16.320] | : . nx: 2
[08:07:16.320] | : . relay: TRUE
[08:07:16.320] | : . stdout: TRUE
[08:07:16.321] | : . signal: TRUE
[08:07:16.321] | : . resignal: FALSE
[08:07:16.321] | : . force: TRUE
[08:07:16.321] | : . relayed: [n=2] TRUE, TRUE
[08:07:16.321] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:16.321] | : . relayed: [n=2] TRUE, TRUE
[08:07:16.321] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.321] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:16.321] | Relaying remaining futures ... done
[08:07:16.322] future_lapply() ... done
[08:07:16.322]  - Number of value chunks collected: 2
[08:07:16.322] Resolving 2 futures (chunks) ... DONE
[08:07:16.322] Reducing values from 2 chunks ...
[08:07:16.323]  - Number of values collected after concatenation: 2
[08:07:16.324]  - Number of values expected: 2
[08:07:16.324] Reducing values from 2 chunks ... DONE


* future_lapply(x, ..., future.stdout = FALSE) ... DONE
* future_lapply(x, ..., future.stdout = TRUE) ...
[08:07:16.324] future_lapply() ...
[08:07:16.325] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:16.325] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:16.326] | future_lapply() -> future_xapply() ...
[08:07:16.326] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.326] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.326] | : Number of chunks: 2
[08:07:16.327] | : getGlobalsAndPackagesXApply() ...
[08:07:16.327] | : . future.globals: TRUE
[08:07:16.327] | : . getGlobalsAndPackages() ...
[08:07:16.327] | : . ' Searching for globals ...
[08:07:16.334] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:16.334] | : . ' Searching for globals ... done
[08:07:16.335] | : . ' Resolving globals: FALSE
[08:07:16.335] | : . ' Search for packages associated with the globals ...
[08:07:16.335] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:16.335] | : . ' , Packages: [1] ‘base’
[08:07:16.335] | : . ' Search for packages associated with the globals ... done
[08:07:16.336] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:16.336] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:16.336] | : . ' Packages after dropping 'base': [0] 
[08:07:16.336] | : . ' globals: [1] ‘FUN’
[08:07:16.336] | : . ' packages: [0] 
[08:07:16.337] | : . getGlobalsAndPackages() ... done
[08:07:16.337] | : . globals found/used: [n=1] ‘FUN’
[08:07:16.337] | : . needed namespaces: [n=0] 
[08:07:16.337] | : . use_args: TRUE
[08:07:16.337] | : . Getting '...' globals ...
[08:07:16.337] | : . ' resolve() for FutureGlobals ...
[08:07:16.337] | : . ' , recursive: 0
[08:07:16.338] | : . ' , Number of elements: 1
[08:07:16.338] | : . ' , elements: ‘...’
[08:07:16.338] | : . ' , 'obj' is DotDotDotList
[08:07:16.338] | : . ' , resolve(obj, ...) ...
[08:07:16.338] | : . ' , ; resolve() for DotDotDotList ...
[08:07:16.338] | : . ' , ; ` recursive: -1
[08:07:16.338] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:16.338] | : . ' , resolve(obj, ...) ... done
[08:07:16.339] | : . ' , resolved() for DotDotDotList ...
[08:07:16.339] | : . ' , ; Number of elements: 0
[08:07:16.339] | : . ' , ; Number of futures: 0
[08:07:16.339] | : . ' , resolved() for DotDotDotList ... done
[08:07:16.339] | : . ' , length: 0 (resolved future 1)
[08:07:16.339] | : . ' resolve() for FutureGlobals ... done
[08:07:16.339] | : . ' '...' content: [n=0] 
[08:07:16.339] | : . ' List of 1
[08:07:16.339] | : . '  $ ...: list()
[08:07:16.339] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:16.339] | : . '  - attr(*, "where")=List of 1
[08:07:16.339] | : . '   ..$ ...:<environment: 0x55ab965bb4c0> 
[08:07:16.339] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:16.339] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:16.339] | : . '  - attr(*, "total_size")= num NA
[08:07:16.344] | : . Getting '...' globals ... done
[08:07:16.345] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:16.345] | : . List of 2
[08:07:16.345] | : .  $ ...future.FUN:function (x)  
[08:07:16.345] | : .  $ ...          : list()
[08:07:16.345] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:16.345] | : .  - attr(*, "where")=List of 2
[08:07:16.345] | : .   ..$ ...future.FUN:<environment: 0x55ab965bb4c0> 
[08:07:16.345] | : .   ..$ ...          :<environment: 0x55ab965bb4c0> 
[08:07:16.345] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:16.345] | : .  - attr(*, "resolved")= logi FALSE
[08:07:16.345] | : .  - attr(*, "total_size")= num 6008
[08:07:16.348] | : . Packages to be attached in all futures: [n=0] 
[08:07:16.348] | : getGlobalsAndPackagesXApply() ... done
[08:07:16.348] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.348] | : List of 5
[08:07:16.348] | :  $ ...future.FUN            :function (x)  
[08:07:16.348] | :  $ ...                      : list()
[08:07:16.348] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:16.348] | :  $ ...future.elements_ii    : NULL
[08:07:16.348] | :  $ ...future.seeds_ii       : NULL
[08:07:16.348] | :  $ ...future.globals.maxSize: NULL
[08:07:16.348] | :  - attr(*, "where")=List of 5
[08:07:16.348] | :   ..$ ...future.FUN            :<environment: 0x55ab965bb4c0> 
[08:07:16.348] | :   ..$ ...                      :<environment: 0x55ab965bb4c0> 
[08:07:16.348] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:16.348] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:16.348] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:16.348] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:16.348] | :  - attr(*, "resolved")= logi FALSE
[08:07:16.348] | :  - attr(*, "total_size")= num 6008
[08:07:16.353] | : Number of futures (= number of chunks): 2
[08:07:16.353] | : Launching 2 futures (chunks) ...
[08:07:16.353] | : Chunk #1 of 2 ...
[08:07:16.353] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:16.353] | : getGlobalsAndPackages() ...
[08:07:16.353] | : . Searching for globals ...
[08:07:16.354] | : . ' globals found: [0] 
[08:07:16.354] | : . Searching for globals ... done
[08:07:16.354] | : . globals: [0] <none>
[08:07:16.354] | : . packages: [0] <none>
[08:07:16.354] | : getGlobalsAndPackages() ... done
[08:07:16.354] | :    + additional globals found: [n=0] 
[08:07:16.354] | :    + additional namespaces needed: [n=0] 
[08:07:16.354] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:16.354] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:16.354] | :  - seeds: <none>
[08:07:16.355] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.355] | : future(..., label = ‘future_lapply-1’) ...
[08:07:16.355] | : . lazy: FALSE
[08:07:16.355] | : . stdout: TRUE
[08:07:16.355] | : . conditions: [n=1] ‘condition’
[08:07:16.355] | : . gc: FALSE
[08:07:16.355] | : . earlySignal: FALSE
[08:07:16.355] | : . getGlobalsAndPackages() ...
[08:07:16.355] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.356] | : . ' Resolving globals: FALSE
[08:07:16.356] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:16.356] | : . ' , {
[08:07:16.356] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:16.356] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:16.356] | : . ' ,     "# as a global variable                                         "
[08:07:16.356] | : . ' ,     do.call(function(...) {
[08:07:16.356] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:16.356] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:16.356] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:16.356] | : . ' ,         "# anonymous function.                                          "
[08:07:16.356] | : . ' ,         "#                                                              "
[08:07:16.356] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:16.356] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:16.356] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:16.356] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:16.356] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:16.356] | : . ' ,         repeat {
[08:07:16.356] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:16.356] | : . ' ,                 emptyenv())) 
[08:07:16.356] | : . ' ,                 break
[08:07:16.356] | : . ' ,             penv <- env
[08:07:16.356] | : . ' ,             env <- parent.env(env)
[08:07:16.356] | : . ' ,         }
[08:07:16.356] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:16.356] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:16.356] | : . ' ,         }
[08:07:16.356] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:16.356] | : . ' ,             !isNamespace(penv)) {
[08:07:16.356] | : . ' ,             parent.env(penv) <- environment()
[08:07:16.356] | : . ' ,         }
[08:07:16.356] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:16.356] | : . ' ,         {
[08:07:16.356] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:16.356] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:16.356] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:16.356] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:16.356] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:16.356] | : . ' ,             }
[08:07:16.356] | : . ' ,             {
[08:07:16.356] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:16.356] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:16.356] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:16.356] | : . ' ,                   {
[08:07:16.356] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:16.356] | : . ' ,                   }
[08:07:16.356] | : . ' ,                 })
[08:07:16.356] | : . ' ,             }
[08:07:16.356] | : . ' ,         }
[08:07:16.356] | : . ' ,     }, args = future.call.arguments)
[08:07:16.356] | : . ' , }
[08:07:16.356] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:16.356] | : . ' Search for packages associated with the globals ...
[08:07:16.357] | : . ' , Packages associated with globals: [0] 
[08:07:16.357] | : . ' , Packages: [0] 
[08:07:16.357] | : . ' Search for packages associated with the globals ... done
[08:07:16.357] | : . ' Packages after dropping 'base': [0] 
[08:07:16.357] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.357] | : . ' packages: [0] 
[08:07:16.358] | : . getGlobalsAndPackages() ... done
[08:07:16.358] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:16.358] | : . ' state: ‘created’
[08:07:16.358] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.358] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.358] | : . ' Using MulticoreFutureBackend ...
[08:07:16.358] | : . ' , Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:16.359] | : . ' , Launching futures ...
[08:07:16.359] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:16.359] | : . ' , ; ` getFutureData() ...
[08:07:16.359] | : . ' , ; ` | getFutureCore() ...
[08:07:16.359] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:16.359] | : . ' , ; ` | getFutureCore() ... done
[08:07:16.359] | : . ' , ; ` | getFutureCapture() ...
[08:07:16.359] | : . ' , ; ` | getFutureCapture() ... done
[08:07:16.360] | : . ' , ; ` | getFutureContext() ...
[08:07:16.360] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.360] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:16.360] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.360] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:16.362] | : . ' , ; ` | getFutureContext() ... done
[08:07:16.362] | : . ' , ; ` getFutureData() ... done
[08:07:16.362] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:16.362] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:16.365] | : . ' , ; ` MulticoreFuture started
[08:07:16.366] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:16.366] | : . ' , Launching futures ... done
[08:07:16.367] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:16.367] | : . ' Using MulticoreFutureBackend ... done
[08:07:16.368] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:16.368] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:16.369] | : Created future:
[08:07:16.370] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.371] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:16.371] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.372] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.373] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:16.373] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:16.373] | : . ' , ; ` | : . New stack:
[08:07:16.374] | : . ' , ; ` | : . List of 1
[08:07:16.374] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.374] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.374] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:16.374] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.374] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.374] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.374] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.374] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.379] | : . ' , ; ` | : . Old stack:
[08:07:16.382] | : readImmediateCondition() ...
[08:07:16.382] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.383] | : . Number of RDS files: 0
[08:07:16.383] | : . Returned conditions set:
[08:07:16.379] | : . ' , ; ` | : . List of 1
[08:07:16.379] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.379] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.379] | : . ' , ; ` | : .     ...)  
[08:07:16.379] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:16.379] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.379] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.379] | : . ' , ; ` | : .     ...)  
[08:07:16.379] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.379] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.383] | : .  list()
[08:07:16.384] | : . ' , ; ` | : . Not identical
[08:07:16.384] | : readImmediateCondition() ... done
[08:07:16.384] | : . ' , ; ` | : . all.equal() for future ...
[08:07:16.369] | : MulticoreFuture:
[08:07:16.369] | : Label: ‘future_lapply-1’
[08:07:16.369] | : Expression:
[08:07:16.369] | : {
[08:07:16.369] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:16.369] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:16.369] | :     "# as a global variable                                         "
[08:07:16.369] | :     do.call(function(...) {
[08:07:16.369] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:16.369] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:16.369] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:16.369] | :         "# anonymous function.                                          "
[08:07:16.369] | :         "#                                                              "
[08:07:16.369] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:16.369] | :         "# function environment of FUN() to the calling environment.    "
[08:07:16.369] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:16.369] | :         "# global environment, which is where globals are written.      "
[08:07:16.369] | :         penv <- env <- environment(...future.FUN)
[08:07:16.369] | :         repeat {
[08:07:16.369] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:16.369] | :                 emptyenv())) 
[08:07:16.369] | :                 break
[08:07:16.369] | :             penv <- env
[08:07:16.369] | :             env <- parent.env(env)
[08:07:16.369] | :         }
[08:07:16.369] | :         if (identical(penv, globalenv())) {
[08:07:16.369] | :             environment(...future.FUN) <- environment()
[08:07:16.369] | :         }
[08:07:16.369] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:16.369] | :             !isNamespace(penv)) {
[08:07:16.369] | :             parent.env(penv) <- environment()
[08:07:16.369] | :         }
[08:07:16.369] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:16.369] | :         {
[08:07:16.369] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:16.369] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:16.369] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:16.369] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:16.369] | :                 on.exit(options(oopts), add = TRUE)
[08:07:16.369] | :             }
[08:07:16.369] | :             {
[08:07:16.369] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:16.369] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:16.369] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:16.369] | :                   {
[08:07:16.369] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:16.369] | :                   }
[08:07:16.369] | :                 })
[08:07:16.369] | :             }
[08:07:16.369] | :         }
[08:07:16.369] | :     }, args = future.call.arguments)
[08:07:16.369] | : }
[08:07:16.369] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:16.369] | : Packages: <none>
[08:07:16.369] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:16.369] | : Capture standard output: TRUE
[08:07:16.369] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:16.369] | : Immediate condition classes: ‘immediateCondition’
[08:07:16.369] | : Lazy evaluation: FALSE
[08:07:16.369] | : Local evaluation: TRUE
[08:07:16.369] | : Asynchronous evaluation: TRUE
[08:07:16.369] | : Early signaling: FALSE
[08:07:16.369] | : Environment: R_GlobalEnv
[08:07:16.369] | : State: ‘running’
[08:07:16.369] | : Resolved: FALSE
[08:07:16.369] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-9
[08:07:16.369] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:16.369] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:16.369] | : Value: <not collected>
[08:07:16.369] | : Conditions captured: <none>
[08:07:16.384] | : Chunk #1 of 2 ... DONE
[08:07:16.384] | : Chunk #2 of 2 ...
[08:07:16.385] | :  - Finding globals in 'X' for chunk #2 ...
[08:07:16.385] | : getGlobalsAndPackages() ...
[08:07:16.385] | : . Searching for globals ...
[08:07:16.386] | : . ' globals found: [0] 
[08:07:16.386] | : . Searching for globals ... done
[08:07:16.386] | : . globals: [0] <none>
[08:07:16.386] | : . packages: [0] <none>
[08:07:16.386] | : getGlobalsAndPackages() ... done
[08:07:16.386] | :    + additional globals found: [n=0] 
[08:07:16.387] | :    + additional namespaces needed: [n=0] 
[08:07:16.387] | :  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:16.387] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:16.387] | :  - seeds: <none>
[08:07:16.387] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.387] | : future(..., label = ‘future_lapply-2’) ...
[08:07:16.387] | : . lazy: FALSE
[08:07:16.388] | : . stdout: TRUE
[08:07:16.388] | : . conditions: [n=1] ‘condition’
[08:07:16.388] | : . gc: FALSE
[08:07:16.388] | : . earlySignal: FALSE
[08:07:16.388] | : . getGlobalsAndPackages() ...
[08:07:16.388] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.388] | : . ' Resolving globals: FALSE
[08:07:16.388] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:16.389] | : . ' , {
[08:07:16.389] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:16.389] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:16.389] | : . ' ,     "# as a global variable                                         "
[08:07:16.389] | : . ' ,     do.call(function(...) {
[08:07:16.389] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:16.389] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:16.389] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:16.389] | : . ' ,         "# anonymous function.                                          "
[08:07:16.389] | : . ' ,         "#                                                              "
[08:07:16.389] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:16.389] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:16.389] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:16.389] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:16.389] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:16.389] | : . ' ,         repeat {
[08:07:16.389] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:16.389] | : . ' ,                 emptyenv())) 
[08:07:16.389] | : . ' ,                 break
[08:07:16.389] | : . ' ,             penv <- env
[08:07:16.389] | : . ' ,             env <- parent.env(env)
[08:07:16.389] | : . ' ,         }
[08:07:16.389] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:16.389] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:16.389] | : . ' ,         }
[08:07:16.389] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:16.389] | : . ' ,             !isNamespace(penv)) {
[08:07:16.389] | : . ' ,             parent.env(penv) <- environment()
[08:07:16.389] | : . ' ,         }
[08:07:16.389] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:16.389] | : . ' ,         {
[08:07:16.389] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:16.389] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:16.389] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:16.389] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:16.389] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:16.389] | : . ' ,             }
[08:07:16.389] | : . ' ,             {
[08:07:16.389] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:16.389] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:16.389] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:16.389] | : . ' ,                   {
[08:07:16.389] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:16.389] | : . ' ,                   }
[08:07:16.389] | : . ' ,                 })
[08:07:16.389] | : . ' ,             }
[08:07:16.389] | : . ' ,         }
[08:07:16.389] | : . ' ,     }, args = future.call.arguments)
[08:07:16.389] | : . ' , }
[08:07:16.389] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:16.390] | : . ' Search for packages associated with the globals ...
[08:07:16.390] | : . ' , Packages associated with globals: [0] 
[08:07:16.384] | : . ' , ; ` | : . ' List of 2
[08:07:16.384] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.384] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.384] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.384] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.384] | : . ' , ; ` | : . '     ...)  
[08:07:16.384] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:16.384] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.384] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.384] | : . ' , ; ` | : . '     ...)  
[08:07:16.384] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.390] | : . ' , Packages: [0] 
[08:07:16.390] | : . ' Search for packages associated with the globals ... done
[08:07:16.391] | : . ' Packages after dropping 'base': [0] 
[08:07:16.391] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:16.391] | : . ' packages: [0] 
[08:07:16.391] | : . ' , ; ` | : . ' Formals differ
[08:07:16.391] | : . getGlobalsAndPackages() ... done
[08:07:16.391] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:16.391] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:16.391] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:16.391] | : . run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:16.391] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:16.392] | : . ' state: ‘created’
[08:07:16.392] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.392] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.392] | : . ' Using MulticoreFutureBackend ...
[08:07:16.392] | : . ' , ; ` | : List of future strategies:
[08:07:16.392] | : . ' , ; ` | : 1. sequential:
[08:07:16.392] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:16.392] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:16.392] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.392] | : . ' , Number of futures since start: 3 (3 created, 3 launched, 2 finished)
[08:07:16.392] | : . ' , Launching futures ...
[08:07:16.393] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:16.393] | : . ' , ; ` getFutureData() ...
[08:07:16.393] | : . ' , ; ` | getFutureCore() ...
[08:07:16.393] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:16.393] | : . ' , ; ` | getFutureCore() ... done
[08:07:16.393] | : . ' , ; ` | getFutureCapture() ...
[08:07:16.393] | : . ' , ; ` | getFutureCapture() ... done
[08:07:16.394] | : . ' , ; ` | getFutureContext() ...
[08:07:16.394] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.394] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:16.394] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.394] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:16.394] | : . ' , ; ` | getFutureContext() ... done
[08:07:16.394] | : . ' , ; ` getFutureData() ... done
[08:07:16.395] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:16.395] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:16.397] | : . ' , ; ` MulticoreFuture started
[08:07:16.398] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:16.392] | : . ' , ; ` | : List of 1
[08:07:16.392] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.392] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.392] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:16.392] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.392] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.392] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.392] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.392] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.398] | : . ' , Launching futures ... done
[08:07:16.398] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:16.399] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:16.399] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:16.399] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.399] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:16.399] | : . ' Using MulticoreFutureBackend ... done
[08:07:16.399] | : . run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:16.400] | : future(..., label = ‘future_lapply-2’) ... done
[08:07:16.400] | : Created future:
[08:07:16.399] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.399] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.399] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:16.399] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.399] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.399] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.399] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.401] | : . ' , ; ` | : . ' init: TRUE
[08:07:16.402] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:16.402] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:16.402] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:16.402] | : . ' , ; ` | : . ' ,  list()
[08:07:16.402] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:16.402] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.402] | : . ' , ; ` | : . ' ,  list()
[08:07:16.403] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:16.402] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:16.403] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.403] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.403] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:16.403] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:16.403] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:16.404] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:16.404] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:16.404] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:16.404] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:16.404] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:16.404] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.404] | : . ' , ; ` | : . New stack:
[08:07:16.404] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:16.404] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:16.405] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.405] | : . ' , ; ` assign_globals() ...
[08:07:16.404] | : . ' , ; ` | : . List of 1
[08:07:16.404] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.404] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.404] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:16.404] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.404] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.404] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.404] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.404] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.409] | : . ' , ; ` | : . Old stack:
[08:07:16.405] | : . ' , ; ` List of 5
[08:07:16.405] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:16.405] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:16.405] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:16.405] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:16.405] | : . ' , ; `   ..$ : int 1
[08:07:16.405] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:16.405] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:16.405] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:16.405] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab965bb4c0> 
[08:07:16.405] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab965bb4c0> 
[08:07:16.405] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:16.405] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:16.405] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:16.405] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:16.405] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:16.405] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:16.405] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:16.410] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:16.410] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:16.410] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:16.410] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:16.411] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:16.411] | : . ' , ; ` assign_globals() ... done
[08:07:16.413] | : readImmediateCondition() ...
[08:07:16.414] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.414] | : . Number of RDS files: 0
[08:07:16.414] | : . Returned conditions set:
[08:07:16.414] | : .  list()
[08:07:16.415] | : readImmediateCondition() ... done
[08:07:16.400] | : MulticoreFuture:
[08:07:16.400] | : Label: ‘future_lapply-2’
[08:07:16.400] | : Expression:
[08:07:16.400] | : {
[08:07:16.400] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:16.400] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:16.400] | :     "# as a global variable                                         "
[08:07:16.400] | :     do.call(function(...) {
[08:07:16.400] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:16.400] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:16.400] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:16.400] | :         "# anonymous function.                                          "
[08:07:16.400] | :         "#                                                              "
[08:07:16.400] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:16.400] | :         "# function environment of FUN() to the calling environment.    "
[08:07:16.400] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:16.400] | :         "# global environment, which is where globals are written.      "
[08:07:16.400] | :         penv <- env <- environment(...future.FUN)
[08:07:16.400] | :         repeat {
[08:07:16.400] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:16.400] | :                 emptyenv())) 
[08:07:16.400] | :                 break
[08:07:16.400] | :             penv <- env
[08:07:16.400] | :             env <- parent.env(env)
[08:07:16.400] | :         }
[08:07:16.400] | :         if (identical(penv, globalenv())) {
[08:07:16.400] | :             environment(...future.FUN) <- environment()
[08:07:16.400] | :         }
[08:07:16.400] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:16.400] | :             !isNamespace(penv)) {
[08:07:16.400] | :             parent.env(penv) <- environment()
[08:07:16.400] | :         }
[08:07:16.400] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:16.400] | :         {
[08:07:16.400] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:16.400] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:16.400] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:16.400] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:16.400] | :                 on.exit(options(oopts), add = TRUE)
[08:07:16.400] | :             }
[08:07:16.400] | :             {
[08:07:16.400] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:16.400] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:16.400] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:16.400] | :                   {
[08:07:16.400] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:16.400] | :                   }
[08:07:16.400] | :                 })
[08:07:16.400] | :             }
[08:07:16.400] | :         }
[08:07:16.400] | :     }, args = future.call.arguments)
[08:07:16.400] | : }
[08:07:16.400] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:16.400] | : Packages: <none>
[08:07:16.400] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:16.400] | : Capture standard output: TRUE
[08:07:16.400] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:16.400] | : Immediate condition classes: ‘immediateCondition’
[08:07:16.400] | : Lazy evaluation: FALSE
[08:07:16.400] | : Local evaluation: TRUE
[08:07:16.400] | : Asynchronous evaluation: TRUE
[08:07:16.400] | : Early signaling: FALSE
[08:07:16.400] | : Environment: R_GlobalEnv
[08:07:16.400] | : State: ‘running’
[08:07:16.400] | : Resolved: FALSE
[08:07:16.400] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-10
[08:07:16.400] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:16.400] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:16.400] | : Value: <not collected>
[08:07:16.400] | : Conditions captured: <none>
[08:07:16.416] | : Chunk #2 of 2 ... DONE
[08:07:16.416] | : Launching 2 futures (chunks) ... DONE
[08:07:16.416] | : Resolving 2 futures (chunks) ...
[08:07:16.417] | : value() for list ...
[08:07:16.417] | : . recursive: 0
[08:07:16.417] | : . reduce: FALSE
[08:07:16.417] | : . length: 2

[08:07:16.418] | : . Number of remaining objects: 2
[08:07:16.418] | : . checking value #1:
[08:07:16.418] | : . 'obj' is MulticoreFuture
[08:07:16.409] | : . ' , ; ` | : . List of 1
[08:07:16.409] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.409] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.409] | : . ' , ; ` | : .     ...)  
[08:07:16.409] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:16.409] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.409] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.409] | : . ' , ; ` | : .     ...)  
[08:07:16.409] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.409] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.423] | : . ' , ; ` | : . Not identical
[08:07:16.423] | : . ' , ; ` | : . all.equal() for future ...
[08:07:16.428] | : . readImmediateCondition() ...
[08:07:16.429] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.429] | : . ' Number of RDS files: 0
[08:07:16.429] | : . ' Returned conditions set:
[08:07:16.429] | : . '  list()
[08:07:16.430] | : . readImmediateCondition() ... done
[08:07:16.430] | : . checking value #2:
[08:07:16.430] | : . 'obj' is MulticoreFuture
[08:07:16.423] | : . ' , ; ` | : . ' List of 2
[08:07:16.423] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.423] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.423] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.423] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.423] | : . ' , ; ` | : . '     ...)  
[08:07:16.423] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:16.423] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.423] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.423] | : . ' , ; ` | : . '     ...)  
[08:07:16.423] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.432] | : . ' , ; ` | : . ' Formals differ
[08:07:16.432] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:16.432] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:16.432] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:16.432] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:16.432] | : . ' , ; ` | : List of future strategies:
[08:07:16.432] | : . ' , ; ` | : 1. sequential:
[08:07:16.432] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:16.432] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:16.432] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.433] | : . ' , ; ` | : List of 1
[08:07:16.433] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.433] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.433] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:16.433] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.433] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.433] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.433] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.433] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.436] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:16.436] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:16.437] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.437] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:16.437] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.437] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.437] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:16.437] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.437] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.437] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.437] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.439] | : . ' , ; ` | : . ' init: TRUE
[08:07:16.439] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:16.439] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:16.439] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:16.439] | : . ' , ; ` | : . ' ,  list()
[08:07:16.440] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:16.440] | : . ' , ; ` | : . ' ,  list()
[08:07:16.440] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:16.441] | : . readImmediateCondition() ...
[08:07:16.441] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.440] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:16.440] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:16.440] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:16.441] | : . ' Number of RDS files: 0
[08:07:16.442] | : . ' Returned conditions set:
[08:07:16.442] | : . '  list()
[08:07:16.442] | : . readImmediateCondition() ... done
[08:07:16.453] | : . Number of remaining objects: 2
[08:07:16.453] | : . checking value #1:
[08:07:16.453] | : . 'obj' is MulticoreFuture
[08:07:16.463] | : . readImmediateCondition() ...
[08:07:16.464] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.464] | : . ' Number of RDS files: 0
[08:07:16.464] | : . ' Returned conditions set:
[08:07:16.464] | : . '  list()
[08:07:16.469] | : . readImmediateCondition() ... done
[08:07:16.469] | : . checking value #2:
[08:07:16.469] | : . 'obj' is MulticoreFuture
[08:07:16.479] | : . readImmediateCondition() ...
[08:07:16.480] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.480] | : . ' Number of RDS files: 0
[08:07:16.480] | : . ' Returned conditions set:
[08:07:16.480] | : . '  list()
[08:07:16.481] | : . readImmediateCondition() ... done
[08:07:16.486] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:16.486] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:16.486] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:16.487] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.487] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:16.487] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:16.487] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.487] | : . ' , ; ` assign_globals() ...
[08:07:16.491] | : . Number of remaining objects: 2
[08:07:16.492] | : . checking value #1:
[08:07:16.487] | : . ' , ; ` List of 5
[08:07:16.487] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:16.487] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:16.487] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:16.487] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:16.487] | : . ' , ; `   ..$ : int 0
[08:07:16.487] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:16.487] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:16.487] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:16.487] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab965bb4c0> 
[08:07:16.487] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab965bb4c0> 
[08:07:16.487] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:16.487] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:16.487] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:16.487] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:16.487] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:16.487] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:16.487] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:16.492] | : . 'obj' is MulticoreFuture
[08:07:16.492] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:16.492] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:16.492] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:16.492] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:16.493] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:16.493] | : . ' , ; ` assign_globals() ... done
[08:07:16.495] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.495] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.495] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:16.495] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:16.495] | : . ' , ; ` | : . ' New stack:
[08:07:16.495] | : . ' , ; ` | : . ' List of 1
[08:07:16.495] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.495] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.495] | : . ' , ; ` | : . '     ...)  
[08:07:16.495] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:16.495] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.495] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.495] | : . ' , ; ` | : . '     ...)  
[08:07:16.495] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.495] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.498] | : . ' , ; ` | : . ' Old stack:
[08:07:16.499] | : . ' , ; ` | : . ' List of 1
[08:07:16.499] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.499] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.499] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9676cdf8> 
[08:07:16.499] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.499] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.499] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.502] | : . ' , ; ` | : . ' Not identical
[08:07:16.502] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:16.502] | : . readImmediateCondition() ...
[08:07:16.503] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.503] | : . ' Number of RDS files: 0
[08:07:16.503] | : . ' Returned conditions set:
[08:07:16.503] | : . '  list()
[08:07:16.504] | : . readImmediateCondition() ... done
[08:07:16.504] | : . checking value #2:
[08:07:16.504] | : . 'obj' is MulticoreFuture
[08:07:16.502] | : . ' , ; ` | : . ' , List of 2
[08:07:16.502] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.502] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.502] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.502] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.502] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.502] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9676cdf8> 
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.502] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.508] | : . ' , ; ` | : . ' , Formals differ
[08:07:16.508] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:16.508] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:16.508] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:16.508] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:16.508] | : . ' , ; ` | : . List of future strategies:
[08:07:16.508] | : . ' , ; ` | : . 1. multicore:
[08:07:16.508] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:16.508] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:16.508] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:16.509] | : . ' , ; ` | : . List of 1
[08:07:16.509] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.509] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.509] | : . ' , ; ` | : .     ...)  
[08:07:16.509] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:16.509] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.509] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.509] | : . ' , ; ` | : .     ...)  
[08:07:16.509] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.509] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.513] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:16.513] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:16.514] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.514] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.514] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:16.514] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:16.514] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.514] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.515] | : . readImmediateCondition() ...
[08:07:16.515] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.515] | : . ' Number of RDS files: 0
[08:07:16.515] | : . ' Returned conditions set:
[08:07:16.515] | : . '  list()
[08:07:16.516] | : . readImmediateCondition() ... done
[08:07:16.516] | : . MulticoreFuture #2
[08:07:16.516] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:16.516] | : . ' nx: 2
[08:07:16.516] | : . ' relay: TRUE
[08:07:16.516] | : . ' stdout: TRUE
[08:07:16.517] | : . ' signal: TRUE
[08:07:16.517] | : . ' resignal: FALSE
[08:07:16.517] | : . ' force: TRUE
[08:07:16.517] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:16.517] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:16.517] | : . ' until=1
[08:07:16.517] | : . ' relaying element #1
[08:07:16.517] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:16.518] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:16.518] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:16.518] | : . value(<MulticoreFuture>, ...) ...
[08:07:16.518] | : . value(<MulticoreFuture>, ...) ... done
[08:07:16.518] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:16.518] | : . ' result() for MulticoreFuture ...
[08:07:16.519] | : . ' , readImmediateCondition() ...
[08:07:16.519] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.519] | : . ' , ; Number of RDS files: 0
[08:07:16.519] | : . ' , ; Returned conditions set:
[08:07:16.520] | : . ' , ;  list()
[08:07:16.520] | : . ' , readImmediateCondition() ... done
[08:07:16.520] | : . ' , result() for MulticoreFuture ...
[08:07:16.520] | : . ' , result() for MulticoreFuture ... done
[08:07:16.520] | : . ' , signalConditions() ...
[08:07:16.521] | : . ' , ; include = ‘immediateCondition’
[08:07:16.521] | : . ' , ; exclude = 
[08:07:16.521] | : . ' , ; resignal = FALSE
[08:07:16.521] | : . ' , ; Number of conditions: 6
[08:07:16.521] | : . ' , ;  int 6
[08:07:16.522] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.522] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.522] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.522] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.522] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.522] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.523] | : . ' , ; Drop signaled conditions: 0
[08:07:16.523] | : . ' , signalConditions() ... done
[08:07:16.523] | : . ' result() for MulticoreFuture ... done
[08:07:16.523] | : . ' result() for MulticoreFuture ...
[08:07:16.523] | : . ' result() for MulticoreFuture ... done
[08:07:16.523] | : . ' signalConditions() ...
[08:07:16.523] | : . ' , include = ‘immediateCondition’
[08:07:16.523] | : . ' , exclude = 
[08:07:16.524] | : . ' , resignal = FALSE
[08:07:16.524] | : . ' , Number of conditions: 6
[08:07:16.524] | : . ' ,  int 6
[08:07:16.524] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.524] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.524] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.525] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.525] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.525] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.525] | : . ' , Drop signaled conditions: 0
[08:07:16.525] | : . ' signalConditions() ... done
[08:07:16.525] | : . ' check for misuse ...
[08:07:16.525] | : . ' check for misuse ... done
[08:07:16.526] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:16.526] | : . value: <list>
[08:07:16.526] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:16.526] | : . ' nx: 2
[08:07:16.526] | : . ' relay: TRUE
[08:07:16.526] | : . ' stdout: TRUE
[08:07:16.526] | : . ' signal: TRUE
[08:07:16.526] | : . ' resignal: FALSE
[08:07:16.526] | : . ' force: TRUE
[08:07:16.526] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:16.527] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:16.527] | : . ' until=1
[08:07:16.527] | : . ' relaying element #1
[08:07:16.527] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:16.527] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:16.527] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:16.527] | : . resolve() for MulticoreFuture ...
[08:07:16.527] | : . resolve() for MulticoreFuture ... done
[08:07:16.527] | : . length: 1 (resolved future 2)
[08:07:16.528] | : value() for list ... done
[08:07:16.538] | : Number of remaining objects: 1
[08:07:16.538] | : checking value #1:
[08:07:16.538] | : 'obj' is MulticoreFuture
[08:07:16.548] | : readImmediateCondition() ...
[08:07:16.548] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.549] | : . Number of RDS files: 0
[08:07:16.549] | : . Returned conditions set:
[08:07:16.549] | : .  list()
[08:07:16.549] | : readImmediateCondition() ... done
[08:07:16.559] | : Number of remaining objects: 1
[08:07:16.560] | : checking value #1:
[08:07:16.560] | : 'obj' is MulticoreFuture
[08:07:16.570] | : readImmediateCondition() ...
[08:07:16.570] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.570] | : . Number of RDS files: 0
[08:07:16.571] | : . Returned conditions set:
[08:07:16.571] | : .  list()
[08:07:16.571] | : readImmediateCondition() ... done
[08:07:16.581] | : Number of remaining objects: 1
[08:07:16.581] | : checking value #1:
[08:07:16.581] | : 'obj' is MulticoreFuture
[08:07:16.592] | : readImmediateCondition() ...
[08:07:16.592] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.592] | : . Number of RDS files: 0
[08:07:16.592] | : . Returned conditions set:
[08:07:16.592] | : .  list()
[08:07:16.593] | : readImmediateCondition() ... done
[08:07:16.603] | : Number of remaining objects: 1
[08:07:16.603] | : checking value #1:
[08:07:16.603] | : 'obj' is MulticoreFuture
[08:07:16.614] | : readImmediateCondition() ...
[08:07:16.657] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.657] | : . Number of RDS files: 0
[08:07:16.657] | : . Returned conditions set:
[08:07:16.657] | : .  list()
[08:07:16.658] | : readImmediateCondition() ... done
[08:07:16.668] | : Number of remaining objects: 1
[08:07:16.668] | : checking value #1:
[08:07:16.668] | : 'obj' is MulticoreFuture
[08:07:16.678] | : readImmediateCondition() ...
[08:07:16.678] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.679] | : . Number of RDS files: 0
[08:07:16.679] | : . Returned conditions set:
[08:07:16.679] | : .  list()
[08:07:16.679] | : readImmediateCondition() ... done
[08:07:16.689] | : Number of remaining objects: 1
[08:07:16.690] | : checking value #1:
[08:07:16.690] | : 'obj' is MulticoreFuture
[08:07:16.700] | : readImmediateCondition() ...
[08:07:16.700] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.700] | : . Number of RDS files: 0
[08:07:16.700] | : . Returned conditions set:
[08:07:16.700] | : .  list()
[08:07:16.701] | : readImmediateCondition() ... done
[08:07:16.711] | : Number of remaining objects: 1
[08:07:16.711] | : checking value #1:
[08:07:16.711] | : 'obj' is MulticoreFuture
[08:07:16.721] | : readImmediateCondition() ...
[08:07:16.722] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.722] | : . Number of RDS files: 0
[08:07:16.722] | : . Returned conditions set:
[08:07:16.722] | : .  list()
[08:07:16.722] | : readImmediateCondition() ... done
[08:07:16.733] | : Number of remaining objects: 1
[08:07:16.733] | : checking value #1:
[08:07:16.733] | : 'obj' is MulticoreFuture
[08:07:16.743] | : readImmediateCondition() ...
[08:07:16.743] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.744] | : . Number of RDS files: 0
[08:07:16.744] | : . Returned conditions set:
[08:07:16.744] | : .  list()
[08:07:16.744] | : readImmediateCondition() ... done
[08:07:16.754] | : Number of remaining objects: 1
[08:07:16.755] | : checking value #1:
[08:07:16.755] | : 'obj' is MulticoreFuture
[08:07:16.765] | : readImmediateCondition() ...
[08:07:16.765] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.765] | : . Number of RDS files: 0
[08:07:16.765] | : . Returned conditions set:
[08:07:16.765] | : .  list()
[08:07:16.766] | : readImmediateCondition() ... done
[08:07:16.776] | : Number of remaining objects: 1
[08:07:16.776] | : checking value #1:
[08:07:16.776] | : 'obj' is MulticoreFuture
[08:07:16.787] | : readImmediateCondition() ...
[08:07:16.787] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.787] | : . Number of RDS files: 0
[08:07:16.787] | : . Returned conditions set:
[08:07:16.787] | : .  list()
[08:07:16.788] | : readImmediateCondition() ... done
[08:07:16.798] | : Number of remaining objects: 1
[08:07:16.798] | : checking value #1:
[08:07:16.798] | : 'obj' is MulticoreFuture
[08:07:16.808] | : readImmediateCondition() ...
[08:07:16.808] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.809] | : . Number of RDS files: 0
[08:07:16.809] | : . Returned conditions set:
[08:07:16.809] | : .  list()
[08:07:16.809] | : readImmediateCondition() ... done
[08:07:16.819] | : Number of remaining objects: 1
[08:07:16.820] | : checking value #1:
[08:07:16.820] | : 'obj' is MulticoreFuture
[08:07:16.830] | : readImmediateCondition() ...
[08:07:16.830] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.830] | : . Number of RDS files: 0
[08:07:16.830] | : . Returned conditions set:
[08:07:16.831] | : .  list()
[08:07:16.831] | : readImmediateCondition() ... done
[08:07:16.841] | : Number of remaining objects: 1
[08:07:16.841] | : checking value #1:
[08:07:16.841] | : 'obj' is MulticoreFuture
[08:07:16.851] | : readImmediateCondition() ...
[08:07:16.852] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.852] | : . Number of RDS files: 0
[08:07:16.852] | : . Returned conditions set:
[08:07:16.852] | : .  list()
[08:07:16.852] | : readImmediateCondition() ... done
[08:07:16.863] | : Number of remaining objects: 1
[08:07:16.863] | : checking value #1:
[08:07:16.863] | : 'obj' is MulticoreFuture
[08:07:16.873] | : readImmediateCondition() ...
[08:07:16.873] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.873] | : . Number of RDS files: 0
[08:07:16.874] | : . Returned conditions set:
[08:07:16.874] | : .  list()
[08:07:16.874] | : readImmediateCondition() ... done
[08:07:16.884] | : Number of remaining objects: 1
[08:07:16.884] | : checking value #1:
[08:07:16.884] | : 'obj' is MulticoreFuture
[08:07:16.895] | : readImmediateCondition() ...
[08:07:16.895] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.895] | : . Number of RDS files: 0
[08:07:16.895] | : . Returned conditions set:
[08:07:16.895] | : .  list()
[08:07:16.896] | : readImmediateCondition() ... done
[08:07:16.906] | : Number of remaining objects: 1
[08:07:16.906] | : checking value #1:
[08:07:16.906] | : 'obj' is MulticoreFuture
[08:07:16.914] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.914] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:16.914] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:16.914] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:16.914] | : . ' , ; ` | : . ' New stack:
[08:07:16.916] | : readImmediateCondition() ...
[08:07:16.917] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.917] | : . Number of RDS files: 0
[08:07:16.917] | : . Returned conditions set:
[08:07:16.917] | : .  list()
[08:07:16.917] | : readImmediateCondition() ... done
[08:07:16.927] | : Number of remaining objects: 1
[08:07:16.928] | : checking value #1:
[08:07:16.928] | : 'obj' is MulticoreFuture
[08:07:16.938] | : readImmediateCondition() ...
[08:07:16.938] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.939] | : . Number of RDS files: 0
[08:07:16.939] | : . Returned conditions set:
[08:07:16.939] | : .  list()
[08:07:16.939] | : readImmediateCondition() ... done
[08:07:16.949] | : Number of remaining objects: 1
[08:07:16.950] | : checking value #1:
[08:07:16.950] | : 'obj' is MulticoreFuture
[08:07:16.915] | : . ' , ; ` | : . ' List of 1
[08:07:16.915] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.915] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.915] | : . ' , ; ` | : . '     ...)  
[08:07:16.915] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:16.915] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.915] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.915] | : . ' , ; ` | : . '     ...)  
[08:07:16.915] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.915] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.956] | : . ' , ; ` | : . ' Old stack:
[08:07:16.957] | : . ' , ; ` | : . ' List of 1
[08:07:16.957] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.957] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.957] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93e88ee8> 
[08:07:16.957] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.957] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.957] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.960] | : . ' , ; ` | : . ' Not identical
[08:07:16.960] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:16.960] | : readImmediateCondition() ...
[08:07:16.960] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.961] | : . Number of RDS files: 0
[08:07:16.961] | : . Returned conditions set:
[08:07:16.961] | : .  list()
[08:07:16.961] | : readImmediateCondition() ... done
[08:07:16.960] | : . ' , ; ` | : . ' , List of 2
[08:07:16.960] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.960] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.960] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.960] | : . ' , ; ` | : . ' ,     ...)  
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.960] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:16.960] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93e88ee8> 
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:16.960] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:16.965] | : . ' , ; ` | : . ' , Formals differ
[08:07:16.966] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:16.966] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:16.966] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:16.966] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:16.966] | : . ' , ; ` | : . List of future strategies:
[08:07:16.966] | : . ' , ; ` | : . 1. multicore:
[08:07:16.966] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:16.966] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:16.966] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:16.966] | : . ' , ; ` | : . List of 1
[08:07:16.966] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:16.966] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.966] | : . ' , ; ` | : .     ...)  
[08:07:16.966] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:16.966] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:16.966] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:16.966] | : . ' , ; ` | : .     ...)  
[08:07:16.966] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:16.966] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:16.969] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:16.970] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:16.970] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:16.970] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:16.970] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:16.970] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:16.970] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.970] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:16.971] | : Number of remaining objects: 1
[08:07:16.972] | : checking value #1:
[08:07:16.972] | : 'obj' is MulticoreFuture
[08:07:16.972] | : readImmediateCondition() ...
[08:07:16.972] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.972] | : . Number of RDS files: 0
[08:07:16.972] | : . Returned conditions set:
[08:07:16.972] | : .  list()
[08:07:16.973] | : readImmediateCondition() ... done
[08:07:16.973] | : MulticoreFuture #1
[08:07:16.973] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:16.973] | : . nx: 2
[08:07:16.973] | : . relay: TRUE
[08:07:16.973] | : . stdout: TRUE
[08:07:16.973] | : . signal: TRUE
[08:07:16.973] | : . resignal: FALSE
[08:07:16.974] | : . force: TRUE
[08:07:16.974] | : . relayed: [n=2] FALSE, FALSE
[08:07:16.974] | : . queued futures: [n=2] FALSE, TRUE
[08:07:16.974] | : . until=1
[08:07:16.974] | : . relaying element #1
[08:07:16.974] | : . value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:16.974] | : . ' result() for MulticoreFuture ...
[08:07:16.975] | : . ' , readImmediateCondition() ...
[08:07:16.975] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:16.975] | : . ' , ; Number of RDS files: 0
[08:07:16.975] | : . ' , ; Returned conditions set:
[08:07:16.975] | : . ' , ;  list()
[08:07:16.976] | : . ' , readImmediateCondition() ... done
[08:07:16.976] | : . ' , result() for MulticoreFuture ...
[08:07:16.976] | : . ' , result() for MulticoreFuture ... done
[08:07:16.976] | : . ' , signalConditions() ...
[08:07:16.976] | : . ' , ; include = ‘immediateCondition’
[08:07:16.976] | : . ' , ; exclude = 
[08:07:16.976] | : . ' , ; resignal = FALSE
[08:07:16.976] | : . ' , ; Number of conditions: 6
[08:07:16.977] | : . ' , ;  int 6
[08:07:16.977] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.977] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.977] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.977] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.977] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.978] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.978] | : . ' , ; Drop signaled conditions: 0
[08:07:16.978] | : . ' , signalConditions() ... done
[08:07:16.978] | : . ' result() for MulticoreFuture ... done
[08:07:16.978] | : . ' result() for MulticoreFuture ...
[08:07:16.978] | : . ' result() for MulticoreFuture ... done
[08:07:16.978] | : . ' signalConditions() ...
[08:07:16.978] | : . ' , include = ‘immediateCondition’
[08:07:16.978] | : . ' , exclude = 
[08:07:16.979] | : . ' , resignal = FALSE
[08:07:16.979] | : . ' , Number of conditions: 6
[08:07:16.979] | : . ' ,  int 6
[08:07:16.979] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.979] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.979] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.980] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.980] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.980] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.980] | : . ' , Drop signaled conditions: 0
[08:07:16.980] | : . ' signalConditions() ... done
[08:07:16.980] | : . ' relay stdout ...
[08:07:16.980] | : . ' relay stdout ... done
[08:07:16.980] | : . ' check for misuse ...
[08:07:16.981] | : . ' check for misuse ... done
[08:07:16.981] | : . value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:16.981] | : . result() for MulticoreFuture ...
[08:07:16.981] | : . result() for MulticoreFuture ... done
[08:07:16.981] | : . signalConditions() ...
[08:07:16.981] | : . ' include = ‘immediateCondition’
[08:07:16.981] | : . ' exclude = 
[08:07:16.981] | : . ' resignal = FALSE
[08:07:16.982] | : . ' Number of conditions: 6
[08:07:16.982] | : . '  int 6
[08:07:16.982] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.982] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.982] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.982] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.983] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.983] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.983] | : . ' Drop signaled conditions: 0
[08:07:16.983] | : . signalConditions() ... done
[08:07:16.983] | : . result() for MulticoreFuture ...
[08:07:16.983] | : . result() for MulticoreFuture ... done
[08:07:16.983] | : . signalConditions() ...
[08:07:16.983] | : . ' include = ‘condition’
[08:07:16.984] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:16.984] | : . ' resignal = TRUE
[08:07:16.984] | : . ' Number of conditions: 6
[08:07:16.984] | : . '  int 6
[08:07:16.984] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.985] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.366] | : . ' , ; ` attachPackages() ...
[08:07:16.985] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.985] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.367] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:16.985] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.985] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.368] | : . ' , ; ` attachPackages() ... done
[08:07:16.985] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.985] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.368] | : . ' , ; ` attachPackages() ...
[08:07:16.986] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.986] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.369] | : . ' , ; ` | packages: [n=0] 
[08:07:16.986] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.986] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.369] | : . ' , ; ` attachPackages() ... done
[08:07:16.986] | : . ' Drop signaled conditions: 6
[08:07:16.986] | : . signalConditions() ... done
[08:07:16.987] | : . relayed: [n=2] TRUE, FALSE
[08:07:16.987] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.987] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:16.987] | : value(<MulticoreFuture>, ...) ...
[08:07:16.987] | : value(<MulticoreFuture>, ...) ... done
[08:07:16.987] | : value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:16.987] | : . result() for MulticoreFuture ...
[08:07:16.987] | : . result() for MulticoreFuture ... done
[08:07:16.988] | : . result() for MulticoreFuture ...
[08:07:16.988] | : . result() for MulticoreFuture ... done
[08:07:16.988] | : . signalConditions() ...
[08:07:16.988] | : . ' include = ‘immediateCondition’
[08:07:16.988] | : . ' exclude = 
[08:07:16.988] | : . ' resignal = FALSE
[08:07:16.988] | : . ' Number of conditions: 0
[08:07:16.988] | : . '  int 0
[08:07:16.989] | : . signalConditions() ... done
[08:07:16.989] | : . check for misuse ...
[08:07:16.989] | : . check for misuse ... done
[08:07:16.989] | : value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:16.989] | : value: <list>
[08:07:16.990] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:16.990] | : . nx: 2
[08:07:16.990] | : . relay: TRUE
[08:07:16.990] | : . stdout: TRUE
[08:07:16.990] | : . signal: TRUE
[08:07:16.990] | : . resignal: FALSE
[08:07:16.990] | : . force: TRUE
[08:07:16.990] | : . relayed: [n=2] TRUE, FALSE
[08:07:16.990] | : . queued futures: [n=2] TRUE, TRUE
[08:07:16.991] | : . until=2
[08:07:16.991] | : . relaying element #2
[08:07:16.991] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:16.991] | : . ' result() for MulticoreFuture ...
[08:07:16.991] | : . ' result() for MulticoreFuture ... done
[08:07:16.991] | : . ' result() for MulticoreFuture ...
[08:07:16.991] | : . ' result() for MulticoreFuture ... done
[08:07:16.992] | : . ' signalConditions() ...
[08:07:16.992] | : . ' , include = ‘immediateCondition’
[08:07:16.992] | : . ' , exclude = 
[08:07:16.992] | : . ' , resignal = FALSE
[08:07:16.992] | : . ' , Number of conditions: 6
[08:07:16.992] | : . ' ,  int 6
[08:07:16.993] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.993] | : . ' , Drop signaled conditions: 0
[08:07:16.994] | : . ' signalConditions() ... done
[08:07:16.994] | : . ' relay stdout ...
[08:07:16.994] | : . ' relay stdout ... done
[08:07:16.994] | : . ' check for misuse ...
[08:07:16.994] | : . ' check for misuse ... done
[08:07:16.994] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:16.994] | : . result() for MulticoreFuture ...
[08:07:16.995] | : . result() for MulticoreFuture ... done
[08:07:16.995] | : . signalConditions() ...
[08:07:16.995] | : . ' include = ‘immediateCondition’
[08:07:16.995] | : . ' exclude = 
[08:07:16.995] | : . ' resignal = FALSE
[08:07:16.995] | : . ' Number of conditions: 6
[08:07:16.995] | : . '  int 6
[08:07:16.996] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.996] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.996] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.996] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.996] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.996] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.997] | : . ' Drop signaled conditions: 0
[08:07:16.997] | : . signalConditions() ... done
[08:07:16.997] | : . result() for MulticoreFuture ...
[08:07:16.997] | : . result() for MulticoreFuture ... done
[08:07:16.997] | : . signalConditions() ...
[08:07:16.997] | : . ' include = ‘condition’
[08:07:16.997] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:16.997] | : . ' resignal = TRUE
[08:07:16.998] | : . ' Number of conditions: 6
[08:07:16.998] | : . '  int 6
[08:07:16.998] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.998] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.399] | : . ' , ; ` attachPackages() ...
[08:07:16.998] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.999] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.399] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:16.999] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.999] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.400] | : . ' , ; ` attachPackages() ... done
[08:07:16.999] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:16.999] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.400] | : . ' , ; ` attachPackages() ...
[08:07:16.999] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.000] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.400] | : . ' , ; ` | packages: [n=0] 
[08:07:17.000] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.000] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:16.401] | : . ' , ; ` attachPackages() ... done
[08:07:17.000] | : . ' Drop signaled conditions: 6
[08:07:17.000] | : . signalConditions() ... done
[08:07:17.000] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.000] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.000] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:17.001] | : resolve() for MulticoreFuture ...
[08:07:17.001] | : resolve() for MulticoreFuture ... done
[08:07:17.001] | : length: 0 (resolved future 1)
[08:07:17.001] | future_lapply() -> future_xapply() ... done
[08:07:17.001] | Relaying remaining futures ...
[08:07:17.001] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:17.001] | : . nx: 2
[08:07:17.001] | : . relay: TRUE
[08:07:17.002] | : . stdout: TRUE
[08:07:17.002] | : . signal: TRUE
[08:07:17.002] | : . resignal: FALSE
[08:07:17.002] | : . force: TRUE
[08:07:17.002] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.002] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:17.002] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.003] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.003] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:17.003] | Relaying remaining futures ... done
[08:07:17.003] future_lapply() ... done
[08:07:17.003]  - Number of value chunks collected: 2
[08:07:17.003] Resolving 2 futures (chunks) ... DONE
[08:07:17.003] Reducing values from 2 chunks ...
[08:07:17.003]  - Number of values collected after concatenation: 2
[08:07:17.003]  - Number of values expected: 2
[08:07:17.004] Reducing values from 2 chunks ... DONE


* future_lapply(x, ..., future.stdout = TRUE) ... DONE
* future_lapply(x, ..., future.stdout = NA) ...
[08:07:17.004] future_lapply() ...
[08:07:17.005] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:17.005] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:17.006] | future_lapply() -> future_xapply() ...
[08:07:17.006] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.006] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.006] | : Number of chunks: 2
[08:07:17.007] | : getGlobalsAndPackagesXApply() ...
[08:07:17.007] | : . future.globals: TRUE
[08:07:17.007] | : . getGlobalsAndPackages() ...
[08:07:17.007] | : . ' Searching for globals ...
[08:07:17.016] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:17.016] | : . ' Searching for globals ... done
[08:07:17.016] | : . ' Resolving globals: FALSE
[08:07:17.016] | : . ' Search for packages associated with the globals ...
[08:07:17.017] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:17.017] | : . ' , Packages: [1] ‘base’
[08:07:17.017] | : . ' Search for packages associated with the globals ... done
[08:07:17.017] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:17.018] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:17.018] | : . ' Packages after dropping 'base': [0] 
[08:07:17.018] | : . ' globals: [1] ‘FUN’
[08:07:17.018] | : . ' packages: [0] 
[08:07:17.018] | : . getGlobalsAndPackages() ... done
[08:07:17.019] | : . globals found/used: [n=1] ‘FUN’
[08:07:17.019] | : . needed namespaces: [n=0] 
[08:07:17.019] | : . use_args: TRUE
[08:07:17.019] | : . Getting '...' globals ...
[08:07:17.019] | : . ' resolve() for FutureGlobals ...
[08:07:17.019] | : . ' , recursive: 0
[08:07:17.020] | : . ' , Number of elements: 1
[08:07:17.020] | : . ' , elements: ‘...’
[08:07:17.020] | : . ' , 'obj' is DotDotDotList
[08:07:17.020] | : . ' , resolve(obj, ...) ...
[08:07:17.020] | : . ' , ; resolve() for DotDotDotList ...
[08:07:17.020] | : . ' , ; ` recursive: -1
[08:07:17.021] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:17.021] | : . ' , resolve(obj, ...) ... done
[08:07:17.021] | : . ' , resolved() for DotDotDotList ...
[08:07:17.021] | : . ' , ; Number of elements: 0
[08:07:17.021] | : . ' , ; Number of futures: 0
[08:07:17.021] | : . ' , resolved() for DotDotDotList ... done
[08:07:17.021] | : . ' , length: 0 (resolved future 1)
[08:07:17.022] | : . ' resolve() for FutureGlobals ... done
[08:07:17.022] | : . ' '...' content: [n=0] 
[08:07:17.022] | : . ' List of 1
[08:07:17.022] | : . '  $ ...: list()
[08:07:17.022] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:17.022] | : . '  - attr(*, "where")=List of 1
[08:07:17.022] | : . '   ..$ ...:<environment: 0x55ab97d24cc0> 
[08:07:17.022] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.022] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:17.022] | : . '  - attr(*, "total_size")= num NA
[08:07:17.025] | : . Getting '...' globals ... done
[08:07:17.025] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:17.025] | : . List of 2
[08:07:17.025] | : .  $ ...future.FUN:function (x)  
[08:07:17.025] | : .  $ ...          : list()
[08:07:17.025] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:17.025] | : .  - attr(*, "where")=List of 2
[08:07:17.025] | : .   ..$ ...future.FUN:<environment: 0x55ab97d24cc0> 
[08:07:17.025] | : .   ..$ ...          :<environment: 0x55ab97d24cc0> 
[08:07:17.025] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.025] | : .  - attr(*, "resolved")= logi FALSE
[08:07:17.025] | : .  - attr(*, "total_size")= num 6008
[08:07:17.029] | : . Packages to be attached in all futures: [n=0] 
[08:07:17.029] | : getGlobalsAndPackagesXApply() ... done
[08:07:17.029] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.029] | : List of 5
[08:07:17.029] | :  $ ...future.FUN            :function (x)  
[08:07:17.029] | :  $ ...                      : list()
[08:07:17.029] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:17.029] | :  $ ...future.elements_ii    : NULL
[08:07:17.029] | :  $ ...future.seeds_ii       : NULL
[08:07:17.029] | :  $ ...future.globals.maxSize: NULL
[08:07:17.029] | :  - attr(*, "where")=List of 5
[08:07:17.029] | :   ..$ ...future.FUN            :<environment: 0x55ab97d24cc0> 
[08:07:17.029] | :   ..$ ...                      :<environment: 0x55ab97d24cc0> 
[08:07:17.029] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.029] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.029] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.029] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.029] | :  - attr(*, "resolved")= logi FALSE
[08:07:17.029] | :  - attr(*, "total_size")= num 6008
[08:07:17.034] | : Number of futures (= number of chunks): 2
[08:07:17.035] | : Launching 2 futures (chunks) ...
[08:07:17.035] | : Chunk #1 of 2 ...
[08:07:17.035] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:17.035] | : getGlobalsAndPackages() ...
[08:07:17.035] | : . Searching for globals ...
[08:07:17.036] | : . ' globals found: [0] 
[08:07:17.036] | : . Searching for globals ... done
[08:07:17.036] | : . globals: [0] <none>
[08:07:17.036] | : . packages: [0] <none>
[08:07:17.036] | : getGlobalsAndPackages() ... done
[08:07:17.036] | :    + additional globals found: [n=0] 
[08:07:17.036] | :    + additional namespaces needed: [n=0] 
[08:07:17.036] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:17.037] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:17.037] | :  - seeds: <none>
[08:07:17.037] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.037] | : future(..., label = ‘future_lapply-1’) ...
[08:07:17.037] | : . lazy: FALSE
[08:07:17.037] | : . stdout: NA
[08:07:17.037] | : . conditions: [n=1] ‘condition’
[08:07:17.037] | : . gc: FALSE
[08:07:17.038] | : . earlySignal: FALSE
[08:07:17.038] | : . getGlobalsAndPackages() ...
[08:07:17.038] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.038] | : . ' Resolving globals: FALSE
[08:07:17.038] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:17.038] | : . ' , {
[08:07:17.038] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:17.038] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:17.038] | : . ' ,     "# as a global variable                                         "
[08:07:17.038] | : . ' ,     do.call(function(...) {
[08:07:17.038] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:17.038] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:17.038] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:17.038] | : . ' ,         "# anonymous function.                                          "
[08:07:17.038] | : . ' ,         "#                                                              "
[08:07:17.038] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:17.038] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:17.038] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:17.038] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:17.038] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:17.038] | : . ' ,         repeat {
[08:07:17.038] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:17.038] | : . ' ,                 emptyenv())) 
[08:07:17.038] | : . ' ,                 break
[08:07:17.038] | : . ' ,             penv <- env
[08:07:17.038] | : . ' ,             env <- parent.env(env)
[08:07:17.038] | : . ' ,         }
[08:07:17.038] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:17.038] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:17.038] | : . ' ,         }
[08:07:17.038] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:17.038] | : . ' ,             !isNamespace(penv)) {
[08:07:17.038] | : . ' ,             parent.env(penv) <- environment()
[08:07:17.038] | : . ' ,         }
[08:07:17.038] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:17.038] | : . ' ,         {
[08:07:17.038] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:17.038] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.038] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.038] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.038] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:17.038] | : . ' ,             }
[08:07:17.038] | : . ' ,             {
[08:07:17.038] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:17.038] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:17.038] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:17.038] | : . ' ,                   {
[08:07:17.038] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:17.038] | : . ' ,                   }
[08:07:17.038] | : . ' ,                 })
[08:07:17.038] | : . ' ,             }
[08:07:17.038] | : . ' ,         }
[08:07:17.038] | : . ' ,     }, args = future.call.arguments)
[08:07:17.038] | : . ' , }
[08:07:17.039] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:17.039] | : . ' Search for packages associated with the globals ...
[08:07:17.039] | : . ' , Packages associated with globals: [0] 
[08:07:17.040] | : . ' , Packages: [0] 
[08:07:17.040] | : . ' Search for packages associated with the globals ... done
[08:07:17.040] | : . ' Packages after dropping 'base': [0] 
[08:07:17.040] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.040] | : . ' packages: [0] 
[08:07:17.040] | : . getGlobalsAndPackages() ... done
[08:07:17.041] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:17.041] | : . ' state: ‘created’
[08:07:17.041] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.041] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.041] | : . ' Using MulticoreFutureBackend ...
[08:07:17.041] | : . ' , Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:17.042] | : . ' , Launching futures ...
[08:07:17.042] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:17.042] | : . ' , ; ` getFutureData() ...
[08:07:17.042] | : . ' , ; ` | getFutureCore() ...
[08:07:17.042] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:17.042] | : . ' , ; ` | getFutureCore() ... done
[08:07:17.042] | : . ' , ; ` | getFutureCapture() ...
[08:07:17.042] | : . ' , ; ` | getFutureCapture() ... done
[08:07:17.043] | : . ' , ; ` | getFutureContext() ...
[08:07:17.043] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.043] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:17.043] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.043] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:17.043] | : . ' , ; ` | getFutureContext() ... done
[08:07:17.043] | : . ' , ; ` getFutureData() ... done
[08:07:17.044] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:17.044] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:17.046] | : . ' , ; ` MulticoreFuture started
[08:07:17.047] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:17.047] | : . ' , Launching futures ... done
[08:07:17.047] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.047] | : . ' Using MulticoreFutureBackend ... done
[08:07:17.048] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:17.048] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:17.048] | : Created future:
[08:07:17.050] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.050] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:17.050] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.050] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.051] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.051] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:17.051] | : . ' , ; ` | : . New stack:
[08:07:17.051] | : . ' , ; ` | : . List of 1
[08:07:17.051] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.051] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.051] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:17.051] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.051] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.051] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.051] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.051] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.060] | : . ' , ; ` | : . Old stack:
[08:07:17.060] | : readImmediateCondition() ...
[08:07:17.060] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.061] | : . Number of RDS files: 0
[08:07:17.061] | : . Returned conditions set:
[08:07:17.061] | : .  list()
[08:07:17.061] | : readImmediateCondition() ... done
[08:07:17.048] | : MulticoreFuture:
[08:07:17.048] | : Label: ‘future_lapply-1’
[08:07:17.048] | : Expression:
[08:07:17.048] | : {
[08:07:17.048] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:17.048] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:17.048] | :     "# as a global variable                                         "
[08:07:17.048] | :     do.call(function(...) {
[08:07:17.048] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:17.048] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:17.048] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:17.048] | :         "# anonymous function.                                          "
[08:07:17.048] | :         "#                                                              "
[08:07:17.048] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:17.048] | :         "# function environment of FUN() to the calling environment.    "
[08:07:17.048] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:17.048] | :         "# global environment, which is where globals are written.      "
[08:07:17.048] | :         penv <- env <- environment(...future.FUN)
[08:07:17.048] | :         repeat {
[08:07:17.048] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:17.048] | :                 emptyenv())) 
[08:07:17.048] | :                 break
[08:07:17.048] | :             penv <- env
[08:07:17.048] | :             env <- parent.env(env)
[08:07:17.048] | :         }
[08:07:17.048] | :         if (identical(penv, globalenv())) {
[08:07:17.048] | :             environment(...future.FUN) <- environment()
[08:07:17.048] | :         }
[08:07:17.048] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:17.048] | :             !isNamespace(penv)) {
[08:07:17.048] | :             parent.env(penv) <- environment()
[08:07:17.048] | :         }
[08:07:17.048] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:17.048] | :         {
[08:07:17.048] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:17.048] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.048] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.048] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.048] | :                 on.exit(options(oopts), add = TRUE)
[08:07:17.048] | :             }
[08:07:17.048] | :             {
[08:07:17.048] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:17.048] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:17.048] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:17.048] | :                   {
[08:07:17.048] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:17.048] | :                   }
[08:07:17.048] | :                 })
[08:07:17.048] | :             }
[08:07:17.048] | :         }
[08:07:17.048] | :     }, args = future.call.arguments)
[08:07:17.048] | : }
[08:07:17.048] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:17.048] | : Packages: <none>
[08:07:17.048] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:17.048] | : Capture standard output: NA
[08:07:17.048] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:17.048] | : Immediate condition classes: ‘immediateCondition’
[08:07:17.048] | : Lazy evaluation: FALSE
[08:07:17.048] | : Local evaluation: TRUE
[08:07:17.048] | : Asynchronous evaluation: TRUE
[08:07:17.048] | : Early signaling: FALSE
[08:07:17.048] | : Environment: R_GlobalEnv
[08:07:17.048] | : State: ‘running’
[08:07:17.048] | : Resolved: FALSE
[08:07:17.048] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-11
[08:07:17.048] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:17.048] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.048] | : Value: <not collected>
[08:07:17.048] | : Conditions captured: <none>
[08:07:17.064] | : Chunk #1 of 2 ... DONE
[08:07:17.060] | : . ' , ; ` | : . List of 1
[08:07:17.060] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.060] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.060] | : . ' , ; ` | : .     ...)  
[08:07:17.060] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.060] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.060] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.060] | : . ' , ; ` | : .     ...)  
[08:07:17.060] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.060] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.064] | : Chunk #2 of 2 ...
[08:07:17.064] | : . ' , ; ` | : . Not identical
[08:07:17.064] | :  - Finding globals in 'X' for chunk #2 ...
[08:07:17.064] | : . ' , ; ` | : . all.equal() for future ...
[08:07:17.065] | : getGlobalsAndPackages() ...
[08:07:17.065] | : . Searching for globals ...
[08:07:17.065] | : . ' globals found: [0] 
[08:07:17.065] | : . Searching for globals ... done
[08:07:17.066] | : . globals: [0] <none>
[08:07:17.066] | : . packages: [0] <none>
[08:07:17.066] | : getGlobalsAndPackages() ... done
[08:07:17.066] | :    + additional globals found: [n=0] 
[08:07:17.066] | :    + additional namespaces needed: [n=0] 
[08:07:17.066] | :  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:17.066] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:17.066] | :  - seeds: <none>
[08:07:17.067] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.067] | : future(..., label = ‘future_lapply-2’) ...
[08:07:17.067] | : . lazy: FALSE
[08:07:17.067] | : . stdout: NA
[08:07:17.067] | : . conditions: [n=1] ‘condition’
[08:07:17.067] | : . gc: FALSE
[08:07:17.067] | : . earlySignal: FALSE
[08:07:17.067] | : . getGlobalsAndPackages() ...
[08:07:17.067] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.068] | : . ' Resolving globals: FALSE
[08:07:17.068] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:17.068] | : . ' , {
[08:07:17.068] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:17.068] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:17.068] | : . ' ,     "# as a global variable                                         "
[08:07:17.068] | : . ' ,     do.call(function(...) {
[08:07:17.068] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:17.068] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:17.068] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:17.068] | : . ' ,         "# anonymous function.                                          "
[08:07:17.068] | : . ' ,         "#                                                              "
[08:07:17.068] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:17.068] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:17.068] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:17.068] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:17.068] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:17.068] | : . ' ,         repeat {
[08:07:17.068] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:17.068] | : . ' ,                 emptyenv())) 
[08:07:17.068] | : . ' ,                 break
[08:07:17.068] | : . ' ,             penv <- env
[08:07:17.068] | : . ' ,             env <- parent.env(env)
[08:07:17.068] | : . ' ,         }
[08:07:17.068] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:17.068] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:17.068] | : . ' ,         }
[08:07:17.068] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:17.068] | : . ' ,             !isNamespace(penv)) {
[08:07:17.068] | : . ' ,             parent.env(penv) <- environment()
[08:07:17.068] | : . ' ,         }
[08:07:17.068] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:17.068] | : . ' ,         {
[08:07:17.068] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:17.068] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.068] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.068] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.068] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:17.068] | : . ' ,             }
[08:07:17.068] | : . ' ,             {
[08:07:17.068] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:17.068] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:17.068] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:17.068] | : . ' ,                   {
[08:07:17.068] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:17.068] | : . ' ,                   }
[08:07:17.068] | : . ' ,                 })
[08:07:17.068] | : . ' ,             }
[08:07:17.068] | : . ' ,         }
[08:07:17.068] | : . ' ,     }, args = future.call.arguments)
[08:07:17.068] | : . ' , }
[08:07:17.069] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:17.069] | : . ' Search for packages associated with the globals ...
[08:07:17.069] | : . ' , Packages associated with globals: [0] 
[08:07:17.069] | : . ' , Packages: [0] 
[08:07:17.069] | : . ' Search for packages associated with the globals ... done
[08:07:17.070] | : . ' Packages after dropping 'base': [0] 
[08:07:17.070] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.070] | : . ' packages: [0] 
[08:07:17.070] | : . getGlobalsAndPackages() ... done
[08:07:17.070] | : . run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:17.071] | : . ' state: ‘created’
[08:07:17.071] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.071] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.071] | : . ' Using MulticoreFutureBackend ...
[08:07:17.071] | : . ' , Number of futures since start: 5 (5 created, 5 launched, 4 finished)
[08:07:17.071] | : . ' , Launching futures ...
[08:07:17.071] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:17.065] | : . ' , ; ` | : . ' List of 2
[08:07:17.065] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.065] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.065] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.065] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.065] | : . ' , ; ` | : . '     ...)  
[08:07:17.065] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.065] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.065] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.065] | : . ' , ; ` | : . '     ...)  
[08:07:17.065] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.072] | : . ' , ; ` getFutureData() ...
[08:07:17.072] | : . ' , ; ` | getFutureCore() ...
[08:07:17.072] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:17.072] | : . ' , ; ` | getFutureCore() ... done
[08:07:17.072] | : . ' , ; ` | getFutureCapture() ...
[08:07:17.072] | : . ' , ; ` | getFutureCapture() ... done
[08:07:17.072] | : . ' , ; ` | : . ' Formals differ
[08:07:17.072] | : . ' , ; ` | getFutureContext() ...
[08:07:17.072] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:17.072] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.073] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:17.073] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:17.073] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:17.073] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.073] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:17.073] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:17.073] | : . ' , ; ` | getFutureContext() ... done
[08:07:17.073] | : . ' , ; ` getFutureData() ... done
[08:07:17.073] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:17.073] | : . ' , ; ` | : List of future strategies:
[08:07:17.073] | : . ' , ; ` | : 1. sequential:
[08:07:17.073] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:17.073] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:17.073] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.074] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:17.076] | : . ' , ; ` MulticoreFuture started
[08:07:17.077] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:17.077] | : . ' , Launching futures ... done
[08:07:17.074] | : . ' , ; ` | : List of 1
[08:07:17.074] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.074] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.074] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:17.074] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.074] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.074] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.074] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.074] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.078] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.078] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.078] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.078] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.078] | : . ' Using MulticoreFutureBackend ... done
[08:07:17.078] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:17.078] | : . run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:17.078] | : future(..., label = ‘future_lapply-2’) ... done
[08:07:17.079] | : Created future:
[08:07:17.081] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.078] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.078] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.078] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:17.078] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.078] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.078] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.078] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.081] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:17.081] | : . ' , ; ` | : . ' init: TRUE
[08:07:17.081] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:17.081] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.082] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:17.082] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:17.082] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.082] | : . ' , ; ` | : . ' ,  list()
[08:07:17.082] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.082] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:17.082] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:17.083] | : . ' , ; ` | : . New stack:
[08:07:17.082] | : . ' , ; ` | : . ' ,  list()
[08:07:17.083] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:17.083] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:17.083] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:17.083] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:17.085] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:17.085] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:17.085] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:17.085] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.086] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:17.086] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.086] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.086] | : . ' , ; ` assign_globals() ...
[08:07:17.083] | : . ' , ; ` | : . List of 1
[08:07:17.083] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.083] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.083] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:17.083] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.083] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.083] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.083] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.083] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.087] | : . ' , ; ` | : . Old stack:
[08:07:17.092] | : readImmediateCondition() ...
[08:07:17.092] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.093] | : . Number of RDS files: 0
[08:07:17.093] | : . Returned conditions set:
[08:07:17.088] | : . ' , ; ` | : . List of 1
[08:07:17.088] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.088] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.088] | : . ' , ; ` | : .     ...)  
[08:07:17.088] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.088] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.088] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.088] | : . ' , ; ` | : .     ...)  
[08:07:17.088] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.088] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.093] | : .  list()
[08:07:17.093] | : . ' , ; ` | : . Not identical
[08:07:17.094] | : readImmediateCondition() ... done
[08:07:17.086] | : . ' , ; ` List of 5
[08:07:17.086] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:17.086] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:17.086] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:17.086] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:17.086] | : . ' , ; `   ..$ : int 1
[08:07:17.086] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:17.086] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:17.086] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:17.086] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab97d24cc0> 
[08:07:17.086] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab97d24cc0> 
[08:07:17.086] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.086] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.086] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.086] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:17.086] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:17.086] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.086] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:17.094] | : . ' , ; ` | : . all.equal() for future ...
[08:07:17.094] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:17.094] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:17.079] | : MulticoreFuture:
[08:07:17.079] | : Label: ‘future_lapply-2’
[08:07:17.079] | : Expression:
[08:07:17.079] | : {
[08:07:17.079] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:17.079] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:17.079] | :     "# as a global variable                                         "
[08:07:17.079] | :     do.call(function(...) {
[08:07:17.079] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:17.079] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:17.079] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:17.079] | :         "# anonymous function.                                          "
[08:07:17.079] | :         "#                                                              "
[08:07:17.079] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:17.079] | :         "# function environment of FUN() to the calling environment.    "
[08:07:17.079] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:17.079] | :         "# global environment, which is where globals are written.      "
[08:07:17.079] | :         penv <- env <- environment(...future.FUN)
[08:07:17.079] | :         repeat {
[08:07:17.079] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:17.079] | :                 emptyenv())) 
[08:07:17.079] | :                 break
[08:07:17.079] | :             penv <- env
[08:07:17.079] | :             env <- parent.env(env)
[08:07:17.079] | :         }
[08:07:17.079] | :         if (identical(penv, globalenv())) {
[08:07:17.079] | :             environment(...future.FUN) <- environment()
[08:07:17.079] | :         }
[08:07:17.079] | :         else if (!identical(penv, emptyenv()[08:07:17.094] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
) && !is.null(penv) && 
[08:07:17.079] | :             !isNamespace(penv)) {
[08:07:17.079] | :             parent.env(penv) <- environment()
[08:07:17.079] | :         }
[08:07:17.079] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:17.079] | :         {
[08:07:17.079] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:17.079] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.079] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.079] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.079] | :                 on.exit(options(oopts), add = TRUE)
[08:07:17.079] | :             }
[08:07:17.079] | :             {
[08:07:17.079] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:17.079] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:17.079] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:17.079] | :                   {
[08:07:17.079] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:17.079] | :                   }
[08:07:17.079] | :                 })
[08:07:17.079] | :             }
[08:07:17.079] | :         }
[08:07:17.079] | :     }, args = future.call.arguments)
[08:07:17.079] | : }
[08:07:17.079] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:17.079] | : Packages: <none>
[08:07:17.079] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:17.079] | : Capture standard output: NA
[08:07:17.079] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:17.079] | : Immediate condition classes: ‘immediateCondition’
[08:07:17.079] | : Lazy evaluation: FALSE
[08:07:17.079] | : Local evaluation: TRUE
[08:07:17.079] | : Asynchronous evaluation: TRUE
[08:07:17.079] | : Early signaling: FALSE
[08:07:17.079] | : Environment: R_GlobalEnv
[08:07:17.079] | : State: ‘running’
[08:07:17.079] | : Resolved: FALSE
[08:07:17.079] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-12
[08:07:17.079] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:17.079] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.079] | : Value: <not collected>
[08:07:17.079] | : Conditions captured: <none>
[08:07:17.095] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:17.095] | : Chunk #2 of 2 ... DONE
[08:07:17.095] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:17.095] | : Launching 2 futures (chunks) ... DONE
[08:07:17.095] | : . ' , ; ` assign_globals() ... done
[08:07:17.095] | : Resolving 2 futures (chunks) ...
[08:07:17.095] | : value() for list ...
[08:07:17.095] | : . recursive: 0
[08:07:17.096] | : . reduce: FALSE
[08:07:17.096] | : . length: 2

[08:07:17.096] | : . Number of remaining objects: 2
[08:07:17.096] | : . checking value #1:
[08:07:17.097] | : . 'obj' is MulticoreFuture
[08:07:17.094] | : . ' , ; ` | : . ' List of 2
[08:07:17.094] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.094] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.094] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.094] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.094] | : . ' , ; ` | : . '     ...)  
[08:07:17.094] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.094] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.094] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.094] | : . ' , ; ` | : . '     ...)  
[08:07:17.094] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.104] | : . ' , ; ` | : . ' Formals differ
[08:07:17.104] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:17.104] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:17.104] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:17.105] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:17.105] | : . ' , ; ` | : List of future strategies:
[08:07:17.105] | : . ' , ; ` | : 1. sequential:
[08:07:17.105] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:17.105] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:17.105] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.107] | : . readImmediateCondition() ...
[08:07:17.107] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.108] | : . ' Number of RDS files: 0
[08:07:17.108] | : . ' Returned conditions set:
[08:07:17.108] | : . '  list()
[08:07:17.109] | : . readImmediateCondition() ... done
[08:07:17.109] | : . checking value #2:
[08:07:17.109] | : . 'obj' is MulticoreFuture
[08:07:17.105] | : . ' , ; ` | : List of 1
[08:07:17.105] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.105] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.105] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:17.105] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.105] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.105] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.105] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.105] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.110] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.110] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.111] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.111] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:17.111] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.111] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.111] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:17.111] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.111] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.111] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.111] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.114] | : . ' , ; ` | : . ' init: TRUE
[08:07:17.114] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:17.114] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:17.114] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:17.114] | : . ' , ; ` | : . ' ,  list()
[08:07:17.115] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:17.115] | : . ' , ; ` | : . ' ,  list()
[08:07:17.115] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:17.115] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:17.115] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:17.115] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:17.117] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:17.117] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:17.117] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:17.117] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.118] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:17.118] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.118] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.118] | : . ' , ; ` assign_globals() ...
[08:07:17.119] | : . readImmediateCondition() ...
[08:07:17.120] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.120] | : . ' Number of RDS files: 0
[08:07:17.120] | : . ' Returned conditions set:
[08:07:17.120] | : . '  list()
[08:07:17.121] | : . readImmediateCondition() ... done
[08:07:17.118] | : . ' , ; ` List of 5
[08:07:17.118] | : . ' , ; `  $ ...future.FUN            :function (x)  
[08:07:17.118] | : . ' , ; `  $ future.call.arguments    : list()
[08:07:17.118] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:17.118] | : . ' , ; `  $ ...future.elements_ii    :List of 1
[08:07:17.118] | : . ' , ; `   ..$ : int 0
[08:07:17.118] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:17.118] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:17.118] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:17.118] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab97d24cc0> 
[08:07:17.118] | : . ' , ; `   ..$ future.call.arguments    :<environment: 0x55ab97d24cc0> 
[08:07:17.118] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.118] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.118] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.118] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:17.118] | : . ' , ; `  - attr(*, "total_size")= num 6008
[08:07:17.118] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.118] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:17.126] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:17.126] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:17.127] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:17.127] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:17.127] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:17.127] | : . ' , ; ` assign_globals() ... done
[08:07:17.130] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.130] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.130] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.131] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:17.131] | : . ' , ; ` | : . ' New stack:
[08:07:17.131] | : . Number of remaining objects: 2
[08:07:17.131] | : . checking value #1:
[08:07:17.131] | : . 'obj' is MulticoreFuture
[08:07:17.131] | : . ' , ; ` | : . ' List of 1
[08:07:17.131] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.131] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.131] | : . ' , ; ` | : . '     ...)  
[08:07:17.131] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.131] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.131] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.131] | : . ' , ; ` | : . '     ...)  
[08:07:17.131] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.131] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.136] | : . ' , ; ` | : . ' Old stack:
[08:07:17.136] | : . ' , ; ` | : . ' List of 1
[08:07:17.136] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.136] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.136] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9770a8c0> 
[08:07:17.136] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.136] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.136] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.141] | : . ' , ; ` | : . ' Not identical
[08:07:17.141] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:17.142] | : . readImmediateCondition() ...
[08:07:17.142] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.142] | : . ' Number of RDS files: 0
[08:07:17.143] | : . ' Returned conditions set:
[08:07:17.143] | : . '  list()
[08:07:17.143] | : . readImmediateCondition() ... done
[08:07:17.143] | : . checking value #2:
[08:07:17.143] | : . 'obj' is MulticoreFuture
[08:07:17.141] | : . ' , ; ` | : . ' , List of 2
[08:07:17.141] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.141] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.141] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.141] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.141] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.141] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9770a8c0> 
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.141] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.151] | : . ' , ; ` | : . ' , Formals differ
[08:07:17.151] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:17.151] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:17.151] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:17.152] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:17.152] | : . ' , ; ` | : . List of future strategies:
[08:07:17.152] | : . ' , ; ` | : . 1. multicore:
[08:07:17.152] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:17.152] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:17.152] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:17.153] | : . readImmediateCondition() ...
[08:07:17.154] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.154] | : . ' Number of RDS files: 0
[08:07:17.154] | : . ' Returned conditions set:
[08:07:17.154] | : . '  list()
[08:07:17.155] | : . readImmediateCondition() ... done
[08:07:17.152] | : . ' , ; ` | : . List of 1
[08:07:17.152] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.152] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.152] | : . ' , ; ` | : .     ...)  
[08:07:17.152] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.152] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.152] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.152] | : . ' , ; ` | : .     ...)  
[08:07:17.152] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.152] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.158] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.158] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.158] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.158] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.158] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:17.159] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.159] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.159] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.165] | : . Number of remaining objects: 2
[08:07:17.165] | : . checking value #1:
[08:07:17.165] | : . 'obj' is MulticoreFuture
[08:07:17.175] | : . readImmediateCondition() ...
[08:07:17.176] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.176] | : . ' Number of RDS files: 0
[08:07:17.176] | : . ' Returned conditions set:
[08:07:17.176] | : . '  list()
[08:07:17.177] | : . readImmediateCondition() ... done
[08:07:17.177] | : . checking value #2:
[08:07:17.177] | : . 'obj' is MulticoreFuture
[08:07:17.177] | : . readImmediateCondition() ...
[08:07:17.177] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.177] | : . ' Number of RDS files: 0
[08:07:17.177] | : . ' Returned conditions set:
[08:07:17.178] | : . '  list()
[08:07:17.178] | : . readImmediateCondition() ... done
[08:07:17.178] | : . MulticoreFuture #2
[08:07:17.178] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:17.178] | : . ' nx: 2
[08:07:17.178] | : . ' relay: TRUE
[08:07:17.179] | : . ' stdout: TRUE
[08:07:17.179] | : . ' signal: TRUE
[08:07:17.179] | : . ' resignal: FALSE
[08:07:17.179] | : . ' force: TRUE
[08:07:17.179] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.179] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:17.179] | : . ' until=1
[08:07:17.179] | : . ' relaying element #1
[08:07:17.180] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.180] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.180] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:17.180] | : . value(<MulticoreFuture>, ...) ...
[08:07:17.180] | : . value(<MulticoreFuture>, ...) ... done
[08:07:17.180] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:17.180] | : . ' result() for MulticoreFuture ...
[08:07:17.181] | : . ' , readImmediateCondition() ...
[08:07:17.181] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.181] | : . ' , ; Number of RDS files: 0
[08:07:17.181] | : . ' , ; Returned conditions set:
[08:07:17.182] | : . ' , ;  list()
[08:07:17.182] | : . ' , readImmediateCondition() ... done
[08:07:17.182] | : . ' , result() for MulticoreFuture ...
[08:07:17.183] | : . ' , result() for MulticoreFuture ... done
[08:07:17.183] | : . ' , signalConditions() ...
[08:07:17.183] | : . ' , ; include = ‘immediateCondition’
[08:07:17.183] | : . ' , ; exclude = 
[08:07:17.183] | : . ' , ; resignal = FALSE
[08:07:17.183] | : . ' , ; Number of conditions: 6
[08:07:17.183] | : . ' , ;  int 6
[08:07:17.184] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.184] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.184] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.184] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.185] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.185] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.185] | : . ' , ; Drop signaled conditions: 0
[08:07:17.185] | : . ' , signalConditions() ... done
[08:07:17.185] | : . ' result() for MulticoreFuture ... done
[08:07:17.185] | : . ' result() for MulticoreFuture ...
[08:07:17.186] | : . ' result() for MulticoreFuture ... done
[08:07:17.186] | : . ' signalConditions() ...
[08:07:17.186] | : . ' , include = ‘immediateCondition’
[08:07:17.186] | : . ' , exclude = 
[08:07:17.186] | : . ' , resignal = FALSE
[08:07:17.186] | : . ' , Number of conditions: 6
[08:07:17.186] | : . ' ,  int 6
[08:07:17.187] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.187] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.187] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.187] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.187] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.188] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.188] | : . ' , Drop signaled conditions: 0
[08:07:17.188] | : . ' signalConditions() ... done
[08:07:17.188] | : . ' check for misuse ...
[08:07:17.188] | : . ' check for misuse ... done
[08:07:17.188] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:17.188] | : . value: <list>
[08:07:17.188] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:17.189] | : . ' nx: 2
[08:07:17.189] | : . ' relay: TRUE
[08:07:17.189] | : . ' stdout: TRUE
[08:07:17.189] | : . ' signal: TRUE
[08:07:17.189] | : . ' resignal: FALSE
[08:07:17.189] | : . ' force: TRUE
[08:07:17.189] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.189] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.189] | : . ' until=1
[08:07:17.190] | : . ' relaying element #1
[08:07:17.190] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.190] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.190] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:17.190] | : . resolve() for MulticoreFuture ...
[08:07:17.190] | : . resolve() for MulticoreFuture ... done
[08:07:17.190] | : . length: 1 (resolved future 2)
[08:07:17.191] | : value() for list ... done
[08:07:17.201] | : Number of remaining objects: 1
[08:07:17.201] | : checking value #1:
[08:07:17.201] | : 'obj' is MulticoreFuture
[08:07:17.211] | : readImmediateCondition() ...
[08:07:17.211] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.212] | : . Number of RDS files: 0
[08:07:17.212] | : . Returned conditions set:
[08:07:17.212] | : .  list()
[08:07:17.212] | : readImmediateCondition() ... done
[08:07:17.222] | : Number of remaining objects: 1
[08:07:17.223] | : checking value #1:
[08:07:17.223] | : 'obj' is MulticoreFuture
[08:07:17.233] | : readImmediateCondition() ...
[08:07:17.233] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.234] | : . Number of RDS files: 0
[08:07:17.234] | : . Returned conditions set:
[08:07:17.234] | : .  list()
[08:07:17.234] | : readImmediateCondition() ... done
[08:07:17.245] | : Number of remaining objects: 1
[08:07:17.245] | : checking value #1:
[08:07:17.245] | : 'obj' is MulticoreFuture
[08:07:17.255] | : readImmediateCondition() ...
[08:07:17.256] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.256] | : . Number of RDS files: 0
[08:07:17.256] | : . Returned conditions set:
[08:07:17.256] | : .  list()
[08:07:17.257] | : readImmediateCondition() ... done
[08:07:17.267] | : Number of remaining objects: 1
[08:07:17.267] | : checking value #1:
[08:07:17.267] | : 'obj' is MulticoreFuture
[08:07:17.278] | : readImmediateCondition() ...
[08:07:17.278] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.278] | : . Number of RDS files: 0
[08:07:17.279] | : . Returned conditions set:
[08:07:17.279] | : .  list()
[08:07:17.280] | : readImmediateCondition() ... done
[08:07:17.290] | : Number of remaining objects: 1
[08:07:17.290] | : checking value #1:
[08:07:17.290] | : 'obj' is MulticoreFuture
[08:07:17.301] | : readImmediateCondition() ...
[08:07:17.301] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.301] | : . Number of RDS files: 0
[08:07:17.301] | : . Returned conditions set:
[08:07:17.301] | : .  list()
[08:07:17.302] | : readImmediateCondition() ... done
[08:07:17.312] | : Number of remaining objects: 1
[08:07:17.312] | : checking value #1:
[08:07:17.313] | : 'obj' is MulticoreFuture
[08:07:17.323] | : readImmediateCondition() ...
[08:07:17.323] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.323] | : . Number of RDS files: 0
[08:07:17.323] | : . Returned conditions set:
[08:07:17.324] | : .  list()
[08:07:17.324] | : readImmediateCondition() ... done
[08:07:17.334] | : Number of remaining objects: 1
[08:07:17.334] | : checking value #1:
[08:07:17.335] | : 'obj' is MulticoreFuture
[08:07:17.345] | : readImmediateCondition() ...
[08:07:17.345] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.345] | : . Number of RDS files: 0
[08:07:17.346] | : . Returned conditions set:
[08:07:17.346] | : .  list()
[08:07:17.346] | : readImmediateCondition() ... done
[08:07:17.356] | : Number of remaining objects: 1
[08:07:17.356] | : checking value #1:
[08:07:17.357] | : 'obj' is MulticoreFuture
[08:07:17.367] | : readImmediateCondition() ...
[08:07:17.367] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.367] | : . Number of RDS files: 0
[08:07:17.368] | : . Returned conditions set:
[08:07:17.368] | : .  list()
[08:07:17.368] | : readImmediateCondition() ... done
[08:07:17.378] | : Number of remaining objects: 1
[08:07:17.378] | : checking value #1:
[08:07:17.379] | : 'obj' is MulticoreFuture
[08:07:17.389] | : readImmediateCondition() ...
[08:07:17.389] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.389] | : . Number of RDS files: 0
[08:07:17.390] | : . Returned conditions set:
[08:07:17.390] | : .  list()
[08:07:17.390] | : readImmediateCondition() ... done
[08:07:17.400] | : Number of remaining objects: 1
[08:07:17.401] | : checking value #1:
[08:07:17.401] | : 'obj' is MulticoreFuture
[08:07:17.411] | : readImmediateCondition() ...
[08:07:17.411] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.411] | : . Number of RDS files: 0
[08:07:17.412] | : . Returned conditions set:
[08:07:17.412] | : .  list()
[08:07:17.412] | : readImmediateCondition() ... done
[08:07:17.422] | : Number of remaining objects: 1
[08:07:17.423] | : checking value #1:
[08:07:17.423] | : 'obj' is MulticoreFuture
[08:07:17.433] | : readImmediateCondition() ...
[08:07:17.433] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.434] | : . Number of RDS files: 0
[08:07:17.434] | : . Returned conditions set:
[08:07:17.434] | : .  list()
[08:07:17.434] | : readImmediateCondition() ... done
[08:07:17.444] | : Number of remaining objects: 1
[08:07:17.445] | : checking value #1:
[08:07:17.445] | : 'obj' is MulticoreFuture
[08:07:17.455] | : readImmediateCondition() ...
[08:07:17.455] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.456] | : . Number of RDS files: 0
[08:07:17.456] | : . Returned conditions set:
[08:07:17.456] | : .  list()
[08:07:17.456] | : readImmediateCondition() ... done
[08:07:17.466] | : Number of remaining objects: 1
[08:07:17.467] | : checking value #1:
[08:07:17.467] | : 'obj' is MulticoreFuture
[08:07:17.477] | : readImmediateCondition() ...
[08:07:17.477] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.477] | : . Number of RDS files: 0
[08:07:17.478] | : . Returned conditions set:
[08:07:17.478] | : .  list()
[08:07:17.478] | : readImmediateCondition() ... done
[08:07:17.488] | : Number of remaining objects: 1
[08:07:17.489] | : checking value #1:
[08:07:17.489] | : 'obj' is MulticoreFuture
[08:07:17.499] | : readImmediateCondition() ...
[08:07:17.499] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.499] | : . Number of RDS files: 0
[08:07:17.500] | : . Returned conditions set:
[08:07:17.500] | : .  list()
[08:07:17.500] | : readImmediateCondition() ... done
[08:07:17.510] | : Number of remaining objects: 1
[08:07:17.511] | : checking value #1:
[08:07:17.511] | : 'obj' is MulticoreFuture
[08:07:17.521] | : readImmediateCondition() ...
[08:07:17.521] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.522] | : . Number of RDS files: 0
[08:07:17.522] | : . Returned conditions set:
[08:07:17.522] | : .  list()
[08:07:17.522] | : readImmediateCondition() ... done
[08:07:17.532] | : Number of remaining objects: 1
[08:07:17.533] | : checking value #1:
[08:07:17.533] | : 'obj' is MulticoreFuture
[08:07:17.543] | : readImmediateCondition() ...
[08:07:17.543] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.544] | : . Number of RDS files: 0
[08:07:17.544] | : . Returned conditions set:
[08:07:17.544] | : .  list()
[08:07:17.544] | : readImmediateCondition() ... done
[08:07:17.554] | : Number of remaining objects: 1
[08:07:17.555] | : checking value #1:
[08:07:17.555] | : 'obj' is MulticoreFuture
[08:07:17.565] | : readImmediateCondition() ...
[08:07:17.565] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.566] | : . Number of RDS files: 0
[08:07:17.566] | : . Returned conditions set:
[08:07:17.566] | : .  list()
[08:07:17.566] | : readImmediateCondition() ... done
[08:07:17.576] | : Number of remaining objects: 1
[08:07:17.577] | : checking value #1:
[08:07:17.577] | : 'obj' is MulticoreFuture
[08:07:17.587] | : readImmediateCondition() ...
[08:07:17.587] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.588] | : . Number of RDS files: 0
[08:07:17.588] | : . Returned conditions set:
[08:07:17.588] | : .  list()
[08:07:17.588] | : readImmediateCondition() ... done
[08:07:17.598] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.598] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.599] | : Number of remaining objects: 1
[08:07:17.599] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.599] | : checking value #1:
[08:07:17.599] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:17.599] | : 'obj' is MulticoreFuture
[08:07:17.599] | : . ' , ; ` | : . ' New stack:
[08:07:17.599] | : . ' , ; ` | : . ' List of 1
[08:07:17.599] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.599] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.599] | : . ' , ; ` | : . '     ...)  
[08:07:17.599] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.599] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.599] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.599] | : . ' , ; ` | : . '     ...)  
[08:07:17.599] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.599] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.603] | : . ' , ; ` | : . ' Old stack:
[08:07:17.603] | : . ' , ; ` | : . ' List of 1
[08:07:17.603] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.603] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.603] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab949a3858> 
[08:07:17.603] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.603] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.603] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.607] | : . ' , ; ` | : . ' Not identical
[08:07:17.607] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:17.609] | : readImmediateCondition() ...
[08:07:17.609] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.610] | : . Number of RDS files: 0
[08:07:17.610] | : . Returned conditions set:
[08:07:17.610] | : .  list()
[08:07:17.610] | : readImmediateCondition() ... done
[08:07:17.607] | : . ' , ; ` | : . ' , List of 2
[08:07:17.607] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.607] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.607] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.607] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.607] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.607] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab949a3858> 
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.607] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.614] | : . ' , ; ` | : . ' , Formals differ
[08:07:17.615] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:17.615] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:17.615] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:17.615] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:17.615] | : . ' , ; ` | : . List of future strategies:
[08:07:17.615] | : . ' , ; ` | : . 1. multicore:
[08:07:17.615] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:17.615] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:17.615] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:17.616] | : . ' , ; ` | : . List of 1
[08:07:17.616] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.616] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.616] | : . ' , ; ` | : .     ...)  
[08:07:17.616] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.616] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.616] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.616] | : . ' , ; ` | : .     ...)  
[08:07:17.616] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.616] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.620] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.620] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.620] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.620] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.621] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:17.621] | : Number of remaining objects: 1
[08:07:17.621] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.621] | : checking value #1:
[08:07:17.621] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.621] | : 'obj' is MulticoreFuture
[08:07:17.621] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.621] | : readImmediateCondition() ...
[08:07:17.621] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.622] | : . Number of RDS files: 0
[08:07:17.622] | : . Returned conditions set:
[08:07:17.622] | : .  list()
[08:07:17.622] | : readImmediateCondition() ... done
[08:07:17.622] | : MulticoreFuture #1
[08:07:17.622] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:17.623] | : . nx: 2
[08:07:17.623] | : . relay: TRUE
[08:07:17.623] | : . stdout: TRUE
[08:07:17.623] | : . signal: TRUE
[08:07:17.623] | : . resignal: FALSE
[08:07:17.623] | : . force: TRUE
[08:07:17.623] | : . relayed: [n=2] FALSE, FALSE
[08:07:17.623] | : . queued futures: [n=2] FALSE, TRUE
[08:07:17.623] | : . until=1
[08:07:17.624] | : . relaying element #1
[08:07:17.624] | : . value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:17.624] | : . ' result() for MulticoreFuture ...
[08:07:17.624] | : . ' , readImmediateCondition() ...
[08:07:17.625] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.625] | : . ' , ; Number of RDS files: 0
[08:07:17.625] | : . ' , ; Returned conditions set:
[08:07:17.625] | : . ' , ;  list()
[08:07:17.625] | : . ' , readImmediateCondition() ... done
[08:07:17.626] | : . ' , result() for MulticoreFuture ...
[08:07:17.626] | : . ' , result() for MulticoreFuture ... done
[08:07:17.626] | : . ' , signalConditions() ...
[08:07:17.626] | : . ' , ; include = ‘immediateCondition’
[08:07:17.626] | : . ' , ; exclude = 
[08:07:17.626] | : . ' , ; resignal = FALSE
[08:07:17.627] | : . ' , ; Number of conditions: 6
[08:07:17.627] | : . ' , ;  int 6
[08:07:17.627] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.627] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.628] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.628] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.628] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.628] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.628] | : . ' , ; Drop signaled conditions: 0
[08:07:17.628] | : . ' , signalConditions() ... done
[08:07:17.628] | : . ' result() for MulticoreFuture ... done
[08:07:17.629] | : . ' result() for MulticoreFuture ...
[08:07:17.629] | : . ' result() for MulticoreFuture ... done
[08:07:17.629] | : . ' signalConditions() ...
[08:07:17.629] | : . ' , include = ‘immediateCondition’
[08:07:17.629] | : . ' , exclude = 
[08:07:17.629] | : . ' , resignal = FALSE
[08:07:17.629] | : . ' , Number of conditions: 6
[08:07:17.630] | : . ' ,  int 6
[08:07:17.630] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.630] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.630] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.630] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.631] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.631] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.631] | : . ' , Drop signaled conditions: 0
[08:07:17.631] | : . ' signalConditions() ... done
[08:07:17.631] | : . ' relay stdout ...
[08:07:17.631] | : . ' relay stdout ... done
[08:07:17.631] | : . ' check for misuse ...
[08:07:17.631] | : . ' check for misuse ... done
[08:07:17.632] | : . value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:17.632] | : . result() for MulticoreFuture ...
[08:07:17.632] | : . result() for MulticoreFuture ... done
[08:07:17.632] | : . signalConditions() ...
[08:07:17.632] | : . ' include = ‘immediateCondition’
[08:07:17.632] | : . ' exclude = 
[08:07:17.632] | : . ' resignal = FALSE
[08:07:17.632] | : . ' Number of conditions: 6
[08:07:17.632] | : . '  int 6
[08:07:17.633] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.633] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.633] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.633] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.633] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.634] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.634] | : . ' Drop signaled conditions: 0
[08:07:17.634] | : . signalConditions() ... done
[08:07:17.634] | : . result() for MulticoreFuture ...
[08:07:17.634] | : . result() for MulticoreFuture ... done
[08:07:17.634] | : . signalConditions() ...
[08:07:17.634] | : . ' include = ‘condition’
[08:07:17.634] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:17.634] | : . ' resignal = TRUE
[08:07:17.635] | : . ' Number of conditions: 6
[08:07:17.635] | : . '  int 6
[08:07:17.635] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.635] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.047] | : . ' , ; ` attachPackages() ...
[08:07:17.635] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.636] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.048] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:17.636] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.636] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.048] | : . ' , ; ` attachPackages() ... done
[08:07:17.636] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.636] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.048] | : . ' , ; ` attachPackages() ...
[08:07:17.636] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.636] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.048] | : . ' , ; ` | packages: [n=0] 
[08:07:17.637] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.637] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.049] | : . ' , ; ` attachPackages() ... done
[08:07:17.637] | : . ' Drop signaled conditions: 6
[08:07:17.637] | : . signalConditions() ... done
[08:07:17.637] | : . relayed: [n=2] TRUE, FALSE
[08:07:17.637] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.637] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:17.637] | : value(<MulticoreFuture>, ...) ...
[08:07:17.638] | : value(<MulticoreFuture>, ...) ... done
[08:07:17.638] | : value() for MulticoreFuture (‘future_lapply-1’) ...
[08:07:17.638] | : . result() for MulticoreFuture ...
[08:07:17.638] | : . result() for MulticoreFuture ... done
[08:07:17.638] | : . result() for MulticoreFuture ...
[08:07:17.638] | : . result() for MulticoreFuture ... done
[08:07:17.638] | : . signalConditions() ...
[08:07:17.638] | : . ' include = ‘immediateCondition’
[08:07:17.638] | : . ' exclude = 
[08:07:17.639] | : . ' resignal = FALSE
[08:07:17.639] | : . ' Number of conditions: 0
[08:07:17.639] | : . '  int 0
[08:07:17.639] | : . signalConditions() ... done
[08:07:17.639] | : . check for misuse ...
[08:07:17.640] | : . check for misuse ... done
[08:07:17.640] | : value() for MulticoreFuture (‘future_lapply-1’) ... done
[08:07:17.640] | : value: <list>
[08:07:17.640] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:17.640] | : . nx: 2
[08:07:17.640] | : . relay: TRUE
[08:07:17.640] | : . stdout: TRUE
[08:07:17.640] | : . signal: TRUE
[08:07:17.640] | : . resignal: FALSE
[08:07:17.641] | : . force: TRUE
[08:07:17.641] | : . relayed: [n=2] TRUE, FALSE
[08:07:17.641] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.641] | : . until=2
[08:07:17.641] | : . relaying element #2
[08:07:17.641] | : . value() for MulticoreFuture (‘future_lapply-2’) ...
[08:07:17.641] | : . ' result() for MulticoreFuture ...
[08:07:17.641] | : . ' result() for MulticoreFuture ... done
[08:07:17.641] | : . ' result() for MulticoreFuture ...
[08:07:17.642] | : . ' result() for MulticoreFuture ... done
[08:07:17.642] | : . ' signalConditions() ...
[08:07:17.642] | : . ' , include = ‘immediateCondition’
[08:07:17.642] | : . ' , exclude = 
[08:07:17.642] | : . ' , resignal = FALSE
[08:07:17.642] | : . ' , Number of conditions: 6
[08:07:17.642] | : . ' ,  int 6
[08:07:17.643] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.643] | : . ' , Drop signaled conditions: 0
[08:07:17.644] | : . ' signalConditions() ... done
[08:07:17.644] | : . ' relay stdout ...
[08:07:17.644] | : . ' relay stdout ... done
[08:07:17.644] | : . ' check for misuse ...
[08:07:17.644] | : . ' check for misuse ... done
[08:07:17.644] | : . value() for MulticoreFuture (‘future_lapply-2’) ... done
[08:07:17.644] | : . result() for MulticoreFuture ...
[08:07:17.644] | : . result() for MulticoreFuture ... done
[08:07:17.645] | : . signalConditions() ...
[08:07:17.645] | : . ' include = ‘immediateCondition’
[08:07:17.645] | : . ' exclude = 
[08:07:17.645] | : . ' resignal = FALSE
[08:07:17.645] | : . ' Number of conditions: 6
[08:07:17.645] | : . '  int 6
[08:07:17.646] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.646] | : . ' Drop signaled conditions: 0
[08:07:17.646] | : . signalConditions() ... done
[08:07:17.647] | : . result() for MulticoreFuture ...
[08:07:17.647] | : . result() for MulticoreFuture ... done
[08:07:17.647] | : . signalConditions() ...
[08:07:17.647] | : . ' include = ‘condition’
[08:07:17.647] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:17.647] | : . ' resignal = TRUE
[08:07:17.647] | : . ' Number of conditions: 6
[08:07:17.647] | : . '  int 6
[08:07:17.648] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.648] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.077] | : . ' , ; ` attachPackages() ...
[08:07:17.648] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.648] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.078] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:17.648] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.649] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.078] | : . ' , ; ` attachPackages() ... done
[08:07:17.649] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.649] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.079] | : . ' , ; ` attachPackages() ...
[08:07:17.649] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.649] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.079] | : . ' , ; ` | packages: [n=0] 
[08:07:17.649] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.649] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.079] | : . ' , ; ` attachPackages() ... done
[08:07:17.649] | : . ' Drop signaled conditions: 6
[08:07:17.650] | : . signalConditions() ... done
[08:07:17.650] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.650] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.650] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:17.650] | : resolve() for MulticoreFuture ...
[08:07:17.650] | : resolve() for MulticoreFuture ... done
[08:07:17.650] | : length: 0 (resolved future 1)
[08:07:17.650] | future_lapply() -> future_xapply() ... done
[08:07:17.651] | Relaying remaining futures ...
[08:07:17.651] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:17.651] | : . nx: 2
[08:07:17.651] | : . relay: TRUE
[08:07:17.651] | : . stdout: TRUE
[08:07:17.651] | : . signal: TRUE
[08:07:17.651] | : . resignal: FALSE
[08:07:17.651] | : . force: TRUE
[08:07:17.651] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.652] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:17.652] | : . relayed: [n=2] TRUE, TRUE
[08:07:17.652] | : . queued futures: [n=2] TRUE, TRUE
[08:07:17.652] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:17.652] | Relaying remaining futures ... done
[08:07:17.652] future_lapply() ... done
[08:07:17.652]  - Number of value chunks collected: 2
[08:07:17.652] Resolving 2 futures (chunks) ... DONE
[08:07:17.653] Reducing values from 2 chunks ...
[08:07:17.653]  - Number of values collected after concatenation: 2
[08:07:17.653]  - Number of values expected: 2
[08:07:17.653] Reducing values from 2 chunks ... DONE


* future_lapply(x, ..., future.stdout = NA) ... DONE
* future_mapply(x, ..., future.stdout = FALSE) ...
[08:07:17.653] future_mapply() ...
[08:07:17.654] | future_mapply() -> future_xapply() ...
[08:07:17.654] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.654] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.654] | : Number of chunks: 2
[08:07:17.655] | : getGlobalsAndPackagesXApply() ...
[08:07:17.655] | : . future.globals: TRUE
[08:07:17.655] | : . getGlobalsAndPackages() ...
[08:07:17.655] | : . ' Searching for globals ...
[08:07:17.667] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:17.667] | : . ' Searching for globals ... done
[08:07:17.667] | : . ' Resolving globals: FALSE
[08:07:17.667] | : . ' Search for packages associated with the globals ...
[08:07:17.667] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:17.668] | : . ' , Packages: [1] ‘base’
[08:07:17.668] | : . ' Search for packages associated with the globals ... done
[08:07:17.668] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:17.668] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:17.668] | : . ' Packages after dropping 'base': [0] 
[08:07:17.669] | : . ' globals: [1] ‘FUN’
[08:07:17.669] | : . ' packages: [0] 
[08:07:17.669] | : . getGlobalsAndPackages() ... done
[08:07:17.669] | : . globals found/used: [n=1] ‘FUN’
[08:07:17.669] | : . needed namespaces: [n=0] 
[08:07:17.669] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:17.669] | : . List of 2
[08:07:17.669] | : .  $ ...future.FUN:function (x, y)  
[08:07:17.669] | : .  $ MoreArgs     : NULL
[08:07:17.669] | : .  - attr(*, "where")=List of 2
[08:07:17.669] | : .   ..$ ...future.FUN:<environment: 0x55ab98b92dd0> 
[08:07:17.669] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:17.669] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.669] | : .  - attr(*, "resolved")= logi FALSE
[08:07:17.669] | : .  - attr(*, "total_size")= num NA
[08:07:17.672] | : . Packages to be attached in all futures: [n=0] 
[08:07:17.672] | : getGlobalsAndPackagesXApply() ... done
[08:07:17.672] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.672] | : List of 5
[08:07:17.672] | :  $ ...future.FUN            :function (x, y)  
[08:07:17.672] | :  $ MoreArgs                 : NULL
[08:07:17.672] | :  $ ...future.elements_ii    : NULL
[08:07:17.672] | :  $ ...future.seeds_ii       : NULL
[08:07:17.672] | :  $ ...future.globals.maxSize: NULL
[08:07:17.672] | :  - attr(*, "where")=List of 5
[08:07:17.672] | :   ..$ ...future.FUN            :<environment: 0x55ab98b92dd0> 
[08:07:17.672] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:17.672] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.672] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.672] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.672] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.672] | :  - attr(*, "resolved")= logi FALSE
[08:07:17.672] | :  - attr(*, "total_size")= num NA
[08:07:17.676] | : Number of futures (= number of chunks): 2
[08:07:17.676] | : Launching 2 futures (chunks) ...
[08:07:17.676] | : Chunk #1 of 2 ...
[08:07:17.677] | :  - Finding globals in '...' for chunk #1 ...
[08:07:17.677] | : getGlobalsAndPackages() ...
[08:07:17.677] | : . Searching for globals ...
[08:07:17.677] | : . ' globals found: [0] 
[08:07:17.677] | : . Searching for globals ... done
[08:07:17.678] | : . globals: [0] <none>
[08:07:17.678] | : . packages: [0] <none>
[08:07:17.678] | : getGlobalsAndPackages() ... done
[08:07:17.678] | :    + additional globals found: [n=0] 
[08:07:17.678] | :    + additional namespaces needed: [n=0] 
[08:07:17.678] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:17.678] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:17.678] | :  - seeds: <none>
[08:07:17.678] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.678] | : future(..., label = ‘future_mapply-1’) ...
[08:07:17.679] | : . lazy: FALSE
[08:07:17.679] | : . stdout: FALSE
[08:07:17.679] | : . conditions: [n=1] ‘condition’
[08:07:17.679] | : . gc: FALSE
[08:07:17.679] | : . earlySignal: FALSE
[08:07:17.679] | : . getGlobalsAndPackages() ...
[08:07:17.679] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.679] | : . ' Resolving globals: FALSE
[08:07:17.679] | : . ' Search for packages associated with the globals ...
[08:07:17.680] | : . ' , Packages associated with globals: [0] 
[08:07:17.680] | : . ' , Packages: [0] 
[08:07:17.680] | : . ' Search for packages associated with the globals ... done
[08:07:17.680] | : . ' Packages after dropping 'base': [0] 
[08:07:17.680] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.680] | : . ' packages: [0] 
[08:07:17.680] | : . getGlobalsAndPackages() ... done
[08:07:17.681] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:17.681] | : . ' state: ‘created’
[08:07:17.681] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.681] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.681] | : . ' Using MulticoreFutureBackend ...
[08:07:17.681] | : . ' , Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:07:17.681] | : . ' , Launching futures ...
[08:07:17.682] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:17.682] | : . ' , ; ` getFutureData() ...
[08:07:17.682] | : . ' , ; ` | getFutureCore() ...
[08:07:17.682] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:17.682] | : . ' , ; ` | getFutureCore() ... done
[08:07:17.682] | : . ' , ; ` | getFutureCapture() ...
[08:07:17.682] | : . ' , ; ` | getFutureCapture() ... done
[08:07:17.682] | : . ' , ; ` | getFutureContext() ...
[08:07:17.682] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.683] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:17.683] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.683] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:17.683] | : . ' , ; ` | getFutureContext() ... done
[08:07:17.683] | : . ' , ; ` getFutureData() ... done
[08:07:17.683] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:17.683] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:17.686] | : . ' , ; ` MulticoreFuture started
[08:07:17.686] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:17.686] | : . ' , Launching futures ... done
[08:07:17.687] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.687] | : . ' Using MulticoreFutureBackend ... done
[08:07:17.687] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:17.687] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:17.688] | : Created future:
[08:07:17.689] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.689] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:17.690] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.690] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.690] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.690] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:17.691] | : . ' , ; ` | : . New stack:
[08:07:17.691] | : . ' , ; ` | : . List of 1
[08:07:17.691] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.691] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.691] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:17.691] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.691] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.691] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.691] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.691] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.695] | : . ' , ; ` | : . Old stack:
[08:07:17.700] | : readImmediateCondition() ...
[08:07:17.700] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.695] | : . ' , ; ` | : . List of 1
[08:07:17.695] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.695] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.695] | : . ' , ; ` | : .     ...)  
[08:07:17.695] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.695] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.695] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.695] | : . ' , ; ` | : .     ...)  
[08:07:17.695] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.695] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.700] | : . Number of RDS files: 0
[08:07:17.700] | : . ' , ; ` | : . Not identical
[08:07:17.700] | : . Returned conditions set:
[08:07:17.700] | : . ' , ; ` | : . all.equal() for future ...
[08:07:17.700] | : .  list()
[08:07:17.701] | : readImmediateCondition() ... done
[08:07:17.688] | : MulticoreFuture:
[08:07:17.688] | : Label: ‘future_mapply-1’
[08:07:17.688] | : Expression:
[08:07:17.688] | : {
[08:07:17.688] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:17.688] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.688] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.688] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.688] | :         on.exit(options(oopts), add = TRUE)
[08:07:17.688] | :     }
[08:07:17.688] | :     {
[08:07:17.688] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:17.688] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:17.688] | :         do.call(mapply, args = args)
[08:07:17.688] | :     }
[08:07:17.688] | : }
[08:07:17.688] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:17.688] | : Packages: <none>
[08:07:17.688] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:17.688] | : Capture standard output: FALSE
[08:07:17.688] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:17.688] | : Immediate condition classes: ‘immediateCondition’
[08:07:17.688] | : Lazy evaluation: FALSE
[08:07:17.688] | : Local evaluation: TRUE
[08:07:17.688] | : Asynchronous evaluation: TRUE
[08:07:17.688] | : Early signaling: FALSE
[08:07:17.688] | : Environment: R_GlobalEnv
[08:07:17.688] | : State: ‘running’
[08:07:17.688] | : Resolved: FALSE
[08:07:17.688] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-13
[08:07:17.688] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:17.688] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.688] | : Value: <not collected>
[08:07:17.688] | : Conditions captured: <none>
[08:07:17.701] | : Chunk #1 of 2 ... DONE
[08:07:17.701] | : Chunk #2 of 2 ...
[08:07:17.702] | :  - Finding globals in '...' for chunk #2 ...
[08:07:17.702] | : getGlobalsAndPackages() ...
[08:07:17.702] | : . Searching for globals ...
[08:07:17.703] | : . ' globals found: [0] 
[08:07:17.703] | : . Searching for globals ... done
[08:07:17.703] | : . globals: [0] <none>
[08:07:17.703] | : . packages: [0] <none>
[08:07:17.703] | : getGlobalsAndPackages() ... done
[08:07:17.703] | :    + additional globals found: [n=0] 
[08:07:17.704] | :    + additional namespaces needed: [n=0] 
[08:07:17.704] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:17.704] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:17.704] | :  - seeds: <none>
[08:07:17.704] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.704] | : future(..., label = ‘future_mapply-2’) ...
[08:07:17.704] | : . lazy: FALSE
[08:07:17.704] | : . stdout: FALSE
[08:07:17.705] | : . conditions: [n=1] ‘condition’
[08:07:17.705] | : . gc: FALSE
[08:07:17.705] | : . earlySignal: FALSE
[08:07:17.705] | : . getGlobalsAndPackages() ...
[08:07:17.705] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.705] | : . ' Resolving globals: FALSE
[08:07:17.705] | : . ' Search for packages associated with the globals ...
[08:07:17.706] | : . ' , Packages associated with globals: [0] 
[08:07:17.706] | : . ' , Packages: [0] 
[08:07:17.706] | : . ' Search for packages associated with the globals ... done
[08:07:17.707] | : . ' Packages after dropping 'base': [0] 
[08:07:17.707] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:17.707] | : . ' packages: [0] 
[08:07:17.707] | : . getGlobalsAndPackages() ... done
[08:07:17.700] | : . ' , ; ` | : . ' List of 2
[08:07:17.700] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.700] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.700] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.700] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.700] | : . ' , ; ` | : . '     ...)  
[08:07:17.700] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.700] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.700] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.700] | : . ' , ; ` | : . '     ...)  
[08:07:17.700] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.708] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:17.708] | : . ' state: ‘created’
[08:07:17.708] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.708] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.708] | : . ' , ; ` | : . ' Formals differ
[08:07:17.709] | : . ' Using MulticoreFutureBackend ...
[08:07:17.709] | : . ' , Number of futures since start: 7 (7 created, 7 launched, 6 finished)
[08:07:17.709] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:17.709] | : . ' , Launching futures ...
[08:07:17.709] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:17.709] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:17.709] | : . ' , ; ` getFutureData() ...
[08:07:17.709] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:17.709] | : . ' , ; ` | getFutureCore() ...
[08:07:17.710] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:17.709] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:17.710] | : . ' , ; ` | getFutureCore() ... done
[08:07:17.710] | : . ' , ; ` | getFutureCapture() ...
[08:07:17.710] | : . ' , ; ` | getFutureCapture() ... done
[08:07:17.710] | : . ' , ; ` | getFutureContext() ...
[08:07:17.710] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.710] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:17.711] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.710] | : . ' , ; ` | : List of future strategies:
[08:07:17.710] | : . ' , ; ` | : 1. sequential:
[08:07:17.710] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:17.710] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:17.710] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init =[08:07:17.711] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
 FALSE)
[08:07:17.711] | : . ' , ; ` | getFutureContext() ... done
[08:07:17.711] | : . ' , ; ` getFutureData() ... done
[08:07:17.711] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:17.712] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:17.714] | : . ' , ; ` MulticoreFuture started
[08:07:17.715] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:17.715] | : . ' , Launching futures ... done
[08:07:17.716] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.711] | : . ' , ; ` | : List of 1
[08:07:17.711] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.711] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.711] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:17.711] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.711] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.711] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.711] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.711] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.716] | : . ' Using MulticoreFutureBackend ... done
[08:07:17.716] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:17.716] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.717] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.717] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:17.717] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.717] | : Created future:
[08:07:17.717] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:17.719] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.719] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:17.720] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.720] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.717] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.717] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.717] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:17.717] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.717] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.717] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.717] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.721] | : . ' , ; ` | : . ' init: TRUE
[08:07:17.721] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:17.721] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.721] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:17.721] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:17.721] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:17.721] | : . ' , ; ` | : . New stack:
[08:07:17.721] | : . ' , ; ` | : . ' ,  list()
[08:07:17.722] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:17.722] | : . ' , ; ` | : . ' ,  list()
[08:07:17.722] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:17.722] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:17.722] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:17.722] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:17.724] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:17.724] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:17.724] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:17.724] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.724] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:17.725] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.725] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.725] | : . ' , ; ` assign_globals() ...
[08:07:17.721] | : . ' , ; ` | : . List of 1
[08:07:17.721] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.721] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.721] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:17.721] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.721] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.721] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.721] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.721] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.726] | : . ' , ; ` | : . Old stack:
[08:07:17.730] | : readImmediateCondition() ...
[08:07:17.730] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.730] | : . Number of RDS files: 0
[08:07:17.731] | : . Returned conditions set:
[08:07:17.731] | : .  list()
[08:07:17.726] | : . ' , ; ` | : . List of 1
[08:07:17.726] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.726] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.726] | : . ' , ; ` | : .     ...)  
[08:07:17.726] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.726] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.726] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.726] | : . ' , ; ` | : .     ...)  
[08:07:17.726] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.726] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.731] | : readImmediateCondition() ... done
[08:07:17.731] | : . ' , ; ` | : . Not identical
[08:07:17.732] | : . ' , ; ` | : . all.equal() for future ...
[08:07:17.717] | : MulticoreFuture:
[08:07:17.717] | : Label: ‘future_mapply-2’
[08:07:17.717] | : Expression:
[08:07:17.717] | : {
[08:07:17.717] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:17.717] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:17.717] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:17.717] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:17.717] | :         on.exit(options(oopts), add = TRUE)
[08:07:17.717] | :     }
[08:07:17.717] | :     {
[08:07:17.717] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:17.717] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:17.717] | :         do.call(mapply, args = args)
[08:07:17.717] | :     }
[08:07:17.717] | : }
[08:07:17.717] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:17.717] | : Packages: <none>
[08:07:17.717] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:17.717] | : Capture standard output: FALSE
[08:07:17.717] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:17.717] | : Immediate condition classes: ‘immediateCondition’
[08:07:17.717] | : Lazy evaluation: FALSE
[08:07:17.717] | : Local evaluation: TRUE
[08:07:17.717] | : Asynchronous evaluation: TRUE
[08:07:17.717] | : Early signaling: FALSE
[08:07:17.717] | : Environment: R_GlobalEnv
[08:07:17.717] | : State: ‘running’
[08:07:17.717] | : Resolved: FALSE
[08:07:17.717] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-14
[08:07:17.717] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:17.717] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:17.717] | : Value: <not collected>
[08:07:17.717] | : Conditions captured: <none>
[08:07:17.732] | : Chunk #2 of 2 ... DONE
[08:07:17.732] | : Launching 2 futures (chunks) ... DONE
[08:07:17.733] | : Resolving 2 futures (chunks) ...
[08:07:17.733] | : value() for list ...
[08:07:17.733] | : . recursive: 0
[08:07:17.734] | : . reduce: FALSE
[08:07:17.734] | : . length: 2

[08:07:17.734] | : . Number of remaining objects: 2
[08:07:17.725] | : . ' , ; ` List of 5
[08:07:17.725] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:17.725[08:07:17.735] | : . checking value #1:
] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:17.725] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:17.725] | : . ' , ; `   ..$ :List of 1
[08:07:17.725] | : . ' , ; `   .. ..$ : int 1
[08:07:17.725] | : . ' , ; `   ..$ :List of 1
[08:07:17.725] | : . ' , ; `   .. ..$ : int 0
[08:07:17.725] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:17.725] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:17.725] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:17.725] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab98b92dd0> 
[08:07:17.725] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:17.725] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.725] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.725] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.725] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:17.725] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:17.725] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.725] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:17.735] | : . 'obj' is MulticoreFuture
[08:07:17.735] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:17.735] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:17.735] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:17.736] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:17.736] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:17.736] | : . ' , ; ` assign_globals() ... done
[08:07:17.732] | : . ' , ; ` | : . ' List of 2
[08:07:17.732] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.732] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.732] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.732] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.732] | : . ' , ; ` | : . '     ...)  
[08:07:17.732] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.732] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.732] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.732] | : . ' , ; ` | : . '     ...)  
[08:07:17.732] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.741] | : . ' , ; ` | : . ' Formals differ
[08:07:17.741] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:17.741] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:17.741] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:17.741] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:17.742] | : . ' , ; ` | : List of future strategies:
[08:07:17.742] | : . ' , ; ` | : 1. sequential:
[08:07:17.742] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:17.742] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:17.742] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.745] | : . readImmediateCondition() ...
[08:07:17.745] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.746] | : . ' Number of RDS files: 0
[08:07:17.742] | : . ' , ; ` | : List of 1
[08:07:17.742] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.742] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.742] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:17.742] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.742] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.742] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.742] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.742] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.746] | : . ' Returned conditions set:
[08:07:17.746] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.746] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.746] | : . '  list()
[08:07:17.747] | : . readImmediateCondition() ... done
[08:07:17.747] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.747] | : . checking value #2:
[08:07:17.747] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:17.747] | : . 'obj' is MulticoreFuture
[08:07:17.747] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.747] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.747] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:17.747] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.747] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.747] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.747] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.750] | : . ' , ; ` | : . ' init: TRUE
[08:07:17.750] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:17.750] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:17.750] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:17.751] | : . ' , ; ` | : . ' ,  list()
[08:07:17.751] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:17.751] | : . ' , ; ` | : . ' ,  list()
[08:07:17.751] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:17.752] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:17.752] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:17.752] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:17.753] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:17.753] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:17.753] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:17.754] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.754] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:17.754] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.754] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.754] | : . ' , ; ` assign_globals() ...
[08:07:17.757] | : . readImmediateCondition() ...
[08:07:17.758] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.758] | : . ' Number of RDS files: 0
[08:07:17.758] | : . ' Returned conditions set:
[08:07:17.758] | : . '  list()
[08:07:17.759] | : . readImmediateCondition() ... done
[08:07:17.754] | : . ' , ; ` List of 5
[08:07:17.754] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:17.754] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:17.754] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:17.754] | : . ' , ; `   ..$ :List of 1
[08:07:17.754] | : . ' , ; `   .. ..$ : int 0
[08:07:17.754] | : . ' , ; `   ..$ :List of 1
[08:07:17.754] | : . ' , ; `   .. ..$ : int 1
[08:07:17.754] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:17.754] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:17.754] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:17.754] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab98b92dd0> 
[08:07:17.754] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:17.754] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:17.754] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:17.754] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:17.754] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:17.754] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:17.754] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:17.754] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:17.763] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:17.763] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:17.763] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:17.763] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:17.763] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:17.763] | : . ' , ; ` assign_globals() ... done
[08:07:17.767] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.767] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:17.767] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:17.767] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:17.767] | : . ' , ; ` | : . ' New stack:
[08:07:17.769] | : . Number of remaining objects: 2
[08:07:17.769] | : . checking value #1:
[08:07:17.770] | : . 'obj' is MulticoreFuture
[08:07:17.767] | : . ' , ; ` | : . ' List of 1
[08:07:17.767] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.767] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.767] | : . ' , ; ` | : . '     ...)  
[08:07:17.767] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:17.767] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.767] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.767] | : . ' , ; ` | : . '     ...)  
[08:07:17.767] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.767] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.772] | : . ' , ; ` | : . ' Old stack:
[08:07:17.772] | : . ' , ; ` | : . ' List of 1
[08:07:17.772] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.772] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.772] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab98348f18> 
[08:07:17.772] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.772] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.772] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.777] | : . ' , ; ` | : . ' Not identical
[08:07:17.777] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:17.780] | : . readImmediateCondition() ...
[08:07:17.780] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.780] | : . ' Number of RDS files: 0
[08:07:17.781] | : . ' Returned conditions set:
[08:07:17.781] | : . '  list()
[08:07:17.781] | : . readImmediateCondition() ... done
[08:07:17.782] | : . checking value #2:
[08:07:17.782] | : . 'obj' is MulticoreFuture
[08:07:17.777] | : . ' , ; ` | : . ' , List of 2
[08:07:17.777] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.777] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.777] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.777] | : . ' , ; ` | : . ' ,     ...)  
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.777] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:17.777] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab98348f18> 
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:17.777] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:17.789] | : . ' , ; ` | : . ' , Formals differ
[08:07:17.789] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:17.789] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:17.790] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:17.790] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:17.790] | : . ' , ; ` | : . List of future strategies:
[08:07:17.790] | : . ' , ; ` | : . 1. multicore:
[08:07:17.790] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:17.790] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:17.790] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:17.792] | : . readImmediateCondition() ...
[08:07:17.793] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.793] | : . ' Number of RDS files: 0
[08:07:17.793] | : . ' Returned conditions set:
[08:07:17.793] | : . '  list()
[08:07:17.794] | : . readImmediateCondition() ... done
[08:07:17.790] | : . ' , ; ` | : . List of 1
[08:07:17.790] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:17.790] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.790] | : . ' , ; ` | : .     ...)  
[08:07:17.790] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:17.790] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:17.790] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:17.790] | : . ' , ; ` | : .     ...)  
[08:07:17.790] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:17.790] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:17.796] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:17.796] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:17.796] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:17.796] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:17.796] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:17.797] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:17.797] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.797] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:17.804] | : . Number of remaining objects: 2
[08:07:17.804] | : . checking value #1:
[08:07:17.805] | : . 'obj' is MulticoreFuture
[08:07:17.815] | : . readImmediateCondition() ...
[08:07:17.815] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.815] | : . ' Number of RDS files: 0
[08:07:17.815] | : . ' Returned conditions set:
[08:07:17.816] | : . '  list()
[08:07:17.816] | : . readImmediateCondition() ... done
[08:07:17.816] | : . checking value #2:
[08:07:17.816] | : . 'obj' is MulticoreFuture
[08:07:17.816] | : . readImmediateCondition() ...
[08:07:17.816] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.817] | : . ' Number of RDS files: 0
[08:07:17.817] | : . ' Returned conditions set:
[08:07:17.817] | : . '  list()
[08:07:17.817] | : . readImmediateCondition() ... done
[08:07:17.817] | : . MulticoreFuture #2
[08:07:17.818] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:17.818] | : . ' nx: 2
[08:07:17.818] | : . ' relay: TRUE
[08:07:17.818] | : . ' stdout: TRUE
[08:07:17.818] | : . ' signal: TRUE
[08:07:17.818] | : . ' resignal: FALSE
[08:07:17.818] | : . ' force: TRUE
[08:07:17.818] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.818] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:17.819] | : . ' until=1
[08:07:17.819] | : . ' relaying element #1
[08:07:17.819] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.819] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.819] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:17.819] | : . value(<MulticoreFuture>, ...) ...
[08:07:17.819] | : . value(<MulticoreFuture>, ...) ... done
[08:07:17.819] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:17.820] | : . ' result() for MulticoreFuture ...
[08:07:17.820] | : . ' , readImmediateCondition() ...
[08:07:17.821] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.821] | : . ' , ; Number of RDS files: 0
[08:07:17.821] | : . ' , ; Returned conditions set:
[08:07:17.821] | : . ' , ;  list()
[08:07:17.822] | : . ' , readImmediateCondition() ... done
[08:07:17.822] | : . ' , result() for MulticoreFuture ...
[08:07:17.822] | : . ' , result() for MulticoreFuture ... done
[08:07:17.823] | : . ' , signalConditions() ...
[08:07:17.823] | : . ' , ; include = ‘immediateCondition’
[08:07:17.823] | : . ' , ; exclude = 
[08:07:17.823] | : . ' , ; resignal = FALSE
[08:07:17.823] | : . ' , ; Number of conditions: 6
[08:07:17.823] | : . ' , ;  int 6
[08:07:17.824] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.824] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.825] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.825] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.825] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.825] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.825] | : . ' , ; Drop signaled conditions: 0
[08:07:17.826] | : . ' , signalConditions() ... done
[08:07:17.826] | : . ' result() for MulticoreFuture ... done
[08:07:17.826] | : . ' result() for MulticoreFuture ...
[08:07:17.826] | : . ' result() for MulticoreFuture ... done
[08:07:17.826] | : . ' signalConditions() ...
[08:07:17.826] | : . ' , include = ‘immediateCondition’
[08:07:17.827] | : . ' , exclude = 
[08:07:17.827] | : . ' , resignal = FALSE
[08:07:17.827] | : . ' , Number of conditions: 6
[08:07:17.827] | : . ' ,  int 6
[08:07:17.828] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:17.828] | : . ' , Drop signaled conditions: 0
[08:07:17.829] | : . ' signalConditions() ... done
[08:07:17.829] | : . ' check for misuse ...
[08:07:17.829] | : . ' check for misuse ... done
[08:07:17.829] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:17.829] | : . value: <list>
[08:07:17.829] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:17.829] | : . ' nx: 2
[08:07:17.830] | : . ' relay: TRUE
[08:07:17.830] | : . ' stdout: TRUE
[08:07:17.830] | : . ' signal: TRUE
[08:07:17.830] | : . ' resignal: FALSE
[08:07:17.830] | : . ' force: TRUE
[08:07:17.830] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.830] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.830] | : . ' until=1
[08:07:17.830] | : . ' relaying element #1
[08:07:17.831] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:17.831] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:17.831] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:17.831] | : . resolve() for MulticoreFuture ...
[08:07:17.831] | : . resolve() for MulticoreFuture ... done
[08:07:17.831] | : . length: 1 (resolved future 2)
[08:07:17.831] | : value() for list ... done
[08:07:17.842] | : Number of remaining objects: 1
[08:07:17.842] | : checking value #1:
[08:07:17.842] | : 'obj' is MulticoreFuture
[08:07:17.852] | : readImmediateCondition() ...
[08:07:17.852] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.853] | : . Number of RDS files: 0
[08:07:17.853] | : . Returned conditions set:
[08:07:17.853] | : .  list()
[08:07:17.853] | : readImmediateCondition() ... done
[08:07:17.863] | : Number of remaining objects: 1
[08:07:17.863] | : checking value #1:
[08:07:17.864] | : 'obj' is MulticoreFuture
[08:07:17.874] | : readImmediateCondition() ...
[08:07:17.874] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.874] | : . Number of RDS files: 0
[08:07:17.874] | : . Returned conditions set:
[08:07:17.875] | : .  list()
[08:07:17.875] | : readImmediateCondition() ... done
[08:07:17.885] | : Number of remaining objects: 1
[08:07:17.885] | : checking value #1:
[08:07:17.885] | : 'obj' is MulticoreFuture
[08:07:17.896] | : readImmediateCondition() ...
[08:07:17.896] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.896] | : . Number of RDS files: 0
[08:07:17.896] | : . Returned conditions set:
[08:07:17.896] | : .  list()
[08:07:17.897] | : readImmediateCondition() ... done
[08:07:17.907] | : Number of remaining objects: 1
[08:07:17.907] | : checking value #1:
[08:07:17.907] | : 'obj' is MulticoreFuture
[08:07:17.918] | : readImmediateCondition() ...
[08:07:17.918] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.918] | : . Number of RDS files: 0
[08:07:17.918] | : . Returned conditions set:
[08:07:17.919] | : .  list()
[08:07:17.919] | : readImmediateCondition() ... done
[08:07:17.929] | : Number of remaining objects: 1
[08:07:17.929] | : checking value #1:
[08:07:17.930] | : 'obj' is MulticoreFuture
[08:07:17.940] | : readImmediateCondition() ...
[08:07:17.940] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.940] | : . Number of RDS files: 0
[08:07:17.941] | : . Returned conditions set:
[08:07:17.941] | : .  list()
[08:07:17.941] | : readImmediateCondition() ... done
[08:07:17.951] | : Number of remaining objects: 1
[08:07:17.951] | : checking value #1:
[08:07:17.952] | : 'obj' is MulticoreFuture
[08:07:17.962] | : readImmediateCondition() ...
[08:07:17.962] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.962] | : . Number of RDS files: 0
[08:07:17.963] | : . Returned conditions set:
[08:07:17.963] | : .  list()
[08:07:17.963] | : readImmediateCondition() ... done
[08:07:17.973] | : Number of remaining objects: 1
[08:07:17.974] | : checking value #1:
[08:07:17.974] | : 'obj' is MulticoreFuture
[08:07:17.984] | : readImmediateCondition() ...
[08:07:17.984] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:17.984] | : . Number of RDS files: 0
[08:07:17.985] | : . Returned conditions set:
[08:07:17.985] | : .  list()
[08:07:17.985] | : readImmediateCondition() ... done
[08:07:17.995] | : Number of remaining objects: 1
[08:07:17.996] | : checking value #1:
[08:07:17.996] | : 'obj' is MulticoreFuture
[08:07:18.006] | : readImmediateCondition() ...
[08:07:18.006] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.007] | : . Number of RDS files: 0
[08:07:18.007] | : . Returned conditions set:
[08:07:18.007] | : .  list()
[08:07:18.007] | : readImmediateCondition() ... done
[08:07:18.017] | : Number of remaining objects: 1
[08:07:18.018] | : checking value #1:
[08:07:18.018] | : 'obj' is MulticoreFuture
[08:07:18.028] | : readImmediateCondition() ...
[08:07:18.028] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.028] | : . Number of RDS files: 0
[08:07:18.029] | : . Returned conditions set:
[08:07:18.029] | : .  list()
[08:07:18.029] | : readImmediateCondition() ... done
[08:07:18.039] | : Number of remaining objects: 1
[08:07:18.040] | : checking value #1:
[08:07:18.040] | : 'obj' is MulticoreFuture
[08:07:18.050] | : readImmediateCondition() ...
[08:07:18.050] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.051] | : . Number of RDS files: 0
[08:07:18.051] | : . Returned conditions set:
[08:07:18.051] | : .  list()
[08:07:18.051] | : readImmediateCondition() ... done
[08:07:18.061] | : Number of remaining objects: 1
[08:07:18.062] | : checking value #1:
[08:07:18.062] | : 'obj' is MulticoreFuture
[08:07:18.072] | : readImmediateCondition() ...
[08:07:18.072] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.072] | : . Number of RDS files: 0
[08:07:18.073] | : . Returned conditions set:
[08:07:18.073] | : .  list()
[08:07:18.073] | : readImmediateCondition() ... done
[08:07:18.083] | : Number of remaining objects: 1
[08:07:18.084] | : checking value #1:
[08:07:18.084] | : 'obj' is MulticoreFuture
[08:07:18.094] | : readImmediateCondition() ...
[08:07:18.094] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.094] | : . Number of RDS files: 0
[08:07:18.095] | : . Returned conditions set:
[08:07:18.095] | : .  list()
[08:07:18.095] | : readImmediateCondition() ... done
[08:07:18.105] | : Number of remaining objects: 1
[08:07:18.106] | : checking value #1:
[08:07:18.106] | : 'obj' is MulticoreFuture
[08:07:18.116] | : readImmediateCondition() ...
[08:07:18.116] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.116] | : . Number of RDS files: 0
[08:07:18.117] | : . Returned conditions set:
[08:07:18.117] | : .  list()
[08:07:18.117] | : readImmediateCondition() ... done
[08:07:18.127] | : Number of remaining objects: 1
[08:07:18.128] | : checking value #1:
[08:07:18.128] | : 'obj' is MulticoreFuture
[08:07:18.138] | : readImmediateCondition() ...
[08:07:18.138] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.139] | : . Number of RDS files: 0
[08:07:18.139] | : . Returned conditions set:
[08:07:18.139] | : .  list()
[08:07:18.139] | : readImmediateCondition() ... done
[08:07:18.149] | : Number of remaining objects: 1
[08:07:18.150] | : checking value #1:
[08:07:18.150] | : 'obj' is MulticoreFuture
[08:07:18.160] | : readImmediateCondition() ...
[08:07:18.160] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.161] | : . Number of RDS files: 0
[08:07:18.161] | : . Returned conditions set:
[08:07:18.161] | : .  list()
[08:07:18.161] | : readImmediateCondition() ... done
[08:07:18.171] | : Number of remaining objects: 1
[08:07:18.172] | : checking value #1:
[08:07:18.172] | : 'obj' is MulticoreFuture
[08:07:18.182] | : readImmediateCondition() ...
[08:07:18.182] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.183] | : . Number of RDS files: 0
[08:07:18.183] | : . Returned conditions set:
[08:07:18.183] | : .  list()
[08:07:18.183] | : readImmediateCondition() ... done
[08:07:18.194] | : Number of remaining objects: 1
[08:07:18.194] | : checking value #1:
[08:07:18.194] | : 'obj' is MulticoreFuture
[08:07:18.204] | : readImmediateCondition() ...
[08:07:18.204] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.205] | : . Number of RDS files: 0
[08:07:18.205] | : . Returned conditions set:
[08:07:18.205] | : .  list()
[08:07:18.205] | : readImmediateCondition() ... done
[08:07:18.216] | : Number of remaining objects: 1
[08:07:18.216] | : checking value #1:
[08:07:18.216] | : 'obj' is MulticoreFuture
[08:07:18.226] | : readImmediateCondition() ...
[08:07:18.226] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.227] | : . Number of RDS files: 0
[08:07:18.227] | : . Returned conditions set:
[08:07:18.227] | : .  list()
[08:07:18.227] | : readImmediateCondition() ... done
[08:07:18.238] | : Number of remaining objects: 1
[08:07:18.238] | : checking value #1:
[08:07:18.238] | : 'obj' is MulticoreFuture
[08:07:18.240] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.240] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.241] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.241] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:18.241] | : . ' , ; ` | : . ' New stack:
[08:07:18.241] | : . ' , ; ` | : . ' List of 1
[08:07:18.241] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.241] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.241] | : . ' , ; ` | : . '     ...)  
[08:07:18.241] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.241] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.241] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.241] | : . ' , ; ` | : . '     ...)  
[08:07:18.241] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.241] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.245] | : . ' , ; ` | : . ' Old stack:
[08:07:18.248] | : readImmediateCondition() ...
[08:07:18.249] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.249] | : . Number of RDS files: 0
[08:07:18.245] | : . ' , ; ` | : . ' List of 1
[08:07:18.245] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.245] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.245] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab97eeecb0> 
[08:07:18.245] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.245] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.245] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.249] | : . Returned conditions set:
[08:07:18.249] | : . ' , ; ` | : . ' Not identical
[08:07:18.249] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:18.249] | : .  list()
[08:07:18.250] | : readImmediateCondition() ... done
[08:07:18.249] | : . ' , ; ` | : . ' , List of 2
[08:07:18.249] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.249] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.249] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.249] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.249] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.249] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab97eeecb0> 
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.249] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.256] | : . ' , ; ` | : . ' , Formals differ
[08:07:18.257] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:18.257] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:18.257] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:18.257] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:18.257] | : . ' , ; ` | : . List of future strategies:
[08:07:18.257] | : . ' , ; ` | : . 1. multicore:
[08:07:18.257] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:18.257] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:18.257] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:18.260] | : Number of remaining objects: 1
[08:07:18.260] | : checking value #1:
[08:07:18.260] | : 'obj' is MulticoreFuture
[08:07:18.257] | : . ' , ; ` | : . List of 1
[08:07:18.257] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.257] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.257] | : . ' , ; ` | : .     ...)  
[08:07:18.257] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.257] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.257] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.257] | : . ' , ; ` | : .     ...)  
[08:07:18.257] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.257] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.262] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:18.262] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:18.262] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.262] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.262] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:18.263] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:18.263] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.263] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.263] | : readImmediateCondition() ...
[08:07:18.263] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.264] | : . Number of RDS files: 0
[08:07:18.264] | : . Returned conditions set:
[08:07:18.264] | : .  list()
[08:07:18.264] | : readImmediateCondition() ... done
[08:07:18.264] | : MulticoreFuture #1
[08:07:18.265] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:18.265] | : . nx: 2
[08:07:18.265] | : . relay: TRUE
[08:07:18.265] | : . stdout: TRUE
[08:07:18.265] | : . signal: TRUE
[08:07:18.265] | : . resignal: FALSE
[08:07:18.265] | : . force: TRUE
[08:07:18.265] | : . relayed: [n=2] FALSE, FALSE
[08:07:18.265] | : . queued futures: [n=2] FALSE, TRUE
[08:07:18.266] | : . until=1
[08:07:18.266] | : . relaying element #1
[08:07:18.266] | : . value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:18.266] | : . ' result() for MulticoreFuture ...
[08:07:18.267] | : . ' , readImmediateCondition() ...
[08:07:18.267] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.267] | : . ' , ; Number of RDS files: 0
[08:07:18.267] | : . ' , ; Returned conditions set:
[08:07:18.267] | : . ' , ;  list()
[08:07:18.267] | : . ' , readImmediateCondition() ... done
[08:07:18.268] | : . ' , result() for MulticoreFuture ...
[08:07:18.268] | : . ' , result() for MulticoreFuture ... done
[08:07:18.268] | : . ' , signalConditions() ...
[08:07:18.268] | : . ' , ; include = ‘immediateCondition’
[08:07:18.268] | : . ' , ; exclude = 
[08:07:18.269] | : . ' , ; resignal = FALSE
[08:07:18.269] | : . ' , ; Number of conditions: 6
[08:07:18.269] | : . ' , ;  int 6
[08:07:18.269] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.272] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.272] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.273] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.273] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.273] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.273] | : . ' , ; Drop signaled conditions: 0
[08:07:18.273] | : . ' , signalConditions() ... done
[08:07:18.273] | : . ' result() for MulticoreFuture ... done
[08:07:18.273] | : . ' result() for MulticoreFuture ...
[08:07:18.273] | : . ' result() for MulticoreFuture ... done
[08:07:18.274] | : . ' signalConditions() ...
[08:07:18.274] | : . ' , include = ‘immediateCondition’
[08:07:18.274] | : . ' , exclude = 
[08:07:18.274] | : . ' , resignal = FALSE
[08:07:18.274] | : . ' , Number of conditions: 6
[08:07:18.274] | : . ' ,  int 6
[08:07:18.275] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.275] | : . ' , Drop signaled conditions: 0
[08:07:18.275] | : . ' signalConditions() ... done
[08:07:18.276] | : . ' relay stdout ...
[08:07:18.276] | : . ' relay stdout ... done
[08:07:18.276] | : . ' check for misuse ...
[08:07:18.276] | : . ' check for misuse ... done
[08:07:18.276] | : . value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:18.276] | : . result() for MulticoreFuture ...
[08:07:18.276] | : . result() for MulticoreFuture ... done
[08:07:18.276] | : . signalConditions() ...
[08:07:18.277] | : . ' include = ‘immediateCondition’
[08:07:18.277] | : . ' exclude = 
[08:07:18.277] | : . ' resignal = FALSE
[08:07:18.277] | : . ' Number of conditions: 6
[08:07:18.277] | : . '  int 6
[08:07:18.277] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.278] | : . ' Drop signaled conditions: 0
[08:07:18.278] | : . signalConditions() ... done
[08:07:18.278] | : . result() for MulticoreFuture ...
[08:07:18.279] | : . result() for MulticoreFuture ... done
[08:07:18.279] | : . signalConditions() ...
[08:07:18.279] | : . ' include = ‘condition’
[08:07:18.279] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:18.279] | : . ' resignal = TRUE
[08:07:18.279] | : . ' Number of conditions: 6
[08:07:18.279] | : . '  int 6
[08:07:18.280] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.280] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.687] | : . ' , ; ` attachPackages() ...
[08:07:18.280] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.280] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.687] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:18.280] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.280] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.688] | : . ' , ; ` attachPackages() ... done
[08:07:18.281] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.281] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.688] | : . ' , ; ` attachPackages() ...
[08:07:18.281] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.281] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.688] | : . ' , ; ` | packages: [n=0] 
[08:07:18.281] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.281] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.688] | : . ' , ; ` attachPackages() ... done
[08:07:18.281] | : . ' Drop signaled conditions: 6
[08:07:18.282] | : . signalConditions() ... done
[08:07:18.282] | : . relayed: [n=2] TRUE, FALSE
[08:07:18.282] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.282] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:18.282] | : value(<MulticoreFuture>, ...) ...
[08:07:18.282] | : value(<MulticoreFuture>, ...) ... done
[08:07:18.282] | : value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:18.282] | : . result() for MulticoreFuture ...
[08:07:18.283] | : . result() for MulticoreFuture ... done
[08:07:18.283] | : . result() for MulticoreFuture ...
[08:07:18.283] | : . result() for MulticoreFuture ... done
[08:07:18.283] | : . signalConditions() ...
[08:07:18.283] | : . ' include = ‘immediateCondition’
[08:07:18.283] | : . ' exclude = 
[08:07:18.283] | : . ' resignal = FALSE
[08:07:18.283] | : . ' Number of conditions: 0
[08:07:18.284] | : . '  int 0
[08:07:18.284] | : . signalConditions() ... done
[08:07:18.284] | : . check for misuse ...
[08:07:18.284] | : . check for misuse ... done
[08:07:18.284] | : value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:18.284] | : value: <list>
[08:07:18.285] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:18.285] | : . nx: 2
[08:07:18.285] | : . relay: TRUE
[08:07:18.285] | : . stdout: TRUE
[08:07:18.285] | : . signal: TRUE
[08:07:18.285] | : . resignal: FALSE
[08:07:18.285] | : . force: TRUE
[08:07:18.285] | : . relayed: [n=2] TRUE, FALSE
[08:07:18.285] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.286] | : . until=2
[08:07:18.286] | : . relaying element #2
[08:07:18.286] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:18.286] | : . ' result() for MulticoreFuture ...
[08:07:18.286] | : . ' result() for MulticoreFuture ... done
[08:07:18.286] | : . ' result() for MulticoreFuture ...
[08:07:18.286] | : . ' result() for MulticoreFuture ... done
[08:07:18.286] | : . ' signalConditions() ...
[08:07:18.287] | : . ' , include = ‘immediateCondition’
[08:07:18.287] | : . ' , exclude = 
[08:07:18.287] | : . ' , resignal = FALSE
[08:07:18.287] | : . ' , Number of conditions: 6
[08:07:18.287] | : . ' ,  int 6
[08:07:18.288] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.288] | : . ' , Drop signaled conditions: 0
[08:07:18.288] | : . ' signalConditions() ... done
[08:07:18.289] | : . ' relay stdout ...
[08:07:18.289] | : . ' relay stdout ... done
[08:07:18.289] | : . ' check for misuse ...
[08:07:18.289] | : . ' check for misuse ... done
[08:07:18.289] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:18.289] | : . result() for MulticoreFuture ...
[08:07:18.289] | : . result() for MulticoreFuture ... done
[08:07:18.289] | : . signalConditions() ...
[08:07:18.290] | : . ' include = ‘immediateCondition’
[08:07:18.290] | : . ' exclude = 
[08:07:18.290] | : . ' resignal = FALSE
[08:07:18.290] | : . ' Number of conditions: 6
[08:07:18.290] | : . '  int 6
[08:07:18.291] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.291] | : . ' Drop signaled conditions: 0
[08:07:18.292] | : . signalConditions() ... done
[08:07:18.292] | : . result() for MulticoreFuture ...
[08:07:18.292] | : . result() for MulticoreFuture ... done
[08:07:18.292] | : . signalConditions() ...
[08:07:18.292] | : . ' include = ‘condition’
[08:07:18.292] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:18.292] | : . ' resignal = TRUE
[08:07:18.292] | : . ' Number of conditions: 6
[08:07:18.293] | : . '  int 6
[08:07:18.293] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.293] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.716] | : . ' , ; ` attachPackages() ...
[08:07:18.293] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.293] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.716] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:18.294] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.294] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.717] | : . ' , ; ` attachPackages() ... done
[08:07:18.294] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.294] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.717] | : . ' , ; ` attachPackages() ...
[08:07:18.294] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.294] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.717] | : . ' , ; ` | packages: [n=0] 
[08:07:18.294] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.295] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:17.718] | : . ' , ; ` attachPackages() ... done
[08:07:18.295] | : . ' Drop signaled conditions: 6
[08:07:18.295] | : . signalConditions() ... done
[08:07:18.295] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.295] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.295] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:18.295] | : resolve() for MulticoreFuture ...
[08:07:18.296] | : resolve() for MulticoreFuture ... done
[08:07:18.296] | : length: 0 (resolved future 1)
[08:07:18.296] | future_mapply() -> future_xapply() ... done
[08:07:18.296] | Relaying remaining futures ...
[08:07:18.296] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:18.296] | : . nx: 2
[08:07:18.296] | : . relay: TRUE
[08:07:18.296] | : . stdout: TRUE
[08:07:18.297] | : . signal: TRUE
[08:07:18.297] | : . resignal: FALSE
[08:07:18.297] | : . force: TRUE
[08:07:18.297] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.297] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:18.297] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.297] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.297] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:18.298] | Relaying remaining futures ... done
[08:07:18.298] future_mapply() ... done
[08:07:18.298]  - Number of value chunks collected: 2
[08:07:18.298] Resolving 2 futures (chunks) ... DONE
[08:07:18.298] Reducing values from 2 chunks ...
[08:07:18.298]  - Number of values collected after concatenation: 2
[08:07:18.298]  - Number of values expected: 2
[08:07:18.298] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = FALSE) ... DONE
* future_mapply(x, ..., future.stdout = TRUE) ...
[08:07:18.299] future_mapply() ...
[08:07:18.299] | future_mapply() -> future_xapply() ...
[08:07:18.299] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.300] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.300] | : Number of chunks: 2
[08:07:18.300] | : getGlobalsAndPackagesXApply() ...
[08:07:18.300] | : . future.globals: TRUE
[08:07:18.300] | : . getGlobalsAndPackages() ...
[08:07:18.301] | : . ' Searching for globals ...
[08:07:18.311] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:18.311] | : . ' Searching for globals ... done
[08:07:18.311] | : . ' Resolving globals: FALSE
[08:07:18.311] | : . ' Search for packages associated with the globals ...
[08:07:18.311] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:18.312] | : . ' , Packages: [1] ‘base’
[08:07:18.312] | : . ' Search for packages associated with the globals ... done
[08:07:18.312] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:18.312] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:18.313] | : . ' Packages after dropping 'base': [0] 
[08:07:18.313] | : . ' globals: [1] ‘FUN’
[08:07:18.313] | : . ' packages: [0] 
[08:07:18.313] | : . getGlobalsAndPackages() ... done
[08:07:18.313] | : . globals found/used: [n=1] ‘FUN’
[08:07:18.313] | : . needed namespaces: [n=0] 
[08:07:18.313] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:18.314] | : . List of 2
[08:07:18.314] | : .  $ ...future.FUN:function (x, y)  
[08:07:18.314] | : .  $ MoreArgs     : NULL
[08:07:18.314] | : .  - attr(*, "where")=List of 2
[08:07:18.314] | : .   ..$ ...future.FUN:<environment: 0x55ab93e84970> 
[08:07:18.314] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:18.314] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.314] | : .  - attr(*, "resolved")= logi FALSE
[08:07:18.314] | : .  - attr(*, "total_size")= num NA
[08:07:18.316] | : . Packages to be attached in all futures: [n=0] 
[08:07:18.316] | : getGlobalsAndPackagesXApply() ... done
[08:07:18.317] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.317] | : List of 5
[08:07:18.317] | :  $ ...future.FUN            :function (x, y)  
[08:07:18.317] | :  $ MoreArgs                 : NULL
[08:07:18.317] | :  $ ...future.elements_ii    : NULL
[08:07:18.317] | :  $ ...future.seeds_ii       : NULL
[08:07:18.317] | :  $ ...future.globals.maxSize: NULL
[08:07:18.317] | :  - attr(*, "where")=List of 5
[08:07:18.317] | :   ..$ ...future.FUN            :<environment: 0x55ab93e84970> 
[08:07:18.317] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:18.317] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:18.317] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:18.317] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:18.317] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.317] | :  - attr(*, "resolved")= logi FALSE
[08:07:18.317] | :  - attr(*, "total_size")= num NA
[08:07:18.321] | : Number of futures (= number of chunks): 2
[08:07:18.321] | : Launching 2 futures (chunks) ...
[08:07:18.321] | : Chunk #1 of 2 ...
[08:07:18.321] | :  - Finding globals in '...' for chunk #1 ...
[08:07:18.321] | : getGlobalsAndPackages() ...
[08:07:18.321] | : . Searching for globals ...
[08:07:18.322] | : . ' globals found: [0] 
[08:07:18.322] | : . Searching for globals ... done
[08:07:18.322] | : . globals: [0] <none>
[08:07:18.322] | : . packages: [0] <none>
[08:07:18.322] | : getGlobalsAndPackages() ... done
[08:07:18.322] | :    + additional globals found: [n=0] 
[08:07:18.323] | :    + additional namespaces needed: [n=0] 
[08:07:18.323] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:18.323] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:18.323] | :  - seeds: <none>
[08:07:18.323] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.323] | : future(..., label = ‘future_mapply-1’) ...
[08:07:18.323] | : . lazy: FALSE
[08:07:18.323] | : . stdout: TRUE
[08:07:18.323] | : . conditions: [n=1] ‘condition’
[08:07:18.323] | : . gc: FALSE
[08:07:18.324] | : . earlySignal: FALSE
[08:07:18.324] | : . getGlobalsAndPackages() ...
[08:07:18.324] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.324] | : . ' Resolving globals: FALSE
[08:07:18.324] | : . ' Search for packages associated with the globals ...
[08:07:18.324] | : . ' , Packages associated with globals: [0] 
[08:07:18.325] | : . ' , Packages: [0] 
[08:07:18.325] | : . ' Search for packages associated with the globals ... done
[08:07:18.325] | : . ' Packages after dropping 'base': [0] 
[08:07:18.325] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.325] | : . ' packages: [0] 
[08:07:18.325] | : . getGlobalsAndPackages() ... done
[08:07:18.325] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:18.326] | : . ' state: ‘created’
[08:07:18.326] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.326] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.326] | : . ' Using MulticoreFutureBackend ...
[08:07:18.326] | : . ' , Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:07:18.327] | : . ' , Launching futures ...
[08:07:18.327] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:18.327] | : . ' , ; ` getFutureData() ...
[08:07:18.327] | : . ' , ; ` | getFutureCore() ...
[08:07:18.327] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:18.327] | : . ' , ; ` | getFutureCore() ... done
[08:07:18.327] | : . ' , ; ` | getFutureCapture() ...
[08:07:18.327] | : . ' , ; ` | getFutureCapture() ... done
[08:07:18.328] | : . ' , ; ` | getFutureContext() ...
[08:07:18.328] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.328] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:18.328] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.328] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:18.328] | : . ' , ; ` | getFutureContext() ... done
[08:07:18.328] | : . ' , ; ` getFutureData() ... done
[08:07:18.329] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:18.329] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:18.332] | : . ' , ; ` MulticoreFuture started
[08:07:18.332] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:18.332] | : . ' , Launching futures ... done
[08:07:18.333] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.333] | : . ' Using MulticoreFutureBackend ... done
[08:07:18.333] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:18.333] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:18.334] | : Created future:
[08:07:18.336] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.336] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:18.336] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.336] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.337] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.337] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:18.337] | : . ' , ; ` | : . New stack:
[08:07:18.337] | : . ' , ; ` | : . List of 1
[08:07:18.337] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.337] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.337] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:18.337] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.337] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.337] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.337] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.337] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.342] | : . ' , ; ` | : . Old stack:
[08:07:18.346] | : readImmediateCondition() ...
[08:07:18.346] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.347] | : . Number of RDS files: 0
[08:07:18.347] | : . Returned conditions set:
[08:07:18.342] | : . ' , ; ` | : . List of 1
[08:07:18.342] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.342] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.342] | : . ' , ; ` | : .     ...)  
[08:07:18.342] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.342] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.342] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.342] | : . ' , ; ` | : .     ...)  
[08:07:18.342] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.342] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.347] | : . ' , ; ` | : . Not identical
[08:07:18.347] | : . ' , ; ` | : . all.equal() for future ...
[08:07:18.347] | : .  list()
[08:07:18.348] | : readImmediateCondition() ... done
[08:07:18.334] | : MulticoreFuture:
[08:07:18.334] | : Label: ‘future_mapply-1’
[08:07:18.334] | : Expression:
[08:07:18.334] | : {
[08:07:18.334] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:18.334] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:18.334] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:18.334] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:18.334] | :         on.exit(options(oopts), add = TRUE)
[08:07:18.334] | :     }
[08:07:18.334] | :     {
[08:07:18.334] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:18.334] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:18.334] | :         do.call(mapply, args = args)
[08:07:18.334] | :     }
[08:07:18.334] | : }
[08:07:18.334] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:18.334] | : Packages: <none>
[08:07:18.334] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:18.334] | : Capture standard output: TRUE
[08:07:18.334] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:18.334] | : Immediate condition classes: ‘immediateCondition’
[08:07:18.334] | : Lazy evaluation: FALSE
[08:07:18.334] | : Local evaluation: TRUE
[08:07:18.334] | : Asynchronous evaluation: TRUE
[08:07:18.334] | : Early signaling: FALSE
[08:07:18.334] | : Environment: R_GlobalEnv
[08:07:18.334] | : State: ‘running’
[08:07:18.334] | : Resolved: FALSE
[08:07:18.334] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-15
[08:07:18.334] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:18.334] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.334] | : Value: <not collected>
[08:07:18.334] | : Conditions captured: <none>
[08:07:18.348] | : Chunk #1 of 2 ... DONE
[08:07:18.348] | : Chunk #2 of 2 ...
[08:07:18.349] | :  - Finding globals in '...' for chunk #2 ...
[08:07:18.349] | : getGlobalsAndPackages() ...
[08:07:18.349] | : . Searching for globals ...
[08:07:18.351] | : . ' globals found: [0] 
[08:07:18.351] | : . Searching for globals ... done
[08:07:18.351] | : . globals: [0] <none>
[08:07:18.351] | : . packages: [0] <none>
[08:07:18.351] | : getGlobalsAndPackages() ... done
[08:07:18.352] | :    + additional globals found: [n=0] 
[08:07:18.352] | :    + additional namespaces needed: [n=0] 
[08:07:18.352] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:18.352] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:18.353] | :  - seeds: <none>
[08:07:18.353] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.353] | : future(..., label = ‘future_mapply-2’) ...
[08:07:18.353] | : . lazy: FALSE
[08:07:18.353] | : . stdout: TRUE
[08:07:18.353] | : . conditions: [n=1] ‘condition’
[08:07:18.353] | : . gc: FALSE
[08:07:18.354] | : . earlySignal: FALSE
[08:07:18.354] | : . getGlobalsAndPackages() ...
[08:07:18.354] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.354] | : . ' Resolving globals: FALSE
[08:07:18.354] | : . ' Search for packages associated with the globals ...
[08:07:18.347] | : . ' , ; ` | : . ' List of 2
[08:07:18.347] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.347] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.347] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.347] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.347] | : . ' , ; ` | : . '     ...)  
[08:07:18.347] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.347] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.347] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.347] | : . ' , ; ` | : . '     ...)  
[08:07:18.347] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.354] | : . ' , Packages associated with globals: [0] 
[08:07:18.355] | : . ' , Packages: [0] 
[08:07:18.355] | : . ' , ; ` | : . ' Formals differ
[08:07:18.355] | : . ' Search for packages associated with the globals ... done
[08:07:18.355] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:18.355] | : . ' Packages after dropping 'base': [0] 
[08:07:18.355] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:18.355] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.355] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:18.355] | : . ' packages: [0] 
[08:07:18.355] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:18.356] | : . getGlobalsAndPackages() ... done
[08:07:18.356] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:18.356] | : . ' , ; ` | : List of future strategies:
[08:07:18.356] | : . ' , ; ` | : 1. sequential:
[08:07:18.356] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:18.356] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:18.356] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.356] | : . ' state: ‘created’
[08:07:18.356] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.357] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.357] | : . ' Using MulticoreFutureBackend ...
[08:07:18.357] | : . ' , Number of futures since start: 9 (9 created, 9 launched, 8 finished)
[08:07:18.357] | : . ' , Launching futures ...
[08:07:18.357] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:18.357] | : . ' , ; ` getFutureData() ...
[08:07:18.357] | : . ' , ; ` | getFutureCore() ...
[08:07:18.358] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:18.358] | : . ' , ; ` | getFutureCore() ... done
[08:07:18.358] | : . ' , ; ` | getFutureCapture() ...
[08:07:18.358] | : . ' , ; ` | getFutureCapture() ... done
[08:07:18.358] | : . ' , ; ` | getFutureContext() ...
[08:07:18.358] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.358] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:18.359] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.359] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:18.359] | : . ' , ; ` | getFutureContext() ... done
[08:07:18.359] | : . ' , ; ` getFutureData() ... done
[08:07:18.359] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:18.356] | : . ' , ; ` | : List of 1
[08:07:18.356] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.356] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.356] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:18.356] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.356] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.356] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.356] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.356] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.360] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:18.360] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:18.360] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:18.360] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.360] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:18.362] | : . ' , ; ` MulticoreFuture started
[08:07:18.361] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.361] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.361] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:18.361] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.361] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.361] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.361] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.363] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:18.363] | : . ' , ; ` | : . ' init: TRUE
[08:07:18.363] | : . ' , Launching futures ... done
[08:07:18.364] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:18.364] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:18.364] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.364] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:18.364] | : . ' Using MulticoreFutureBackend ... done
[08:07:18.364] | : . ' , ; ` | : . ' ,  list()
[08:07:18.364] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:18.364] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:18.365] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:18.365] | : . ' , ; ` | : . ' ,  list()
[08:07:18.365] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:18.365] | : Created future:
[08:07:18.365] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:18.365] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:18.365] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:18.367] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:18.367] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:18.367] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:18.367] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.367] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:18.367] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:18.367] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.368] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.368] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:18.368] | : . ' , ; ` assign_globals() ...
[08:07:18.368] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.368] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.369] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.369] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:18.369] | : . ' , ; ` | : . New stack:
[08:07:18.369] | : . ' , ; ` | : . List of 1
[08:07:18.369] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.369] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.369] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:18.369] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.369] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.369] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.369] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.369] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.373] | : . ' , ; ` | : . Old stack:
[08:07:18.378] | : readImmediateCondition() ...
[08:07:18.378] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.374] | : . ' , ; ` | : . List of 1
[08:07:18.374] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.374] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.374] | : . ' , ; ` | : .     ...)  
[08:07:18.374] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.374] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.374] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.374] | : . ' , ; ` | : .     ...)  
[08:07:18.374] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.374] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.379] | : . Number of RDS files: 0
[08:07:18.379] | : . ' , ; ` | : . Not identical
[08:07:18.379] | : . Returned conditions set:
[08:07:18.379] | : . ' , ; ` | : . all.equal() for future ...
[08:07:18.368] | : . ' , ; ` List of 5
[08:07:18.368] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:18.368] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:18.368] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:18.368] | : . ' , ; `   ..$ :List of 1
[08:07:18.368] | : . ' , ; `   .. ..$ : int 1
[08:07:18.368] | : . ' , ; `   ..$ :List of 1
[08:07:18.368] | : . ' , ; `   .. ..$ : int 0
[08:07:18.368] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:18.368] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:18.368] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:18.368] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab93e84970> 
[08:07:18.368] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:18.368] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:18.368] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:18.368] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:18.368] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:18.368] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:18.368] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.368] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:18.379] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:18.379] | : .  list()
[08:07:18.380] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:18.380] | : readImmediateCondition() ... done
[08:07:18.380] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:18.380] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:18.380] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:18.380] | : . ' , ; ` assign_globals() ... done
[08:07:18.365] | : MulticoreFuture:
[08:07:18.365] | : Label: ‘future_mapply-2’
[08:07:18.365] | : Expression:
[08:07:18.365] | : {
[08:07:18.365] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:18.365] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:18.365] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:18.365] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:18.365] | :         on.exit(options(oopts), add = TRUE)
[08:07:18.365] | :     }
[08:07:18.365] | :     {
[08:07:18.365] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:18.365] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:18.365] | :         do.call(mapply, args = args)
[08:07:18.365] | :     }
[08:07:18.365] | : }
[08:07:18.365] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:18.365] | : Packages: <none>
[08:07:18.365] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:18.365] | : Capture standard output: TRUE
[08:07:18.365] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:18.365] | : Immediate condition classes: ‘immediateCondition’
[08:07:18.365] | : Lazy evaluation: FALSE
[08:07:18.365] | : Local evaluation: TRUE
[08:07:18.365] | : Asynchronous evaluation: TRUE
[08:07:18.365] | : Early signaling: FALSE
[08:07:18.365] | : Environment: R_GlobalEnv
[08:07:18.365] | : State: ‘running’
[08:07:18.365] | : Resolved: FALSE
[08:07:18.365] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-16
[08:07:18.365] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:18.365] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.365] | : Value: <not collected>
[08:07:18.365] | : Conditions captured: <none>
[08:07:18.380] | : Chunk #2 of 2 ... DONE
[08:07:18.381] | : Launching 2 futures (chunks) ... DONE
[08:07:18.381] | : Resolving 2 futures (chunks) ...
[08:07:18.381] | : value() for list ...
[08:07:18.381] | : . recursive: 0
[08:07:18.382] | : . reduce: FALSE
[08:07:18.382] | : . length: 2

[08:07:18.382] | : . Number of remaining objects: 2
[08:07:18.382] | : . checking value #1:
[08:07:18.383] | : . 'obj' is MulticoreFuture
[08:07:18.379] | : . ' , ; ` | : . ' List of 2
[08:07:18.379] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.379] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.379] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.379] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.379] | : . ' , ; ` | : . '     ...)  
[08:07:18.379] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.379] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.379] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.379] | : . ' , ; ` | : . '     ...)  
[08:07:18.379] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.388] | : . ' , ; ` | : . ' Formals differ
[08:07:18.388] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:18.388] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:18.389] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:18.389] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:18.389] | : . ' , ; ` | : List of future strategies:
[08:07:18.389] | : . ' , ; ` | : 1. sequential:
[08:07:18.389] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:18.389] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:18.389] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.393] | : . readImmediateCondition() ...
[08:07:18.394] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.394] | : . ' Number of RDS files: 0
[08:07:18.394] | : . ' Returned conditions set:
[08:07:18.394] | : . '  list()
[08:07:18.395] | : . readImmediateCondition() ... done
[08:07:18.395] | : . checking value #2:
[08:07:18.395] | : . 'obj' is MulticoreFuture
[08:07:18.390] | : . ' , ; ` | : List of 1
[08:07:18.390] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.390] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.390] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:18.390] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.390] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.390] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.390] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.390] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.398] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:18.398] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:18.398] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.399] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:18.399] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.399] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.399] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:18.399] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.399] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.399] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.399] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.402] | : . ' , ; ` | : . ' init: TRUE
[08:07:18.402] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:18.402] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:18.402] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:18.402] | : . ' , ; ` | : . ' ,  list()
[08:07:18.403] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:18.403] | : . ' , ; ` | : . ' ,  list()
[08:07:18.403] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:18.403] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:18.403] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:18.403] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:18.405] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:18.405] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:18.405] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:18.405] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.405] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:18.406] | : . readImmediateCondition() ...
[08:07:18.406] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:18.406] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.406] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.406] | : . ' Number of RDS files: 0
[08:07:18.406] | : . ' Returned conditions set:
[08:07:18.406] | : . ' , ; ` assign_globals() ...
[08:07:18.406] | : . '  list()
[08:07:18.407] | : . readImmediateCondition() ... done
[08:07:18.406] | : . ' , ; ` List of 5
[08:07:18.406] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:18.406] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:18.406] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:18.406] | : . ' , ; `   ..$ :List of 1
[08:07:18.406] | : . ' , ; `   .. ..$ : int 0
[08:07:18.406] | : . ' , ; `   ..$ :List of 1
[08:07:18.406] | : . ' , ; `   .. ..$ : int 1
[08:07:18.406] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:18.406] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:18.406] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:18.406] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab93e84970> 
[08:07:18.406] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:18.406] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:18.406] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:18.406] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:18.406] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:18.406] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:18.406] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.406] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:18.415] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:18.415] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:18.415] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:18.415] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:18.415] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:18.415] | : . ' , ; ` assign_globals() ... done
[08:07:18.417] | : . Number of remaining objects: 2
[08:07:18.417] | : . checking value #1:
[08:07:18.418] | : . 'obj' is MulticoreFuture
[08:07:18.419] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.419] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.419] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.420] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:18.420] | : . ' , ; ` | : . ' New stack:
[08:07:18.420] | : . ' , ; ` | : . ' List of 1
[08:07:18.420] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.420] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.420] | : . ' , ; ` | : . '     ...)  
[08:07:18.420] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.420] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.420] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.420] | : . ' , ; ` | : . '     ...)  
[08:07:18.420] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.420] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.425] | : . ' , ; ` | : . ' Old stack:
[08:07:18.428] | : . readImmediateCondition() ...
[08:07:18.428] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.429] | : . ' Number of RDS files: 0
[08:07:18.429] | : . ' Returned conditions set:
[08:07:18.429] | : . '  list()
[08:07:18.430] | : . readImmediateCondition() ... done
[08:07:18.430] | : . checking value #2:
[08:07:18.430] | : . 'obj' is MulticoreFuture
[08:07:18.425] | : . ' , ; ` | : . ' List of 1
[08:07:18.425] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.425] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.425] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96bfe090> 
[08:07:18.425] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.425] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.425] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.431] | : . ' , ; ` | : . ' Not identical
[08:07:18.432] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:18.432] | : . ' , ; ` | : . ' , List of 2
[08:07:18.432] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.432] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.432] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.432] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.432] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.432] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab96bfe090> 
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.432] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.440] | : . readImmediateCondition() ...
[08:07:18.441] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.441] | : . ' , ; ` | : . ' , Formals differ
[08:07:18.441] | : . ' Number of RDS files: 0
[08:07:18.441] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:18.441] | : . ' Returned conditions set:
[08:07:18.441] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:18.441] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:18.441] | : . '  list()
[08:07:18.442] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:18.442] | : . readImmediateCondition() ... done
[08:07:18.442] | : . ' , ; ` | : . List of future strategies:
[08:07:18.442] | : . ' , ; ` | : . 1. multicore:
[08:07:18.442] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:18.442] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:18.442] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:18.442] | : . ' , ; ` | : . List of 1
[08:07:18.442] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.442] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.442] | : . ' , ; ` | : .     ...)  
[08:07:18.442] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.442] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.442] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.442] | : . ' , ; ` | : .     ...)  
[08:07:18.442] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.442] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.447] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:18.448] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:18.448] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.448] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.448] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:18.449] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:18.449] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.449] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.452] | : . Number of remaining objects: 2
[08:07:18.452] | : . checking value #1:
[08:07:18.452] | : . 'obj' is MulticoreFuture
[08:07:18.463] | : . readImmediateCondition() ...
[08:07:18.463] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.463] | : . ' Number of RDS files: 0
[08:07:18.463] | : . ' Returned conditions set:
[08:07:18.463] | : . '  list()
[08:07:18.464] | : . readImmediateCondition() ... done
[08:07:18.464] | : . checking value #2:
[08:07:18.464] | : . 'obj' is MulticoreFuture
[08:07:18.464] | : . readImmediateCondition() ...
[08:07:18.464] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.464] | : . ' Number of RDS files: 0
[08:07:18.465] | : . ' Returned conditions set:
[08:07:18.465] | : . '  list()
[08:07:18.465] | : . readImmediateCondition() ... done
[08:07:18.465] | : . MulticoreFuture #2
[08:07:18.465] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:18.465] | : . ' nx: 2
[08:07:18.466] | : . ' relay: TRUE
[08:07:18.466] | : . ' stdout: TRUE
[08:07:18.466] | : . ' signal: TRUE
[08:07:18.466] | : . ' resignal: FALSE
[08:07:18.466] | : . ' force: TRUE
[08:07:18.466] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:18.466] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:18.466] | : . ' until=1
[08:07:18.466] | : . ' relaying element #1
[08:07:18.467] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:18.467] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:18.467] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:18.467] | : . value(<MulticoreFuture>, ...) ...
[08:07:18.467] | : . value(<MulticoreFuture>, ...) ... done
[08:07:18.467] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:18.467] | : . ' result() for MulticoreFuture ...
[08:07:18.468] | : . ' , readImmediateCondition() ...
[08:07:18.468] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.468] | : . ' , ; Number of RDS files: 0
[08:07:18.469] | : . ' , ; Returned conditions set:
[08:07:18.469] | : . ' , ;  list()
[08:07:18.469] | : . ' , readImmediateCondition() ... done
[08:07:18.470] | : . ' , result() for MulticoreFuture ...
[08:07:18.470] | : . ' , result() for MulticoreFuture ... done
[08:07:18.470] | : . ' , signalConditions() ...
[08:07:18.470] | : . ' , ; include = ‘immediateCondition’
[08:07:18.470] | : . ' , ; exclude = 
[08:07:18.470] | : . ' , ; resignal = FALSE
[08:07:18.470] | : . ' , ; Number of conditions: 6
[08:07:18.470] | : . ' , ;  int 6
[08:07:18.471] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.471] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.471] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.471] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.472] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.472] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.472] | : . ' , ; Drop signaled conditions: 0
[08:07:18.472] | : . ' , signalConditions() ... done
[08:07:18.472] | : . ' result() for MulticoreFuture ... done
[08:07:18.472] | : . ' result() for MulticoreFuture ...
[08:07:18.472] | : . ' result() for MulticoreFuture ... done
[08:07:18.472] | : . ' signalConditions() ...
[08:07:18.473] | : . ' , include = ‘immediateCondition’
[08:07:18.473] | : . ' , exclude = 
[08:07:18.473] | : . ' , resignal = FALSE
[08:07:18.473] | : . ' , Number of conditions: 6
[08:07:18.473] | : . ' ,  int 6
[08:07:18.474] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.474] | : . ' , Drop signaled conditions: 0
[08:07:18.474] | : . ' signalConditions() ... done
[08:07:18.475] | : . ' check for misuse ...
[08:07:18.475] | : . ' check for misuse ... done
[08:07:18.475] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:18.475] | : . value: <list>
[08:07:18.475] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:18.475] | : . ' nx: 2
[08:07:18.475] | : . ' relay: TRUE
[08:07:18.475] | : . ' stdout: TRUE
[08:07:18.476] | : . ' signal: TRUE
[08:07:18.476] | : . ' resignal: FALSE
[08:07:18.476] | : . ' force: TRUE
[08:07:18.478] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:18.478] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:18.479] | : . ' until=1
[08:07:18.479] | : . ' relaying element #1
[08:07:18.479] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:18.479] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:18.479] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:18.479] | : . resolve() for MulticoreFuture ...
[08:07:18.479] | : . resolve() for MulticoreFuture ... done
[08:07:18.479] | : . length: 1 (resolved future 2)
[08:07:18.480] | : value() for list ... done
[08:07:18.490] | : Number of remaining objects: 1
[08:07:18.490] | : checking value #1:
[08:07:18.490] | : 'obj' is MulticoreFuture
[08:07:18.500] | : readImmediateCondition() ...
[08:07:18.500] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.501] | : . Number of RDS files: 0
[08:07:18.501] | : . Returned conditions set:
[08:07:18.501] | : .  list()
[08:07:18.501] | : readImmediateCondition() ... done
[08:07:18.511] | : Number of remaining objects: 1
[08:07:18.512] | : checking value #1:
[08:07:18.512] | : 'obj' is MulticoreFuture
[08:07:18.522] | : readImmediateCondition() ...
[08:07:18.522] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.523] | : . Number of RDS files: 0
[08:07:18.523] | : . Returned conditions set:
[08:07:18.523] | : .  list()
[08:07:18.523] | : readImmediateCondition() ... done
[08:07:18.533] | : Number of remaining objects: 1
[08:07:18.534] | : checking value #1:
[08:07:18.534] | : 'obj' is MulticoreFuture
[08:07:18.544] | : readImmediateCondition() ...
[08:07:18.544] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.544] | : . Number of RDS files: 0
[08:07:18.545] | : . Returned conditions set:
[08:07:18.545] | : .  list()
[08:07:18.545] | : readImmediateCondition() ... done
[08:07:18.555] | : Number of remaining objects: 1
[08:07:18.556] | : checking value #1:
[08:07:18.556] | : 'obj' is MulticoreFuture
[08:07:18.566] | : readImmediateCondition() ...
[08:07:18.566] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.567] | : . Number of RDS files: 0
[08:07:18.567] | : . Returned conditions set:
[08:07:18.567] | : .  list()
[08:07:18.567] | : readImmediateCondition() ... done
[08:07:18.578] | : Number of remaining objects: 1
[08:07:18.578] | : checking value #1:
[08:07:18.578] | : 'obj' is MulticoreFuture
[08:07:18.588] | : readImmediateCondition() ...
[08:07:18.588] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.589] | : . Number of RDS files: 0
[08:07:18.589] | : . Returned conditions set:
[08:07:18.589] | : .  list()
[08:07:18.589] | : readImmediateCondition() ... done
[08:07:18.600] | : Number of remaining objects: 1
[08:07:18.600] | : checking value #1:
[08:07:18.600] | : 'obj' is MulticoreFuture
[08:07:18.610] | : readImmediateCondition() ...
[08:07:18.610] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.611] | : . Number of RDS files: 0
[08:07:18.611] | : . Returned conditions set:
[08:07:18.611] | : .  list()
[08:07:18.611] | : readImmediateCondition() ... done
[08:07:18.622] | : Number of remaining objects: 1
[08:07:18.622] | : checking value #1:
[08:07:18.622] | : 'obj' is MulticoreFuture
[08:07:18.632] | : readImmediateCondition() ...
[08:07:18.633] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.633] | : . Number of RDS files: 0
[08:07:18.633] | : . Returned conditions set:
[08:07:18.633] | : .  list()
[08:07:18.634] | : readImmediateCondition() ... done
[08:07:18.644] | : Number of remaining objects: 1
[08:07:18.644] | : checking value #1:
[08:07:18.644] | : 'obj' is MulticoreFuture
[08:07:18.654] | : readImmediateCondition() ...
[08:07:18.655] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.655] | : . Number of RDS files: 0
[08:07:18.655] | : . Returned conditions set:
[08:07:18.655] | : .  list()
[08:07:18.656] | : readImmediateCondition() ... done
[08:07:18.666] | : Number of remaining objects: 1
[08:07:18.666] | : checking value #1:
[08:07:18.666] | : 'obj' is MulticoreFuture
[08:07:18.677] | : readImmediateCondition() ...
[08:07:18.677] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.677] | : . Number of RDS files: 0
[08:07:18.677] | : . Returned conditions set:
[08:07:18.677] | : .  list()
[08:07:18.678] | : readImmediateCondition() ... done
[08:07:18.688] | : Number of remaining objects: 1
[08:07:18.688] | : checking value #1:
[08:07:18.688] | : 'obj' is MulticoreFuture
[08:07:18.699] | : readImmediateCondition() ...
[08:07:18.699] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.699] | : . Number of RDS files: 0
[08:07:18.699] | : . Returned conditions set:
[08:07:18.700] | : .  list()
[08:07:18.700] | : readImmediateCondition() ... done
[08:07:18.710] | : Number of remaining objects: 1
[08:07:18.711] | : checking value #1:
[08:07:18.711] | : 'obj' is MulticoreFuture
[08:07:18.721] | : readImmediateCondition() ...
[08:07:18.721] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.722] | : . Number of RDS files: 0
[08:07:18.722] | : . Returned conditions set:
[08:07:18.722] | : .  list()
[08:07:18.722] | : readImmediateCondition() ... done
[08:07:18.733] | : Number of remaining objects: 1
[08:07:18.733] | : checking value #1:
[08:07:18.733] | : 'obj' is MulticoreFuture
[08:07:18.743] | : readImmediateCondition() ...
[08:07:18.743] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.744] | : . Number of RDS files: 0
[08:07:18.744] | : . Returned conditions set:
[08:07:18.744] | : .  list()
[08:07:18.745] | : readImmediateCondition() ... done
[08:07:18.755] | : Number of remaining objects: 1
[08:07:18.755] | : checking value #1:
[08:07:18.755] | : 'obj' is MulticoreFuture
[08:07:18.766] | : readImmediateCondition() ...
[08:07:18.766] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.766] | : . Number of RDS files: 0
[08:07:18.766] | : . Returned conditions set:
[08:07:18.766] | : .  list()
[08:07:18.767] | : readImmediateCondition() ... done
[08:07:18.777] | : Number of remaining objects: 1
[08:07:18.777] | : checking value #1:
[08:07:18.778] | : 'obj' is MulticoreFuture
[08:07:18.788] | : readImmediateCondition() ...
[08:07:18.788] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.789] | : . Number of RDS files: 0
[08:07:18.789] | : . Returned conditions set:
[08:07:18.789] | : .  list()
[08:07:18.790] | : readImmediateCondition() ... done
[08:07:18.800] | : Number of remaining objects: 1
[08:07:18.800] | : checking value #1:
[08:07:18.800] | : 'obj' is MulticoreFuture
[08:07:18.811] | : readImmediateCondition() ...
[08:07:18.811] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.811] | : . Number of RDS files: 0
[08:07:18.811] | : . Returned conditions set:
[08:07:18.811] | : .  list()
[08:07:18.812] | : readImmediateCondition() ... done
[08:07:18.822] | : Number of remaining objects: 1
[08:07:18.822] | : checking value #1:
[08:07:18.822] | : 'obj' is MulticoreFuture
[08:07:18.833] | : readImmediateCondition() ...
[08:07:18.833] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.833] | : . Number of RDS files: 0
[08:07:18.833] | : . Returned conditions set:
[08:07:18.833] | : .  list()
[08:07:18.834] | : readImmediateCondition() ... done
[08:07:18.844] | : Number of remaining objects: 1
[08:07:18.844] | : checking value #1:
[08:07:18.845] | : 'obj' is MulticoreFuture
[08:07:18.855] | : readImmediateCondition() ...
[08:07:18.855] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.855] | : . Number of RDS files: 0
[08:07:18.855] | : . Returned conditions set:
[08:07:18.856] | : .  list()
[08:07:18.856] | : readImmediateCondition() ... done
[08:07:18.866] | : Number of remaining objects: 1
[08:07:18.867] | : checking value #1:
[08:07:18.867] | : 'obj' is MulticoreFuture
[08:07:18.877] | : readImmediateCondition() ...
[08:07:18.877] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.878] | : . Number of RDS files: 0
[08:07:18.878] | : . Returned conditions set:
[08:07:18.878] | : .  list()
[08:07:18.879] | : readImmediateCondition() ... done
[08:07:18.884] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.884] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.884] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.884] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:18.885] | : . ' , ; ` | : . ' New stack:
[08:07:18.885] | : . ' , ; ` | : . ' List of 1
[08:07:18.885] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.885] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.885] | : . ' , ; ` | : . '     ...)  
[08:07:18.885] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.885] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.885] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.885] | : . ' , ; ` | : . '     ...)  
[08:07:18.885] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.885] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.889] | : . ' , ; ` | : . ' Old stack:
[08:07:18.889] | : Number of remaining objects: 1
[08:07:18.889] | : checking value #1:
[08:07:18.889] | : 'obj' is MulticoreFuture
[08:07:18.889] | : . ' , ; ` | : . ' List of 1
[08:07:18.889] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.889] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.889] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab98b613f0> 
[08:07:18.889] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.889] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.889] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.893] | : . ' , ; ` | : . ' Not identical
[08:07:18.893] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:18.900] | : readImmediateCondition() ...
[08:07:18.893] | : . ' , ; ` | : . ' , List of 2
[08:07:18.893] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.893] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.893] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.893] | : . ' , ; ` | : . ' ,     ...)  
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.893] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.893] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab98b613f0> 
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.893] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.900] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.900] | : . Number of RDS files: 0
[08:07:18.900] | : . Returned conditions set:
[08:07:18.901] | : . ' , ; ` | : . ' , Formals differ
[08:07:18.901] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:18.901] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:18.901] | : .  list()
[08:07:18.901] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:18.901] | : readImmediateCondition() ... done
[08:07:18.901] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:18.901] | : . ' , ; ` | : . List of future strategies:
[08:07:18.901] | : . ' , ; ` | : . 1. multicore:
[08:07:18.901] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:18.901] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:18.901] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:18.902] | : . ' , ; ` | : . List of 1
[08:07:18.902] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.902] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.902] | : . ' , ; ` | : .     ...)  
[08:07:18.902] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.902] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.902] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.902] | : . ' , ; ` | : .     ...)  
[08:07:18.902] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.902] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.907] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:18.907] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:18.907] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.907] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.908] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:18.908] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:18.908] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.908] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:18.911] | : Number of remaining objects: 1
[08:07:18.912] | : checking value #1:
[08:07:18.912] | : 'obj' is MulticoreFuture
[08:07:18.912] | : readImmediateCondition() ...
[08:07:18.912] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.912] | : . Number of RDS files: 0
[08:07:18.913] | : . Returned conditions set:
[08:07:18.913] | : .  list()
[08:07:18.913] | : readImmediateCondition() ... done
[08:07:18.913] | : MulticoreFuture #1
[08:07:18.913] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:18.913] | : . nx: 2
[08:07:18.914] | : . relay: TRUE
[08:07:18.914] | : . stdout: TRUE
[08:07:18.914] | : . signal: TRUE
[08:07:18.914] | : . resignal: FALSE
[08:07:18.914] | : . force: TRUE
[08:07:18.914] | : . relayed: [n=2] FALSE, FALSE
[08:07:18.914] | : . queued futures: [n=2] FALSE, TRUE
[08:07:18.914] | : . until=1
[08:07:18.914] | : . relaying element #1
[08:07:18.915] | : . value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:18.915] | : . ' result() for MulticoreFuture ...
[08:07:18.915] | : . ' , readImmediateCondition() ...
[08:07:18.915] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.916] | : . ' , ; Number of RDS files: 0
[08:07:18.916] | : . ' , ; Returned conditions set:
[08:07:18.916] | : . ' , ;  list()
[08:07:18.916] | : . ' , readImmediateCondition() ... done
[08:07:18.917] | : . ' , result() for MulticoreFuture ...
[08:07:18.917] | : . ' , result() for MulticoreFuture ... done
[08:07:18.917] | : . ' , signalConditions() ...
[08:07:18.917] | : . ' , ; include = ‘immediateCondition’
[08:07:18.917] | : . ' , ; exclude = 
[08:07:18.917] | : . ' , ; resignal = FALSE
[08:07:18.918] | : . ' , ; Number of conditions: 6
[08:07:18.918] | : . ' , ;  int 6
[08:07:18.918] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.918] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.919] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.919] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.919] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.919] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.919] | : . ' , ; Drop signaled conditions: 0
[08:07:18.919] | : . ' , signalConditions() ... done
[08:07:18.919] | : . ' result() for MulticoreFuture ... done
[08:07:18.920] | : . ' result() for MulticoreFuture ...
[08:07:18.920] | : . ' result() for MulticoreFuture ... done
[08:07:18.920] | : . ' signalConditions() ...
[08:07:18.920] | : . ' , include = ‘immediateCondition’
[08:07:18.920] | : . ' , exclude = 
[08:07:18.920] | : . ' , resignal = FALSE
[08:07:18.920] | : . ' , Number of conditions: 6
[08:07:18.920] | : . ' ,  int 6
[08:07:18.921] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.921] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.921] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.921] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.922] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.922] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.922] | : . ' , Drop signaled conditions: 0
[08:07:18.922] | : . ' signalConditions() ... done
[08:07:18.922] | : . ' relay stdout ...
[08:07:18.922] | : . ' relay stdout ... done
[08:07:18.922] | : . ' check for misuse ...
[08:07:18.923] | : . ' check for misuse ... done
[08:07:18.923] | : . value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:18.923] | : . result() for MulticoreFuture ...
[08:07:18.923] | : . result() for MulticoreFuture ... done
[08:07:18.923] | : . signalConditions() ...
[08:07:18.923] | : . ' include = ‘immediateCondition’
[08:07:18.923] | : . ' exclude = 
[08:07:18.923] | : . ' resignal = FALSE
[08:07:18.924] | : . ' Number of conditions: 6
[08:07:18.924] | : . '  int 6
[08:07:18.924] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.924] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.924] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.925] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.925] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.925] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.925] | : . ' Drop signaled conditions: 0
[08:07:18.925] | : . signalConditions() ... done
[08:07:18.925] | : . result() for MulticoreFuture ...
[08:07:18.925] | : . result() for MulticoreFuture ... done
[08:07:18.925] | : . signalConditions() ...
[08:07:18.925] | : . ' include = ‘condition’
[08:07:18.926] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:18.926] | : . ' resignal = TRUE
[08:07:18.926] | : . ' Number of conditions: 6
[08:07:18.926] | : . '  int 6
[08:07:18.926] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.927] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.333] | : . ' , ; ` attachPackages() ...
[08:07:18.927] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.927] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.333] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:18.927] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.927] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.334] | : . ' , ; ` attachPackages() ... done
[08:07:18.927] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.927] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.334] | : . ' , ; ` attachPackages() ...
[08:07:18.928] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.928] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.334] | : . ' , ; ` | packages: [n=0] 
[08:07:18.928] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.928] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.334] | : . ' , ; ` attachPackages() ... done
[08:07:18.928] | : . ' Drop signaled conditions: 6
[08:07:18.928] | : . signalConditions() ... done
[08:07:18.928] | : . relayed: [n=2] TRUE, FALSE
[08:07:18.928] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.929] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:18.929] | : value(<MulticoreFuture>, ...) ...
[08:07:18.929] | : value(<MulticoreFuture>, ...) ... done
[08:07:18.929] | : value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:18.929] | : . result() for MulticoreFuture ...
[08:07:18.929] | : . result() for MulticoreFuture ... done
[08:07:18.929] | : . result() for MulticoreFuture ...
[08:07:18.929] | : . result() for MulticoreFuture ... done
[08:07:18.930] | : . signalConditions() ...
[08:07:18.930] | : . ' include = ‘immediateCondition’
[08:07:18.930] | : . ' exclude = 
[08:07:18.930] | : . ' resignal = FALSE
[08:07:18.930] | : . ' Number of conditions: 0
[08:07:18.930] | : . '  int 0
[08:07:18.931] | : . signalConditions() ... done
[08:07:18.931] | : . check for misuse ...
[08:07:18.931] | : . check for misuse ... done
[08:07:18.931] | : value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:18.931] | : value: <list>
[08:07:18.931] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:18.931] | : . nx: 2
[08:07:18.931] | : . relay: TRUE
[08:07:18.932] | : . stdout: TRUE
[08:07:18.932] | : . signal: TRUE
[08:07:18.932] | : . resignal: FALSE
[08:07:18.932] | : . force: TRUE
[08:07:18.932] | : . relayed: [n=2] TRUE, FALSE
[08:07:18.932] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.932] | : . until=2
[08:07:18.932] | : . relaying element #2
[08:07:18.932] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:18.933] | : . ' result() for MulticoreFuture ...
[08:07:18.933] | : . ' result() for MulticoreFuture ... done
[08:07:18.933] | : . ' result() for MulticoreFuture ...
[08:07:18.933] | : . ' result() for MulticoreFuture ... done
[08:07:18.933] | : . ' signalConditions() ...
[08:07:18.933] | : . ' , include = ‘immediateCondition’
[08:07:18.933] | : . ' , exclude = 
[08:07:18.933] | : . ' , resignal = FALSE
[08:07:18.933] | : . ' , Number of conditions: 6
[08:07:18.934] | : . ' ,  int 6
[08:07:18.934] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.934] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.934] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.934] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.935] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.935] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.935] | : . ' , Drop signaled conditions: 0
[08:07:18.935] | : . ' signalConditions() ... done
[08:07:18.935] | : . ' relay stdout ...
[08:07:18.935] | : . ' relay stdout ... done
[08:07:18.935] | : . ' check for misuse ...
[08:07:18.935] | : . ' check for misuse ... done
[08:07:18.936] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:18.936] | : . result() for MulticoreFuture ...
[08:07:18.936] | : . result() for MulticoreFuture ... done
[08:07:18.936] | : . signalConditions() ...
[08:07:18.936] | : . ' include = ‘immediateCondition’
[08:07:18.936] | : . ' exclude = 
[08:07:18.936] | : . ' resignal = FALSE
[08:07:18.936] | : . ' Number of conditions: 6
[08:07:18.936] | : . '  int 6
[08:07:18.937] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.937] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.937] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.937] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.937] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.938] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.938] | : . ' Drop signaled conditions: 0
[08:07:18.938] | : . signalConditions() ... done
[08:07:18.938] | : . result() for MulticoreFuture ...
[08:07:18.938] | : . result() for MulticoreFuture ... done
[08:07:18.938] | : . signalConditions() ...
[08:07:18.938] | : . ' include = ‘condition’
[08:07:18.938] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:18.938] | : . ' resignal = TRUE
[08:07:18.939] | : . ' Number of conditions: 6
[08:07:18.939] | : . '  int 6
[08:07:18.939] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.939] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.364] | : . ' , ; ` attachPackages() ...
[08:07:18.939] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.940] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.364] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:18.940] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.940] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.365] | : . ' , ; ` attachPackages() ... done
[08:07:18.940] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.940] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.365] | : . ' , ; ` attachPackages() ...
[08:07:18.940] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.940] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.366] | : . ' , ; ` | packages: [n=0] 
[08:07:18.940] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:18.941] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.366] | : . ' , ; ` attachPackages() ... done
[08:07:18.941] | : . ' Drop signaled conditions: 6
[08:07:18.941] | : . signalConditions() ... done
[08:07:18.941] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.941] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.941] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:18.941] | : resolve() for MulticoreFuture ...
[08:07:18.941] | : resolve() for MulticoreFuture ... done
[08:07:18.942] | : length: 0 (resolved future 1)
[08:07:18.942] | future_mapply() -> future_xapply() ... done
[08:07:18.942] | Relaying remaining futures ...
[08:07:18.942] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:18.942] | : . nx: 2
[08:07:18.942] | : . relay: TRUE
[08:07:18.942] | : . stdout: TRUE
[08:07:18.942] | : . signal: TRUE
[08:07:18.942] | : . resignal: FALSE
[08:07:18.943] | : . force: TRUE
[08:07:18.943] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.943] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:18.943] | : . relayed: [n=2] TRUE, TRUE
[08:07:18.943] | : . queued futures: [n=2] TRUE, TRUE
[08:07:18.943] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:18.943] | Relaying remaining futures ... done
[08:07:18.943] future_mapply() ... done
[08:07:18.944]  - Number of value chunks collected: 2
[08:07:18.944] Resolving 2 futures (chunks) ... DONE
[08:07:18.944] Reducing values from 2 chunks ...
[08:07:18.944]  - Number of values collected after concatenation: 2
[08:07:18.944]  - Number of values expected: 2
[08:07:18.944] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = TRUE) ... DONE
* future_mapply(x, ..., future.stdout = NA) ...
[08:07:18.945] future_mapply() ...
[08:07:18.945] | future_mapply() -> future_xapply() ...
[08:07:18.945] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.945] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.946] | : Number of chunks: 2
[08:07:18.946] | : getGlobalsAndPackagesXApply() ...
[08:07:18.946] | : . future.globals: TRUE
[08:07:18.946] | : . getGlobalsAndPackages() ...
[08:07:18.946] | : . ' Searching for globals ...
[08:07:18.958] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:18.958] | : . ' Searching for globals ... done
[08:07:18.958] | : . ' Resolving globals: FALSE
[08:07:18.958] | : . ' Search for packages associated with the globals ...
[08:07:18.959] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:18.959] | : . ' , Packages: [1] ‘base’
[08:07:18.959] | : . ' Search for packages associated with the globals ... done
[08:07:18.959] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:18.960] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:18.960] | : . ' Packages after dropping 'base': [0] 
[08:07:18.960] | : . ' globals: [1] ‘FUN’
[08:07:18.960] | : . ' packages: [0] 
[08:07:18.960] | : . getGlobalsAndPackages() ... done
[08:07:18.960] | : . globals found/used: [n=1] ‘FUN’
[08:07:18.960] | : . needed namespaces: [n=0] 
[08:07:18.961] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:18.961] | : . List of 2
[08:07:18.961] | : .  $ ...future.FUN:function (x, y)  
[08:07:18.961] | : .  $ MoreArgs     : NULL
[08:07:18.961] | : .  - attr(*, "where")=List of 2
[08:07:18.961] | : .   ..$ ...future.FUN:<environment: 0x55ab98014200> 
[08:07:18.961] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:18.961] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.961] | : .  - attr(*, "resolved")= logi FALSE
[08:07:18.961] | : .  - attr(*, "total_size")= num NA
[08:07:18.963] | : . Packages to be attached in all futures: [n=0] 
[08:07:18.964] | : getGlobalsAndPackagesXApply() ... done
[08:07:18.964] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.964] | : List of 5
[08:07:18.964] | :  $ ...future.FUN            :function (x, y)  
[08:07:18.964] | :  $ MoreArgs                 : NULL
[08:07:18.964] | :  $ ...future.elements_ii    : NULL
[08:07:18.964] | :  $ ...future.seeds_ii       : NULL
[08:07:18.964] | :  $ ...future.globals.maxSize: NULL
[08:07:18.964] | :  - attr(*, "where")=List of 5
[08:07:18.964] | :   ..$ ...future.FUN            :<environment: 0x55ab98014200> 
[08:07:18.964] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:18.964] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:18.964] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:18.964] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:18.964] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:18.964] | :  - attr(*, "resolved")= logi FALSE
[08:07:18.964] | :  - attr(*, "total_size")= num NA
[08:07:18.968] | : Number of futures (= number of chunks): 2
[08:07:18.968] | : Launching 2 futures (chunks) ...
[08:07:18.968] | : Chunk #1 of 2 ...
[08:07:18.968] | :  - Finding globals in '...' for chunk #1 ...
[08:07:18.968] | : getGlobalsAndPackages() ...
[08:07:18.968] | : . Searching for globals ...
[08:07:18.969] | : . ' globals found: [0] 
[08:07:18.969] | : . Searching for globals ... done
[08:07:18.969] | : . globals: [0] <none>
[08:07:18.969] | : . packages: [0] <none>
[08:07:18.969] | : getGlobalsAndPackages() ... done
[08:07:18.969] | :    + additional globals found: [n=0] 
[08:07:18.969] | :    + additional namespaces needed: [n=0] 
[08:07:18.970] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:18.970] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:18.970] | :  - seeds: <none>
[08:07:18.970] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.970] | : future(..., label = ‘future_mapply-1’) ...
[08:07:18.970] | : . lazy: FALSE
[08:07:18.970] | : . stdout: NA
[08:07:18.970] | : . conditions: [n=1] ‘condition’
[08:07:18.970] | : . gc: FALSE
[08:07:18.970] | : . earlySignal: FALSE
[08:07:18.971] | : . getGlobalsAndPackages() ...
[08:07:18.971] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.971] | : . ' Resolving globals: FALSE
[08:07:18.971] | : . ' Search for packages associated with the globals ...
[08:07:18.971] | : . ' , Packages associated with globals: [0] 
[08:07:18.971] | : . ' , Packages: [0] 
[08:07:18.971] | : . ' Search for packages associated with the globals ... done
[08:07:18.972] | : . ' Packages after dropping 'base': [0] 
[08:07:18.972] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.972] | : . ' packages: [0] 
[08:07:18.972] | : . getGlobalsAndPackages() ... done
[08:07:18.972] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:18.972] | : . ' state: ‘created’
[08:07:18.972] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.973] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.973] | : . ' Using MulticoreFutureBackend ...
[08:07:18.973] | : . ' , Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:07:18.973] | : . ' , Launching futures ...
[08:07:18.973] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:18.973] | : . ' , ; ` getFutureData() ...
[08:07:18.973] | : . ' , ; ` | getFutureCore() ...
[08:07:18.973] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:18.973] | : . ' , ; ` | getFutureCore() ... done
[08:07:18.974] | : . ' , ; ` | getFutureCapture() ...
[08:07:18.974] | : . ' , ; ` | getFutureCapture() ... done
[08:07:18.974] | : . ' , ; ` | getFutureContext() ...
[08:07:18.974] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.974] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:18.974] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.974] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:18.974] | : . ' , ; ` | getFutureContext() ... done
[08:07:18.975] | : . ' , ; ` getFutureData() ... done
[08:07:18.976] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:18.977] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:18.979] | : . ' , ; ` MulticoreFuture started
[08:07:18.980] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:18.980] | : . ' , Launching futures ... done
[08:07:18.980] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.980] | : . ' Using MulticoreFutureBackend ... done
[08:07:18.981] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:18.981] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:18.981] | : Created future:
[08:07:18.982] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:18.983] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:18.983] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:18.983] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:18.984] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:18.984] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:18.984] | : . ' , ; ` | : . New stack:
[08:07:18.984] | : . ' , ; ` | : . List of 1
[08:07:18.984] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.984] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.984] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:18.984] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.984] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.984] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.984] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.984] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.988] | : . ' , ; ` | : . Old stack:
[08:07:18.993] | : readImmediateCondition() ...
[08:07:18.993] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:18.989] | : . ' , ; ` | : . List of 1
[08:07:18.989] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.989] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.989] | : . ' , ; ` | : .     ...)  
[08:07:18.989] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:18.989] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.989] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.989] | : . ' , ; ` | : .     ...)  
[08:07:18.989] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.989] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:18.994] | : . Number of RDS files: 0
[08:07:18.994] | : . Returned conditions set:
[08:07:18.994] | : . ' , ; ` | : . Not identical
[08:07:18.994] | : . ' , ; ` | : . all.equal() for future ...
[08:07:18.994] | : .  list()
[08:07:18.994] | : readImmediateCondition() ... done
[08:07:18.981] | : MulticoreFuture:
[08:07:18.981] | : Label: ‘future_mapply-1’
[08:07:18.981] | : Expression:
[08:07:18.981] | : {
[08:07:18.981] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:18.981] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:18.981] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:18.981] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:18.981] | :         on.exit(options(oopts), add = TRUE)
[08:07:18.981] | :     }
[08:07:18.981] | :     {
[08:07:18.981] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:18.981] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:18.981] | :         do.call(mapply, args = args)
[08:07:18.981] | :     }
[08:07:18.981] | : }
[08:07:18.981] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:18.981] | : Packages: <none>
[08:07:18.981] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:18.981] | : Capture standard output: NA
[08:07:18.981] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:18.981] | : Immediate condition classes: ‘immediateCondition’
[08:07:18.981] | : Lazy evaluation: FALSE
[08:07:18.981] | : Local evaluation: TRUE
[08:07:18.981] | : Asynchronous evaluation: TRUE
[08:07:18.981] | : Early signaling: FALSE
[08:07:18.981] | : Environment: R_GlobalEnv
[08:07:18.981] | : State: ‘running’
[08:07:18.981] | : Resolved: FALSE
[08:07:18.981] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-17
[08:07:18.981] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:18.981] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:18.981] | : Value: <not collected>
[08:07:18.981] | : Conditions captured: <none>
[08:07:18.995] | : Chunk #1 of 2 ... DONE
[08:07:18.995] | : Chunk #2 of 2 ...
[08:07:18.995] | :  - Finding globals in '...' for chunk #2 ...
[08:07:18.995] | : getGlobalsAndPackages() ...
[08:07:18.995] | : . Searching for globals ...
[08:07:18.996] | : . ' globals found: [0] 
[08:07:18.996] | : . Searching for globals ... done
[08:07:18.996] | : . globals: [0] <none>
[08:07:18.997] | : . packages: [0] <none>
[08:07:18.997] | : getGlobalsAndPackages() ... done
[08:07:18.997] | :    + additional globals found: [n=0] 
[08:07:18.997] | :    + additional namespaces needed: [n=0] 
[08:07:18.997] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:18.997] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:18.997] | :  - seeds: <none>
[08:07:18.997] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.998] | : future(..., label = ‘future_mapply-2’) ...
[08:07:18.998] | : . lazy: FALSE
[08:07:18.998] | : . stdout: NA
[08:07:18.998] | : . conditions: [n=1] ‘condition’
[08:07:18.998] | : . gc: FALSE
[08:07:18.998] | : . earlySignal: FALSE
[08:07:18.998] | : . getGlobalsAndPackages() ...
[08:07:18.998] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:18.999] | : . ' Resolving globals: FALSE
[08:07:18.999] | : . ' Search for packages associated with the globals ...
[08:07:18.999] | : . ' , Packages associated with globals: [0] 
[08:07:18.999] | : . ' , Packages: [0] 
[08:07:19.000] | : . ' Search for packages associated with the globals ... done
[08:07:19.000] | : . ' Packages after dropping 'base': [0] 
[08:07:19.000] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:19.000] | : . ' packages: [0] 
[08:07:19.000] | : . getGlobalsAndPackages() ... done
[08:07:19.001] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:19.001] | : . ' state: ‘created’
[08:07:19.001] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.001] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.001] | : . ' Using MulticoreFutureBackend ...
[08:07:19.001] | : . ' , Number of futures since start: 11 (11 created, 11 launched, 10 finished)
[08:07:18.994] | : . ' , ; ` | : . ' List of 2
[08:07:18.994] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:18.994] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:18.994] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:18.994] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.994] | : . ' , ; ` | : . '     ...)  
[08:07:18.994] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:18.994] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:18.994] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:18.994] | : . ' , ; ` | : . '     ...)  
[08:07:18.994] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.002] | : . ' , Launching futures ...
[08:07:19.002] | : . ' , ; launchFuture() for MulticoreFutureBackend ...
[08:07:19.002] | : . ' , ; ` getFutureData() ...
[08:07:19.002] | : . ' , ; ` | getFutureCore() ...
[08:07:19.002] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:19.002] | : . ' , ; ` | getFutureCore() ... done
[08:07:19.002] | : . ' , ; ` | : . ' Formals differ
[08:07:19.002] | : . ' , ; ` | getFutureCapture() ...
[08:07:19.002] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:19.003] | : . ' , ; ` | getFutureCapture() ... done
[08:07:19.003] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:19.003] | : . ' , ; ` | getFutureContext() ...
[08:07:19.003] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:19.003] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.003] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:19.003] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:19.003] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.003] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:19.003] | : . ' , ; ` | getFutureContext() ... done
[08:07:19.004] | : . ' , ; ` getFutureData() ... done
[08:07:19.003] | : . ' , ; ` | : List of future strategies:
[08:07:19.003] | : . ' , ; ` | : 1. sequential:
[08:07:19.003] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:19.003] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:19.003] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.004] | : . ' , ; ` requestCore(..., workers = 2) ...
[08:07:19.004] | : . ' , ; ` requestCore(..., workers = 2) ... done
[08:07:19.007] | : . ' , ; ` MulticoreFuture started
[08:07:19.008] | : . ' , ; launchFuture() for MulticoreFutureBackend ... done
[08:07:19.004] | : . ' , ; ` | : List of 1
[08:07:19.004] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.004] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.004] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:19.004] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.004] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.004] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.004] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.004] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.008] | : . ' , Launching futures ... done
[08:07:19.008] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:19.008] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:19.008] | : . ' , Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:19.008] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.009] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:19.009] | : . ' Using MulticoreFutureBackend ... done
[08:07:19.009] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:19.009] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:19.009] | : Created future:
[08:07:19.011] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.012] | : . ' , ; ` | Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:19.009] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.009] | [08:07:19.012] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
: . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.009] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:19.009] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.009] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.009] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.009] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.012] | : . ' , ; ` | : . ' init: TRUE
[08:07:19.013] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:19.013] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:19.013] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:19.013] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:19.013] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:19.013] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:19.013] | : . ' , ; ` | : . New stack:
[08:07:19.013] | : . ' , ; ` | : . ' ,  list()
[08:07:19.014] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:19.014] | : . ' , ; ` | : . ' ,  list()
[08:07:19.014] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:19.014] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:19.014] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:19.014] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:19.016] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:19.016] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:19.017] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:19.017] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.017] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:19.017] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:19.017] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.018] | : . ' , ; ` assign_globals() ...
[08:07:19.013] | : . ' , ; ` | : . List of 1
[08:07:19.013] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.013] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.013] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:19.013] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.013] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.013] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.013] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.013] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.018] | : . ' , ; ` | : . Old stack:
[08:07:19.022] | : readImmediateCondition() ...
[08:07:19.023] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.023] | : . Number of RDS files: 0
[08:07:19.023] | : . Returned conditions set:
[08:07:19.023] | : .  list()
[08:07:19.024] | : readImmediateCondition() ... done
[08:07:19.010] | : MulticoreFuture:
[08:07:19.010] | : Label: ‘future_mapply-2’
[08:07:19.010] | : Expression:
[08:07:19.010] | : {
[08:07:19.010] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:19.010] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:19.010] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:19.010] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:19.010] | :         on.exit(options(oopts), add = TRUE)
[08:07:19.010] | :     }
[08:07:19.010] | :     {
[08:07:19.010] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:19.010] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:19.010] | :         do.call(mapply, args = args)
[08:07:19.010] | :     }
[08:07:19.010] | : }
[08:07:19.010] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:19.010] | : Packages: <none>
[08:07:19.010] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:19.010] | : Capture standard output: NA
[08:07:19.010] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:19.010] | : Immediate condition classes: ‘immediateCondition’
[08:07:19.010] | : Lazy evaluation: FALSE
[08:07:19.010] | : Local evaluation: TRUE
[08:07:19.010] | : Asynchronous evaluation: TRUE
[08:07:19.010] | : Early signaling: FALSE
[08:07:19.010] | : Environment: R_GlobalEnv
[08:07:19.010] | : State: ‘running’
[08:07:19.010] | : Resolved: FALSE
[08:07:19.010] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-18
[08:07:19.010] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:19.010] | : Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:19.010] | : Value: <not collected>
[08:07:19.010] | : Conditions captured: <none>
[08:07:19.025] | : Chunk #2 of 2 ... DONE
[08:07:19.019] | : . ' , ; ` | : . List of 1
[08:07:19.019] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.019] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.019] | : . ' , ; ` | : .     ...)  
[08:07:19.019] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:19.019] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.019] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.019] | : . ' , ; ` | : .     ...)  
[08:07:19.019] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.019] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.025] | : Launching 2 futures (chunks) ... DONE
[08:07:19.025] | : Resolving 2 futures (chunks) ...
[08:07:19.025] | : . ' , ; ` | : . Not identical
[08:07:19.018] | : . ' , ; ` List of 5
[08:07:19.018] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:19.018] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:19.018] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:19.018] | : . ' , ; `   ..$ :List of 1
[08:07:19.018] | : . ' , ; `   .. ..$ : int 1
[08:07:19.018] | : . ' , ; `   ..$ :List of 1
[08:07:19.018] | : . ' , ; `   .. ..$ : int 0
[08:07:19.018] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:19.018] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:19.018] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:19.018] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab98014200> 
[08:07:19.018] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:19.018] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:19.018] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:19.018] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:19.018] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:19.018] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:19.018] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:19.018] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:19.026] | : value() for list ...
[08:07:19.026] | : . ' , ; ` | : . all.equal() for future ...
[08:07:19.026] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:19.026] | : . recursive: 0
[08:07:19.026] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:19.026] | : . reduce: FALSE
[08:07:19.026] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:19.026] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:19.026] | : . length: 2
[08:07:19.026] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:19.026] | : . ' , ; ` assign_globals() ... done

[08:07:19.027] | : . Number of remaining objects: 2
[08:07:19.027] | : . checking value #1:
[08:07:19.027] | : . 'obj' is MulticoreFuture
[08:07:19.026] | : . ' , ; ` | : . ' List of 2
[08:07:19.026] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.026] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.026] | : . ' , ; ` | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.026] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.026] | : . ' , ; ` | : . '     ...)  
[08:07:19.026] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:19.026] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.026] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.026] | : . ' , ; ` | : . '     ...)  
[08:07:19.026] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.035] | : . ' , ; ` | : . ' Formals differ
[08:07:19.036] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:19.036] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:19.036] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:19.036] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:19.036] | : . ' , ; ` | : List of future strategies:
[08:07:19.036] | : . ' , ; ` | : 1. sequential:
[08:07:19.036] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:19.036] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:19.036] | : . ' , ; ` | :    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.037] | : . readImmediateCondition() ...
[08:07:19.038] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.038] | : . ' Number of RDS files: 0
[08:07:19.038] | : . ' Returned conditions set:
[08:07:19.038] | : . '  list()
[08:07:19.039] | : . readImmediateCondition() ... done
[08:07:19.039] | : . checking value #2:
[08:07:19.039] | : . 'obj' is MulticoreFuture
[08:07:19.037] | : . ' , ; ` | : List of 1
[08:07:19.037] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.037] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.037] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:19.037] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.037] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.037] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.037] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.037] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.042] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:19.042] | : . ' , ; ` | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:19.042] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.042] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:19.042] | : . ' , ; ` | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.042] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.042] | : . ' , ; ` | : . '  - attr(*, "init")= logi TRUE
[08:07:19.042] | : . ' , ; ` | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.042] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.042] | : . ' , ; ` | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.042] | : . ' , ; ` | : . '  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.045] | : . ' , ; ` | : . ' init: TRUE
[08:07:19.045] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ...
[08:07:19.046] | : . ' , ; ` | : . ' , Backend function: <‘NULL’>
[08:07:19.046] | : . ' , ; ` | : . ' , Evaluator tweak arguments: [n=0]
[08:07:19.046] | : . ' , ; ` | : . ' ,  list()
[08:07:19.046] | : . ' , ; ` | : . ' , Evaluator formal arguments: [n=2]
[08:07:19.046] | : . ' , ; ` | : . ' ,  list()
[08:07:19.047] | : . ' , ; ` | : . ' , Backend factory arguments: [n=2]
[08:07:19.047] | : . ' , ; ` | : . ' , Dotted pair list of 2
[08:07:19.047] | : . ' , ; ` | : . ' ,  $ gc         : logi FALSE
[08:07:19.047] | : . ' , ; ` | : . ' ,  $ earlySignal: logi FALSE
[08:07:19.050] | : . ' , ; ` | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:19.050] | : . readImmediateCondition() ...
[08:07:19.050] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.050] | : . ' , ; ` | : . ' makeFutureBackend(<sequential>) ... done
[08:07:19.050] | : . ' Number of RDS files: 0
[08:07:19.050] | : . ' , ; ` | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:19.050] | : . ' Returned conditions set:
[08:07:19.050] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.051] | : . '  list()
[08:07:19.051] | : . ' , ; ` | : plan(): nbrOfWorkers() = 1
[08:07:19.051] | : . readImmediateCondition() ... done
[08:07:19.051] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:19.051] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.052] | : . ' , ; ` assign_globals() ...
[08:07:19.052] | : . ' , ; ` List of 5
[08:07:19.052] | : . ' , ; `  $ ...future.FUN            :function (x, y)  
[08:07:19.052] | : . ' , ; `  $ MoreArgs                 : NULL
[08:07:19.052] | : . ' , ; `  $ ...future.elements_ii    :List of 2
[08:07:19.052] | : . ' , ; `   ..$ :List of 1
[08:07:19.052] | : . ' , ; `   .. ..$ : int 0
[08:07:19.052] | : . ' , ; `   ..$ :List of 1
[08:07:19.052] | : . ' , ; `   .. ..$ : int 1
[08:07:19.052] | : . ' , ; `  $ ...future.seeds_ii       : NULL
[08:07:19.052] | : . ' , ; `  $ ...future.globals.maxSize: NULL
[08:07:19.052] | : . ' , ; `  - attr(*, "where")=List of 5
[08:07:19.052] | : . ' , ; `   ..$ ...future.FUN            :<environment: 0x55ab98014200> 
[08:07:19.052] | : . ' , ; `   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:19.052] | : . ' , ; `   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:19.052] | : . ' , ; `   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:19.052] | : . ' , ; `   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:19.052] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:19.052] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:19.052] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:19.052] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:19.060] | : . ' , ; ` - copied ‘...future.FUN’ to environment
[08:07:19.060] | : . ' , ; ` - copied ‘MoreArgs’ to environment
[08:07:19.060] | : . ' , ; ` - copied ‘...future.elements_ii’ to environment
[08:07:19.060] | : . ' , ; ` - copied ‘...future.seeds_ii’ to environment
[08:07:19.060] | : . ' , ; ` - copied ‘...future.globals.maxSize’ to environment
[08:07:19.060] | : . ' , ; ` assign_globals() ... done
[08:07:19.061] | : . Number of remaining objects: 2
[08:07:19.061] | : . checking value #1:
[08:07:19.062] | : . 'obj' is MulticoreFuture
[08:07:19.063] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:19.064] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:19.064] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:19.064] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:19.064] | : . ' , ; ` | : . ' New stack:
[08:07:19.064] | : . ' , ; ` | : . ' List of 1
[08:07:19.064] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.064] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.064] | : . ' , ; ` | : . '     ...)  
[08:07:19.064] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:19.064] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.064] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.064] | : . ' , ; ` | : . '     ...)  
[08:07:19.064] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.064] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.069] | : . ' , ; ` | : . ' Old stack:
[08:07:19.072] | : . readImmediateCondition() ...
[08:07:19.072] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.072] | : . ' Number of RDS files: 0
[08:07:19.073] | : . ' Returned conditions set:
[08:07:19.073] | : . '  list()
[08:07:19.073] | : . readImmediateCondition() ... done
[08:07:19.069] | : . ' , ; ` | : . ' List of 1
[08:07:19.069] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniproces[08:07:19.073] | : . checking value #2:
s" "future" "function"
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.069] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.069] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9781d348> 
[08:07:19.069] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.069] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.069] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.073] | : . 'obj' is MulticoreFuture
[08:07:19.073] | : . ' , ; ` | : . ' Not identical
[08:07:19.074] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:19.074] | : . ' , ; ` | : . ' , List of 2
[08:07:19.074] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.074] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.074] | : . ' , ; ` | : . ' ,     ...)  
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.074] | : . ' , ; ` | : . ' ,     ...)  
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.074] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.074] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab9781d348> 
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.074] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.082] | : . ' , ; ` | : . ' , Formals differ
[08:07:19.082] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:19.082] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:19.082] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:19.082] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:19.082] | : . ' , ; ` | : . List of future strategies:
[08:07:19.082] | : . ' , ; ` | : . 1. multicore:
[08:07:19.082] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:19.082] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:19.082] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:19.084] | : . readImmediateCondition() ...
[08:07:19.084] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.084] | : . ' Number of RDS files: 0
[08:07:19.084] | : . ' Returned conditions set:
[08:07:19.084] | : . '  list()
[08:07:19.085] | : . readImmediateCondition() ... done
[08:07:19.083] | : . ' , ; ` | : . List of 1
[08:07:19.083] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.083] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.083] | : . ' , ; ` | : .     ...)  
[08:07:19.083] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:19.083] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.083] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.083] | : . ' , ; ` | : .     ...)  
[08:07:19.083] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.083] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.087] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:19.087] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:19.088] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.088] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.088] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:19.088] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:19.088] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.088] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.095] | : . Number of remaining objects: 2
[08:07:19.095] | : . checking value #1:
[08:07:19.095] | : . 'obj' is MulticoreFuture
[08:07:19.106] | : . readImmediateCondition() ...
[08:07:19.106] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.106] | : . ' Number of RDS files: 0
[08:07:19.106] | : . ' Returned conditions set:
[08:07:19.106] | : . '  list()
[08:07:19.107] | : . readImmediateCondition() ... done
[08:07:19.107] | : . checking value #2:
[08:07:19.107] | : . 'obj' is MulticoreFuture
[08:07:19.107] | : . readImmediateCondition() ...
[08:07:19.107] | : . ' Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.108] | : . ' Number of RDS files: 0
[08:07:19.108] | : . ' Returned conditions set:
[08:07:19.108] | : . '  list()
[08:07:19.108] | : . readImmediateCondition() ... done
[08:07:19.108] | : . MulticoreFuture #2
[08:07:19.108] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:19.109] | : . ' nx: 2
[08:07:19.109] | : . ' relay: TRUE
[08:07:19.109] | : . ' stdout: TRUE
[08:07:19.109] | : . ' signal: TRUE
[08:07:19.109] | : . ' resignal: FALSE
[08:07:19.109] | : . ' force: TRUE
[08:07:19.109] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:19.109] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:19.110] | : . ' until=1
[08:07:19.110] | : . ' relaying element #1
[08:07:19.110] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:19.110] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:19.110] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:19.110] | : . value(<MulticoreFuture>, ...) ...
[08:07:19.110] | : . value(<MulticoreFuture>, ...) ... done
[08:07:19.111] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:19.111] | : . ' result() for MulticoreFuture ...
[08:07:19.112] | : . ' , readImmediateCondition() ...
[08:07:19.112] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.112] | : . ' , ; Number of RDS files: 0
[08:07:19.112] | : . ' , ; Returned conditions set:
[08:07:19.112] | : . ' , ;  list()
[08:07:19.113] | : . ' , readImmediateCondition() ... done
[08:07:19.113] | : . ' , result() for MulticoreFuture ...
[08:07:19.113] | : . ' , result() for MulticoreFuture ... done
[08:07:19.113] | : . ' , signalConditions() ...
[08:07:19.114] | : . ' , ; include = ‘immediateCondition’
[08:07:19.114] | : . ' , ; exclude = 
[08:07:19.114] | : . ' , ; resignal = FALSE
[08:07:19.114] | : . ' , ; Number of conditions: 6
[08:07:19.114] | : . ' , ;  int 6
[08:07:19.115] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.115] | : . ' , ; Drop signaled conditions: 0
[08:07:19.116] | : . ' , signalConditions() ... done
[08:07:19.116] | : . ' result() for MulticoreFuture ... done
[08:07:19.116] | : . ' result() for MulticoreFuture ...
[08:07:19.116] | : . ' result() for MulticoreFuture ... done
[08:07:19.116] | : . ' signalConditions() ...
[08:07:19.116] | : . ' , include = ‘immediateCondition’
[08:07:19.116] | : . ' , exclude = 
[08:07:19.117] | : . ' , resignal = FALSE
[08:07:19.117] | : . ' , Number of conditions: 6
[08:07:19.117] | : . ' ,  int 6
[08:07:19.117] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.117] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.118] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.118] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.118] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.118] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.118] | : . ' , Drop signaled conditions: 0
[08:07:19.118] | : . ' signalConditions() ... done
[08:07:19.118] | : . ' check for misuse ...
[08:07:19.119] | : . ' check for misuse ... done
[08:07:19.119] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:19.119] | : . value: <list>
[08:07:19.119] | : . signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:07:19.119] | : . ' nx: 2
[08:07:19.119] | : . ' relay: TRUE
[08:07:19.119] | : . ' stdout: TRUE
[08:07:19.119] | : . ' signal: TRUE
[08:07:19.120] | : . ' resignal: FALSE
[08:07:19.120] | : . ' force: TRUE
[08:07:19.120] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:19.120] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:19.120] | : . ' until=1
[08:07:19.120] | : . ' relaying element #1
[08:07:19.120] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:19.120] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:19.121] | : . signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:07:19.121] | : . resolve() for MulticoreFuture ...
[08:07:19.121] | : . resolve() for MulticoreFuture ... done
[08:07:19.121] | : . length: 1 (resolved future 2)
[08:07:19.121] | : value() for list ... done
[08:07:19.131] | : Number of remaining objects: 1
[08:07:19.132] | : checking value #1:
[08:07:19.132] | : 'obj' is MulticoreFuture
[08:07:19.142] | : readImmediateCondition() ...
[08:07:19.142] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.142] | : . Number of RDS files: 0
[08:07:19.142] | : . Returned conditions set:
[08:07:19.143] | : .  list()
[08:07:19.143] | : readImmediateCondition() ... done
[08:07:19.153] | : Number of remaining objects: 1
[08:07:19.153] | : checking value #1:
[08:07:19.153] | : 'obj' is MulticoreFuture
[08:07:19.164] | : readImmediateCondition() ...
[08:07:19.164] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.164] | : . Number of RDS files: 0
[08:07:19.164] | : . Returned conditions set:
[08:07:19.165] | : .  list()
[08:07:19.165] | : readImmediateCondition() ... done
[08:07:19.175] | : Number of remaining objects: 1
[08:07:19.175] | : checking value #1:
[08:07:19.176] | : 'obj' is MulticoreFuture
[08:07:19.186] | : readImmediateCondition() ...
[08:07:19.186] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.186] | : . Number of RDS files: 0
[08:07:19.187] | : . Returned conditions set:
[08:07:19.187] | : .  list()
[08:07:19.187] | : readImmediateCondition() ... done
[08:07:19.197] | : Number of remaining objects: 1
[08:07:19.198] | : checking value #1:
[08:07:19.198] | : 'obj' is MulticoreFuture
[08:07:19.208] | : readImmediateCondition() ...
[08:07:19.208] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.209] | : . Number of RDS files: 0
[08:07:19.209] | : . Returned conditions set:
[08:07:19.209] | : .  list()
[08:07:19.209] | : readImmediateCondition() ... done
[08:07:19.220] | : Number of remaining objects: 1
[08:07:19.220] | : checking value #1:
[08:07:19.220] | : 'obj' is MulticoreFuture
[08:07:19.230] | : readImmediateCondition() ...
[08:07:19.230] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.231] | : . Number of RDS files: 0
[08:07:19.231] | : . Returned conditions set:
[08:07:19.231] | : .  list()
[08:07:19.231] | : readImmediateCondition() ... done
[08:07:19.242] | : Number of remaining objects: 1
[08:07:19.242] | : checking value #1:
[08:07:19.242] | : 'obj' is MulticoreFuture
[08:07:19.252] | : readImmediateCondition() ...
[08:07:19.252] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.253] | : . Number of RDS files: 0
[08:07:19.253] | : . Returned conditions set:
[08:07:19.253] | : .  list()
[08:07:19.253] | : readImmediateCondition() ... done
[08:07:19.264] | : Number of remaining objects: 1
[08:07:19.264] | : checking value #1:
[08:07:19.264] | : 'obj' is MulticoreFuture
[08:07:19.274] | : readImmediateCondition() ...
[08:07:19.274] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.275] | : . Number of RDS files: 0
[08:07:19.275] | : . Returned conditions set:
[08:07:19.275] | : .  list()
[08:07:19.275] | : readImmediateCondition() ... done
[08:07:19.286] | : Number of remaining objects: 1
[08:07:19.286] | : checking value #1:
[08:07:19.286] | : 'obj' is MulticoreFuture
[08:07:19.296] | : readImmediateCondition() ...
[08:07:19.296] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.297] | : . Number of RDS files: 0
[08:07:19.297] | : . Returned conditions set:
[08:07:19.297] | : .  list()
[08:07:19.297] | : readImmediateCondition() ... done
[08:07:19.308] | : Number of remaining objects: 1
[08:07:19.308] | : checking value #1:
[08:07:19.308] | : 'obj' is MulticoreFuture
[08:07:19.318] | : readImmediateCondition() ...
[08:07:19.319] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.319] | : . Number of RDS files: 0
[08:07:19.319] | : . Returned conditions set:
[08:07:19.319] | : .  list()
[08:07:19.319] | : readImmediateCondition() ... done
[08:07:19.330] | : Number of remaining objects: 1
[08:07:19.330] | : checking value #1:
[08:07:19.330] | : 'obj' is MulticoreFuture
[08:07:19.340] | : readImmediateCondition() ...
[08:07:19.341] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.341] | : . Number of RDS files: 0
[08:07:19.341] | : . Returned conditions set:
[08:07:19.341] | : .  list()
[08:07:19.342] | : readImmediateCondition() ... done
[08:07:19.352] | : Number of remaining objects: 1
[08:07:19.352] | : checking value #1:
[08:07:19.352] | : 'obj' is MulticoreFuture
[08:07:19.362] | : readImmediateCondition() ...
[08:07:19.363] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.363] | : . Number of RDS files: 0
[08:07:19.363] | : . Returned conditions set:
[08:07:19.363] | : .  list()
[08:07:19.364] | : readImmediateCondition() ... done
[08:07:19.374] | : Number of remaining objects: 1
[08:07:19.374] | : checking value #1:
[08:07:19.374] | : 'obj' is MulticoreFuture
[08:07:19.384] | : readImmediateCondition() ...
[08:07:19.385] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.385] | : . Number of RDS files: 0
[08:07:19.385] | : . Returned conditions set:
[08:07:19.385] | : .  list()
[08:07:19.386] | : readImmediateCondition() ... done
[08:07:19.396] | : Number of remaining objects: 1
[08:07:19.396] | : checking value #1:
[08:07:19.396] | : 'obj' is MulticoreFuture
[08:07:19.406] | : readImmediateCondition() ...
[08:07:19.407] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.407] | : . Number of RDS files: 0
[08:07:19.407] | : . Returned conditions set:
[08:07:19.407] | : .  list()
[08:07:19.408] | : readImmediateCondition() ... done
[08:07:19.418] | : Number of remaining objects: 1
[08:07:19.418] | : checking value #1:
[08:07:19.418] | : 'obj' is MulticoreFuture
[08:07:19.429] | : readImmediateCondition() ...
[08:07:19.429] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.429] | : . Number of RDS files: 0
[08:07:19.429] | : . Returned conditions set:
[08:07:19.429] | : .  list()
[08:07:19.430] | : readImmediateCondition() ... done
[08:07:19.440] | : Number of remaining objects: 1
[08:07:19.440] | : checking value #1:
[08:07:19.440] | : 'obj' is MulticoreFuture
[08:07:19.451] | : readImmediateCondition() ...
[08:07:19.451] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.451] | : . Number of RDS files: 0
[08:07:19.451] | : . Returned conditions set:
[08:07:19.451] | : .  list()
[08:07:19.452] | : readImmediateCondition() ... done
[08:07:19.462] | : Number of remaining objects: 1
[08:07:19.462] | : checking value #1:
[08:07:19.462] | : 'obj' is MulticoreFuture
[08:07:19.473] | : readImmediateCondition() ...
[08:07:19.473] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.473] | : . Number of RDS files: 0
[08:07:19.473] | : . Returned conditions set:
[08:07:19.474] | : .  list()
[08:07:19.474] | : readImmediateCondition() ... done
[08:07:19.484] | : Number of remaining objects: 1
[08:07:19.485] | : checking value #1:
[08:07:19.485] | : 'obj' is MulticoreFuture
[08:07:19.495] | : readImmediateCondition() ...
[08:07:19.495] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.496] | : . Number of RDS files: 0
[08:07:19.496] | : . Returned conditions set:
[08:07:19.496] | : .  list()
[08:07:19.496] | : readImmediateCondition() ... done
[08:07:19.506] | : Number of remaining objects: 1
[08:07:19.507] | : checking value #1:
[08:07:19.507] | : 'obj' is MulticoreFuture
[08:07:19.517] | : readImmediateCondition() ...
[08:07:19.517] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.518] | : . Number of RDS files: 0
[08:07:19.518] | : . Returned conditions set:
[08:07:19.518] | : .  list()
[08:07:19.518] | : readImmediateCondition() ... done
[08:07:19.528] | : Number of remaining objects: 1
[08:07:19.529] | : checking value #1:
[08:07:19.529] | : 'obj' is MulticoreFuture
[08:07:19.530] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:19.531] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:19.531] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:19.531] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:19.531] | : . ' , ; ` | : . ' New stack:
[08:07:19.531] | : . ' , ; ` | : . ' List of 1
[08:07:19.531] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.531] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.531] | : . ' , ; ` | : . '     ...)  
[08:07:19.531] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:19.531] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.531] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.531] | : . ' , ; ` | : . '     ...)  
[08:07:19.531] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.531] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.535] | : . ' , ; ` | : . ' Old stack:
[08:07:19.535] | : . ' , ; ` | : . ' List of 1
[08:07:19.535] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.535] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.535] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab97184220> 
[08:07:19.535] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.535] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.535] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.539] | : . ' , ; ` | : . ' Not identical
[08:07:19.539] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:19.539] | : readImmediateCondition() ...
[08:07:19.539] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.540] | : . Number of RDS files: 0
[08:07:19.540] | : . Returned conditions set:
[08:07:19.540] | : .  list()
[08:07:19.541] | : readImmediateCondition() ... done
[08:07:19.539] | : . ' , ; ` | : . ' , List of 2
[08:07:19.539] | : . ' , ; ` | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.539] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.539] | : . ' , ; ` | : . ' ,     ...)  
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.539] | : . ' , ; ` | : . ' ,     ...)  
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.539] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:19.539] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab97184220> 
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:19.539] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:19.547] | : . ' , ; ` | : . ' , Formals differ
[08:07:19.547] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:19.548] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:19.548] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:19.548] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:19.548] | : . ' , ; ` | : . List of future strategies:
[08:07:19.548] | : . ' , ; ` | : . 1. multicore:
[08:07:19.548] | : . ' , ; ` | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:19.548] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:19.548] | : . ' , ; ` | : .    - call: plan(strategy)
[08:07:19.551] | : Number of remaining objects: 1
[08:07:19.551] | : checking value #1:
[08:07:19.551] | : 'obj' is MulticoreFuture
[08:07:19.548] | : . ' , ; ` | : . List of 1
[08:07:19.548] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.548] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.548] | : . ' , ; ` | : .     ...)  
[08:07:19.548] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:19.548] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.548] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.548] | : . ' , ; ` | : .     ...)  
[08:07:19.548] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.548] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.553] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:19.553] | : . ' , ; ` | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:19.554] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.554] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.554] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 2
[08:07:19.554] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:19.554] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.554] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:19.555] | : readImmediateCondition() ...
[08:07:19.555] | : . Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.555] | : . Number of RDS files: 0
[08:07:19.555] | : . Returned conditions set:
[08:07:19.555] | : .  list()
[08:07:19.556] | : readImmediateCondition() ... done
[08:07:19.556] | : MulticoreFuture #1
[08:07:19.556] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:19.556] | : . nx: 2
[08:07:19.556] | : . relay: TRUE
[08:07:19.556] | : . stdout: TRUE
[08:07:19.556] | : . signal: TRUE
[08:07:19.557] | : . resignal: FALSE
[08:07:19.557] | : . force: TRUE
[08:07:19.557] | : . relayed: [n=2] FALSE, FALSE
[08:07:19.557] | : . queued futures: [n=2] FALSE, TRUE
[08:07:19.557] | : . until=1
[08:07:19.557] | : . relaying element #1
[08:07:19.557] | : . value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:19.557] | : . ' result() for MulticoreFuture ...
[08:07:19.558] | : . ' , readImmediateCondition() ...
[08:07:19.558] | : . ' , ; Path: ‘/tmp/RtmpQCgYwX/.future/immediateConditions’
[08:07:19.558] | : . ' , ; Number of RDS files: 0
[08:07:19.559] | : . ' , ; Returned conditions set:
[08:07:19.559] | : . ' , ;  list()
[08:07:19.559] | : . ' , readImmediateCondition() ... done
[08:07:19.560] | : . ' , result() for MulticoreFuture ...
[08:07:19.560] | : . ' , result() for MulticoreFuture ... done
[08:07:19.560] | : . ' , signalConditions() ...
[08:07:19.560] | : . ' , ; include = ‘immediateCondition’
[08:07:19.560] | : . ' , ; exclude = 
[08:07:19.561] | : . ' , ; resignal = FALSE
[08:07:19.561] | : . ' , ; Number of conditions: 6
[08:07:19.561] | : . ' , ;  int 6
[08:07:19.562] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.562] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.562] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.562] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.562] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.563] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.563] | : . ' , ; Drop signaled conditions: 0
[08:07:19.563] | : . ' , signalConditions() ... done
[08:07:19.563] | : . ' result() for MulticoreFuture ... done
[08:07:19.563] | : . ' result() for MulticoreFuture ...
[08:07:19.564] | : . ' result() for MulticoreFuture ... done
[08:07:19.564] | : . ' signalConditions() ...
[08:07:19.564] | : . ' , include = ‘immediateCondition’
[08:07:19.564] | : . ' , exclude = 
[08:07:19.564] | : . ' , resignal = FALSE
[08:07:19.565] | : . ' , Number of conditions: 6
[08:07:19.565] | : . ' ,  int 6
[08:07:19.565] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.566] | : . ' , Drop signaled conditions: 0
[08:07:19.566] | : . ' signalConditions() ... done
[08:07:19.566] | : . ' relay stdout ...
[08:07:19.567] | : . ' relay stdout ... done
[08:07:19.567] | : . ' check for misuse ...
[08:07:19.567] | : . ' check for misuse ... done
[08:07:19.567] | : . value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:19.567] | : . result() for MulticoreFuture ...
[08:07:19.567] | : . result() for MulticoreFuture ... done
[08:07:19.567] | : . signalConditions() ...
[08:07:19.567] | : . ' include = ‘immediateCondition’
[08:07:19.568] | : . ' exclude = 
[08:07:19.568] | : . ' resignal = FALSE
[08:07:19.568] | : . ' Number of conditions: 6
[08:07:19.568] | : . '  int 6
[08:07:19.568] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.568] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.569] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.569] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.569] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.569] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.569] | : . ' Drop signaled conditions: 0
[08:07:19.569] | : . signalConditions() ... done
[08:07:19.569] | : . result() for MulticoreFuture ...
[08:07:19.569] | : . result() for MulticoreFuture ... done
[08:07:19.570] | : . signalConditions() ...
[08:07:19.570] | : . ' include = ‘condition’
[08:07:19.570] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:19.570] | : . ' resignal = TRUE
[08:07:19.570] | : . ' Number of conditions: 6
[08:07:19.570] | : . '  int 6
[08:07:19.571] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.571] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.980] | : . ' , ; ` attachPackages() ...
[08:07:19.571] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.571] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.981] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:19.571] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.571] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.981] | : . ' , ; ` attachPackages() ... done
[08:07:19.571] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.572] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.981] | : . ' , ; ` attachPackages() ...
[08:07:19.572] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.572] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.981] | : . ' , ; ` | packages: [n=0] 
[08:07:19.572] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.572] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:18.981] | : . ' , ; ` attachPackages() ... done
[08:07:19.572] | : . ' Drop signaled conditions: 6
[08:07:19.572] | : . signalConditions() ... done
[08:07:19.573] | : . relayed: [n=2] TRUE, FALSE
[08:07:19.573] | : . queued futures: [n=2] TRUE, TRUE
[08:07:19.573] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:19.573] | : value(<MulticoreFuture>, ...) ...
[08:07:19.573] | : value(<MulticoreFuture>, ...) ... done
[08:07:19.573] | : value() for MulticoreFuture (‘future_mapply-1’) ...
[08:07:19.573] | : . result() for MulticoreFuture ...
[08:07:19.573] | : . result() for MulticoreFuture ... done
[08:07:19.574] | : . result() for MulticoreFuture ...
[08:07:19.574] | : . result() for MulticoreFuture ... done
[08:07:19.574] | : . signalConditions() ...
[08:07:19.574] | : . ' include = ‘immediateCondition’
[08:07:19.574] | : . ' exclude = 
[08:07:19.574] | : . ' resignal = FALSE
[08:07:19.574] | : . ' Number of conditions: 0
[08:07:19.574] | : . '  int 0
[08:07:19.575] | : . signalConditions() ... done
[08:07:19.575] | : . check for misuse ...
[08:07:19.575] | : . check for misuse ... done
[08:07:19.575] | : value() for MulticoreFuture (‘future_mapply-1’) ... done
[08:07:19.575] | : value: <list>
[08:07:19.575] | : signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:07:19.576] | : . nx: 2
[08:07:19.576] | : . relay: TRUE
[08:07:19.576] | : . stdout: TRUE
[08:07:19.576] | : . signal: TRUE
[08:07:19.576] | : . resignal: FALSE
[08:07:19.576] | : . force: TRUE
[08:07:19.576] | : . relayed: [n=2] TRUE, FALSE
[08:07:19.576] | : . queued futures: [n=2] TRUE, TRUE
[08:07:19.576] | : . until=2
[08:07:19.577] | : . relaying element #2
[08:07:19.577] | : . value() for MulticoreFuture (‘future_mapply-2’) ...
[08:07:19.577] | : . ' result() for MulticoreFuture ...
[08:07:19.577] | : . ' result() for MulticoreFuture ... done
[08:07:19.577] | : . ' result() for MulticoreFuture ...
[08:07:19.577] | : . ' result() for MulticoreFuture ... done
[08:07:19.577] | : . ' signalConditions() ...
[08:07:19.577] | : . ' , include = ‘immediateCondition’
[08:07:19.577] | : . ' , exclude = 
[08:07:19.578] | : . ' , resignal = FALSE
[08:07:19.578] | : . ' , Number of conditions: 6
[08:07:19.578] | : . ' ,  int 6
[08:07:19.578] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.578] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.579] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.579] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.579] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.579] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.579] | : . ' , Drop signaled conditions: 0
[08:07:19.579] | : . ' signalConditions() ... done
[08:07:19.579] | : . ' relay stdout ...
[08:07:19.579] | : . ' relay stdout ... done
[08:07:19.580] | : . ' check for misuse ...
[08:07:19.580] | : . ' check for misuse ... done
[08:07:19.580] | : . value() for MulticoreFuture (‘future_mapply-2’) ... done
[08:07:19.580] | : . result() for MulticoreFuture ...
[08:07:19.580] | : . result() for MulticoreFuture ... done
[08:07:19.580] | : . signalConditions() ...
[08:07:19.580] | : . ' include = ‘immediateCondition’
[08:07:19.580] | : . ' exclude = 
[08:07:19.580] | : . ' resignal = FALSE
[08:07:19.581] | : . ' Number of conditions: 6
[08:07:19.581] | : . '  int 6
[08:07:19.581] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.581] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.581] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.581] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.582] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.582] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.582] | : . ' Drop signaled conditions: 0
[08:07:19.582] | : . signalConditions() ... done
[08:07:19.582] | : . result() for MulticoreFuture ...
[08:07:19.582] | : . result() for MulticoreFuture ... done
[08:07:19.582] | : . signalConditions() ...
[08:07:19.582] | : . ' include = ‘condition’
[08:07:19.583] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:19.583] | : . ' resignal = TRUE
[08:07:19.583] | : . ' Number of conditions: 6
[08:07:19.583] | : . '  int 6
[08:07:19.583] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.583] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.008] | : . ' , ; ` attachPackages() ...
[08:07:19.584] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.584] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.009] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:19.584] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.584] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.009] | : . ' , ; ` attachPackages() ... done
[08:07:19.584] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.584] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.009] | : . ' , ; ` attachPackages() ...
[08:07:19.584] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.585] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.010] | : . ' , ; ` | packages: [n=0] 
[08:07:19.585] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:19.585] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:19.010] | : . ' , ; ` attachPackages() ... done
[08:07:19.585] | : . ' Drop signaled conditions: 6
[08:07:19.585] | : . signalConditions() ... done
[08:07:19.585] | : . relayed: [n=2] TRUE, TRUE
[08:07:19.585] | : . queued futures: [n=2] TRUE, TRUE
[08:07:19.586] | : signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:07:19.586] | : resolve() for MulticoreFuture ...
[08:07:19.586] | : resolve() for MulticoreFuture ... done
[08:07:19.586] | : length: 0 (resolved future 1)
[08:07:19.586] | future_mapply() -> future_xapply() ... done
[08:07:19.586] | Relaying remaining futures ...
[08:07:19.586] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:19.586] | : . nx: 2
[08:07:19.586] | : . relay: TRUE
[08:07:19.587] | : . stdout: TRUE
[08:07:19.587] | : . signal: TRUE
[08:07:19.587] | : . resignal: FALSE
[08:07:19.587] | : . force: TRUE
[08:07:19.587] | : . relayed: [n=2] TRUE, TRUE
[08:07:19.587] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:19.587] | : . relayed: [n=2] TRUE, TRUE
[08:07:19.587] | : . queued futures: [n=2] TRUE, TRUE
[08:07:19.587] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:19.588] | Relaying remaining futures ... done
[08:07:19.588] future_mapply() ... done
[08:07:19.588]  - Number of value chunks collected: 2
[08:07:19.588] Resolving 2 futures (chunks) ... DONE
[08:07:19.588] Reducing values from 2 chunks ...
[08:07:19.588]  - Number of values collected after concatenation: 2
[08:07:19.588]  - Number of values expected: 2
[08:07:19.588] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = NA) ... DONE
* plan('multicore') ... DONE
* plan('multisession') ...
[08:07:19.589] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.592] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:19.592] | : all.equal() for FutureStrategyList ...
[08:07:19.592] | : . New stack:
[08:07:19.592] | : . List of 1
[08:07:19.592] | : .  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:19.592] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.592] | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:19.592] | : .   ..- attr(*, "init")= logi TRUE
[08:07:19.592] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:19.592] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:19.592] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.592] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.592] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:07:19.592] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:19.592] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.595] | : . Old stack:
[08:07:19.595] | : . List of 1
[08:07:19.595] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.595] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.595] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.595] | : .   ..- attr(*, "init")= chr "done"
[08:07:19.595] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.595] | : .     ...)  
[08:07:19.595] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.595] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.595] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:19.595] | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.595] | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.595] | : .     ...)  
[08:07:19.595] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.595] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.599] | : . Not identical
[08:07:19.599] | : . all.equal() for future ...
[08:07:19.599] | : . ' List of 2
[08:07:19.599] | : . '  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:19.599] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.599] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:19.599] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:19.599] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:19.599] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:19.599] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.599] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.599] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:07:19.599] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:19.599] | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:19.599] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:19.599] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:19.599] | : . '   ..- attr(*, "init")= chr "done"
[08:07:19.599] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.599] | : . '     ...)  
[08:07:19.599] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.599] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.599] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:19.599] | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ab93eb5b98> 
[08:07:19.599] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:19.599] | : . '     ...)  
[08:07:19.599] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:19.605] | : . ' Formals differ
[08:07:19.606] | : . all.equal() for future ... done
[08:07:19.606] | : . Future strategies differ at level 1
[08:07:19.606] | : all.equal() for FutureStrategyList ... done
[08:07:19.606] | : plan(): Setting new future backend stack:
[08:07:19.606] | : List of future strategies:
[08:07:19.606] | : 1. multisession:
[08:07:19.606] | :    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:19.606] | :    - tweaked: FALSE
[08:07:19.606] | :    - call: plan(strategy)
[08:07:19.606] | : List of 1
[08:07:19.606] | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:19.606] | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.606] | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:19.606] | :   ..- attr(*, "init")= logi TRUE
[08:07:19.606] | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:19.606] | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:19.606] | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.606] | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.606] | :   ..- attr(*, "untweakable")= chr "persistent"
[08:07:19.606] | :   ..- attr(*, "call")= language plan(strategy)
[08:07:19.606] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:19.609] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:19.609] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:19.609] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:19.610] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:19.610] | : . Legacy shutdown of cluster workers ...
[08:07:19.611] | : . ' Stopping existing cluster ...
[08:07:19.611] | : . ' , No pre-existing cluster. Skipping
[08:07:19.611] | : . ' Stopping existing cluster ... done
[08:07:19.611] | : . Legacy shutdown of cluster workers ... done
[08:07:19.611] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:19.611] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:19.611] | : . function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:19.611] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:19.611] | : .  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:19.611] | : .  - attr(*, "init")= logi TRUE
[08:07:19.611] | : .  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:19.611] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:19.611] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.611] | : .  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:19.611] | : .  - attr(*, "untweakable")= chr "persistent"
[08:07:19.611] | : .  - attr(*, "call")= language plan(strategy)
[08:07:19.614] | : . init: TRUE
[08:07:19.614] | : . makeFutureBackend(<multisession>) ...
[08:07:19.614] | : . ' Backend function: <‘NULL’>
[08:07:19.614] | : . ' Evaluator tweak arguments: [n=0]
[08:07:19.614] | : . '  list()
[08:07:19.614] | : . ' Evaluator formal arguments: [n=4]
[08:07:19.614] | : . '  list()
[08:07:19.615] | : . ' Backend factory arguments: [n=4]
[08:07:19.615] | : . ' Dotted pair list of 4
[08:07:19.615] | : . '  $ workers     : language availableCores()
[08:07:19.615] | : . '  $ rscript_libs: language .libPaths()
[08:07:19.615] | : . '  $ gc          : logi FALSE
[08:07:19.615] | : . '  $ earlySignal : logi FALSE
[08:07:19.616] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:07:19.616] | : . ' , Arguments:
[08:07:19.617] | : . ' , List of 5
[08:07:19.617] | : . ' ,  $ workers     : Named int 2
[08:07:19.617] | : . ' ,   ..- attr(*, "names")= chr "mc.cores"
[08:07:19.617] | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:19.617] | : . ' ,  $ interrupts  : logi TRUE
[08:07:19.617] | : . ' ,  $ gc          : logi FALSE
[08:07:19.617] | : . ' ,  $ earlySignal : logi FALSE
[08:07:19.621] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:07:19.621] | : . ' , ; workers: 2
[08:07:19.621] | : . ' , ; getCluster() ...
[08:07:19.621] | : . ' , ; getCluster() ... done
[08:07:19.621] | : . ' , ; Stopping existing cluster ...
[08:07:19.621] | : . ' , ; ` No pre-existing cluster. Skipping
[08:07:19.621] | : . ' , ; Stopping existing cluster ... done
[08:07:19.621] | : . ' , ; Starting new cluster ...
[08:07:19.621] | : . ' , ; ` makeCluster(workers, ...) ...
[08:07:19.622] | : . ' , ; ` | Arguments:
[08:07:19.622] | : . ' , ; ` | List of 2
[08:07:19.622] | : . ' , ; ` |  $             : int 2
[08:07:19.622] | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:19.623] | : . ' , ; ` | .makeCluster() ...
[08:07:19.623] | : . ' , ; ` | : workers: ‘2’
[08:07:19.623] | : . ' , ; ` | : R_FUTURE_PLAN: NA
[08:07:19.623] | : . ' , ; ` | : parallelly::makeClusterPSOCK() arguments:
[08:07:19.623] | : . ' , ; ` | : List of 2
[08:07:19.623] | : . ' , ; ` | :  $             : int 2
[08:07:19.623] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:20.158] | : . ' , ; ` | : Generated cluster UUID
[08:07:20.159] | : . ' , ; ` | : Cluster UUID: ‘bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.159] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:20.161] | : . ' , ; ` | .makeCluster() ... done
[08:07:20.161] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:20.163] | : . ' , ; ` makeCluster(workers, ...) ... done
[08:07:20.163] | : . ' , ; ` Number of workers: 2
[08:07:20.163] | : . ' , ; ` Workers UUID: ‘bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.163] | : . ' , ; Starting new cluster ... done
[08:07:20.163] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:07:20.163] | : . ' , Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:20.164] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:07:20.164] | : . makeFutureBackend(<multisession>) ... done
[08:07:20.164] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.164] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.164] | : . plan(): nbrOfWorkers() = 2
[08:07:20.164] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:20.164] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
* future_lapply(x, ..., future.stdout = FALSE) ...
[08:07:20.165] | future_lapply() ...
[08:07:20.165] | : Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:20.166] | : => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:20.166] | : future_lapply() -> future_xapply() ...
[08:07:20.166] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.166] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.166] | : . Number of chunks: 2
[08:07:20.166] | : . getGlobalsAndPackagesXApply() ...
[08:07:20.167] | : . ' future.globals: TRUE
[08:07:20.167] | : . ' getGlobalsAndPackages() ...
[08:07:20.167] | : . ' , Searching for globals ...
[08:07:20.173] | : . ' , ; globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:20.174] | : . ' , Searching for globals ... done
[08:07:20.174] | : . ' , Resolving globals: FALSE
[08:07:20.174] | : . ' , Search for packages associated with the globals ...
[08:07:20.174] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:20.174] | : . ' , ; Packages: [1] ‘base’
[08:07:20.174] | : . ' , Search for packages associated with the globals ... done
[08:07:20.175] | : . ' , The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:20.175] | : . ' , The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:20.175] | : . ' , Packages after dropping 'base': [0] 
[08:07:20.175] | : . ' , globals: [1] ‘FUN’
[08:07:20.175] | : . ' , packages: [0] 
[08:07:20.175] | : . ' getGlobalsAndPackages() ... done
[08:07:20.176] | : . ' globals found/used: [n=1] ‘FUN’
[08:07:20.176] | : . ' needed namespaces: [n=0] 
[08:07:20.176] | : . ' use_args: TRUE
[08:07:20.176] | : . ' Getting '...' globals ...
[08:07:20.176] | : . ' , resolve() for FutureGlobals ...
[08:07:20.176] | : . ' , ; recursive: 0
[08:07:20.176] | : . ' , ; Number of elements: 1
[08:07:20.177] | : . ' , ; elements: ‘...’
[08:07:20.177] | : . ' , ; 'obj' is DotDotDotList
[08:07:20.177] | : . ' , ; resolve(obj, ...) ...
[08:07:20.177] | : . ' , ; ` resolve() for DotDotDotList ...
[08:07:20.177] | : . ' , ; ` | recursive: -1
[08:07:20.177] | : . ' , ; ` resolve() for DotDotDotList ... done
[08:07:20.177] | : . ' , ; resolve(obj, ...) ... done
[08:07:20.177] | : . ' , ; resolved() for DotDotDotList ...
[08:07:20.177] | : . ' , ; ` Number of elements: 0
[08:07:20.177] | : . ' , ; ` Number of futures: 0
[08:07:20.178] | : . ' , ; resolved() for DotDotDotList ... done
[08:07:20.178] | : . ' , ; length: 0 (resolved future 1)
[08:07:20.178] | : . ' , resolve() for FutureGlobals ... done
[08:07:20.178] | : . ' , '...' content: [n=0] 
[08:07:20.178] | : . ' , List of 1
[08:07:20.178] | : . ' ,  $ ...: list()
[08:07:20.178] | : . ' ,   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.178] | : . ' ,  - attr(*, "where")=List of 1
[08:07:20.178] | : . ' ,   ..$ ...:<environment: 0x55ab9665a0b0> 
[08:07:20.178] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.178] | : . ' ,  - attr(*, "resolved")= logi TRUE
[08:07:20.178] | : . ' ,  - attr(*, "total_size")= num NA
[08:07:20.181] | : . ' Getting '...' globals ... done
[08:07:20.181] | : . ' Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:20.181] | : . ' List of 2
[08:07:20.181] | : . '  $ ...future.FUN:function (x)  
[08:07:20.181] | : . '  $ ...          : list()
[08:07:20.181] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.181] | : . '  - attr(*, "where")=List of 2
[08:07:20.181] | : . '   ..$ ...future.FUN:<environment: 0x55ab9665a0b0> 
[08:07:20.181] | : . '   ..$ ...          :<environment: 0x55ab9665a0b0> 
[08:07:20.181] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.181] | : . '  - attr(*, "resolved")= logi FALSE
[08:07:20.181] | : . '  - attr(*, "total_size")= num 6008
[08:07:20.184] | : . ' Packages to be attached in all futures: [n=0] 
[08:07:20.184] | : . getGlobalsAndPackagesXApply() ... done
[08:07:20.184] | : . Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.184] | : . List of 5
[08:07:20.184] | : .  $ ...future.FUN            :function (x)  
[08:07:20.184] | : .  $ ...                      : list()
[08:07:20.184] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.184] | : .  $ ...future.elements_ii    : NULL
[08:07:20.184] | : .  $ ...future.seeds_ii       : NULL
[08:07:20.184] | : .  $ ...future.globals.maxSize: NULL
[08:07:20.184] | : .  - attr(*, "where")=List of 5
[08:07:20.184] | : .   ..$ ...future.FUN            :<environment: 0x55ab9665a0b0> 
[08:07:20.184] | : .   ..$ ...                      :<environment: 0x55ab9665a0b0> 
[08:07:20.184] | : .   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:20.184] | : .   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:20.184] | : .   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:20.184] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.184] | : .  - attr(*, "resolved")= logi FALSE
[08:07:20.184] | : .  - attr(*, "total_size")= num 6008
[08:07:20.188] | : . Number of futures (= number of chunks): 2
[08:07:20.189] | : . Launching 2 futures (chunks) ...
[08:07:20.189] | : . Chunk #1 of 2 ...
[08:07:20.189] | : .  - Finding globals in 'X' for chunk #1 ...
[08:07:20.189] | : . getGlobalsAndPackages() ...
[08:07:20.189] | : . ' Searching for globals ...
[08:07:20.189] | : . ' , globals found: [0] 
[08:07:20.190] | : . ' Searching for globals ... done
[08:07:20.190] | : . ' globals: [0] <none>
[08:07:20.190] | : . ' packages: [0] <none>
[08:07:20.190] | : . getGlobalsAndPackages() ... done
[08:07:20.190] | : .    + additional globals found: [n=0] 
[08:07:20.190] | : .    + additional namespaces needed: [n=0] 
[08:07:20.190] | : .  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:20.190] | : .  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:20.190] | : .  - seeds: <none>
[08:07:20.190] | : .  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.191] | : . future(..., label = ‘future_lapply-1’) ...
[08:07:20.191] | : . ' lazy: FALSE
[08:07:20.191] | : . ' stdout: FALSE
[08:07:20.191] | : . ' conditions: [n=1] ‘condition’
[08:07:20.191] | : . ' gc: FALSE
[08:07:20.191] | : . ' earlySignal: FALSE
[08:07:20.191] | : . ' getGlobalsAndPackages() ...
[08:07:20.191] | : . ' , globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.191] | : . ' , Resolving globals: FALSE
[08:07:20.191] | : . ' , Tweak future expression to call with '...' arguments ...
[08:07:20.192] | : . ' , ; {
[08:07:20.192] | : . ' , ;     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:20.192] | : . ' , ;     "# expression in do.call(), because function called uses '...'  "
[08:07:20.192] | : . ' , ;     "# as a global variable                                         "
[08:07:20.192] | : . ' , ;     do.call(function(...) {
[08:07:20.192] | : . ' , ;         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:20.192] | : . ' , ;         "# without having an '...' argument. This means '...' is treated"
[08:07:20.192] | : . ' , ;         "# as a global variable. This may happen when FUN() is an       "
[08:07:20.192] | : . ' , ;         "# anonymous function.                                          "
[08:07:20.192] | : . ' , ;         "#                                                              "
[08:07:20.192] | : . ' , ;         "# If an anonymous function, we will make sure to restore the   "
[08:07:20.192] | : . ' , ;         "# function environment of FUN() to the calling environment.    "
[08:07:20.192] | : . ' , ;         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:20.192] | : . ' , ;         "# global environment, which is where globals are written.      "
[08:07:20.192] | : . ' , ;         penv <- env <- environment(...future.FUN)
[08:07:20.192] | : . ' , ;         repeat {
[08:07:20.192] | : . ' , ;             if (identical(env, globalenv()) || identical(env, 
[08:07:20.192] | : . ' , ;                 emptyenv())) 
[08:07:20.192] | : . ' , ;                 break
[08:07:20.192] | : . ' , ;             penv <- env
[08:07:20.192] | : . ' , ;             env <- parent.env(env)
[08:07:20.192] | : . ' , ;         }
[08:07:20.192] | : . ' , ;         if (identical(penv, globalenv())) {
[08:07:20.192] | : . ' , ;             environment(...future.FUN) <- environment()
[08:07:20.192] | : . ' , ;         }
[08:07:20.192] | : . ' , ;         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:20.192] | : . ' , ;             !isNamespace(penv)) {
[08:07:20.192] | : . ' , ;             parent.env(penv) <- environment()
[08:07:20.192] | : . ' , ;         }
[08:07:20.192] | : . ' , ;         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:20.192] | : . ' , ;         {
[08:07:20.192] | : . ' , ;             "# future.apply:::future_xapply(): preserve future option"
[08:07:20.192] | : . ' , ;             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:20.192] | : . ' , ;             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:20.192] | : . ' , ;                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:20.192] | : . ' , ;                 on.exit(options(oopts), add = TRUE)
[08:07:20.192] | : . ' , ;             }
[08:07:20.192] | : . ' , ;             {
[08:07:20.192] | : . ' , ;                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:20.192] | : . ' , ;                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:20.192] | : . ' , ;                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:20.192] | : . ' , ;                   {
[08:07:20.192] | : . ' , ;                     ...future.FUN(...future.X_jj, ...)
[08:07:20.192] | : . ' , ;                   }
[08:07:20.192] | : . ' , ;                 })
[08:07:20.192] | : . ' , ;             }
[08:07:20.192] | : . ' , ;         }
[08:07:20.192] | : . ' , ;     }, args = future.call.arguments)
[08:07:20.192] | : . ' , ; }
[08:07:20.192] | : . ' , Tweak future expression to call with '...' arguments ... done
[08:07:20.192] | : . ' , Search for packages associated with the globals ...
[08:07:20.192] | : . ' , ; Packages associated with globals: [0] 
[08:07:20.193] | : . ' , ; Packages: [0] 
[08:07:20.193] | : . ' , Search for packages associated with the globals ... done
[08:07:20.193] | : . ' , Packages after dropping 'base': [0] 
[08:07:20.193] | : . ' , globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.193] | : . ' , packages: [0] 
[08:07:20.193] | : . ' getGlobalsAndPackages() ... done
[08:07:20.194] | : . ' run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:20.194] | : . ' , state: ‘created’
[08:07:20.194] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.194] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.194] | : . ' , Using MultisessionFutureBackend ...
[08:07:20.194] | : . ' , ; Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:20.194] | : . ' , ; Launching futures ...
[08:07:20.195] | : . ' , ; ` launchFuture() for ClusterFutureBackend ...
[08:07:20.195] | : . ' , ; ` | Workers: [n=2]
[08:07:20.195] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:20.196] | : . ' , ; ` | FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.197] | : . ' , ; ` | requestWorker() ...
[08:07:20.197] | : . ' , ; ` | : requestNode() ...
[08:07:20.197] | : . ' , ; ` | : . Number of workers: 2
[08:07:20.197] | : . ' , ; ` | : . Polling for a free worker ...
[08:07:20.197] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.197] | : . ' , ; ` | : . ' , Created empty registry ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.198] | : . ' , ; ` | : . ' , Listing all futures
[08:07:20.198] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:20.198] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.198] | : . ' , ; ` | : . ' Total time: 0
[08:07:20.198] | : . ' , ; ` | : . Polling for a free worker ... done
[08:07:20.198] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.198] | : . ' , ; ` | : . ' Listing all futures
[08:07:20.198] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:20.198] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.198] | : . ' , ; ` | : . avail: [n=2] ‘1’, ‘2’
[08:07:20.199] | : . ' , ; ` | : . Index of first available worker: 1
[08:07:20.199] | : . ' , ; ` | : . Validate that the worker is functional ...
[08:07:20.269] | : . ' , ; ` | : . ' Worker is functional
[08:07:20.270] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.270] | : . ' , ; ` | : . ' , Listing all futures
[08:07:20.270] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:20.270] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.270] | : . ' , ; ` | : . Validate that the worker is functional ... done
[08:07:20.270] | : . ' , ; ` | : requestNode() ... done
[08:07:20.270] | : . ' , ; ` | : cluster node index: 1
[08:07:20.271] | : . ' , ; ` | requestWorker() ... done
[08:07:20.271] | : . ' , ; ` | eraseGlobalEnvironment() ...
[08:07:20.272] | : . ' , ; ` | eraseGlobalEnvironment() ... done
[08:07:20.272] | : . ' , ; ` | launchFuture() ...
[08:07:20.272] | : . ' , ; ` | : cluster node index: 1
[08:07:20.272] | : . ' , ; ` | : getFutureData() ...
[08:07:20.272] | : . ' , ; ` | : . getFutureCore() ...
[08:07:20.272] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:20.272] | : . ' , ; ` | : . getFutureCore() ... done
[08:07:20.272] | : . ' , ; ` | : . getFutureCapture() ...
[08:07:20.272] | : . ' , ; ` | : . getFutureCapture() ... done
[08:07:20.273] | : . ' , ; ` | : . getFutureContext() ...
[08:07:20.273] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.273] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:07:20.273] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.273] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:07:20.273] | : . ' , ; ` | : . getFutureContext() ... done
[08:07:20.273] | : . ' , ; ` | : getFutureData() ... done
[08:07:20.274] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:20.274] | : . ' , ; ` | : . Appended future to position #1
[08:07:20.274] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:20.274] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:20.274] | : . ' , ; ` | launchFuture() ... done
[08:07:20.274] | : . ' , ; ` | MultisessionFuture started
[08:07:20.275] | : . ' , ; ` launchFuture() for ClusterFutureBackend ... done
[08:07:20.275] | : . ' , ; Launching futures ... done
[08:07:20.275] | : . ' , ; Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:20.275] | : . ' , Using MultisessionFutureBackend ... done
[08:07:20.275] | : . ' run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:20.275] | : . future(..., label = ‘future_lapply-1’) ... done
[08:07:20.275] | : . Created future:
[08:07:20.276] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.277] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.277] | : . ' assertValidConnection() ...
[08:07:20.277] | : . ' , cluster node index: 1
[08:07:20.278] | : . ' assertValidConnection() ... done
[08:07:20.288] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.288] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.275] | : . MultisessionFuture:
[08:07:20.275] | : . Label: ‘future_lapply-1’
[08:07:20.275] | : . Expression:
[08:07:20.275] | : . {
[08:07:20.275] | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:20.275] | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:20.275] | : .     "# as a global variable                                         "
[08:07:20.275] | : .     do.call(function(...) {
[08:07:20.275] | : .         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:20.275] | : .         "# without having an '...' argument. This means '...' is treated"
[08:07:20.275] | : .         "# as a global variable. This may happen when FUN() is an       "
[08:07:20.275] | : .         "# anonymous function.                                          "
[08:07:20.275] | : .         "#                                                              "
[08:07:20.275] | : .         "# If an anonymous function, we will make sure to restore the   "
[08:07:20.275] | : .         "# function environment of FUN() to the calling environment.    "
[08:07:20.275] | : .         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:20.275] | : .         "# global environment, which is where globals are written.      "
[08:07:20.275] | : .         penv <- env <- environment(...future.FUN)
[08:07:20.275] | : .         repeat {
[08:07:20.275] | : .             if (identical(env, globalenv()) || identical(env, 
[08:07:20.275] | : .                 emptyenv())) 
[08:07:20.275] | : .                 break
[08:07:20.275] | : .             penv <- env
[08:07:20.275] | : .             env <- parent.env(env)
[08:07:20.275] | : .         }
[08:07:20.275] | : .         if (identical(penv, globalenv())) {
[08:07:20.275] | : .             environment(...future.FUN) <- environment()
[08:07:20.275] | : .         }
[08:07:20.275] | : .         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:20.275] | : .             !isNamespace(penv)) {
[08:07:20.275] | : .             parent.env(penv) <- environment()
[08:07:20.275] | : .         }
[08:07:20.275] | : .         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:20.275] | : .         {
[08:07:20.275] | : .             "# future.apply:::future_xapply(): preserve future option"
[08:07:20.275] | : .             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:20.275] | : .             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:20.275] | : .                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:20.275] | : .                 on.exit(options(oopts), add = TRUE)
[08:07:20.275] | : .             }
[08:07:20.275] | : .             {
[08:07:20.275] | : .                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:20.275] | : .                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:20.275] | : .                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:20.275] | : .                   {
[08:07:20.275] | : .                     ...future.FUN(...future.X_jj, ...)
[08:07:20.275] | : .                   }
[08:07:20.275] | : .                 })
[08:07:20.275] | : .             }
[08:07:20.275] | : .         }
[08:07:20.275] | : .     }, args = future.call.arguments)
[08:07:20.275] | : . }
[08:07:20.275] | : . Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:20.275] | : . Packages: <none>
[08:07:20.275] | : . L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:20.275] | : . Capture standard output: FALSE
[08:07:20.275] | : . Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:20.275] | : . Immediate condition classes: ‘immediateCondition’
[08:07:20.275] | : . Lazy evaluation: FALSE
[08:07:20.275] | : . Local evaluation: TRUE
[08:07:20.275] | : . Asynchronous evaluation: TRUE
[08:07:20.275] | : . Early signaling: FALSE
[08:07:20.275] | : . Environment: R_GlobalEnv
[08:07:20.275] | : . State: ‘running’
[08:07:20.275] | : . Resolved: FALSE
[08:07:20.275] | : . Unique identifier: e64dd8772be5ab339364b28950120fcc-19
[08:07:20.275] | : . Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:20.275] | : . Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:20.275] | : . Value: <not collected>
[08:07:20.275] | : . Conditions captured: <none>
[08:07:20.289] | : . Chunk #1 of 2 ... DONE
[08:07:20.289] | : . Chunk #2 of 2 ...
[08:07:20.289] | : .  - Finding globals in 'X' for chunk #2 ...
[08:07:20.289] | : . getGlobalsAndPackages() ...
[08:07:20.289] | : . ' Searching for globals ...
[08:07:20.290] | : . ' , globals found: [0] 
[08:07:20.290] | : . ' Searching for globals ... done
[08:07:20.290] | : . ' globals: [0] <none>
[08:07:20.290] | : . ' packages: [0] <none>
[08:07:20.290] | : . getGlobalsAndPackages() ... done
[08:07:20.290] | : .    + additional globals found: [n=0] 
[08:07:20.290] | : .    + additional namespaces needed: [n=0] 
[08:07:20.290] | : .  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:20.290] | : .  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:20.291] | : .  - seeds: <none>
[08:07:20.291] | : .  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.291] | : . future(..., label = ‘future_lapply-2’) ...
[08:07:20.291] | : . ' lazy: FALSE
[08:07:20.291] | : . ' stdout: FALSE
[08:07:20.291] | : . ' conditions: [n=1] ‘condition’
[08:07:20.291] | : . ' gc: FALSE
[08:07:20.291] | : . ' earlySignal: FALSE
[08:07:20.291] | : . ' getGlobalsAndPackages() ...
[08:07:20.291] | : . ' , globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.292] | : . ' , Resolving globals: FALSE
[08:07:20.292] | : . ' , Tweak future expression to call with '...' arguments ...
[08:07:20.292] | : . ' , ; {
[08:07:20.292] | : . ' , ;     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:20.292] | : . ' , ;     "# expression in do.call(), because function called uses '...'  "
[08:07:20.292] | : . ' , ;     "# as a global variable                                         "
[08:07:20.292] | : . ' , ;     do.call(function(...) {
[08:07:20.292] | : . ' , ;         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:20.292] | : . ' , ;         "# without having an '...' argument. This means '...' is treated"
[08:07:20.292] | : . ' , ;         "# as a global variable. This may happen when FUN() is an       "
[08:07:20.292] | : . ' , ;         "# anonymous function.                                          "
[08:07:20.292] | : . ' , ;         "#                                                              "
[08:07:20.292] | : . ' , ;         "# If an anonymous function, we will make sure to restore the   "
[08:07:20.292] | : . ' , ;         "# function environment of FUN() to the calling environment.    "
[08:07:20.292] | : . ' , ;         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:20.292] | : . ' , ;         "# global environment, which is where globals are written.      "
[08:07:20.292] | : . ' , ;         penv <- env <- environment(...future.FUN)
[08:07:20.292] | : . ' , ;         repeat {
[08:07:20.292] | : . ' , ;             if (identical(env, globalenv()) || identical(env, 
[08:07:20.292] | : . ' , ;                 emptyenv())) 
[08:07:20.292] | : . ' , ;                 break
[08:07:20.292] | : . ' , ;             penv <- env
[08:07:20.292] | : . ' , ;             env <- parent.env(env)
[08:07:20.292] | : . ' , ;         }
[08:07:20.292] | : . ' , ;         if (identical(penv, globalenv())) {
[08:07:20.292] | : . ' , ;             environment(...future.FUN) <- environment()
[08:07:20.292] | : . ' , ;         }
[08:07:20.292] | : . ' , ;         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:20.292] | : . ' , ;             !isNamespace(penv)) {
[08:07:20.292] | : . ' , ;             parent.env(penv) <- environment()
[08:07:20.292] | : . ' , ;         }
[08:07:20.292] | : . ' , ;         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:20.292] | : . ' , ;         {
[08:07:20.292] | : . ' , ;             "# future.apply:::future_xapply(): preserve future option"
[08:07:20.292] | : . ' , ;             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:20.292] | : . ' , ;             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:20.292] | : . ' , ;                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:20.292] | : . ' , ;                 on.exit(options(oopts), add = TRUE)
[08:07:20.292] | : . ' , ;             }
[08:07:20.292] | : . ' , ;             {
[08:07:20.292] | : . ' , ;                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:20.292] | : . ' , ;                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:20.292] | : . ' , ;                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:20.292] | : . ' , ;                   {
[08:07:20.292] | : . ' , ;                     ...future.FUN(...future.X_jj, ...)
[08:07:20.292] | : . ' , ;                   }
[08:07:20.292] | : . ' , ;                 })
[08:07:20.292] | : . ' , ;             }
[08:07:20.292] | : . ' , ;         }
[08:07:20.292] | : . ' , ;     }, args = future.call.arguments)
[08:07:20.292] | : . ' , ; }
[08:07:20.292] | : . ' , Tweak future expression to call with '...' arguments ... done
[08:07:20.292] | : . ' , Search for packages associated with the globals ...
[08:07:20.293] | : . ' , ; Packages associated with globals: [0] 
[08:07:20.293] | : . ' , ; Packages: [0] 
[08:07:20.293] | : . ' , Search for packages associated with the globals ... done
[08:07:20.293] | : . ' , Packages after dropping 'base': [0] 
[08:07:20.293] | : . ' , globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.293] | : . ' , packages: [0] 
[08:07:20.293] | : . ' getGlobalsAndPackages() ... done
[08:07:20.294] | : . ' run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:20.294] | : . ' , state: ‘created’
[08:07:20.294] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.294] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.294] | : . ' , Using MultisessionFutureBackend ...
[08:07:20.294] | : . ' , ; Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:20.294] | : . ' , ; Launching futures ...
[08:07:20.295] | : . ' , ; ` launchFuture() for ClusterFutureBackend ...
[08:07:20.295] | : . ' , ; ` | Workers: [n=2]
[08:07:20.295] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:20.296] | : . ' , ; ` | FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.297] | : . ' , ; ` | requestWorker() ...
[08:07:20.297] | : . ' , ; ` | : requestNode() ...
[08:07:20.297] | : . ' , ; ` | : . Number of workers: 2
[08:07:20.297] | : . ' , ; ` | : . Polling for a free worker ...
[08:07:20.297] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.297] | : . ' , ; ` | : . ' , Listing all futures
[08:07:20.297] | : . ' , ; ` | : . ' , Number of registered futures: 1
[08:07:20.297] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.297] | : . ' , ; ` | : . ' Total time: 0
[08:07:20.298] | : . ' , ; ` | : . Polling for a free worker ... done
[08:07:20.298] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.298] | : . ' , ; ` | : . ' Listing all futures
[08:07:20.298] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:20.298] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.298] | : . ' , ; ` | : . avail: [n=2] ‘2’
[08:07:20.298] | : . ' , ; ` | : . Index of first available worker: 2
[08:07:20.298] | : . ' , ; ` | : . Validate that the worker is functional ...
[08:07:20.382] | : . ' , ; ` | : . ' Worker is functional
[08:07:20.382] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.383] | : . ' , ; ` | : . ' , Listing all futures
[08:07:20.383] | : . ' , ; ` | : . ' , Number of registered futures: 1
[08:07:20.383] | : . ' , ; ` | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.385] | : . ' , ; ` | : . Validate that the worker is functional ... done
[08:07:20.385] | : . ' , ; ` | : requestNode() ... done
[08:07:20.386] | : . ' , ; ` | : cluster node index: 2
[08:07:20.386] | : . ' , ; ` | requestWorker() ... done
[08:07:20.386] | : . ' , ; ` | eraseGlobalEnvironment() ...
[08:07:20.386] | : . ' , ; ` | eraseGlobalEnvironment() ... done
[08:07:20.386] | : . ' , ; ` | launchFuture() ...
[08:07:20.387] | : . ' , ; ` | : cluster node index: 2
[08:07:20.387] | : . ' , ; ` | : getFutureData() ...
[08:07:20.387] | : . ' , ; ` | : . getFutureCore() ...
[08:07:20.387] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:20.387] | : . ' , ; ` | : . getFutureCore() ... done
[08:07:20.387] | : . ' , ; ` | : . getFutureCapture() ...
[08:07:20.387] | : . ' , ; ` | : . getFutureCapture() ... done
[08:07:20.387] | : . ' , ; ` | : . getFutureContext() ...
[08:07:20.387] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.388] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:07:20.388] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.388] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:07:20.388] | : . ' , ; ` | : . getFutureContext() ... done
[08:07:20.388] | : . ' , ; ` | : getFutureData() ... done
[08:07:20.388] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:20.389] | : . ' , ; ` | : . Appended future to position #2
[08:07:20.389] | : . ' , ; ` | : . Number of registered futures: 2
[08:07:20.389] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:20.389] | : . ' , ; ` | launchFuture() ... done
[08:07:20.389] | : . ' , ; ` | MultisessionFuture started
[08:07:20.389] | : . ' , ; ` launchFuture() for ClusterFutureBackend ... done
[08:07:20.389] | : . ' , ; Launching futures ... done
[08:07:20.389] | : . ' , ; Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:20.389] | : . ' , Using MultisessionFutureBackend ... done
[08:07:20.389] | : . ' run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:20.390] | : . future(..., label = ‘future_lapply-2’) ... done
[08:07:20.390] | : . Created future:
[08:07:20.391] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.391] | : . ' Cluster node socket connection: index=5, id=730
[08:07:20.391] | : . ' assertValidConnection() ...
[08:07:20.391] | : . ' , cluster node index: 2
[08:07:20.392] | : . ' assertValidConnection() ... done
[08:07:20.402] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.402] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.390] | : . MultisessionFuture:
[08:07:20.390] | : . Label: ‘future_lapply-2’
[08:07:20.390] | : . Expression:
[08:07:20.390] | : . {
[08:07:20.390] | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:20.390] | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:20.390] | : .     "# as a global variable                                         "
[08:07:20.390] | : .     do.call(function(...) {
[08:07:20.390] | : .         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:20.390] | : .         "# without having an '...' argument. This means '...' is treated"
[08:07:20.390] | : .         "# as a global variable. This may happen when FUN() is an       "
[08:07:20.390] | : .         "# anonymous function.                                          "
[08:07:20.390] | : .         "#                                                              "
[08:07:20.390] | : .         "# If an anonymous function, we will make sure to restore the   "
[08:07:20.390] | : .         "# function environment of FUN() to the calling environment.    "
[08:07:20.390] | : .         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:20.390] | : .         "# global environment, which is where globals are written.      "
[08:07:20.390] | : .         penv <- env <- environment(...future.FUN)
[08:07:20.390] | : .         repeat {
[08:07:20.390] | : .             if (identical(env, globalenv()) || identical(env, 
[08:07:20.390] | : .                 emptyenv())) 
[08:07:20.390] | : .                 break
[08:07:20.390] | : .             penv <- env
[08:07:20.390] | : .             env <- parent.env(env)
[08:07:20.390] | : .         }
[08:07:20.390] | : .         if (identical(penv, globalenv())) {
[08:07:20.390] | : .             environment(...future.FUN) <- environment()
[08:07:20.390] | : .         }
[08:07:20.390] | : .         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:20.390] | : .             !isNamespace(penv)) {
[08:07:20.390] | : .             parent.env(penv) <- environment()
[08:07:20.390] | : .         }
[08:07:20.390] | : .         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:20.390] | : .         {
[08:07:20.390] | : .             "# future.apply:::future_xapply(): preserve future option"
[08:07:20.390] | : .             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:20.390] | : .             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:20.390] | : .                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:20.390] | : .                 on.exit(options(oopts), add = TRUE)
[08:07:20.390] | : .             }
[08:07:20.390] | : .             {
[08:07:20.390] | : .                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:20.390] | : .                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:20.390] | : .                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:20.390] | : .                   {
[08:07:20.390] | : .                     ...future.FUN(...future.X_jj, ...)
[08:07:20.390] | : .                   }
[08:07:20.390] | : .                 })
[08:07:20.390] | : .             }
[08:07:20.390] | : .         }
[08:07:20.390] | : .     }, args = future.call.arguments)
[08:07:20.390] | : . }
[08:07:20.390] | : . Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:20.390] | : . Packages: <none>
[08:07:20.390] | : . L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:20.390] | : . Capture standard output: FALSE
[08:07:20.390] | : . Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:20.390] | : . Immediate condition classes: ‘immediateCondition’
[08:07:20.390] | : . Lazy evaluation: FALSE
[08:07:20.390] | : . Local evaluation: TRUE
[08:07:20.390] | : . Asynchronous evaluation: TRUE
[08:07:20.390] | : . Early signaling: FALSE
[08:07:20.390] | : . Environment: R_GlobalEnv
[08:07:20.390] | : . State: ‘running’
[08:07:20.390] | : . Resolved: FALSE
[08:07:20.390] | : . Unique identifier: e64dd8772be5ab339364b28950120fcc-20
[08:07:20.390] | : . Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:20.390] | : . Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:20.390] | : . Value: <not collected>
[08:07:20.390] | : . Conditions captured: <none>
[08:07:20.403] | : . Chunk #2 of 2 ... DONE
[08:07:20.403] | : . Launching 2 futures (chunks) ... DONE
[08:07:20.403] | : . Resolving 2 futures (chunks) ...
[08:07:20.403] | : . value() for list ...
[08:07:20.403] | : . ' recursive: 0
[08:07:20.403] | : . ' reduce: FALSE
[08:07:20.403] | : . ' length: 2

[08:07:20.404] | : . ' Number of remaining objects: 2
[08:07:20.404] | : . ' checking value #1:
[08:07:20.404] | : . ' 'obj' is MultisessionFuture
[08:07:20.404] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.404] | : . ' , Cluster node socket connection: index=4, id=729
[08:07:20.404] | : . ' , assertValidConnection() ...
[08:07:20.404] | : . ' , ; cluster node index: 1
[08:07:20.405] | : . ' , assertValidConnection() ... done
[08:07:20.415] | : . ' , socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.415] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.415] | : . ' checking value #2:
[08:07:20.415] | : . ' 'obj' is MultisessionFuture
[08:07:20.415] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.416] | : . ' , Cluster node socket connection: index=5, id=730
[08:07:20.416] | : . ' , assertValidConnection() ...
[08:07:20.416] | : . ' , ; cluster node index: 2
[08:07:20.416] | : . ' , assertValidConnection() ... done
[08:07:20.426] | : . ' , socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.426] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.437] | : . ' Number of remaining objects: 2
[08:07:20.437] | : . ' checking value #1:
[08:07:20.437] | : . ' 'obj' is MultisessionFuture
[08:07:20.437] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.438] | : . ' , Cluster node socket connection: index=4, id=729
[08:07:20.438] | : . ' , assertValidConnection() ...
[08:07:20.438] | : . ' , ; cluster node index: 1
[08:07:20.439] | : . ' , assertValidConnection() ... done
[08:07:20.449] | : . ' , socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.449] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.449] | : . ' checking value #2:
[08:07:20.450] | : . ' 'obj' is MultisessionFuture
[08:07:20.450] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.450] | : . ' , Cluster node socket connection: index=5, id=730
[08:07:20.451] | : . ' , assertValidConnection() ...
[08:07:20.451] | : . ' , ; cluster node index: 2
[08:07:20.451] | : . ' , assertValidConnection() ... done
[08:07:20.462] | : . ' , socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.462] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.472] | : . ' Number of remaining objects: 2
[08:07:20.472] | : . ' checking value #1:
[08:07:20.473] | : . ' 'obj' is MultisessionFuture
[08:07:20.473] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.473] | : . ' , Cluster node socket connection: index=4, id=729
[08:07:20.474] | : . ' , assertValidConnection() ...
[08:07:20.474] | : . ' , ; cluster node index: 1
[08:07:20.474] | : . ' , assertValidConnection() ... done
[08:07:20.485] | : . ' , socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.485] | : . ' resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.485] | : . ' checking value #2:
[08:07:20.485] | : . ' 'obj' is MultisessionFuture
[08:07:20.485] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.486] | : . ' , Cluster node socket connection: index=5, id=730
[08:07:20.486] | : . ' , assertValidConnection() ...
[08:07:20.486] | : . ' , ; cluster node index: 2
[08:07:20.486] | : . ' , assertValidConnection() ... done
[08:07:20.487] | : . ' , receiveMessageFromWorker() for ClusterFuture ...
[08:07:20.487] | : . ' , ; cluster node index: 2
[08:07:20.487] | : . ' , ; [1] TRUE
[08:07:20.487] | : . ' , ; received data:
[08:07:20.488] | : . ' , ; List of 5
[08:07:20.488] | : . ' , ;  $ type   : chr "VALUE"
[08:07:20.488] | : . ' , ;  $ value  :List of 16
[08:07:20.488] | : . ' , ;   ..$ value              :List of 1
[08:07:20.488] | : . ' , ;   .. ..$ : int 0
[08:07:20.488] | : . ' , ;   ..$ visible            : logi TRUE
[08:07:20.488] | : . ' , ;   ..$ stdout             : NULL
[08:07:20.488] | : . ' , ;   ..$ conditions         : list()
[08:07:20.488] | : . ' , ;   ..$ rng                : logi FALSE
[08:07:20.488] | : . ' , ;   ..$ seed               : NULL
[08:07:20.488] | : . ' , ;   ..$ misuseGlobalEnv    : NULL
[08:07:20.488] | : . ' , ;   ..$ misuseConnections  :List of 3
[08:07:20.488] | : . ' , ;   .. ..$ added   : NULL
[08:07:20.488] | : . ' , ;   .. ..$ removed : NULL
[08:07:20.488] | : . ' , ;   .. ..$ replaced: NULL
[08:07:20.488] | : . ' , ;   ..$ misuseDevices      : NULL
[08:07:20.488] | : . ' , ;   ..$ misuseDefaultDevice: list()
[08:07:20.488] | : . ' , ;   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.488] | : . ' , ;   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.488] | : . ' , ;   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "20"
[08:07:20.488] | : . ' , ;   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:20.488] | : . ' , ;   .. ..- attr(*, "source")=List of 5
[08:07:20.488] | : . ' , ;   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:20.488] | : . ' , ;   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:20.488] | : . ' , ;   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:20.488] | : . ' , ;   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:20.488] | : . ' , ;   .. .. ..$ pid   : int 65490
[08:07:20.488] | : . ' , ;   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.488] | : . ' , ;   .. .. ..$ random: int 2147483647
[08:07:20.488] | : . ' , ;   ..$ r_info             :List of 4
[08:07:20.488] | : . ' , ;   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:20.488] | : . ' , ;   .. .. ..$ : int [1:3] 4 5 0
[08:07:20.488] | : . ' , ;   .. ..$ os           : chr "unix"
[08:07:20.488] | : . ' , ;   .. ..$ os_name      : chr "Linux"
[08:07:20.488] | : . ' , ;   .. ..$ captures_utf8: logi TRUE
[08:07:20.488] | : . ' , ;   ..$ version            : chr "1.8"
[08:07:20.488] | : . ' , ;   ..- attr(*, "class")= chr "FutureResult"
[08:07:20.488] | : . ' , ;  $ success: logi TRUE
[08:07:20.488] | : . ' , ;  $ time   : 'proc_time' Named num [1:5] 0.055 0.001 0.056 0 0
[08:07:20.488] | : . ' , ;   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:20.488] | : . ' , ;  $ tag    : NULL
[08:07:20.499] | : . ' , ; Received FutureResult
[08:07:20.499] | : . ' , ; FutureResult:
[08:07:20.499] | : . ' , ; value: ‘list’
[08:07:20.499] | : . ' , ; visible: TRUE
[08:07:20.499] | : . ' , ; stdout: NULL
[08:07:20.499] | : . ' , ; conditions: [n = 0] 
[08:07:20.499] | : . ' , ; RNG used: FALSE
[08:07:20.499] | : . ' , ; duration: 0.05417061 secs (started 2025-06-17 08:07:20.430582)
[08:07:20.499] | : . ' , ; version: 1.8
[08:07:20.500] | : . ' , ; FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:20.500] | : . ' , ; ` Removed future from position #2
[08:07:20.500] | : . ' , ; ` Number of registered futures: 1
[08:07:20.500] | : . ' , ; FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:20.500] | : . ' , ; Erased future from future backend
[08:07:20.500] | : . ' , ; result() for ClusterFuture ...
[08:07:20.501] | : . ' , ; ` result already collected: FutureResult
[08:07:20.501] | : . ' , ; result() for ClusterFuture ... done
[08:07:20.501] | : . ' , ; signalConditions() ...
[08:07:20.501] | : . ' , ; ` include = ‘immediateCondition’
[08:07:20.501] | : . ' , ; ` exclude = 
[08:07:20.501] | : . ' , ; ` resignal = FALSE
[08:07:20.501] | : . ' , ; ` Number of conditions: 0
[08:07:20.501] | : . ' , ; `  int 0
[08:07:20.502] | : . ' , ; signalConditions() ... done
[08:07:20.502] | : . ' , receiveMessageFromWorker() for ClusterFuture ... done
[08:07:20.502] | : . ' , receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:20.502] | : . ' resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.502] | : . ' assertFutureResult() ...
[08:07:20.502] | : . ' , Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:20.502] | : . ' , Future uuid: 20
[08:07:20.502] | : . ' , identical; success
[08:07:20.502] | : . ' assertFutureResult() ... done
[08:07:20.502] | : . ' MultisessionFuture #2
[08:07:20.502] | : . ' signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:20.503] | : . ' , nx: 2
[08:07:20.503] | : . ' , relay: TRUE
[08:07:20.503] | : . ' , stdout: TRUE
[08:07:20.503] | : . ' , signal: TRUE
[08:07:20.503] | : . ' , resignal: FALSE
[08:07:20.503] | : . ' , force: TRUE
[08:07:20.503] | : . ' , relayed: [n=2] FALSE, FALSE
[08:07:20.503] | : . ' , queued futures: [n=2] FALSE, FALSE
[08:07:20.503] | : . ' , until=1
[08:07:20.503] | : . ' , relaying element #1
[08:07:20.503] | : . ' , relayed: [n=2] FALSE, FALSE
[08:07:20.504] | : . ' , queued futures: [n=2] FALSE, TRUE
[08:07:20.504] | : . ' signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:20.504] | : . ' value(<MultisessionFuture>, ...) ...
[08:07:20.504] | : . ' value(<MultisessionFuture>, ...) ... done
[08:07:20.504] | : . ' value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.504] | : . ' , result() for ClusterFuture ...
[08:07:20.504] | : . ' , ; result already collected: FutureResult
[08:07:20.504] | : . ' , result() for ClusterFuture ... done
[08:07:20.504] | : . ' , result() for ClusterFuture ...
[08:07:20.505] | : . ' , ; result already collected: FutureResult
[08:07:20.505] | : . ' , result() for ClusterFuture ... done
[08:07:20.505] | : . ' , signalConditions() ...
[08:07:20.505] | : . ' , ; include = ‘immediateCondition’
[08:07:20.505] | : . ' , ; exclude = 
[08:07:20.505] | : . ' , ; resignal = FALSE
[08:07:20.505] | : . ' , ; Number of conditions: 0
[08:07:20.505] | : . ' , ;  int 0
[08:07:20.506] | : . ' , signalConditions() ... done
[08:07:20.506] | : . ' , check for misuse ...
[08:07:20.506] | : . ' , check for misuse ... done
[08:07:20.506] | : . ' value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.506] | : . ' value: <list>
[08:07:20.506] | : . ' signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:20.506] | : . ' , nx: 2
[08:07:20.506] | : . ' , relay: TRUE
[08:07:20.506] | : . ' , stdout: TRUE
[08:07:20.506] | : . ' , signal: TRUE
[08:07:20.507] | : . ' , resignal: FALSE
[08:07:20.507] | : . ' , force: TRUE
[08:07:20.507] | : . ' , relayed: [n=2] FALSE, FALSE
[08:07:20.507] | : . ' , queued futures: [n=2] FALSE, TRUE
[08:07:20.507] | : . ' , until=1
[08:07:20.507] | : . ' , relaying element #1
[08:07:20.507] | : . ' , relayed: [n=2] FALSE, FALSE
[08:07:20.507] | : . ' , queued futures: [n=2] FALSE, TRUE
[08:07:20.507] | : . ' signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:20.507] | : . ' resolve() for MultisessionFuture ...
[08:07:20.508] | : . ' resolve() for MultisessionFuture ... done
[08:07:20.508] | : . ' length: 1 (resolved future 2)
[08:07:20.508] | : . value() for list ... done
[08:07:20.518] | : . Number of remaining objects: 1
[08:07:20.518] | : . checking value #1:
[08:07:20.518] | : . 'obj' is MultisessionFuture
[08:07:20.518] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.519] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.519] | : . ' assertValidConnection() ...
[08:07:20.519] | : . ' , cluster node index: 1
[08:07:20.519] | : . ' assertValidConnection() ... done
[08:07:20.530] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.530] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.540] | : . Number of remaining objects: 1
[08:07:20.540] | : . checking value #1:
[08:07:20.540] | : . 'obj' is MultisessionFuture
[08:07:20.540] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.541] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.541] | : . ' assertValidConnection() ...
[08:07:20.541] | : . ' , cluster node index: 1
[08:07:20.541] | : . ' assertValidConnection() ... done
[08:07:20.552] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.552] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.562] | : . Number of remaining objects: 1
[08:07:20.562] | : . checking value #1:
[08:07:20.562] | : . 'obj' is MultisessionFuture
[08:07:20.562] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.562] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.563] | : . ' assertValidConnection() ...
[08:07:20.563] | : . ' , cluster node index: 1
[08:07:20.563] | : . ' assertValidConnection() ... done
[08:07:20.573] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.573] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.584] | : . Number of remaining objects: 1
[08:07:20.584] | : . checking value #1:
[08:07:20.584] | : . 'obj' is MultisessionFuture
[08:07:20.584] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.584] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.584] | : . ' assertValidConnection() ...
[08:07:20.585] | : . ' , cluster node index: 1
[08:07:20.585] | : . ' assertValidConnection() ... done
[08:07:20.595] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.595] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.605] | : . Number of remaining objects: 1
[08:07:20.606] | : . checking value #1:
[08:07:20.606] | : . 'obj' is MultisessionFuture
[08:07:20.606] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.606] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.606] | : . ' assertValidConnection() ...
[08:07:20.606] | : . ' , cluster node index: 1
[08:07:20.607] | : . ' assertValidConnection() ... done
[08:07:20.617] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.617] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.627] | : . Number of remaining objects: 1
[08:07:20.627] | : . checking value #1:
[08:07:20.628] | : . 'obj' is MultisessionFuture
[08:07:20.628] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.628] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.628] | : . ' assertValidConnection() ...
[08:07:20.628] | : . ' , cluster node index: 1
[08:07:20.629] | : . ' assertValidConnection() ... done
[08:07:20.639] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.639] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.649] | : . Number of remaining objects: 1
[08:07:20.649] | : . checking value #1:
[08:07:20.649] | : . 'obj' is MultisessionFuture
[08:07:20.650] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.650] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.650] | : . ' assertValidConnection() ...
[08:07:20.650] | : . ' , cluster node index: 1
[08:07:20.650] | : . ' assertValidConnection() ... done
[08:07:20.660] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.661] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.671] | : . Number of remaining objects: 1
[08:07:20.671] | : . checking value #1:
[08:07:20.671] | : . 'obj' is MultisessionFuture
[08:07:20.671] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.672] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.672] | : . ' assertValidConnection() ...
[08:07:20.672] | : . ' , cluster node index: 1
[08:07:20.672] | : . ' assertValidConnection() ... done
[08:07:20.682] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.682] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.693] | : . Number of remaining objects: 1
[08:07:20.693] | : . checking value #1:
[08:07:20.693] | : . 'obj' is MultisessionFuture
[08:07:20.693] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.693] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.694] | : . ' assertValidConnection() ...
[08:07:20.694] | : . ' , cluster node index: 1
[08:07:20.694] | : . ' assertValidConnection() ... done
[08:07:20.704] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.704] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.715] | : . Number of remaining objects: 1
[08:07:20.715] | : . checking value #1:
[08:07:20.715] | : . 'obj' is MultisessionFuture
[08:07:20.715] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.715] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.715] | : . ' assertValidConnection() ...
[08:07:20.716] | : . ' , cluster node index: 1
[08:07:20.716] | : . ' assertValidConnection() ... done
[08:07:20.726] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.726] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.736] | : . Number of remaining objects: 1
[08:07:20.737] | : . checking value #1:
[08:07:20.737] | : . 'obj' is MultisessionFuture
[08:07:20.737] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.737] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.737] | : . ' assertValidConnection() ...
[08:07:20.737] | : . ' , cluster node index: 1
[08:07:20.738] | : . ' assertValidConnection() ... done
[08:07:20.748] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.748] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.758] | : . Number of remaining objects: 1
[08:07:20.758] | : . checking value #1:
[08:07:20.758] | : . 'obj' is MultisessionFuture
[08:07:20.759] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.759] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.759] | : . ' assertValidConnection() ...
[08:07:20.759] | : . ' , cluster node index: 1
[08:07:20.759] | : . ' assertValidConnection() ... done
[08:07:20.770] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.770] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.780] | : . Number of remaining objects: 1
[08:07:20.780] | : . checking value #1:
[08:07:20.780] | : . 'obj' is MultisessionFuture
[08:07:20.780] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.781] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.781] | : . ' assertValidConnection() ...
[08:07:20.781] | : . ' , cluster node index: 1
[08:07:20.781] | : . ' assertValidConnection() ... done
[08:07:20.791] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.792] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.802] | : . Number of remaining objects: 1
[08:07:20.802] | : . checking value #1:
[08:07:20.802] | : . 'obj' is MultisessionFuture
[08:07:20.802] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.803] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.803] | : . ' assertValidConnection() ...
[08:07:20.803] | : . ' , cluster node index: 1
[08:07:20.803] | : . ' assertValidConnection() ... done
[08:07:20.814] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.814] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.824] | : . Number of remaining objects: 1
[08:07:20.824] | : . checking value #1:
[08:07:20.824] | : . 'obj' is MultisessionFuture
[08:07:20.824] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.825] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.825] | : . ' assertValidConnection() ...
[08:07:20.825] | : . ' , cluster node index: 1
[08:07:20.825] | : . ' assertValidConnection() ... done
[08:07:20.835] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.836] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.846] | : . Number of remaining objects: 1
[08:07:20.846] | : . checking value #1:
[08:07:20.846] | : . 'obj' is MultisessionFuture
[08:07:20.846] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.847] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.847] | : . ' assertValidConnection() ...
[08:07:20.847] | : . ' , cluster node index: 1
[08:07:20.847] | : . ' assertValidConnection() ... done
[08:07:20.858] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.858] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.868] | : . Number of remaining objects: 1
[08:07:20.868] | : . checking value #1:
[08:07:20.868] | : . 'obj' is MultisessionFuture
[08:07:20.868] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.869] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.869] | : . ' assertValidConnection() ...
[08:07:20.869] | : . ' , cluster node index: 1
[08:07:20.869] | : . ' assertValidConnection() ... done
[08:07:20.880] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:20.880] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.890] | : . Number of remaining objects: 1
[08:07:20.890] | : . checking value #1:
[08:07:20.890] | : . 'obj' is MultisessionFuture
[08:07:20.890] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.891] | : . ' Cluster node socket connection: index=4, id=729
[08:07:20.891] | : . ' assertValidConnection() ...
[08:07:20.891] | : . ' , cluster node index: 1
[08:07:20.891] | : . ' assertValidConnection() ... done
[08:07:20.891] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:20.892] | : . ' , cluster node index: 1
[08:07:20.892] | : . ' , [1] TRUE
[08:07:20.892] | : . ' , received data:
[08:07:20.892] | : . ' , List of 5
[08:07:20.892] | : . ' ,  $ type   : chr "VALUE"
[08:07:20.892] | : . ' ,  $ value  :List of 16
[08:07:20.892] | : . ' ,   ..$ value              :List of 1
[08:07:20.892] | : . ' ,   .. ..$ : int 1
[08:07:20.892] | : . ' ,   ..$ visible            : logi TRUE
[08:07:20.892] | : . ' ,   ..$ stdout             : NULL
[08:07:20.892] | : . ' ,   ..$ conditions         : list()
[08:07:20.892] | : . ' ,   ..$ rng                : logi FALSE
[08:07:20.892] | : . ' ,   ..$ seed               : NULL
[08:07:20.892] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:20.892] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:20.892] | : . ' ,   .. ..$ added   : NULL
[08:07:20.892] | : . ' ,   .. ..$ removed : NULL
[08:07:20.892] | : . ' ,   .. ..$ replaced: NULL
[08:07:20.892] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:20.892] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:20.892] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.892] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.892] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "19"
[08:07:20.892] | : . ' ,   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:20.892] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:20.892] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:20.892] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:20.892] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:20.892] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:20.892] | : . ' ,   .. .. ..$ pid   : int 65491
[08:07:20.892] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:20.892] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:20.892] | : . ' ,   ..$ r_info             :List of 4
[08:07:20.892] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:20.892] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:20.892] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:20.892] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:20.892] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:20.892] | : . ' ,   ..$ version            : chr "1.8"
[08:07:20.892] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:20.892] | : . ' ,  $ success: logi TRUE
[08:07:20.892] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.068 0.001 0.571 0 0
[08:07:20.892] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:20.892] | : . ' ,  $ tag    : NULL
[08:07:20.903] | : . ' , Received FutureResult
[08:07:20.904] | : . ' , FutureResult:
[08:07:20.904] | : . ' , value: ‘list’
[08:07:20.904] | : . ' , visible: TRUE
[08:07:20.904] | : . ' , stdout: NULL
[08:07:20.904] | : . ' , conditions: [n = 0] 
[08:07:20.904] | : . ' , RNG used: FALSE
[08:07:20.904] | : . ' , duration: 0.5678852 secs (started 2025-06-17 08:07:20.317328)
[08:07:20.904] | : . ' , version: 1.8
[08:07:20.904] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:20.904] | : . ' , ; Removed future from position #1
[08:07:20.904] | : . ' , ; Number of registered futures: 0
[08:07:20.904] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:20.905] | : . ' , Erased future from future backend
[08:07:20.905] | : . ' , result() for ClusterFuture ...
[08:07:20.905] | : . ' , ; result already collected: FutureResult
[08:07:20.905] | : . ' , result() for ClusterFuture ... done
[08:07:20.905] | : . ' , signalConditions() ...
[08:07:20.905] | : . ' , ; include = ‘immediateCondition’
[08:07:20.905] | : . ' , ; exclude = 
[08:07:20.905] | : . ' , ; resignal = FALSE
[08:07:20.905] | : . ' , ; Number of conditions: 0
[08:07:20.905] | : . ' , ;  int 0
[08:07:20.906] | : . ' , signalConditions() ... done
[08:07:20.906] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:20.906] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:20.906] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.906] | : . assertFutureResult() ...
[08:07:20.906] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:20.906] | : . ' Future uuid: 19
[08:07:20.909] | : . ' identical; success
[08:07:20.909] | : . assertFutureResult() ... done
[08:07:20.909] | : . MultisessionFuture #1
[08:07:20.909] | : . signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:20.909] | : . ' nx: 2
[08:07:20.909] | : . ' relay: TRUE
[08:07:20.909] | : . ' stdout: TRUE
[08:07:20.909] | : . ' signal: TRUE
[08:07:20.909] | : . ' resignal: FALSE
[08:07:20.909] | : . ' force: TRUE
[08:07:20.910] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:20.910] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:20.910] | : . ' until=1
[08:07:20.910] | : . ' relaying element #1
[08:07:20.910] | : . ' value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.910] | : . ' , result() for ClusterFuture ...
[08:07:20.910] | : . ' , ; result already collected: FutureResult
[08:07:20.910] | : . ' , result() for ClusterFuture ... done
[08:07:20.910] | : . ' , result() for ClusterFuture ...
[08:07:20.911] | : . ' , ; result already collected: FutureResult
[08:07:20.911] | : . ' , result() for ClusterFuture ... done
[08:07:20.911] | : . ' , signalConditions() ...
[08:07:20.911] | : . ' , ; include = ‘immediateCondition’
[08:07:20.911] | : . ' , ; exclude = 
[08:07:20.911] | : . ' , ; resignal = FALSE
[08:07:20.911] | : . ' , ; Number of conditions: 0
[08:07:20.911] | : . ' , ;  int 0
[08:07:20.912] | : . ' , signalConditions() ... done
[08:07:20.912] | : . ' , relay stdout ...
[08:07:20.912] | : . ' , relay stdout ... done
[08:07:20.912] | : . ' , check for misuse ...
[08:07:20.912] | : . ' , check for misuse ... done
[08:07:20.912] | : . ' value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.912] | : . ' result() for ClusterFuture ...
[08:07:20.912] | : . ' , result already collected: FutureResult
[08:07:20.912] | : . ' result() for ClusterFuture ... done
[08:07:20.913] | : . ' signalConditions() ...
[08:07:20.913] | : . ' , include = ‘immediateCondition’
[08:07:20.913] | : . ' , exclude = 
[08:07:20.913] | : . ' , resignal = FALSE
[08:07:20.913] | : . ' , Number of conditions: 0
[08:07:20.913] | : . ' ,  int 0
[08:07:20.913] | : . ' signalConditions() ... done
[08:07:20.914] | : . ' result() for ClusterFuture ...
[08:07:20.914] | : . ' , result already collected: FutureResult
[08:07:20.914] | : . ' result() for ClusterFuture ... done
[08:07:20.914] | : . ' signalConditions() ...
[08:07:20.914] | : . ' , include = ‘condition’
[08:07:20.914] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:20.914] | : . ' , resignal = TRUE
[08:07:20.914] | : . ' , Number of conditions: 0
[08:07:20.914] | : . ' ,  int 0
[08:07:20.915] | : . ' signalConditions() ... done
[08:07:20.915] | : . ' relayed: [n=2] TRUE, FALSE
[08:07:20.915] | : . ' queued futures: [n=2] TRUE, TRUE
[08:07:20.915] | : . signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:20.915] | : . value(<MultisessionFuture>, ...) ...
[08:07:20.915] | : . value(<MultisessionFuture>, ...) ... done
[08:07:20.915] | : . value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:20.915] | : . ' result() for ClusterFuture ...
[08:07:20.915] | : . ' , result already collected: FutureResult
[08:07:20.916] | : . ' result() for ClusterFuture ... done
[08:07:20.916] | : . ' result() for ClusterFuture ...
[08:07:20.916] | : . ' , result already collected: FutureResult
[08:07:20.916] | : . ' result() for ClusterFuture ... done
[08:07:20.916] | : . ' signalConditions() ...
[08:07:20.916] | : . ' , include = ‘immediateCondition’
[08:07:20.916] | : . ' , exclude = 
[08:07:20.916] | : . ' , resignal = FALSE
[08:07:20.916] | : . ' , Number of conditions: 0
[08:07:20.916] | : . ' ,  int 0
[08:07:20.917] | : . ' signalConditions() ... done
[08:07:20.917] | : . ' check for misuse ...
[08:07:20.917] | : . ' check for misuse ... done
[08:07:20.917] | : . value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:20.917] | : . value: <list>
[08:07:20.917] | : . signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:20.917] | : . ' nx: 2
[08:07:20.917] | : . ' relay: TRUE
[08:07:20.918] | : . ' stdout: TRUE
[08:07:20.918] | : . ' signal: TRUE
[08:07:20.918] | : . ' resignal: FALSE
[08:07:20.918] | : . ' force: TRUE
[08:07:20.918] | : . ' relayed: [n=2] TRUE, FALSE
[08:07:20.918] | : . ' queued futures: [n=2] TRUE, TRUE
[08:07:20.918] | : . ' until=2
[08:07:20.918] | : . ' relaying element #2
[08:07:20.918] | : . ' value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:20.918] | : . ' , result() for ClusterFuture ...
[08:07:20.919] | : . ' , ; result already collected: FutureResult
[08:07:20.919] | : . ' , result() for ClusterFuture ... done
[08:07:20.919] | : . ' , result() for ClusterFuture ...
[08:07:20.919] | : . ' , ; result already collected: FutureResult
[08:07:20.919] | : . ' , result() for ClusterFuture ... done
[08:07:20.919] | : . ' , signalConditions() ...
[08:07:20.919] | : . ' , ; include = ‘immediateCondition’
[08:07:20.920] | : . ' , ; exclude = 
[08:07:20.920] | : . ' , ; resignal = FALSE
[08:07:20.920] | : . ' , ; Number of conditions: 0
[08:07:20.920] | : . ' , ;  int 0
[08:07:20.920] | : . ' , signalConditions() ... done
[08:07:20.920] | : . ' , relay stdout ...
[08:07:20.920] | : . ' , relay stdout ... done
[08:07:20.920] | : . ' , check for misuse ...
[08:07:20.921] | : . ' , check for misuse ... done
[08:07:20.921] | : . ' value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:20.921] | : . ' result() for ClusterFuture ...
[08:07:20.921] | : . ' , result already collected: FutureResult
[08:07:20.921] | : . ' result() for ClusterFuture ... done
[08:07:20.921] | : . ' signalConditions() ...
[08:07:20.921] | : . ' , include = ‘immediateCondition’
[08:07:20.921] | : . ' , exclude = 
[08:07:20.921] | : . ' , resignal = FALSE
[08:07:20.921] | : . ' , Number of conditions: 0
[08:07:20.922] | : . ' ,  int 0
[08:07:20.922] | : . ' signalConditions() ... done
[08:07:20.922] | : . ' result() for ClusterFuture ...
[08:07:20.922] | : . ' , result already collected: FutureResult
[08:07:20.922] | : . ' result() for ClusterFuture ... done
[08:07:20.922] | : . ' signalConditions() ...
[08:07:20.922] | : . ' , include = ‘condition’
[08:07:20.923] | : . ' , exclude = ‘error’, ‘immediateCondition’
[08:07:20.923] | : . ' , resignal = TRUE
[08:07:20.923] | : . ' , Number of conditions: 0
[08:07:20.923] | : . ' ,  int 0
[08:07:20.923] | : . ' signalConditions() ... done
[08:07:20.923] | : . ' relayed: [n=2] TRUE, TRUE
[08:07:20.923] | : . ' queued futures: [n=2] TRUE, TRUE
[08:07:20.924] | : . signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:20.924] | : . resolve() for MultisessionFuture ...
[08:07:20.924] | : . resolve() for MultisessionFuture ... done
[08:07:20.924] | : . length: 0 (resolved future 1)
[08:07:20.924] | : future_lapply() -> future_xapply() ... done
[08:07:20.924] | : Relaying remaining futures ...
[08:07:20.924] | : . signalConditionsASAP(NULL, pos=0) ...
[08:07:20.924] | : . ' nx: 2
[08:07:20.924] | : . ' relay: TRUE
[08:07:20.924] | : . ' stdout: TRUE
[08:07:20.925] | : . ' signal: TRUE
[08:07:20.925] | : . ' resignal: FALSE
[08:07:20.925] | : . ' force: TRUE
[08:07:20.925] | : . ' relayed: [n=2] TRUE, TRUE
[08:07:20.925] | : . ' queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:20.925] | : . ' relayed: [n=2] TRUE, TRUE
[08:07:20.925] | : . ' queued futures: [n=2] TRUE, TRUE
[08:07:20.925] | : . signalConditionsASAP(NULL, pos=0) ... done
[08:07:20.925] | : Relaying remaining futures ... done
[08:07:20.925] | future_lapply() ... done
[08:07:20.926] |  - Number of value chunks collected: 2
[08:07:20.926] | Resolving 2 futures (chunks) ... DONE
[08:07:20.926] | Reducing values from 2 chunks ...
[08:07:20.926] |  - Number of values collected after concatenation: 2
[08:07:20.926] |  - Number of values expected: 2
[08:07:20.926] | Reducing values from 2 chunks ... DONE
[08:07:20.926] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

* future_lapply(x, ..., future.stdout = FALSE) ... DONE
* future_lapply(x, ..., future.stdout = TRUE) ...
[08:07:20.927] future_lapply() ...
[08:07:20.927] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:20.927] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:20.928] | future_lapply() -> future_xapply() ...
[08:07:20.928] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.928] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.928] | : Number of chunks: 2
[08:07:20.928] | : getGlobalsAndPackagesXApply() ...
[08:07:20.928] | : . future.globals: TRUE
[08:07:20.929] | : . getGlobalsAndPackages() ...
[08:07:20.929] | : . ' Searching for globals ...
[08:07:20.936] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:20.936] | : . ' Searching for globals ... done
[08:07:20.936] | : . ' Resolving globals: FALSE
[08:07:20.936] | : . ' Search for packages associated with the globals ...
[08:07:20.936] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:20.937] | : . ' , Packages: [1] ‘base’
[08:07:20.937] | : . ' Search for packages associated with the globals ... done
[08:07:20.937] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:20.937] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:20.937] | : . ' Packages after dropping 'base': [0] 
[08:07:20.937] | : . ' globals: [1] ‘FUN’
[08:07:20.938] | : . ' packages: [0] 
[08:07:20.938] | : . getGlobalsAndPackages() ... done
[08:07:20.938] | : . globals found/used: [n=1] ‘FUN’
[08:07:20.938] | : . needed namespaces: [n=0] 
[08:07:20.938] | : . use_args: TRUE
[08:07:20.938] | : . Getting '...' globals ...
[08:07:20.938] | : . ' resolve() for FutureGlobals ...
[08:07:20.938] | : . ' , recursive: 0
[08:07:20.939] | : . ' , Number of elements: 1
[08:07:20.939] | : . ' , elements: ‘...’
[08:07:20.939] | : . ' , 'obj' is DotDotDotList
[08:07:20.939] | : . ' , resolve(obj, ...) ...
[08:07:20.939] | : . ' , ; resolve() for DotDotDotList ...
[08:07:20.939] | : . ' , ; ` recursive: -1
[08:07:20.939] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:20.939] | : . ' , resolve(obj, ...) ... done
[08:07:20.939] | : . ' , resolved() for DotDotDotList ...
[08:07:20.940] | : . ' , ; Number of elements: 0
[08:07:20.940] | : . ' , ; Number of futures: 0
[08:07:20.940] | : . ' , resolved() for DotDotDotList ... done
[08:07:20.940] | : . ' , length: 0 (resolved future 1)
[08:07:20.940] | : . ' resolve() for FutureGlobals ... done
[08:07:20.940] | : . ' '...' content: [n=0] 
[08:07:20.940] | : . ' List of 1
[08:07:20.940] | : . '  $ ...: list()
[08:07:20.940] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.940] | : . '  - attr(*, "where")=List of 1
[08:07:20.940] | : . '   ..$ ...:<environment: 0x55ab95cb0ac8> 
[08:07:20.940] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.940] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:20.940] | : . '  - attr(*, "total_size")= num NA
[08:07:20.943] | : . Getting '...' globals ... done
[08:07:20.943] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:20.943] | : . List of 2
[08:07:20.943] | : .  $ ...future.FUN:function (x)  
[08:07:20.943] | : .  $ ...          : list()
[08:07:20.943] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.943] | : .  - attr(*, "where")=List of 2
[08:07:20.943] | : .   ..$ ...future.FUN:<environment: 0x55ab95cb0ac8> 
[08:07:20.943] | : .   ..$ ...          :<environment: 0x55ab95cb0ac8> 
[08:07:20.943] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.943] | : .  - attr(*, "resolved")= logi FALSE
[08:07:20.943] | : .  - attr(*, "total_size")= num 6008
[08:07:20.946] | : . Packages to be attached in all futures: [n=0] 
[08:07:20.946] | : getGlobalsAndPackagesXApply() ... done
[08:07:20.946] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.946] | : List of 5
[08:07:20.946] | :  $ ...future.FUN            :function (x)  
[08:07:20.946] | :  $ ...                      : list()
[08:07:20.946] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:20.946] | :  $ ...future.elements_ii    : NULL
[08:07:20.946] | :  $ ...future.seeds_ii       : NULL
[08:07:20.946] | :  $ ...future.globals.maxSize: NULL
[08:07:20.946] | :  - attr(*, "where")=List of 5
[08:07:20.946] | :   ..$ ...future.FUN            :<environment: 0x55ab95cb0ac8> 
[08:07:20.946] | :   ..$ ...                      :<environment: 0x55ab95cb0ac8> 
[08:07:20.946] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:20.946] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:20.946] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:20.946] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:20.946] | :  - attr(*, "resolved")= logi FALSE
[08:07:20.946] | :  - attr(*, "total_size")= num 6008
[08:07:20.951] | : Number of futures (= number of chunks): 2
[08:07:20.951] | : Launching 2 futures (chunks) ...
[08:07:20.951] | : Chunk #1 of 2 ...
[08:07:20.952] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:20.952] | : getGlobalsAndPackages() ...
[08:07:20.952] | : . Searching for globals ...
[08:07:20.952] | : . ' globals found: [0] 
[08:07:20.952] | : . Searching for globals ... done
[08:07:20.952] | : . globals: [0] <none>
[08:07:20.953] | : . packages: [0] <none>
[08:07:20.953] | : getGlobalsAndPackages() ... done
[08:07:20.953] | :    + additional globals found: [n=0] 
[08:07:20.953] | :    + additional namespaces needed: [n=0] 
[08:07:20.953] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:20.953] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:20.953] | :  - seeds: <none>
[08:07:20.953] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.953] | : future(..., label = ‘future_lapply-1’) ...
[08:07:20.954] | : . lazy: FALSE
[08:07:20.954] | : . stdout: TRUE
[08:07:20.954] | : . conditions: [n=1] ‘condition’
[08:07:20.954] | : . gc: FALSE
[08:07:20.954] | : . earlySignal: FALSE
[08:07:20.954] | : . getGlobalsAndPackages() ...
[08:07:20.954] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.954] | : . ' Resolving globals: FALSE
[08:07:20.954] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:20.954] | : . ' , {
[08:07:20.954] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:20.954] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:20.954] | : . ' ,     "# as a global variable                                         "
[08:07:20.954] | : . ' ,     do.call(function(...) {
[08:07:20.954] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:20.954] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:20.954] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:20.954] | : . ' ,         "# anonymous function.                                          "
[08:07:20.954] | : . ' ,         "#                                                              "
[08:07:20.954] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:20.954] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:20.954] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:20.954] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:20.954] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:20.954] | : . ' ,         repeat {
[08:07:20.954] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:20.954] | : . ' ,                 emptyenv())) 
[08:07:20.954] | : . ' ,                 break
[08:07:20.954] | : . ' ,             penv <- env
[08:07:20.954] | : . ' ,             env <- parent.env(env)
[08:07:20.954] | : . ' ,         }
[08:07:20.954] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:20.954] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:20.954] | : . ' ,         }
[08:07:20.954] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:20.954] | : . ' ,             !isNamespace(penv)) {
[08:07:20.954] | : . ' ,             parent.env(penv) <- environment()
[08:07:20.954] | : . ' ,         }
[08:07:20.954] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:20.954] | : . ' ,         {
[08:07:20.954] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:20.954] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:20.954] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:20.954] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:20.954] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:20.954] | : . ' ,             }
[08:07:20.954] | : . ' ,             {
[08:07:20.954] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:20.954] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:20.954] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:20.954] | : . ' ,                   {
[08:07:20.954] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:20.954] | : . ' ,                   }
[08:07:20.954] | : . ' ,                 })
[08:07:20.954] | : . ' ,             }
[08:07:20.954] | : . ' ,         }
[08:07:20.954] | : . ' ,     }, args = future.call.arguments)
[08:07:20.954] | : . ' , }
[08:07:20.955] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:20.955] | : . ' Search for packages associated with the globals ...
[08:07:20.955] | : . ' , Packages associated with globals: [0] 
[08:07:20.956] | : . ' , Packages: [0] 
[08:07:20.956] | : . ' Search for packages associated with the globals ... done
[08:07:20.956] | : . ' Packages after dropping 'base': [0] 
[08:07:20.956] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:20.956] | : . ' packages: [0] 
[08:07:20.956] | : . getGlobalsAndPackages() ... done
[08:07:20.956] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:20.957] | : . ' state: ‘created’
[08:07:20.957] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:20.957] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:20.957] | : . ' Using MultisessionFutureBackend ...
[08:07:20.957] | : . ' , Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:20.957] | : . ' , Launching futures ...
[08:07:20.957] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:20.957] | : . ' , ; ` Workers: [n=2]
[08:07:20.958] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:20.959] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:20.959] | : . ' , ; ` requestWorker() ...
[08:07:20.959] | : . ' , ; ` | requestNode() ...
[08:07:20.960] | : . ' , ; ` | : Number of workers: 2
[08:07:20.960] | : . ' , ; ` | : Polling for a free worker ...
[08:07:20.960] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.960] | : . ' , ; ` | : . ' Listing all futures
[08:07:20.960] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:20.960] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.960] | : . ' , ; ` | : . Total time: 0
[08:07:20.960] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:20.960] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:20.960] | : . ' , ; ` | : . Listing all futures
[08:07:20.961] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:20.961] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:20.961] | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:20.961] | : . ' , ; ` | : Index of first available worker: 1
[08:07:20.961] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:21.014] | : . ' , ; ` | : . Worker is functional
[08:07:21.015] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.015] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.015] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:21.015] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.015] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:21.015] | : . ' , ; ` | requestNode() ... done
[08:07:21.015] | : . ' , ; ` | cluster node index: 1
[08:07:21.015] | : . ' , ; ` requestWorker() ... done
[08:07:21.016] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:21.016] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:21.016] | : . ' , ; ` launchFuture() ...
[08:07:21.016] | : . ' , ; ` | cluster node index: 1
[08:07:21.016] | : . ' , ; ` | getFutureData() ...
[08:07:21.016] | : . ' , ; ` | : getFutureCore() ...
[08:07:21.017] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:21.017] | : . ' , ; ` | : getFutureCore() ... done
[08:07:21.017] | : . ' , ; ` | : getFutureCapture() ...
[08:07:21.017] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:21.017] | : . ' , ; ` | : getFutureContext() ...
[08:07:21.017] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.017] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:21.017] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.017] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:21.018] | : . ' , ; ` | : getFutureContext() ... done
[08:07:21.018] | : . ' , ; ` | getFutureData() ... done
[08:07:21.018] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:21.018] | : . ' , ; ` | : Appended future to position #1
[08:07:21.018] | : . ' , ; ` | : Number of registered futures: 1
[08:07:21.018] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:21.019] | : . ' , ; ` launchFuture() ... done
[08:07:21.019] | : . ' , ; ` MultisessionFuture started
[08:07:21.019] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:21.019] | : . ' , Launching futures ... done
[08:07:21.019] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.019] | : . ' Using MultisessionFutureBackend ... done
[08:07:21.019] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:21.019] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:21.019] | : Created future:
[08:07:21.020] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.021] | : . Cluster node socket connection: index=4, id=729
[08:07:21.021] | : . assertValidConnection() ...
[08:07:21.021] | : . ' cluster node index: 1
[08:07:21.021] | : . assertValidConnection() ... done
[08:07:21.032] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.032] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.020] | : MultisessionFuture:
[08:07:21.020] | : Label: ‘future_lapply-1’
[08:07:21.020] | : Expression:
[08:07:21.020] | : {
[08:07:21.020] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.020] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:21.020] | :     "# as a global variable                                         "
[08:07:21.020] | :     do.call(function(...) {
[08:07:21.020] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.020] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:21.020] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.020] | :         "# anonymous function.                                          "
[08:07:21.020] | :         "#                                                              "
[08:07:21.020] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.020] | :         "# function environment of FUN() to the calling environment.    "
[08:07:21.020] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.020] | :         "# global environment, which is where globals are written.      "
[08:07:21.020] | :         penv <- env <- environment(...future.FUN)
[08:07:21.020] | :         repeat {
[08:07:21.020] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:21.020] | :                 emptyenv())) 
[08:07:21.020] | :                 break
[08:07:21.020] | :             penv <- env
[08:07:21.020] | :             env <- parent.env(env)
[08:07:21.020] | :         }
[08:07:21.020] | :         if (identical(penv, globalenv())) {
[08:07:21.020] | :             environment(...future.FUN) <- environment()
[08:07:21.020] | :         }
[08:07:21.020] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.020] | :             !isNamespace(penv)) {
[08:07:21.020] | :             parent.env(penv) <- environment()
[08:07:21.020] | :         }
[08:07:21.020] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.020] | :         {
[08:07:21.020] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.020] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.020] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.020] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.020] | :                 on.exit(options(oopts), add = TRUE)
[08:07:21.020] | :             }
[08:07:21.020] | :             {
[08:07:21.020] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.020] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.020] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.020] | :                   {
[08:07:21.020] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:21.020] | :                   }
[08:07:21.020] | :                 })
[08:07:21.020] | :             }
[08:07:21.020] | :         }
[08:07:21.020] | :     }, args = future.call.arguments)
[08:07:21.020] | : }
[08:07:21.020] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:21.020] | : Packages: <none>
[08:07:21.020] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:21.020] | : Capture standard output: TRUE
[08:07:21.020] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:21.020] | : Immediate condition classes: ‘immediateCondition’
[08:07:21.020] | : Lazy evaluation: FALSE
[08:07:21.020] | : Local evaluation: TRUE
[08:07:21.020] | : Asynchronous evaluation: TRUE
[08:07:21.020] | : Early signaling: FALSE
[08:07:21.020] | : Environment: R_GlobalEnv
[08:07:21.020] | : State: ‘running’
[08:07:21.020] | : Resolved: FALSE
[08:07:21.020] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-21
[08:07:21.020] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:21.020] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.020] | : Value: <not collected>
[08:07:21.020] | : Conditions captured: <none>
[08:07:21.032] | : Chunk #1 of 2 ... DONE
[08:07:21.032] | : Chunk #2 of 2 ...
[08:07:21.033] | :  - Finding globals in 'X' for chunk #2 ...
[08:07:21.033] | : getGlobalsAndPackages() ...
[08:07:21.033] | : . Searching for globals ...
[08:07:21.033] | : . ' globals found: [0] 
[08:07:21.033] | : . Searching for globals ... done
[08:07:21.033] | : . globals: [0] <none>
[08:07:21.034] | : . packages: [0] <none>
[08:07:21.034] | : getGlobalsAndPackages() ... done
[08:07:21.034] | :    + additional globals found: [n=0] 
[08:07:21.034] | :    + additional namespaces needed: [n=0] 
[08:07:21.034] | :  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:21.034] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:21.034] | :  - seeds: <none>
[08:07:21.034] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.034] | : future(..., label = ‘future_lapply-2’) ...
[08:07:21.034] | : . lazy: FALSE
[08:07:21.035] | : . stdout: TRUE
[08:07:21.035] | : . conditions: [n=1] ‘condition’
[08:07:21.035] | : . gc: FALSE
[08:07:21.035] | : . earlySignal: FALSE
[08:07:21.035] | : . getGlobalsAndPackages() ...
[08:07:21.035] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.035] | : . ' Resolving globals: FALSE
[08:07:21.035] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:21.035] | : . ' , {
[08:07:21.035] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.035] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:21.035] | : . ' ,     "# as a global variable                                         "
[08:07:21.035] | : . ' ,     do.call(function(...) {
[08:07:21.035] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.035] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:21.035] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.035] | : . ' ,         "# anonymous function.                                          "
[08:07:21.035] | : . ' ,         "#                                                              "
[08:07:21.035] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.035] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:21.035] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.035] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:21.035] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:21.035] | : . ' ,         repeat {
[08:07:21.035] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:21.035] | : . ' ,                 emptyenv())) 
[08:07:21.035] | : . ' ,                 break
[08:07:21.035] | : . ' ,             penv <- env
[08:07:21.035] | : . ' ,             env <- parent.env(env)
[08:07:21.035] | : . ' ,         }
[08:07:21.035] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:21.035] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:21.035] | : . ' ,         }
[08:07:21.035] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.035] | : . ' ,             !isNamespace(penv)) {
[08:07:21.035] | : . ' ,             parent.env(penv) <- environment()
[08:07:21.035] | : . ' ,         }
[08:07:21.035] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.035] | : . ' ,         {
[08:07:21.035] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.035] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.035] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.035] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.035] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:21.035] | : . ' ,             }
[08:07:21.035] | : . ' ,             {
[08:07:21.035] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.035] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.035] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.035] | : . ' ,                   {
[08:07:21.035] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:21.035] | : . ' ,                   }
[08:07:21.035] | : . ' ,                 })
[08:07:21.035] | : . ' ,             }
[08:07:21.035] | : . ' ,         }
[08:07:21.035] | : . ' ,     }, args = future.call.arguments)
[08:07:21.035] | : . ' , }
[08:07:21.036] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:21.036] | : . ' Search for packages associated with the globals ...
[08:07:21.036] | : . ' , Packages associated with globals: [0] 
[08:07:21.037] | : . ' , Packages: [0] 
[08:07:21.037] | : . ' Search for packages associated with the globals ... done
[08:07:21.037] | : . ' Packages after dropping 'base': [0] 
[08:07:21.037] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.037] | : . ' packages: [0] 
[08:07:21.037] | : . getGlobalsAndPackages() ... done
[08:07:21.037] | : . run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:21.037] | : . ' state: ‘created’
[08:07:21.038] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.038] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.038] | : . ' Using MultisessionFutureBackend ...
[08:07:21.038] | : . ' , Number of futures since start: 3 (3 created, 3 launched, 2 finished)
[08:07:21.038] | : . ' , Launching futures ...
[08:07:21.038] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:21.038] | : . ' , ; ` Workers: [n=2]
[08:07:21.038] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:21.040] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:21.040] | : . ' , ; ` requestWorker() ...
[08:07:21.040] | : . ' , ; ` | requestNode() ...
[08:07:21.040] | : . ' , ; ` | : Number of workers: 2
[08:07:21.040] | : . ' , ; ` | : Polling for a free worker ...
[08:07:21.041] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.041] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.041] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:21.041] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.041] | : . ' , ; ` | : . Total time: 0
[08:07:21.041] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:21.041] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.041] | : . ' , ; ` | : . Listing all futures
[08:07:21.041] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:21.041] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.042] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:07:21.042] | : . ' , ; ` | : Index of first available worker: 2
[08:07:21.042] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:21.099] | : . ' , ; ` | : . Worker is functional
[08:07:21.099] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.099] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.099] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:21.099] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.100] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:21.100] | : . ' , ; ` | requestNode() ... done
[08:07:21.100] | : . ' , ; ` | cluster node index: 2
[08:07:21.100] | : . ' , ; ` requestWorker() ... done
[08:07:21.100] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:21.100] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:21.101] | : . ' , ; ` launchFuture() ...
[08:07:21.101] | : . ' , ; ` | cluster node index: 2
[08:07:21.101] | : . ' , ; ` | getFutureData() ...
[08:07:21.101] | : . ' , ; ` | : getFutureCore() ...
[08:07:21.101] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:21.101] | : . ' , ; ` | : getFutureCore() ... done
[08:07:21.101] | : . ' , ; ` | : getFutureCapture() ...
[08:07:21.101] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:21.101] | : . ' , ; ` | : getFutureContext() ...
[08:07:21.101] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.102] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:21.102] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.102] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:21.102] | : . ' , ; ` | : getFutureContext() ... done
[08:07:21.102] | : . ' , ; ` | getFutureData() ... done
[08:07:21.102] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:21.103] | : . ' , ; ` | : Appended future to position #2
[08:07:21.103] | : . ' , ; ` | : Number of registered futures: 2
[08:07:21.103] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:21.103] | : . ' , ; ` launchFuture() ... done
[08:07:21.103] | : . ' , ; ` MultisessionFuture started
[08:07:21.103] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:21.103] | : . ' , Launching futures ... done
[08:07:21.103] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.103] | : . ' Using MultisessionFutureBackend ... done
[08:07:21.104] | : . run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:21.104] | : future(..., label = ‘future_lapply-2’) ... done
[08:07:21.104] | : Created future:
[08:07:21.105] | : resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.105] | : . Cluster node socket connection: index=5, id=730
[08:07:21.105] | : . assertValidConnection() ...
[08:07:21.105] | : . ' cluster node index: 2
[08:07:21.106] | : . assertValidConnection() ... done
[08:07:21.116] | : . socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.116] | : resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.104] | : MultisessionFuture:
[08:07:21.104] | : Label: ‘future_lapply-2’
[08:07:21.104] | : Expression:
[08:07:21.104] | : {
[08:07:21.104] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.104] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:21.104] | :     "# as a global variable                                         "
[08:07:21.104] | :     do.call(function(...) {
[08:07:21.104] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.104] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:21.104] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.104] | :         "# anonymous function.                                          "
[08:07:21.104] | :         "#                                                              "
[08:07:21.104] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.104] | :         "# function environment of FUN() to the calling environment.    "
[08:07:21.104] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.104] | :         "# global environment, which is where globals are written.      "
[08:07:21.104] | :         penv <- env <- environment(...future.FUN)
[08:07:21.104] | :         repeat {
[08:07:21.104] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:21.104] | :                 emptyenv())) 
[08:07:21.104] | :                 break
[08:07:21.104] | :             penv <- env
[08:07:21.104] | :             env <- parent.env(env)
[08:07:21.104] | :         }
[08:07:21.104] | :         if (identical(penv, globalenv())) {
[08:07:21.104] | :             environment(...future.FUN) <- environment()
[08:07:21.104] | :         }
[08:07:21.104] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.104] | :             !isNamespace(penv)) {
[08:07:21.104] | :             parent.env(penv) <- environment()
[08:07:21.104] | :         }
[08:07:21.104] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.104] | :         {
[08:07:21.104] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.104] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.104] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.104] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.104] | :                 on.exit(options(oopts), add = TRUE)
[08:07:21.104] | :             }
[08:07:21.104] | :             {
[08:07:21.104] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.104] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.104] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.104] | :                   {
[08:07:21.104] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:21.104] | :                   }
[08:07:21.104] | :                 })
[08:07:21.104] | :             }
[08:07:21.104] | :         }
[08:07:21.104] | :     }, args = future.call.arguments)
[08:07:21.104] | : }
[08:07:21.104] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:21.104] | : Packages: <none>
[08:07:21.104] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:21.104] | : Capture standard output: TRUE
[08:07:21.104] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:21.104] | : Immediate condition classes: ‘immediateCondition’
[08:07:21.104] | : Lazy evaluation: FALSE
[08:07:21.104] | : Local evaluation: TRUE
[08:07:21.104] | : Asynchronous evaluation: TRUE
[08:07:21.104] | : Early signaling: FALSE
[08:07:21.104] | : Environment: R_GlobalEnv
[08:07:21.104] | : State: ‘running’
[08:07:21.104] | : Resolved: FALSE
[08:07:21.104] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-22
[08:07:21.104] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:21.104] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.104] | : Value: <not collected>
[08:07:21.104] | : Conditions captured: <none>
[08:07:21.117] | : Chunk #2 of 2 ... DONE
[08:07:21.117] | : Launching 2 futures (chunks) ... DONE
[08:07:21.117] | : Resolving 2 futures (chunks) ...
[08:07:21.117] | : value() for list ...
[08:07:21.117] | : . recursive: 0
[08:07:21.117] | : . reduce: FALSE
[08:07:21.117] | : . length: 2

[08:07:21.118] | : . Number of remaining objects: 2
[08:07:21.118] | : . checking value #1:
[08:07:21.118] | : . 'obj' is MultisessionFuture
[08:07:21.118] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.118] | : . ' Cluster node socket connection: index=4, id=729
[08:07:21.118] | : . ' assertValidConnection() ...
[08:07:21.118] | : . ' , cluster node index: 1
[08:07:21.119] | : . ' assertValidConnection() ... done
[08:07:21.129] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.129] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.129] | : . checking value #2:
[08:07:21.129] | : . 'obj' is MultisessionFuture
[08:07:21.129] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.130] | : . ' Cluster node socket connection: index=5, id=730
[08:07:21.130] | : . ' assertValidConnection() ...
[08:07:21.130] | : . ' , cluster node index: 2
[08:07:21.130] | : . ' assertValidConnection() ... done
[08:07:21.140] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.140] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.151] | : . Number of remaining objects: 2
[08:07:21.151] | : . checking value #1:
[08:07:21.151] | : . 'obj' is MultisessionFuture
[08:07:21.151] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.151] | : . ' Cluster node socket connection: index=4, id=729
[08:07:21.152] | : . ' assertValidConnection() ...
[08:07:21.152] | : . ' , cluster node index: 1
[08:07:21.152] | : . ' assertValidConnection() ... done
[08:07:21.162] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.162] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.162] | : . checking value #2:
[08:07:21.163] | : . 'obj' is MultisessionFuture
[08:07:21.163] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.163] | : . ' Cluster node socket connection: index=5, id=730
[08:07:21.163] | : . ' assertValidConnection() ...
[08:07:21.163] | : . ' , cluster node index: 2
[08:07:21.163] | : . ' assertValidConnection() ... done
[08:07:21.164] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:21.164] | : . ' , cluster node index: 2
[08:07:21.164] | : . ' , [1] TRUE
[08:07:21.164] | : . ' , received data:
[08:07:21.164] | : . ' , List of 5
[08:07:21.164] | : . ' ,  $ type   : chr "VALUE"
[08:07:21.164] | : . ' ,  $ value  :List of 16
[08:07:21.164] | : . ' ,   ..$ value              :List of 1
[08:07:21.164] | : . ' ,   .. ..$ : int 0
[08:07:21.164] | : . ' ,   ..$ visible            : logi TRUE
[08:07:21.164] | : . ' ,   ..$ stdout             : chr "[1] 0\n"
[08:07:21.164] | : . ' ,   ..$ conditions         : list()
[08:07:21.164] | : . ' ,   ..$ rng                : logi FALSE
[08:07:21.164] | : . ' ,   ..$ seed               : NULL
[08:07:21.164] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:21.164] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:21.164] | : . ' ,   .. ..$ added   : NULL
[08:07:21.164] | : . ' ,   .. ..$ removed : NULL
[08:07:21.164] | : . ' ,   .. ..$ replaced: NULL
[08:07:21.164] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:21.164] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:21.164] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.164] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.164] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "22"
[08:07:21.164] | : . ' ,   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:21.164] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:21.164] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:21.164] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:21.164] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:21.164] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:21.164] | : . ' ,   .. .. ..$ pid   : int 65490
[08:07:21.164] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:21.164] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:21.164] | : . ' ,   ..$ r_info             :List of 4
[08:07:21.164] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:21.164] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:21.164] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:21.164] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:21.164] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:21.164] | : . ' ,   ..$ version            : chr "1.8"
[08:07:21.164] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:21.164] | : . ' ,  $ success: logi TRUE
[08:07:21.164] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[08:07:21.164] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:21.164] | : . ' ,  $ tag    : NULL
[08:07:21.175] | : . ' , Received FutureResult
[08:07:21.176] | : . ' , FutureResult:
[08:07:21.176] | : . ' , value: ‘list’
[08:07:21.176] | : . ' , visible: TRUE
[08:07:21.176] | : . ' , stdout: character
[08:07:21.176] | : . ' , conditions: [n = 0] 
[08:07:21.176] | : . ' , RNG used: FALSE
[08:07:21.176] | : . ' , duration: 0.00288415 secs (started 2025-06-17 08:07:21.14328)
[08:07:21.176] | : . ' , version: 1.8
[08:07:21.176] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:21.176] | : . ' , ; Removed future from position #2
[08:07:21.176] | : . ' , ; Number of registered futures: 1
[08:07:21.176] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:21.177] | : . ' , Erased future from future backend
[08:07:21.177] | : . ' , result() for ClusterFuture ...
[08:07:21.177] | : . ' , ; result already collected: FutureResult
[08:07:21.177] | : . ' , result() for ClusterFuture ... done
[08:07:21.177] | : . ' , signalConditions() ...
[08:07:21.177] | : . ' , ; include = ‘immediateCondition’
[08:07:21.177] | : . ' , ; exclude = 
[08:07:21.177] | : . ' , ; resignal = FALSE
[08:07:21.177] | : . ' , ; Number of conditions: 0
[08:07:21.177] | : . ' , ;  int 0
[08:07:21.178] | : . ' , signalConditions() ... done
[08:07:21.178] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:21.178] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:21.178] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.178] | : . assertFutureResult() ...
[08:07:21.178] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:21.178] | : . ' Future uuid: 22
[08:07:21.178] | : . ' identical; success
[08:07:21.179] | : . assertFutureResult() ... done
[08:07:21.179] | : . MultisessionFuture #2
[08:07:21.179] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:21.179] | : . ' nx: 2
[08:07:21.179] | : . ' relay: TRUE
[08:07:21.179] | : . ' stdout: TRUE
[08:07:21.179] | : . ' signal: TRUE
[08:07:21.179] | : . ' resignal: FALSE
[08:07:21.179] | : . ' force: TRUE
[08:07:21.179] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.180] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:21.180] | : . ' until=1
[08:07:21.180] | : . ' relaying element #1
[08:07:21.180] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.180] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.180] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:21.180] | : . value(<MultisessionFuture>, ...) ...
[08:07:21.180] | : . value(<MultisessionFuture>, ...) ... done
[08:07:21.180] | : . value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.180] | : . ' result() for ClusterFuture ...
[08:07:21.181] | : . ' , result already collected: FutureResult
[08:07:21.181] | : . ' result() for ClusterFuture ... done
[08:07:21.181] | : . ' result() for ClusterFuture ...
[08:07:21.181] | : . ' , result already collected: FutureResult
[08:07:21.181] | : . ' result() for ClusterFuture ... done
[08:07:21.181] | : . ' signalConditions() ...
[08:07:21.181] | : . ' , include = ‘immediateCondition’
[08:07:21.181] | : . ' , exclude = 
[08:07:21.181] | : . ' , resignal = FALSE
[08:07:21.181] | : . ' , Number of conditions: 0
[08:07:21.181] | : . ' ,  int 0
[08:07:21.182] | : . ' signalConditions() ... done
[08:07:21.182] | : . ' check for misuse ...
[08:07:21.182] | : . ' check for misuse ... done
[08:07:21.182] | : . value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.182] | : . value: <list>
[08:07:21.182] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:21.183] | : . ' nx: 2
[08:07:21.183] | : . ' relay: TRUE
[08:07:21.183] | : . ' stdout: TRUE
[08:07:21.183] | : . ' signal: TRUE
[08:07:21.183] | : . ' resignal: FALSE
[08:07:21.183] | : . ' force: TRUE
[08:07:21.183] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.183] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.183] | : . ' until=1
[08:07:21.183] | : . ' relaying element #1
[08:07:21.183] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.184] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.184] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:21.184] | : . resolve() for MultisessionFuture ...
[08:07:21.184] | : . resolve() for MultisessionFuture ... done
[08:07:21.184] | : . length: 1 (resolved future 2)
[08:07:21.184] | : value() for list ... done
[08:07:21.194] | : Number of remaining objects: 1
[08:07:21.194] | : checking value #1:
[08:07:21.195] | : 'obj' is MultisessionFuture
[08:07:21.195] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.195] | : . Cluster node socket connection: index=4, id=729
[08:07:21.195] | : . assertValidConnection() ...
[08:07:21.195] | : . ' cluster node index: 1
[08:07:21.196] | : . assertValidConnection() ... done
[08:07:21.206] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.206] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.216] | : Number of remaining objects: 1
[08:07:21.216] | : checking value #1:
[08:07:21.216] | : 'obj' is MultisessionFuture
[08:07:21.217] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.217] | : . Cluster node socket connection: index=4, id=729
[08:07:21.217] | : . assertValidConnection() ...
[08:07:21.217] | : . ' cluster node index: 1
[08:07:21.217] | : . assertValidConnection() ... done
[08:07:21.228] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.228] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.238] | : Number of remaining objects: 1
[08:07:21.238] | : checking value #1:
[08:07:21.238] | : 'obj' is MultisessionFuture
[08:07:21.238] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.239] | : . Cluster node socket connection: index=4, id=729
[08:07:21.239] | : . assertValidConnection() ...
[08:07:21.239] | : . ' cluster node index: 1
[08:07:21.239] | : . assertValidConnection() ... done
[08:07:21.249] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.250] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.260] | : Number of remaining objects: 1
[08:07:21.260] | : checking value #1:
[08:07:21.260] | : 'obj' is MultisessionFuture
[08:07:21.260] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.261] | : . Cluster node socket connection: index=4, id=729
[08:07:21.261] | : . assertValidConnection() ...
[08:07:21.261] | : . ' cluster node index: 1
[08:07:21.261] | : . assertValidConnection() ... done
[08:07:21.272] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.272] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.282] | : Number of remaining objects: 1
[08:07:21.282] | : checking value #1:
[08:07:21.282] | : 'obj' is MultisessionFuture
[08:07:21.282] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.283] | : . Cluster node socket connection: index=4, id=729
[08:07:21.283] | : . assertValidConnection() ...
[08:07:21.283] | : . ' cluster node index: 1
[08:07:21.283] | : . assertValidConnection() ... done
[08:07:21.294] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.294] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.304] | : Number of remaining objects: 1
[08:07:21.304] | : checking value #1:
[08:07:21.304] | : 'obj' is MultisessionFuture
[08:07:21.304] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.305] | : . Cluster node socket connection: index=4, id=729
[08:07:21.305] | : . assertValidConnection() ...
[08:07:21.305] | : . ' cluster node index: 1
[08:07:21.305] | : . assertValidConnection() ... done
[08:07:21.315] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.316] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.326] | : Number of remaining objects: 1
[08:07:21.326] | : checking value #1:
[08:07:21.326] | : 'obj' is MultisessionFuture
[08:07:21.326] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.326] | : . Cluster node socket connection: index=4, id=729
[08:07:21.327] | : . assertValidConnection() ...
[08:07:21.327] | : . ' cluster node index: 1
[08:07:21.327] | : . assertValidConnection() ... done
[08:07:21.337] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.337] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.348] | : Number of remaining objects: 1
[08:07:21.348] | : checking value #1:
[08:07:21.348] | : 'obj' is MultisessionFuture
[08:07:21.348] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.349] | : . Cluster node socket connection: index=4, id=729
[08:07:21.349] | : . assertValidConnection() ...
[08:07:21.349] | : . ' cluster node index: 1
[08:07:21.350] | : . assertValidConnection() ... done
[08:07:21.360] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.360] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.370] | : Number of remaining objects: 1
[08:07:21.371] | : checking value #1:
[08:07:21.371] | : 'obj' is MultisessionFuture
[08:07:21.371] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.371] | : . Cluster node socket connection: index=4, id=729
[08:07:21.371] | : . assertValidConnection() ...
[08:07:21.371] | : . ' cluster node index: 1
[08:07:21.372] | : . assertValidConnection() ... done
[08:07:21.382] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.382] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.392] | : Number of remaining objects: 1
[08:07:21.392] | : checking value #1:
[08:07:21.393] | : 'obj' is MultisessionFuture
[08:07:21.393] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.393] | : . Cluster node socket connection: index=4, id=729
[08:07:21.393] | : . assertValidConnection() ...
[08:07:21.393] | : . ' cluster node index: 1
[08:07:21.393] | : . assertValidConnection() ... done
[08:07:21.404] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.404] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.414] | : Number of remaining objects: 1
[08:07:21.414] | : checking value #1:
[08:07:21.414] | : 'obj' is MultisessionFuture
[08:07:21.414] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.415] | : . Cluster node socket connection: index=4, id=729
[08:07:21.415] | : . assertValidConnection() ...
[08:07:21.415] | : . ' cluster node index: 1
[08:07:21.415] | : . assertValidConnection() ... done
[08:07:21.425] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.426] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.436] | : Number of remaining objects: 1
[08:07:21.436] | : checking value #1:
[08:07:21.436] | : 'obj' is MultisessionFuture
[08:07:21.436] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.436] | : . Cluster node socket connection: index=4, id=729
[08:07:21.437] | : . assertValidConnection() ...
[08:07:21.437] | : . ' cluster node index: 1
[08:07:21.437] | : . assertValidConnection() ... done
[08:07:21.447] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.447] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.458] | : Number of remaining objects: 1
[08:07:21.458] | : checking value #1:
[08:07:21.458] | : 'obj' is MultisessionFuture
[08:07:21.458] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.459] | : . Cluster node socket connection: index=4, id=729
[08:07:21.459] | : . assertValidConnection() ...
[08:07:21.459] | : . ' cluster node index: 1
[08:07:21.459] | : . assertValidConnection() ... done
[08:07:21.469] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.469] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.480] | : Number of remaining objects: 1
[08:07:21.480] | : checking value #1:
[08:07:21.480] | : 'obj' is MultisessionFuture
[08:07:21.480] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.480] | : . Cluster node socket connection: index=4, id=729
[08:07:21.481] | : . assertValidConnection() ...
[08:07:21.481] | : . ' cluster node index: 1
[08:07:21.481] | : . assertValidConnection() ... done
[08:07:21.491] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.491] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.502] | : Number of remaining objects: 1
[08:07:21.502] | : checking value #1:
[08:07:21.502] | : 'obj' is MultisessionFuture
[08:07:21.502] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.502] | : . Cluster node socket connection: index=4, id=729
[08:07:21.502] | : . assertValidConnection() ...
[08:07:21.502] | : . ' cluster node index: 1
[08:07:21.503] | : . assertValidConnection() ... done
[08:07:21.513] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.513] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.523] | : Number of remaining objects: 1
[08:07:21.523] | : checking value #1:
[08:07:21.524] | : 'obj' is MultisessionFuture
[08:07:21.524] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.524] | : . Cluster node socket connection: index=4, id=729
[08:07:21.524] | : . assertValidConnection() ...
[08:07:21.524] | : . ' cluster node index: 1
[08:07:21.525] | : . assertValidConnection() ... done
[08:07:21.535] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.535] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.545] | : Number of remaining objects: 1
[08:07:21.545] | : checking value #1:
[08:07:21.545] | : 'obj' is MultisessionFuture
[08:07:21.546] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.546] | : . Cluster node socket connection: index=4, id=729
[08:07:21.546] | : . assertValidConnection() ...
[08:07:21.546] | : . ' cluster node index: 1
[08:07:21.547] | : . assertValidConnection() ... done
[08:07:21.557] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.557] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.567] | : Number of remaining objects: 1
[08:07:21.568] | : checking value #1:
[08:07:21.568] | : 'obj' is MultisessionFuture
[08:07:21.568] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.568] | : . Cluster node socket connection: index=4, id=729
[08:07:21.569] | : . assertValidConnection() ...
[08:07:21.569] | : . ' cluster node index: 1
[08:07:21.569] | : . assertValidConnection() ... done
[08:07:21.569] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:21.569] | : . ' cluster node index: 1
[08:07:21.569] | : . ' [1] TRUE
[08:07:21.570] | : . ' received data:
[08:07:21.570] | : . ' List of 5
[08:07:21.570] | : . '  $ type   : chr "VALUE"
[08:07:21.570] | : . '  $ value  :List of 16
[08:07:21.570] | : . '   ..$ value              :List of 1
[08:07:21.570] | : . '   .. ..$ : int 1
[08:07:21.570] | : . '   ..$ visible            : logi TRUE
[08:07:21.570] | : . '   ..$ stdout             : chr "[1] 1\n"
[08:07:21.570] | : . '   ..$ conditions         : list()
[08:07:21.570] | : . '   ..$ rng                : logi FALSE
[08:07:21.570] | : . '   ..$ seed               : NULL
[08:07:21.570] | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:21.570] | : . '   ..$ misuseConnections  :List of 3
[08:07:21.570] | : . '   .. ..$ added   : NULL
[08:07:21.570] | : . '   .. ..$ removed : NULL
[08:07:21.570] | : . '   .. ..$ replaced: NULL
[08:07:21.570] | : . '   ..$ misuseDevices      : NULL
[08:07:21.570] | : . '   ..$ misuseDefaultDevice: list()
[08:07:21.570] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.570] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.570] | : . '   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "21"
[08:07:21.570] | : . '   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:21.570] | : . '   .. ..- attr(*, "source")=List of 5
[08:07:21.570] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:21.570] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:21.570] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:21.570] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:21.570] | : . '   .. .. ..$ pid   : int 65491
[08:07:21.570] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:21.570] | : . '   .. .. ..$ random: int 2147483647
[08:07:21.570] | : . '   ..$ r_info             :List of 4
[08:07:21.570] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:21.570] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:07:21.570] | : . '   .. ..$ os           : chr "unix"
[08:07:21.570] | : . '   .. ..$ os_name      : chr "Linux"
[08:07:21.570] | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:21.570] | : . '   ..$ version            : chr "1.8"
[08:07:21.570] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:21.570] | : . '  $ success: logi TRUE
[08:07:21.570] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.505 0 0
[08:07:21.570] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:21.570] | : . '  $ tag    : NULL
[08:07:21.583] | : . ' Received FutureResult
[08:07:21.584] | : . ' FutureResult:
[08:07:21.584] | : . ' value: ‘list’
[08:07:21.584] | : . ' visible: TRUE
[08:07:21.584] | : . ' stdout: character
[08:07:21.584] | : . ' conditions: [n = 0] 
[08:07:21.584] | : . ' RNG used: FALSE
[08:07:21.584] | : . ' duration: 0.5045006 secs (started 2025-06-17 08:07:21.059457)
[08:07:21.584] | : . ' version: 1.8
[08:07:21.584] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:21.584] | : . ' , Removed future from position #1
[08:07:21.584] | : . ' , Number of registered futures: 0
[08:07:21.584] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:21.585] | : . ' Erased future from future backend
[08:07:21.585] | : . ' result() for ClusterFuture ...
[08:07:21.585] | : . ' , result already collected: FutureResult
[08:07:21.585] | : . ' result() for ClusterFuture ... done
[08:07:21.585] | : . ' signalConditions() ...
[08:07:21.585] | : . ' , include = ‘immediateCondition’
[08:07:21.585] | : . ' , exclude = 
[08:07:21.585] | : . ' , resignal = FALSE
[08:07:21.585] | : . ' , Number of conditions: 0
[08:07:21.585] | : . ' ,  int 0
[08:07:21.586] | : . ' signalConditions() ... done
[08:07:21.586] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:21.586] | : . receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:21.586] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.586] | : assertFutureResult() ...
[08:07:21.586] | : . Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:21.586] | : . Future uuid: 21
[08:07:21.586] | : . identical; success
[08:07:21.586] | : assertFutureResult() ... done
[08:07:21.587] | : MultisessionFuture #1
[08:07:21.587] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:21.587] | : . nx: 2
[08:07:21.587] | : . relay: TRUE
[08:07:21.587] | : . stdout: TRUE
[08:07:21.587] | : . signal: TRUE
[08:07:21.587] | : . resignal: FALSE
[08:07:21.587] | : . force: TRUE
[08:07:21.587] | : . relayed: [n=2] FALSE, FALSE
[08:07:21.587] | : . queued futures: [n=2] FALSE, TRUE
[08:07:21.587] | : . until=1
[08:07:21.588] | : . relaying element #1
[08:07:21.588] | : . value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.588] | : . ' result() for ClusterFuture ...
[08:07:21.588] | : . ' , result already collected: FutureResult
[08:07:21.588] | : . ' result() for ClusterFuture ... done
[08:07:21.588] | : . ' result() for ClusterFuture ...
[08:07:21.588] | : . ' , result already collected: FutureResult
[08:07:21.588] | : . ' result() for ClusterFuture ... done
[08:07:21.588] | : . ' signalConditions() ...
[08:07:21.588] | : . ' , include = ‘immediateCondition’
[08:07:21.589] | : . ' , exclude = 
[08:07:21.589] | : . ' , resignal = FALSE
[08:07:21.589] | : . ' , Number of conditions: 0
[08:07:21.589] | : . ' ,  int 0
[08:07:21.589] | : . ' signalConditions() ... done
[08:07:21.589] | : . ' relay stdout ...
[08:07:21.589] | : . ' relay stdout ... done
[08:07:21.590] | : . ' check for misuse ...
[08:07:21.590] | : . ' check for misuse ... done
[08:07:21.590] | : . value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.590] | : . result() for ClusterFuture ...
[08:07:21.590] | : . ' result already collected: FutureResult
[08:07:21.590] | : . result() for ClusterFuture ... done
[08:07:21.590] | : . signalConditions() ...
[08:07:21.590] | : . ' include = ‘immediateCondition’
[08:07:21.590] | : . ' exclude = 
[08:07:21.590] | : . ' resignal = FALSE
[08:07:21.591] | : . ' Number of conditions: 0
[08:07:21.591] | : . '  int 0
[08:07:21.591] | : . signalConditions() ... done
[08:07:21.591] | : . result() for ClusterFuture ...
[08:07:21.591] | : . ' result already collected: FutureResult
[08:07:21.591] | : . result() for ClusterFuture ... done
[08:07:21.591] | : . signalConditions() ...
[08:07:21.591] | : . ' include = ‘condition’
[08:07:21.592] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:21.592] | : . ' resignal = TRUE
[08:07:21.592] | : . ' Number of conditions: 0
[08:07:21.592] | : . '  int 0
[08:07:21.592] | : . signalConditions() ... done
[08:07:21.592] | : . relayed: [n=2] TRUE, FALSE
[08:07:21.592] | : . queued futures: [n=2] TRUE, TRUE
[08:07:21.593] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:21.593] | : value(<MultisessionFuture>, ...) ...
[08:07:21.593] | : value(<MultisessionFuture>, ...) ... done
[08:07:21.593] | : value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.593] | : . result() for ClusterFuture ...
[08:07:21.593] | : . ' result already collected: FutureResult
[08:07:21.593] | : . result() for ClusterFuture ... done
[08:07:21.593] | : . result() for ClusterFuture ...
[08:07:21.593] | : . ' result already collected: FutureResult
[08:07:21.593] | : . result() for ClusterFuture ... done
[08:07:21.594] | : . signalConditions() ...
[08:07:21.594] | : . ' include = ‘immediateCondition’
[08:07:21.594] | : . ' exclude = 
[08:07:21.594] | : . ' resignal = FALSE
[08:07:21.594] | : . ' Number of conditions: 0
[08:07:21.594] | : . '  int 0
[08:07:21.594] | : . signalConditions() ... done
[08:07:21.594] | : . check for misuse ...
[08:07:21.595] | : . check for misuse ... done
[08:07:21.595] | : value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.595] | : value: <list>
[08:07:21.595] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:21.595] | : . nx: 2
[08:07:21.595] | : . relay: TRUE
[08:07:21.595] | : . stdout: TRUE
[08:07:21.595] | : . signal: TRUE
[08:07:21.595] | : . resignal: FALSE
[08:07:21.595] | : . force: TRUE
[08:07:21.595] | : . relayed: [n=2] TRUE, FALSE
[08:07:21.596] | : . queued futures: [n=2] TRUE, TRUE
[08:07:21.596] | : . until=2
[08:07:21.596] | : . relaying element #2
[08:07:21.596] | : . value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.596] | : . ' result() for ClusterFuture ...
[08:07:21.596] | : . ' , result already collected: FutureResult
[08:07:21.596] | : . ' result() for ClusterFuture ... done
[08:07:21.596] | : . ' result() for ClusterFuture ...
[08:07:21.596] | : . ' , result already collected: FutureResult
[08:07:21.596] | : . ' result() for ClusterFuture ... done
[08:07:21.597] | : . ' signalConditions() ...
[08:07:21.597] | : . ' , include = ‘immediateCondition’
[08:07:21.597] | : . ' , exclude = 
[08:07:21.597] | : . ' , resignal = FALSE
[08:07:21.597] | : . ' , Number of conditions: 0
[08:07:21.597] | : . ' ,  int 0
[08:07:21.597] | : . ' signalConditions() ... done
[08:07:21.597] | : . ' relay stdout ...
[08:07:21.598] | : . ' relay stdout ... done
[08:07:21.598] | : . ' check for misuse ...
[08:07:21.598] | : . ' check for misuse ... done
[08:07:21.598] | : . value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.598] | : . result() for ClusterFuture ...
[08:07:21.598] | : . ' result already collected: FutureResult
[08:07:21.598] | : . result() for ClusterFuture ... done
[08:07:21.598] | : . signalConditions() ...
[08:07:21.598] | : . ' include = ‘immediateCondition’
[08:07:21.599] | : . ' exclude = 
[08:07:21.599] | : . ' resignal = FALSE
[08:07:21.599] | : . ' Number of conditions: 0
[08:07:21.599] | : . '  int 0
[08:07:21.599] | : . signalConditions() ... done
[08:07:21.599] | : . result() for ClusterFuture ...
[08:07:21.599] | : . ' result already collected: FutureResult
[08:07:21.599] | : . result() for ClusterFuture ... done
[08:07:21.600] | : . signalConditions() ...
[08:07:21.600] | : . ' include = ‘condition’
[08:07:21.600] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:21.600] | : . ' resignal = TRUE
[08:07:21.600] | : . ' Number of conditions: 0
[08:07:21.600] | : . '  int 0
[08:07:21.600] | : . signalConditions() ... done
[08:07:21.601] | : . relayed: [n=2] TRUE, TRUE
[08:07:21.601] | : . queued futures: [n=2] TRUE, TRUE
[08:07:21.601] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:21.601] | : resolve() for MultisessionFuture ...
[08:07:21.601] | : resolve() for MultisessionFuture ... done
[08:07:21.601] | : length: 0 (resolved future 1)
[08:07:21.601] | future_lapply() -> future_xapply() ... done
[08:07:21.601] | Relaying remaining futures ...
[08:07:21.601] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:21.601] | : . nx: 2
[08:07:21.602] | : . relay: TRUE
[08:07:21.602] | : . stdout: TRUE
[08:07:21.602] | : . signal: TRUE
[08:07:21.602] | : . resignal: FALSE
[08:07:21.602] | : . force: TRUE
[08:07:21.602] | : . relayed: [n=2] TRUE, TRUE
[08:07:21.602] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:21.602] | : . relayed: [n=2] TRUE, TRUE
[08:07:21.602] | : . queued futures: [n=2] TRUE, TRUE
[08:07:21.602] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:21.602] | Relaying remaining futures ... done
[08:07:21.603] future_lapply() ... done
[08:07:21.603]  - Number of value chunks collected: 2
[08:07:21.603] Resolving 2 futures (chunks) ... DONE
[08:07:21.603] Reducing values from 2 chunks ...
[08:07:21.603]  - Number of values collected after concatenation: 2
[08:07:21.603]  - Number of values expected: 2
[08:07:21.603] Reducing values from 2 chunks ... DONE


* future_lapply(x, ..., future.stdout = TRUE) ... DONE
* future_lapply(x, ..., future.stdout = NA) ...
[08:07:21.604] future_lapply() ...
[08:07:21.604] | Globals in FUN(): [n=4] ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:21.605] | => Will pass '...' to FUN(): ‘{’, ‘    ...future.FUN(...future.X_jj, ...)’, ‘}’
[08:07:21.605] | future_lapply() -> future_xapply() ...
[08:07:21.605] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.605] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.605] | : Number of chunks: 2
[08:07:21.605] | : getGlobalsAndPackagesXApply() ...
[08:07:21.606] | : . future.globals: TRUE
[08:07:21.606] | : . getGlobalsAndPackages() ...
[08:07:21.606] | : . ' Searching for globals ...
[08:07:21.613] | : . ' , globals found: [5] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’
[08:07:21.613] | : . ' Searching for globals ... done
[08:07:21.613] | : . ' Resolving globals: FALSE
[08:07:21.613] | : . ' Search for packages associated with the globals ...
[08:07:21.613] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:21.614] | : . ' , Packages: [1] ‘base’
[08:07:21.614] | : . ' Search for packages associated with the globals ... done
[08:07:21.614] | : . ' The total size of the 1 globals is 841 bytes (841 bytes)
[08:07:21.614] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 841 bytes There is one global: ‘FUN’ (841 bytes of class ‘function’)
[08:07:21.614] | : . ' Packages after dropping 'base': [0] 
[08:07:21.614] | : . ' globals: [1] ‘FUN’
[08:07:21.615] | : . ' packages: [0] 
[08:07:21.615] | : . getGlobalsAndPackages() ... done
[08:07:21.615] | : . globals found/used: [n=1] ‘FUN’
[08:07:21.615] | : . needed namespaces: [n=0] 
[08:07:21.615] | : . use_args: TRUE
[08:07:21.615] | : . Getting '...' globals ...
[08:07:21.615] | : . ' resolve() for FutureGlobals ...
[08:07:21.615] | : . ' , recursive: 0
[08:07:21.616] | : . ' , Number of elements: 1
[08:07:21.616] | : . ' , elements: ‘...’
[08:07:21.616] | : . ' , 'obj' is DotDotDotList
[08:07:21.616] | : . ' , resolve(obj, ...) ...
[08:07:21.616] | : . ' , ; resolve() for DotDotDotList ...
[08:07:21.616] | : . ' , ; ` recursive: -1
[08:07:21.616] | : . ' , ; resolve() for DotDotDotList ... done
[08:07:21.616] | : . ' , resolve(obj, ...) ... done
[08:07:21.616] | : . ' , resolved() for DotDotDotList ...
[08:07:21.617] | : . ' , ; Number of elements: 0
[08:07:21.617] | : . ' , ; Number of futures: 0
[08:07:21.617] | : . ' , resolved() for DotDotDotList ... done
[08:07:21.617] | : . ' , length: 0 (resolved future 1)
[08:07:21.617] | : . ' resolve() for FutureGlobals ... done
[08:07:21.617] | : . ' '...' content: [n=0] 
[08:07:21.617] | : . ' List of 1
[08:07:21.617] | : . '  $ ...: list()
[08:07:21.617] | : . '   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:21.617] | : . '  - attr(*, "where")=List of 1
[08:07:21.617] | : . '   ..$ ...:<environment: 0x55ab949c5cf8> 
[08:07:21.617] | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:21.617] | : . '  - attr(*, "resolved")= logi TRUE
[08:07:21.617] | : . '  - attr(*, "total_size")= num NA
[08:07:21.620] | : . Getting '...' globals ... done
[08:07:21.620] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:07:21.620] | : . List of 2
[08:07:21.620] | : .  $ ...future.FUN:function (x)  
[08:07:21.620] | : .  $ ...          : list()
[08:07:21.620] | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:21.620] | : .  - attr(*, "where")=List of 2
[08:07:21.620] | : .   ..$ ...future.FUN:<environment: 0x55ab949c5cf8> 
[08:07:21.620] | : .   ..$ ...          :<environment: 0x55ab949c5cf8> 
[08:07:21.620] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:21.620] | : .  - attr(*, "resolved")= logi FALSE
[08:07:21.620] | : .  - attr(*, "total_size")= num 6008
[08:07:21.623] | : . Packages to be attached in all futures: [n=0] 
[08:07:21.623] | : getGlobalsAndPackagesXApply() ... done
[08:07:21.623] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.623] | : List of 5
[08:07:21.623] | :  $ ...future.FUN            :function (x)  
[08:07:21.623] | :  $ ...                      : list()
[08:07:21.623] | :   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:21.623] | :  $ ...future.elements_ii    : NULL
[08:07:21.623] | :  $ ...future.seeds_ii       : NULL
[08:07:21.623] | :  $ ...future.globals.maxSize: NULL
[08:07:21.623] | :  - attr(*, "where")=List of 5
[08:07:21.623] | :   ..$ ...future.FUN            :<environment: 0x55ab949c5cf8> 
[08:07:21.623] | :   ..$ ...                      :<environment: 0x55ab949c5cf8> 
[08:07:21.623] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:21.623] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:21.623] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:21.623] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:21.623] | :  - attr(*, "resolved")= logi FALSE
[08:07:21.623] | :  - attr(*, "total_size")= num 6008
[08:07:21.627] | : Number of futures (= number of chunks): 2
[08:07:21.627] | : Launching 2 futures (chunks) ...
[08:07:21.628] | : Chunk #1 of 2 ...
[08:07:21.628] | :  - Finding globals in 'X' for chunk #1 ...
[08:07:21.628] | : getGlobalsAndPackages() ...
[08:07:21.628] | : . Searching for globals ...
[08:07:21.628] | : . ' globals found: [0] 
[08:07:21.628] | : . Searching for globals ... done
[08:07:21.628] | : . globals: [0] <none>
[08:07:21.629] | : . packages: [0] <none>
[08:07:21.629] | : getGlobalsAndPackages() ... done
[08:07:21.629] | :    + additional globals found: [n=0] 
[08:07:21.629] | :    + additional namespaces needed: [n=0] 
[08:07:21.629] | :  - Finding globals in 'X' for chunk #1 ... DONE
[08:07:21.629] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:21.629] | :  - seeds: <none>
[08:07:21.629] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.629] | : future(..., label = ‘future_lapply-1’) ...
[08:07:21.629] | : . lazy: FALSE
[08:07:21.630] | : . stdout: NA
[08:07:21.630] | : . conditions: [n=1] ‘condition’
[08:07:21.630] | : . gc: FALSE
[08:07:21.630] | : . earlySignal: FALSE
[08:07:21.630] | : . getGlobalsAndPackages() ...
[08:07:21.630] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.630] | : . ' Resolving globals: FALSE
[08:07:21.630] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:21.630] | : . ' , {
[08:07:21.630] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.630] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:21.630] | : . ' ,     "# as a global variable                                         "
[08:07:21.630] | : . ' ,     do.call(function(...) {
[08:07:21.630] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.630] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:21.630] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.630] | : . ' ,         "# anonymous function.                                          "
[08:07:21.630] | : . ' ,         "#                                                              "
[08:07:21.630] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.630] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:21.630] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.630] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:21.630] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:21.630] | : . ' ,         repeat {
[08:07:21.630] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:21.630] | : . ' ,                 emptyenv())) 
[08:07:21.630] | : . ' ,                 break
[08:07:21.630] | : . ' ,             penv <- env
[08:07:21.630] | : . ' ,             env <- parent.env(env)
[08:07:21.630] | : . ' ,         }
[08:07:21.630] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:21.630] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:21.630] | : . ' ,         }
[08:07:21.630] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.630] | : . ' ,             !isNamespace(penv)) {
[08:07:21.630] | : . ' ,             parent.env(penv) <- environment()
[08:07:21.630] | : . ' ,         }
[08:07:21.630] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.630] | : . ' ,         {
[08:07:21.630] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.630] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.630] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.630] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.630] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:21.630] | : . ' ,             }
[08:07:21.630] | : . ' ,             {
[08:07:21.630] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.630] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.630] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.630] | : . ' ,                   {
[08:07:21.630] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:21.630] | : . ' ,                   }
[08:07:21.630] | : . ' ,                 })
[08:07:21.630] | : . ' ,             }
[08:07:21.630] | : . ' ,         }
[08:07:21.630] | : . ' ,     }, args = future.call.arguments)
[08:07:21.630] | : . ' , }
[08:07:21.631] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:21.631] | : . ' Search for packages associated with the globals ...
[08:07:21.631] | : . ' , Packages associated with globals: [0] 
[08:07:21.631] | : . ' , Packages: [0] 
[08:07:21.632] | : . ' Search for packages associated with the globals ... done
[08:07:21.632] | : . ' Packages after dropping 'base': [0] 
[08:07:21.632] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.632] | : . ' packages: [0] 
[08:07:21.632] | : . getGlobalsAndPackages() ... done
[08:07:21.632] | : . run() for ‘Future’ (‘future_lapply-1’) ...
[08:07:21.632] | : . ' state: ‘created’
[08:07:21.633] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.633] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.633] | : . ' Using MultisessionFutureBackend ...
[08:07:21.633] | : . ' , Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:21.633] | : . ' , Launching futures ...
[08:07:21.633] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:21.633] | : . ' , ; ` Workers: [n=2]
[08:07:21.633] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:21.635] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:21.635] | : . ' , ; ` requestWorker() ...
[08:07:21.635] | : . ' , ; ` | requestNode() ...
[08:07:21.635] | : . ' , ; ` | : Number of workers: 2
[08:07:21.635] | : . ' , ; ` | : Polling for a free worker ...
[08:07:21.636] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.636] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.636] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:21.636] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.636] | : . ' , ; ` | : . Total time: 0
[08:07:21.636] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:21.636] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.636] | : . ' , ; ` | : . Listing all futures
[08:07:21.636] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:21.636] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.636] | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:21.637] | : . ' , ; ` | : Index of first available worker: 1
[08:07:21.637] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:21.691] | : . ' , ; ` | : . Worker is functional
[08:07:21.691] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.692] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.692] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:21.692] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.692] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:21.692] | : . ' , ; ` | requestNode() ... done
[08:07:21.692] | : . ' , ; ` | cluster node index: 1
[08:07:21.692] | : . ' , ; ` requestWorker() ... done
[08:07:21.692] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:21.693] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:21.693] | : . ' , ; ` launchFuture() ...
[08:07:21.693] | : . ' , ; ` | cluster node index: 1
[08:07:21.693] | : . ' , ; ` | getFutureData() ...
[08:07:21.693] | : . ' , ; ` | : getFutureCore() ...
[08:07:21.693] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:21.693] | : . ' , ; ` | : getFutureCore() ... done
[08:07:21.693] | : . ' , ; ` | : getFutureCapture() ...
[08:07:21.694] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:21.694] | : . ' , ; ` | : getFutureContext() ...
[08:07:21.694] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.694] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:21.694] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.694] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:21.694] | : . ' , ; ` | : getFutureContext() ... done
[08:07:21.694] | : . ' , ; ` | getFutureData() ... done
[08:07:21.695] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:21.695] | : . ' , ; ` | : Appended future to position #1
[08:07:21.695] | : . ' , ; ` | : Number of registered futures: 1
[08:07:21.695] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:21.695] | : . ' , ; ` launchFuture() ... done
[08:07:21.695] | : . ' , ; ` MultisessionFuture started
[08:07:21.696] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:21.696] | : . ' , Launching futures ... done
[08:07:21.696] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.696] | : . ' Using MultisessionFutureBackend ... done
[08:07:21.696] | : . run() for ‘Future’ (‘future_lapply-1’) ... done
[08:07:21.696] | : future(..., label = ‘future_lapply-1’) ... done
[08:07:21.696] | : Created future:
[08:07:21.697] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.698] | : . Cluster node socket connection: index=4, id=729
[08:07:21.698] | : . assertValidConnection() ...
[08:07:21.698] | : . ' cluster node index: 1
[08:07:21.698] | : . assertValidConnection() ... done
[08:07:21.708] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.709] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.696] | : MultisessionFuture:
[08:07:21.696] | : Label: ‘future_lapply-1’
[08:07:21.696] | : Expression:
[08:07:21.696] | : {
[08:07:21.696] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.696] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:21.696] | :     "# as a global variable                                         "
[08:07:21.696] | :     do.call(function(...) {
[08:07:21.696] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.696] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:21.696] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.696] | :         "# anonymous function.                                          "
[08:07:21.696] | :         "#                                                              "
[08:07:21.696] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.696] | :         "# function environment of FUN() to the calling environment.    "
[08:07:21.696] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.696] | :         "# global environment, which is where globals are written.      "
[08:07:21.696] | :         penv <- env <- environment(...future.FUN)
[08:07:21.696] | :         repeat {
[08:07:21.696] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:21.696] | :                 emptyenv())) 
[08:07:21.696] | :                 break
[08:07:21.696] | :             penv <- env
[08:07:21.696] | :             env <- parent.env(env)
[08:07:21.696] | :         }
[08:07:21.696] | :         if (identical(penv, globalenv())) {
[08:07:21.696] | :             environment(...future.FUN) <- environment()
[08:07:21.696] | :         }
[08:07:21.696] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.696] | :             !isNamespace(penv)) {
[08:07:21.696] | :             parent.env(penv) <- environment()
[08:07:21.696] | :         }
[08:07:21.696] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.696] | :         {
[08:07:21.696] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.696] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.696] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.696] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.696] | :                 on.exit(options(oopts), add = TRUE)
[08:07:21.696] | :             }
[08:07:21.696] | :             {
[08:07:21.696] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.696] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.696] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.696] | :                   {
[08:07:21.696] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:21.696] | :                   }
[08:07:21.696] | :                 })
[08:07:21.696] | :             }
[08:07:21.696] | :         }
[08:07:21.696] | :     }, args = future.call.arguments)
[08:07:21.696] | : }
[08:07:21.696] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:21.696] | : Packages: <none>
[08:07:21.696] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:21.696] | : Capture standard output: NA
[08:07:21.696] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:21.696] | : Immediate condition classes: ‘immediateCondition’
[08:07:21.696] | : Lazy evaluation: FALSE
[08:07:21.696] | : Local evaluation: TRUE
[08:07:21.696] | : Asynchronous evaluation: TRUE
[08:07:21.696] | : Early signaling: FALSE
[08:07:21.696] | : Environment: R_GlobalEnv
[08:07:21.696] | : State: ‘running’
[08:07:21.696] | : Resolved: FALSE
[08:07:21.696] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-23
[08:07:21.696] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:21.696] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.696] | : Value: <not collected>
[08:07:21.696] | : Conditions captured: <none>
[08:07:21.709] | : Chunk #1 of 2 ... DONE
[08:07:21.709] | : Chunk #2 of 2 ...
[08:07:21.709] | :  - Finding globals in 'X' for chunk #2 ...
[08:07:21.710] | : getGlobalsAndPackages() ...
[08:07:21.710] | : . Searching for globals ...
[08:07:21.710] | : . ' globals found: [0] 
[08:07:21.710] | : . Searching for globals ... done
[08:07:21.710] | : . globals: [0] <none>
[08:07:21.710] | : . packages: [0] <none>
[08:07:21.711] | : getGlobalsAndPackages() ... done
[08:07:21.711] | :    + additional globals found: [n=0] 
[08:07:21.711] | :    + additional namespaces needed: [n=0] 
[08:07:21.711] | :  - Finding globals in 'X' for chunk #2 ... DONE
[08:07:21.711] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:21.711] | :  - seeds: <none>
[08:07:21.711] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.711] | : future(..., label = ‘future_lapply-2’) ...
[08:07:21.711] | : . lazy: FALSE
[08:07:21.711] | : . stdout: NA
[08:07:21.712] | : . conditions: [n=1] ‘condition’
[08:07:21.712] | : . gc: FALSE
[08:07:21.712] | : . earlySignal: FALSE
[08:07:21.712] | : . getGlobalsAndPackages() ...
[08:07:21.712] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.714] | : . ' Resolving globals: FALSE
[08:07:21.714] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:21.715] | : . ' , {
[08:07:21.715] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.715] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:21.715] | : . ' ,     "# as a global variable                                         "
[08:07:21.715] | : . ' ,     do.call(function(...) {
[08:07:21.715] | : . ' ,         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.715] | : . ' ,         "# without having an '...' argument. This means '...' is treated"
[08:07:21.715] | : . ' ,         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.715] | : . ' ,         "# anonymous function.                                          "
[08:07:21.715] | : . ' ,         "#                                                              "
[08:07:21.715] | : . ' ,         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.715] | : . ' ,         "# function environment of FUN() to the calling environment.    "
[08:07:21.715] | : . ' ,         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.715] | : . ' ,         "# global environment, which is where globals are written.      "
[08:07:21.715] | : . ' ,         penv <- env <- environment(...future.FUN)
[08:07:21.715] | : . ' ,         repeat {
[08:07:21.715] | : . ' ,             if (identical(env, globalenv()) || identical(env, 
[08:07:21.715] | : . ' ,                 emptyenv())) 
[08:07:21.715] | : . ' ,                 break
[08:07:21.715] | : . ' ,             penv <- env
[08:07:21.715] | : . ' ,             env <- parent.env(env)
[08:07:21.715] | : . ' ,         }
[08:07:21.715] | : . ' ,         if (identical(penv, globalenv())) {
[08:07:21.715] | : . ' ,             environment(...future.FUN) <- environment()
[08:07:21.715] | : . ' ,         }
[08:07:21.715] | : . ' ,         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.715] | : . ' ,             !isNamespace(penv)) {
[08:07:21.715] | : . ' ,             parent.env(penv) <- environment()
[08:07:21.715] | : . ' ,         }
[08:07:21.715] | : . ' ,         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.715] | : . ' ,         {
[08:07:21.715] | : . ' ,             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.715] | : . ' ,             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.715] | : . ' ,             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.715] | : . ' ,                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.715] | : . ' ,                 on.exit(options(oopts), add = TRUE)
[08:07:21.715] | : . ' ,             }
[08:07:21.715] | : . ' ,             {
[08:07:21.715] | : . ' ,                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.715] | : . ' ,                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.715] | : . ' ,                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.715] | : . ' ,                   {
[08:07:21.715] | : . ' ,                     ...future.FUN(...future.X_jj, ...)
[08:07:21.715] | : . ' ,                   }
[08:07:21.715] | : . ' ,                 })
[08:07:21.715] | : . ' ,             }
[08:07:21.715] | : . ' ,         }
[08:07:21.715] | : . ' ,     }, args = future.call.arguments)
[08:07:21.715] | : . ' , }
[08:07:21.715] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:21.715] | : . ' Search for packages associated with the globals ...
[08:07:21.715] | : . ' , Packages associated with globals: [0] 
[08:07:21.716] | : . ' , Packages: [0] 
[08:07:21.716] | : . ' Search for packages associated with the globals ... done
[08:07:21.716] | : . ' Packages after dropping 'base': [0] 
[08:07:21.716] | : . ' globals: [5] ‘...future.FUN’, ‘future.call.arguments’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:21.716] | : . ' packages: [0] 
[08:07:21.716] | : . getGlobalsAndPackages() ... done
[08:07:21.716] | : . run() for ‘Future’ (‘future_lapply-2’) ...
[08:07:21.717] | : . ' state: ‘created’
[08:07:21.717] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.717] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.717] | : . ' Using MultisessionFutureBackend ...
[08:07:21.717] | : . ' , Number of futures since start: 5 (5 created, 5 launched, 4 finished)
[08:07:21.717] | : . ' , Launching futures ...
[08:07:21.717] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:21.717] | : . ' , ; ` Workers: [n=2]
[08:07:21.718] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:21.719] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:21.719] | : . ' , ; ` requestWorker() ...
[08:07:21.719] | : . ' , ; ` | requestNode() ...
[08:07:21.719] | : . ' , ; ` | : Number of workers: 2
[08:07:21.719] | : . ' , ; ` | : Polling for a free worker ...
[08:07:21.720] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.720] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.720] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:21.720] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.720] | : . ' , ; ` | : . Total time: 0
[08:07:21.720] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:21.720] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.720] | : . ' , ; ` | : . Listing all futures
[08:07:21.720] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:21.720] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.721] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:07:21.721] | : . ' , ; ` | : Index of first available worker: 2
[08:07:21.721] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:21.818] | : . ' , ; ` | : . Worker is functional
[08:07:21.818] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:21.819] | : . ' , ; ` | : . ' Listing all futures
[08:07:21.819] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:21.819] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:21.819] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:21.819] | : . ' , ; ` | requestNode() ... done
[08:07:21.819] | : . ' , ; ` | cluster node index: 2
[08:07:21.819] | : . ' , ; ` requestWorker() ... done
[08:07:21.819] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:21.820] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:21.820] | : . ' , ; ` launchFuture() ...
[08:07:21.820] | : . ' , ; ` | cluster node index: 2
[08:07:21.820] | : . ' , ; ` | getFutureData() ...
[08:07:21.820] | : . ' , ; ` | : getFutureCore() ...
[08:07:21.821] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:21.821] | : . ' , ; ` | : getFutureCore() ... done
[08:07:21.821] | : . ' , ; ` | : getFutureCapture() ...
[08:07:21.821] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:21.821] | : . ' , ; ` | : getFutureContext() ...
[08:07:21.821] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:21.821] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:21.821] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:21.821] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:21.822] | : . ' , ; ` | : getFutureContext() ... done
[08:07:21.822] | : . ' , ; ` | getFutureData() ... done
[08:07:21.822] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:21.822] | : . ' , ; ` | : Appended future to position #2
[08:07:21.823] | : . ' , ; ` | : Number of registered futures: 2
[08:07:21.823] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:21.823] | : . ' , ; ` launchFuture() ... done
[08:07:21.823] | : . ' , ; ` MultisessionFuture started
[08:07:21.823] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:21.823] | : . ' , Launching futures ... done
[08:07:21.823] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.823] | : . ' Using MultisessionFutureBackend ... done
[08:07:21.823] | : . run() for ‘Future’ (‘future_lapply-2’) ... done
[08:07:21.824] | : future(..., label = ‘future_lapply-2’) ... done
[08:07:21.824] | : Created future:
[08:07:21.825] | : resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.825] | : . Cluster node socket connection: index=5, id=730
[08:07:21.825] | : . assertValidConnection() ...
[08:07:21.825] | : . ' cluster node index: 2
[08:07:21.826] | : . assertValidConnection() ... done
[08:07:21.836] | : . socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.836] | : resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.824] | : MultisessionFuture:
[08:07:21.824] | : Label: ‘future_lapply-2’
[08:07:21.824] | : Expression:
[08:07:21.824] | : {
[08:07:21.824] | :     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:21.824] | :     "# expression in do.call(), because function called uses '...'  "
[08:07:21.824] | :     "# as a global variable                                         "
[08:07:21.824] | :     do.call(function(...) {
[08:07:21.824] | :         "# future::getGlobalsAndPackages(): FUN() uses '...' internally "
[08:07:21.824] | :         "# without having an '...' argument. This means '...' is treated"
[08:07:21.824] | :         "# as a global variable. This may happen when FUN() is an       "
[08:07:21.824] | :         "# anonymous function.                                          "
[08:07:21.824] | :         "#                                                              "
[08:07:21.824] | :         "# If an anonymous function, we will make sure to restore the   "
[08:07:21.824] | :         "# function environment of FUN() to the calling environment.    "
[08:07:21.824] | :         "# We assume FUN() an anonymous function if it lives in the     "
[08:07:21.824] | :         "# global environment, which is where globals are written.      "
[08:07:21.824] | :         penv <- env <- environment(...future.FUN)
[08:07:21.824] | :         repeat {
[08:07:21.824] | :             if (identical(env, globalenv()) || identical(env, 
[08:07:21.824] | :                 emptyenv())) 
[08:07:21.824] | :                 break
[08:07:21.824] | :             penv <- env
[08:07:21.824] | :             env <- parent.env(env)
[08:07:21.824] | :         }
[08:07:21.824] | :         if (identical(penv, globalenv())) {
[08:07:21.824] | :             environment(...future.FUN) <- environment()
[08:07:21.824] | :         }
[08:07:21.824] | :         else if (!identical(penv, emptyenv()) && !is.null(penv) && 
[08:07:21.824] | :             !isNamespace(penv)) {
[08:07:21.824] | :             parent.env(penv) <- environment()
[08:07:21.824] | :         }
[08:07:21.824] | :         rm(list = c("env", "penv"), inherits = FALSE)
[08:07:21.824] | :         {
[08:07:21.824] | :             "# future.apply:::future_xapply(): preserve future option"
[08:07:21.824] | :             ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:21.824] | :             if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:21.824] | :                 oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:21.824] | :                 on.exit(options(oopts), add = TRUE)
[08:07:21.824] | :             }
[08:07:21.824] | :             {
[08:07:21.824] | :                 "# future.apply::future_lapply(): process chunk of elements"
[08:07:21.824] | :                 lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:07:21.824] | :                   ...future.X_jj <- ...future.elements_ii[[jj]]
[08:07:21.824] | :                   {
[08:07:21.824] | :                     ...future.FUN(...future.X_jj, ...)
[08:07:21.824] | :                   }
[08:07:21.824] | :                 })
[08:07:21.824] | :             }
[08:07:21.824] | :         }
[08:07:21.824] | :     }, args = future.call.arguments)
[08:07:21.824] | : }
[08:07:21.824] | : Globals: 5 objects totaling 6.12 KiB (function ‘...future.FUN’ of 841 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:21.824] | : Packages: <none>
[08:07:21.824] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:21.824] | : Capture standard output: NA
[08:07:21.824] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:21.824] | : Immediate condition classes: ‘immediateCondition’
[08:07:21.824] | : Lazy evaluation: FALSE
[08:07:21.824] | : Local evaluation: TRUE
[08:07:21.824] | : Asynchronous evaluation: TRUE
[08:07:21.824] | : Early signaling: FALSE
[08:07:21.824] | : Environment: R_GlobalEnv
[08:07:21.824] | : State: ‘running’
[08:07:21.824] | : Resolved: FALSE
[08:07:21.824] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-24
[08:07:21.824] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:21.824] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:21.824] | : Value: <not collected>
[08:07:21.824] | : Conditions captured: <none>
[08:07:21.837] | : Chunk #2 of 2 ... DONE
[08:07:21.837] | : Launching 2 futures (chunks) ... DONE
[08:07:21.837] | : Resolving 2 futures (chunks) ...
[08:07:21.837] | : value() for list ...
[08:07:21.837] | : . recursive: 0
[08:07:21.837] | : . reduce: FALSE
[08:07:21.837] | : . length: 2

[08:07:21.838] | : . Number of remaining objects: 2
[08:07:21.838] | : . checking value #1:
[08:07:21.838] | : . 'obj' is MultisessionFuture
[08:07:21.838] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.838] | : . ' Cluster node socket connection: index=4, id=729
[08:07:21.838] | : . ' assertValidConnection() ...
[08:07:21.838] | : . ' , cluster node index: 1
[08:07:21.839] | : . ' assertValidConnection() ... done
[08:07:21.849] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.849] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.849] | : . checking value #2:
[08:07:21.849] | : . 'obj' is MultisessionFuture
[08:07:21.850] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.850] | : . ' Cluster node socket connection: index=5, id=730
[08:07:21.850] | : . ' assertValidConnection() ...
[08:07:21.850] | : . ' , cluster node index: 2
[08:07:21.851] | : . ' assertValidConnection() ... done
[08:07:21.861] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.861] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.871] | : . Number of remaining objects: 2
[08:07:21.871] | : . checking value #1:
[08:07:21.872] | : . 'obj' is MultisessionFuture
[08:07:21.872] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.872] | : . ' Cluster node socket connection: index=4, id=729
[08:07:21.872] | : . ' assertValidConnection() ...
[08:07:21.872] | : . ' , cluster node index: 1
[08:07:21.873] | : . ' assertValidConnection() ... done
[08:07:21.883] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.883] | : . resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.883] | : . checking value #2:
[08:07:21.883] | : . 'obj' is MultisessionFuture
[08:07:21.883] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.884] | : . ' Cluster node socket connection: index=5, id=730
[08:07:21.884] | : . ' assertValidConnection() ...
[08:07:21.884] | : . ' , cluster node index: 2
[08:07:21.884] | : . ' assertValidConnection() ... done
[08:07:21.884] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:21.884] | : . ' , cluster node index: 2
[08:07:21.885] | : . ' , [1] TRUE
[08:07:21.885] | : . ' , received data:
[08:07:21.885] | : . ' , List of 5
[08:07:21.885] | : . ' ,  $ type   : chr "VALUE"
[08:07:21.885] | : . ' ,  $ value  :List of 16
[08:07:21.885] | : . ' ,   ..$ value              :List of 1
[08:07:21.885] | : . ' ,   .. ..$ : int 0
[08:07:21.885] | : . ' ,   ..$ visible            : logi TRUE
[08:07:21.885] | : . ' ,   ..$ stdout             : NULL
[08:07:21.885] | : . ' ,   ..$ conditions         : list()
[08:07:21.885] | : . ' ,   ..$ rng                : logi FALSE
[08:07:21.885] | : . ' ,   ..$ seed               : NULL
[08:07:21.885] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:21.885] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:21.885] | : . ' ,   .. ..$ added   : NULL
[08:07:21.885] | : . ' ,   .. ..$ removed : NULL
[08:07:21.885] | : . ' ,   .. ..$ replaced: NULL
[08:07:21.885] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:21.885] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:21.885] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.885] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:21.885] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "24"
[08:07:21.885] | : . ' ,   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:21.885] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:21.885] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:21.885] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:21.885] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:21.885] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:21.885] | : . ' ,   .. .. ..$ pid   : int 65490
[08:07:21.885] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:21.885] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:21.885] | : . ' ,   ..$ r_info             :List of 4
[08:07:21.885] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:21.885] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:21.885] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:21.885] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:21.885] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:21.885] | : . ' ,   ..$ version            : chr "1.8"
[08:07:21.885] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:21.885] | : . ' ,  $ success: logi TRUE
[08:07:21.885] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.005 0 0.005 0 0
[08:07:21.885] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:21.885] | : . ' ,  $ tag    : NULL
[08:07:21.896] | : . ' , Received FutureResult
[08:07:21.896] | : . ' , FutureResult:
[08:07:21.896] | : . ' , value: ‘list’
[08:07:21.896] | : . ' , visible: TRUE
[08:07:21.896] | : . ' , stdout: NULL
[08:07:21.896] | : . ' , conditions: [n = 0] 
[08:07:21.896] | : . ' , RNG used: FALSE
[08:07:21.896] | : . ' , duration: 0.004548788 secs (started 2025-06-17 08:07:21.863327)
[08:07:21.896] | : . ' , version: 1.8
[08:07:21.897] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:21.897] | : . ' , ; Removed future from position #2
[08:07:21.897] | : . ' , ; Number of registered futures: 1
[08:07:21.897] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:21.897] | : . ' , Erased future from future backend
[08:07:21.897] | : . ' , result() for ClusterFuture ...
[08:07:21.897] | : . ' , ; result already collected: FutureResult
[08:07:21.898] | : . ' , result() for ClusterFuture ... done
[08:07:21.898] | : . ' , signalConditions() ...
[08:07:21.898] | : . ' , ; include = ‘immediateCondition’
[08:07:21.898] | : . ' , ; exclude = 
[08:07:21.898] | : . ' , ; resignal = FALSE
[08:07:21.898] | : . ' , ; Number of conditions: 0
[08:07:21.898] | : . ' , ;  int 0
[08:07:21.899] | : . ' , signalConditions() ... done
[08:07:21.899] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:21.899] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:21.899] | : . resolved() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.899] | : . assertFutureResult() ...
[08:07:21.899] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:21.899] | : . ' Future uuid: 24
[08:07:21.899] | : . ' identical; success
[08:07:21.899] | : . assertFutureResult() ... done
[08:07:21.899] | : . MultisessionFuture #2
[08:07:21.899] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:21.900] | : . ' nx: 2
[08:07:21.900] | : . ' relay: TRUE
[08:07:21.900] | : . ' stdout: TRUE
[08:07:21.900] | : . ' signal: TRUE
[08:07:21.900] | : . ' resignal: FALSE
[08:07:21.900] | : . ' force: TRUE
[08:07:21.900] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.900] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:21.900] | : . ' until=1
[08:07:21.900] | : . ' relaying element #1
[08:07:21.900] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.901] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.901] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:21.901] | : . value(<MultisessionFuture>, ...) ...
[08:07:21.901] | : . value(<MultisessionFuture>, ...) ... done
[08:07:21.901] | : . value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:21.901] | : . ' result() for ClusterFuture ...
[08:07:21.901] | : . ' , result already collected: FutureResult
[08:07:21.901] | : . ' result() for ClusterFuture ... done
[08:07:21.901] | : . ' result() for ClusterFuture ...
[08:07:21.901] | : . ' , result already collected: FutureResult
[08:07:21.902] | : . ' result() for ClusterFuture ... done
[08:07:21.902] | : . ' signalConditions() ...
[08:07:21.902] | : . ' , include = ‘immediateCondition’
[08:07:21.902] | : . ' , exclude = 
[08:07:21.902] | : . ' , resignal = FALSE
[08:07:21.902] | : . ' , Number of conditions: 0
[08:07:21.902] | : . ' ,  int 0
[08:07:21.903] | : . ' signalConditions() ... done
[08:07:21.903] | : . ' check for misuse ...
[08:07:21.903] | : . ' check for misuse ... done
[08:07:21.903] | : . value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:21.903] | : . value: <list>
[08:07:21.903] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:21.903] | : . ' nx: 2
[08:07:21.903] | : . ' relay: TRUE
[08:07:21.903] | : . ' stdout: TRUE
[08:07:21.904] | : . ' signal: TRUE
[08:07:21.904] | : . ' resignal: FALSE
[08:07:21.904] | : . ' force: TRUE
[08:07:21.904] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.904] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.904] | : . ' until=1
[08:07:21.904] | : . ' relaying element #1
[08:07:21.904] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:21.904] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:21.904] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:21.904] | : . resolve() for MultisessionFuture ...
[08:07:21.905] | : . resolve() for MultisessionFuture ... done
[08:07:21.905] | : . length: 1 (resolved future 2)
[08:07:21.905] | : value() for list ... done
[08:07:21.915] | : Number of remaining objects: 1
[08:07:21.915] | : checking value #1:
[08:07:21.915] | : 'obj' is MultisessionFuture
[08:07:21.915] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.916] | : . Cluster node socket connection: index=4, id=729
[08:07:21.916] | : . assertValidConnection() ...
[08:07:21.916] | : . ' cluster node index: 1
[08:07:21.916] | : . assertValidConnection() ... done
[08:07:21.927] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.927] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.937] | : Number of remaining objects: 1
[08:07:21.937] | : checking value #1:
[08:07:21.937] | : 'obj' is MultisessionFuture
[08:07:21.937] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.938] | : . Cluster node socket connection: index=4, id=729
[08:07:21.938] | : . assertValidConnection() ...
[08:07:21.938] | : . ' cluster node index: 1
[08:07:21.938] | : . assertValidConnection() ... done
[08:07:21.949] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.949] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.959] | : Number of remaining objects: 1
[08:07:21.959] | : checking value #1:
[08:07:21.959] | : 'obj' is MultisessionFuture
[08:07:21.960] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.960] | : . Cluster node socket connection: index=4, id=729
[08:07:21.960] | : . assertValidConnection() ...
[08:07:21.960] | : . ' cluster node index: 1
[08:07:21.961] | : . assertValidConnection() ... done
[08:07:21.971] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.971] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:21.981] | : Number of remaining objects: 1
[08:07:21.981] | : checking value #1:
[08:07:21.981] | : 'obj' is MultisessionFuture
[08:07:21.982] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:21.982] | : . Cluster node socket connection: index=4, id=729
[08:07:21.982] | : . assertValidConnection() ...
[08:07:21.982] | : . ' cluster node index: 1
[08:07:21.983] | : . assertValidConnection() ... done
[08:07:21.993] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:21.993] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.003] | : Number of remaining objects: 1
[08:07:22.003] | : checking value #1:
[08:07:22.003] | : 'obj' is MultisessionFuture
[08:07:22.004] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.004] | : . Cluster node socket connection: index=4, id=729
[08:07:22.004] | : . assertValidConnection() ...
[08:07:22.004] | : . ' cluster node index: 1
[08:07:22.004] | : . assertValidConnection() ... done
[08:07:22.015] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.015] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.025] | : Number of remaining objects: 1
[08:07:22.025] | : checking value #1:
[08:07:22.025] | : 'obj' is MultisessionFuture
[08:07:22.025] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.026] | : . Cluster node socket connection: index=4, id=729
[08:07:22.026] | : . assertValidConnection() ...
[08:07:22.026] | : . ' cluster node index: 1
[08:07:22.026] | : . assertValidConnection() ... done
[08:07:22.037] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.037] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.047] | : Number of remaining objects: 1
[08:07:22.047] | : checking value #1:
[08:07:22.048] | : 'obj' is MultisessionFuture
[08:07:22.048] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.048] | : . Cluster node socket connection: index=4, id=729
[08:07:22.049] | : . assertValidConnection() ...
[08:07:22.049] | : . ' cluster node index: 1
[08:07:22.049] | : . assertValidConnection() ... done
[08:07:22.060] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.060] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.070] | : Number of remaining objects: 1
[08:07:22.070] | : checking value #1:
[08:07:22.070] | : 'obj' is MultisessionFuture
[08:07:22.070] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.071] | : . Cluster node socket connection: index=4, id=729
[08:07:22.071] | : . assertValidConnection() ...
[08:07:22.071] | : . ' cluster node index: 1
[08:07:22.071] | : . assertValidConnection() ... done
[08:07:22.081] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.082] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.092] | : Number of remaining objects: 1
[08:07:22.092] | : checking value #1:
[08:07:22.092] | : 'obj' is MultisessionFuture
[08:07:22.092] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.093] | : . Cluster node socket connection: index=4, id=729
[08:07:22.093] | : . assertValidConnection() ...
[08:07:22.093] | : . ' cluster node index: 1
[08:07:22.093] | : . assertValidConnection() ... done
[08:07:22.103] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.103] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.114] | : Number of remaining objects: 1
[08:07:22.114] | : checking value #1:
[08:07:22.114] | : 'obj' is MultisessionFuture
[08:07:22.114] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.114] | : . Cluster node socket connection: index=4, id=729
[08:07:22.115] | : . assertValidConnection() ...
[08:07:22.115] | : . ' cluster node index: 1
[08:07:22.115] | : . assertValidConnection() ... done
[08:07:22.125] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.125] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.136] | : Number of remaining objects: 1
[08:07:22.136] | : checking value #1:
[08:07:22.136] | : 'obj' is MultisessionFuture
[08:07:22.136] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.136] | : . Cluster node socket connection: index=4, id=729
[08:07:22.136] | : . assertValidConnection() ...
[08:07:22.137] | : . ' cluster node index: 1
[08:07:22.137] | : . assertValidConnection() ... done
[08:07:22.147] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.147] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.158] | : Number of remaining objects: 1
[08:07:22.158] | : checking value #1:
[08:07:22.158] | : 'obj' is MultisessionFuture
[08:07:22.158] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.159] | : . Cluster node socket connection: index=4, id=729
[08:07:22.159] | : . assertValidConnection() ...
[08:07:22.159] | : . ' cluster node index: 1
[08:07:22.159] | : . assertValidConnection() ... done
[08:07:22.169] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.169] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.180] | : Number of remaining objects: 1
[08:07:22.180] | : checking value #1:
[08:07:22.180] | : 'obj' is MultisessionFuture
[08:07:22.180] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.180] | : . Cluster node socket connection: index=4, id=729
[08:07:22.181] | : . assertValidConnection() ...
[08:07:22.181] | : . ' cluster node index: 1
[08:07:22.181] | : . assertValidConnection() ... done
[08:07:22.191] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.191] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.202] | : Number of remaining objects: 1
[08:07:22.202] | : checking value #1:
[08:07:22.202] | : 'obj' is MultisessionFuture
[08:07:22.202] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.202] | : . Cluster node socket connection: index=4, id=729
[08:07:22.203] | : . assertValidConnection() ...
[08:07:22.203] | : . ' cluster node index: 1
[08:07:22.203] | : . assertValidConnection() ... done
[08:07:22.213] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.213] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.224] | : Number of remaining objects: 1
[08:07:22.224] | : checking value #1:
[08:07:22.224] | : 'obj' is MultisessionFuture
[08:07:22.224] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.224] | : . Cluster node socket connection: index=4, id=729
[08:07:22.224] | : . assertValidConnection() ...
[08:07:22.225] | : . ' cluster node index: 1
[08:07:22.225] | : . assertValidConnection() ... done
[08:07:22.235] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.235] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.246] | : Number of remaining objects: 1
[08:07:22.246] | : checking value #1:
[08:07:22.246] | : 'obj' is MultisessionFuture
[08:07:22.246] | : resolved() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.247] | : . Cluster node socket connection: index=4, id=729
[08:07:22.247] | : . assertValidConnection() ...
[08:07:22.247] | : . ' cluster node index: 1
[08:07:22.248] | : . assertValidConnection() ... done
[08:07:22.248] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:22.248] | : . ' cluster node index: 1
[08:07:22.248] | : . ' [1] TRUE
[08:07:22.249] | : . ' received data:
[08:07:22.249] | : . ' List of 5
[08:07:22.249] | : . '  $ type   : chr "VALUE"
[08:07:22.249] | : . '  $ value  :List of 16
[08:07:22.249] | : . '   ..$ value              :List of 1
[08:07:22.249] | : . '   .. ..$ : int 1
[08:07:22.249] | : . '   ..$ visible            : logi TRUE
[08:07:22.249] | : . '   ..$ stdout             : NULL
[08:07:22.249] | : . '   ..$ conditions         : list()
[08:07:22.249] | : . '   ..$ rng                : logi FALSE
[08:07:22.249] | : . '   ..$ seed               : NULL
[08:07:22.249] | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:22.249] | : . '   ..$ misuseConnections  :List of 3
[08:07:22.249] | : . '   .. ..$ added   : NULL
[08:07:22.249] | : . '   .. ..$ removed : NULL
[08:07:22.249] | : . '   .. ..$ replaced: NULL
[08:07:22.249] | : . '   ..$ misuseDevices      : NULL
[08:07:22.249] | : . '   ..$ misuseDefaultDevice: list()
[08:07:22.249] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:21"
[08:07:22.249] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:22"
[08:07:22.249] | : . '   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "23"
[08:07:22.249] | : . '   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:22.249] | : . '   .. ..- attr(*, "source")=List of 5
[08:07:22.249] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:22.249] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:22.249] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:22.249] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:22.249] | : . '   .. .. ..$ pid   : int 65491
[08:07:22.249] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:22.249] | : . '   .. .. ..$ random: int 2147483647
[08:07:22.249] | : . '   ..$ r_info             :List of 4
[08:07:22.249] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:22.249] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:07:22.249] | : . '   .. ..$ os           : chr "unix"
[08:07:22.249] | : . '   .. ..$ os_name      : chr "Linux"
[08:07:22.249] | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:22.249] | : . '   ..$ version            : chr "1.8"
[08:07:22.249] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:22.249] | : . '  $ success: logi TRUE
[08:07:22.249] | : . '  $ time   : 'proc_time' Named num [1:5] 0.006 0 0.507 0 0
[08:07:22.249] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:22.249] | : . '  $ tag    : NULL
[08:07:22.263] | : . ' Received FutureResult
[08:07:22.263] | : . ' FutureResult:
[08:07:22.263] | : . ' value: ‘list’
[08:07:22.263] | : . ' visible: TRUE
[08:07:22.263] | : . ' stdout: NULL
[08:07:22.263] | : . ' conditions: [n = 0] 
[08:07:22.263] | : . ' RNG used: FALSE
[08:07:22.263] | : . ' duration: 0.5062799 secs (started 2025-06-17 08:07:21.736407)
[08:07:22.263] | : . ' version: 1.8
[08:07:22.263] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:22.264] | : . ' , Removed future from position #1
[08:07:22.264] | : . ' , Number of registered futures: 0
[08:07:22.264] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:22.264] | : . ' Erased future from future backend
[08:07:22.264] | : . ' result() for ClusterFuture ...
[08:07:22.264] | : . ' , result already collected: FutureResult
[08:07:22.264] | : . ' result() for ClusterFuture ... done
[08:07:22.264] | : . ' signalConditions() ...
[08:07:22.264] | : . ' , include = ‘immediateCondition’
[08:07:22.265] | : . ' , exclude = 
[08:07:22.265] | : . ' , resignal = FALSE
[08:07:22.265] | : . ' , Number of conditions: 0
[08:07:22.265] | : . ' ,  int 0
[08:07:22.265] | : . ' signalConditions() ... done
[08:07:22.265] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:22.265] | : . receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:22.265] | : resolved() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.266] | : assertFutureResult() ...
[08:07:22.266] | : . Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:22.266] | : . Future uuid: 23
[08:07:22.266] | : . identical; success
[08:07:22.266] | : assertFutureResult() ... done
[08:07:22.266] | : MultisessionFuture #1
[08:07:22.266] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:22.266] | : . nx: 2
[08:07:22.266] | : . relay: TRUE
[08:07:22.266] | : . stdout: TRUE
[08:07:22.266] | : . signal: TRUE
[08:07:22.266] | : . resignal: FALSE
[08:07:22.267] | : . force: TRUE
[08:07:22.267] | : . relayed: [n=2] FALSE, FALSE
[08:07:22.267] | : . queued futures: [n=2] FALSE, TRUE
[08:07:22.267] | : . until=1
[08:07:22.267] | : . relaying element #1
[08:07:22.267] | : . value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.267] | : . ' result() for ClusterFuture ...
[08:07:22.267] | : . ' , result already collected: FutureResult
[08:07:22.267] | : . ' result() for ClusterFuture ... done
[08:07:22.267] | : . ' result() for ClusterFuture ...
[08:07:22.268] | : . ' , result already collected: FutureResult
[08:07:22.268] | : . ' result() for ClusterFuture ... done
[08:07:22.268] | : . ' signalConditions() ...
[08:07:22.268] | : . ' , include = ‘immediateCondition’
[08:07:22.268] | : . ' , exclude = 
[08:07:22.268] | : . ' , resignal = FALSE
[08:07:22.268] | : . ' , Number of conditions: 0
[08:07:22.268] | : . ' ,  int 0
[08:07:22.269] | : . ' signalConditions() ... done
[08:07:22.269] | : . ' relay stdout ...
[08:07:22.269] | : . ' relay stdout ... done
[08:07:22.269] | : . ' check for misuse ...
[08:07:22.269] | : . ' check for misuse ... done
[08:07:22.269] | : . value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.269] | : . result() for ClusterFuture ...
[08:07:22.269] | : . ' result already collected: FutureResult
[08:07:22.269] | : . result() for ClusterFuture ... done
[08:07:22.270] | : . signalConditions() ...
[08:07:22.270] | : . ' include = ‘immediateCondition’
[08:07:22.270] | : . ' exclude = 
[08:07:22.270] | : . ' resignal = FALSE
[08:07:22.270] | : . ' Number of conditions: 0
[08:07:22.270] | : . '  int 0
[08:07:22.270] | : . signalConditions() ... done
[08:07:22.271] | : . result() for ClusterFuture ...
[08:07:22.271] | : . ' result already collected: FutureResult
[08:07:22.271] | : . result() for ClusterFuture ... done
[08:07:22.271] | : . signalConditions() ...
[08:07:22.271] | : . ' include = ‘condition’
[08:07:22.271] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:22.271] | : . ' resignal = TRUE
[08:07:22.271] | : . ' Number of conditions: 0
[08:07:22.271] | : . '  int 0
[08:07:22.272] | : . signalConditions() ... done
[08:07:22.272] | : . relayed: [n=2] TRUE, FALSE
[08:07:22.272] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.272] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:22.272] | : value(<MultisessionFuture>, ...) ...
[08:07:22.272] | : value(<MultisessionFuture>, ...) ... done
[08:07:22.272] | : value() for MultisessionFuture (‘future_lapply-1’) ...
[08:07:22.272] | : . result() for ClusterFuture ...
[08:07:22.272] | : . ' result already collected: FutureResult
[08:07:22.273] | : . result() for ClusterFuture ... done
[08:07:22.273] | : . result() for ClusterFuture ...
[08:07:22.273] | : . ' result already collected: FutureResult
[08:07:22.273] | : . result() for ClusterFuture ... done
[08:07:22.273] | : . signalConditions() ...
[08:07:22.273] | : . ' include = ‘immediateCondition’
[08:07:22.273] | : . ' exclude = 
[08:07:22.273] | : . ' resignal = FALSE
[08:07:22.273] | : . ' Number of conditions: 0
[08:07:22.273] | : . '  int 0
[08:07:22.274] | : . signalConditions() ... done
[08:07:22.274] | : . check for misuse ...
[08:07:22.274] | : . check for misuse ... done
[08:07:22.274] | : value() for MultisessionFuture (‘future_lapply-1’) ... done
[08:07:22.274] | : value: <list>
[08:07:22.274] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:22.274] | : . nx: 2
[08:07:22.274] | : . relay: TRUE
[08:07:22.275] | : . stdout: TRUE
[08:07:22.275] | : . signal: TRUE
[08:07:22.275] | : . resignal: FALSE
[08:07:22.275] | : . force: TRUE
[08:07:22.275] | : . relayed: [n=2] TRUE, FALSE
[08:07:22.275] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.275] | : . until=2
[08:07:22.275] | : . relaying element #2
[08:07:22.275] | : . value() for MultisessionFuture (‘future_lapply-2’) ...
[08:07:22.275] | : . ' result() for ClusterFuture ...
[08:07:22.275] | : . ' , result already collected: FutureResult
[08:07:22.276] | : . ' result() for ClusterFuture ... done
[08:07:22.276] | : . ' result() for ClusterFuture ...
[08:07:22.276] | : . ' , result already collected: FutureResult
[08:07:22.276] | : . ' result() for ClusterFuture ... done
[08:07:22.276] | : . ' signalConditions() ...
[08:07:22.276] | : . ' , include = ‘immediateCondition’
[08:07:22.276] | : . ' , exclude = 
[08:07:22.276] | : . ' , resignal = FALSE
[08:07:22.276] | : . ' , Number of conditions: 0
[08:07:22.276] | : . ' ,  int 0
[08:07:22.277] | : . ' signalConditions() ... done
[08:07:22.277] | : . ' relay stdout ...
[08:07:22.277] | : . ' relay stdout ... done
[08:07:22.277] | : . ' check for misuse ...
[08:07:22.277] | : . ' check for misuse ... done
[08:07:22.277] | : . value() for MultisessionFuture (‘future_lapply-2’) ... done
[08:07:22.277] | : . result() for ClusterFuture ...
[08:07:22.277] | : . ' result already collected: FutureResult
[08:07:22.278] | : . result() for ClusterFuture ... done
[08:07:22.278] | : . signalConditions() ...
[08:07:22.278] | : . ' include = ‘immediateCondition’
[08:07:22.278] | : . ' exclude = 
[08:07:22.278] | : . ' resignal = FALSE
[08:07:22.278] | : . ' Number of conditions: 0
[08:07:22.278] | : . '  int 0
[08:07:22.279] | : . signalConditions() ... done
[08:07:22.279] | : . result() for ClusterFuture ...
[08:07:22.279] | : . ' result already collected: FutureResult
[08:07:22.279] | : . result() for ClusterFuture ... done
[08:07:22.279] | : . signalConditions() ...
[08:07:22.279] | : . ' include = ‘condition’
[08:07:22.279] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:22.279] | : . ' resignal = TRUE
[08:07:22.279] | : . ' Number of conditions: 0
[08:07:22.279] | : . '  int 0
[08:07:22.280] | : . signalConditions() ... done
[08:07:22.280] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.280] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.280] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:22.280] | : resolve() for MultisessionFuture ...
[08:07:22.280] | : resolve() for MultisessionFuture ... done
[08:07:22.280] | : length: 0 (resolved future 1)
[08:07:22.281] | future_lapply() -> future_xapply() ... done
[08:07:22.281] | Relaying remaining futures ...
[08:07:22.281] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:22.281] | : . nx: 2
[08:07:22.281] | : . relay: TRUE
[08:07:22.281] | : . stdout: TRUE
[08:07:22.281] | : . signal: TRUE
[08:07:22.281] | : . resignal: FALSE
[08:07:22.281] | : . force: TRUE
[08:07:22.281] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.281] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:22.282] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.282] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.282] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:22.282] | Relaying remaining futures ... done
[08:07:22.282] future_lapply() ... done
[08:07:22.282]  - Number of value chunks collected: 2
[08:07:22.282] Resolving 2 futures (chunks) ... DONE
[08:07:22.282] Reducing values from 2 chunks ...
[08:07:22.282]  - Number of values collected after concatenation: 2
[08:07:22.282]  - Number of values expected: 2
[08:07:22.282] Reducing values from 2 chunks ... DONE


* future_lapply(x, ..., future.stdout = NA) ... DONE
* future_mapply(x, ..., future.stdout = FALSE) ...
[08:07:22.283] future_mapply() ...
[08:07:22.283] | future_mapply() -> future_xapply() ...
[08:07:22.283] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.283] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.284] | : Number of chunks: 2
[08:07:22.284] | : getGlobalsAndPackagesXApply() ...
[08:07:22.284] | : . future.globals: TRUE
[08:07:22.284] | : . getGlobalsAndPackages() ...
[08:07:22.284] | : . ' Searching for globals ...
[08:07:22.292] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:22.292] | : . ' Searching for globals ... done
[08:07:22.293] | : . ' Resolving globals: FALSE
[08:07:22.293] | : . ' Search for packages associated with the globals ...
[08:07:22.293] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:22.293] | : . ' , Packages: [1] ‘base’
[08:07:22.293] | : . ' Search for packages associated with the globals ... done
[08:07:22.293] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:22.294] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:22.294] | : . ' Packages after dropping 'base': [0] 
[08:07:22.294] | : . ' globals: [1] ‘FUN’
[08:07:22.294] | : . ' packages: [0] 
[08:07:22.294] | : . getGlobalsAndPackages() ... done
[08:07:22.294] | : . globals found/used: [n=1] ‘FUN’
[08:07:22.294] | : . needed namespaces: [n=0] 
[08:07:22.295] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:22.295] | : . List of 2
[08:07:22.295] | : .  $ ...future.FUN:function (x, y)  
[08:07:22.295] | : .  $ MoreArgs     : NULL
[08:07:22.295] | : .  - attr(*, "where")=List of 2
[08:07:22.295] | : .   ..$ ...future.FUN:<environment: 0x55ab977385b0> 
[08:07:22.295] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:22.295] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:22.295] | : .  - attr(*, "resolved")= logi FALSE
[08:07:22.295] | : .  - attr(*, "total_size")= num NA
[08:07:22.297] | : . Packages to be attached in all futures: [n=0] 
[08:07:22.298] | : getGlobalsAndPackagesXApply() ... done
[08:07:22.298] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.298] | : List of 5
[08:07:22.298] | :  $ ...future.FUN            :function (x, y)  
[08:07:22.298] | :  $ MoreArgs                 : NULL
[08:07:22.298] | :  $ ...future.elements_ii    : NULL
[08:07:22.298] | :  $ ...future.seeds_ii       : NULL
[08:07:22.298] | :  $ ...future.globals.maxSize: NULL
[08:07:22.298] | :  - attr(*, "where")=List of 5
[08:07:22.298] | :   ..$ ...future.FUN            :<environment: 0x55ab977385b0> 
[08:07:22.298] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:22.298] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:22.298] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:22.298] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:22.298] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:22.298] | :  - attr(*, "resolved")= logi FALSE
[08:07:22.298] | :  - attr(*, "total_size")= num NA
[08:07:22.302] | : Number of futures (= number of chunks): 2
[08:07:22.302] | : Launching 2 futures (chunks) ...
[08:07:22.302] | : Chunk #1 of 2 ...
[08:07:22.302] | :  - Finding globals in '...' for chunk #1 ...
[08:07:22.302] | : getGlobalsAndPackages() ...
[08:07:22.302] | : . Searching for globals ...
[08:07:22.303] | : . ' globals found: [0] 
[08:07:22.303] | : . Searching for globals ... done
[08:07:22.303] | : . globals: [0] <none>
[08:07:22.303] | : . packages: [0] <none>
[08:07:22.303] | : getGlobalsAndPackages() ... done
[08:07:22.303] | :    + additional globals found: [n=0] 
[08:07:22.303] | :    + additional namespaces needed: [n=0] 
[08:07:22.304] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:22.304] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:22.304] | :  - seeds: <none>
[08:07:22.304] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.304] | : future(..., label = ‘future_mapply-1’) ...
[08:07:22.304] | : . lazy: FALSE
[08:07:22.304] | : . stdout: FALSE
[08:07:22.304] | : . conditions: [n=1] ‘condition’
[08:07:22.304] | : . gc: FALSE
[08:07:22.304] | : . earlySignal: FALSE
[08:07:22.305] | : . getGlobalsAndPackages() ...
[08:07:22.305] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.305] | : . ' Resolving globals: FALSE
[08:07:22.305] | : . ' Search for packages associated with the globals ...
[08:07:22.305] | : . ' , Packages associated with globals: [0] 
[08:07:22.305] | : . ' , Packages: [0] 
[08:07:22.305] | : . ' Search for packages associated with the globals ... done
[08:07:22.306] | : . ' Packages after dropping 'base': [0] 
[08:07:22.306] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.306] | : . ' packages: [0] 
[08:07:22.306] | : . getGlobalsAndPackages() ... done
[08:07:22.306] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:22.306] | : . ' state: ‘created’
[08:07:22.306] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.307] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.307] | : . ' Using MultisessionFutureBackend ...
[08:07:22.307] | : . ' , Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:07:22.307] | : . ' , Launching futures ...
[08:07:22.307] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:22.307] | : . ' , ; ` Workers: [n=2]
[08:07:22.307] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:22.309] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:22.309] | : . ' , ; ` requestWorker() ...
[08:07:22.309] | : . ' , ; ` | requestNode() ...
[08:07:22.309] | : . ' , ; ` | : Number of workers: 2
[08:07:22.309] | : . ' , ; ` | : Polling for a free worker ...
[08:07:22.309] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.309] | : . ' , ; ` | : . ' Listing all futures
[08:07:22.310] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:22.310] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.310] | : . ' , ; ` | : . Total time: 0
[08:07:22.310] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:22.310] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.310] | : . ' , ; ` | : . Listing all futures
[08:07:22.310] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:22.310] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.310] | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:22.310] | : . ' , ; ` | : Index of first available worker: 1
[08:07:22.311] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:22.364] | : . ' , ; ` | : . Worker is functional
[08:07:22.364] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.364] | : . ' , ; ` | : . ' Listing all futures
[08:07:22.364] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:22.364] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.364] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:22.364] | : . ' , ; ` | requestNode() ... done
[08:07:22.365] | : . ' , ; ` | cluster node index: 1
[08:07:22.365] | : . ' , ; ` requestWorker() ... done
[08:07:22.365] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:22.365] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:22.365] | : . ' , ; ` launchFuture() ...
[08:07:22.366] | : . ' , ; ` | cluster node index: 1
[08:07:22.366] | : . ' , ; ` | getFutureData() ...
[08:07:22.366] | : . ' , ; ` | : getFutureCore() ...
[08:07:22.366] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:22.366] | : . ' , ; ` | : getFutureCore() ... done
[08:07:22.366] | : . ' , ; ` | : getFutureCapture() ...
[08:07:22.366] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:22.366] | : . ' , ; ` | : getFutureContext() ...
[08:07:22.366] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.366] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:22.367] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.367] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:22.367] | : . ' , ; ` | : getFutureContext() ... done
[08:07:22.367] | : . ' , ; ` | getFutureData() ... done
[08:07:22.367] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:22.367] | : . ' , ; ` | : Appended future to position #1
[08:07:22.368] | : . ' , ; ` | : Number of registered futures: 1
[08:07:22.368] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:22.368] | : . ' , ; ` launchFuture() ... done
[08:07:22.368] | : . ' , ; ` MultisessionFuture started
[08:07:22.368] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:22.368] | : . ' , Launching futures ... done
[08:07:22.368] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:22.368] | : . ' Using MultisessionFutureBackend ... done
[08:07:22.368] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:22.369] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:22.369] | : Created future:
[08:07:22.370] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.370] | : . Cluster node socket connection: index=4, id=729
[08:07:22.370] | : . assertValidConnection() ...
[08:07:22.370] | : . ' cluster node index: 1
[08:07:22.370] | : . assertValidConnection() ... done
[08:07:22.381] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.381] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.369] | : MultisessionFuture:
[08:07:22.369] | : Label: ‘future_mapply-1’
[08:07:22.369] | : Expression:
[08:07:22.369] | : {
[08:07:22.369] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:22.369] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:22.369] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:22.369] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:22.369] | :         on.exit(options(oopts), add = TRUE)
[08:07:22.369] | :     }
[08:07:22.369] | :     {
[08:07:22.369] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:22.369] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:22.369] | :         do.call(mapply, args = args)
[08:07:22.369] | :     }
[08:07:22.369] | : }
[08:07:22.369] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:22.369] | : Packages: <none>
[08:07:22.369] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:22.369] | : Capture standard output: FALSE
[08:07:22.369] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:22.369] | : Immediate condition classes: ‘immediateCondition’
[08:07:22.369] | : Lazy evaluation: FALSE
[08:07:22.369] | : Local evaluation: TRUE
[08:07:22.369] | : Asynchronous evaluation: TRUE
[08:07:22.369] | : Early signaling: FALSE
[08:07:22.369] | : Environment: R_GlobalEnv
[08:07:22.369] | : State: ‘running’
[08:07:22.369] | : Resolved: FALSE
[08:07:22.369] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-25
[08:07:22.369] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:22.369] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:22.369] | : Value: <not collected>
[08:07:22.369] | : Conditions captured: <none>
[08:07:22.381] | : Chunk #1 of 2 ... DONE
[08:07:22.382] | : Chunk #2 of 2 ...
[08:07:22.382] | :  - Finding globals in '...' for chunk #2 ...
[08:07:22.382] | : getGlobalsAndPackages() ...
[08:07:22.382] | : . Searching for globals ...
[08:07:22.383] | : . ' globals found: [0] 
[08:07:22.383] | : . Searching for globals ... done
[08:07:22.383] | : . globals: [0] <none>
[08:07:22.383] | : . packages: [0] <none>
[08:07:22.383] | : getGlobalsAndPackages() ... done
[08:07:22.383] | :    + additional globals found: [n=0] 
[08:07:22.383] | :    + additional namespaces needed: [n=0] 
[08:07:22.383] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:22.383] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:22.384] | :  - seeds: <none>
[08:07:22.384] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.384] | : future(..., label = ‘future_mapply-2’) ...
[08:07:22.384] | : . lazy: FALSE
[08:07:22.384] | : . stdout: FALSE
[08:07:22.386] | : . conditions: [n=1] ‘condition’
[08:07:22.386] | : . gc: FALSE
[08:07:22.386] | : . earlySignal: FALSE
[08:07:22.387] | : . getGlobalsAndPackages() ...
[08:07:22.387] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.387] | : . ' Resolving globals: FALSE
[08:07:22.387] | : . ' Search for packages associated with the globals ...
[08:07:22.387] | : . ' , Packages associated with globals: [0] 
[08:07:22.387] | : . ' , Packages: [0] 
[08:07:22.387] | : . ' Search for packages associated with the globals ... done
[08:07:22.388] | : . ' Packages after dropping 'base': [0] 
[08:07:22.388] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.388] | : . ' packages: [0] 
[08:07:22.388] | : . getGlobalsAndPackages() ... done
[08:07:22.388] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:22.388] | : . ' state: ‘created’
[08:07:22.388] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.389] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.389] | : . ' Using MultisessionFutureBackend ...
[08:07:22.389] | : . ' , Number of futures since start: 7 (7 created, 7 launched, 6 finished)
[08:07:22.389] | : . ' , Launching futures ...
[08:07:22.389] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:22.389] | : . ' , ; ` Workers: [n=2]
[08:07:22.389] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:22.391] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:22.391] | : . ' , ; ` requestWorker() ...
[08:07:22.391] | : . ' , ; ` | requestNode() ...
[08:07:22.391] | : . ' , ; ` | : Number of workers: 2
[08:07:22.391] | : . ' , ; ` | : Polling for a free worker ...
[08:07:22.391] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.391] | : . ' , ; ` | : . ' Listing all futures
[08:07:22.391] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:22.392] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.392] | : . ' , ; ` | : . Total time: 0
[08:07:22.392] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:22.392] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.392] | : . ' , ; ` | : . Listing all futures
[08:07:22.392] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:22.392] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.392] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:07:22.392] | : . ' , ; ` | : Index of first available worker: 2
[08:07:22.393] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:22.488] | : . ' , ; ` | : . Worker is functional
[08:07:22.488] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.489] | : . ' , ; ` | : . ' Listing all futures
[08:07:22.489] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:22.489] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.489] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:22.489] | : . ' , ; ` | requestNode() ... done
[08:07:22.489] | : . ' , ; ` | cluster node index: 2
[08:07:22.489] | : . ' , ; ` requestWorker() ... done
[08:07:22.489] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:22.490] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:22.490] | : . ' , ; ` launchFuture() ...
[08:07:22.490] | : . ' , ; ` | cluster node index: 2
[08:07:22.490] | : . ' , ; ` | getFutureData() ...
[08:07:22.490] | : . ' , ; ` | : getFutureCore() ...
[08:07:22.490] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:22.491] | : . ' , ; ` | : getFutureCore() ... done
[08:07:22.491] | : . ' , ; ` | : getFutureCapture() ...
[08:07:22.491] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:22.491] | : . ' , ; ` | : getFutureContext() ...
[08:07:22.491] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.491] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:22.491] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.491] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:22.491] | : . ' , ; ` | : getFutureContext() ... done
[08:07:22.492] | : . ' , ; ` | getFutureData() ... done
[08:07:22.492] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:22.492] | : . ' , ; ` | : Appended future to position #2
[08:07:22.492] | : . ' , ; ` | : Number of registered futures: 2
[08:07:22.492] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:22.492] | : . ' , ; ` launchFuture() ... done
[08:07:22.493] | : . ' , ; ` MultisessionFuture started
[08:07:22.493] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:22.493] | : . ' , Launching futures ... done
[08:07:22.493] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:22.493] | : . ' Using MultisessionFutureBackend ... done
[08:07:22.493] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:22.493] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:22.493] | : Created future:
[08:07:22.494] | : resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:22.495] | : . Cluster node socket connection: index=5, id=730
[08:07:22.495] | : . assertValidConnection() ...
[08:07:22.495] | : . ' cluster node index: 2
[08:07:22.495] | : . assertValidConnection() ... done
[08:07:22.506] | : . socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.506] | : resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:22.493] | : MultisessionFuture:
[08:07:22.493] | : Label: ‘future_mapply-2’
[08:07:22.493] | : Expression:
[08:07:22.493] | : {
[08:07:22.493] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:22.493] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:22.493] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:22.493] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:22.493] | :         on.exit(options(oopts), add = TRUE)
[08:07:22.493] | :     }
[08:07:22.493] | :     {
[08:07:22.493] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:22.493] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:22.493] | :         do.call(mapply, args = args)
[08:07:22.493] | :     }
[08:07:22.493] | : }
[08:07:22.493] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:22.493] | : Packages: <none>
[08:07:22.493] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:22.493] | : Capture standard output: FALSE
[08:07:22.493] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:22.493] | : Immediate condition classes: ‘immediateCondition’
[08:07:22.493] | : Lazy evaluation: FALSE
[08:07:22.493] | : Local evaluation: TRUE
[08:07:22.493] | : Asynchronous evaluation: TRUE
[08:07:22.493] | : Early signaling: FALSE
[08:07:22.493] | : Environment: R_GlobalEnv
[08:07:22.493] | : State: ‘running’
[08:07:22.493] | : Resolved: FALSE
[08:07:22.493] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-26
[08:07:22.493] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:22.493] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:22.493] | : Value: <not collected>
[08:07:22.493] | : Conditions captured: <none>
[08:07:22.506] | : Chunk #2 of 2 ... DONE
[08:07:22.506] | : Launching 2 futures (chunks) ... DONE
[08:07:22.506] | : Resolving 2 futures (chunks) ...
[08:07:22.507] | : value() for list ...
[08:07:22.507] | : . recursive: 0
[08:07:22.507] | : . reduce: FALSE
[08:07:22.507] | : . length: 2

[08:07:22.507] | : . Number of remaining objects: 2
[08:07:22.507] | : . checking value #1:
[08:07:22.507] | : . 'obj' is MultisessionFuture
[08:07:22.507] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.508] | : . ' Cluster node socket connection: index=4, id=729
[08:07:22.508] | : . ' assertValidConnection() ...
[08:07:22.508] | : . ' , cluster node index: 1
[08:07:22.508] | : . ' assertValidConnection() ... done
[08:07:22.518] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.519] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.519] | : . checking value #2:
[08:07:22.519] | : . 'obj' is MultisessionFuture
[08:07:22.519] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:22.519] | : . ' Cluster node socket connection: index=5, id=730
[08:07:22.519] | : . ' assertValidConnection() ...
[08:07:22.519] | : . ' , cluster node index: 2
[08:07:22.520] | : . ' assertValidConnection() ... done
[08:07:22.530] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.530] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:22.540] | : . Number of remaining objects: 2
[08:07:22.540] | : . checking value #1:
[08:07:22.541] | : . 'obj' is MultisessionFuture
[08:07:22.541] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.541] | : . ' Cluster node socket connection: index=4, id=729
[08:07:22.541] | : . ' assertValidConnection() ...
[08:07:22.541] | : . ' , cluster node index: 1
[08:07:22.542] | : . ' assertValidConnection() ... done
[08:07:22.552] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.552] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.552] | : . checking value #2:
[08:07:22.552] | : . 'obj' is MultisessionFuture
[08:07:22.552] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:22.553] | : . ' Cluster node socket connection: index=5, id=730
[08:07:22.553] | : . ' assertValidConnection() ...
[08:07:22.553] | : . ' , cluster node index: 2
[08:07:22.553] | : . ' assertValidConnection() ... done
[08:07:22.553] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:22.553] | : . ' , cluster node index: 2
[08:07:22.554] | : . ' , [1] TRUE
[08:07:22.554] | : . ' , received data:
[08:07:22.554] | : . ' , List of 5
[08:07:22.554] | : . ' ,  $ type   : chr "VALUE"
[08:07:22.554] | : . ' ,  $ value  :List of 16
[08:07:22.554] | : . ' ,   ..$ value              :List of 1
[08:07:22.554] | : . ' ,   .. ..$ :List of 2
[08:07:22.554] | : . ' ,   .. .. ..$ x: int 0
[08:07:22.554] | : . ' ,   .. .. ..$ y: int 1
[08:07:22.554] | : . ' ,   ..$ visible            : logi TRUE
[08:07:22.554] | : . ' ,   ..$ stdout             : NULL
[08:07:22.554] | : . ' ,   ..$ conditions         : list()
[08:07:22.554] | : . ' ,   ..$ rng                : logi FALSE
[08:07:22.554] | : . ' ,   ..$ seed               : NULL
[08:07:22.554] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:22.554] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:22.554] | : . ' ,   .. ..$ added   : NULL
[08:07:22.554] | : . ' ,   .. ..$ removed : NULL
[08:07:22.554] | : . ' ,   .. ..$ replaced: NULL
[08:07:22.554] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:22.554] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:22.554] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:22"
[08:07:22.554] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:22"
[08:07:22.554] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "26"
[08:07:22.554] | : . ' ,   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:22.554] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:22.554] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:22.554] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:22.554] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:22.554] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:22.554] | : . ' ,   .. .. ..$ pid   : int 65490
[08:07:22.554] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:22.554] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:22.554] | : . ' ,   ..$ r_info             :List of 4
[08:07:22.554] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:22.554] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:22.554] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:22.554] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:22.554] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:22.554] | : . ' ,   ..$ version            : chr "1.8"
[08:07:22.554] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:22.554] | : . ' ,  $ success: logi TRUE
[08:07:22.554] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.004 0 0
[08:07:22.554] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:22.554] | : . ' ,  $ tag    : NULL
[08:07:22.566] | : . ' , Received FutureResult
[08:07:22.566] | : . ' , FutureResult:
[08:07:22.566] | : . ' , value: ‘list’
[08:07:22.566] | : . ' , visible: TRUE
[08:07:22.566] | : . ' , stdout: NULL
[08:07:22.566] | : . ' , conditions: [n = 0] 
[08:07:22.566] | : . ' , RNG used: FALSE
[08:07:22.566] | : . ' , duration: 0.002935171 secs (started 2025-06-17 08:07:22.533319)
[08:07:22.566] | : . ' , version: 1.8
[08:07:22.566] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:22.566] | : . ' , ; Removed future from position #2
[08:07:22.567] | : . ' , ; Number of registered futures: 1
[08:07:22.567] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:22.567] | : . ' , Erased future from future backend
[08:07:22.567] | : . ' , result() for ClusterFuture ...
[08:07:22.567] | : . ' , ; result already collected: FutureResult
[08:07:22.567] | : . ' , result() for ClusterFuture ... done
[08:07:22.567] | : . ' , signalConditions() ...
[08:07:22.567] | : . ' , ; include = ‘immediateCondition’
[08:07:22.567] | : . ' , ; exclude = 
[08:07:22.567] | : . ' , ; resignal = FALSE
[08:07:22.568] | : . ' , ; Number of conditions: 0
[08:07:22.568] | : . ' , ;  int 0
[08:07:22.568] | : . ' , signalConditions() ... done
[08:07:22.568] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:22.568] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:22.568] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:22.568] | : . assertFutureResult() ...
[08:07:22.569] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:22.569] | : . ' Future uuid: 26
[08:07:22.569] | : . ' identical; success
[08:07:22.569] | : . assertFutureResult() ... done
[08:07:22.569] | : . MultisessionFuture #2
[08:07:22.569] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:22.569] | : . ' nx: 2
[08:07:22.569] | : . ' relay: TRUE
[08:07:22.569] | : . ' stdout: TRUE
[08:07:22.569] | : . ' signal: TRUE
[08:07:22.569] | : . ' resignal: FALSE
[08:07:22.570] | : . ' force: TRUE
[08:07:22.570] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:22.570] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:22.570] | : . ' until=1
[08:07:22.570] | : . ' relaying element #1
[08:07:22.570] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:22.570] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:22.570] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:22.570] | : . value(<MultisessionFuture>, ...) ...
[08:07:22.570] | : . value(<MultisessionFuture>, ...) ... done
[08:07:22.571] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:22.571] | : . ' result() for ClusterFuture ...
[08:07:22.571] | : . ' , result already collected: FutureResult
[08:07:22.571] | : . ' result() for ClusterFuture ... done
[08:07:22.571] | : . ' result() for ClusterFuture ...
[08:07:22.571] | : . ' , result already collected: FutureResult
[08:07:22.571] | : . ' result() for ClusterFuture ... done
[08:07:22.571] | : . ' signalConditions() ...
[08:07:22.571] | : . ' , include = ‘immediateCondition’
[08:07:22.571] | : . ' , exclude = 
[08:07:22.572] | : . ' , resignal = FALSE
[08:07:22.572] | : . ' , Number of conditions: 0
[08:07:22.572] | : . ' ,  int 0
[08:07:22.572] | : . ' signalConditions() ... done
[08:07:22.572] | : . ' check for misuse ...
[08:07:22.572] | : . ' check for misuse ... done
[08:07:22.572] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:22.573] | : . value: <list>
[08:07:22.573] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:22.573] | : . ' nx: 2
[08:07:22.573] | : . ' relay: TRUE
[08:07:22.573] | : . ' stdout: TRUE
[08:07:22.573] | : . ' signal: TRUE
[08:07:22.573] | : . ' resignal: FALSE
[08:07:22.573] | : . ' force: TRUE
[08:07:22.573] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:22.573] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:22.574] | : . ' until=1
[08:07:22.574] | : . ' relaying element #1
[08:07:22.574] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:22.574] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:22.574] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:22.574] | : . resolve() for MultisessionFuture ...
[08:07:22.574] | : . resolve() for MultisessionFuture ... done
[08:07:22.574] | : . length: 1 (resolved future 2)
[08:07:22.574] | : value() for list ... done
[08:07:22.585] | : Number of remaining objects: 1
[08:07:22.585] | : checking value #1:
[08:07:22.585] | : 'obj' is MultisessionFuture
[08:07:22.585] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.585] | : . Cluster node socket connection: index=4, id=729
[08:07:22.585] | : . assertValidConnection() ...
[08:07:22.586] | : . ' cluster node index: 1
[08:07:22.586] | : . assertValidConnection() ... done
[08:07:22.596] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.596] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.606] | : Number of remaining objects: 1
[08:07:22.607] | : checking value #1:
[08:07:22.607] | : 'obj' is MultisessionFuture
[08:07:22.607] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.607] | : . Cluster node socket connection: index=4, id=729
[08:07:22.607] | : . assertValidConnection() ...
[08:07:22.607] | : . ' cluster node index: 1
[08:07:22.608] | : . assertValidConnection() ... done
[08:07:22.618] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.618] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.628] | : Number of remaining objects: 1
[08:07:22.629] | : checking value #1:
[08:07:22.629] | : 'obj' is MultisessionFuture
[08:07:22.629] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.629] | : . Cluster node socket connection: index=4, id=729
[08:07:22.629] | : . assertValidConnection() ...
[08:07:22.629] | : . ' cluster node index: 1
[08:07:22.630] | : . assertValidConnection() ... done
[08:07:22.640] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.640] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.650] | : Number of remaining objects: 1
[08:07:22.650] | : checking value #1:
[08:07:22.651] | : 'obj' is MultisessionFuture
[08:07:22.651] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.651] | : . Cluster node socket connection: index=4, id=729
[08:07:22.651] | : . assertValidConnection() ...
[08:07:22.651] | : . ' cluster node index: 1
[08:07:22.652] | : . assertValidConnection() ... done
[08:07:22.662] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.662] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.672] | : Number of remaining objects: 1
[08:07:22.672] | : checking value #1:
[08:07:22.673] | : 'obj' is MultisessionFuture
[08:07:22.673] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.673] | : . Cluster node socket connection: index=4, id=729
[08:07:22.673] | : . assertValidConnection() ...
[08:07:22.673] | : . ' cluster node index: 1
[08:07:22.674] | : . assertValidConnection() ... done
[08:07:22.684] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.684] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.694] | : Number of remaining objects: 1
[08:07:22.694] | : checking value #1:
[08:07:22.695] | : 'obj' is MultisessionFuture
[08:07:22.695] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.695] | : . Cluster node socket connection: index=4, id=729
[08:07:22.695] | : . assertValidConnection() ...
[08:07:22.695] | : . ' cluster node index: 1
[08:07:22.696] | : . assertValidConnection() ... done
[08:07:22.706] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.706] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.716] | : Number of remaining objects: 1
[08:07:22.716] | : checking value #1:
[08:07:22.716] | : 'obj' is MultisessionFuture
[08:07:22.717] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.717] | : . Cluster node socket connection: index=4, id=729
[08:07:22.717] | : . assertValidConnection() ...
[08:07:22.717] | : . ' cluster node index: 1
[08:07:22.717] | : . assertValidConnection() ... done
[08:07:22.728] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.728] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.738] | : Number of remaining objects: 1
[08:07:22.738] | : checking value #1:
[08:07:22.738] | : 'obj' is MultisessionFuture
[08:07:22.738] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.739] | : . Cluster node socket connection: index=4, id=729
[08:07:22.739] | : . assertValidConnection() ...
[08:07:22.739] | : . ' cluster node index: 1
[08:07:22.739] | : . assertValidConnection() ... done
[08:07:22.749] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.750] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.760] | : Number of remaining objects: 1
[08:07:22.760] | : checking value #1:
[08:07:22.760] | : 'obj' is MultisessionFuture
[08:07:22.760] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.760] | : . Cluster node socket connection: index=4, id=729
[08:07:22.761] | : . assertValidConnection() ...
[08:07:22.761] | : . ' cluster node index: 1
[08:07:22.761] | : . assertValidConnection() ... done
[08:07:22.771] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.771] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.782] | : Number of remaining objects: 1
[08:07:22.782] | : checking value #1:
[08:07:22.782] | : 'obj' is MultisessionFuture
[08:07:22.782] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.783] | : . Cluster node socket connection: index=4, id=729
[08:07:22.783] | : . assertValidConnection() ...
[08:07:22.783] | : . ' cluster node index: 1
[08:07:22.783] | : . assertValidConnection() ... done
[08:07:22.793] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.793] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.804] | : Number of remaining objects: 1
[08:07:22.804] | : checking value #1:
[08:07:22.804] | : 'obj' is MultisessionFuture
[08:07:22.804] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.804] | : . Cluster node socket connection: index=4, id=729
[08:07:22.805] | : . assertValidConnection() ...
[08:07:22.805] | : . ' cluster node index: 1
[08:07:22.805] | : . assertValidConnection() ... done
[08:07:22.815] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.815] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.826] | : Number of remaining objects: 1
[08:07:22.826] | : checking value #1:
[08:07:22.826] | : 'obj' is MultisessionFuture
[08:07:22.826] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.826] | : . Cluster node socket connection: index=4, id=729
[08:07:22.827] | : . assertValidConnection() ...
[08:07:22.827] | : . ' cluster node index: 1
[08:07:22.827] | : . assertValidConnection() ... done
[08:07:22.837] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.837] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.848] | : Number of remaining objects: 1
[08:07:22.848] | : checking value #1:
[08:07:22.848] | : 'obj' is MultisessionFuture
[08:07:22.848] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.849] | : . Cluster node socket connection: index=4, id=729
[08:07:22.849] | : . assertValidConnection() ...
[08:07:22.849] | : . ' cluster node index: 1
[08:07:22.849] | : . assertValidConnection() ... done
[08:07:22.859] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.860] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.870] | : Number of remaining objects: 1
[08:07:22.870] | : checking value #1:
[08:07:22.870] | : 'obj' is MultisessionFuture
[08:07:22.870] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.871] | : . Cluster node socket connection: index=4, id=729
[08:07:22.871] | : . assertValidConnection() ...
[08:07:22.871] | : . ' cluster node index: 1
[08:07:22.871] | : . assertValidConnection() ... done
[08:07:22.881] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.882] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.892] | : Number of remaining objects: 1
[08:07:22.892] | : checking value #1:
[08:07:22.892] | : 'obj' is MultisessionFuture
[08:07:22.892] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.893] | : . Cluster node socket connection: index=4, id=729
[08:07:22.893] | : . assertValidConnection() ...
[08:07:22.893] | : . ' cluster node index: 1
[08:07:22.893] | : . assertValidConnection() ... done
[08:07:22.903] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:22.904] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.914] | : Number of remaining objects: 1
[08:07:22.914] | : checking value #1:
[08:07:22.914] | : 'obj' is MultisessionFuture
[08:07:22.914] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.914] | : . Cluster node socket connection: index=4, id=729
[08:07:22.915] | : . assertValidConnection() ...
[08:07:22.915] | : . ' cluster node index: 1
[08:07:22.915] | : . assertValidConnection() ... done
[08:07:22.915] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:22.915] | : . ' cluster node index: 1
[08:07:22.915] | : . ' [1] TRUE
[08:07:22.916] | : . ' received data:
[08:07:22.916] | : . ' List of 5
[08:07:22.916] | : . '  $ type   : chr "VALUE"
[08:07:22.916] | : . '  $ value  :List of 16
[08:07:22.916] | : . '   ..$ value              :List of 1
[08:07:22.916] | : . '   .. ..$ :List of 2
[08:07:22.916] | : . '   .. .. ..$ x: int 1
[08:07:22.916] | : . '   .. .. ..$ y: int 0
[08:07:22.916] | : . '   ..$ visible            : logi TRUE
[08:07:22.916] | : . '   ..$ stdout             : NULL
[08:07:22.916] | : . '   ..$ conditions         : list()
[08:07:22.916] | : . '   ..$ rng                : logi FALSE
[08:07:22.916] | : . '   ..$ seed               : NULL
[08:07:22.916] | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:22.916] | : . '   ..$ misuseConnections  :List of 3
[08:07:22.916] | : . '   .. ..$ added   : NULL
[08:07:22.916] | : . '   .. ..$ removed : NULL
[08:07:22.916] | : . '   .. ..$ replaced: NULL
[08:07:22.916] | : . '   ..$ misuseDevices      : NULL
[08:07:22.916] | : . '   ..$ misuseDefaultDevice: list()
[08:07:22.916] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:22"
[08:07:22.916] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:22"
[08:07:22.916] | : . '   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "25"
[08:07:22.916] | : . '   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:22.916] | : . '   .. ..- attr(*, "source")=List of 5
[08:07:22.916] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:22.916] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:22.916] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:22.916] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:22.916] | : . '   .. .. ..$ pid   : int 65491
[08:07:22.916] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:22.916] | : . '   .. .. ..$ random: int 2147483647
[08:07:22.916] | : . '   ..$ r_info             :List of 4
[08:07:22.916] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:22.916] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:07:22.916] | : . '   .. ..$ os           : chr "unix"
[08:07:22.916] | : . '   .. ..$ os_name      : chr "Linux"
[08:07:22.916] | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:22.916] | : . '   ..$ version            : chr "1.8"
[08:07:22.916] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:22.916] | : . '  $ success: logi TRUE
[08:07:22.916] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.505 0 0
[08:07:22.916] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:22.916] | : . '  $ tag    : NULL
[08:07:22.930] | : . ' Received FutureResult
[08:07:22.930] | : . ' FutureResult:
[08:07:22.930] | : . ' value: ‘list’
[08:07:22.930] | : . ' visible: TRUE
[08:07:22.930] | : . ' stdout: NULL
[08:07:22.930] | : . ' conditions: [n = 0] 
[08:07:22.930] | : . ' RNG used: FALSE
[08:07:22.930] | : . ' duration: 0.5045853 secs (started 2025-06-17 08:07:22.40838)
[08:07:22.930] | : . ' version: 1.8
[08:07:22.930] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:22.931] | : . ' , Removed future from position #1
[08:07:22.931] | : . ' , Number of registered futures: 0
[08:07:22.931] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:22.931] | : . ' Erased future from future backend
[08:07:22.931] | : . ' result() for ClusterFuture ...
[08:07:22.931] | : . ' , result already collected: FutureResult
[08:07:22.931] | : . ' result() for ClusterFuture ... done
[08:07:22.931] | : . ' signalConditions() ...
[08:07:22.931] | : . ' , include = ‘immediateCondition’
[08:07:22.932] | : . ' , exclude = 
[08:07:22.932] | : . ' , resignal = FALSE
[08:07:22.932] | : . ' , Number of conditions: 0
[08:07:22.932] | : . ' ,  int 0
[08:07:22.932] | : . ' signalConditions() ... done
[08:07:22.932] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:22.932] | : . receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:22.933] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.933] | : assertFutureResult() ...
[08:07:22.933] | : . Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:22.933] | : . Future uuid: 25
[08:07:22.933] | : . identical; success
[08:07:22.933] | : assertFutureResult() ... done
[08:07:22.933] | : MultisessionFuture #1
[08:07:22.933] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:22.933] | : . nx: 2
[08:07:22.933] | : . relay: TRUE
[08:07:22.933] | : . stdout: TRUE
[08:07:22.934] | : . signal: TRUE
[08:07:22.934] | : . resignal: FALSE
[08:07:22.934] | : . force: TRUE
[08:07:22.934] | : . relayed: [n=2] FALSE, FALSE
[08:07:22.934] | : . queued futures: [n=2] FALSE, TRUE
[08:07:22.934] | : . until=1
[08:07:22.934] | : . relaying element #1
[08:07:22.934] | : . value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.934] | : . ' result() for ClusterFuture ...
[08:07:22.934] | : . ' , result already collected: FutureResult
[08:07:22.934] | : . ' result() for ClusterFuture ... done
[08:07:22.935] | : . ' result() for ClusterFuture ...
[08:07:22.935] | : . ' , result already collected: FutureResult
[08:07:22.935] | : . ' result() for ClusterFuture ... done
[08:07:22.935] | : . ' signalConditions() ...
[08:07:22.935] | : . ' , include = ‘immediateCondition’
[08:07:22.935] | : . ' , exclude = 
[08:07:22.935] | : . ' , resignal = FALSE
[08:07:22.935] | : . ' , Number of conditions: 0
[08:07:22.935] | : . ' ,  int 0
[08:07:22.936] | : . ' signalConditions() ... done
[08:07:22.936] | : . ' relay stdout ...
[08:07:22.936] | : . ' relay stdout ... done
[08:07:22.936] | : . ' check for misuse ...
[08:07:22.936] | : . ' check for misuse ... done
[08:07:22.936] | : . value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.936] | : . result() for ClusterFuture ...
[08:07:22.936] | : . ' result already collected: FutureResult
[08:07:22.937] | : . result() for ClusterFuture ... done
[08:07:22.937] | : . signalConditions() ...
[08:07:22.937] | : . ' include = ‘immediateCondition’
[08:07:22.937] | : . ' exclude = 
[08:07:22.937] | : . ' resignal = FALSE
[08:07:22.937] | : . ' Number of conditions: 0
[08:07:22.937] | : . '  int 0
[08:07:22.937] | : . signalConditions() ... done
[08:07:22.938] | : . result() for ClusterFuture ...
[08:07:22.938] | : . ' result already collected: FutureResult
[08:07:22.938] | : . result() for ClusterFuture ... done
[08:07:22.938] | : . signalConditions() ...
[08:07:22.938] | : . ' include = ‘condition’
[08:07:22.938] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:22.938] | : . ' resignal = TRUE
[08:07:22.938] | : . ' Number of conditions: 0
[08:07:22.938] | : . '  int 0
[08:07:22.939] | : . signalConditions() ... done
[08:07:22.939] | : . relayed: [n=2] TRUE, FALSE
[08:07:22.939] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.939] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:22.939] | : value(<MultisessionFuture>, ...) ...
[08:07:22.939] | : value(<MultisessionFuture>, ...) ... done
[08:07:22.939] | : value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:22.939] | : . result() for ClusterFuture ...
[08:07:22.940] | : . ' result already collected: FutureResult
[08:07:22.940] | : . result() for ClusterFuture ... done
[08:07:22.940] | : . result() for ClusterFuture ...
[08:07:22.940] | : . ' result already collected: FutureResult
[08:07:22.940] | : . result() for ClusterFuture ... done
[08:07:22.940] | : . signalConditions() ...
[08:07:22.940] | : . ' include = ‘immediateCondition’
[08:07:22.940] | : . ' exclude = 
[08:07:22.940] | : . ' resignal = FALSE
[08:07:22.940] | : . ' Number of conditions: 0
[08:07:22.941] | : . '  int 0
[08:07:22.941] | : . signalConditions() ... done
[08:07:22.941] | : . check for misuse ...
[08:07:22.941] | : . check for misuse ... done
[08:07:22.941] | : value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:22.941] | : value: <list>
[08:07:22.941] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:22.942] | : . nx: 2
[08:07:22.942] | : . relay: TRUE
[08:07:22.942] | : . stdout: TRUE
[08:07:22.942] | : . signal: TRUE
[08:07:22.942] | : . resignal: FALSE
[08:07:22.942] | : . force: TRUE
[08:07:22.942] | : . relayed: [n=2] TRUE, FALSE
[08:07:22.942] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.942] | : . until=2
[08:07:22.942] | : . relaying element #2
[08:07:22.942] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:22.943] | : . ' result() for ClusterFuture ...
[08:07:22.943] | : . ' , result already collected: FutureResult
[08:07:22.943] | : . ' result() for ClusterFuture ... done
[08:07:22.943] | : . ' result() for ClusterFuture ...
[08:07:22.943] | : . ' , result already collected: FutureResult
[08:07:22.943] | : . ' result() for ClusterFuture ... done
[08:07:22.943] | : . ' signalConditions() ...
[08:07:22.943] | : . ' , include = ‘immediateCondition’
[08:07:22.943] | : . ' , exclude = 
[08:07:22.943] | : . ' , resignal = FALSE
[08:07:22.944] | : . ' , Number of conditions: 0
[08:07:22.944] | : . ' ,  int 0
[08:07:22.944] | : . ' signalConditions() ... done
[08:07:22.944] | : . ' relay stdout ...
[08:07:22.944] | : . ' relay stdout ... done
[08:07:22.944] | : . ' check for misuse ...
[08:07:22.944] | : . ' check for misuse ... done
[08:07:22.945] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:22.945] | : . result() for ClusterFuture ...
[08:07:22.945] | : . ' result already collected: FutureResult
[08:07:22.945] | : . result() for ClusterFuture ... done
[08:07:22.945] | : . signalConditions() ...
[08:07:22.945] | : . ' include = ‘immediateCondition’
[08:07:22.945] | : . ' exclude = 
[08:07:22.945] | : . ' resignal = FALSE
[08:07:22.945] | : . ' Number of conditions: 0
[08:07:22.945] | : . '  int 0
[08:07:22.946] | : . signalConditions() ... done
[08:07:22.946] | : . result() for ClusterFuture ...
[08:07:22.946] | : . ' result already collected: FutureResult
[08:07:22.946] | : . result() for ClusterFuture ... done
[08:07:22.946] | : . signalConditions() ...
[08:07:22.946] | : . ' include = ‘condition’
[08:07:22.946] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:22.947] | : . ' resignal = TRUE
[08:07:22.947] | : . ' Number of conditions: 0
[08:07:22.947] | : . '  int 0
[08:07:22.947] | : . signalConditions() ... done
[08:07:22.947] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.947] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.947] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:22.948] | : resolve() for MultisessionFuture ...
[08:07:22.948] | : resolve() for MultisessionFuture ... done
[08:07:22.948] | : length: 0 (resolved future 1)
[08:07:22.948] | future_mapply() -> future_xapply() ... done
[08:07:22.948] | Relaying remaining futures ...
[08:07:22.948] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:22.948] | : . nx: 2
[08:07:22.948] | : . relay: TRUE
[08:07:22.948] | : . stdout: TRUE
[08:07:22.948] | : . signal: TRUE
[08:07:22.949] | : . resignal: FALSE
[08:07:22.949] | : . force: TRUE
[08:07:22.949] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.949] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:22.949] | : . relayed: [n=2] TRUE, TRUE
[08:07:22.949] | : . queued futures: [n=2] TRUE, TRUE
[08:07:22.949] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:22.949] | Relaying remaining futures ... done
[08:07:22.949] future_mapply() ... done
[08:07:22.949]  - Number of value chunks collected: 2
[08:07:22.950] Resolving 2 futures (chunks) ... DONE
[08:07:22.950] Reducing values from 2 chunks ...
[08:07:22.950]  - Number of values collected after concatenation: 2
[08:07:22.950]  - Number of values expected: 2
[08:07:22.950] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = FALSE) ... DONE
* future_mapply(x, ..., future.stdout = TRUE) ...
[08:07:22.950] future_mapply() ...
[08:07:22.951] | future_mapply() -> future_xapply() ...
[08:07:22.951] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.951] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.951] | : Number of chunks: 2
[08:07:22.951] | : getGlobalsAndPackagesXApply() ...
[08:07:22.951] | : . future.globals: TRUE
[08:07:22.952] | : . getGlobalsAndPackages() ...
[08:07:22.952] | : . ' Searching for globals ...
[08:07:22.960] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:22.960] | : . ' Searching for globals ... done
[08:07:22.960] | : . ' Resolving globals: FALSE
[08:07:22.960] | : . ' Search for packages associated with the globals ...
[08:07:22.960] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:22.961] | : . ' , Packages: [1] ‘base’
[08:07:22.961] | : . ' Search for packages associated with the globals ... done
[08:07:22.961] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:22.961] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:22.962] | : . ' Packages after dropping 'base': [0] 
[08:07:22.962] | : . ' globals: [1] ‘FUN’
[08:07:22.962] | : . ' packages: [0] 
[08:07:22.962] | : . getGlobalsAndPackages() ... done
[08:07:22.962] | : . globals found/used: [n=1] ‘FUN’
[08:07:22.962] | : . needed namespaces: [n=0] 
[08:07:22.962] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:22.962] | : . List of 2
[08:07:22.962] | : .  $ ...future.FUN:function (x, y)  
[08:07:22.962] | : .  $ MoreArgs     : NULL
[08:07:22.962] | : .  - attr(*, "where")=List of 2
[08:07:22.962] | : .   ..$ ...future.FUN:<environment: 0x55ab97a25000> 
[08:07:22.962] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:22.962] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:22.962] | : .  - attr(*, "resolved")= logi FALSE
[08:07:22.962] | : .  - attr(*, "total_size")= num NA
[08:07:22.965] | : . Packages to be attached in all futures: [n=0] 
[08:07:22.965] | : getGlobalsAndPackagesXApply() ... done
[08:07:22.965] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.965] | : List of 5
[08:07:22.965] | :  $ ...future.FUN            :function (x, y)  
[08:07:22.965] | :  $ MoreArgs                 : NULL
[08:07:22.965] | :  $ ...future.elements_ii    : NULL
[08:07:22.965] | :  $ ...future.seeds_ii       : NULL
[08:07:22.965] | :  $ ...future.globals.maxSize: NULL
[08:07:22.965] | :  - attr(*, "where")=List of 5
[08:07:22.965] | :   ..$ ...future.FUN            :<environment: 0x55ab97a25000> 
[08:07:22.965] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:22.965] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:22.965] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:22.965] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:22.965] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:22.965] | :  - attr(*, "resolved")= logi FALSE
[08:07:22.965] | :  - attr(*, "total_size")= num NA
[08:07:22.969] | : Number of futures (= number of chunks): 2
[08:07:22.969] | : Launching 2 futures (chunks) ...
[08:07:22.970] | : Chunk #1 of 2 ...
[08:07:22.970] | :  - Finding globals in '...' for chunk #1 ...
[08:07:22.970] | : getGlobalsAndPackages() ...
[08:07:22.970] | : . Searching for globals ...
[08:07:22.970] | : . ' globals found: [0] 
[08:07:22.971] | : . Searching for globals ... done
[08:07:22.971] | : . globals: [0] <none>
[08:07:22.971] | : . packages: [0] <none>
[08:07:22.971] | : getGlobalsAndPackages() ... done
[08:07:22.971] | :    + additional globals found: [n=0] 
[08:07:22.971] | :    + additional namespaces needed: [n=0] 
[08:07:22.971] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:22.971] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:22.971] | :  - seeds: <none>
[08:07:22.971] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.972] | : future(..., label = ‘future_mapply-1’) ...
[08:07:22.972] | : . lazy: FALSE
[08:07:22.972] | : . stdout: TRUE
[08:07:22.972] | : . conditions: [n=1] ‘condition’
[08:07:22.972] | : . gc: FALSE
[08:07:22.972] | : . earlySignal: FALSE
[08:07:22.972] | : . getGlobalsAndPackages() ...
[08:07:22.972] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.972] | : . ' Resolving globals: FALSE
[08:07:22.972] | : . ' Search for packages associated with the globals ...
[08:07:22.973] | : . ' , Packages associated with globals: [0] 
[08:07:22.973] | : . ' , Packages: [0] 
[08:07:22.973] | : . ' Search for packages associated with the globals ... done
[08:07:22.973] | : . ' Packages after dropping 'base': [0] 
[08:07:22.973] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:22.973] | : . ' packages: [0] 
[08:07:22.974] | : . getGlobalsAndPackages() ... done
[08:07:22.974] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:22.974] | : . ' state: ‘created’
[08:07:22.974] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:22.974] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:22.974] | : . ' Using MultisessionFutureBackend ...
[08:07:22.974] | : . ' , Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:07:22.974] | : . ' , Launching futures ...
[08:07:22.975] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:22.975] | : . ' , ; ` Workers: [n=2]
[08:07:22.975] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:22.976] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:22.976] | : . ' , ; ` requestWorker() ...
[08:07:22.977] | : . ' , ; ` | requestNode() ...
[08:07:22.977] | : . ' , ; ` | : Number of workers: 2
[08:07:22.977] | : . ' , ; ` | : Polling for a free worker ...
[08:07:22.977] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.977] | : . ' , ; ` | : . ' Listing all futures
[08:07:22.977] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:22.977] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.977] | : . ' , ; ` | : . Total time: 0
[08:07:22.977] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:22.978] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:22.978] | : . ' , ; ` | : . Listing all futures
[08:07:22.978] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:22.978] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:22.978] | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:22.978] | : . ' , ; ` | : Index of first available worker: 1
[08:07:22.978] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:23.032] | : . ' , ; ` | : . Worker is functional
[08:07:23.032] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.032] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.032] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:23.032] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.033] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:23.033] | : . ' , ; ` | requestNode() ... done
[08:07:23.033] | : . ' , ; ` | cluster node index: 1
[08:07:23.033] | : . ' , ; ` requestWorker() ... done
[08:07:23.033] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:23.033] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:23.034] | : . ' , ; ` launchFuture() ...
[08:07:23.034] | : . ' , ; ` | cluster node index: 1
[08:07:23.034] | : . ' , ; ` | getFutureData() ...
[08:07:23.034] | : . ' , ; ` | : getFutureCore() ...
[08:07:23.034] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:23.034] | : . ' , ; ` | : getFutureCore() ... done
[08:07:23.034] | : . ' , ; ` | : getFutureCapture() ...
[08:07:23.034] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:23.034] | : . ' , ; ` | : getFutureContext() ...
[08:07:23.035] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.035] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:23.035] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.035] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:23.035] | : . ' , ; ` | : getFutureContext() ... done
[08:07:23.035] | : . ' , ; ` | getFutureData() ... done
[08:07:23.035] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:23.036] | : . ' , ; ` | : Appended future to position #1
[08:07:23.036] | : . ' , ; ` | : Number of registered futures: 1
[08:07:23.036] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:23.036] | : . ' , ; ` launchFuture() ... done
[08:07:23.036] | : . ' , ; ` MultisessionFuture started
[08:07:23.036] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:23.036] | : . ' , Launching futures ... done
[08:07:23.036] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.036] | : . ' Using MultisessionFutureBackend ... done
[08:07:23.037] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:23.037] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:23.037] | : Created future:
[08:07:23.038] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.038] | : . Cluster node socket connection: index=4, id=729
[08:07:23.038] | : . assertValidConnection() ...
[08:07:23.038] | : . ' cluster node index: 1
[08:07:23.039] | : . assertValidConnection() ... done
[08:07:23.049] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.049] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.037] | : MultisessionFuture:
[08:07:23.037] | : Label: ‘future_mapply-1’
[08:07:23.037] | : Expression:
[08:07:23.037] | : {
[08:07:23.037] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:23.037] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:23.037] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:23.037] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:23.037] | :         on.exit(options(oopts), add = TRUE)
[08:07:23.037] | :     }
[08:07:23.037] | :     {
[08:07:23.037] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:23.037] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:23.037] | :         do.call(mapply, args = args)
[08:07:23.037] | :     }
[08:07:23.037] | : }
[08:07:23.037] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:23.037] | : Packages: <none>
[08:07:23.037] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:23.037] | : Capture standard output: TRUE
[08:07:23.037] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:23.037] | : Immediate condition classes: ‘immediateCondition’
[08:07:23.037] | : Lazy evaluation: FALSE
[08:07:23.037] | : Local evaluation: TRUE
[08:07:23.037] | : Asynchronous evaluation: TRUE
[08:07:23.037] | : Early signaling: FALSE
[08:07:23.037] | : Environment: R_GlobalEnv
[08:07:23.037] | : State: ‘running’
[08:07:23.037] | : Resolved: FALSE
[08:07:23.037] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-27
[08:07:23.037] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:23.037] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.037] | : Value: <not collected>
[08:07:23.037] | : Conditions captured: <none>
[08:07:23.050] | : Chunk #1 of 2 ... DONE
[08:07:23.052] | : Chunk #2 of 2 ...
[08:07:23.052] | :  - Finding globals in '...' for chunk #2 ...
[08:07:23.052] | : getGlobalsAndPackages() ...
[08:07:23.052] | : . Searching for globals ...
[08:07:23.053] | : . ' globals found: [0] 
[08:07:23.053] | : . Searching for globals ... done
[08:07:23.053] | : . globals: [0] <none>
[08:07:23.053] | : . packages: [0] <none>
[08:07:23.053] | : getGlobalsAndPackages() ... done
[08:07:23.054] | :    + additional globals found: [n=0] 
[08:07:23.054] | :    + additional namespaces needed: [n=0] 
[08:07:23.054] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:23.054] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:23.054] | :  - seeds: <none>
[08:07:23.054] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.054] | : future(..., label = ‘future_mapply-2’) ...
[08:07:23.054] | : . lazy: FALSE
[08:07:23.054] | : . stdout: TRUE
[08:07:23.054] | : . conditions: [n=1] ‘condition’
[08:07:23.055] | : . gc: FALSE
[08:07:23.055] | : . earlySignal: FALSE
[08:07:23.055] | : . getGlobalsAndPackages() ...
[08:07:23.055] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.055] | : . ' Resolving globals: FALSE
[08:07:23.055] | : . ' Search for packages associated with the globals ...
[08:07:23.055] | : . ' , Packages associated with globals: [0] 
[08:07:23.056] | : . ' , Packages: [0] 
[08:07:23.056] | : . ' Search for packages associated with the globals ... done
[08:07:23.056] | : . ' Packages after dropping 'base': [0] 
[08:07:23.056] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.056] | : . ' packages: [0] 
[08:07:23.056] | : . getGlobalsAndPackages() ... done
[08:07:23.056] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:23.057] | : . ' state: ‘created’
[08:07:23.057] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.057] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.057] | : . ' Using MultisessionFutureBackend ...
[08:07:23.057] | : . ' , Number of futures since start: 9 (9 created, 9 launched, 8 finished)
[08:07:23.057] | : . ' , Launching futures ...
[08:07:23.057] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:23.057] | : . ' , ; ` Workers: [n=2]
[08:07:23.057] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:23.059] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:23.059] | : . ' , ; ` requestWorker() ...
[08:07:23.059] | : . ' , ; ` | requestNode() ...
[08:07:23.059] | : . ' , ; ` | : Number of workers: 2
[08:07:23.059] | : . ' , ; ` | : Polling for a free worker ...
[08:07:23.059] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.060] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.060] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:23.060] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.060] | : . ' , ; ` | : . Total time: 0
[08:07:23.060] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:23.060] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.060] | : . ' , ; ` | : . Listing all futures
[08:07:23.060] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:23.060] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.060] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:07:23.061] | : . ' , ; ` | : Index of first available worker: 2
[08:07:23.061] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:23.155] | : . ' , ; ` | : . Worker is functional
[08:07:23.155] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.156] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.156] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:23.156] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.156] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:23.156] | : . ' , ; ` | requestNode() ... done
[08:07:23.156] | : . ' , ; ` | cluster node index: 2
[08:07:23.156] | : . ' , ; ` requestWorker() ... done
[08:07:23.156] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:23.157] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:23.157] | : . ' , ; ` launchFuture() ...
[08:07:23.157] | : . ' , ; ` | cluster node index: 2
[08:07:23.157] | : . ' , ; ` | getFutureData() ...
[08:07:23.157] | : . ' , ; ` | : getFutureCore() ...
[08:07:23.157] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:23.157] | : . ' , ; ` | : getFutureCore() ... done
[08:07:23.158] | : . ' , ; ` | : getFutureCapture() ...
[08:07:23.158] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:23.158] | : . ' , ; ` | : getFutureContext() ...
[08:07:23.158] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.158] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:23.158] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.158] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:23.158] | : . ' , ; ` | : getFutureContext() ... done
[08:07:23.158] | : . ' , ; ` | getFutureData() ... done
[08:07:23.159] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:23.159] | : . ' , ; ` | : Appended future to position #2
[08:07:23.159] | : . ' , ; ` | : Number of registered futures: 2
[08:07:23.159] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:23.159] | : . ' , ; ` launchFuture() ... done
[08:07:23.159] | : . ' , ; ` MultisessionFuture started
[08:07:23.160] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:23.160] | : . ' , Launching futures ... done
[08:07:23.160] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.160] | : . ' Using MultisessionFutureBackend ... done
[08:07:23.160] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:23.160] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:23.160] | : Created future:
[08:07:23.161] | : resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.161] | : . Cluster node socket connection: index=5, id=730
[08:07:23.162] | : . assertValidConnection() ...
[08:07:23.162] | : . ' cluster node index: 2
[08:07:23.162] | : . assertValidConnection() ... done
[08:07:23.172] | : . socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.173] | : resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.160] | : MultisessionFuture:
[08:07:23.160] | : Label: ‘future_mapply-2’
[08:07:23.160] | : Expression:
[08:07:23.160] | : {
[08:07:23.160] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:23.160] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:23.160] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:23.160] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:23.160] | :         on.exit(options(oopts), add = TRUE)
[08:07:23.160] | :     }
[08:07:23.160] | :     {
[08:07:23.160] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:23.160] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:23.160] | :         do.call(mapply, args = args)
[08:07:23.160] | :     }
[08:07:23.160] | : }
[08:07:23.160] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:23.160] | : Packages: <none>
[08:07:23.160] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:23.160] | : Capture standard output: TRUE
[08:07:23.160] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:23.160] | : Immediate condition classes: ‘immediateCondition’
[08:07:23.160] | : Lazy evaluation: FALSE
[08:07:23.160] | : Local evaluation: TRUE
[08:07:23.160] | : Asynchronous evaluation: TRUE
[08:07:23.160] | : Early signaling: FALSE
[08:07:23.160] | : Environment: R_GlobalEnv
[08:07:23.160] | : State: ‘running’
[08:07:23.160] | : Resolved: FALSE
[08:07:23.160] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-28
[08:07:23.160] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:23.160] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.160] | : Value: <not collected>
[08:07:23.160] | : Conditions captured: <none>
[08:07:23.173] | : Chunk #2 of 2 ... DONE
[08:07:23.173] | : Launching 2 futures (chunks) ... DONE
[08:07:23.173] | : Resolving 2 futures (chunks) ...
[08:07:23.173] | : value() for list ...
[08:07:23.174] | : . recursive: 0
[08:07:23.174] | : . reduce: FALSE
[08:07:23.174] | : . length: 2

[08:07:23.174] | : . Number of remaining objects: 2
[08:07:23.174] | : . checking value #1:
[08:07:23.174] | : . 'obj' is MultisessionFuture
[08:07:23.174] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.175] | : . ' Cluster node socket connection: index=4, id=729
[08:07:23.175] | : . ' assertValidConnection() ...
[08:07:23.175] | : . ' , cluster node index: 1
[08:07:23.175] | : . ' assertValidConnection() ... done
[08:07:23.185] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.185] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.186] | : . checking value #2:
[08:07:23.186] | : . 'obj' is MultisessionFuture
[08:07:23.186] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.186] | : . ' Cluster node socket connection: index=5, id=730
[08:07:23.186] | : . ' assertValidConnection() ...
[08:07:23.186] | : . ' , cluster node index: 2
[08:07:23.187] | : . ' assertValidConnection() ... done
[08:07:23.197] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.197] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.207] | : . Number of remaining objects: 2
[08:07:23.207] | : . checking value #1:
[08:07:23.208] | : . 'obj' is MultisessionFuture
[08:07:23.208] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.208] | : . ' Cluster node socket connection: index=4, id=729
[08:07:23.208] | : . ' assertValidConnection() ...
[08:07:23.209] | : . ' , cluster node index: 1
[08:07:23.209] | : . ' assertValidConnection() ... done
[08:07:23.219] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.219] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.219] | : . checking value #2:
[08:07:23.219] | : . 'obj' is MultisessionFuture
[08:07:23.220] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.220] | : . ' Cluster node socket connection: index=5, id=730
[08:07:23.220] | : . ' assertValidConnection() ...
[08:07:23.220] | : . ' , cluster node index: 2
[08:07:23.220] | : . ' assertValidConnection() ... done
[08:07:23.221] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:23.221] | : . ' , cluster node index: 2
[08:07:23.221] | : . ' , [1] TRUE
[08:07:23.221] | : . ' , received data:
[08:07:23.221] | : . ' , List of 5
[08:07:23.221] | : . ' ,  $ type   : chr "VALUE"
[08:07:23.221] | : . ' ,  $ value  :List of 16
[08:07:23.221] | : . ' ,   ..$ value              :List of 1
[08:07:23.221] | : . ' ,   .. ..$ :List of 2
[08:07:23.221] | : . ' ,   .. .. ..$ x: int 0
[08:07:23.221] | : . ' ,   .. .. ..$ y: int 1
[08:07:23.221] | : . ' ,   ..$ visible            : logi TRUE
[08:07:23.221] | : . ' ,   ..$ stdout             : chr "$x\n[1] 0\n\n$y\n[1] 1\n\n"
[08:07:23.221] | : . ' ,   ..$ conditions         : list()
[08:07:23.221] | : . ' ,   ..$ rng                : logi FALSE
[08:07:23.221] | : . ' ,   ..$ seed               : NULL
[08:07:23.221] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:23.221] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:23.221] | : . ' ,   .. ..$ added   : NULL
[08:07:23.221] | : . ' ,   .. ..$ removed : NULL
[08:07:23.221] | : . ' ,   .. ..$ replaced: NULL
[08:07:23.221] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:23.221] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:23.221] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.221] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.221] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "28"
[08:07:23.221] | : . ' ,   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:23.221] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:23.221] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:23.221] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:23.221] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:23.221] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:23.221] | : . ' ,   .. .. ..$ pid   : int 65490
[08:07:23.221] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:23.221] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:23.221] | : . ' ,   ..$ r_info             :List of 4
[08:07:23.221] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:23.221] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:23.221] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:23.221] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:23.221] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:23.221] | : . ' ,   ..$ version            : chr "1.8"
[08:07:23.221] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:23.221] | : . ' ,  $ success: logi TRUE
[08:07:23.221] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[08:07:23.221] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:23.221] | : . ' ,  $ tag    : NULL
[08:07:23.233] | : . ' , Received FutureResult
[08:07:23.233] | : . ' , FutureResult:
[08:07:23.233] | : . ' , value: ‘list’
[08:07:23.233] | : . ' , visible: TRUE
[08:07:23.233] | : . ' , stdout: character
[08:07:23.233] | : . ' , conditions: [n = 0] 
[08:07:23.233] | : . ' , RNG used: FALSE
[08:07:23.233] | : . ' , duration: 0.004435062 secs (started 2025-06-17 08:07:23.200268)
[08:07:23.233] | : . ' , version: 1.8
[08:07:23.234] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:23.234] | : . ' , ; Removed future from position #2
[08:07:23.234] | : . ' , ; Number of registered futures: 1
[08:07:23.234] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:23.234] | : . ' , Erased future from future backend
[08:07:23.234] | : . ' , result() for ClusterFuture ...
[08:07:23.234] | : . ' , ; result already collected: FutureResult
[08:07:23.235] | : . ' , result() for ClusterFuture ... done
[08:07:23.235] | : . ' , signalConditions() ...
[08:07:23.235] | : . ' , ; include = ‘immediateCondition’
[08:07:23.235] | : . ' , ; exclude = 
[08:07:23.235] | : . ' , ; resignal = FALSE
[08:07:23.235] | : . ' , ; Number of conditions: 0
[08:07:23.235] | : . ' , ;  int 0
[08:07:23.236] | : . ' , signalConditions() ... done
[08:07:23.236] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:23.236] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:23.236] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.236] | : . assertFutureResult() ...
[08:07:23.236] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:23.236] | : . ' Future uuid: 28
[08:07:23.236] | : . ' identical; success
[08:07:23.236] | : . assertFutureResult() ... done
[08:07:23.236] | : . MultisessionFuture #2
[08:07:23.236] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:23.236] | : . ' nx: 2
[08:07:23.237] | : . ' relay: TRUE
[08:07:23.237] | : . ' stdout: TRUE
[08:07:23.237] | : . ' signal: TRUE
[08:07:23.237] | : . ' resignal: FALSE
[08:07:23.237] | : . ' force: TRUE
[08:07:23.237] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.237] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:23.237] | : . ' until=1
[08:07:23.237] | : . ' relaying element #1
[08:07:23.237] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.238] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.238] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:23.238] | : . value(<MultisessionFuture>, ...) ...
[08:07:23.238] | : . value(<MultisessionFuture>, ...) ... done
[08:07:23.238] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.238] | : . ' result() for ClusterFuture ...
[08:07:23.238] | : . ' , result already collected: FutureResult
[08:07:23.238] | : . ' result() for ClusterFuture ... done
[08:07:23.238] | : . ' result() for ClusterFuture ...
[08:07:23.238] | : . ' , result already collected: FutureResult
[08:07:23.239] | : . ' result() for ClusterFuture ... done
[08:07:23.239] | : . ' signalConditions() ...
[08:07:23.239] | : . ' , include = ‘immediateCondition’
[08:07:23.239] | : . ' , exclude = 
[08:07:23.239] | : . ' , resignal = FALSE
[08:07:23.239] | : . ' , Number of conditions: 0
[08:07:23.239] | : . ' ,  int 0
[08:07:23.240] | : . ' signalConditions() ... done
[08:07:23.240] | : . ' check for misuse ...
[08:07:23.240] | : . ' check for misuse ... done
[08:07:23.240] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.240] | : . value: <list>
[08:07:23.240] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:23.240] | : . ' nx: 2
[08:07:23.240] | : . ' relay: TRUE
[08:07:23.240] | : . ' stdout: TRUE
[08:07:23.240] | : . ' signal: TRUE
[08:07:23.241] | : . ' resignal: FALSE
[08:07:23.241] | : . ' force: TRUE
[08:07:23.241] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.241] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.241] | : . ' until=1
[08:07:23.241] | : . ' relaying element #1
[08:07:23.241] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.241] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.241] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:23.241] | : . resolve() for MultisessionFuture ...
[08:07:23.241] | : . resolve() for MultisessionFuture ... done
[08:07:23.242] | : . length: 1 (resolved future 2)
[08:07:23.242] | : value() for list ... done
[08:07:23.252] | : Number of remaining objects: 1
[08:07:23.252] | : checking value #1:
[08:07:23.252] | : 'obj' is MultisessionFuture
[08:07:23.252] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.253] | : . Cluster node socket connection: index=4, id=729
[08:07:23.253] | : . assertValidConnection() ...
[08:07:23.253] | : . ' cluster node index: 1
[08:07:23.253] | : . assertValidConnection() ... done
[08:07:23.264] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.264] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.274] | : Number of remaining objects: 1
[08:07:23.274] | : checking value #1:
[08:07:23.274] | : 'obj' is MultisessionFuture
[08:07:23.274] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.275] | : . Cluster node socket connection: index=4, id=729
[08:07:23.275] | : . assertValidConnection() ...
[08:07:23.275] | : . ' cluster node index: 1
[08:07:23.275] | : . assertValidConnection() ... done
[08:07:23.285] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.286] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.296] | : Number of remaining objects: 1
[08:07:23.296] | : checking value #1:
[08:07:23.296] | : 'obj' is MultisessionFuture
[08:07:23.296] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.297] | : . Cluster node socket connection: index=4, id=729
[08:07:23.297] | : . assertValidConnection() ...
[08:07:23.297] | : . ' cluster node index: 1
[08:07:23.297] | : . assertValidConnection() ... done
[08:07:23.307] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.308] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.318] | : Number of remaining objects: 1
[08:07:23.318] | : checking value #1:
[08:07:23.318] | : 'obj' is MultisessionFuture
[08:07:23.318] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.318] | : . Cluster node socket connection: index=4, id=729
[08:07:23.319] | : . assertValidConnection() ...
[08:07:23.319] | : . ' cluster node index: 1
[08:07:23.319] | : . assertValidConnection() ... done
[08:07:23.329] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.329] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.340] | : Number of remaining objects: 1
[08:07:23.340] | : checking value #1:
[08:07:23.340] | : 'obj' is MultisessionFuture
[08:07:23.340] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.340] | : . Cluster node socket connection: index=4, id=729
[08:07:23.341] | : . assertValidConnection() ...
[08:07:23.341] | : . ' cluster node index: 1
[08:07:23.341] | : . assertValidConnection() ... done
[08:07:23.351] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.351] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.362] | : Number of remaining objects: 1
[08:07:23.362] | : checking value #1:
[08:07:23.362] | : 'obj' is MultisessionFuture
[08:07:23.362] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.362] | : . Cluster node socket connection: index=4, id=729
[08:07:23.363] | : . assertValidConnection() ...
[08:07:23.363] | : . ' cluster node index: 1
[08:07:23.363] | : . assertValidConnection() ... done
[08:07:23.373] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.373] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.383] | : Number of remaining objects: 1
[08:07:23.384] | : checking value #1:
[08:07:23.384] | : 'obj' is MultisessionFuture
[08:07:23.384] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.384] | : . Cluster node socket connection: index=4, id=729
[08:07:23.384] | : . assertValidConnection() ...
[08:07:23.384] | : . ' cluster node index: 1
[08:07:23.385] | : . assertValidConnection() ... done
[08:07:23.395] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.395] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.405] | : Number of remaining objects: 1
[08:07:23.405] | : checking value #1:
[08:07:23.406] | : 'obj' is MultisessionFuture
[08:07:23.406] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.406] | : . Cluster node socket connection: index=4, id=729
[08:07:23.406] | : . assertValidConnection() ...
[08:07:23.406] | : . ' cluster node index: 1
[08:07:23.407] | : . assertValidConnection() ... done
[08:07:23.417] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.417] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.427] | : Number of remaining objects: 1
[08:07:23.427] | : checking value #1:
[08:07:23.427] | : 'obj' is MultisessionFuture
[08:07:23.428] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.428] | : . Cluster node socket connection: index=4, id=729
[08:07:23.428] | : . assertValidConnection() ...
[08:07:23.428] | : . ' cluster node index: 1
[08:07:23.428] | : . assertValidConnection() ... done
[08:07:23.439] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.439] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.449] | : Number of remaining objects: 1
[08:07:23.449] | : checking value #1:
[08:07:23.449] | : 'obj' is MultisessionFuture
[08:07:23.449] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.450] | : . Cluster node socket connection: index=4, id=729
[08:07:23.450] | : . assertValidConnection() ...
[08:07:23.450] | : . ' cluster node index: 1
[08:07:23.450] | : . assertValidConnection() ... done
[08:07:23.460] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.461] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.471] | : Number of remaining objects: 1
[08:07:23.471] | : checking value #1:
[08:07:23.471] | : 'obj' is MultisessionFuture
[08:07:23.471] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.472] | : . Cluster node socket connection: index=4, id=729
[08:07:23.472] | : . assertValidConnection() ...
[08:07:23.472] | : . ' cluster node index: 1
[08:07:23.472] | : . assertValidConnection() ... done
[08:07:23.482] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.483] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.493] | : Number of remaining objects: 1
[08:07:23.493] | : checking value #1:
[08:07:23.493] | : 'obj' is MultisessionFuture
[08:07:23.493] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.494] | : . Cluster node socket connection: index=4, id=729
[08:07:23.494] | : . assertValidConnection() ...
[08:07:23.494] | : . ' cluster node index: 1
[08:07:23.494] | : . assertValidConnection() ... done
[08:07:23.504] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.505] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.515] | : Number of remaining objects: 1
[08:07:23.515] | : checking value #1:
[08:07:23.515] | : 'obj' is MultisessionFuture
[08:07:23.515] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.516] | : . Cluster node socket connection: index=4, id=729
[08:07:23.516] | : . assertValidConnection() ...
[08:07:23.516] | : . ' cluster node index: 1
[08:07:23.516] | : . assertValidConnection() ... done
[08:07:23.526] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.527] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.537] | : Number of remaining objects: 1
[08:07:23.537] | : checking value #1:
[08:07:23.537] | : 'obj' is MultisessionFuture
[08:07:23.537] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.537] | : . Cluster node socket connection: index=4, id=729
[08:07:23.538] | : . assertValidConnection() ...
[08:07:23.538] | : . ' cluster node index: 1
[08:07:23.538] | : . assertValidConnection() ... done
[08:07:23.548] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.548] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.559] | : Number of remaining objects: 1
[08:07:23.559] | : checking value #1:
[08:07:23.559] | : 'obj' is MultisessionFuture
[08:07:23.559] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.559] | : . Cluster node socket connection: index=4, id=729
[08:07:23.559] | : . assertValidConnection() ...
[08:07:23.560] | : . ' cluster node index: 1
[08:07:23.560] | : . assertValidConnection() ... done
[08:07:23.570] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.570] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.580] | : Number of remaining objects: 1
[08:07:23.581] | : checking value #1:
[08:07:23.581] | : 'obj' is MultisessionFuture
[08:07:23.581] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.581] | : . Cluster node socket connection: index=4, id=729
[08:07:23.581] | : . assertValidConnection() ...
[08:07:23.581] | : . ' cluster node index: 1
[08:07:23.582] | : . assertValidConnection() ... done
[08:07:23.582] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:23.582] | : . ' cluster node index: 1
[08:07:23.582] | : . ' [1] TRUE
[08:07:23.582] | : . ' received data:
[08:07:23.583] | : . ' List of 5
[08:07:23.583] | : . '  $ type   : chr "VALUE"
[08:07:23.583] | : . '  $ value  :List of 16
[08:07:23.583] | : . '   ..$ value              :List of 1
[08:07:23.583] | : . '   .. ..$ :List of 2
[08:07:23.583] | : . '   .. .. ..$ x: int 1
[08:07:23.583] | : . '   .. .. ..$ y: int 0
[08:07:23.583] | : . '   ..$ visible            : logi TRUE
[08:07:23.583] | : . '   ..$ stdout             : chr "$x\n[1] 1\n\n$y\n[1] 0\n\n"
[08:07:23.583] | : . '   ..$ conditions         : list()
[08:07:23.583] | : . '   ..$ rng                : logi FALSE
[08:07:23.583] | : . '   ..$ seed               : NULL
[08:07:23.583] | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:23.583] | : . '   ..$ misuseConnections  :List of 3
[08:07:23.583] | : . '   .. ..$ added   : NULL
[08:07:23.583] | : . '   .. ..$ removed : NULL
[08:07:23.583] | : . '   .. ..$ replaced: NULL
[08:07:23.583] | : . '   ..$ misuseDevices      : NULL
[08:07:23.583] | : . '   ..$ misuseDefaultDevice: list()
[08:07:23.583] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.583] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.583] | : . '   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "27"
[08:07:23.583] | : . '   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:23.583] | : . '   .. ..- attr(*, "source")=List of 5
[08:07:23.583] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:23.583] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:23.583] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:23.583] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:23.583] | : . '   .. .. ..$ pid   : int 65491
[08:07:23.583] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:23.583] | : . '   .. .. ..$ random: int 2147483647
[08:07:23.583] | : . '   ..$ r_info             :List of 4
[08:07:23.583] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:23.583] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:07:23.583] | : . '   .. ..$ os           : chr "unix"
[08:07:23.583] | : . '   .. ..$ os_name      : chr "Linux"
[08:07:23.583] | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:23.583] | : . '   ..$ version            : chr "1.8"
[08:07:23.583] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:23.583] | : . '  $ success: logi TRUE
[08:07:23.583] | : . '  $ time   : 'proc_time' Named num [1:5] 0.006 0 0.506 0 0
[08:07:23.583] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:23.583] | : . '  $ tag    : NULL
[08:07:23.597] | : . ' Received FutureResult
[08:07:23.597] | : . ' FutureResult:
[08:07:23.597] | : . ' value: ‘list’
[08:07:23.597] | : . ' visible: TRUE
[08:07:23.597] | : . ' stdout: character
[08:07:23.597] | : . ' conditions: [n = 0] 
[08:07:23.597] | : . ' RNG used: FALSE
[08:07:23.597] | : . ' duration: 0.5054698 secs (started 2025-06-17 08:07:23.0764)
[08:07:23.597] | : . ' version: 1.8
[08:07:23.597] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:23.597] | : . ' , Removed future from position #1
[08:07:23.597] | : . ' , Number of registered futures: 0
[08:07:23.598] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:23.598] | : . ' Erased future from future backend
[08:07:23.598] | : . ' result() for ClusterFuture ...
[08:07:23.598] | : . ' , result already collected: FutureResult
[08:07:23.598] | : . ' result() for ClusterFuture ... done
[08:07:23.598] | : . ' signalConditions() ...
[08:07:23.598] | : . ' , include = ‘immediateCondition’
[08:07:23.598] | : . ' , exclude = 
[08:07:23.598] | : . ' , resignal = FALSE
[08:07:23.598] | : . ' , Number of conditions: 0
[08:07:23.599] | : . ' ,  int 0
[08:07:23.599] | : . ' signalConditions() ... done
[08:07:23.599] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:23.599] | : . receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:23.599] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.599] | : assertFutureResult() ...
[08:07:23.599] | : . Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:23.599] | : . Future uuid: 27
[08:07:23.600] | : . identical; success
[08:07:23.600] | : assertFutureResult() ... done
[08:07:23.600] | : MultisessionFuture #1
[08:07:23.600] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:23.600] | : . nx: 2
[08:07:23.600] | : . relay: TRUE
[08:07:23.600] | : . stdout: TRUE
[08:07:23.600] | : . signal: TRUE
[08:07:23.600] | : . resignal: FALSE
[08:07:23.600] | : . force: TRUE
[08:07:23.600] | : . relayed: [n=2] FALSE, FALSE
[08:07:23.600] | : . queued futures: [n=2] FALSE, TRUE
[08:07:23.601] | : . until=1
[08:07:23.601] | : . relaying element #1
[08:07:23.601] | : . value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.601] | : . ' result() for ClusterFuture ...
[08:07:23.601] | : . ' , result already collected: FutureResult
[08:07:23.601] | : . ' result() for ClusterFuture ... done
[08:07:23.601] | : . ' result() for ClusterFuture ...
[08:07:23.601] | : . ' , result already collected: FutureResult
[08:07:23.601] | : . ' result() for ClusterFuture ... done
[08:07:23.602] | : . ' signalConditions() ...
[08:07:23.602] | : . ' , include = ‘immediateCondition’
[08:07:23.602] | : . ' , exclude = 
[08:07:23.602] | : . ' , resignal = FALSE
[08:07:23.602] | : . ' , Number of conditions: 0
[08:07:23.602] | : . ' ,  int 0
[08:07:23.602] | : . ' signalConditions() ... done
[08:07:23.602] | : . ' relay stdout ...
[08:07:23.603] | : . ' relay stdout ... done
[08:07:23.603] | : . ' check for misuse ...
[08:07:23.603] | : . ' check for misuse ... done
[08:07:23.603] | : . value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.603] | : . result() for ClusterFuture ...
[08:07:23.603] | : . ' result already collected: FutureResult
[08:07:23.603] | : . result() for ClusterFuture ... done
[08:07:23.603] | : . signalConditions() ...
[08:07:23.603] | : . ' include = ‘immediateCondition’
[08:07:23.604] | : . ' exclude = 
[08:07:23.604] | : . ' resignal = FALSE
[08:07:23.604] | : . ' Number of conditions: 0
[08:07:23.604] | : . '  int 0
[08:07:23.604] | : . signalConditions() ... done
[08:07:23.604] | : . result() for ClusterFuture ...
[08:07:23.604] | : . ' result already collected: FutureResult
[08:07:23.605] | : . result() for ClusterFuture ... done
[08:07:23.605] | : . signalConditions() ...
[08:07:23.605] | : . ' include = ‘condition’
[08:07:23.605] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:23.605] | : . ' resignal = TRUE
[08:07:23.605] | : . ' Number of conditions: 0
[08:07:23.605] | : . '  int 0
[08:07:23.605] | : . signalConditions() ... done
[08:07:23.606] | : . relayed: [n=2] TRUE, FALSE
[08:07:23.606] | : . queued futures: [n=2] TRUE, TRUE
[08:07:23.606] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:23.606] | : value(<MultisessionFuture>, ...) ...
[08:07:23.606] | : value(<MultisessionFuture>, ...) ... done
[08:07:23.606] | : value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.606] | : . result() for ClusterFuture ...
[08:07:23.606] | : . ' result already collected: FutureResult
[08:07:23.606] | : . result() for ClusterFuture ... done
[08:07:23.606] | : . result() for ClusterFuture ...
[08:07:23.607] | : . ' result already collected: FutureResult
[08:07:23.607] | : . result() for ClusterFuture ... done
[08:07:23.607] | : . signalConditions() ...
[08:07:23.607] | : . ' include = ‘immediateCondition’
[08:07:23.607] | : . ' exclude = 
[08:07:23.607] | : . ' resignal = FALSE
[08:07:23.607] | : . ' Number of conditions: 0
[08:07:23.607] | : . '  int 0
[08:07:23.608] | : . signalConditions() ... done
[08:07:23.608] | : . check for misuse ...
[08:07:23.608] | : . check for misuse ... done
[08:07:23.608] | : value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.608] | : value: <list>
[08:07:23.608] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:23.608] | : . nx: 2
[08:07:23.608] | : . relay: TRUE
[08:07:23.608] | : . stdout: TRUE
[08:07:23.609] | : . signal: TRUE
[08:07:23.609] | : . resignal: FALSE
[08:07:23.609] | : . force: TRUE
[08:07:23.609] | : . relayed: [n=2] TRUE, FALSE
[08:07:23.609] | : . queued futures: [n=2] TRUE, TRUE
[08:07:23.609] | : . until=2
[08:07:23.609] | : . relaying element #2
[08:07:23.609] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.609] | : . ' result() for ClusterFuture ...
[08:07:23.609] | : . ' , result already collected: FutureResult
[08:07:23.610] | : . ' result() for ClusterFuture ... done
[08:07:23.610] | : . ' result() for ClusterFuture ...
[08:07:23.610] | : . ' , result already collected: FutureResult
[08:07:23.610] | : . ' result() for ClusterFuture ... done
[08:07:23.610] | : . ' signalConditions() ...
[08:07:23.610] | : . ' , include = ‘immediateCondition’
[08:07:23.610] | : . ' , exclude = 
[08:07:23.610] | : . ' , resignal = FALSE
[08:07:23.610] | : . ' , Number of conditions: 0
[08:07:23.610] | : . ' ,  int 0
[08:07:23.611] | : . ' signalConditions() ... done
[08:07:23.611] | : . ' relay stdout ...
[08:07:23.611] | : . ' relay stdout ... done
[08:07:23.611] | : . ' check for misuse ...
[08:07:23.611] | : . ' check for misuse ... done
[08:07:23.611] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.611] | : . result() for ClusterFuture ...
[08:07:23.612] | : . ' result already collected: FutureResult
[08:07:23.612] | : . result() for ClusterFuture ... done
[08:07:23.612] | : . signalConditions() ...
[08:07:23.612] | : . ' include = ‘immediateCondition’
[08:07:23.612] | : . ' exclude = 
[08:07:23.612] | : . ' resignal = FALSE
[08:07:23.612] | : . ' Number of conditions: 0
[08:07:23.612] | : . '  int 0
[08:07:23.613] | : . signalConditions() ... done
[08:07:23.613] | : . result() for ClusterFuture ...
[08:07:23.613] | : . ' result already collected: FutureResult
[08:07:23.613] | : . result() for ClusterFuture ... done
[08:07:23.613] | : . signalConditions() ...
[08:07:23.613] | : . ' include = ‘condition’
[08:07:23.613] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:23.613] | : . ' resignal = TRUE
[08:07:23.613] | : . ' Number of conditions: 0
[08:07:23.613] | : . '  int 0
[08:07:23.614] | : . signalConditions() ... done
[08:07:23.614] | : . relayed: [n=2] TRUE, TRUE
[08:07:23.614] | : . queued futures: [n=2] TRUE, TRUE
[08:07:23.614] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:23.614] | : resolve() for MultisessionFuture ...
[08:07:23.614] | : resolve() for MultisessionFuture ... done
[08:07:23.614] | : length: 0 (resolved future 1)
[08:07:23.615] | future_mapply() -> future_xapply() ... done
[08:07:23.615] | Relaying remaining futures ...
[08:07:23.615] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:23.615] | : . nx: 2
[08:07:23.615] | : . relay: TRUE
[08:07:23.615] | : . stdout: TRUE
[08:07:23.615] | : . signal: TRUE
[08:07:23.615] | : . resignal: FALSE
[08:07:23.615] | : . force: TRUE
[08:07:23.615] | : . relayed: [n=2] TRUE, TRUE
[08:07:23.616] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:23.616] | : . relayed: [n=2] TRUE, TRUE
[08:07:23.616] | : . queued futures: [n=2] TRUE, TRUE
[08:07:23.616] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:23.616] | Relaying remaining futures ... done
[08:07:23.616] future_mapply() ... done
[08:07:23.616]  - Number of value chunks collected: 2
[08:07:23.616] Resolving 2 futures (chunks) ... DONE
[08:07:23.616] Reducing values from 2 chunks ...
[08:07:23.616]  - Number of values collected after concatenation: 2
[08:07:23.616]  - Number of values expected: 2
[08:07:23.617] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = TRUE) ... DONE
* future_mapply(x, ..., future.stdout = NA) ...
[08:07:23.617] future_mapply() ...
[08:07:23.617] | future_mapply() -> future_xapply() ...
[08:07:23.617] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.618] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.618] | : Number of chunks: 2
[08:07:23.618] | : getGlobalsAndPackagesXApply() ...
[08:07:23.618] | : . future.globals: TRUE
[08:07:23.618] | : . getGlobalsAndPackages() ...
[08:07:23.618] | : . ' Searching for globals ...
[08:07:23.627] | : . ' , globals found: [6] ‘FUN’, ‘{’, ‘Sys.sleep’, ‘/’, ‘print’, ‘list’
[08:07:23.627] | : . ' Searching for globals ... done
[08:07:23.627] | : . ' Resolving globals: FALSE
[08:07:23.627] | : . ' Search for packages associated with the globals ...
[08:07:23.627] | : . ' , Packages associated with globals: [1] ‘base’
[08:07:23.628] | : . ' , Packages: [1] ‘base’
[08:07:23.628] | : . ' Search for packages associated with the globals ... done
[08:07:23.628] | : . ' The total size of the 1 globals is 1.04 KiB (1066 bytes)
[08:07:23.628] | : . ' The total size of the 1 globals exported for future expression (‘FUN()’) is 1.04 KiB There is one global: ‘FUN’ (1.04 KiB of class ‘function’)
[08:07:23.628] | : . ' Packages after dropping 'base': [0] 
[08:07:23.629] | : . ' globals: [1] ‘FUN’
[08:07:23.629] | : . ' packages: [0] 
[08:07:23.629] | : . getGlobalsAndPackages() ... done
[08:07:23.629] | : . globals found/used: [n=1] ‘FUN’
[08:07:23.629] | : . needed namespaces: [n=0] 
[08:07:23.629] | : . Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘MoreArgs’
[08:07:23.629] | : . List of 2
[08:07:23.629] | : .  $ ...future.FUN:function (x, y)  
[08:07:23.629] | : .  $ MoreArgs     : NULL
[08:07:23.629] | : .  - attr(*, "where")=List of 2
[08:07:23.629] | : .   ..$ ...future.FUN:<environment: 0x55ab97285098> 
[08:07:23.629] | : .   ..$ MoreArgs     :<environment: R_EmptyEnv> 
[08:07:23.629] | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:23.629] | : .  - attr(*, "resolved")= logi FALSE
[08:07:23.629] | : .  - attr(*, "total_size")= num NA
[08:07:23.632] | : . Packages to be attached in all futures: [n=0] 
[08:07:23.632] | : getGlobalsAndPackagesXApply() ... done
[08:07:23.632] | : Globals pass to each chunk: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.632] | : List of 5
[08:07:23.632] | :  $ ...future.FUN            :function (x, y)  
[08:07:23.632] | :  $ MoreArgs                 : NULL
[08:07:23.632] | :  $ ...future.elements_ii    : NULL
[08:07:23.632] | :  $ ...future.seeds_ii       : NULL
[08:07:23.632] | :  $ ...future.globals.maxSize: NULL
[08:07:23.632] | :  - attr(*, "where")=List of 5
[08:07:23.632] | :   ..$ ...future.FUN            :<environment: 0x55ab97285098> 
[08:07:23.632] | :   ..$ MoreArgs                 :<environment: R_EmptyEnv> 
[08:07:23.632] | :   ..$ ...future.elements_ii    :<environment: R_EmptyEnv> 
[08:07:23.632] | :   ..$ ...future.seeds_ii       :<environment: R_EmptyEnv> 
[08:07:23.632] | :   ..$ ...future.globals.maxSize:<environment: R_EmptyEnv> 
[08:07:23.632] | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:23.632] | :  - attr(*, "resolved")= logi FALSE
[08:07:23.632] | :  - attr(*, "total_size")= num NA
[08:07:23.636] | : Number of futures (= number of chunks): 2
[08:07:23.636] | : Launching 2 futures (chunks) ...
[08:07:23.636] | : Chunk #1 of 2 ...
[08:07:23.637] | :  - Finding globals in '...' for chunk #1 ...
[08:07:23.637] | : getGlobalsAndPackages() ...
[08:07:23.637] | : . Searching for globals ...
[08:07:23.637] | : . ' globals found: [0] 
[08:07:23.637] | : . Searching for globals ... done
[08:07:23.638] | : . globals: [0] <none>
[08:07:23.638] | : . packages: [0] <none>
[08:07:23.638] | : getGlobalsAndPackages() ... done
[08:07:23.638] | :    + additional globals found: [n=0] 
[08:07:23.638] | :    + additional namespaces needed: [n=0] 
[08:07:23.638] | :  - Finding globals in '...' for chunk #1 ... DONE
[08:07:23.638] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:23.638] | :  - seeds: <none>
[08:07:23.638] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.638] | : future(..., label = ‘future_mapply-1’) ...
[08:07:23.639] | : . lazy: FALSE
[08:07:23.639] | : . stdout: NA
[08:07:23.639] | : . conditions: [n=1] ‘condition’
[08:07:23.639] | : . gc: FALSE
[08:07:23.639] | : . earlySignal: FALSE
[08:07:23.639] | : . getGlobalsAndPackages() ...
[08:07:23.639] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.639] | : . ' Resolving globals: FALSE
[08:07:23.639] | : . ' Search for packages associated with the globals ...
[08:07:23.640] | : . ' , Packages associated with globals: [0] 
[08:07:23.640] | : . ' , Packages: [0] 
[08:07:23.640] | : . ' Search for packages associated with the globals ... done
[08:07:23.640] | : . ' Packages after dropping 'base': [0] 
[08:07:23.640] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.640] | : . ' packages: [0] 
[08:07:23.640] | : . getGlobalsAndPackages() ... done
[08:07:23.641] | : . run() for ‘Future’ (‘future_mapply-1’) ...
[08:07:23.641] | : . ' state: ‘created’
[08:07:23.641] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.641] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.641] | : . ' Using MultisessionFutureBackend ...
[08:07:23.641] | : . ' , Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:07:23.641] | : . ' , Launching futures ...
[08:07:23.642] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:23.642] | : . ' , ; ` Workers: [n=2]
[08:07:23.642] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:23.643] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:23.643] | : . ' , ; ` requestWorker() ...
[08:07:23.644] | : . ' , ; ` | requestNode() ...
[08:07:23.644] | : . ' , ; ` | : Number of workers: 2
[08:07:23.644] | : . ' , ; ` | : Polling for a free worker ...
[08:07:23.644] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.644] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.644] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:23.644] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.644] | : . ' , ; ` | : . Total time: 0
[08:07:23.644] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:23.645] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.645] | : . ' , ; ` | : . Listing all futures
[08:07:23.645] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:23.645] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.645] | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:23.645] | : . ' , ; ` | : Index of first available worker: 1
[08:07:23.645] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:23.698] | : . ' , ; ` | : . Worker is functional
[08:07:23.698] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.698] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.699] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:23.699] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.699] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:23.699] | : . ' , ; ` | requestNode() ... done
[08:07:23.699] | : . ' , ; ` | cluster node index: 1
[08:07:23.699] | : . ' , ; ` requestWorker() ... done
[08:07:23.699] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:23.700] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:23.700] | : . ' , ; ` launchFuture() ...
[08:07:23.700] | : . ' , ; ` | cluster node index: 1
[08:07:23.700] | : . ' , ; ` | getFutureData() ...
[08:07:23.700] | : . ' , ; ` | : getFutureCore() ...
[08:07:23.700] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:23.700] | : . ' , ; ` | : getFutureCore() ... done
[08:07:23.700] | : . ' , ; ` | : getFutureCapture() ...
[08:07:23.701] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:23.701] | : . ' , ; ` | : getFutureContext() ...
[08:07:23.701] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.701] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:23.701] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.701] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:23.701] | : . ' , ; ` | : getFutureContext() ... done
[08:07:23.701] | : . ' , ; ` | getFutureData() ... done
[08:07:23.704] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:23.704] | : . ' , ; ` | : Appended future to position #1
[08:07:23.704] | : . ' , ; ` | : Number of registered futures: 1
[08:07:23.704] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:23.705] | : . ' , ; ` launchFuture() ... done
[08:07:23.705] | : . ' , ; ` MultisessionFuture started
[08:07:23.705] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:23.705] | : . ' , Launching futures ... done
[08:07:23.705] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.705] | : . ' Using MultisessionFutureBackend ... done
[08:07:23.705] | : . run() for ‘Future’ (‘future_mapply-1’) ... done
[08:07:23.705] | : future(..., label = ‘future_mapply-1’) ... done
[08:07:23.705] | : Created future:
[08:07:23.706] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.707] | : . Cluster node socket connection: index=4, id=729
[08:07:23.707] | : . assertValidConnection() ...
[08:07:23.707] | : . ' cluster node index: 1
[08:07:23.707] | : . assertValidConnection() ... done
[08:07:23.718] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.718] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.706] | : MultisessionFuture:
[08:07:23.706] | : Label: ‘future_mapply-1’
[08:07:23.706] | : Expression:
[08:07:23.706] | : {
[08:07:23.706] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:23.706] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:23.706] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:23.706] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:23.706] | :         on.exit(options(oopts), add = TRUE)
[08:07:23.706] | :     }
[08:07:23.706] | :     {
[08:07:23.706] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:23.706] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:23.706] | :         do.call(mapply, args = args)
[08:07:23.706] | :     }
[08:07:23.706] | : }
[08:07:23.706] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:23.706] | : Packages: <none>
[08:07:23.706] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:23.706] | : Capture standard output: NA
[08:07:23.706] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:23.706] | : Immediate condition classes: ‘immediateCondition’
[08:07:23.706] | : Lazy evaluation: FALSE
[08:07:23.706] | : Local evaluation: TRUE
[08:07:23.706] | : Asynchronous evaluation: TRUE
[08:07:23.706] | : Early signaling: FALSE
[08:07:23.706] | : Environment: R_GlobalEnv
[08:07:23.706] | : State: ‘running’
[08:07:23.706] | : Resolved: FALSE
[08:07:23.706] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-29
[08:07:23.706] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:23.706] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.706] | : Value: <not collected>
[08:07:23.706] | : Conditions captured: <none>
[08:07:23.718] | : Chunk #1 of 2 ... DONE
[08:07:23.718] | : Chunk #2 of 2 ...
[08:07:23.718] | :  - Finding globals in '...' for chunk #2 ...
[08:07:23.719] | : getGlobalsAndPackages() ...
[08:07:23.719] | : . Searching for globals ...
[08:07:23.719] | : . ' globals found: [0] 
[08:07:23.719] | : . Searching for globals ... done
[08:07:23.720] | : . globals: [0] <none>
[08:07:23.720] | : . packages: [0] <none>
[08:07:23.720] | : getGlobalsAndPackages() ... done
[08:07:23.720] | :    + additional globals found: [n=0] 
[08:07:23.720] | :    + additional namespaces needed: [n=0] 
[08:07:23.720] | :  - Finding globals in '...' for chunk #2 ... DONE
[08:07:23.720] | :  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:07:23.720] | :  - seeds: <none>
[08:07:23.720] | :  - All globals exported: [n=5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.720] | : future(..., label = ‘future_mapply-2’) ...
[08:07:23.721] | : . lazy: FALSE
[08:07:23.721] | : . stdout: NA
[08:07:23.721] | : . conditions: [n=1] ‘condition’
[08:07:23.721] | : . gc: FALSE
[08:07:23.721] | : . earlySignal: FALSE
[08:07:23.721] | : . getGlobalsAndPackages() ...
[08:07:23.721] | : . ' globals passed as-is: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.721] | : . ' Resolving globals: FALSE
[08:07:23.721] | : . ' Search for packages associated with the globals ...
[08:07:23.722] | : . ' , Packages associated with globals: [0] 
[08:07:23.722] | : . ' , Packages: [0] 
[08:07:23.722] | : . ' Search for packages associated with the globals ... done
[08:07:23.722] | : . ' Packages after dropping 'base': [0] 
[08:07:23.722] | : . ' globals: [5] ‘...future.FUN’, ‘MoreArgs’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:07:23.722] | : . ' packages: [0] 
[08:07:23.722] | : . getGlobalsAndPackages() ... done
[08:07:23.723] | : . run() for ‘Future’ (‘future_mapply-2’) ...
[08:07:23.723] | : . ' state: ‘created’
[08:07:23.723] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.723] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.723] | : . ' Using MultisessionFutureBackend ...
[08:07:23.723] | : . ' , Number of futures since start: 11 (11 created, 11 launched, 10 finished)
[08:07:23.723] | : . ' , Launching futures ...
[08:07:23.723] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:23.724] | : . ' , ; ` Workers: [n=2]
[08:07:23.724] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)
[08:07:23.725] | : . ' , ; ` FutureRegistry: ‘workers-bdc9e7ba9e43f602f761fa5fdada7a32’
[08:07:23.725] | : . ' , ; ` requestWorker() ...
[08:07:23.725] | : . ' , ; ` | requestNode() ...
[08:07:23.726] | : . ' , ; ` | : Number of workers: 2
[08:07:23.726] | : . ' , ; ` | : Polling for a free worker ...
[08:07:23.726] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.726] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.726] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:23.726] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.726] | : . ' , ; ` | : . Total time: 0
[08:07:23.726] | : . ' , ; ` | : Polling for a free worker ... done
[08:07:23.726] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.726] | : . ' , ; ` | : . Listing all futures
[08:07:23.727] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:23.727] | : . ' , ; ` | : FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.727] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:07:23.727] | : . ' , ; ` | : Index of first available worker: 2
[08:07:23.727] | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:23.823] | : . ' , ; ` | : . Worker is functional
[08:07:23.823] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ...
[08:07:23.824] | : . ' , ; ` | : . ' Listing all futures
[08:07:23.824] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:07:23.824] | : . ' , ; ` | : . FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'list', earlySignal = 0) ... done
[08:07:23.824] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:23.824] | : . ' , ; ` | requestNode() ... done
[08:07:23.824] | : . ' , ; ` | cluster node index: 2
[08:07:23.824] | : . ' , ; ` requestWorker() ... done
[08:07:23.824] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:23.825] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:23.825] | : . ' , ; ` launchFuture() ...
[08:07:23.825] | : . ' , ; ` | cluster node index: 2
[08:07:23.825] | : . ' , ; ` | getFutureData() ...
[08:07:23.825] | : . ' , ; ` | : getFutureCore() ...
[08:07:23.825] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:23.825] | : . ' , ; ` | : getFutureCore() ... done
[08:07:23.826] | : . ' , ; ` | : getFutureCapture() ...
[08:07:23.826] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:23.826] | : . ' , ; ` | : getFutureContext() ...
[08:07:23.826] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:23.826] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:23.826] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:23.826] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:23.826] | : . ' , ; ` | : getFutureContext() ... done
[08:07:23.827] | : . ' , ; ` | getFutureData() ... done
[08:07:23.827] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ...
[08:07:23.827] | : . ' , ; ` | : Appended future to position #2
[08:07:23.827] | : . ' , ; ` | : Number of registered futures: 2
[08:07:23.827] | : . ' , ; ` | FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'add', earlySignal = 0) ... done
[08:07:23.827] | : . ' , ; ` launchFuture() ... done
[08:07:23.827] | : . ' , ; ` MultisessionFuture started
[08:07:23.828] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:23.828] | : . ' , Launching futures ... done
[08:07:23.828] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.828] | : . ' Using MultisessionFutureBackend ... done
[08:07:23.828] | : . run() for ‘Future’ (‘future_mapply-2’) ... done
[08:07:23.828] | : future(..., label = ‘future_mapply-2’) ... done
[08:07:23.828] | : Created future:
[08:07:23.829] | : resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.829] | : . Cluster node socket connection: index=5, id=730
[08:07:23.830] | : . assertValidConnection() ...
[08:07:23.830] | : . ' cluster node index: 2
[08:07:23.830] | : . assertValidConnection() ... done
[08:07:23.840] | : . socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.841] | : resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.828] | : MultisessionFuture:
[08:07:23.828] | : Label: ‘future_mapply-2’
[08:07:23.828] | : Expression:
[08:07:23.828] | : {
[08:07:23.828] | :     "# future.apply:::future_xapply(): preserve future option"
[08:07:23.828] | :     ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:07:23.828] | :     if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:07:23.828] | :         oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:07:23.828] | :         on.exit(options(oopts), add = TRUE)
[08:07:23.828] | :     }
[08:07:23.828] | :     {
[08:07:23.828] | :         args <- c(list(FUN = ...future.FUN), ...future.elements_ii, 
[08:07:23.828] | :             MoreArgs = list(MoreArgs), SIMPLIFY = FALSE, USE.NAMES = FALSE)
[08:07:23.828] | :         do.call(mapply, args = args)
[08:07:23.828] | :     }
[08:07:23.828] | : }
[08:07:23.828] | : Globals: 5 objects totaling 6.51 KiB (function ‘...future.FUN’ of 1.04 KiB, list ‘...future.elements_ii’ of 71 bytes, NULL ‘MoreArgs’ of 27 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:07:23.828] | : Packages: <none>
[08:07:23.828] | : L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:07:23.828] | : Capture standard output: NA
[08:07:23.828] | : Capture condition classes: ‘condition’ (excluding ‘<none>’)
[08:07:23.828] | : Immediate condition classes: ‘immediateCondition’
[08:07:23.828] | : Lazy evaluation: FALSE
[08:07:23.828] | : Local evaluation: TRUE
[08:07:23.828] | : Asynchronous evaluation: TRUE
[08:07:23.828] | : Early signaling: FALSE
[08:07:23.828] | : Environment: R_GlobalEnv
[08:07:23.828] | : State: ‘running’
[08:07:23.828] | : Resolved: FALSE
[08:07:23.828] | : Unique identifier: e64dd8772be5ab339364b28950120fcc-30
[08:07:23.828] | : Owner process: e64dd8772be5ab339364b28950120fcc
[08:07:23.828] | : Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:23.828] | : Value: <not collected>
[08:07:23.828] | : Conditions captured: <none>
[08:07:23.841] | : Chunk #2 of 2 ... DONE
[08:07:23.841] | : Launching 2 futures (chunks) ... DONE
[08:07:23.841] | : Resolving 2 futures (chunks) ...
[08:07:23.841] | : value() for list ...
[08:07:23.841] | : . recursive: 0
[08:07:23.842] | : . reduce: FALSE
[08:07:23.842] | : . length: 2

[08:07:23.842] | : . Number of remaining objects: 2
[08:07:23.842] | : . checking value #1:
[08:07:23.842] | : . 'obj' is MultisessionFuture
[08:07:23.842] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.843] | : . ' Cluster node socket connection: index=4, id=729
[08:07:23.843] | : . ' assertValidConnection() ...
[08:07:23.843] | : . ' , cluster node index: 1
[08:07:23.843] | : . ' assertValidConnection() ... done
[08:07:23.853] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.854] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.854] | : . checking value #2:
[08:07:23.854] | : . 'obj' is MultisessionFuture
[08:07:23.854] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.854] | : . ' Cluster node socket connection: index=5, id=730
[08:07:23.854] | : . ' assertValidConnection() ...
[08:07:23.854] | : . ' , cluster node index: 2
[08:07:23.855] | : . ' assertValidConnection() ... done
[08:07:23.865] | : . ' socketSelect(list(<connection #5 (id=730)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.865] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.875] | : . Number of remaining objects: 2
[08:07:23.876] | : . checking value #1:
[08:07:23.876] | : . 'obj' is MultisessionFuture
[08:07:23.876] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.876] | : . ' Cluster node socket connection: index=4, id=729
[08:07:23.876] | : . ' assertValidConnection() ...
[08:07:23.876] | : . ' , cluster node index: 1
[08:07:23.877] | : . ' assertValidConnection() ... done
[08:07:23.887] | : . ' socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.887] | : . resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.887] | : . checking value #2:
[08:07:23.887] | : . 'obj' is MultisessionFuture
[08:07:23.887] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.888] | : . ' Cluster node socket connection: index=5, id=730
[08:07:23.888] | : . ' assertValidConnection() ...
[08:07:23.888] | : . ' , cluster node index: 2
[08:07:23.888] | : . ' assertValidConnection() ... done
[08:07:23.888] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:23.888] | : . ' , cluster node index: 2
[08:07:23.889] | : . ' , [1] TRUE
[08:07:23.889] | : . ' , received data:
[08:07:23.889] | : . ' , List of 5
[08:07:23.889] | : . ' ,  $ type   : chr "VALUE"
[08:07:23.889] | : . ' ,  $ value  :List of 16
[08:07:23.889] | : . ' ,   ..$ value              :List of 1
[08:07:23.889] | : . ' ,   .. ..$ :List of 2
[08:07:23.889] | : . ' ,   .. .. ..$ x: int 0
[08:07:23.889] | : . ' ,   .. .. ..$ y: int 1
[08:07:23.889] | : . ' ,   ..$ visible            : logi TRUE
[08:07:23.889] | : . ' ,   ..$ stdout             : NULL
[08:07:23.889] | : . ' ,   ..$ conditions         : list()
[08:07:23.889] | : . ' ,   ..$ rng                : logi FALSE
[08:07:23.889] | : . ' ,   ..$ seed               : NULL
[08:07:23.889] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:23.889] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:23.889] | : . ' ,   .. ..$ added   : NULL
[08:07:23.889] | : . ' ,   .. ..$ removed : NULL
[08:07:23.889] | : . ' ,   .. ..$ replaced: NULL
[08:07:23.889] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:23.889] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:23.889] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.889] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:23.889] | : . ' ,   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "30"
[08:07:23.889] | : . ' ,   ..$ session_uuid       : chr "1a399fe53c3dba99606c192e5b683778"
[08:07:23.889] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:23.889] | : . ' ,   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:23.889] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:23.889] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:23.889] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:23.889] | : . ' ,   .. .. ..$ pid   : int 65490
[08:07:23.889] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:23.889] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:23.889] | : . ' ,   ..$ r_info             :List of 4
[08:07:23.889] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:23.889] | : . ' ,   .. .. ..$ : int [1:3] 4 5 0
[08:07:23.889] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:23.889] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:23.889] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:23.889] | : . ' ,   ..$ version            : chr "1.8"
[08:07:23.889] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:23.889] | : . ' ,  $ success: logi TRUE
[08:07:23.889] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.004 0 0
[08:07:23.889] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:23.889] | : . ' ,  $ tag    : NULL
[08:07:23.901] | : . ' , Received FutureResult
[08:07:23.901] | : . ' , FutureResult:
[08:07:23.901] | : . ' , value: ‘list’
[08:07:23.901] | : . ' , visible: TRUE
[08:07:23.901] | : . ' , stdout: NULL
[08:07:23.901] | : . ' , conditions: [n = 0] 
[08:07:23.901] | : . ' , RNG used: FALSE
[08:07:23.901] | : . ' , duration: 0.002836704 secs (started 2025-06-17 08:07:23.868346)
[08:07:23.901] | : . ' , version: 1.8
[08:07:23.901] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:23.901] | : . ' , ; Removed future from position #2
[08:07:23.902] | : . ' , ; Number of registered futures: 1
[08:07:23.902] | : . ' , FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:23.902] | : . ' , Erased future from future backend
[08:07:23.902] | : . ' , result() for ClusterFuture ...
[08:07:23.902] | : . ' , ; result already collected: FutureResult
[08:07:23.902] | : . ' , result() for ClusterFuture ... done
[08:07:23.902] | : . ' , signalConditions() ...
[08:07:23.902] | : . ' , ; include = ‘immediateCondition’
[08:07:23.902] | : . ' , ; exclude = 
[08:07:23.902] | : . ' , ; resignal = FALSE
[08:07:23.903] | : . ' , ; Number of conditions: 0
[08:07:23.903] | : . ' , ;  int 0
[08:07:23.903] | : . ' , signalConditions() ... done
[08:07:23.903] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:23.903] | : . ' receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:23.903] | : . resolved() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.903] | : . assertFutureResult() ...
[08:07:23.904] | : . ' Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:23.904] | : . ' Future uuid: 30
[08:07:23.904] | : . ' identical; success
[08:07:23.904] | : . assertFutureResult() ... done
[08:07:23.904] | : . MultisessionFuture #2
[08:07:23.904] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:23.904] | : . ' nx: 2
[08:07:23.904] | : . ' relay: TRUE
[08:07:23.904] | : . ' stdout: TRUE
[08:07:23.904] | : . ' signal: TRUE
[08:07:23.904] | : . ' resignal: FALSE
[08:07:23.904] | : . ' force: TRUE
[08:07:23.905] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.905] | : . ' queued futures: [n=2] FALSE, FALSE
[08:07:23.905] | : . ' until=1
[08:07:23.905] | : . ' relaying element #1
[08:07:23.905] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.905] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.905] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:23.905] | : . value(<MultisessionFuture>, ...) ...
[08:07:23.905] | : . value(<MultisessionFuture>, ...) ... done
[08:07:23.905] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:23.906] | : . ' result() for ClusterFuture ...
[08:07:23.906] | : . ' , result already collected: FutureResult
[08:07:23.906] | : . ' result() for ClusterFuture ... done
[08:07:23.906] | : . ' result() for ClusterFuture ...
[08:07:23.906] | : . ' , result already collected: FutureResult
[08:07:23.906] | : . ' result() for ClusterFuture ... done
[08:07:23.906] | : . ' signalConditions() ...
[08:07:23.906] | : . ' , include = ‘immediateCondition’
[08:07:23.906] | : . ' , exclude = 
[08:07:23.906] | : . ' , resignal = FALSE
[08:07:23.907] | : . ' , Number of conditions: 0
[08:07:23.907] | : . ' ,  int 0
[08:07:23.907] | : . ' signalConditions() ... done
[08:07:23.907] | : . ' check for misuse ...
[08:07:23.907] | : . ' check for misuse ... done
[08:07:23.907] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:23.908] | : . value: <list>
[08:07:23.908] | : . signalConditionsASAP(MultisessionFuture, pos=2) ...
[08:07:23.908] | : . ' nx: 2
[08:07:23.908] | : . ' relay: TRUE
[08:07:23.908] | : . ' stdout: TRUE
[08:07:23.908] | : . ' signal: TRUE
[08:07:23.908] | : . ' resignal: FALSE
[08:07:23.908] | : . ' force: TRUE
[08:07:23.908] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.908] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.908] | : . ' until=1
[08:07:23.909] | : . ' relaying element #1
[08:07:23.909] | : . ' relayed: [n=2] FALSE, FALSE
[08:07:23.909] | : . ' queued futures: [n=2] FALSE, TRUE
[08:07:23.909] | : . signalConditionsASAP(MultisessionFuture, pos=2) ... done
[08:07:23.909] | : . resolve() for MultisessionFuture ...
[08:07:23.909] | : . resolve() for MultisessionFuture ... done
[08:07:23.909] | : . length: 1 (resolved future 2)
[08:07:23.909] | : value() for list ... done
[08:07:23.920] | : Number of remaining objects: 1
[08:07:23.920] | : checking value #1:
[08:07:23.920] | : 'obj' is MultisessionFuture
[08:07:23.920] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.920] | : . Cluster node socket connection: index=4, id=729
[08:07:23.920] | : . assertValidConnection() ...
[08:07:23.920] | : . ' cluster node index: 1
[08:07:23.921] | : . assertValidConnection() ... done
[08:07:23.931] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.931] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.941] | : Number of remaining objects: 1
[08:07:23.941] | : checking value #1:
[08:07:23.942] | : 'obj' is MultisessionFuture
[08:07:23.942] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.942] | : . Cluster node socket connection: index=4, id=729
[08:07:23.942] | : . assertValidConnection() ...
[08:07:23.942] | : . ' cluster node index: 1
[08:07:23.943] | : . assertValidConnection() ... done
[08:07:23.953] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.953] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.963] | : Number of remaining objects: 1
[08:07:23.963] | : checking value #1:
[08:07:23.963] | : 'obj' is MultisessionFuture
[08:07:23.964] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.964] | : . Cluster node socket connection: index=4, id=729
[08:07:23.964] | : . assertValidConnection() ...
[08:07:23.964] | : . ' cluster node index: 1
[08:07:23.965] | : . assertValidConnection() ... done
[08:07:23.975] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.975] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:23.985] | : Number of remaining objects: 1
[08:07:23.985] | : checking value #1:
[08:07:23.985] | : 'obj' is MultisessionFuture
[08:07:23.986] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:23.986] | : . Cluster node socket connection: index=4, id=729
[08:07:23.986] | : . assertValidConnection() ...
[08:07:23.986] | : . ' cluster node index: 1
[08:07:23.986] | : . assertValidConnection() ... done
[08:07:23.997] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:23.997] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.007] | : Number of remaining objects: 1
[08:07:24.007] | : checking value #1:
[08:07:24.007] | : 'obj' is MultisessionFuture
[08:07:24.007] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.008] | : . Cluster node socket connection: index=4, id=729
[08:07:24.008] | : . assertValidConnection() ...
[08:07:24.008] | : . ' cluster node index: 1
[08:07:24.008] | : . assertValidConnection() ... done
[08:07:24.018] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.019] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.029] | : Number of remaining objects: 1
[08:07:24.029] | : checking value #1:
[08:07:24.029] | : 'obj' is MultisessionFuture
[08:07:24.029] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.029] | : . Cluster node socket connection: index=4, id=729
[08:07:24.030] | : . assertValidConnection() ...
[08:07:24.030] | : . ' cluster node index: 1
[08:07:24.030] | : . assertValidConnection() ... done
[08:07:24.040] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.040] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.050] | : Number of remaining objects: 1
[08:07:24.051] | : checking value #1:
[08:07:24.051] | : 'obj' is MultisessionFuture
[08:07:24.051] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.052] | : . Cluster node socket connection: index=4, id=729
[08:07:24.052] | : . assertValidConnection() ...
[08:07:24.052] | : . ' cluster node index: 1
[08:07:24.052] | : . assertValidConnection() ... done
[08:07:24.062] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.063] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.073] | : Number of remaining objects: 1
[08:07:24.073] | : checking value #1:
[08:07:24.073] | : 'obj' is MultisessionFuture
[08:07:24.073] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.073] | : . Cluster node socket connection: index=4, id=729
[08:07:24.074] | : . assertValidConnection() ...
[08:07:24.074] | : . ' cluster node index: 1
[08:07:24.074] | : . assertValidConnection() ... done
[08:07:24.084] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.084] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.095] | : Number of remaining objects: 1
[08:07:24.095] | : checking value #1:
[08:07:24.095] | : 'obj' is MultisessionFuture
[08:07:24.095] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.095] | : . Cluster node socket connection: index=4, id=729
[08:07:24.095] | : . assertValidConnection() ...
[08:07:24.096] | : . ' cluster node index: 1
[08:07:24.096] | : . assertValidConnection() ... done
[08:07:24.106] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.106] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.116] | : Number of remaining objects: 1
[08:07:24.117] | : checking value #1:
[08:07:24.117] | : 'obj' is MultisessionFuture
[08:07:24.117] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.117] | : . Cluster node socket connection: index=4, id=729
[08:07:24.117] | : . assertValidConnection() ...
[08:07:24.117] | : . ' cluster node index: 1
[08:07:24.118] | : . assertValidConnection() ... done
[08:07:24.128] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.128] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.138] | : Number of remaining objects: 1
[08:07:24.138] | : checking value #1:
[08:07:24.138] | : 'obj' is MultisessionFuture
[08:07:24.139] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.139] | : . Cluster node socket connection: index=4, id=729
[08:07:24.139] | : . assertValidConnection() ...
[08:07:24.139] | : . ' cluster node index: 1
[08:07:24.140] | : . assertValidConnection() ... done
[08:07:24.150] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.150] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.160] | : Number of remaining objects: 1
[08:07:24.160] | : checking value #1:
[08:07:24.161] | : 'obj' is MultisessionFuture
[08:07:24.161] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.161] | : . Cluster node socket connection: index=4, id=729
[08:07:24.161] | : . assertValidConnection() ...
[08:07:24.161] | : . ' cluster node index: 1
[08:07:24.162] | : . assertValidConnection() ... done
[08:07:24.172] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.172] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.182] | : Number of remaining objects: 1
[08:07:24.182] | : checking value #1:
[08:07:24.183] | : 'obj' is MultisessionFuture
[08:07:24.183] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.183] | : . Cluster node socket connection: index=4, id=729
[08:07:24.183] | : . assertValidConnection() ...
[08:07:24.183] | : . ' cluster node index: 1
[08:07:24.184] | : . assertValidConnection() ... done
[08:07:24.194] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.194] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.204] | : Number of remaining objects: 1
[08:07:24.204] | : checking value #1:
[08:07:24.204] | : 'obj' is MultisessionFuture
[08:07:24.205] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.205] | : . Cluster node socket connection: index=4, id=729
[08:07:24.205] | : . assertValidConnection() ...
[08:07:24.205] | : . ' cluster node index: 1
[08:07:24.206] | : . assertValidConnection() ... done
[08:07:24.216] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.216] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.226] | : Number of remaining objects: 1
[08:07:24.229] | : checking value #1:
[08:07:24.229] | : 'obj' is MultisessionFuture
[08:07:24.229] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.229] | : . Cluster node socket connection: index=4, id=729
[08:07:24.230] | : . assertValidConnection() ...
[08:07:24.230] | : . ' cluster node index: 1
[08:07:24.230] | : . assertValidConnection() ... done
[08:07:24.240] | : . socketSelect(list(<connection #4 (id=729)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:24.240] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.250] | : Number of remaining objects: 1
[08:07:24.251] | : checking value #1:
[08:07:24.251] | : 'obj' is MultisessionFuture
[08:07:24.251] | : resolved() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.251] | : . Cluster node socket connection: index=4, id=729
[08:07:24.251] | : . assertValidConnection() ...
[08:07:24.251] | : . ' cluster node index: 1
[08:07:24.252] | : . assertValidConnection() ... done
[08:07:24.252] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:24.252] | : . ' cluster node index: 1
[08:07:24.252] | : . ' [1] TRUE
[08:07:24.252] | : . ' received data:
[08:07:24.252] | : . ' List of 5
[08:07:24.252] | : . '  $ type   : chr "VALUE"
[08:07:24.252] | : . '  $ value  :List of 16
[08:07:24.252] | : . '   ..$ value              :List of 1
[08:07:24.252] | : . '   .. ..$ :List of 2
[08:07:24.252] | : . '   .. .. ..$ x: int 1
[08:07:24.252] | : . '   .. .. ..$ y: int 0
[08:07:24.252] | : . '   ..$ visible            : logi TRUE
[08:07:24.252] | : . '   ..$ stdout             : NULL
[08:07:24.252] | : . '   ..$ conditions         : list()
[08:07:24.252] | : . '   ..$ rng                : logi FALSE
[08:07:24.252] | : . '   ..$ seed               : NULL
[08:07:24.252] | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:24.252] | : . '   ..$ misuseConnections  :List of 3
[08:07:24.252] | : . '   .. ..$ added   : NULL
[08:07:24.252] | : . '   .. ..$ removed : NULL
[08:07:24.252] | : . '   .. ..$ replaced: NULL
[08:07:24.252] | : . '   ..$ misuseDevices      : NULL
[08:07:24.252] | : . '   ..$ misuseDefaultDevice: list()
[08:07:24.252] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:23"
[08:07:24.252] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:24"
[08:07:24.252] | : . '   ..$ uuid               : chr [1:2] "e64dd8772be5ab339364b28950120fcc" "29"
[08:07:24.252] | : . '   ..$ session_uuid       : chr "9c7b5565c7ffca022e64893efd61b194"
[08:07:24.252] | : . '   .. ..- attr(*, "source")=List of 5
[08:07:24.252] | : . '   .. .. ..$ host  : Named chr "285a5f234941"
[08:07:24.252] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:24.252] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "285a5f234941" ...
[08:07:24.252] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:24.252] | : . '   .. .. ..$ pid   : int 65491
[08:07:24.252] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:20"
[08:07:24.252] | : . '   .. .. ..$ random: int 2147483647
[08:07:24.252] | : . '   ..$ r_info             :List of 4
[08:07:24.252] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:24.252] | : . '   .. .. ..$ : int [1:3] 4 5 0
[08:07:24.252] | : . '   .. ..$ os           : chr "unix"
[08:07:24.252] | : . '   .. ..$ os_name      : chr "Linux"
[08:07:24.252] | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:24.252] | : . '   ..$ version            : chr "1.8"
[08:07:24.252] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:24.252] | : . '  $ success: logi TRUE
[08:07:24.252] | : . '  $ time   : 'proc_time' Named num [1:5] 0.005 0 0.506 0 0
[08:07:24.252] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:24.252] | : . '  $ tag    : NULL
[08:07:24.264] | : . ' Received FutureResult
[08:07:24.264] | : . ' FutureResult:
[08:07:24.264] | : . ' value: ‘list’
[08:07:24.264] | : . ' visible: TRUE
[08:07:24.264] | : . ' stdout: NULL
[08:07:24.264] | : . ' conditions: [n = 0] 
[08:07:24.264] | : . ' RNG used: FALSE
[08:07:24.264] | : . ' duration: 0.5047131 secs (started 2025-06-17 08:07:23.745317)
[08:07:24.264] | : . ' version: 1.8
[08:07:24.265] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ...
[08:07:24.265] | : . ' , Removed future from position #1
[08:07:24.265] | : . ' , Number of registered futures: 0
[08:07:24.265] | : . ' FutureRegistry('workers-bdc9e7ba9e43f602f761fa5fdada7a32', action = 'remove', earlySignal = 0) ... done
[08:07:24.265] | : . ' Erased future from future backend
[08:07:24.265] | : . ' result() for ClusterFuture ...
[08:07:24.265] | : . ' , result already collected: FutureResult
[08:07:24.265] | : . ' result() for ClusterFuture ... done
[08:07:24.265] | : . ' signalConditions() ...
[08:07:24.266] | : . ' , include = ‘immediateCondition’
[08:07:24.266] | : . ' , exclude = 
[08:07:24.266] | : . ' , resignal = FALSE
[08:07:24.266] | : . ' , Number of conditions: 0
[08:07:24.266] | : . ' ,  int 0
[08:07:24.266] | : . ' signalConditions() ... done
[08:07:24.266] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:24.267] | : . receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:24.267] | : resolved() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.267] | : assertFutureResult() ...
[08:07:24.267] | : . Future uuid: e64dd8772be5ab339364b28950120fcc[08:07:24.267] | : . Future uuid: 29
[08:07:24.267] | : . identical; success
[08:07:24.267] | : assertFutureResult() ... done
[08:07:24.267] | : MultisessionFuture #1
[08:07:24.267] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:24.267] | : . nx: 2
[08:07:24.267] | : . relay: TRUE
[08:07:24.268] | : . stdout: TRUE
[08:07:24.268] | : . signal: TRUE
[08:07:24.268] | : . resignal: FALSE
[08:07:24.268] | : . force: TRUE
[08:07:24.268] | : . relayed: [n=2] FALSE, FALSE
[08:07:24.268] | : . queued futures: [n=2] FALSE, TRUE
[08:07:24.268] | : . until=1
[08:07:24.268] | : . relaying element #1
[08:07:24.268] | : . value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.268] | : . ' result() for ClusterFuture ...
[08:07:24.268] | : . ' , result already collected: FutureResult
[08:07:24.269] | : . ' result() for ClusterFuture ... done
[08:07:24.269] | : . ' result() for ClusterFuture ...
[08:07:24.269] | : . ' , result already collected: FutureResult
[08:07:24.269] | : . ' result() for ClusterFuture ... done
[08:07:24.269] | : . ' signalConditions() ...
[08:07:24.269] | : . ' , include = ‘immediateCondition’
[08:07:24.269] | : . ' , exclude = 
[08:07:24.269] | : . ' , resignal = FALSE
[08:07:24.269] | : . ' , Number of conditions: 0
[08:07:24.269] | : . ' ,  int 0
[08:07:24.270] | : . ' signalConditions() ... done
[08:07:24.270] | : . ' relay stdout ...
[08:07:24.270] | : . ' relay stdout ... done
[08:07:24.270] | : . ' check for misuse ...
[08:07:24.270] | : . ' check for misuse ... done
[08:07:24.270] | : . value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.270] | : . result() for ClusterFuture ...
[08:07:24.271] | : . ' result already collected: FutureResult
[08:07:24.271] | : . result() for ClusterFuture ... done
[08:07:24.271] | : . signalConditions() ...
[08:07:24.271] | : . ' include = ‘immediateCondition’
[08:07:24.271] | : . ' exclude = 
[08:07:24.271] | : . ' resignal = FALSE
[08:07:24.271] | : . ' Number of conditions: 0
[08:07:24.271] | : . '  int 0
[08:07:24.272] | : . signalConditions() ... done
[08:07:24.272] | : . result() for ClusterFuture ...
[08:07:24.272] | : . ' result already collected: FutureResult
[08:07:24.272] | : . result() for ClusterFuture ... done
[08:07:24.272] | : . signalConditions() ...
[08:07:24.272] | : . ' include = ‘condition’
[08:07:24.272] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:24.272] | : . ' resignal = TRUE
[08:07:24.272] | : . ' Number of conditions: 0
[08:07:24.273] | : . '  int 0
[08:07:24.273] | : . signalConditions() ... done
[08:07:24.273] | : . relayed: [n=2] TRUE, FALSE
[08:07:24.273] | : . queued futures: [n=2] TRUE, TRUE
[08:07:24.273] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:24.273] | : value(<MultisessionFuture>, ...) ...
[08:07:24.273] | : value(<MultisessionFuture>, ...) ... done
[08:07:24.274] | : value() for MultisessionFuture (‘future_mapply-1’) ...
[08:07:24.274] | : . result() for ClusterFuture ...
[08:07:24.274] | : . ' result already collected: FutureResult
[08:07:24.274] | : . result() for ClusterFuture ... done
[08:07:24.274] | : . result() for ClusterFuture ...
[08:07:24.274] | : . ' result already collected: FutureResult
[08:07:24.274] | : . result() for ClusterFuture ... done
[08:07:24.274] | : . signalConditions() ...
[08:07:24.274] | : . ' include = ‘immediateCondition’
[08:07:24.274] | : . ' exclude = 
[08:07:24.275] | : . ' resignal = FALSE
[08:07:24.275] | : . ' Number of conditions: 0
[08:07:24.275] | : . '  int 0
[08:07:24.275] | : . signalConditions() ... done
[08:07:24.275] | : . check for misuse ...
[08:07:24.275] | : . check for misuse ... done
[08:07:24.275] | : value() for MultisessionFuture (‘future_mapply-1’) ... done
[08:07:24.276] | : value: <list>
[08:07:24.276] | : signalConditionsASAP(MultisessionFuture, pos=1) ...
[08:07:24.276] | : . nx: 2
[08:07:24.276] | : . relay: TRUE
[08:07:24.276] | : . stdout: TRUE
[08:07:24.276] | : . signal: TRUE
[08:07:24.276] | : . resignal: FALSE
[08:07:24.276] | : . force: TRUE
[08:07:24.276] | : . relayed: [n=2] TRUE, FALSE
[08:07:24.276] | : . queued futures: [n=2] TRUE, TRUE
[08:07:24.276] | : . until=2
[08:07:24.277] | : . relaying element #2
[08:07:24.277] | : . value() for MultisessionFuture (‘future_mapply-2’) ...
[08:07:24.277] | : . ' result() for ClusterFuture ...
[08:07:24.277] | : . ' , result already collected: FutureResult
[08:07:24.277] | : . ' result() for ClusterFuture ... done
[08:07:24.277] | : . ' result() for ClusterFuture ...
[08:07:24.277] | : . ' , result already collected: FutureResult
[08:07:24.277] | : . ' result() for ClusterFuture ... done
[08:07:24.277] | : . ' signalConditions() ...
[08:07:24.277] | : . ' , include = ‘immediateCondition’
[08:07:24.278] | : . ' , exclude = 
[08:07:24.278] | : . ' , resignal = FALSE
[08:07:24.278] | : . ' , Number of conditions: 0
[08:07:24.278] | : . ' ,  int 0
[08:07:24.278] | : . ' signalConditions() ... done
[08:07:24.278] | : . ' relay stdout ...
[08:07:24.278] | : . ' relay stdout ... done
[08:07:24.279] | : . ' check for misuse ...
[08:07:24.279] | : . ' check for misuse ... done
[08:07:24.279] | : . value() for MultisessionFuture (‘future_mapply-2’) ... done
[08:07:24.279] | : . result() for ClusterFuture ...
[08:07:24.279] | : . ' result already collected: FutureResult
[08:07:24.279] | : . result() for ClusterFuture ... done
[08:07:24.279] | : . signalConditions() ...
[08:07:24.279] | : . ' include = ‘immediateCondition’
[08:07:24.279] | : . ' exclude = 
[08:07:24.279] | : . ' resignal = FALSE
[08:07:24.279] | : . ' Number of conditions: 0
[08:07:24.280] | : . '  int 0
[08:07:24.280] | : . signalConditions() ... done
[08:07:24.280] | : . result() for ClusterFuture ...
[08:07:24.280] | : . ' result already collected: FutureResult
[08:07:24.280] | : . result() for ClusterFuture ... done
[08:07:24.280] | : . signalConditions() ...
[08:07:24.280] | : . ' include = ‘condition’
[08:07:24.281] | : . ' exclude = ‘error’, ‘immediateCondition’
[08:07:24.281] | : . ' resignal = TRUE
[08:07:24.281] | : . ' Number of conditions: 0
[08:07:24.281] | : . '  int 0
[08:07:24.281] | : . signalConditions() ... done
[08:07:24.281] | : . relayed: [n=2] TRUE, TRUE
[08:07:24.281] | : . queued futures: [n=2] TRUE, TRUE
[08:07:24.282] | : signalConditionsASAP(MultisessionFuture, pos=1) ... done
[08:07:24.282] | : resolve() for MultisessionFuture ...
[08:07:24.282] | : resolve() for MultisessionFuture ... done
[08:07:24.282] | : length: 0 (resolved future 1)
[08:07:24.282] | future_mapply() -> future_xapply() ... done
[08:07:24.282] | Relaying remaining futures ...
[08:07:24.282] | : signalConditionsASAP(NULL, pos=0) ...
[08:07:24.282] | : . nx: 2
[08:07:24.282] | : . relay: TRUE
[08:07:24.282] | : . stdout: TRUE
[08:07:24.283] | : . signal: TRUE
[08:07:24.283] | : . resignal: FALSE
[08:07:24.283] | : . force: TRUE
[08:07:24.283] | : . relayed: [n=2] TRUE, TRUE
[08:07:24.283] | : . queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:24.283] | : . relayed: [n=2] TRUE, TRUE
[08:07:24.283] | : . queued futures: [n=2] TRUE, TRUE
[08:07:24.283] | : signalConditionsASAP(NULL, pos=0) ... done
[08:07:24.283] | Relaying remaining futures ... done
[08:07:24.283] future_mapply() ... done
[08:07:24.284]  - Number of value chunks collected: 2
[08:07:24.284] Resolving 2 futures (chunks) ... DONE
[08:07:24.284] Reducing values from 2 chunks ...
[08:07:24.284]  - Number of values collected after concatenation: 2
[08:07:24.284]  - Number of values expected: 2
[08:07:24.284] Reducing values from 2 chunks ... DONE


* future_mapply(x, ..., future.stdout = NA) ... DONE
* plan('multisession') ... DONE
  - Testing with 2 cores ... DONE

> message("*** future_*apply() and 'future.stdout' ... DONE")
*** future_*apply() and 'future.stdout' ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=3s, sys.self=0.3s, elapsed=1e+01s, user.child=1s, sys.child=0.6s
Test ‘stdout’ ... success
> 
