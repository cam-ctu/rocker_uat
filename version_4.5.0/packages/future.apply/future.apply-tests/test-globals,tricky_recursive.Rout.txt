
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-globals,tricky_recursive.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future.apply:::testme("globals,tricky_recursive")
Test ‘globals,tricky_recursive’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future.apply/testme/test-globals,tricky_recursive.R’

> library(future.apply)
Loading required package: future

> options(future.debug = FALSE)

> message("*** Tricky globals requiring recursive search ...")
*** Tricky globals requiring recursive search ...

> my_add <- function(a, b) a + b

> call_my_add <- function(a, b) {
+     do.call(my_add, args = list(a = a, b = b))
+ }

> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+     do.call(FUN, args = list(a = a, b = b))
+ }

> main_lapply <- function(x = 1:2, caller = call_my_add_caller, 
+     args = list(FUN = call_my_add)) {
+     lapply(x, FUN = function(i) {
+         .... [TRUNCATED] 

> main_lapply_no_FUN <- function(x = 1:2, caller = call_my_add_caller, 
+     args = list(FUN = call_my_add)) {
+     lapply(x, FUN = function(i) {
+  .... [TRUNCATED] 

> main_future_lapply <- function(x = 1:2, caller = call_my_add_caller, 
+     args = list(FUN = call_my_add)) {
+     future_lapply(x, FUN = function( .... [TRUNCATED] 

> main_future_lapply_no_FUN <- function(x = 1:2, caller = call_my_add_caller, 
+     args = list(FUN = call_my_add)) {
+     future_lapply(x, FUN = fu .... [TRUNCATED] 

> x0 <- y0 <- z0 <- NULL

> for (strategy in supportedStrategies()) {
+     message(sprintf("*** strategy = %s ...", sQuote(strategy)))
+     plan(strategy)
+     z <- main_lap .... [TRUNCATED] 
*** strategy = ‘sequential’ ...
List of 1
 $ z:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z2:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z3:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z4:List of 2
  ..$ : int 3
  ..$ : int 5
*** strategy = ‘sequential’ ... DONE
*** strategy = ‘multicore’ ...
List of 1
 $ z:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z2:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z3:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z4:List of 2
  ..$ : int 3
  ..$ : int 5
*** strategy = ‘multicore’ ... DONE
*** strategy = ‘multisession’ ...
List of 1
 $ z:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z2:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z3:List of 2
  ..$ : int 3
  ..$ : int 5
List of 1
 $ z4:List of 2
  ..$ : int 3
  ..$ : int 5
*** strategy = ‘multisession’ ... DONE

> message("*** Tricky globals requiring recursive search ... DONE")
*** Tricky globals requiring recursive search ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.7s, sys.self=0.05s, elapsed=1s, user.child=0.2s, sys.child=0.4s
Test ‘globals,tricky_recursive’ ... success
> 
