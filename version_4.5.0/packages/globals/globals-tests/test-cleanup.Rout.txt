
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-cleanup.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> globals:::testme("cleanup")
Test ‘cleanup’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/005.globals.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/010.record-state.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/030.imports.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/050.utils.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/090.context.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/090.options.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/091.envvars.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/globals/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/globals/testme/test-cleanup.R’

> library(globals)

> message("*** cleanup() ...")
*** cleanup() ...

> message("- cleanup() with remapped base functions")
- cleanup() with remapped base functions

> globals <- list(my_fcn = function(x) x, identity = base::identity, 
+     my_identity = base::identity)

> expected <- c("my_fcn", "my_identity")

> ns <- asNamespace("utils")

> pkg <- as.environment("package:utils")

> internals <- setdiff(ls(ns, all.names = TRUE), ls(pkg, 
+     all.names = TRUE))

> internals <- grep("^print", internals, value = TRUE)

> if (length(internals) > 0) {
+     name <- internals[1]
+     obj <- get(name, envir = ns, inherits = FALSE)
+     stopifnot(!exists(name, envir = p .... [TRUNCATED] 

> globals <- as.Globals(globals)

> str(globals)
List of 5
 $ my_fcn         :function (x)  
 $ identity       :function (x)  
 $ my_identity    :function (x)  
 $ print.aspell   :function (x, ...)  
 $ my-print.aspell:function (x, ...)  
 - attr(*, "where")=List of 5
  ..$ my_fcn         :<environment: R_GlobalEnv> 
  ..$ identity       :<environment: namespace:base> 
  ..$ my_identity    :<environment: namespace:base> 
  ..$ print.aspell   :<environment: namespace:utils> 
  ..$ my-print.aspell:<environment: namespace:utils> 
 - attr(*, "class")= chr [1:2] "Globals" "list"

> globals <- cleanup(globals)

> str(globals)
List of 4
 $ my_fcn         :function (x)  
 $ my_identity    :function (x)  
 $ print.aspell   :function (x, ...)  
 $ my-print.aspell:function (x, ...)  
 - attr(*, "where")=List of 4
  ..$ my_fcn         :<environment: R_GlobalEnv> 
  ..$ my_identity    :<environment: namespace:base> 
  ..$ print.aspell   :<environment: namespace:utils> 
  ..$ my-print.aspell:<environment: namespace:utils> 
 - attr(*, "class")= chr [1:2] "Globals" "list"

> assert_identical_sets(names(globals), expected)

> message("- cleanup() with missing globals")
- cleanup() with missing globals

> rm(list = "b")

> expr <- quote(a <- b)

> print(expr)
a <- b

> globals <- globalsOf(expr, mustExist = FALSE)

> str(globals)
List of 2
 $ <-:.Primitive("<-") 
 $ b : NULL
 - attr(*, "where")=List of 2
  ..$ <-:<environment: base> 
  ..$ b : NULL
 - attr(*, "class")= chr [1:2] "Globals" "list"

> stopifnot(identical(names(globals), c("<-", "b")))

> message("- cleanup(globals) with missing globals")
- cleanup(globals) with missing globals

> pruned <- cleanup(globals)

> str(pruned)
 Named list()
 - attr(*, "where")= Named list()
 - attr(*, "class")= chr [1:2] "Globals" "list"

> stopifnot(length(pruned) == 0)

> message("- cleanup(globals, drop = 'missing') with missing globals")
- cleanup(globals, drop = 'missing') with missing globals

> pruned <- cleanup(globals, drop = "missing")

> str(pruned)
List of 1
 $ <-:.Primitive("<-") 
 - attr(*, "where")=List of 1
  ..$ <-:<environment: base> 
 - attr(*, "class")= chr [1:2] "Globals" "list"

> stopifnot(identical(names(pruned), c("<-")))

> message("- cleanup(globals, drop = 'base-packages') with missing globals")
- cleanup(globals, drop = 'base-packages') with missing globals

> pruned <- cleanup(globals, drop = "base-packages")

> str(pruned)
List of 1
 $ b: NULL
 - attr(*, "where")=List of 1
  ..$ b: NULL
 - attr(*, "class")= chr [1:2] "Globals" "list"

> stopifnot(identical(names(pruned), c("b")))

> message("*** cleanup() ... DONE")
*** cleanup() ... DONE
Sourcing 5 epilogue scripts ...
01/05 epilogue script ‘/usr/local/lib/R/site-library/globals/testme/_epilogue/002.undo-state.R’
02/05 epilogue script ‘/usr/local/lib/R/site-library/globals/testme/_epilogue/090.gc.R’
03/05 epilogue script ‘/usr/local/lib/R/site-library/globals/testme/_epilogue/099.session_info.R’
04/05 epilogue script ‘/usr/local/lib/R/site-library/globals/testme/_epilogue/995.detritus-connections.R’
05/05 epilogue script ‘/usr/local/lib/R/site-library/globals/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 5 epilogue scripts ... done
Test time: user.self=0.05s, sys.self=0.007s, elapsed=0.06s, user.child=0s, sys.child=0s
Test ‘cleanup’ ... success
> 
