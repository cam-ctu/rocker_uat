
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script incl/testme/test-killNode.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> parallelly:::testme("killNode")
Test ‘killNode’ ...
Sourcing 7 prologue scripts ...
01/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/001.load.R’
02/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/002.record-state.R’
03/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/030.imports.R’
04/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/050.utils.R’
05/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/090.context.R’
06/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/090.options.R’
07/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/091.envvars.R’
Sourcing 7 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/parallelly/testme/test-killNode.R’

> library(parallelly)

> if (on_windows) {
+     killNode <- function(cl) {
+         parallel::stopCluster(cl)
+         rep(TRUE, times = length(cl))
+     }
+ }

> options(parallelly.debug = FALSE)

> message("*** killNode() and isNodeAlive() ...")
*** killNode() and isNodeAlive() ...

> isNodeAliveSupported <- isTRUE(parallelly:::pid_exists(Sys.getpid()))

> message("isNodeAlive() works: ", isNodeAliveSupported)
isNodeAlive() works: TRUE

> cl <- makeClusterPSOCK(2, autoStop = FALSE)

> names(cl) <- sprintf("Node %d", seq_along(cl))

> print(cl)
Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.0 (2025-04-11), platform x86_64-pc-linux-gnu)

> if (on_windows) {
+     files <- setdiff(dir(path = tempdir(), all.files = TRUE), 
+         c(".", ".."))
+     files <- file.path(tempdir(), files .... [TRUNCATED] 

> alive <- isNodeAlive(cl)

> print(alive)
Node 1 Node 2 
  TRUE   TRUE 

> stopifnot(length(alive) == length(cl), is.logical(alive))

> if (isNodeAliveSupported) {
+     stopifnot(!anyNA(alive), isTRUE(alive[[1]]), isTRUE(alive[[2]]), 
+         all(alive))
+ }

> message("- Terminate cluster nodes")
- Terminate cluster nodes

> signaled <- killNode(cl)

> print(signaled)
Node 1 Node 2 
  TRUE   TRUE 

> stopifnot(length(signaled) == length(cl), is.logical(signaled))

> if (getRversion() >= "3.5.0") {
+     stopifnot(isTRUE(signaled[[1]]), isTRUE(signaled[[2]]), all(signaled))
+ }

> message("- Waiting for cluster nodes to terminate")
- Waiting for cluster nodes to terminate

> timeout <- Sys.time() + 30

> repeat {
+     alive <- isNodeAlive(cl)
+     print(alive)
+     stopifnot(length(alive) == length(cl), is.logical(alive))
+     if (!any(alive, na. .... [TRUNCATED] 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Node 1 Node 2 
  TRUE   TRUE 
Error in eval(ei, envir) : 
  One or more cluster nodes are still running after 30 seconds
Calls: <Anonymous> ... eval -> eval -> source -> withVisible -> eval -> eval
Execution halted
