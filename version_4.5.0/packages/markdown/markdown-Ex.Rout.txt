
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "markdown"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('markdown')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("rpubsUpload")
> ### * rpubsUpload
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rpubsUpload
> ### Title: Upload an HTML file to RPubs
> ### Aliases: rpubsUpload
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # upload a document
> ##D result <- rpubsUpload("My document title", "Document.html")
> ##D if (!is.null(result$continueUrl))
> ##D     browseURL(result$continueUrl) else stop(result$error)
> ##D 
> ##D # update the same document with a new title
> ##D updateResult <- rpubsUpload("My updated title", "Document.html", result$id)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("smartypants")
> ### * smartypants
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: smartypants
> ### Title: Convert some ASCII strings to HTML entities
> ### Aliases: smartypants
> 
> ### ** Examples
> 
> cat(smartypants("1/2 (c)\n"))
&frac12; &copy; > 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.081 0.01 0.091 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
