
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[08:28:59.001] plan(): Setting new future strategy stack:
[08:28:59.001] List of future strategies:
[08:28:59.001] 1. sequential:
[08:28:59.001]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[08:28:59.001]    - tweaked: FALSE
[08:28:59.001]    - call: future::plan("sequential")
[08:28:59.014] plan(): nbrOfWorkers() = 1
> options(future.debug = FALSE)
> plan(sequential)
> 
> message("Overriding reserved keyword functions ...")
Overriding reserved keyword functions ...
> 
> ## Identify globals used by the expanded future expression
> ...names <- globals::findGlobals(getExpression(future(NULL)))
> ...names <- ...names[sapply(...names, FUN = exists, mode = "function")]
> 
> ## Skip test with '<-' because it causes issues for at least R 3.2.0 & 3.3.0
> if (getRversion() < "3.4.0") ...names <- setdiff(...names, "<-")
> 
> print(...names)
 [1] "{"            "<-"           "::"           "if"           "[["          
 [6] "is.null"      "||"           "!"            "<"            "$"           
[11] "*"            "["            "options"      "Sys.unsetenv" "getwd"       
[16] "identical"    "-"            "&&"           "[[<-"         "for"         
[21] "next"         "break"        "invisible"    "Sys.time"     "setwd"       
[26] "getOption"    "$<-"          "=="           ">"            "RNGkind"     
[31] "is.na"        "Sys.setenv"  
> boom <- function(...) stop("Boom!")
> 
> base_sprintf <- base::sprintf
> base_tryCatch <- base::tryCatch
> base_rm <- base::rm
> 
> fails <- logical(length(...names))
> names(fails) <- ...names
> for (kk in seq_along(...names)) {
+   name <- ...names[kk]
+   message(base_sprintf(" - %d/%d %s: ", kk, length(...names), sQuote(name)), appendLF = FALSE)
+   assign(name, boom)
+   res <- base_tryCatch(suppressWarnings({
+     future(NULL)
+   }), error = identity)
+   base_rm(list = name)
+   if (inherits(res, "error")) {
+     fails[kk] <- TRUE
+     message("FAIL")
+   } else {
+     message("OK")
+   }
+ }
 - 1/32 ‘{’: FAIL
 - 2/32 ‘<-’: FAIL
 - 3/32 ‘::’: FAIL
 - 4/32 ‘if’: FAIL
 - 5/32 ‘[[’: FAIL
 - 6/32 ‘is.null’: FAIL
 - 7/32 ‘||’: FAIL
 - 8/32 ‘!’: FAIL
 - 9/32 ‘<’: FAIL
 - 10/32 ‘$’: FAIL
 - 11/32 ‘*’: OK
 - 12/32 ‘[’: OK
 - 13/32 ‘options’: FAIL
 - 14/32 ‘Sys.unsetenv’: FAIL
 - 15/32 ‘getwd’: FAIL
 - 16/32 ‘identical’: FAIL
 - 17/32 ‘-’: OK
 - 18/32 ‘&&’: OK
 - 19/32 ‘[[<-’: OK
 - 20/32 ‘for’: OK
 - 21/32 ‘next’: OK
 - 22/32 ‘break’: OK
 - 23/32 ‘invisible’: OK
 - 24/32 ‘Sys.time’: OK
 - 25/32 ‘setwd’: OK
 - 26/32 ‘getOption’: FAIL
 - 27/32 ‘$<-’: FAIL
 - 28/32 ‘==’: FAIL
 - 29/32 ‘>’: FAIL
 - 30/32 ‘RNGkind’: FAIL
 - 31/32 ‘is.na’: FAIL
 - 32/32 ‘Sys.setenv’: OK
> 
> message("Reserved keyword functions that must not be overridden:")
Reserved keyword functions that must not be overridden:
> print(names(fails)[fails])
 [1] "{"            "<-"           "::"           "if"           "[["          
 [6] "is.null"      "||"           "!"            "<"            "$"           
[11] "options"      "Sys.unsetenv" "getwd"        "identical"    "getOption"   
[16] "$<-"          "=="           ">"            "RNGkind"      "is.na"       
> 
> ## future 1.15.1:
> ##  [1] "{"                  "<-"                 "Sys.time"          
> ##  [4] "options"            "requireNamespace"   "if"                
> ##  [7] "packageVersion"     "||"                 "!"                 
> ## [10] "<"                  "::"                 "is.na"             
> ## [13] "rawConnection"      "raw"                "sink"              
> ## [16] "on.exit"            "is.null"            "close"             
> ## [19] "sys.nframe"         "list"               "tryCatch"          
> ## [22] "$<-"                "rawToChar"          "rawConnectionValue"
> 
> message("Overriding reserved keyword functions ... done")
Overriding reserved keyword functions ... done
> 
> source("incl/end.R")
> 
