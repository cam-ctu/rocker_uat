
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[08:28:42.750] plan(): Setting new future strategy stack:
[08:28:42.751] List of future strategies:
[08:28:42.751] 1. sequential:
[08:28:42.751]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[08:28:42.751]    - tweaked: FALSE
[08:28:42.751]    - call: future::plan("sequential")
[08:28:42.765] plan(): nbrOfWorkers() = 1
> 
> objectSize <- future:::objectSize
> 
> message("objectSize() ...")
objectSize() ...
> 
> env <- new.env()
> env$a <- 3.14
> env$b <- 1:100
> 
> env2 <- new.env()
> env2$env <- env
> 
> ## Namespaces will be skipped
> env3 <- getNamespace("utils")
> 
> fcn <- function(...) TRUE
> 
> objs <- list(
+   NULL,
+   TRUE,
+   1L,
+   3.14,
+   "hello",
+   1:100,
+   1:100 + 0.1,
+   letters,
+   list(a = 3.14, b = 1:100),
+   list(a = 3.14, b = 1:100, c = list(a = 3.14, b = 1:100)),
+   env,
+   env2,
+   env3,
+   fcn,
+   as.FutureGlobals(list(a = 3.14, b = 1:100)),
+   list(x = as.FutureGlobals(list(a = 3.14, b = 1:100))),
+   alist(a=)
+ )
> 
> for (kk in seq_along(objs)) {
+   obj <- objs[[kk]]
+   message(sprintf("objectSize(<%s>) ...", mode(obj)))
+   str(obj)
+   
+   size0 <- object.size(obj)
+   str(size0)
+   
+   size <- objectSize(obj)
+   str(size)
+   
+   message(sprintf("objectSize(<%s>) ... DONE", mode(obj)))
+ }
objectSize(<NULL>) ...
 NULL
 'object_size' num 0
 num 27
objectSize(<NULL>) ... DONE
objectSize(<logical>) ...
 logi TRUE
 'object_size' num 56
 num 35
objectSize(<logical>) ... DONE
objectSize(<numeric>) ...
 int 1
 'object_size' num 56
 num 35
objectSize(<numeric>) ... DONE
objectSize(<numeric>) ...
 num 3.14
 'object_size' num 56
 num 39
objectSize(<numeric>) ... DONE
objectSize(<character>) ...
 chr "hello"
 'object_size' num 112
 num 44
objectSize(<character>) ... DONE
objectSize(<numeric>) ...
 int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
 'object_size' num 448
 num 133
objectSize(<numeric>) ... DONE
objectSize(<numeric>) ...
 num [1:100] 1.1 2.1 3.1 4.1 5.1 6.1 7.1 8.1 9.1 10.1 ...
 'object_size' num 848
 num 831
objectSize(<numeric>) ... DONE
objectSize(<character>) ...
 chr [1:26] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" ...
 'object_size' num 1712
 num 265
objectSize(<character>) ... DONE
objectSize(<list>) ...
List of 2
 $ a: num 3.14
 $ b: int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
 'object_size' num 856
 num 208
objectSize(<list>) ... DONE
objectSize(<list>) ...
List of 3
 $ a: num 3.14
 $ b: int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
 $ c:List of 2
  ..$ a: num 3.14
  ..$ b: int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
 'object_size' num 1800
 num 355
objectSize(<list>) ... DONE
objectSize(<environment>) ...
<environment: 0x5654fec49c18> 
 'object_size' num 56
 num 327
objectSize(<environment>) ... DONE
objectSize(<environment>) ...
<environment: 0x5654fec47b70> 
 'object_size' num 56
 num 490
objectSize(<environment>) ... DONE
objectSize(<environment>) ...
<environment: namespace:utils> 
 'object_size' num 56
 num 0
objectSize(<environment>) ... DONE
objectSize(<function>) ...
function (...)  
 'object_size' num 280
 num 70
objectSize(<function>) ... DONE
objectSize(<list>) ...
List of 2
 $ a: num 3.14
 $ b: int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
 - attr(*, "where")=List of 2
  ..$ a:<environment: R_EmptyEnv> 
  ..$ b:<environment: R_EmptyEnv> 
 - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
 - attr(*, "resolved")= logi FALSE
 - attr(*, "total_size")= num NA
 'object_size' num 2136
 num 438
objectSize(<list>) ... DONE
objectSize(<list>) ...
List of 1
 $ x:List of 2
  ..$ a: num 3.14
  ..$ b: int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
  ..- attr(*, "where")=List of 2
  .. ..$ a:<environment: R_EmptyEnv> 
  .. ..$ b:<environment: R_EmptyEnv> 
  ..- attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
  ..- attr(*, "resolved")= logi FALSE
  ..- attr(*, "total_size")= num NA
 'object_size' num 2416
 num 475
objectSize(<list>) ... DONE
objectSize(<list>) ...
List of 1
 $ a: symbol 
 'object_size' num 336
 num 77
objectSize(<list>) ... DONE
> 
> message("*** objectSize() - globals with non-trustful length() ...")
*** objectSize() - globals with non-trustful length() ...
> 
> length.CantTrustLength <- function(x) length(unclass(x)) + 1L
> 
> .length <- future:::.length
> 
> x <- structure(as.list(1:3), class = c("CantTrustLength", "list"))
> str(list(n = length(x), n_true = .length(x)))
List of 2
 $ n     : int 4
 $ n_true: int 3
> stopifnot(length(x) > .length(x))
> size <- objectSize(x)
> print(size)
[1] 135
> 
> message("*** objectSize() - globals with non-trustful length() ... DONE")
*** objectSize() - globals with non-trustful length() ... DONE
> 
> message("objectSize() ... DONE")
objectSize() ... DONE
> 
> source("incl/end.R")
[08:28:42.815] plan(): Setting new future strategy stack:
[08:28:42.815] List of future strategies:
[08:28:42.815] 1. FutureStrategy:
[08:28:42.815]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[08:28:42.815]    - tweaked: FALSE
[08:28:42.815]    - call: future::plan(oplan)
[08:28:42.826] plan(): nbrOfWorkers() = 1
> 
