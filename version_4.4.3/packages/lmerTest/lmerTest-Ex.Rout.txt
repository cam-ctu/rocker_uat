
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "lmerTest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('lmerTest')
Loading required package: lme4
Loading required package: Matrix

Attaching package: ‘lmerTest’

The following object is masked from ‘package:lme4’:

    lmer

The following object is masked from ‘package:stats’:

    step

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("TVbo")
> ### * TVbo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: TVbo
> ### Title: Sensory Assesment of B&O TVs
> ### Aliases: TVbo
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> fm <- lmer(Coloursaturation ~ TVset + Picture + (1|Assessor:TVset) +
+              (1|Assessor), data=TVbo)
> ranova(fm)
ANOVA-like table for random-effects: Single term deletions

Model:
Coloursaturation ~ TVset + Picture + (1 | Assessor:TVset) + (1 | Assessor)
                     npar  logLik    AIC    LRT Df Pr(>Chisq)    
<none>                  9 -287.88 593.76                         
(1 | Assessor:TVset)    8 -308.89 633.78 42.021  1   9.03e-11 ***
(1 | Assessor)          8 -287.92 591.85  0.090  1     0.7643    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fm)
Type III Analysis of Variance Table with Satterthwaite's method
        Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
TVset   31.411 15.7056     2    14 17.2246 0.0001682 ***
Picture 11.216  3.7387     3   165  4.1003 0.0077352 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> 
> cleanEx()
> nameEx("anova.lmerModLmerTest")
> ### * anova.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: anova.lmerModLmerTest
> ### Title: ANOVA Tables for Linear Mixed Models
> ### Aliases: anova.lmerModLmerTest
> 
> ### ** Examples
> 
> 
> data("sleepstudy", package="lme4")
> m <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
> anova(m) # with p-values from F-tests using Satterthwaite's denominator df
Type III Analysis of Variance Table with Satterthwaite's method
     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
Days  30031   30031     1    17  45.853 3.264e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(m, ddf="lme4") # no p-values
Analysis of Variance Table
     npar Sum Sq Mean Sq F value
Days    1  30031   30031  45.853
> 
> # Use the Kenward-Roger method
> if(requireNamespace("pbkrtest", quietly = TRUE))
+   anova(m, ddf="Kenward-Roger")
Type III Analysis of Variance Table with Kenward-Roger's method
     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
Days  30031   30031     1    17  45.853 3.264e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> ## Don't show: 
>   an1 <- anova(m) # with p-values from F-tests using Satterthwaite's denominator df
>   an2 <- anova(m, ddf="lme4")
>   stopifnot(
+     all(colnames(an1) == c("Sum Sq", "Mean Sq", "NumDF", "DenDF", "F value", "Pr(>F)")),
+     !"Pr(>F)" %in% colnames(an2),
+     all(!is.na(an1)),
+     all(!is.na(an2))
+   )
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("as.data.frame.ls_means")
> ### * as.data.frame.ls_means
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.data.frame.ls_means
> ### Title: Coerce 'ls_means' Objects to 'data.frame's
> ### Aliases: as.data.frame.ls_means
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> # Fit example model:
> data("cake", package="lme4")
> cake$Temp <- factor(cake$temperature, ordered = FALSE)
> model <- lmer(angle ~ recipe + Temp + (1|recipe:replicate), cake)
> 
> # Extract LS-means:
> head(lsm <- ls_means(model))
Least Squares Means table:

        Estimate Std. Error   df t value   lower   upper  Pr(>|t|)    
recipeA  33.1222     1.7368 42.0  19.070 29.6172 36.6273 < 2.2e-16 ***
recipeB  31.6444     1.7368 42.0  18.220 28.1394 35.1495 < 2.2e-16 ***
recipeC  31.6000     1.7368 42.0  18.194 28.0949 35.1051 < 2.2e-16 ***
Temp175  27.9778     1.1767 77.5  23.776 25.6348 30.3207 < 2.2e-16 ***
Temp185  29.9556     1.1767 77.5  25.456 27.6126 32.2985 < 2.2e-16 ***
Temp195  31.4222     1.1767 77.5  26.703 29.0793 33.7652 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> # Coerce LS-means objects to data.frames:
> head(as.data.frame(lsm))
          term levels Estimate Std. Error       df  t value    lower    upper
recipeA recipe      A 33.12222   1.736833 42.00000 19.07047 29.61715 36.62729
recipeB recipe      B 31.64444   1.736833 42.00000 18.21962 28.13937 35.14952
recipeC recipe      C 31.60000   1.736833 42.00000 18.19403 28.09493 35.10507
Temp175   Temp    175 27.97778   1.176744 77.54504 23.77558 25.63484 30.32071
Temp185   Temp    185 29.95556   1.176744 77.54504 25.45630 27.61262 32.29849
Temp195   Temp    195 31.42222   1.176744 77.54504 26.70267 29.07929 33.76516
            Pr(>|t|)
recipeA 2.670848e-22
recipeB 1.483885e-21
recipeC 1.563936e-21
Temp175 2.338410e-37
Temp185 2.121904e-39
Temp195 7.581316e-41
> head(as.data.frame(lsm, add_levels=FALSE))
        Estimate Std. Error       df  t value    lower    upper     Pr(>|t|)
recipeA 33.12222   1.736833 42.00000 19.07047 29.61715 36.62729 2.670848e-22
recipeB 31.64444   1.736833 42.00000 18.21962 28.13937 35.14952 1.483885e-21
recipeC 31.60000   1.736833 42.00000 18.19403 28.09493 35.10507 1.563936e-21
Temp175 27.97778   1.176744 77.54504 23.77558 25.63484 30.32071 2.338410e-37
Temp185 29.95556   1.176744 77.54504 25.45630 27.61262 32.29849 2.121904e-39
Temp195 31.42222   1.176744 77.54504 26.70267 29.07929 33.76516 7.581316e-41
> 
> 
> 
> 
> cleanEx()
> nameEx("as_lmerModLmerTest")
> ### * as_lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as_lmerModLmerTest
> ### Title: Coerce lmerMod Objects to lmerModLmerTest
> ### Aliases: as_lmerModLmerTest
> 
> ### ** Examples
> 
> m <- lme4::lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
> bm <- as_lmerModLmerTest(m)
> slotNames(bm)
 [1] "vcov_varpar" "Jac_list"    "vcov_beta"   "sigma"       "resp"       
 [6] "Gp"          "call"        "frame"       "flist"       "cnms"       
[11] "lower"       "theta"       "beta"        "u"           "devcomp"    
[16] "pp"          "optinfo"    
> 
> 
> 
> 
> cleanEx()
> nameEx("carrots")
> ### * carrots
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: carrots
> ### Title: Consumer Preference Mapping of Carrots
> ### Aliases: carrots
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> fm <- lmer(Preference ~ sens2 + Homesize + (1 + sens2 | Consumer), data=carrots)
> anova(fm)
Type III Analysis of Variance Table with Satterthwaite's method
         Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    
sens2    58.685  58.685     1 102.02 54.8236 3.888e-11 ***
Homesize  5.979   5.979     1 100.95  5.5852   0.02003 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> 
> cleanEx()
> nameEx("contest.lmerModLmerTest")
> ### * contest.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: contest.lmerModLmerTest
> ### Title: Test of Contrasts
> ### Aliases: contest.lmerModLmerTest contest.lmerMod
> 
> ### ** Examples
> 
> 
> data("sleepstudy", package="lme4")
> fm <- lmer(Reaction ~ Days + I(Days^2) + (1|Subject) + (0+Days|Subject),
+            sleepstudy)
> # F-test of third coeffcients - I(Days^2):
> contest(fm, c(0, 0, 1))
    Sum Sq  Mean Sq NumDF    DenDF  F value    Pr(>F)
1 1079.503 1079.503     1 144.6311 1.659144 0.1997759
> # Equivalent t-test:
> contest(fm, L=c(0, 0, 1), joint=FALSE)
   Estimate Std. Error       df  t value      lower     upper  Pr(>|t|)
1 0.3370223  0.2616475 144.6311 1.288078 -0.1801245 0.8541692 0.1997759
> # Test of 'Days + I(Days^2)':
> contest(fm, L=diag(3)[2:3, ])
    Sum Sq  Mean Sq NumDF    DenDF  F value       Pr(>F)
1 30399.15 15199.57     2 54.40752 23.36102 4.744897e-08
> # Other options:
> contest(fm, L=diag(3)[2:3, ], joint=FALSE)
   Estimate Std. Error       df  t value      lower      upper   Pr(>|t|)
1 7.4340850  2.8242827 114.9943 2.632203  1.8397217 13.0284483 0.00964808
2 0.3370223  0.2616475 144.6311 1.288078 -0.1801245  0.8541692 0.19977590
> contest(fm, L=diag(3)[2:3, ], joint=FALSE, collect=FALSE)
[[1]]
   Estimate Std. Error       df  t value      lower      upper   Pr(>|t|)
1 7.4340850  2.8242827 114.9943 2.632203  1.8397217 13.0284483 0.00964808
2 0.3370223  0.2616475 144.6311 1.288078 -0.1801245  0.8541692 0.19977590

> 
> # Illustrate a list argument:
> L <- list("First"=diag(3)[3, ], "Second"=diag(3)[-1, ])
> contest(fm, L)
          Sum Sq   Mean Sq NumDF     DenDF   F value       Pr(>F)
First   1079.503  1079.503     1 144.63110  1.659144 1.997759e-01
Second 30399.146 15199.573     2  54.40752 23.361016 4.744897e-08
> contest(fm, L, collect = FALSE)
$First
    Sum Sq  Mean Sq NumDF    DenDF  F value    Pr(>F)
1 1079.503 1079.503     1 144.6311 1.659144 0.1997759

$Second
    Sum Sq  Mean Sq NumDF    DenDF  F value       Pr(>F)
1 30399.15 15199.57     2 54.40752 23.36102 4.744897e-08

> contest(fm, L, joint=FALSE, confint = FALSE)
          Estimate Std. Error       df  t value   Pr(>|t|)
First    0.3370223  0.2616475 144.6311 1.288078 0.19977590
Second.1 7.4340850  2.8242827 114.9943 2.632203 0.00964808
Second.2 0.3370223  0.2616475 144.6311 1.288078 0.19977590
> contest(fm, L, joint=FALSE, collect = FALSE, level=0.99)
$First
   Estimate Std. Error       df  t value      lower    upper  Pr(>|t|)
1 0.3370223  0.2616475 144.6311 1.288078 -0.3459429 1.019988 0.1997759

$Second
   Estimate Std. Error       df  t value       lower     upper   Pr(>|t|)
1 7.4340850  2.8242827 114.9943 2.632203  0.03655396 14.831616 0.00964808
2 0.3370223  0.2616475 144.6311 1.288078 -0.34594295  1.019988 0.19977590

> 
> # Illustrate testing of estimability:
> # Consider the 'cake' dataset with a missing cell:
> data("cake", package="lme4")
> cake$temperature <- factor(cake$temperature, ordered=FALSE)
> cake <- droplevels(subset(cake, temperature %in% levels(cake$temperature)[1:2] &
+                             !(recipe == "C" & temperature == "185")))
> with(cake, table(recipe, temperature))
      temperature
recipe 175 185
     A  15  15
     B  15  15
     C  15   0
> fm <- lmer(angle ~ recipe * temperature + (1|recipe:replicate), cake)
fixed-effect model matrix is rank deficient so dropping 1 column / coefficient
> fixef(fm)
           (Intercept)                recipeB                recipeC 
            29.1333333             -2.2666667             -1.2000000 
        temperature185 recipeB:temperature185 
             2.4000000              0.1333333 
> # The coefficient for recipeC:temperature185 is dropped:
> attr(model.matrix(fm), "col.dropped")
recipeC:temperature185 
                     6 
> # so any contrast involving this coefficient is not estimable:
> Lmat <- diag(6)
> contest(fm, Lmat, joint=FALSE, check_estimability = TRUE)
    Estimate Std. Error       df     t value      lower     upper     Pr(>|t|)
1 29.1333333   1.853278 52.51829 15.71989449 25.4153325 32.851334 1.661995e-21
2 -2.2666667   2.620931 52.51829 -0.86483271 -7.5247139  2.991381 3.910638e-01
3 -1.2000000   2.620931 52.51829 -0.45785261 -6.4580472  4.058047 6.489471e-01
4  2.4000000   1.581345 26.57668  1.51769553 -0.8470716  5.647072 1.408979e-01
5  0.1333333   2.236359 26.57668  0.05962071 -4.4587193  4.725386 9.529038e-01
6         NA         NA       NA          NA         NA        NA           NA
> 
> 
> 
> 
> cleanEx()
> nameEx("contest1D.lmerModLmerTest")
> ### * contest1D.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: contest1D.lmerModLmerTest
> ### Title: Contrast Tests in 1D
> ### Aliases: contest1D.lmerModLmerTest contest1D.lmerMod
> 
> ### ** Examples
> 
> 
> # Fit model using lmer with data from the lme4-package:
> data("sleepstudy", package="lme4")
> fm <- lmer(Reaction ~ Days + (1 + Days|Subject), sleepstudy)
> 
> # Tests and CI of model coefficients are obtained with:
> contest1D(fm, c(1, 0), confint=TRUE) # Test for Intercept
  Estimate Std. Error       df  t value    lower    upper     Pr(>|t|)
1 251.4051   6.824597 16.99973 36.83809 237.0064 265.8038 1.171558e-17
> contest1D(fm, c(0, 1), confint=TRUE) # Test for Days
  Estimate Std. Error       df  t value    lower    upper     Pr(>|t|)
1 10.46729    1.54579 16.99998 6.771481 7.205955 13.72862 3.263824e-06
> 
> # Tests of coefficients are also part of:
> summary(fm)
Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: Reaction ~ Days + (1 + Days | Subject)
   Data: sleepstudy

REML criterion at convergence: 1743.6

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.9536 -0.4634  0.0231  0.4634  5.1793 

Random effects:
 Groups   Name        Variance Std.Dev. Corr
 Subject  (Intercept) 612.10   24.741       
          Days         35.07    5.922   0.07
 Residual             654.94   25.592       
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error      df t value Pr(>|t|)    
(Intercept)  251.405      6.825  17.000  36.838  < 2e-16 ***
Days          10.467      1.546  17.000   6.771 3.26e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
     (Intr)
Days -0.138
> 
> # Illustrate use of rhs argument:
> contest1D(fm, c(0, 1), confint=TRUE, rhs=10) # Test for Days-coef == 10
  Estimate Std. Error       df  t value    lower    upper  Pr(>|t|)
1 10.46729    1.54579 16.99998 0.302296 7.205955 13.72862 0.7660937
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("contestMD.lmerModLmerTest")
> ### * contestMD.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: contestMD.lmerModLmerTest
> ### Title: Multiple Degrees-of-Freedom Contrast Tests
> ### Aliases: contestMD.lmerModLmerTest calcSatterth contestMD.lmerMod
> 
> ### ** Examples
> 
> 
> data("sleepstudy", package="lme4")
> fm <- lmer(Reaction ~ Days + I(Days^2) + (1|Subject) + (0+Days|Subject),
+            sleepstudy)
> 
> # Define 2-df contrast - since L has 2 (linearly independent) rows
> # the F-test is on 2 (numerator) df:
> L <- rbind(c(0, 1, 0), # Note: ncol(L) == length(fixef(fm))
+            c(0, 0, 1))
> 
> # Make the 2-df F-test of any effect of Days:
> contestMD(fm, L)
    Sum Sq  Mean Sq NumDF    DenDF  F value       Pr(>F)
1 30399.15 15199.57     2 54.40752 23.36102 4.744897e-08
> 
> # Illustrate rhs argument:
> contestMD(fm, L, rhs=c(5, .1))
   Sum Sq  Mean Sq NumDF    DenDF  F value     Pr(>F)
1 6116.15 3058.075     2 54.40752 4.700115 0.01309499
> 
> # Make the 1-df F-test of the effect of Days^2:
> contestMD(fm, L[2, , drop=FALSE])
    Sum Sq  Mean Sq NumDF    DenDF  F value    Pr(>F)
1 1079.503 1079.503     1 144.6311 1.659144 0.1997759
> # Same test, but now as a t-test instead:
> contest1D(fm, L[2, , drop=TRUE])
   Estimate Std. Error       df  t value  Pr(>|t|)
1 0.3370223  0.2616475 144.6311 1.288078 0.1997759
> 
> 
> 
> 
> cleanEx()
> nameEx("drop1.lmerModLmerTest")
> ### * drop1.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: drop1.lmerModLmerTest
> ### Title: Drop Marginal Terms from Model
> ### Aliases: drop1.lmerModLmerTest
> 
> ### ** Examples
> 
> 
> # Basic usage:
> fm <- lmer(angle ~ recipe + temp + (1|recipe:replicate), cake)
> drop1(fm) # Using Satterthwaite degrees of freedom
Single term deletions using Satterthwaite's method:

Model:
angle ~ recipe + temp + (1 | recipe:replicate)
       Sum Sq Mean Sq NumDF DenDF F value Pr(>F)    
recipe   10.3    5.15     2    42  0.2488 0.7809    
temp   1966.7 1966.71     1   224 94.9759 <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> if(requireNamespace("pbkrtest", quietly = TRUE))
+   drop1(fm, ddf="Kenward-Roger") # Alternative DenDF and F-test method
Single term deletions using Kenward-Roger's method:

Model:
angle ~ recipe + temp + (1 | recipe:replicate)
       Sum Sq Mean Sq NumDF DenDF F value Pr(>F)    
recipe   10.3    5.15     2    42  0.2488 0.7809    
temp   1966.7 1966.71     1   224 94.9759 <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> drop1(fm, ddf="lme4", test="Chi") # Asymptotic Likelihood ratio tests
Single term deletions

Model:
angle ~ recipe + temp + (1 | recipe:replicate)
       npar    AIC    LRT Pr(Chi)    
<none>      1708.2                   
recipe    2 1704.7  0.530  0.7672    
temp      1 1785.7 79.531  <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # Consider a rank-deficient design matrix:
> fm <- lmer(angle ~ recipe + temp + temperature + (1|recipe:replicate), cake)
fixed-effect model matrix is rank deficient so dropping 1 column / coefficient
> # Here temp accounts for the linear effect of temperature, and
> # temperature is an (ordered) factor that accounts for the remaining
> # variation between temperatures (4 df).
> drop1(fm)
Single term deletions using Satterthwaite's method:

Model:
angle ~ recipe + temp + temperature + (1 | recipe:replicate)
             Sum Sq Mean Sq NumDF DenDF F value Pr(>F)
recipe       10.189   5.094     2    42  0.2488 0.7809
temp                                                  
temperature 133.595  33.399     4   220  1.6311 0.1674
> # While temperature is in the model, we cannot test the effect of dropping
> # temp. After removing temperature we can test the effect of dropping temp:
> drop1(lmer(angle ~ recipe + temp + (1|recipe:replicate), cake))
Single term deletions using Satterthwaite's method:

Model:
angle ~ recipe + temp + (1 | recipe:replicate)
       Sum Sq Mean Sq NumDF DenDF F value Pr(>F)    
recipe   10.3    5.15     2    42  0.2488 0.7809    
temp   1966.7 1966.71     1   224 94.9759 <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # Polynomials:
> # Note that linear terms should usually not be dropped before squared terms.
> # Therefore 'Days' should not be dropped before 'I(Days^2)' despite it being
> # tested here:
> fm <- lmer(Reaction ~ Days + I(Days^2) + (Days|Subject), sleepstudy)
> drop1(fm)
Single term deletions using Satterthwaite's method:

Model:
Reaction ~ Days + I(Days^2) + (Days | Subject)
          Sum Sq Mean Sq NumDF  DenDF F value  Pr(>F)   
Days      4534.5  4534.5     1 114.43  6.9551 0.00952 **
I(Days^2) 1079.5  1079.5     1 143.00  1.6558 0.20026   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> # Using poly() provides a test of the whole polynomial structure - not a
> # separate test for the highest order (squared) term:
> fm <- lmer(Reaction ~ poly(Days, 2) + (Days|Subject), sleepstudy)
> drop1(fm)
Single term deletions using Satterthwaite's method:

Model:
Reaction ~ poly(Days, 2) + (Days | Subject)
              Sum Sq Mean Sq NumDF  DenDF F value    Pr(>F)    
poly(Days, 2)  30974   15487     2 29.115  23.754 7.625e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> 
> cleanEx()
> nameEx("ham")
> ### * ham
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ham
> ### Title: Conjoint Study of Dry Cured Ham
> ### Aliases: ham
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> # Simple model for the ham data:
> fm <- lmer(Informed.liking ~ Product*Information + (1|Consumer) , data=ham)
> 
> # Anova table for the fixed effects:
> anova(fm)
Type III Analysis of Variance Table with Satterthwaite's method
                    Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
Product             91.807 30.6024     3   560  6.9901 0.0001271 ***
Information          6.520  6.5201     1   560  1.4893 0.2228402    
Product:Information 10.387  3.4624     3   560  0.7909 0.4992920    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> ## Not run: 
> ##D # Fit 'big' model:
> ##D fm <- lmer(Informed.liking ~ Product*Information*Gender*Age +
> ##D              + (1|Consumer) + (1|Consumer:Product) +
> ##D              (1|Consumer:Information),
> ##D            data=ham)
> ##D step_fm <- step(fm)
> ##D step_fm # Display elimination results
> ##D final_fm <- get_model(step_fm)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("is_estimable")
> ### * is_estimable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is_estimable
> ### Title: Estimability of Contrasts
> ### Aliases: is_estimable
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> # FIXME: We need some examples here
> 
> 
> 
> 
> cleanEx()
> nameEx("legacy")
> ### * legacy
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: anova.merModLmerTest
> ### Title: Methods for Legacy lmerTest Objects
> ### Aliases: anova.merModLmerTest legacy summary.merModLmerTest
> ###   ls_means.merModLmerTest lsmeansLT.merModLmerTest
> ###   difflsmeans.merModLmerTest drop1.merModLmerTest step.merModLmerTest
> ### Keywords: internal
> 
> ### ** Examples
> 
> # Load model fits fm1 and fm2 generated with lmerTest version 2.3-37:
> load(system.file("testdata","legacy_fits.RData", package="lmerTest"))
> 
> # Apply some methods defined by lmerTest:
> anova(fm1)
Type III Analysis of Variance Table with Satterthwaite's method
     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
Days  30031   30031     1    17  45.853 3.264e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> summary(fm1)
Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: Reaction ~ Days + (Days | Subject)
   Data: sleepstudy

REML criterion at convergence: 1743.6

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.9536 -0.4634  0.0231  0.4634  5.1793 

Random effects:
 Groups   Name        Variance Std.Dev. Corr
 Subject  (Intercept) 612.09   24.740       
          Days         35.07    5.922   0.07
 Residual             654.94   25.592       
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error      df t value Pr(>|t|)    
(Intercept)  251.405      6.825  17.000  36.838  < 2e-16 ***
Days          10.467      1.546  17.000   6.771 3.26e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
     (Intr)
Days -0.138
> contest(fm1, c(0, 1))
    Sum Sq  Mean Sq NumDF DenDF F value      Pr(>F)
1 30031.01 30031.01     1    17  45.853 3.26379e-06
> contest(fm1, c(0, 1), joint=FALSE)
  Estimate Std. Error df  t value    lower    upper    Pr(>|t|)
1 10.46729   1.545789 17 6.771485 7.205956 13.72862 3.26379e-06
> drop1(fm1)
Single term deletions using Satterthwaite's method:

Model:
Reaction ~ Days + (Days | Subject)
     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
Days  30031   30031     1    17  45.853 3.264e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> ranova(fm1)
ANOVA-like table for random-effects: Single term deletions

Model:
Reaction ~ Days + (Days | Subject)
                         npar  logLik    AIC    LRT Df Pr(>Chisq)    
<none>                      6 -871.81 1755.6                         
Days in (Days | Subject)    4 -893.23 1794.5 42.837  2   4.99e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # lme4-methods also work:
> fixef(fm1)
(Intercept)        Days 
  251.40510    10.46729 
> 
> # Ditto for second model fit:
> anova(fm2)
Type III Analysis of Variance Table with Satterthwaite's method
             Sum Sq Mean Sq NumDF DenDF F value  Pr(>F)  
Product     17.6984  5.8995     3   319  3.5029 0.01577 *
Information  6.5201  6.5201     1   323  3.8714 0.04997 *
Gender       1.8634  1.8634     1   319  1.1064 0.29366  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> summary(fm2)
Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: 
Informed.liking ~ Product + Information + Gender + (1 | Product:Consumer)
   Data: ham

REML criterion at convergence: 2712.2

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.1568 -0.5087  0.0338  0.4913  3.1623 

Random effects:
 Groups           Name        Variance Std.Dev.
 Product:Consumer (Intercept) 3.526    1.878   
 Residual                     1.684    1.298   
Number of obs: 648, groups:  Product:Consumer, 324

Fixed effects:
             Estimate Std. Error       df t value Pr(>|t|)    
(Intercept)    5.8290     0.2640 343.6885  22.082   <2e-16 ***
Product2      -0.7037     0.3284 319.0000  -2.143   0.0329 *  
Product3       0.2840     0.3284 319.0000   0.865   0.3879    
Product4       0.1173     0.3284 319.0000   0.357   0.7212    
Information2   0.2006     0.1020 323.0000   1.968   0.0500 *  
Gender2       -0.2443     0.2322 319.0000  -1.052   0.2937    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
            (Intr) Prdct2 Prdct3 Prdct4 Infrm2
Product2    -0.622                            
Product3    -0.622  0.500                     
Product4    -0.622  0.500  0.500              
Informatin2 -0.193  0.000  0.000  0.000       
Gender2     -0.434  0.000  0.000  0.000  0.000
> ls_means(fm2)
Least Squares Means table:

             Estimate Std. Error    df t value   lower   upper  Pr(>|t|)    
Product1      5.80713    0.23223 319.0  25.006 5.35025 6.26402 < 2.2e-16 ***
Product2      5.10343    0.23223 319.0  21.976 4.64654 5.56032 < 2.2e-16 ***
Product3      6.09108    0.23223 319.0  26.229 5.63420 6.54797 < 2.2e-16 ***
Product4      5.92442    0.23223 319.0  25.511 5.46753 6.38131 < 2.2e-16 ***
Information1  5.63121    0.12682 437.8  44.404 5.38196 5.88046 < 2.2e-16 ***
Information2  5.83183    0.12682 437.8  45.986 5.58258 6.08107 < 2.2e-16 ***
Gender1       5.85366    0.16320 319.0  35.868 5.53257 6.17475 < 2.2e-16 ***
Gender2       5.60937    0.16523 319.0  33.949 5.28430 5.93445 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> difflsmeans(fm2)
Least Squares Means table:

                               Estimate  Std. Error  df t value       lower
Product1 - Product2          7.0370e-01  3.2841e-01 319  2.1428  5.7578e-02
Product1 - Product3         -2.8395e-01  3.2841e-01 319 -0.8646 -9.3008e-01
Product1 - Product4         -1.1728e-01  3.2841e-01 319 -0.3571 -7.6341e-01
Product2 - Product3         -9.8765e-01  3.2841e-01 319 -3.0074 -1.6338e+00
Product2 - Product4         -8.2099e-01  3.2841e-01 319 -2.4999 -1.4671e+00
Product3 - Product4          1.6667e-01  3.2841e-01 319  0.5075 -4.7946e-01
Information1 - Information2 -2.0062e-01  1.0196e-01 323 -1.9676 -4.0121e-01
Gender1 - Gender2            2.4428e-01  2.3224e-01 319  1.0519 -2.1263e-01
                                  upper Pr(>|t|)   
Product1 - Product2          1.3498e+00 0.032890 * 
Product1 - Product3          3.6218e-01 0.387898   
Product1 - Product4          5.2884e-01 0.721234   
Product2 - Product3         -3.4153e-01 0.002845 **
Product2 - Product4         -1.7486e-01 0.012926 * 
Product3 - Product4          8.1279e-01 0.612159   
Information1 - Information2 -2.6433e-05 0.049970 * 
Gender1 - Gender2            7.0120e-01 0.293660   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> 
> 
> cleanEx()
> nameEx("lmer")
> ### * lmer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lmer
> ### Title: Fit Linear Mixed-Effects Models
> ### Aliases: lmer
> 
> ### ** Examples
> 
> 
> data("sleepstudy", package="lme4")
> m <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
> class(m) # lmerModLmerTest
[1] "lmerModLmerTest"
attr(,"package")
[1] "lmerTest"
> 
> 
> 
> 
> cleanEx()
> nameEx("lmerTest-package")
> ### * lmerTest-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lmerTest-package
> ### Title: lmerTest: Tests in Linear Mixed Effects Models
> ### Aliases: lmerTest-package lmerTest
> 
> ### ** Examples
> 
> 
> ## load lmerTest package
> library(lmerTest)
> 
> ## Fit linear mixed model to the ham data:
> fm <- lmer(Informed.liking ~ Gender + Information * Product + (1 | Consumer) +
+              (1 | Consumer:Product), data=ham)
> 
> ## Summary including coefficient table with p-values for t-statistics using
> ## Satterthwaite's method for denominator degrees of freedom:
> summary(fm)
Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: Informed.liking ~ Gender + Information * Product + (1 | Consumer) +  
    (1 | Consumer:Product)
   Data: ham

REML criterion at convergence: 2705.5

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.1482 -0.4478  0.0207  0.4510  3.3626 

Random effects:
 Groups           Name        Variance Std.Dev.
 Consumer:Product (Intercept) 3.1622   1.7783  
 Consumer         (Intercept) 0.3756   0.6129  
 Residual                     1.6675   1.2913  
Number of obs: 648, groups:  Consumer:Product, 324; Consumer, 81

Fixed effects:
                      Estimate Std. Error       df t value Pr(>|t|)    
(Intercept)             5.8490     0.2843 322.3364  20.574   <2e-16 ***
Gender2                -0.2443     0.2606  79.0000  -0.938   0.3514    
Information2            0.1605     0.2029 320.0000   0.791   0.4296    
Product2               -0.8272     0.3453 339.5123  -2.395   0.0171 *  
Product3                0.1481     0.3453 339.5123   0.429   0.6682    
Product4                0.2963     0.3453 339.5123   0.858   0.3915    
Information2:Product2   0.2469     0.2870 320.0000   0.860   0.3902    
Information2:Product3   0.2716     0.2870 320.0000   0.946   0.3446    
Information2:Product4  -0.3580     0.2870 320.0000  -1.248   0.2131    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
            (Intr) Gendr2 Infrm2 Prdct2 Prdct3 Prdct4 In2:P2 In2:P3
Gender2     -0.453                                                 
Informatin2 -0.357  0.000                                          
Product2    -0.607  0.000  0.294                                   
Product3    -0.607  0.000  0.294  0.500                            
Product4    -0.607  0.000  0.294  0.500  0.500                     
Infrmtn2:P2  0.252  0.000 -0.707 -0.415 -0.208 -0.208              
Infrmtn2:P3  0.252  0.000 -0.707 -0.208 -0.415 -0.208  0.500       
Infrmtn2:P4  0.252  0.000 -0.707 -0.208 -0.208 -0.415  0.500  0.500
> 
> ## Type III anova table with p-values for F-tests based on Satterthwaite's
> ## method:
> (aov <- anova(fm))
Type III Analysis of Variance Table with Satterthwaite's method
                     Sum Sq Mean Sq NumDF DenDF F value  Pr(>F)  
Gender               1.4656  1.4656     1    79  0.8789 0.35135  
Information          6.5201  6.5201     1   320  3.9101 0.04885 *
Product             19.1551  6.3850     3   240  3.8291 0.01048 *
Information:Product 10.3873  3.4624     3   320  2.0765 0.10321  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> ## Inspect the contrast matrix for the Type III test of Product:
> show_tests(aov, fractions = TRUE)$Product
         (Intercept) Gender2 Information2 Product2 Product3 Product4
Product2   0           0       0            1        0        0     
Product3   0           0       0            0        1        0     
Product4   0           0       0            0        0        1     
         Information2:Product2 Information2:Product3 Information2:Product4
Product2 1/2                     0                     0                  
Product3   0                   1/2                     0                  
Product4   0                     0                   1/2                  
> 
> ## Choose type II anova table with Kenward-Roger method for the F-test:
> ## Not run: 
> ##D if(requireNamespace("pbkrtest", quietly = TRUE))
> ##D   anova(fm, type=2, ddf="Kenward-Roger")
> ## End(Not run)
> 
> ## Anova-like table of random-effect terms using likelihood ratio tests:
> ranova(fm)
ANOVA-like table for random-effects: Single term deletions

Model:
Informed.liking ~ Gender + Information + Product + (1 | Consumer) + (1 | Consumer:Product) + Information:Product
                       npar  logLik    AIC     LRT Df Pr(>Chisq)    
<none>                   12 -1352.8 2729.5                          
(1 | Consumer)           11 -1354.3 2730.7   3.186  1    0.07425 .  
(1 | Consumer:Product)   11 -1435.0 2891.9 164.443  1    < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> ## F-tests of 'single term deletions' for all marginal terms:
> drop1(fm)
Single term deletions using Satterthwaite's method:

Model:
Informed.liking ~ Gender + Information * Product + (1 | Consumer) + (1 | Consumer:Product)
                     Sum Sq Mean Sq NumDF DenDF F value Pr(>F)
Gender               1.4656  1.4656     1    79  0.8789 0.3514
Information:Product 10.3873  3.4624     3   320  2.0765 0.1032
> 
> ## Least-Square means and pairwise differences:
> (lsm <- ls_means(fm))
Least Squares Means table:

                      Estimate Std. Error    df t value   lower   upper
Gender1                5.85366    0.18311  79.0  31.969 5.48920 6.21812
Gender2                5.60938    0.18538  79.0  30.259 5.24038 5.97837
Information1           5.63121    0.13981 104.2  40.278 5.35397 5.90845
Information2           5.83183    0.13981 104.2  41.713 5.55458 6.10907
Product1               5.80713    0.23232 311.5  24.996 5.35002 6.26425
Product2               5.10343    0.23232 311.5  21.967 4.64631 5.56055
Product3               6.09108    0.23232 311.5  26.218 5.63397 6.54820
Product4               5.92442    0.23232 311.5  25.501 5.46730 6.38154
Information1:Product1  5.72689    0.25351 426.6  22.591 5.22861 6.22517
Information2:Product1  5.88738    0.25351 426.6  23.224 5.38910 6.38566
Information1:Product2  4.89973    0.25351 426.6  19.328 4.40145 5.39801
Information2:Product2  5.30713    0.25351 426.6  20.935 4.80885 5.80541
Information1:Product3  5.87504    0.25351 426.6  23.175 5.37676 6.37332
Information2:Product3  6.30713    0.25351 426.6  24.879 5.80885 6.80541
Information1:Product4  6.02318    0.25351 426.6  23.759 5.52490 6.52146
Information2:Product4  5.82565    0.25351 426.6  22.980 5.32737 6.32393
                       Pr(>|t|)    
Gender1               < 2.2e-16 ***
Gender2               < 2.2e-16 ***
Information1          < 2.2e-16 ***
Information2          < 2.2e-16 ***
Product1              < 2.2e-16 ***
Product2              < 2.2e-16 ***
Product3              < 2.2e-16 ***
Product4              < 2.2e-16 ***
Information1:Product1 < 2.2e-16 ***
Information2:Product1 < 2.2e-16 ***
Information1:Product2 < 2.2e-16 ***
Information2:Product2 < 2.2e-16 ***
Information1:Product3 < 2.2e-16 ***
Information2:Product3 < 2.2e-16 ***
Information1:Product4 < 2.2e-16 ***
Information2:Product4 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> ls_means(fm, which = "Product", pairwise = TRUE)
Least Squares Means table:

                     Estimate Std. Error  df t value     lower     upper
Product1 - Product2  0.703704   0.314112 240  2.2403  0.084936  1.322471
Product1 - Product3 -0.283951   0.314112 240 -0.9040 -0.902718  0.334817
Product1 - Product4 -0.117284   0.314112 240 -0.3734 -0.736051  0.501484
Product2 - Product3 -0.987654   0.314112 240 -3.1443 -1.606422 -0.368887
Product2 - Product4 -0.820988   0.314112 240 -2.6137 -1.439755 -0.202220
Product3 - Product4  0.166667   0.314112 240  0.5306 -0.452101  0.785434
                    Pr(>|t|)   
Product1 - Product2 0.025987 * 
Product1 - Product3 0.366912   
Product1 - Product4 0.709193   
Product2 - Product3 0.001875 **
Product2 - Product4 0.009523 **
Product3 - Product4 0.596189   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> ## ls_means also have plot and as.data.frame methods:
> ## Not run: 
> ##D plot(lsm, which=c("Product", "Information"))
> ##D as.data.frame(lsm)
> ##D ## Inspect the LS-means contrasts:
> ##D show_tests(lsm, fractions=TRUE)$Product
> ## End(Not run)
> 
> ## Contrast test (contest) using a custom contrast:
> ## Here we make the 2-df joint test of the main effects of Gender and Information
> (L <- diag(length(fixef(fm)))[2:3, ])
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    0    1    0    0    0    0    0    0    0
[2,]    0    0    1    0    0    0    0    0    0
> contest(fm, L = L)
    Sum Sq  Mean Sq NumDF    DenDF   F value    Pr(>F)
1 2.508819 1.254409     2 125.9797 0.7522799 0.4733959
> 
> ## backward elimination of non-significant effects:
> step_result <- step(fm)
> 
> ## Elimination tables for random- and fixed-effect terms:
> step_result
Backward reduced random-effect table:

                       Eliminated npar  logLik    AIC     LRT Df Pr(>Chisq)    
<none>                              12 -1352.8 2729.5                          
(1 | Consumer)                  0   11 -1354.3 2730.7   3.186  1    0.07425 .  
(1 | Consumer:Product)          0   11 -1435.0 2891.9 164.443  1    < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Backward reduced fixed-effect table:
Degrees of freedom method: Satterthwaite 

                    Eliminated  Sum Sq Mean Sq NumDF DenDF F value  Pr(>F)  
Gender                       1  1.4656  1.4656     1    79  0.8789 0.35135  
Information:Product          2 10.3873  3.4624     3   320  2.0765 0.10321  
Information                  0  6.5201  6.5201     1   323  3.8714 0.04997 *
Product                      0 19.3466  6.4489     3   240  3.8291 0.01048 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Model found:
Informed.liking ~ Information + Product + (1 | Consumer) + (1 | Consumer:Product)
> 
> # Extract the model that step found:
> final_model <- get_model(step_result)
> 
> 
> 
> 
> cleanEx()
> nameEx("ls_means.lmerModLmerTest")
> ### * ls_means.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ls_means.lmerModLmerTest
> ### Title: LS-means for lmerTest Model Fits
> ### Aliases: ls_means.lmerModLmerTest lsmeansLT.lmerModLmerTest
> ###   difflsmeans.lmerModLmerTest
> 
> ### ** Examples
> 
> 
> # Get data and fit model:
> data("cake", package="lme4")
> model <- lmer(angle ~ recipe * temp + (1|recipe:replicate), cake)
> 
> # Compute LS-means:
> ls_means(model)
Least Squares Means table:

        Estimate Std. Error df t value   lower   upper  Pr(>|t|)    
recipeA  33.1222     1.7368 42  19.070 29.6172 36.6273 < 2.2e-16 ***
recipeB  31.6444     1.7368 42  18.220 28.1394 35.1495 < 2.2e-16 ***
recipeC  31.6000     1.7368 42  18.194 28.0949 35.1051 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> # Get LS-means contrasts:
> show_tests(ls_means(model))
$recipe
        (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeA           1       0       0  200            0            0
recipeB           1       1       0  200          200            0
recipeC           1       0       1  200            0          200

> 
> # Compute pairwise differences of LS-means for each factor:
> ls_means(model, pairwise=TRUE)
Least Squares Means table:

                   Estimate Std. Error df t value     lower     upper Pr(>|t|)
recipeA - recipeB  1.477778   2.456253 42  0.6016 -3.479142  6.434698   0.5506
recipeA - recipeC  1.522222   2.456253 42  0.6197 -3.434698  6.479142   0.5388
recipeB - recipeC  0.044444   2.456253 42  0.0181 -4.912476  5.001364   0.9856

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> difflsmeans(model) # Equivalent.
Least Squares Means table:

                   Estimate Std. Error df t value     lower     upper Pr(>|t|)
recipeA - recipeB  1.477778   2.456253 42  0.6016 -3.479142  6.434698   0.5506
recipeA - recipeC  1.522222   2.456253 42  0.6197 -3.434698  6.479142   0.5388
recipeB - recipeC  0.044444   2.456253 42  0.0181 -4.912476  5.001364   0.9856

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> 
> 
> 
> cleanEx()
> nameEx("nullspace")
> ### * nullspace
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nullspace
> ### Title: Nullspace
> ### Aliases: nullspace
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> # FIXME: We need some examples here
> 
> 
> 
> 
> cleanEx()
> nameEx("plot.ls_means")
> ### * plot.ls_means
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.ls_means
> ### Title: Bar Plots of LS-Means
> ### Aliases: plot.ls_means
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> # Fit example model with 2 factors:
> data("cake", package="lme4")
> cake$Temp <- factor(cake$temperature, ordered = FALSE)
> model <- lmer(angle ~ recipe * Temp + (1|recipe:replicate), cake)
> 
> # Extract LS-means:
> (lsm <- ls_means(model))
Least Squares Means table:

                Estimate Std. Error   df t value   lower   upper  Pr(>|t|)    
recipeA          33.1222     1.7368 42.0  19.070 29.6172 36.6273 < 2.2e-16 ***
recipeB          31.6444     1.7368 42.0  18.220 28.1394 35.1495 < 2.2e-16 ***
recipeC          31.6000     1.7368 42.0  18.194 28.0949 35.1051 < 2.2e-16 ***
Temp175          27.9778     1.1767 77.4  23.776 25.6349 30.3207 < 2.2e-16 ***
Temp185          29.9556     1.1767 77.4  25.457 27.6127 32.2985 < 2.2e-16 ***
Temp195          31.4222     1.1767 77.4  26.704 29.0793 33.7651 < 2.2e-16 ***
Temp205          32.1778     1.1767 77.4  27.346 29.8349 34.5207 < 2.2e-16 ***
Temp215          35.8444     1.1767 77.4  30.462 33.5015 38.1873 < 2.2e-16 ***
Temp225          35.3556     1.1767 77.4  30.046 33.0127 37.6985 < 2.2e-16 ***
recipeA:Temp175  29.1333     2.0381 77.4  14.294 25.0753 33.1913 < 2.2e-16 ***
recipeB:Temp175  26.8667     2.0381 77.4  13.182 22.8087 30.9247 < 2.2e-16 ***
recipeC:Temp175  27.9333     2.0381 77.4  13.706 23.8753 31.9913 < 2.2e-16 ***
recipeA:Temp185  31.5333     2.0381 77.4  15.472 27.4753 35.5913 < 2.2e-16 ***
recipeB:Temp185  29.4000     2.0381 77.4  14.425 25.3420 33.4580 < 2.2e-16 ***
recipeC:Temp185  28.9333     2.0381 77.4  14.196 24.8753 32.9913 < 2.2e-16 ***
recipeA:Temp195  30.8000     2.0381 77.4  15.112 26.7420 34.8580 < 2.2e-16 ***
recipeB:Temp195  31.7333     2.0381 77.4  15.570 27.6753 35.7913 < 2.2e-16 ***
recipeC:Temp195  31.7333     2.0381 77.4  15.570 27.6753 35.7913 < 2.2e-16 ***
recipeA:Temp205  33.5333     2.0381 77.4  16.453 29.4753 37.5913 < 2.2e-16 ***
recipeB:Temp205  32.1333     2.0381 77.4  15.766 28.0753 36.1913 < 2.2e-16 ***
recipeC:Temp205  30.8667     2.0381 77.4  15.145 26.8087 34.9247 < 2.2e-16 ***
recipeA:Temp215  38.6667     2.0381 77.4  18.972 34.6087 42.7247 < 2.2e-16 ***
recipeB:Temp215  34.4667     2.0381 77.4  16.911 30.4087 38.5247 < 2.2e-16 ***
recipeC:Temp215  34.4000     2.0381 77.4  16.878 30.3420 38.4580 < 2.2e-16 ***
recipeA:Temp225  35.0667     2.0381 77.4  17.206 31.0087 39.1247 < 2.2e-16 ***
recipeB:Temp225  35.2667     2.0381 77.4  17.304 31.2087 39.3247 < 2.2e-16 ***
recipeC:Temp225  35.7333     2.0381 77.4  17.533 31.6753 39.7913 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> # Multi-frame plot of the LS-means
> plot(lsm)
> 
> # Compute list of 'single frame' plots:
> res <- plot(lsm, mult=FALSE)
> 
> # Display each plot separately:
> plot(res[[1]])
> plot(res[[2]])
> 
> # Example with pairwise differences of LS-means:
> (lsm <- ls_means(model, pairwise = TRUE))
Least Squares Means table:

                                     Estimate  Std. Error    df t value
recipeA - recipeB                  1.4778e+00  2.4563e+00  42.0  0.6016
recipeA - recipeC                  1.5222e+00  2.4563e+00  42.0  0.6197
recipeB - recipeC                  4.4444e-02  2.4563e+00  42.0  0.0181
Temp175 - Temp185                 -1.9778e+00  9.5384e-01 210.0 -2.0735
Temp175 - Temp195                 -3.4444e+00  9.5384e-01 210.0 -3.6111
Temp175 - Temp205                 -4.2000e+00  9.5384e-01 210.0 -4.4032
Temp175 - Temp215                 -7.8667e+00  9.5384e-01 210.0 -8.2473
Temp175 - Temp225                 -7.3778e+00  9.5384e-01 210.0 -7.7348
Temp185 - Temp195                 -1.4667e+00  9.5384e-01 210.0 -1.5376
Temp185 - Temp205                 -2.2222e+00  9.5384e-01 210.0 -2.3298
Temp185 - Temp215                 -5.8889e+00  9.5384e-01 210.0 -6.1739
Temp185 - Temp225                 -5.4000e+00  9.5384e-01 210.0 -5.6613
Temp195 - Temp205                 -7.5556e-01  9.5384e-01 210.0 -0.7921
Temp195 - Temp215                 -4.4222e+00  9.5384e-01 210.0 -4.6362
Temp195 - Temp225                 -3.9333e+00  9.5384e-01 210.0 -4.1237
Temp205 - Temp215                 -3.6667e+00  9.5384e-01 210.0 -3.8441
Temp205 - Temp225                 -3.1778e+00  9.5384e-01 210.0 -3.3315
Temp215 - Temp225                  4.8889e-01  9.5384e-01 210.0  0.5125
recipeA:Temp175 - recipeB:Temp175  2.2667e+00  2.8823e+00  77.4  0.7864
recipeA:Temp175 - recipeC:Temp175  1.2000e+00  2.8823e+00  77.4  0.4163
recipeA:Temp175 - recipeA:Temp185 -2.4000e+00  1.6521e+00 210.0 -1.4527
recipeA:Temp175 - recipeB:Temp185 -2.6667e-01  2.8823e+00  77.4 -0.0925
recipeA:Temp175 - recipeC:Temp185  2.0000e-01  2.8823e+00  77.4  0.0694
recipeA:Temp175 - recipeA:Temp195 -1.6667e+00  1.6521e+00 210.0 -1.0088
recipeA:Temp175 - recipeB:Temp195 -2.6000e+00  2.8823e+00  77.4 -0.9021
recipeA:Temp175 - recipeC:Temp195 -2.6000e+00  2.8823e+00  77.4 -0.9021
recipeA:Temp175 - recipeA:Temp205 -4.4000e+00  1.6521e+00 210.0 -2.6633
recipeA:Temp175 - recipeB:Temp205 -3.0000e+00  2.8823e+00  77.4 -1.0408
recipeA:Temp175 - recipeC:Temp205 -1.7333e+00  2.8823e+00  77.4 -0.6014
recipeA:Temp175 - recipeA:Temp215 -9.5333e+00  1.6521e+00 210.0 -5.7704
recipeA:Temp175 - recipeB:Temp215 -5.3333e+00  2.8823e+00  77.4 -1.8504
recipeA:Temp175 - recipeC:Temp215 -5.2667e+00  2.8823e+00  77.4 -1.8272
recipeA:Temp175 - recipeA:Temp225 -5.9333e+00  1.6521e+00 210.0 -3.5914
recipeA:Temp175 - recipeB:Temp225 -6.1333e+00  2.8823e+00  77.4 -2.1279
recipeA:Temp175 - recipeC:Temp225 -6.6000e+00  2.8823e+00  77.4 -2.2898
recipeB:Temp175 - recipeC:Temp175 -1.0667e+00  2.8823e+00  77.4 -0.3701
recipeB:Temp175 - recipeA:Temp185 -4.6667e+00  2.8823e+00  77.4 -1.6191
recipeB:Temp175 - recipeB:Temp185 -2.5333e+00  1.6521e+00 210.0 -1.5334
recipeB:Temp175 - recipeC:Temp185 -2.0667e+00  2.8823e+00  77.4 -0.7170
recipeB:Temp175 - recipeA:Temp195 -3.9333e+00  2.8823e+00  77.4 -1.3646
recipeB:Temp175 - recipeB:Temp195 -4.8667e+00  1.6521e+00 210.0 -2.9457
recipeB:Temp175 - recipeC:Temp195 -4.8667e+00  2.8823e+00  77.4 -1.6885
recipeB:Temp175 - recipeA:Temp205 -6.6667e+00  2.8823e+00  77.4 -2.3130
recipeB:Temp175 - recipeB:Temp205 -5.2667e+00  1.6521e+00 210.0 -3.1879
recipeB:Temp175 - recipeC:Temp205 -4.0000e+00  2.8823e+00  77.4 -1.3878
recipeB:Temp175 - recipeA:Temp215 -1.1800e+01  2.8823e+00  77.4 -4.0939
recipeB:Temp175 - recipeB:Temp215 -7.6000e+00  1.6521e+00 210.0 -4.6002
recipeB:Temp175 - recipeC:Temp215 -7.5333e+00  2.8823e+00  77.4 -2.6136
recipeB:Temp175 - recipeA:Temp225 -8.2000e+00  2.8823e+00  77.4 -2.8449
recipeB:Temp175 - recipeB:Temp225 -8.4000e+00  1.6521e+00 210.0 -5.0844
recipeB:Temp175 - recipeC:Temp225 -8.8667e+00  2.8823e+00  77.4 -3.0762
recipeC:Temp175 - recipeA:Temp185 -3.6000e+00  2.8823e+00  77.4 -1.2490
recipeC:Temp175 - recipeB:Temp185 -1.4667e+00  2.8823e+00  77.4 -0.5089
recipeC:Temp175 - recipeC:Temp185 -1.0000e+00  1.6521e+00 210.0 -0.6053
recipeC:Temp175 - recipeA:Temp195 -2.8667e+00  2.8823e+00  77.4 -0.9946
recipeC:Temp175 - recipeB:Temp195 -3.8000e+00  2.8823e+00  77.4 -1.3184
recipeC:Temp175 - recipeC:Temp195 -3.8000e+00  1.6521e+00 210.0 -2.3001
recipeC:Temp175 - recipeA:Temp205 -5.6000e+00  2.8823e+00  77.4 -1.9429
recipeC:Temp175 - recipeB:Temp205 -4.2000e+00  2.8823e+00  77.4 -1.4572
recipeC:Temp175 - recipeC:Temp205 -2.9333e+00  1.6521e+00 210.0 -1.7755
recipeC:Temp175 - recipeA:Temp215 -1.0733e+01  2.8823e+00  77.4 -3.7239
recipeC:Temp175 - recipeB:Temp215 -6.5333e+00  2.8823e+00  77.4 -2.2667
recipeC:Temp175 - recipeC:Temp215 -6.4667e+00  1.6521e+00 210.0 -3.9142
recipeC:Temp175 - recipeA:Temp225 -7.1333e+00  2.8823e+00  77.4 -2.4749
recipeC:Temp175 - recipeB:Temp225 -7.3333e+00  2.8823e+00  77.4 -2.5443
recipeC:Temp175 - recipeC:Temp225 -7.8000e+00  1.6521e+00 210.0 -4.7212
recipeA:Temp185 - recipeB:Temp185  2.1333e+00  2.8823e+00  77.4  0.7401
recipeA:Temp185 - recipeC:Temp185  2.6000e+00  2.8823e+00  77.4  0.9021
recipeA:Temp185 - recipeA:Temp195  7.3333e-01  1.6521e+00 210.0  0.4439
recipeA:Temp185 - recipeB:Temp195 -2.0000e-01  2.8823e+00  77.4 -0.0694
recipeA:Temp185 - recipeC:Temp195 -2.0000e-01  2.8823e+00  77.4 -0.0694
recipeA:Temp185 - recipeA:Temp205 -2.0000e+00  1.6521e+00 210.0 -1.2106
recipeA:Temp185 - recipeB:Temp205 -6.0000e-01  2.8823e+00  77.4 -0.2082
recipeA:Temp185 - recipeC:Temp205  6.6667e-01  2.8823e+00  77.4  0.2313
recipeA:Temp185 - recipeA:Temp215 -7.1333e+00  1.6521e+00 210.0 -4.3177
recipeA:Temp185 - recipeB:Temp215 -2.9333e+00  2.8823e+00  77.4 -1.0177
recipeA:Temp185 - recipeC:Temp215 -2.8667e+00  2.8823e+00  77.4 -0.9946
recipeA:Temp185 - recipeA:Temp225 -3.5333e+00  1.6521e+00 210.0 -2.1387
recipeA:Temp185 - recipeB:Temp225 -3.7333e+00  2.8823e+00  77.4 -1.2953
recipeA:Temp185 - recipeC:Temp225 -4.2000e+00  2.8823e+00  77.4 -1.4572
recipeB:Temp185 - recipeC:Temp185  4.6667e-01  2.8823e+00  77.4  0.1619
recipeB:Temp185 - recipeA:Temp195 -1.4000e+00  2.8823e+00  77.4 -0.4857
recipeB:Temp185 - recipeB:Temp195 -2.3333e+00  1.6521e+00 210.0 -1.4123
recipeB:Temp185 - recipeC:Temp195 -2.3333e+00  2.8823e+00  77.4 -0.8095
recipeB:Temp185 - recipeA:Temp205 -4.1333e+00  2.8823e+00  77.4 -1.4340
recipeB:Temp185 - recipeB:Temp205 -2.7333e+00  1.6521e+00 210.0 -1.6545
recipeB:Temp185 - recipeC:Temp205 -1.4667e+00  2.8823e+00  77.4 -0.5089
recipeB:Temp185 - recipeA:Temp215 -9.2667e+00  2.8823e+00  77.4 -3.2150
recipeB:Temp185 - recipeB:Temp215 -5.0667e+00  1.6521e+00 210.0 -3.0668
recipeB:Temp185 - recipeC:Temp215 -5.0000e+00  2.8823e+00  77.4 -1.7347
recipeB:Temp185 - recipeA:Temp225 -5.6667e+00  2.8823e+00  77.4 -1.9660
recipeB:Temp185 - recipeB:Temp225 -5.8667e+00  1.6521e+00 210.0 -3.5510
recipeB:Temp185 - recipeC:Temp225 -6.3333e+00  2.8823e+00  77.4 -2.1973
recipeC:Temp185 - recipeA:Temp195 -1.8667e+00  2.8823e+00  77.4 -0.6476
recipeC:Temp185 - recipeB:Temp195 -2.8000e+00  2.8823e+00  77.4 -0.9714
recipeC:Temp185 - recipeC:Temp195 -2.8000e+00  1.6521e+00 210.0 -1.6948
recipeC:Temp185 - recipeA:Temp205 -4.6000e+00  2.8823e+00  77.4 -1.5959
recipeC:Temp185 - recipeB:Temp205 -3.2000e+00  2.8823e+00  77.4 -1.1102
recipeC:Temp185 - recipeC:Temp205 -1.9333e+00  1.6521e+00 210.0 -1.1702
recipeC:Temp185 - recipeA:Temp215 -9.7333e+00  2.8823e+00  77.4 -3.3769
recipeC:Temp185 - recipeB:Temp215 -5.5333e+00  2.8823e+00  77.4 -1.9198
recipeC:Temp185 - recipeC:Temp215 -5.4667e+00  1.6521e+00 210.0 -3.3089
recipeC:Temp185 - recipeA:Temp225 -6.1333e+00  2.8823e+00  77.4 -2.1279
recipeC:Temp185 - recipeB:Temp225 -6.3333e+00  2.8823e+00  77.4 -2.1973
recipeC:Temp185 - recipeC:Temp225 -6.8000e+00  1.6521e+00 210.0 -4.1160
recipeA:Temp195 - recipeB:Temp195 -9.3333e-01  2.8823e+00  77.4 -0.3238
recipeA:Temp195 - recipeC:Temp195 -9.3333e-01  2.8823e+00  77.4 -0.3238
recipeA:Temp195 - recipeA:Temp205 -2.7333e+00  1.6521e+00 210.0 -1.6545
recipeA:Temp195 - recipeB:Temp205 -1.3333e+00  2.8823e+00  77.4 -0.4626
recipeA:Temp195 - recipeC:Temp205 -6.6667e-02  2.8823e+00  77.4 -0.0231
recipeA:Temp195 - recipeA:Temp215 -7.8667e+00  1.6521e+00 210.0 -4.7616
recipeA:Temp195 - recipeB:Temp215 -3.6667e+00  2.8823e+00  77.4 -1.2721
recipeA:Temp195 - recipeC:Temp215 -3.6000e+00  2.8823e+00  77.4 -1.2490
recipeA:Temp195 - recipeA:Temp225 -4.2667e+00  1.6521e+00 210.0 -2.5826
recipeA:Temp195 - recipeB:Temp225 -4.4667e+00  2.8823e+00  77.4 -1.5497
recipeA:Temp195 - recipeC:Temp225 -4.9333e+00  2.8823e+00  77.4 -1.7116
recipeB:Temp195 - recipeC:Temp195 -6.7724e-14  2.8823e+00  77.4  0.0000
recipeB:Temp195 - recipeA:Temp205 -1.8000e+00  2.8823e+00  77.4 -0.6245
recipeB:Temp195 - recipeB:Temp205 -4.0000e-01  1.6521e+00 210.0 -0.2421
recipeB:Temp195 - recipeC:Temp205  8.6667e-01  2.8823e+00  77.4  0.3007
recipeB:Temp195 - recipeA:Temp215 -6.9333e+00  2.8823e+00  77.4 -2.4055
recipeB:Temp195 - recipeB:Temp215 -2.7333e+00  1.6521e+00 210.0 -1.6545
recipeB:Temp195 - recipeC:Temp215 -2.6667e+00  2.8823e+00  77.4 -0.9252
recipeB:Temp195 - recipeA:Temp225 -3.3333e+00  2.8823e+00  77.4 -1.1565
recipeB:Temp195 - recipeB:Temp225 -3.5333e+00  1.6521e+00 210.0 -2.1387
recipeB:Temp195 - recipeC:Temp225 -4.0000e+00  2.8823e+00  77.4 -1.3878
recipeC:Temp195 - recipeA:Temp205 -1.8000e+00  2.8823e+00  77.4 -0.6245
recipeC:Temp195 - recipeB:Temp205 -4.0000e-01  2.8823e+00  77.4 -0.1388
recipeC:Temp195 - recipeC:Temp205  8.6667e-01  1.6521e+00 210.0  0.5246
recipeC:Temp195 - recipeA:Temp215 -6.9333e+00  2.8823e+00  77.4 -2.4055
recipeC:Temp195 - recipeB:Temp215 -2.7333e+00  2.8823e+00  77.4 -0.9483
recipeC:Temp195 - recipeC:Temp215 -2.6667e+00  1.6521e+00 210.0 -1.6141
recipeC:Temp195 - recipeA:Temp225 -3.3333e+00  2.8823e+00  77.4 -1.1565
recipeC:Temp195 - recipeB:Temp225 -3.5333e+00  2.8823e+00  77.4 -1.2259
recipeC:Temp195 - recipeC:Temp225 -4.0000e+00  1.6521e+00 210.0 -2.4212
recipeA:Temp205 - recipeB:Temp205  1.4000e+00  2.8823e+00  77.4  0.4857
recipeA:Temp205 - recipeC:Temp205  2.6667e+00  2.8823e+00  77.4  0.9252
recipeA:Temp205 - recipeA:Temp215 -5.1333e+00  1.6521e+00 210.0 -3.1071
recipeA:Temp205 - recipeB:Temp215 -9.3333e-01  2.8823e+00  77.4 -0.3238
recipeA:Temp205 - recipeC:Temp215 -8.6667e-01  2.8823e+00  77.4 -0.3007
recipeA:Temp205 - recipeA:Temp225 -1.5333e+00  1.6521e+00 210.0 -0.9281
recipeA:Temp205 - recipeB:Temp225 -1.7333e+00  2.8823e+00  77.4 -0.6014
recipeA:Temp205 - recipeC:Temp225 -2.2000e+00  2.8823e+00  77.4 -0.7633
recipeB:Temp205 - recipeC:Temp205  1.2667e+00  2.8823e+00  77.4  0.4395
recipeB:Temp205 - recipeA:Temp215 -6.5333e+00  2.8823e+00  77.4 -2.2667
recipeB:Temp205 - recipeB:Temp215 -2.3333e+00  1.6521e+00 210.0 -1.4123
recipeB:Temp205 - recipeC:Temp215 -2.2667e+00  2.8823e+00  77.4 -0.7864
recipeB:Temp205 - recipeA:Temp225 -2.9333e+00  2.8823e+00  77.4 -1.0177
recipeB:Temp205 - recipeB:Temp225 -3.1333e+00  1.6521e+00 210.0 -1.8966
recipeB:Temp205 - recipeC:Temp225 -3.6000e+00  2.8823e+00  77.4 -1.2490
recipeC:Temp205 - recipeA:Temp215 -7.8000e+00  2.8823e+00  77.4 -2.7062
recipeC:Temp205 - recipeB:Temp215 -3.6000e+00  2.8823e+00  77.4 -1.2490
recipeC:Temp205 - recipeC:Temp215 -3.5333e+00  1.6521e+00 210.0 -2.1387
recipeC:Temp205 - recipeA:Temp225 -4.2000e+00  2.8823e+00  77.4 -1.4572
recipeC:Temp205 - recipeB:Temp225 -4.4000e+00  2.8823e+00  77.4 -1.5266
recipeC:Temp205 - recipeC:Temp225 -4.8667e+00  1.6521e+00 210.0 -2.9457
recipeA:Temp215 - recipeB:Temp215  4.2000e+00  2.8823e+00  77.4  1.4572
recipeA:Temp215 - recipeC:Temp215  4.2667e+00  2.8823e+00  77.4  1.4803
recipeA:Temp215 - recipeA:Temp225  3.6000e+00  1.6521e+00 210.0  2.1790
recipeA:Temp215 - recipeB:Temp225  3.4000e+00  2.8823e+00  77.4  1.1796
recipeA:Temp215 - recipeC:Temp225  2.9333e+00  2.8823e+00  77.4  1.0177
recipeB:Temp215 - recipeC:Temp215  6.6667e-02  2.8823e+00  77.4  0.0231
recipeB:Temp215 - recipeA:Temp225 -6.0000e-01  2.8823e+00  77.4 -0.2082
recipeB:Temp215 - recipeB:Temp225 -8.0000e-01  1.6521e+00 210.0 -0.4842
recipeB:Temp215 - recipeC:Temp225 -1.2667e+00  2.8823e+00  77.4 -0.4395
recipeC:Temp215 - recipeA:Temp225 -6.6667e-01  2.8823e+00  77.4 -0.2313
recipeC:Temp215 - recipeB:Temp225 -8.6667e-01  2.8823e+00  77.4 -0.3007
recipeC:Temp215 - recipeC:Temp225 -1.3333e+00  1.6521e+00 210.0 -0.8071
recipeA:Temp225 - recipeB:Temp225 -2.0000e-01  2.8823e+00  77.4 -0.0694
recipeA:Temp225 - recipeC:Temp225 -6.6667e-01  2.8823e+00  77.4 -0.2313
recipeB:Temp225 - recipeC:Temp225 -4.6667e-01  2.8823e+00  77.4 -0.1619
                                        lower       upper  Pr(>|t|)    
recipeA - recipeB                 -3.4791e+00  6.4347e+00 0.5506484    
recipeA - recipeC                 -3.4347e+00  6.4791e+00 0.5387812    
recipeB - recipeC                 -4.9125e+00  5.0014e+00 0.9856492    
Temp175 - Temp185                 -3.8581e+00 -9.7442e-02 0.0393474 *  
Temp175 - Temp195                 -5.3248e+00 -1.5641e+00 0.0003814 ***
Temp175 - Temp205                 -6.0803e+00 -2.3197e+00 1.698e-05 ***
Temp175 - Temp215                 -9.7470e+00 -5.9863e+00 1.759e-14 ***
Temp175 - Temp225                 -9.2581e+00 -5.4974e+00 4.261e-13 ***
Temp185 - Temp195                 -3.3470e+00  4.1367e-01 0.1256424    
Temp185 - Temp205                 -4.1026e+00 -3.4189e-01 0.0207689 *  
Temp185 - Temp215                 -7.7692e+00 -4.0086e+00 3.393e-09 ***
Temp185 - Temp225                 -7.2803e+00 -3.5197e+00 4.895e-08 ***
Temp195 - Temp205                 -2.6359e+00  1.1248e+00 0.4291865    
Temp195 - Temp215                 -6.3026e+00 -2.5419e+00 6.231e-06 ***
Temp195 - Temp225                 -5.8137e+00 -2.0530e+00 5.371e-05 ***
Temp205 - Temp215                 -5.5470e+00 -1.7863e+00 0.0001604 ***
Temp205 - Temp225                 -5.0581e+00 -1.2974e+00 0.0010204 ** 
Temp215 - Temp225                 -1.3914e+00  2.3692e+00 0.6088075    
recipeA:Temp175 - recipeB:Temp175 -3.4722e+00  8.0056e+00 0.4340299    
recipeA:Temp175 - recipeC:Temp175 -4.5389e+00  6.9389e+00 0.6783185    
recipeA:Temp175 - recipeA:Temp185 -5.6568e+00  8.5684e-01 0.1478020    
recipeA:Temp175 - recipeB:Temp185 -6.0056e+00  5.4722e+00 0.9265252    
recipeA:Temp175 - recipeC:Temp185 -5.5389e+00  5.9389e+00 0.9448591    
recipeA:Temp175 - recipeA:Temp195 -4.9235e+00  1.5902e+00 0.3142250    
recipeA:Temp175 - recipeB:Temp195 -8.3389e+00  3.1389e+00 0.3698257    
recipeA:Temp175 - recipeC:Temp195 -8.3389e+00  3.1389e+00 0.3698257    
recipeA:Temp175 - recipeA:Temp205 -7.6568e+00 -1.1432e+00 0.0083385 ** 
recipeA:Temp175 - recipeB:Temp205 -8.7389e+00  2.7389e+00 0.3011928    
recipeA:Temp175 - recipeC:Temp205 -7.4722e+00  4.0056e+00 0.5493507    
recipeA:Temp175 - recipeA:Temp215 -1.2790e+01 -6.2765e+00 2.810e-08 ***
recipeA:Temp175 - recipeB:Temp215 -1.1072e+01  4.0557e-01 0.0680750 .  
recipeA:Temp175 - recipeC:Temp215 -1.1006e+01  4.7223e-01 0.0715170 .  
recipeA:Temp175 - recipeA:Temp225 -9.1902e+00 -2.6765e+00 0.0004096 ***
recipeA:Temp175 - recipeB:Temp225 -1.1872e+01 -3.9443e-01 0.0365251 *  
recipeA:Temp175 - recipeC:Temp225 -1.2339e+01 -8.6110e-01 0.0247549 *  
recipeB:Temp175 - recipeC:Temp175 -6.8056e+00  4.6722e+00 0.7123382    
recipeB:Temp175 - recipeA:Temp185 -1.0406e+01  1.0722e+00 0.1094981    
recipeB:Temp175 - recipeB:Temp185 -5.7902e+00  7.2350e-01 0.1266833    
recipeB:Temp175 - recipeC:Temp185 -7.8056e+00  3.6722e+00 0.4755209    
recipeB:Temp175 - recipeA:Temp195 -9.6722e+00  1.8056e+00 0.1763171    
recipeB:Temp175 - recipeB:Temp195 -8.1235e+00 -1.6098e+00 0.0035854 ** 
recipeB:Temp175 - recipeC:Temp195 -1.0606e+01  8.7223e-01 0.0953466 .  
recipeB:Temp175 - recipeA:Temp205 -1.2406e+01 -9.2777e-01 0.0233811 *  
recipeB:Temp175 - recipeB:Temp205 -8.5235e+00 -2.0098e+00 0.0016522 ** 
recipeB:Temp175 - recipeC:Temp205 -9.7389e+00  1.7389e+00 0.1691861    
recipeB:Temp175 - recipeA:Temp215 -1.7539e+01 -6.0611e+00 0.0001033 ***
recipeB:Temp175 - recipeB:Temp215 -1.0857e+01 -4.3432e+00 7.294e-06 ***
recipeB:Temp175 - recipeC:Temp215 -1.3272e+01 -1.7944e+00 0.0107595 *  
recipeB:Temp175 - recipeA:Temp225 -1.3939e+01 -2.4611e+00 0.0056807 ** 
recipeB:Temp175 - recipeB:Temp225 -1.1657e+01 -5.1432e+00 8.149e-07 ***
recipeB:Temp175 - recipeC:Temp225 -1.4606e+01 -3.1278e+00 0.0028970 ** 
recipeC:Temp175 - recipeA:Temp185 -9.3389e+00  2.1389e+00 0.2154286    
recipeC:Temp175 - recipeB:Temp185 -7.2056e+00  4.2722e+00 0.6123037    
recipeC:Temp175 - recipeC:Temp185 -4.2568e+00  2.2568e+00 0.5456411    
recipeC:Temp175 - recipeA:Temp195 -8.6056e+00  2.8722e+00 0.3230423    
recipeC:Temp175 - recipeB:Temp195 -9.5389e+00  1.9389e+00 0.1912608    
recipeC:Temp175 - recipeC:Temp195 -7.0568e+00 -5.4316e-01 0.0224251 *  
recipeC:Temp175 - recipeA:Temp205 -1.1339e+01  1.3890e-01 0.0556650 .  
recipeC:Temp175 - recipeB:Temp205 -9.9389e+00  1.5389e+00 0.1491146    
recipeC:Temp175 - recipeC:Temp205 -6.1902e+00  3.2350e-01 0.0772617 .  
recipeC:Temp175 - recipeA:Temp215 -1.6472e+01 -4.9944e+00 0.0003705 ***
recipeC:Temp175 - recipeB:Temp215 -1.2272e+01 -7.9443e-01 0.0261994 *  
recipeC:Temp175 - recipeC:Temp215 -9.7235e+00 -3.2098e+00 0.0001226 ***
recipeC:Temp175 - recipeA:Temp225 -1.2872e+01 -1.3944e+00 0.0155144 *  
recipeC:Temp175 - recipeB:Temp225 -1.3072e+01 -1.5944e+00 0.0129413 *  
recipeC:Temp175 - recipeC:Temp225 -1.1057e+01 -4.5432e+00 4.281e-06 ***
recipeA:Temp185 - recipeB:Temp185 -3.6056e+00  7.8722e+00 0.4614493    
recipeA:Temp185 - recipeC:Temp185 -3.1389e+00  8.3389e+00 0.3698257    
recipeA:Temp185 - recipeA:Temp195 -2.5235e+00  3.9902e+00 0.6575878    
recipeA:Temp185 - recipeB:Temp195 -5.9389e+00  5.5389e+00 0.9448591    
recipeA:Temp185 - recipeC:Temp195 -5.9389e+00  5.5389e+00 0.9448591    
recipeA:Temp185 - recipeA:Temp205 -5.2568e+00  1.2568e+00 0.2274186    
recipeA:Temp185 - recipeB:Temp205 -6.3389e+00  5.1389e+00 0.8356457    
recipeA:Temp185 - recipeC:Temp205 -5.0722e+00  6.4056e+00 0.8176951    
recipeA:Temp185 - recipeA:Temp215 -1.0390e+01 -3.8765e+00 2.429e-05 ***
recipeA:Temp185 - recipeB:Temp215 -8.6722e+00  2.8056e+00 0.3119890    
recipeA:Temp185 - recipeC:Temp215 -8.6056e+00  2.8722e+00 0.3230423    
recipeA:Temp185 - recipeA:Temp225 -6.7902e+00 -2.7650e-01 0.0336160 *  
recipeA:Temp185 - recipeB:Temp225 -9.4722e+00  2.0056e+00 0.1990801    
recipeA:Temp185 - recipeC:Temp225 -9.9389e+00  1.5389e+00 0.1491146    
recipeB:Temp185 - recipeC:Temp185 -5.2722e+00  6.2056e+00 0.8718008    
recipeB:Temp185 - recipeA:Temp195 -7.1389e+00  4.3389e+00 0.6285365    
recipeB:Temp185 - recipeB:Temp195 -5.5902e+00  9.2350e-01 0.1593304    
recipeB:Temp185 - recipeC:Temp195 -8.0722e+00  3.4056e+00 0.4206879    
recipeB:Temp185 - recipeA:Temp205 -9.8722e+00  1.6056e+00 0.1555885    
recipeB:Temp185 - recipeB:Temp205 -5.9902e+00  5.2350e-01 0.0995291 .  
recipeB:Temp185 - recipeC:Temp205 -7.2056e+00  4.2722e+00 0.6123037    
recipeB:Temp185 - recipeA:Temp215 -1.5006e+01 -3.5278e+00 0.0019033 ** 
recipeB:Temp185 - recipeB:Temp215 -8.3235e+00 -1.8098e+00 0.0024482 ** 
recipeB:Temp185 - recipeC:Temp215 -1.0739e+01  7.3890e-01 0.0867695 .  
recipeB:Temp185 - recipeA:Temp225 -1.1406e+01  7.2234e-02 0.0528814 .  
recipeB:Temp185 - recipeB:Temp225 -9.1235e+00 -2.6098e+00 0.0004736 ***
recipeB:Temp185 - recipeC:Temp225 -1.2072e+01 -5.9443e-01 0.0309878 *  
recipeC:Temp185 - recipeA:Temp195 -7.6056e+00  3.8722e+00 0.5191410    
recipeC:Temp185 - recipeB:Temp195 -8.5389e+00  2.9389e+00 0.3343528    
recipeC:Temp185 - recipeC:Temp195 -6.0568e+00  4.5684e-01 0.0915944 .  
recipeC:Temp185 - recipeA:Temp205 -1.0339e+01  1.1389e+00 0.1145753    
recipeC:Temp185 - recipeB:Temp205 -8.9389e+00  2.5389e+00 0.2703400    
recipeC:Temp185 - recipeC:Temp205 -5.1902e+00  1.3235e+00 0.2432373    
recipeC:Temp185 - recipeA:Temp215 -1.5472e+01 -3.9944e+00 0.0011491 ** 
recipeC:Temp185 - recipeB:Temp215 -1.1272e+01  2.0557e-01 0.0585721 .  
recipeC:Temp185 - recipeC:Temp215 -8.7235e+00 -2.2098e+00 0.0011021 ** 
recipeC:Temp185 - recipeA:Temp225 -1.1872e+01 -3.9443e-01 0.0365251 *  
recipeC:Temp185 - recipeB:Temp225 -1.2072e+01 -5.9443e-01 0.0309878 *  
recipeC:Temp185 - recipeC:Temp225 -1.0057e+01 -3.5432e+00 5.539e-05 ***
recipeA:Temp195 - recipeB:Temp195 -6.6722e+00  4.8056e+00 0.7469518    
recipeA:Temp195 - recipeC:Temp195 -6.6722e+00  4.8056e+00 0.7469518    
recipeA:Temp195 - recipeA:Temp205 -5.9902e+00  5.2350e-01 0.0995291 .  
recipeA:Temp195 - recipeB:Temp205 -7.0722e+00  4.4056e+00 0.6449544    
recipeA:Temp195 - recipeC:Temp205 -5.8056e+00  5.6722e+00 0.9816064    
recipeA:Temp195 - recipeA:Temp215 -1.1124e+01 -4.6098e+00 3.576e-06 ***
recipeA:Temp195 - recipeB:Temp215 -9.4056e+00  2.0722e+00 0.2071350    
recipeA:Temp195 - recipeC:Temp215 -9.3389e+00  2.1389e+00 0.2154286    
recipeA:Temp195 - recipeA:Temp225 -7.5235e+00 -1.0098e+00 0.0104865 *  
recipeA:Temp195 - recipeB:Temp225 -1.0206e+01  1.2722e+00 0.1252955    
recipeA:Temp195 - recipeC:Temp225 -1.0672e+01  8.0557e-01 0.0909752 .  
recipeB:Temp195 - recipeC:Temp195 -5.7389e+00  5.7389e+00 1.0000000    
recipeB:Temp195 - recipeA:Temp205 -7.5389e+00  3.9389e+00 0.5341359    
recipeB:Temp195 - recipeB:Temp205 -3.6568e+00  2.8568e+00 0.8089271    
recipeB:Temp195 - recipeC:Temp205 -4.8722e+00  6.6056e+00 0.7644609    
recipeB:Temp195 - recipeA:Temp215 -1.2672e+01 -1.1944e+00 0.0185375 *  
recipeB:Temp195 - recipeB:Temp215 -5.9902e+00  5.2350e-01 0.0995291 .  
recipeB:Temp195 - recipeC:Temp215 -8.4056e+00  3.0722e+00 0.3577450    
recipeB:Temp195 - recipeA:Temp225 -9.0722e+00  2.4056e+00 0.2510407    
recipeB:Temp195 - recipeB:Temp225 -6.7902e+00 -2.7650e-01 0.0336160 *  
recipeB:Temp195 - recipeC:Temp225 -9.7389e+00  1.7389e+00 0.1691861    
recipeC:Temp195 - recipeA:Temp205 -7.5389e+00  3.9389e+00 0.5341359    
recipeC:Temp195 - recipeB:Temp205 -6.1389e+00  5.3389e+00 0.8899863    
recipeC:Temp195 - recipeC:Temp205 -2.3902e+00  4.1235e+00 0.6004264    
recipeC:Temp195 - recipeA:Temp215 -1.2672e+01 -1.1944e+00 0.0185375 *  
recipeC:Temp195 - recipeB:Temp215 -8.4722e+00  3.0056e+00 0.3459204    
recipeC:Temp195 - recipeC:Temp215 -5.9235e+00  5.9017e-01 0.1080069    
recipeC:Temp195 - recipeA:Temp225 -9.0722e+00  2.4056e+00 0.2510407    
recipeC:Temp195 - recipeB:Temp225 -9.2722e+00  2.2056e+00 0.2239636    
recipeC:Temp195 - recipeC:Temp225 -7.2568e+00 -7.4316e-01 0.0163212 *  
recipeA:Temp205 - recipeB:Temp205 -4.3389e+00  7.1389e+00 0.6285365    
recipeA:Temp205 - recipeC:Temp205 -3.0722e+00  8.4056e+00 0.3577450    
recipeA:Temp205 - recipeA:Temp215 -8.3902e+00 -1.8765e+00 0.0021502 ** 
recipeA:Temp205 - recipeB:Temp215 -6.6722e+00  4.8056e+00 0.7469518    
recipeA:Temp205 - recipeC:Temp215 -6.6056e+00  4.8722e+00 0.7644609    
recipeA:Temp205 - recipeA:Temp225 -4.7902e+00  1.7235e+00 0.3544168    
recipeA:Temp205 - recipeB:Temp225 -7.4722e+00  4.0056e+00 0.5493507    
recipeA:Temp205 - recipeC:Temp225 -7.9389e+00  3.5389e+00 0.4476180    
recipeB:Temp205 - recipeC:Temp205 -4.4722e+00  7.0056e+00 0.6615508    
recipeB:Temp205 - recipeA:Temp215 -1.2272e+01 -7.9443e-01 0.0261994 *  
recipeB:Temp205 - recipeB:Temp215 -5.5902e+00  9.2350e-01 0.1593304    
recipeB:Temp205 - recipeC:Temp215 -8.0056e+00  3.4722e+00 0.4340299    
recipeB:Temp205 - recipeA:Temp225 -8.6722e+00  2.8056e+00 0.3119890    
recipeB:Temp205 - recipeB:Temp225 -6.3902e+00  1.2350e-01 0.0592574 .  
recipeB:Temp205 - recipeC:Temp225 -9.3389e+00  2.1389e+00 0.2154286    
recipeC:Temp205 - recipeA:Temp215 -1.3539e+01 -2.0611e+00 0.0083692 ** 
recipeC:Temp205 - recipeB:Temp215 -9.3389e+00  2.1389e+00 0.2154286    
recipeC:Temp205 - recipeC:Temp215 -6.7902e+00 -2.7650e-01 0.0336160 *  
recipeC:Temp205 - recipeA:Temp225 -9.9389e+00  1.5389e+00 0.1491146    
recipeC:Temp205 - recipeB:Temp225 -1.0139e+01  1.3389e+00 0.1309468    
recipeC:Temp205 - recipeC:Temp225 -8.1235e+00 -1.6098e+00 0.0035854 ** 
recipeA:Temp215 - recipeB:Temp215 -1.5389e+00  9.9389e+00 0.1491146    
recipeA:Temp215 - recipeC:Temp215 -1.4722e+00  1.0006e+01 0.1428523    
recipeA:Temp215 - recipeA:Temp225  3.4316e-01  6.8568e+00 0.0304417 *  
recipeA:Temp215 - recipeB:Temp225 -2.3389e+00  9.1389e+00 0.2417673    
recipeA:Temp215 - recipeC:Temp225 -2.8056e+00  8.6722e+00 0.3119890    
recipeB:Temp215 - recipeC:Temp215 -5.6722e+00  5.8056e+00 0.9816064    
recipeB:Temp215 - recipeA:Temp225 -6.3389e+00  5.1389e+00 0.8356457    
recipeB:Temp215 - recipeB:Temp225 -4.0568e+00  2.4568e+00 0.6287269    
recipeB:Temp215 - recipeC:Temp225 -7.0056e+00  4.4722e+00 0.6615508    
recipeC:Temp215 - recipeA:Temp225 -6.4056e+00  5.0722e+00 0.8176951    
recipeC:Temp215 - recipeB:Temp225 -6.6056e+00  4.8722e+00 0.7644609    
recipeC:Temp215 - recipeC:Temp225 -4.5902e+00  1.9235e+00 0.4205503    
recipeA:Temp225 - recipeB:Temp225 -5.9389e+00  5.5389e+00 0.9448591    
recipeA:Temp225 - recipeC:Temp225 -6.4056e+00  5.0722e+00 0.8176951    
recipeB:Temp225 - recipeC:Temp225 -6.2056e+00  5.2722e+00 0.8718008    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> plot(lsm, which="Temp")
> 
> 
> 
> 
> cleanEx()
> nameEx("plot.step_list")
> ### * plot.step_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.step_list
> ### Title: Plot LS-means for Backward Reduced Model
> ### Aliases: plot.step_list
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D # Fit example model:
> ##D tv <- lmer(Sharpnessofmovement ~ TVset * Picture +
> ##D              (1 | Assessor:TVset) + (1 | Assessor:Picture) +
> ##D              (1 | Assessor:Picture:TVset) + (1 | Repeat) + (1 | Repeat:Picture) +
> ##D              (1 | Repeat:TVset) + (1 | Repeat:TVset:Picture) + (1 | Assessor),
> ##D            data = TVbo)
> ##D 
> ##D # Backward reduce the model:
> ##D (st <- step(tv)) # takes ~10 sec to run
> ##D 
> ##D # Pairwise comparisons of LS-means for Picture and TVset:
> ##D   plot(st, which=c("Picture", "TVset"), pairwise = TRUE)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("ranova")
> ### * ranova
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ranova
> ### Title: ANOVA-Like Table for Random-Effects
> ### Aliases: ranova rand
> 
> ### ** Examples
> 
> 
> # Test reduction of (Days | Subject) to (1 | Subject):
> fm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
> ranova(fm1) # 2 df test
ANOVA-like table for random-effects: Single term deletions

Model:
Reaction ~ Days + (Days | Subject)
                         npar  logLik    AIC    LRT Df Pr(>Chisq)    
<none>                      6 -871.81 1755.6                         
Days in (Days | Subject)    4 -893.23 1794.5 42.837  2   4.99e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # This test can also be achieved with anova():
> fm2 <- lmer(Reaction ~ Days + (1|Subject), sleepstudy)
> anova(fm1, fm2, refit=FALSE)
Data: sleepstudy
Models:
fm2: Reaction ~ Days + (1 | Subject)
fm1: Reaction ~ Days + (Days | Subject)
    npar    AIC    BIC  logLik -2*log(L)  Chisq Df Pr(>Chisq)    
fm2    4 1794.5 1807.2 -893.23    1786.5                         
fm1    6 1755.6 1774.8 -871.81    1743.6 42.837  2   4.99e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # Illustrate reduce.test argument:
> # Test removal of (Days | Subject):
> ranova(fm1, reduce.terms = FALSE) # 3 df test
ANOVA-like table for random-effects: Single term deletions

Model:
Reaction ~ Days + (Days | Subject)
                 npar  logLik    AIC    LRT Df Pr(>Chisq)    
<none>              6 -871.81 1755.6                         
(Days | Subject)    3 -946.83 1899.7 150.03  3  < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # The likelihood ratio test statistic is in this case:
> fm3 <- lm(Reaction ~ Days, sleepstudy)
> 2*c(logLik(fm1, REML=TRUE) - logLik(fm3, REML=TRUE)) # LRT
[1] 150.0354
> 
> # anova() is not always able to perform the same tests as ranova(),
> # for example:
> anova(fm1, fm3, refit=FALSE) # compares REML with ML and should not be used
Warning in anova.merMod(fm1, fm3, refit = FALSE) :
  some models fit with REML = TRUE, some not
Data: sleepstudy
Models:
fm3: Reaction ~ Days
fm1: Reaction ~ Days + (Days | Subject)
    npar    AIC    BIC  logLik -2*log(L)  Chisq Df Pr(>Chisq)    
fm3    3 1906.3 1915.9 -950.15    1900.3                         
fm1    6 1755.6 1774.8 -871.81    1743.6 156.66  3  < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(fm1, fm3, refit=TRUE) # is a test of ML fits and not what we seek
refitting model(s) with ML (instead of REML)
Data: sleepstudy
Models:
fm3: Reaction ~ Days
fm1: Reaction ~ Days + (Days | Subject)
    npar    AIC    BIC  logLik -2*log(L)  Chisq Df Pr(>Chisq)    
fm3    3 1906.3 1915.9 -950.15    1900.3                         
fm1    6 1763.9 1783.1 -875.97    1751.9 148.35  3  < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # Also note that the lmer-fit needs to come first - not an lm-fit:
> # anova(fm3, fm1) # does not work and gives an error
> 
> # ranova() may not generate all relevant test:
> # For the following model ranova() indicates that we should not reduce
> # (TVset | Assessor):
> fm <- lmer(Coloursaturation ~ TVset * Picture + (TVset | Assessor), data=TVbo)
> ranova(fm)
ANOVA-like table for random-effects: Single term deletions

Model:
Coloursaturation ~ TVset + Picture + (TVset | Assessor) + TVset:Picture
                            npar  logLik    AIC    LRT Df Pr(>Chisq)    
<none>                        19 -280.09 598.17                         
TVset in (TVset | Assessor)   14 -302.61 633.22 45.048  5  1.418e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> # However, a more appropriate model is:
> fm2 <- lmer(Coloursaturation ~ TVset * Picture + (1 | TVset:Assessor), data=TVbo)
> anova(fm, fm2, refit=FALSE)
Data: TVbo
Models:
fm2: Coloursaturation ~ TVset * Picture + (1 | TVset:Assessor)
fm: Coloursaturation ~ TVset * Picture + (TVset | Assessor)
    npar    AIC    BIC  logLik -2*log(L)  Chisq Df Pr(>Chisq)
fm2   14 588.53 634.14 -280.27    560.53                     
fm    19 598.17 660.06 -280.09    560.17 0.3613  5     0.9963
> # fm and fm2 has essentially the same fit to data but fm uses 5 parameters
> # more than fm.
> 
> 
> 
> 
> cleanEx()
> nameEx("show_tests.anova")
> ### * show_tests.anova
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: show_tests.anova
> ### Title: Show Hypothesis Tests in ANOVA Tables
> ### Aliases: show_tests.anova
> 
> ### ** Examples
> 
> 
> # Fit basic model to the 'cake' data:
> data("cake", package="lme4")
> fm1 <- lmer(angle ~ recipe * temp + (1|recipe:replicate), cake)
> 
> # Type 3 anova table:
> (an <- anova(fm1, type="3"))
Type III Analysis of Variance Table with Satterthwaite's method
             Sum Sq Mean Sq NumDF  DenDF F value Pr(>F)    
recipe         4.00    2.00     2 254.02  0.0957 0.9088    
temp        1966.71 1966.71     1 222.00 94.1632 <2e-16 ***
recipe:temp    1.74    0.87     2 222.00  0.0417 0.9592    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> # Display tests/hypotheses for type 1, 2, and 3 ANOVA tables:
> # (and illustrate effects of 'fractions' and 'names' arguments)
> show_tests(anova(fm1, type="1"))
$recipe
        (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeB           0       1    -0.5    0          200         -100
recipeC           0       0     1.0    0            0          200

$temp
     (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
temp           0       0       0    1    0.3333333    0.3333333

$`recipe:temp`
             (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeB:temp           0       0       0    0            1         -0.5
recipeC:temp           0       0       0    0            0          1.0

> show_tests(anova(fm1, type="2"), fractions=TRUE, names=FALSE)
$recipe
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] 0    1    0    0    0    0   
[2,] 0    0    1    0    0    0   

$temp
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]   0    0    0    1  1/3  1/3 

$`recipe:temp`
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] 0    0    0    0    1    0   
[2,] 0    0    0    0    0    1   

> show_tests(an, fractions=TRUE)
$recipe
        (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeB 0           1       0       0    0            0           
recipeC 0           0       1       0    0            0           

$temp
     (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
temp   0           0       0       1  1/3          1/3         

$`recipe:temp`
             (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeB:temp 0           0       0       0    1            0           
recipeC:temp 0           0       0       0    0            1           

> 
> 
> 
> 
> cleanEx()
> nameEx("show_tests.ls_means")
> ### * show_tests.ls_means
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: show_tests.ls_means
> ### Title: Show LS-means Hypothesis Tests and Contrasts
> ### Aliases: show_tests.ls_means
> 
> ### ** Examples
> 
> 
> data("cake", package="lme4")
> model <- lmer(angle ~ recipe * temp + (1|recipe:replicate), cake)
> 
> # LS-means:
> (lsm <- ls_means(model))
Least Squares Means table:

        Estimate Std. Error df t value   lower   upper  Pr(>|t|)    
recipeA  33.1222     1.7368 42  19.070 29.6172 36.6273 < 2.2e-16 ***
recipeB  31.6444     1.7368 42  18.220 28.1394 35.1495 < 2.2e-16 ***
recipeC  31.6000     1.7368 42  18.194 28.0949 35.1051 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

  Confidence level: 95%
  Degrees of freedom method: Satterthwaite 
> 
> # Contrasts for LS-means estimates and hypothesis tests:
> show_tests(lsm)
$recipe
        (Intercept) recipeB recipeC temp recipeB:temp recipeC:temp
recipeA           1       0       0  200            0            0
recipeB           1       1       0  200          200            0
recipeC           1       0       1  200            0          200

> 
> 
> 
> 
> cleanEx()
> nameEx("step.lmerModLmerTest")
> ### * step.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: step.lmerModLmerTest
> ### Title: Backward Elimination for Linear Mixed Models
> ### Aliases: step.lmerModLmerTest get_model.step_list
> 
> ### ** Examples
> 
> 
> # Fit a model to the ham dataset:
> fm <- lmer(Informed.liking ~ Product*Information+
+              (1|Consumer) + (1|Product:Consumer)
+            + (1|Information:Consumer), data=ham)
> 
> # Backward elimination using terms with default alpha-levels:
> (step_res <- step(fm))
boundary (singular) fit: see help('isSingular')
Backward reduced random-effect table:

                           Eliminated npar  logLik    AIC     LRT Df Pr(>Chisq)
<none>                                  12 -1352.0 2728.1                      
(1 | Information:Consumer)          1   11 -1352.8 2727.5   1.444  1    0.22952
(1 | Consumer)                      0   10 -1354.4 2728.7   3.184  1    0.07437
(1 | Product:Consumer)              0   10 -1435.0 2890.0 164.443  1    < 2e-16
                              
<none>                        
(1 | Information:Consumer)    
(1 | Consumer)             .  
(1 | Product:Consumer)     ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Backward reduced fixed-effect table:
Degrees of freedom method: Satterthwaite 

                    Eliminated  Sum Sq Mean Sq NumDF DenDF F value  Pr(>F)  
Product:Information          1 10.3873  3.4624     3   320  2.0765 0.10321  
Product                      0 19.3466  6.4489     3   240  3.8291 0.01048 *
Information                  0  6.5201  6.5201     1   323  3.8714 0.04997 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Model found:
Informed.liking ~ Product + Information + (1 | Consumer) + (1 | Product:Consumer)
> final <- get_model(step_res)
> anova(final)
Type III Analysis of Variance Table with Satterthwaite's method
             Sum Sq Mean Sq NumDF DenDF F value  Pr(>F)  
Product     19.3466  6.4489     3   240  3.8291 0.01048 *
Information  6.5201  6.5201     1   323  3.8714 0.04997 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> ## Not run: 
> ##D # Fit 'big' model:
> ##D fm <- lmer(Informed.liking ~ Product*Information*Gender*Age +
> ##D              + (1|Consumer) + (1|Consumer:Product) +
> ##D              (1|Consumer:Information), data=ham)
> ##D step_fm <- step(fm)
> ##D step_fm # Display elimination results
> ##D final_fm <- get_model(step_fm)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("summary.lmerModLmerTest")
> ### * summary.lmerModLmerTest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summary.lmerModLmerTest
> ### Title: Summary Method for Linear Mixed Models
> ### Aliases: summary.lmerModLmerTest
> 
> ### ** Examples
> 
> 
> # Fit example model:
> data("sleepstudy", package="lme4")
> fm <- lmer(Reaction ~ Days + (1|Subject) + (0+Days|Subject), sleepstudy)
> 
> # Get model summary:
> summary(fm) # Satterthwaite df and t-tests
Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: Reaction ~ Days + (1 | Subject) + (0 + Days | Subject)
   Data: sleepstudy

REML criterion at convergence: 1743.7

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.9626 -0.4625  0.0204  0.4653  5.1860 

Random effects:
 Groups    Name        Variance Std.Dev.
 Subject   (Intercept) 627.57   25.051  
 Subject.1 Days         35.86    5.988  
 Residual              653.58   25.565  
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error      df t value Pr(>|t|)    
(Intercept)  251.405      6.885  18.156  36.513  < 2e-16 ***
Days          10.467      1.560  18.156   6.712 2.59e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
     (Intr)
Days -0.184
> 
> # Extract coefficient table:
> coef(summary(fm))
             Estimate Std. Error       df   t value     Pr(>|t|)
(Intercept) 251.40510   6.885381 18.15620 36.512883 1.893381e-18
Days         10.46729   1.559569 18.15609  6.711653 2.594097e-06
> 
> # Use the Kenward-Roger method
> if(requireNamespace("pbkrtest", quietly = TRUE))
+   summary(fm, ddf="Kenward-Roger")
Linear mixed model fit by REML. t-tests use Kenward-Roger's method [
lmerModLmerTest]
Formula: Reaction ~ Days + (1 | Subject) + (0 + Days | Subject)
   Data: sleepstudy

REML criterion at convergence: 1743.7

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.9626 -0.4625  0.0204  0.4653  5.1860 

Random effects:
 Groups    Name        Variance Std.Dev.
 Subject   (Intercept) 627.57   25.051  
 Subject.1 Days         35.86    5.988  
 Residual              653.58   25.565  
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error      df t value Pr(>|t|)    
(Intercept)  251.405      6.885  18.187  36.513  < 2e-16 ***
Days          10.467      1.560  18.187   6.712 2.57e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Correlation of Fixed Effects:
     (Intr)
Days -0.184
> 
> # The lme4-summary table:
> summary(fm, ddf="lme4") # same as summary(as(fm, "lmerMod"))
Linear mixed model fit by REML ['lmerMod']
Formula: Reaction ~ Days + (1 | Subject) + (0 + Days | Subject)
   Data: sleepstudy

REML criterion at convergence: 1743.7

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.9626 -0.4625  0.0204  0.4653  5.1860 

Random effects:
 Groups    Name        Variance Std.Dev.
 Subject   (Intercept) 627.57   25.051  
 Subject.1 Days         35.86    5.988  
 Residual              653.58   25.565  
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error t value
(Intercept)  251.405      6.885  36.513
Days          10.467      1.560   6.712

Correlation of Fixed Effects:
     (Intr)
Days -0.184
> 
> ## Don't show: 
>   # Check that summaries are as expected:
>   summ_fm <- coef(summary(fm))
>   summ_fm_lme4 <- coef(summary(fm, ddf="lme4"))
>   stopifnot(
+     all(colnames(summ_fm) == c("Estimate", "Std. Error", "df", "t value", "Pr(>|t|)")),
+     all(colnames(summ_fm_lme4) == c("Estimate", "Std. Error", "t value")),
+     all(!(is.na(summ_fm))),
+     all(!(is.na(summ_fm_lme4)))
+   )
>  if(requireNamespace("pbkrtest", quietly = TRUE) && getRversion() >= "3.3.3") {
+     summ_fm_kr <- coef(summary(fm, ddf="Kenward-Roger"))
+      stopifnot(
+        all(colnames(summ_fm_kr) == c("Estimate", "Std. Error", "df", "t value", "Pr(>|t|)")),
+        all(!(is.na(summ_fm_kr)))
+     )
+  }
> ## End(Don't show)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  5.492 0.723 5.572 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
