
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[08:25:02.145] plan(): Setting new future strategy stack:
[08:25:02.145] List of future strategies:
[08:25:02.145] 1. sequential:
[08:25:02.145]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[08:25:02.145]    - tweaked: FALSE
[08:25:02.145]    - call: future::plan("sequential")
[08:25:02.160] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[08:25:02.712] future_lapply() ...
[08:25:02.716] Number of chunks: 1
[08:25:02.716] getGlobalsAndPackagesXApply() ...
[08:25:02.716]  - future.globals: FALSE
[08:25:02.718]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[08:25:02.718]  - needed namespaces: [n=0] 
[08:25:02.718] Finding globals ... DONE
[08:25:02.718]  - use_args: TRUE
[08:25:02.719]  - Getting '...' globals ...
[08:25:02.720]    - '...' content: [n=0] 
[08:25:02.720] List of 1
[08:25:02.720]  $ ...: list()
[08:25:02.720]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.720]  - attr(*, "where")=List of 1
[08:25:02.720]   ..$ ...:<environment: 0x564c33c126c8> 
[08:25:02.720]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.720]  - attr(*, "resolved")= logi TRUE
[08:25:02.720]  - attr(*, "total_size")= num NA
[08:25:02.722]  - Getting '...' globals ... DONE
[08:25:02.723] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[08:25:02.723] List of 3
[08:25:02.723]  $ ...future.FUN        :function (x)  
[08:25:02.723]  $ future.call.arguments: list()
[08:25:02.723]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.723]  $ ...                  : list()
[08:25:02.723]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.723]  - attr(*, "where")=List of 3
[08:25:02.723]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[08:25:02.723]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[08:25:02.723]   ..$ ...                  :<environment: 0x564c33c126c8> 
[08:25:02.723]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.723]  - attr(*, "resolved")= logi FALSE
[08:25:02.723]  - attr(*, "total_size")= num 5070
[08:25:02.727] Packages to be attached in all futures: [n=1] ‘utils’
[08:25:02.727] getGlobalsAndPackagesXApply() ... DONE
[08:25:02.727] Number of futures (= number of chunks): 1
[08:25:02.727] Launching 1 futures (chunks) ...
[08:25:02.727] Chunk #1 of 1 ...
[08:25:02.728]  - seeds: <none>
[08:25:02.728]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:02.739] Created future:
[08:25:02.739] ClusterFuture:
[08:25:02.739] Label: ‘future_lapply-1’
[08:25:02.739] Expression:
[08:25:02.739] {
[08:25:02.739]     do.call(function(...) {
[08:25:02.739]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:02.739]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:02.739]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:02.739]             on.exit(options(oopts), add = TRUE)
[08:25:02.739]         }
[08:25:02.739]         {
[08:25:02.739]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:02.739]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:02.739]                 ...future.FUN(...future.X_jj, ...)
[08:25:02.739]             })
[08:25:02.739]         }
[08:25:02.739]     }, args = future.call.arguments)
[08:25:02.739] }
[08:25:02.739] Lazy evaluation: FALSE
[08:25:02.739] Asynchronous evaluation: TRUE
[08:25:02.739] Local evaluation: TRUE
[08:25:02.739] Environment: R_GlobalEnv
[08:25:02.739] Capture standard output: TRUE
[08:25:02.739] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:02.739] Globals: 5 objects totaling 881 bytes (function ‘...future.FUN’ of 683 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:02.739] Packages: 1 packages (‘utils’)
[08:25:02.739] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:02.739] Resolved: FALSE
[08:25:02.739] Value: <not collected>
[08:25:02.739] Conditions captured: <none>
[08:25:02.739] Early signaling: FALSE
[08:25:02.739] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:02.739] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:02.752] Chunk #1 of 1 ... DONE
[08:25:02.752] Launching 1 futures (chunks) ... DONE
[08:25:02.752] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[08:25:02.796] future_lapply() ...
[08:25:02.797] Number of chunks: 1
[08:25:02.797] getGlobalsAndPackagesXApply() ...
[08:25:02.797]  - future.globals: TRUE
[08:25:02.801]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[08:25:02.801]  - needed namespaces: [n=1] ‘stats’
[08:25:02.801] Finding globals ... DONE
[08:25:02.801]  - use_args: TRUE
[08:25:02.801]  - Getting '...' globals ...
[08:25:02.802]    - '...' content: [n=0] 
[08:25:02.802] List of 1
[08:25:02.802]  $ ...: list()
[08:25:02.802]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.802]  - attr(*, "where")=List of 1
[08:25:02.802]   ..$ ...:<environment: 0x564c36e03cc0> 
[08:25:02.802]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.802]  - attr(*, "resolved")= logi TRUE
[08:25:02.802]  - attr(*, "total_size")= num NA
[08:25:02.805]  - Getting '...' globals ... DONE
[08:25:02.805] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[08:25:02.805] List of 4
[08:25:02.805]  $ ...future.FUN:function (x)  
[08:25:02.805]  $ a            : num 1
[08:25:02.805]  $ b            : num 2
[08:25:02.805]  $ ...          : list()
[08:25:02.805]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.805]  - attr(*, "where")=List of 4
[08:25:02.805]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:02.805]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:02.805]   ..$ b            :<environment: R_EmptyEnv> 
[08:25:02.805]   ..$ ...          :<environment: 0x564c36e03cc0> 
[08:25:02.805]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.805]  - attr(*, "resolved")= logi FALSE
[08:25:02.805]  - attr(*, "total_size")= num 5051
[08:25:02.810] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[08:25:02.810] getGlobalsAndPackagesXApply() ... DONE
[08:25:02.811] Number of futures (= number of chunks): 1
[08:25:02.811] Launching 1 futures (chunks) ...
[08:25:02.811] Chunk #1 of 1 ...
[08:25:02.811]  - Finding globals in 'X' for chunk #1 ...
[08:25:02.812]    + additional globals found: [n=0] 
[08:25:02.812]    + additional namespaces needed: [n=0] 
[08:25:02.812]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:02.812]  - seeds: <none>
[08:25:02.812]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:02.827] Created future:
[08:25:02.827] ClusterFuture:
[08:25:02.827] Label: ‘future_lapply-1’
[08:25:02.827] Expression:
[08:25:02.827] {
[08:25:02.827]     do.call(function(...) {
[08:25:02.827]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:02.827]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:02.827]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:02.827]             on.exit(options(oopts), add = TRUE)
[08:25:02.827]         }
[08:25:02.827]         {
[08:25:02.827]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:02.827]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:02.827]                 ...future.FUN(...future.X_jj, ...)
[08:25:02.827]             })
[08:25:02.827]         }
[08:25:02.827]     }, args = future.call.arguments)
[08:25:02.827] }
[08:25:02.827] Lazy evaluation: FALSE
[08:25:02.827] Asynchronous evaluation: TRUE
[08:25:02.827] Local evaluation: TRUE
[08:25:02.827] Environment: R_GlobalEnv
[08:25:02.827] Capture standard output: TRUE
[08:25:02.827] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:02.827] Globals: 7 objects totaling 959 bytes (function ‘...future.FUN’ of 683 bytes, numeric ‘a’ of 39 bytes, numeric ‘b’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, ...)
[08:25:02.827] Packages: 2 packages (‘stats’, ‘utils’)
[08:25:02.827] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:02.827] Resolved: FALSE
[08:25:02.827] Value: <not collected>
[08:25:02.827] Conditions captured: <none>
[08:25:02.827] Early signaling: FALSE
[08:25:02.827] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:02.827] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:02.839] Chunk #1 of 1 ... DONE
[08:25:02.839] Launching 1 futures (chunks) ... DONE
[08:25:02.839] Resolving 1 futures (chunks) ...
[08:25:02.871]  - Number of value chunks collected: 1
[08:25:02.871] Resolving 1 futures (chunks) ... DONE
[08:25:02.871] Reducing values from 1 chunks ...
[08:25:02.871]  - Number of values collected after concatenation: 1
[08:25:02.871]  - Number of values expected: 1
[08:25:02.872] Reducing values from 1 chunks ... DONE
[08:25:02.872] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[08:25:02.872] future_lapply() ...
[08:25:02.873] Number of chunks: 1
[08:25:02.873] getGlobalsAndPackagesXApply() ...
[08:25:02.873]  - future.globals: ‘a’, ‘b’
[08:25:02.873]  - use_args: TRUE
[08:25:02.873] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[08:25:02.873] List of 4
[08:25:02.873]  $ a            : num 1
[08:25:02.873]  $ b            : num 2
[08:25:02.873]  $ ...future.FUN:function (x)  
[08:25:02.873]  $ ...          : list()
[08:25:02.873]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.873]  - attr(*, "where")=List of 4
[08:25:02.873]   ..$ a            :<environment: R_GlobalEnv> 
[08:25:02.873]   ..$ b            :<environment: R_GlobalEnv> 
[08:25:02.873]   ..$ ...future.FUN:<environment: 0x564c36096358> 
[08:25:02.873]   ..$ ...          :<environment: 0x564c36096358> 
[08:25:02.873]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.873]  - attr(*, "resolved")= logi FALSE
[08:25:02.873]  - attr(*, "total_size")= num NA
[08:25:02.877] Packages to be attached in all futures: [n=1] ‘utils’
[08:25:02.877] getGlobalsAndPackagesXApply() ... DONE
[08:25:02.878] Number of futures (= number of chunks): 1
[08:25:02.878] Launching 1 futures (chunks) ...
[08:25:02.878] Chunk #1 of 1 ...
[08:25:02.878]  - seeds: <none>
[08:25:02.878]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:02.889] Created future:
[08:25:02.889] ClusterFuture:
[08:25:02.889] Label: ‘future_lapply-1’
[08:25:02.889] Expression:
[08:25:02.889] {
[08:25:02.889]     do.call(function(...) {
[08:25:02.889]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:02.889]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:02.889]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:02.889]             on.exit(options(oopts), add = TRUE)
[08:25:02.889]         }
[08:25:02.889]         {
[08:25:02.889]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:02.889]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:02.889]                 ...future.FUN(...future.X_jj, ...)
[08:25:02.889]             })
[08:25:02.889]         }
[08:25:02.889]     }, args = future.call.arguments)
[08:25:02.889] }
[08:25:02.889] Lazy evaluation: FALSE
[08:25:02.889] Asynchronous evaluation: TRUE
[08:25:02.889] Local evaluation: TRUE
[08:25:02.889] Environment: R_GlobalEnv
[08:25:02.889] Capture standard output: TRUE
[08:25:02.889] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:02.889] Globals: 7 objects totaling 959 bytes (numeric ‘a’ of 39 bytes, numeric ‘b’ of 39 bytes, function ‘...future.FUN’ of 683 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, ...)
[08:25:02.889] Packages: 1 packages (‘utils’)
[08:25:02.889] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:02.889] Resolved: FALSE
[08:25:02.889] Value: <not collected>
[08:25:02.889] Conditions captured: <none>
[08:25:02.889] Early signaling: FALSE
[08:25:02.889] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:02.889] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:02.900] Chunk #1 of 1 ... DONE
[08:25:02.901] Launching 1 futures (chunks) ... DONE
[08:25:02.901] Resolving 1 futures (chunks) ...
[08:25:02.932]  - Number of value chunks collected: 1
[08:25:02.932] Resolving 1 futures (chunks) ... DONE
[08:25:02.932] Reducing values from 1 chunks ...
[08:25:02.933]  - Number of values collected after concatenation: 1
[08:25:02.933]  - Number of values expected: 1
[08:25:02.933] Reducing values from 1 chunks ... DONE
[08:25:02.933] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[08:25:02.933] future_lapply() ...
[08:25:02.934] Number of chunks: 1
[08:25:02.934] getGlobalsAndPackagesXApply() ...
[08:25:02.934]  - future.globals: <name-value list> with names ‘2’, ‘3’
[08:25:02.934]  - use_args: TRUE
[08:25:02.934]  - Getting '...' globals ...
[08:25:02.935]    - '...' content: [n=0] 
[08:25:02.935] List of 1
[08:25:02.935]  $ ...: list()
[08:25:02.935]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.935]  - attr(*, "where")=List of 1
[08:25:02.935]   ..$ ...:<environment: 0x564c35530dc0> 
[08:25:02.935]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.935]  - attr(*, "resolved")= logi TRUE
[08:25:02.935]  - attr(*, "total_size")= num NA
[08:25:02.937]  - Getting '...' globals ... DONE
[08:25:02.937] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[08:25:02.937] List of 4
[08:25:02.937]  $ a            : num 2
[08:25:02.937]  $ b            : num 3
[08:25:02.937]  $ ...future.FUN:function (x)  
[08:25:02.937]  $ ...          : list()
[08:25:02.937]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:02.937]  - attr(*, "where")=List of 4
[08:25:02.937]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:02.937]   ..$ b            :<environment: R_EmptyEnv> 
[08:25:02.937]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[08:25:02.937]   ..$ ...          :<environment: 0x564c35530dc0> 
[08:25:02.937]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:02.937]  - attr(*, "resolved")= logi FALSE
[08:25:02.937]  - attr(*, "total_size")= num NA
[08:25:02.941] Packages to be attached in all futures: [n=1] ‘utils’
[08:25:02.941] getGlobalsAndPackagesXApply() ... DONE
[08:25:02.941] Number of futures (= number of chunks): 1
[08:25:02.942] Launching 1 futures (chunks) ...
[08:25:02.942] Chunk #1 of 1 ...
[08:25:02.942]  - seeds: <none>
[08:25:02.942]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:02.953] Created future:
[08:25:02.953] ClusterFuture:
[08:25:02.953] Label: ‘future_lapply-1’
[08:25:02.953] Expression:
[08:25:02.953] {
[08:25:02.953]     do.call(function(...) {
[08:25:02.953]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:02.953]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:02.953]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:02.953]             on.exit(options(oopts), add = TRUE)
[08:25:02.953]         }
[08:25:02.953]         {
[08:25:02.953]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:02.953]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:02.953]                 ...future.FUN(...future.X_jj, ...)
[08:25:02.953]             })
[08:25:02.953]         }
[08:25:02.953]     }, args = future.call.arguments)
[08:25:02.953] }
[08:25:02.953] Lazy evaluation: FALSE
[08:25:02.953] Asynchronous evaluation: TRUE
[08:25:02.953] Local evaluation: TRUE
[08:25:02.953] Environment: R_GlobalEnv
[08:25:02.953] Capture standard output: TRUE
[08:25:02.953] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:02.953] Globals: 7 objects totaling 959 bytes (numeric ‘a’ of 39 bytes, numeric ‘b’ of 39 bytes, function ‘...future.FUN’ of 683 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, ...)
[08:25:02.953] Packages: 1 packages (‘utils’)
[08:25:02.953] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:02.953] Resolved: FALSE
[08:25:02.953] Value: <not collected>
[08:25:02.953] Conditions captured: <none>
[08:25:02.953] Early signaling: FALSE
[08:25:02.953] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:02.953] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:02.965] Chunk #1 of 1 ... DONE
[08:25:02.965] Launching 1 futures (chunks) ... DONE
[08:25:02.965] Resolving 1 futures (chunks) ...
[08:25:02.996]  - Number of value chunks collected: 1
[08:25:02.996] Resolving 1 futures (chunks) ... DONE
[08:25:02.996] Reducing values from 1 chunks ...
[08:25:02.996]  - Number of values collected after concatenation: 1
[08:25:02.996]  - Number of values expected: 1
[08:25:02.997] Reducing values from 1 chunks ... DONE
[08:25:02.997] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[08:25:02.997] future_lapply() ...
[08:25:02.998] Number of chunks: 1
[08:25:02.998] getGlobalsAndPackagesXApply() ...
[08:25:02.998]  - future.globals: FALSE
[08:25:02.999]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[08:25:02.999]  - needed namespaces: [n=0] 
[08:25:02.999] Finding globals ... DONE
[08:25:02.999]  - use_args: TRUE
[08:25:02.999]  - Getting '...' globals ...
[08:25:02.999]    - '...' content: [n=0] 
[08:25:03.000] List of 1
[08:25:03.000]  $ ...: list()
[08:25:03.000]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.000]  - attr(*, "where")=List of 1
[08:25:03.000]   ..$ ...:<environment: 0x564c36adef40> 
[08:25:03.000]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.000]  - attr(*, "resolved")= logi TRUE
[08:25:03.000]  - attr(*, "total_size")= num NA
[08:25:03.002]  - Getting '...' globals ... DONE
[08:25:03.002] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[08:25:03.002] List of 4
[08:25:03.002]  $ d                    : num 42
[08:25:03.002]  $ ...future.FUN        :function (x)  
[08:25:03.002]  $ future.call.arguments: list()
[08:25:03.002]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.002]  $ ...                  : list()
[08:25:03.002]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.002]  - attr(*, "where")=List of 4
[08:25:03.002]   ..$ d                    :<environment: R_EmptyEnv> 
[08:25:03.002]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[08:25:03.002]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[08:25:03.002]   ..$ ...                  :<environment: 0x564c36adef40> 
[08:25:03.002]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.002]  - attr(*, "resolved")= logi FALSE
[08:25:03.002]  - attr(*, "total_size")= num 3368
[08:25:03.006] Packages to be attached in all futures: [n=0] 
[08:25:03.006] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.006] Number of futures (= number of chunks): 1
[08:25:03.007] Launching 1 futures (chunks) ...
[08:25:03.007] Chunk #1 of 1 ...
[08:25:03.007]  - seeds: <none>
[08:25:03.007]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.017] Created future:
[08:25:03.017] ClusterFuture:
[08:25:03.017] Label: ‘future_lapply-1’
[08:25:03.017] Expression:
[08:25:03.017] {
[08:25:03.017]     do.call(function(...) {
[08:25:03.017]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.017]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.017]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.017]             on.exit(options(oopts), add = TRUE)
[08:25:03.017]         }
[08:25:03.017]         {
[08:25:03.017]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.017]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.017]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.017]             })
[08:25:03.017]         }
[08:25:03.017]     }, args = future.call.arguments)
[08:25:03.017] }
[08:25:03.017] Lazy evaluation: FALSE
[08:25:03.017] Asynchronous evaluation: TRUE
[08:25:03.017] Local evaluation: TRUE
[08:25:03.017] Environment: R_GlobalEnv
[08:25:03.017] Capture standard output: TRUE
[08:25:03.017] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.017] Globals: 6 objects totaling 372 bytes (numeric ‘d’ of 39 bytes, function ‘...future.FUN’ of 127 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 55 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.017] Packages: <none>
[08:25:03.017] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.017] Resolved: FALSE
[08:25:03.017] Value: <not collected>
[08:25:03.017] Conditions captured: <none>
[08:25:03.017] Early signaling: FALSE
[08:25:03.017] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.017] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.028] Chunk #1 of 1 ... DONE
[08:25:03.029] Launching 1 futures (chunks) ... DONE
[08:25:03.029] Resolving 1 futures (chunks) ...
[08:25:03.071]  - Number of value chunks collected: 1
[08:25:03.071] Resolving 1 futures (chunks) ... DONE
[08:25:03.071] Reducing values from 1 chunks ...
[08:25:03.071]  - Number of values collected after concatenation: 2
[08:25:03.071]  - Number of values expected: 2
[08:25:03.072] Reducing values from 1 chunks ... DONE
[08:25:03.072] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[08:25:03.072] future_lapply() ...
[08:25:03.073] Number of chunks: 1
[08:25:03.073] getGlobalsAndPackagesXApply() ...
[08:25:03.073]  - future.globals: TRUE
[08:25:03.076]  - globals found/used: [n=1] ‘FUN’
[08:25:03.076]  - needed namespaces: [n=0] 
[08:25:03.076] Finding globals ... DONE
[08:25:03.076]  - use_args: TRUE
[08:25:03.077]  - Getting '...' globals ...
[08:25:03.077]    - '...' content: [n=0] 
[08:25:03.077] List of 1
[08:25:03.077]  $ ...: list()
[08:25:03.077]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.077]  - attr(*, "where")=List of 1
[08:25:03.077]   ..$ ...:<environment: 0x564c3737ef60> 
[08:25:03.077]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.077]  - attr(*, "resolved")= logi TRUE
[08:25:03.077]  - attr(*, "total_size")= num NA
[08:25:03.079]  - Getting '...' globals ... DONE
[08:25:03.079] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.080] List of 2
[08:25:03.080]  $ ...future.FUN:function (x)  
[08:25:03.080]  $ ...          : list()
[08:25:03.080]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.080]  - attr(*, "where")=List of 2
[08:25:03.080]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.080]   ..$ ...          :<environment: 0x564c3737ef60> 
[08:25:03.080]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.080]  - attr(*, "resolved")= logi FALSE
[08:25:03.080]  - attr(*, "total_size")= num 3259
[08:25:03.082] Packages to be attached in all futures: [n=0] 
[08:25:03.082] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.082] Number of futures (= number of chunks): 1
[08:25:03.082] Launching 1 futures (chunks) ...
[08:25:03.083] Chunk #1 of 1 ...
[08:25:03.083]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.083]    + additional globals found: [n=0] 
[08:25:03.083]    + additional namespaces needed: [n=0] 
[08:25:03.083]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.083]  - seeds: <none>
[08:25:03.083]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.093] Created future:
[08:25:03.093] ClusterFuture:
[08:25:03.093] Label: ‘future_lapply-1’
[08:25:03.093] Expression:
[08:25:03.093] {
[08:25:03.093]     do.call(function(...) {
[08:25:03.093]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.093]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.093]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.093]             on.exit(options(oopts), add = TRUE)
[08:25:03.093]         }
[08:25:03.093]         {
[08:25:03.093]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.093]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.093]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.093]             })
[08:25:03.093]         }
[08:25:03.093]     }, args = future.call.arguments)
[08:25:03.093] }
[08:25:03.093] Lazy evaluation: FALSE
[08:25:03.093] Asynchronous evaluation: TRUE
[08:25:03.093] Local evaluation: TRUE
[08:25:03.093] Environment: R_GlobalEnv
[08:25:03.093] Capture standard output: TRUE
[08:25:03.093] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.093] Globals: 5 objects totaling 345 bytes (function ‘...future.FUN’ of 139 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 55 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.093] Packages: <none>
[08:25:03.093] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.093] Resolved: FALSE
[08:25:03.093] Value: <not collected>
[08:25:03.093] Conditions captured: <none>
[08:25:03.093] Early signaling: FALSE
[08:25:03.093] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.093] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.104] Chunk #1 of 1 ... DONE
[08:25:03.105] Launching 1 futures (chunks) ... DONE
[08:25:03.105] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/futureverse/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/futureverse/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/futureverse/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/futureverse/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[08:25:03.187] future_lapply() ...
[08:25:03.188] Number of chunks: 1
[08:25:03.188] getGlobalsAndPackagesXApply() ...
[08:25:03.188]  - future.globals: TRUE
[08:25:03.195]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[08:25:03.195]  - needed namespaces: [n=0] 
[08:25:03.195] Finding globals ... DONE
[08:25:03.195]  - use_args: TRUE
[08:25:03.195]  - Getting '...' globals ...
[08:25:03.196]    - '...' content: [n=0] 
[08:25:03.196] List of 1
[08:25:03.196]  $ ...: list()
[08:25:03.196]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.196]  - attr(*, "where")=List of 1
[08:25:03.196]   ..$ ...:<environment: 0x564c33962ca8> 
[08:25:03.196]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.196]  - attr(*, "resolved")= logi TRUE
[08:25:03.196]  - attr(*, "total_size")= num NA
[08:25:03.199]  - Getting '...' globals ... DONE
[08:25:03.199] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[08:25:03.199] List of 6
[08:25:03.199]  $ ...future.FUN:function (i)  
[08:25:03.199]  $ caller       :function (a, b, FUN = call_my_add)  
[08:25:03.199]  $ args         :List of 1
[08:25:03.199]   ..$ FUN:function (a, b)  
[08:25:03.199]  $ call_my_add  :function (a, b)  
[08:25:03.199]  $ my_add       :function (a, b)  
[08:25:03.199]  $ ...          : list()
[08:25:03.199]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.199]  - attr(*, "where")=List of 6
[08:25:03.199]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.199]   ..$ caller       :<environment: R_EmptyEnv> 
[08:25:03.199]   ..$ args         :<environment: R_EmptyEnv> 
[08:25:03.199]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[08:25:03.199]   ..$ my_add       :<environment: R_EmptyEnv> 
[08:25:03.199]   ..$ ...          :<environment: 0x564c33962ca8> 
[08:25:03.199]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.199]  - attr(*, "resolved")= logi FALSE
[08:25:03.199]  - attr(*, "total_size")= num 6021
[08:25:03.204] Packages to be attached in all futures: [n=0] 
[08:25:03.204] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.204] Number of futures (= number of chunks): 1
[08:25:03.204] Launching 1 futures (chunks) ...
[08:25:03.204] Chunk #1 of 1 ...
[08:25:03.204]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.204]    + additional globals found: [n=0] 
[08:25:03.205]    + additional namespaces needed: [n=0] 
[08:25:03.205]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.205]  - seeds: <none>
[08:25:03.205]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.211] Created future:
[08:25:03.211] SequentialFuture:
[08:25:03.211] Label: ‘future_lapply-1’
[08:25:03.211] Expression:
[08:25:03.211] {
[08:25:03.211]     do.call(function(...) {
[08:25:03.211]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.211]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.211]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.211]             on.exit(options(oopts), add = TRUE)
[08:25:03.211]         }
[08:25:03.211]         {
[08:25:03.211]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.211]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.211]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.211]             })
[08:25:03.211]         }
[08:25:03.211]     }, args = future.call.arguments)
[08:25:03.211] }
[08:25:03.211] Lazy evaluation: FALSE
[08:25:03.211] Asynchronous evaluation: FALSE
[08:25:03.211] Local evaluation: TRUE
[08:25:03.211] Environment: 0x564c33962810
[08:25:03.211] Capture standard output: TRUE
[08:25:03.211] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.211] Globals: 9 objects totaling 4.33 KiB (function ‘...future.FUN’ of 1.81 KiB, function ‘caller’ of 247 bytes, list ‘args’ of 928 bytes, function ‘call_my_add’ of 876 bytes, function ‘my_add’ of 311 bytes, ...)
[08:25:03.211] Packages: <none>
[08:25:03.211] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.211] Resolved: TRUE
[08:25:03.211] Value: 67 bytes of class ‘list’
[08:25:03.211] Early signaling: FALSE
[08:25:03.211] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.211] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.212] Chunk #1 of 1 ... DONE
[08:25:03.212] Launching 1 futures (chunks) ... DONE
[08:25:03.212] Resolving 1 futures (chunks) ...
[08:25:03.212]  - Number of value chunks collected: 1
[08:25:03.212] Resolving 1 futures (chunks) ... DONE
[08:25:03.213] Reducing values from 1 chunks ...
[08:25:03.213]  - Number of values collected after concatenation: 3
[08:25:03.213]  - Number of values expected: 3
[08:25:03.213] Reducing values from 1 chunks ... DONE
[08:25:03.213] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[08:25:03.213] future_lapply() ...
[08:25:03.218] Number of chunks: 1
[08:25:03.218] getGlobalsAndPackagesXApply() ...
[08:25:03.218]  - future.globals: TRUE
[08:25:03.221]  - globals found/used: [n=1] ‘FUN’
[08:25:03.221]  - needed namespaces: [n=0] 
[08:25:03.221] Finding globals ... DONE
[08:25:03.221]  - use_args: TRUE
[08:25:03.221]  - Getting '...' globals ...
[08:25:03.222]    - '...' content: [n=1] ‘what’
[08:25:03.222] List of 1
[08:25:03.222]  $ ...:List of 1
[08:25:03.222]   ..$ what:function (x)  
[08:25:03.222]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.222]  - attr(*, "where")=List of 1
[08:25:03.222]   ..$ ...:<environment: 0x564c37469630> 
[08:25:03.222]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.222]  - attr(*, "resolved")= logi TRUE
[08:25:03.222]  - attr(*, "total_size")= num NA
[08:25:03.224]  - Getting '...' globals ... DONE
[08:25:03.224] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.225] List of 2
[08:25:03.225]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:03.225]  $ ...          :List of 1
[08:25:03.225]   ..$ what:function (x)  
[08:25:03.225]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.225]  - attr(*, "where")=List of 2
[08:25:03.225]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.225]   ..$ ...          :<environment: 0x564c37469630> 
[08:25:03.225]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.225]  - attr(*, "resolved")= logi FALSE
[08:25:03.225]  - attr(*, "total_size")= num 6909
[08:25:03.227] Packages to be attached in all futures: [n=0] 
[08:25:03.228] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.228] Number of futures (= number of chunks): 1
[08:25:03.228] Launching 1 futures (chunks) ...
[08:25:03.228] Chunk #1 of 1 ...
[08:25:03.228]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.228]    + additional globals found: [n=0] 
[08:25:03.228]    + additional namespaces needed: [n=0] 
[08:25:03.229]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.229]  - seeds: <none>
[08:25:03.229]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.231] Created future:
[08:25:03.231] SequentialFuture:
[08:25:03.231] Label: ‘future_lapply-1’
[08:25:03.231] Expression:
[08:25:03.231] {
[08:25:03.231]     do.call(function(...) {
[08:25:03.231]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.231]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.231]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.231]             on.exit(options(oopts), add = TRUE)
[08:25:03.231]         }
[08:25:03.231]         {
[08:25:03.231]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.231]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.231]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.231]             })
[08:25:03.231]         }
[08:25:03.231]     }, args = future.call.arguments)
[08:25:03.231] }
[08:25:03.231] Lazy evaluation: FALSE
[08:25:03.231] Asynchronous evaluation: FALSE
[08:25:03.231] Local evaluation: TRUE
[08:25:03.231] Environment: R_GlobalEnv
[08:25:03.231] Capture standard output: TRUE
[08:25:03.231] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.231] Globals: 5 objects totaling 2.13 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 152 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.231] Packages: <none>
[08:25:03.231] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.231] Resolved: TRUE
[08:25:03.231] Value: 43 bytes of class ‘list’
[08:25:03.231] Early signaling: FALSE
[08:25:03.231] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.231] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.232] Chunk #1 of 1 ... DONE
[08:25:03.232] Launching 1 futures (chunks) ... DONE
[08:25:03.232] Resolving 1 futures (chunks) ...
[08:25:03.233]  - Number of value chunks collected: 1
[08:25:03.233] Resolving 1 futures (chunks) ... DONE
[08:25:03.233] Reducing values from 1 chunks ...
[08:25:03.233]  - Number of values collected after concatenation: 1
[08:25:03.233]  - Number of values expected: 1
[08:25:03.233] Reducing values from 1 chunks ... DONE
[08:25:03.233] future_lapply() ... DONE
[08:25:03.233] future_lapply() ...
[08:25:03.235] Number of chunks: 1
[08:25:03.235] getGlobalsAndPackagesXApply() ...
[08:25:03.235]  - future.globals: TRUE
[08:25:03.237]  - globals found/used: [n=1] ‘FUN’
[08:25:03.237]  - needed namespaces: [n=0] 
[08:25:03.238] Finding globals ... DONE
[08:25:03.238]  - use_args: TRUE
[08:25:03.238]  - Getting '...' globals ...
[08:25:03.238]    - '...' content: [n=1] ‘what’
[08:25:03.238] List of 1
[08:25:03.238]  $ ...:List of 1
[08:25:03.238]   ..$ what:function (...)  
[08:25:03.238]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.238]  - attr(*, "where")=List of 1
[08:25:03.238]   ..$ ...:<environment: 0x564c35073e90> 
[08:25:03.238]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.238]  - attr(*, "resolved")= logi TRUE
[08:25:03.238]  - attr(*, "total_size")= num NA
[08:25:03.241]  - Getting '...' globals ... DONE
[08:25:03.241] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.241] List of 2
[08:25:03.241]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:03.241]  $ ...          :List of 1
[08:25:03.241]   ..$ what:function (...)  
[08:25:03.241]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.241]  - attr(*, "where")=List of 2
[08:25:03.241]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.241]   ..$ ...          :<environment: 0x564c35073e90> 
[08:25:03.241]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.241]  - attr(*, "resolved")= logi FALSE
[08:25:03.241]  - attr(*, "total_size")= num 6977
[08:25:03.244] Packages to be attached in all futures: [n=0] 
[08:25:03.244] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.244] Number of futures (= number of chunks): 1
[08:25:03.244] Launching 1 futures (chunks) ...
[08:25:03.244] Chunk #1 of 1 ...
[08:25:03.245]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.245]    + additional globals found: [n=0] 
[08:25:03.245]    + additional namespaces needed: [n=0] 
[08:25:03.245]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.245]  - seeds: <none>
[08:25:03.245]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.249] Created future:
[08:25:03.249] SequentialFuture:
[08:25:03.249] Label: ‘future_lapply-1’
[08:25:03.249] Expression:
[08:25:03.249] {
[08:25:03.249]     do.call(function(...) {
[08:25:03.249]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.249]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.249]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.249]             on.exit(options(oopts), add = TRUE)
[08:25:03.249]         }
[08:25:03.249]         {
[08:25:03.249]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.249]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.249]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.249]             })
[08:25:03.249]         }
[08:25:03.249]     }, args = future.call.arguments)
[08:25:03.249] }
[08:25:03.249] Lazy evaluation: FALSE
[08:25:03.249] Asynchronous evaluation: FALSE
[08:25:03.249] Local evaluation: TRUE
[08:25:03.249] Environment: R_GlobalEnv
[08:25:03.249] Capture standard output: TRUE
[08:25:03.249] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.249] Globals: 5 objects totaling 2.36 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 388 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.249] Packages: <none>
[08:25:03.249] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.249] Resolved: TRUE
[08:25:03.249] Value: 43 bytes of class ‘list’
[08:25:03.249] Early signaling: FALSE
[08:25:03.249] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.249] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.250] Chunk #1 of 1 ... DONE
[08:25:03.250] Launching 1 futures (chunks) ... DONE
[08:25:03.250] Resolving 1 futures (chunks) ...
[08:25:03.250]  - Number of value chunks collected: 1
[08:25:03.250] Resolving 1 futures (chunks) ... DONE
[08:25:03.250] Reducing values from 1 chunks ...
[08:25:03.251]  - Number of values collected after concatenation: 1
[08:25:03.251]  - Number of values expected: 1
[08:25:03.251] Reducing values from 1 chunks ... DONE
[08:25:03.251] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[08:25:03.251] future_lapply() ...
[08:25:03.252] Number of chunks: 1
[08:25:03.252] getGlobalsAndPackagesXApply() ...
[08:25:03.252]  - future.globals: TRUE
[08:25:03.253]  - globals found/used: [n=1] ‘FUN’
[08:25:03.253]  - needed namespaces: [n=0] 
[08:25:03.253] Finding globals ... DONE
[08:25:03.254]  - use_args: TRUE
[08:25:03.254]  - Getting '...' globals ...
[08:25:03.254]    - '...' content: [n=1] ‘b’
[08:25:03.254] List of 1
[08:25:03.254]  $ ...:List of 1
[08:25:03.254]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:03.254]   .. ..$ a: int [1:2] 1 2
[08:25:03.254]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.254]  - attr(*, "where")=List of 1
[08:25:03.254]   ..$ ...:<environment: 0x564c36db7478> 
[08:25:03.254]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.254]  - attr(*, "resolved")= logi TRUE
[08:25:03.254]  - attr(*, "total_size")= num NA
[08:25:03.257]  - Getting '...' globals ... DONE
[08:25:03.257] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.258] List of 2
[08:25:03.258]  $ ...future.FUN:function (a, b)  
[08:25:03.258]  $ ...          :List of 1
[08:25:03.258]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:03.258]   .. ..$ a: int [1:2] 1 2
[08:25:03.258]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.258]  - attr(*, "where")=List of 2
[08:25:03.258]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.258]   ..$ ...          :<environment: 0x564c36db7478> 
[08:25:03.258]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.258]  - attr(*, "resolved")= logi FALSE
[08:25:03.258]  - attr(*, "total_size")= num 4163
[08:25:03.261] Packages to be attached in all futures: [n=0] 
[08:25:03.261] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.261] Number of futures (= number of chunks): 1
[08:25:03.261] Launching 1 futures (chunks) ...
[08:25:03.261] Chunk #1 of 1 ...
[08:25:03.261]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.262]    + additional globals found: [n=0] 
[08:25:03.262]    + additional namespaces needed: [n=0] 
[08:25:03.262]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.262]  - seeds: <none>
[08:25:03.262]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.264] Created future:
[08:25:03.264] SequentialFuture:
[08:25:03.264] Label: ‘future_lapply-1’
[08:25:03.264] Expression:
[08:25:03.264] {
[08:25:03.264]     do.call(function(...) {
[08:25:03.264]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.264]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.264]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.264]             on.exit(options(oopts), add = TRUE)
[08:25:03.264]         }
[08:25:03.264]         {
[08:25:03.264]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.264]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.264]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.264]             })
[08:25:03.264]         }
[08:25:03.264]     }, args = future.call.arguments)
[08:25:03.264] }
[08:25:03.264] Lazy evaluation: FALSE
[08:25:03.264] Asynchronous evaluation: FALSE
[08:25:03.264] Local evaluation: TRUE
[08:25:03.264] Environment: R_GlobalEnv
[08:25:03.264] Capture standard output: TRUE
[08:25:03.264] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.264] Globals: 5 objects totaling 786 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 357 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.264] Packages: <none>
[08:25:03.264] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.264] Resolved: TRUE
[08:25:03.264] Value: 51 bytes of class ‘list’
[08:25:03.264] Early signaling: FALSE
[08:25:03.264] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.264] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.267] Chunk #1 of 1 ... DONE
[08:25:03.267] Launching 1 futures (chunks) ... DONE
[08:25:03.267] Resolving 1 futures (chunks) ...
[08:25:03.268]  - Number of value chunks collected: 1
[08:25:03.268] Resolving 1 futures (chunks) ... DONE
[08:25:03.268] Reducing values from 1 chunks ...
[08:25:03.268]  - Number of values collected after concatenation: 1
[08:25:03.268]  - Number of values expected: 1
[08:25:03.268] Reducing values from 1 chunks ... DONE
[08:25:03.268] future_lapply() ... DONE
[08:25:03.268] future_lapply() ...
[08:25:03.269] Number of chunks: 1
[08:25:03.269] getGlobalsAndPackagesXApply() ...
[08:25:03.269]  - future.globals: TRUE
[08:25:03.270]  - globals found/used: [n=1] ‘FUN’
[08:25:03.271]  - needed namespaces: [n=0] 
[08:25:03.271] Finding globals ... DONE
[08:25:03.271]  - use_args: TRUE
[08:25:03.271]  - Getting '...' globals ...
[08:25:03.271]    - '...' content: [n=1] ‘b’
[08:25:03.271] List of 1
[08:25:03.271]  $ ...:List of 1
[08:25:03.271]   ..$ b:<environment: 0x564c36211e38> 
[08:25:03.271]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.271]  - attr(*, "where")=List of 1
[08:25:03.271]   ..$ ...:<environment: 0x564c362128f0> 
[08:25:03.271]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.271]  - attr(*, "resolved")= logi TRUE
[08:25:03.271]  - attr(*, "total_size")= num NA
[08:25:03.274]  - Getting '...' globals ... DONE
[08:25:03.274] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.274] List of 2
[08:25:03.274]  $ ...future.FUN:function (a, b)  
[08:25:03.274]  $ ...          :List of 1
[08:25:03.274]   ..$ b:<environment: 0x564c36211e38> 
[08:25:03.274]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.274]  - attr(*, "where")=List of 2
[08:25:03.274]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.274]   ..$ ...          :<environment: 0x564c362128f0> 
[08:25:03.274]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.274]  - attr(*, "resolved")= logi FALSE
[08:25:03.274]  - attr(*, "total_size")= num 3918
[08:25:03.277] Packages to be attached in all futures: [n=0] 
[08:25:03.277] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.277] Number of futures (= number of chunks): 1
[08:25:03.277] Launching 1 futures (chunks) ...
[08:25:03.277] Chunk #1 of 1 ...
[08:25:03.277]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.278]    + additional globals found: [n=0] 
[08:25:03.278]    + additional namespaces needed: [n=0] 
[08:25:03.278]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.278]  - seeds: <none>
[08:25:03.278]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.280] Created future:
[08:25:03.281] SequentialFuture:
[08:25:03.281] Label: ‘future_lapply-1’
[08:25:03.281] Expression:
[08:25:03.281] {
[08:25:03.281]     do.call(function(...) {
[08:25:03.281]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.281]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.281]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.281]             on.exit(options(oopts), add = TRUE)
[08:25:03.281]         }
[08:25:03.281]         {
[08:25:03.281]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.281]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.281]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.281]             })
[08:25:03.281]         }
[08:25:03.281]     }, args = future.call.arguments)
[08:25:03.281] }
[08:25:03.281] Lazy evaluation: FALSE
[08:25:03.281] Asynchronous evaluation: FALSE
[08:25:03.281] Local evaluation: TRUE
[08:25:03.281] Environment: R_GlobalEnv
[08:25:03.281] Capture standard output: TRUE
[08:25:03.281] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.281] Globals: 5 objects totaling 708 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 279 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.281] Packages: <none>
[08:25:03.281] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.281] Resolved: TRUE
[08:25:03.281] Value: 58 bytes of class ‘list’
[08:25:03.281] Early signaling: FALSE
[08:25:03.281] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.281] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.281] Chunk #1 of 1 ... DONE
[08:25:03.281] Launching 1 futures (chunks) ... DONE
[08:25:03.281] Resolving 1 futures (chunks) ...
[08:25:03.282]  - Number of value chunks collected: 1
[08:25:03.282] Resolving 1 futures (chunks) ... DONE
[08:25:03.282] Reducing values from 1 chunks ...
[08:25:03.282]  - Number of values collected after concatenation: 1
[08:25:03.282]  - Number of values expected: 1
[08:25:03.282] Reducing values from 1 chunks ... DONE
[08:25:03.282] future_lapply() ... DONE
[08:25:03.283] future_lapply() ...
[08:25:03.283] Number of chunks: 1
[08:25:03.283] getGlobalsAndPackagesXApply() ...
[08:25:03.283]  - future.globals: TRUE
[08:25:03.285]  - globals found/used: [n=1] ‘FUN’
[08:25:03.285]  - needed namespaces: [n=0] 
[08:25:03.285] Finding globals ... DONE
[08:25:03.286]  - use_args: TRUE
[08:25:03.286]  - Getting '...' globals ...
[08:25:03.286]    - '...' content: [n=1] ‘b’
[08:25:03.286] List of 1
[08:25:03.286]  $ ...:List of 1
[08:25:03.286]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:03.286]   .. .. ..@ slots     :List of 4
[08:25:03.286]   .. .. .. ..$ .Data  : chr "function"
[08:25:03.286]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. ..$ target : chr "signature"
[08:25:03.286]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. ..$ defined: chr "signature"
[08:25:03.286]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. ..$ generic: chr "character"
[08:25:03.286]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. ..@ contains  :List of 3
[08:25:03.286]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.286]   .. .. ..@ virtual   : logi FALSE
[08:25:03.286]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:03.286]  list()
[08:25:03.286]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.286]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.286]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.286]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.286]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.286]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.286]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.286]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.286]   .. .. .. .. ..$ generic: chr(0) 
[08:25:03.286]   .. .. ..@ validity  : NULL
[08:25:03.286]   .. .. ..@ access    : list()
[08:25:03.286]   .. .. ..@ className : chr "MethodDefinition"
[08:25:03.286]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. ..@ subclasses:List of 7
[08:25:03.286]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.286]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.286]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.286]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.286]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.286]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.286]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.286]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.286]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.286]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.286]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.286]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.286]   .. .. ..@ versionKey:<externalptr> 
[08:25:03.286]   .. .. ..@ sealed    : logi TRUE
[08:25:03.286]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.286]  - attr(*, "where")=List of 1
[08:25:03.286]   ..$ ...:<environment: 0x564c354df008> 
[08:25:03.286]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.286]  - attr(*, "resolved")= logi TRUE
[08:25:03.286]  - attr(*, "total_size")= num NA
[08:25:03.335]  - Getting '...' globals ... DONE
[08:25:03.335] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.335] List of 2
[08:25:03.335]  $ ...future.FUN:function (a, b)  
[08:25:03.335]  $ ...          :List of 1
[08:25:03.335]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:03.335]   .. .. ..@ slots     :List of 4
[08:25:03.335]   .. .. .. ..$ .Data  : chr "function"
[08:25:03.335]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. ..$ target : chr "signature"
[08:25:03.335]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. ..$ defined: chr "signature"
[08:25:03.335]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. ..$ generic: chr "character"
[08:25:03.335]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. ..@ contains  :List of 3
[08:25:03.335]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.335]   .. .. ..@ virtual   : logi FALSE
[08:25:03.335]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:03.335]  list()
[08:25:03.335]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.335]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.335]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.335]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.335]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.335]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.335]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.335]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.335]   .. .. .. .. ..$ generic: chr(0) 
[08:25:03.335]   .. .. ..@ validity  : NULL
[08:25:03.335]   .. .. ..@ access    : list()
[08:25:03.335]   .. .. ..@ className : chr "MethodDefinition"
[08:25:03.335]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. ..@ subclasses:List of 7
[08:25:03.335]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.335]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.335]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.335]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.335]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.335]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.335]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.335]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.335]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.335]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.335]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.335]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.335]   .. .. ..@ versionKey:<externalptr> 
[08:25:03.335]   .. .. ..@ sealed    : logi TRUE
[08:25:03.335]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.335]  - attr(*, "where")=List of 2
[08:25:03.335]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.335]   ..$ ...          :<environment: 0x564c354df008> 
[08:25:03.335]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.335]  - attr(*, "resolved")= logi FALSE
[08:25:03.335]  - attr(*, "total_size")= num 97748
[08:25:03.382] Packages to be attached in all futures: [n=0] 
[08:25:03.382] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.383] Number of futures (= number of chunks): 1
[08:25:03.383] Launching 1 futures (chunks) ...
[08:25:03.383] Chunk #1 of 1 ...
[08:25:03.383]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.383]    + additional globals found: [n=0] 
[08:25:03.383]    + additional namespaces needed: [n=0] 
[08:25:03.383]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.384]  - seeds: <none>
[08:25:03.384]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.386] Created future:
[08:25:03.386] SequentialFuture:
[08:25:03.386] Label: ‘future_lapply-1’
[08:25:03.386] Expression:
[08:25:03.386] {
[08:25:03.386]     do.call(function(...) {
[08:25:03.386]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.386]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.386]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.386]             on.exit(options(oopts), add = TRUE)
[08:25:03.386]         }
[08:25:03.386]         {
[08:25:03.386]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.386]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.386]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.386]             })
[08:25:03.386]         }
[08:25:03.386]     }, args = future.call.arguments)
[08:25:03.386] }
[08:25:03.386] Lazy evaluation: FALSE
[08:25:03.386] Asynchronous evaluation: FALSE
[08:25:03.386] Local evaluation: TRUE
[08:25:03.386] Environment: R_GlobalEnv
[08:25:03.386] Capture standard output: TRUE
[08:25:03.386] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.386] Globals: 5 objects totaling 46.83 KiB (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 46.42 KiB, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.386] Packages: <none>
[08:25:03.386] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.386] Resolved: TRUE
[08:25:03.386] Value: 49 bytes of class ‘list’
[08:25:03.386] Early signaling: FALSE
[08:25:03.386] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.386] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.387] Chunk #1 of 1 ... DONE
[08:25:03.387] Launching 1 futures (chunks) ... DONE
[08:25:03.388] Resolving 1 futures (chunks) ...
[08:25:03.388]  - Number of value chunks collected: 1
[08:25:03.388] Resolving 1 futures (chunks) ... DONE
[08:25:03.388] Reducing values from 1 chunks ...
[08:25:03.388]  - Number of values collected after concatenation: 1
[08:25:03.388]  - Number of values expected: 1
[08:25:03.388] Reducing values from 1 chunks ... DONE
[08:25:03.389] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[08:25:03.390] future_lapply() ...
[08:25:03.391] Number of chunks: 1
[08:25:03.391] getGlobalsAndPackagesXApply() ...
[08:25:03.391]  - future.globals: TRUE
[08:25:03.393]  - globals found/used: [n=1] ‘FUN’
[08:25:03.393]  - needed namespaces: [n=0] 
[08:25:03.393] Finding globals ... DONE
[08:25:03.393]  - use_args: TRUE
[08:25:03.393]  - Getting '...' globals ...
[08:25:03.393]    - '...' content: [n=0] 
[08:25:03.393] List of 1
[08:25:03.393]  $ ...: list()
[08:25:03.393]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.393]  - attr(*, "where")=List of 1
[08:25:03.393]   ..$ ...:<environment: 0x564c36f14e30> 
[08:25:03.393]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.393]  - attr(*, "resolved")= logi TRUE
[08:25:03.393]  - attr(*, "total_size")= num NA
[08:25:03.396]  - Getting '...' globals ... DONE
[08:25:03.396] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.396] List of 2
[08:25:03.396]  $ ...future.FUN:function (f)  
[08:25:03.396]  $ ...          : list()
[08:25:03.396]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.396]  - attr(*, "where")=List of 2
[08:25:03.396]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.396]   ..$ ...          :<environment: 0x564c36f14e30> 
[08:25:03.396]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.396]  - attr(*, "resolved")= logi FALSE
[08:25:03.396]  - attr(*, "total_size")= num 4837
[08:25:03.399] Packages to be attached in all futures: [n=0] 
[08:25:03.399] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.399] Number of futures (= number of chunks): 1
[08:25:03.399] Launching 1 futures (chunks) ...
[08:25:03.399] Chunk #1 of 1 ...
[08:25:03.399]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.401]    + additional globals found: [n=2] ‘a’, ‘b’
[08:25:03.402]    + additional namespaces needed: [n=1] ‘tools’
[08:25:03.404]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.404]  - seeds: <none>
[08:25:03.404]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[08:25:03.407] Created future:
[08:25:03.407] SequentialFuture:
[08:25:03.407] Label: ‘future_lapply-1’
[08:25:03.407] Expression:
[08:25:03.407] {
[08:25:03.407]     do.call(function(...) {
[08:25:03.407]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.407]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.407]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.407]             on.exit(options(oopts), add = TRUE)
[08:25:03.407]         }
[08:25:03.407]         {
[08:25:03.407]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.407]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.407]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.407]             })
[08:25:03.407]         }
[08:25:03.407]     }, args = future.call.arguments)
[08:25:03.407] }
[08:25:03.407] Lazy evaluation: FALSE
[08:25:03.407] Asynchronous evaluation: FALSE
[08:25:03.407] Local evaluation: TRUE
[08:25:03.407] Environment: R_GlobalEnv
[08:25:03.407] Capture standard output: TRUE
[08:25:03.407] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.407] Globals: 7 objects totaling 1.84 KiB (function ‘...future.FUN’ of 225 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 1.40 KiB, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes, ...)
[08:25:03.407] Packages: 1 packages (‘tools’)
[08:25:03.407] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.407] Resolved: TRUE
[08:25:03.407] Value: 91 bytes of class ‘list’
[08:25:03.407] Early signaling: FALSE
[08:25:03.407] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.407] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.408] Chunk #1 of 1 ... DONE
[08:25:03.408] Launching 1 futures (chunks) ... DONE
[08:25:03.408] Resolving 1 futures (chunks) ...
[08:25:03.408]  - Number of value chunks collected: 1
[08:25:03.408] Resolving 1 futures (chunks) ... DONE
[08:25:03.408] Reducing values from 1 chunks ...
[08:25:03.409]  - Number of values collected after concatenation: 4
[08:25:03.409]  - Number of values expected: 4
[08:25:03.409] Reducing values from 1 chunks ... DONE
[08:25:03.409] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[08:25:03.411] future_lapply() ...
[08:25:03.412] Number of chunks: 1
[08:25:03.412] getGlobalsAndPackagesXApply() ...
[08:25:03.412]  - future.globals: TRUE
[08:25:03.414]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[08:25:03.414]  - needed namespaces: [n=0] 
[08:25:03.414] Finding globals ... DONE
[08:25:03.414]  - use_args: TRUE
[08:25:03.415]  - Getting '...' globals ...
[08:25:03.415]    - '...' content: [n=0] 
[08:25:03.415] List of 1
[08:25:03.415]  $ ...: list()
[08:25:03.415]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.415]  - attr(*, "where")=List of 1
[08:25:03.415]   ..$ ...:<environment: 0x564c35b95710> 
[08:25:03.415]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.415]  - attr(*, "resolved")= logi TRUE
[08:25:03.415]  - attr(*, "total_size")= num NA
[08:25:03.417]  - Getting '...' globals ... DONE
[08:25:03.417] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[08:25:03.418] List of 3
[08:25:03.418]  $ ...future.FUN        :function (x)  
[08:25:03.418]  $ future.call.arguments:List of 1
[08:25:03.418]   ..$ a: num 1
[08:25:03.418]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.418]  $ ...                  : list()
[08:25:03.418]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.418]  - attr(*, "where")=List of 3
[08:25:03.418]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[08:25:03.418]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[08:25:03.418]   ..$ ...                  :<environment: 0x564c35b95710> 
[08:25:03.418]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.418]  - attr(*, "resolved")= logi FALSE
[08:25:03.418]  - attr(*, "total_size")= num 3563
[08:25:03.421] Packages to be attached in all futures: [n=0] 
[08:25:03.421] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.421] Number of futures (= number of chunks): 1
[08:25:03.422] Launching 1 futures (chunks) ...
[08:25:03.422] Chunk #1 of 1 ...
[08:25:03.422]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.422]    + additional globals found: [n=0] 
[08:25:03.422]    + additional namespaces needed: [n=0] 
[08:25:03.422]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.422]  - seeds: <none>
[08:25:03.422]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.425] Created future:
[08:25:03.425] SequentialFuture:
[08:25:03.425] Label: ‘future_lapply-1’
[08:25:03.425] Expression:
[08:25:03.425] {
[08:25:03.425]     do.call(function(...) {
[08:25:03.425]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.425]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.425]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.425]             on.exit(options(oopts), add = TRUE)
[08:25:03.425]         }
[08:25:03.425]         {
[08:25:03.425]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.425]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.425]                 ...future.FUN(...future.X_jj)
[08:25:03.425]             })
[08:25:03.425]         }
[08:25:03.425]     }, args = future.call.arguments)
[08:25:03.425] }
[08:25:03.425] Lazy evaluation: FALSE
[08:25:03.425] Asynchronous evaluation: FALSE
[08:25:03.425] Local evaluation: TRUE
[08:25:03.425] Environment: 0x564c35b95358
[08:25:03.425] Capture standard output: TRUE
[08:25:03.425] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.425] Globals: 5 objects totaling 613 bytes (function ‘...future.FUN’ of 361 bytes, DotDotDotList ‘future.call.arguments’ of 151 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.425] Packages: <none>
[08:25:03.425] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.425] Resolved: TRUE
[08:25:03.425] Value: 97 bytes of class ‘list’
[08:25:03.425] Early signaling: FALSE
[08:25:03.425] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.425] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.426] Chunk #1 of 1 ... DONE
[08:25:03.426] Launching 1 futures (chunks) ... DONE
[08:25:03.426] Resolving 1 futures (chunks) ...
[08:25:03.427]  - Number of value chunks collected: 1
[08:25:03.427] Resolving 1 futures (chunks) ... DONE
[08:25:03.427] Reducing values from 1 chunks ...
[08:25:03.427]  - Number of values collected after concatenation: 1
[08:25:03.427]  - Number of values expected: 1
[08:25:03.427] Reducing values from 1 chunks ... DONE
[08:25:03.427] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[08:25:03.428] future_lapply() ...
[08:25:03.429] Number of chunks: 1
[08:25:03.429] getGlobalsAndPackagesXApply() ...
[08:25:03.429]  - future.globals: TRUE
[08:25:03.431]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:03.431]  - needed namespaces: [n=0] 
[08:25:03.432] Finding globals ... DONE
[08:25:03.432]  - use_args: TRUE
[08:25:03.432]  - Getting '...' globals ...
[08:25:03.432]    - '...' content: [n=0] 
[08:25:03.432] List of 1
[08:25:03.432]  $ ...: list()
[08:25:03.432]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.432]  - attr(*, "where")=List of 1
[08:25:03.432]   ..$ ...:<environment: 0x564c33db9890> 
[08:25:03.432]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.432]  - attr(*, "resolved")= logi TRUE
[08:25:03.432]  - attr(*, "total_size")= num NA
[08:25:03.434]  - Getting '...' globals ... DONE
[08:25:03.435] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:03.435] List of 3
[08:25:03.435]  $ ...future.FUN:function (ii)  
[08:25:03.435]  $ a            : num 1
[08:25:03.435]  $ ...          : list()
[08:25:03.435]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.435]  - attr(*, "where")=List of 3
[08:25:03.435]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.435]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.435]   ..$ ...          :<environment: 0x564c33db9890> 
[08:25:03.435]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.435]  - attr(*, "resolved")= logi FALSE
[08:25:03.435]  - attr(*, "total_size")= num 3759
[08:25:03.438] Packages to be attached in all futures: [n=0] 
[08:25:03.438] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.438] Number of futures (= number of chunks): 1
[08:25:03.438] Launching 1 futures (chunks) ...
[08:25:03.438] Chunk #1 of 1 ...
[08:25:03.438]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.439]    + additional globals found: [n=0] 
[08:25:03.439]    + additional namespaces needed: [n=0] 
[08:25:03.439]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.439]  - seeds: <none>
[08:25:03.439]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.442] Created future:
[08:25:03.442] SequentialFuture:
[08:25:03.442] Label: ‘future_lapply-1’
[08:25:03.442] Expression:
[08:25:03.442] {
[08:25:03.442]     do.call(function(...) {
[08:25:03.442]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.442]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.442]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.442]             on.exit(options(oopts), add = TRUE)
[08:25:03.442]         }
[08:25:03.442]         {
[08:25:03.442]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.442]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.442]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.442]             })
[08:25:03.442]         }
[08:25:03.442]     }, args = future.call.arguments)
[08:25:03.442] }
[08:25:03.442] Lazy evaluation: FALSE
[08:25:03.442] Asynchronous evaluation: FALSE
[08:25:03.442] Local evaluation: TRUE
[08:25:03.442] Environment: R_GlobalEnv
[08:25:03.442] Capture standard output: TRUE
[08:25:03.442] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.442] Globals: 6 objects totaling 748 bytes (function ‘...future.FUN’ of 511 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.442] Packages: <none>
[08:25:03.442] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.442] Resolved: TRUE
[08:25:03.442] Value: 47 bytes of class ‘list’
[08:25:03.442] Early signaling: FALSE
[08:25:03.442] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.442] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.443] Chunk #1 of 1 ... DONE
[08:25:03.443] Launching 1 futures (chunks) ... DONE
[08:25:03.443] Resolving 1 futures (chunks) ...
[08:25:03.443]  - Number of value chunks collected: 1
[08:25:03.443] Resolving 1 futures (chunks) ... DONE
[08:25:03.443] Reducing values from 1 chunks ...
[08:25:03.444]  - Number of values collected after concatenation: 1
[08:25:03.444]  - Number of values expected: 1
[08:25:03.444] Reducing values from 1 chunks ... DONE
[08:25:03.444] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[08:25:03.444] future_lapply() ...
[08:25:03.445] Number of chunks: 1
[08:25:03.445] getGlobalsAndPackagesXApply() ...
[08:25:03.445]  - future.globals: TRUE
[08:25:03.447]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:03.447]  - needed namespaces: [n=0] 
[08:25:03.447] Finding globals ... DONE
[08:25:03.447]  - use_args: TRUE
[08:25:03.447]  - Getting '...' globals ...
[08:25:03.448]    - '...' content: [n=0] 
[08:25:03.448] List of 1
[08:25:03.448]  $ ...: list()
[08:25:03.448]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.448]  - attr(*, "where")=List of 1
[08:25:03.448]   ..$ ...:<environment: 0x564c37050c90> 
[08:25:03.448]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.448]  - attr(*, "resolved")= logi TRUE
[08:25:03.448]  - attr(*, "total_size")= num NA
[08:25:03.450]  - Getting '...' globals ... DONE
[08:25:03.450] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:03.450] List of 3
[08:25:03.450]  $ ...future.FUN:function (ii)  
[08:25:03.450]  $ a            : num 1
[08:25:03.450]  $ ...          : list()
[08:25:03.450]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.450]  - attr(*, "where")=List of 3
[08:25:03.450]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.450]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.450]   ..$ ...          :<environment: 0x564c37050c90> 
[08:25:03.450]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.450]  - attr(*, "resolved")= logi FALSE
[08:25:03.450]  - attr(*, "total_size")= num 3775
[08:25:03.456] Packages to be attached in all futures: [n=0] 
[08:25:03.456] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.456] Number of futures (= number of chunks): 1
[08:25:03.456] Launching 1 futures (chunks) ...
[08:25:03.456] Chunk #1 of 1 ...
[08:25:03.456]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.457]    + additional globals found: [n=0] 
[08:25:03.457]    + additional namespaces needed: [n=0] 
[08:25:03.457]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.457]  - seeds: <none>
[08:25:03.457]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.459] Created future:
[08:25:03.460] SequentialFuture:
[08:25:03.460] Label: ‘future_lapply-1’
[08:25:03.460] Expression:
[08:25:03.460] {
[08:25:03.460]     do.call(function(...) {
[08:25:03.460]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.460]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.460]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.460]             on.exit(options(oopts), add = TRUE)
[08:25:03.460]         }
[08:25:03.460]         {
[08:25:03.460]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.460]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.460]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.460]             })
[08:25:03.460]         }
[08:25:03.460]     }, args = future.call.arguments)
[08:25:03.460] }
[08:25:03.460] Lazy evaluation: FALSE
[08:25:03.460] Asynchronous evaluation: FALSE
[08:25:03.460] Local evaluation: TRUE
[08:25:03.460] Environment: R_GlobalEnv
[08:25:03.460] Capture standard output: TRUE
[08:25:03.460] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.460] Globals: 6 objects totaling 756 bytes (function ‘...future.FUN’ of 519 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.460] Packages: <none>
[08:25:03.460] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.460] Resolved: TRUE
[08:25:03.460] Value: 47 bytes of class ‘list’
[08:25:03.460] Early signaling: FALSE
[08:25:03.460] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.460] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.460] Chunk #1 of 1 ... DONE
[08:25:03.461] Launching 1 futures (chunks) ... DONE
[08:25:03.461] Resolving 1 futures (chunks) ...
[08:25:03.461]  - Number of value chunks collected: 1
[08:25:03.461] Resolving 1 futures (chunks) ... DONE
[08:25:03.461] Reducing values from 1 chunks ...
[08:25:03.461]  - Number of values collected after concatenation: 1
[08:25:03.461]  - Number of values expected: 1
[08:25:03.461] Reducing values from 1 chunks ... DONE
[08:25:03.462] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[08:25:03.462] future_lapply() ...
[08:25:03.462] Number of chunks: 1
[08:25:03.462] getGlobalsAndPackagesXApply() ...
[08:25:03.462]  - future.globals: <name-value list> with names ‘42’
[08:25:03.463]  - use_args: TRUE
[08:25:03.463]  - Getting '...' globals ...
[08:25:03.463]    - '...' content: [n=0] 
[08:25:03.463] List of 1
[08:25:03.463]  $ ...: list()
[08:25:03.463]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.463]  - attr(*, "where")=List of 1
[08:25:03.463]   ..$ ...:<environment: 0x564c35b9c2f0> 
[08:25:03.463]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.463]  - attr(*, "resolved")= logi TRUE
[08:25:03.463]  - attr(*, "total_size")= num NA
[08:25:03.465]  - Getting '...' globals ... DONE
[08:25:03.466] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[08:25:03.466] List of 3
[08:25:03.466]  $ a            : num 42
[08:25:03.466]  $ ...future.FUN:function (x)  
[08:25:03.466]  $ ...          : list()
[08:25:03.466]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.466]  - attr(*, "where")=List of 3
[08:25:03.466]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.466]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[08:25:03.466]   ..$ ...          :<environment: 0x564c35b9c2f0> 
[08:25:03.466]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.466]  - attr(*, "resolved")= logi FALSE
[08:25:03.466]  - attr(*, "total_size")= num NA
[08:25:03.469] Packages to be attached in all futures: [n=0] 
[08:25:03.469] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.469] Number of futures (= number of chunks): 1
[08:25:03.469] Launching 1 futures (chunks) ...
[08:25:03.469] Chunk #1 of 1 ...
[08:25:03.470]  - seeds: <none>
[08:25:03.470]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.473] Created future:
[08:25:03.473] SequentialFuture:
[08:25:03.473] Label: ‘future_lapply-1’
[08:25:03.473] Expression:
[08:25:03.473] {
[08:25:03.473]     do.call(function(...) {
[08:25:03.473]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.473]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.473]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.473]             on.exit(options(oopts), add = TRUE)
[08:25:03.473]         }
[08:25:03.473]         {
[08:25:03.473]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.473]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.473]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.473]             })
[08:25:03.473]         }
[08:25:03.473]     }, args = future.call.arguments)
[08:25:03.473] }
[08:25:03.473] Lazy evaluation: FALSE
[08:25:03.473] Asynchronous evaluation: FALSE
[08:25:03.473] Local evaluation: TRUE
[08:25:03.473] Environment: R_GlobalEnv
[08:25:03.473] Capture standard output: TRUE
[08:25:03.473] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.473] Globals: 6 objects totaling 535 bytes (numeric ‘a’ of 39 bytes, function ‘...future.FUN’ of 298 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.473] Packages: <none>
[08:25:03.473] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.473] Resolved: TRUE
[08:25:03.473] Value: 47 bytes of class ‘list’
[08:25:03.473] Early signaling: FALSE
[08:25:03.473] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.473] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[08:25:03.473] Chunk #1 of 1 ... DONE
[08:25:03.474] Launching 1 futures (chunks) ... DONE
[08:25:03.474] Resolving 1 futures (chunks) ...
[08:25:03.474]  - Number of value chunks collected: 1
[08:25:03.474] Resolving 1 futures (chunks) ... DONE
[08:25:03.474] Reducing values from 1 chunks ...
[08:25:03.474]  - Number of values collected after concatenation: 1
[08:25:03.474]  - Number of values expected: 1
[08:25:03.475] Reducing values from 1 chunks ... DONE
[08:25:03.475] future_lapply() ... DONE
List of 1
 $ : num 42
[08:25:03.480] future_lapply() ...
[08:25:03.483] Number of chunks: 2
[08:25:03.483] getGlobalsAndPackagesXApply() ...
[08:25:03.484]  - future.globals: TRUE
[08:25:03.488]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[08:25:03.488]  - needed namespaces: [n=0] 
[08:25:03.489] Finding globals ... DONE
[08:25:03.489]  - use_args: TRUE
[08:25:03.489]  - Getting '...' globals ...
[08:25:03.489]    - '...' content: [n=0] 
[08:25:03.489] List of 1
[08:25:03.489]  $ ...: list()
[08:25:03.489]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.489]  - attr(*, "where")=List of 1
[08:25:03.489]   ..$ ...:<environment: 0x564c335621d0> 
[08:25:03.489]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.489]  - attr(*, "resolved")= logi TRUE
[08:25:03.489]  - attr(*, "total_size")= num NA
[08:25:03.492]  - Getting '...' globals ... DONE
[08:25:03.492] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[08:25:03.492] List of 6
[08:25:03.492]  $ ...future.FUN:function (i)  
[08:25:03.492]  $ caller       :function (a, b, FUN = call_my_add)  
[08:25:03.492]  $ args         :List of 1
[08:25:03.492]   ..$ FUN:function (a, b)  
[08:25:03.492]  $ call_my_add  :function (a, b)  
[08:25:03.492]  $ my_add       :function (a, b)  
[08:25:03.492]  $ ...          : list()
[08:25:03.492]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.492]  - attr(*, "where")=List of 6
[08:25:03.492]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.492]   ..$ caller       :<environment: R_EmptyEnv> 
[08:25:03.492]   ..$ args         :<environment: R_EmptyEnv> 
[08:25:03.492]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[08:25:03.492]   ..$ my_add       :<environment: R_EmptyEnv> 
[08:25:03.492]   ..$ ...          :<environment: 0x564c335621d0> 
[08:25:03.492]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.492]  - attr(*, "resolved")= logi FALSE
[08:25:03.492]  - attr(*, "total_size")= num 11089
[08:25:03.496] Packages to be attached in all futures: [n=0] 
[08:25:03.497] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.497] Number of futures (= number of chunks): 2
[08:25:03.497] Launching 2 futures (chunks) ...
[08:25:03.497] Chunk #1 of 2 ...
[08:25:03.497]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.497]    + additional globals found: [n=0] 
[08:25:03.497]    + additional namespaces needed: [n=0] 
[08:25:03.498]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.498]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:03.498]  - seeds: <none>
[08:25:03.498]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.505] Created future:
[08:25:03.506] MulticoreFuture:
[08:25:03.506] Label: ‘future_lapply-1’
[08:25:03.506] Expression:
[08:25:03.506] {
[08:25:03.506]     do.call(function(...) {
[08:25:03.506]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.506]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.506]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.506]             on.exit(options(oopts), add = TRUE)
[08:25:03.506]         }
[08:25:03.506]         {
[08:25:03.506]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.506]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.506]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.506]             })
[08:25:03.506]         }
[08:25:03.506]     }, args = future.call.arguments)
[08:25:03.506] }
[08:25:03.506] Lazy evaluation: FALSE
[08:25:03.506] Asynchronous evaluation: TRUE
[08:25:03.506] Local evaluation: TRUE
[08:25:03.506] Environment: 0x564c341fc538
[08:25:03.506] Capture standard output: TRUE
[08:25:03.506] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.506] Globals: 9 objects totaling 5.17 KiB (function ‘...future.FUN’ of 2.67 KiB, function ‘caller’ of 247 bytes, list ‘args’ of 928 bytes, function ‘call_my_add’ of 876 bytes, function ‘my_add’ of 311 bytes, ...)
[08:25:03.506] Packages: <none>
[08:25:03.506] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.506] Resolved: TRUE
[08:25:03.506] Value: <not collected>
[08:25:03.506] Conditions captured: <none>
[08:25:03.506] Early signaling: FALSE
[08:25:03.506] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.506] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.512] Chunk #1 of 2 ... DONE
[08:25:03.512] Chunk #2 of 2 ...
[08:25:03.513]  - Finding globals in 'X' for chunk #2 ...
[08:25:03.520]    + additional globals found: [n=0] 
[08:25:03.520]    + additional namespaces needed: [n=0] 
[08:25:03.520]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:03.520]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:03.520]  - seeds: <none>
[08:25:03.521]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.530] Created future:
[08:25:03.530] MulticoreFuture:
[08:25:03.530] Label: ‘future_lapply-2’
[08:25:03.530] Expression:
[08:25:03.530] {
[08:25:03.530]     do.call(function(...) {
[08:25:03.530]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.530]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.530]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.530]             on.exit(options(oopts), add = TRUE)
[08:25:03.530]         }
[08:25:03.530]         {
[08:25:03.530]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.530]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.530]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.530]             })
[08:25:03.530]         }
[08:25:03.530]     }, args = future.call.arguments)
[08:25:03.530] }
[08:25:03.530] Lazy evaluation: FALSE
[08:25:03.530] Asynchronous evaluation: TRUE
[08:25:03.530] Local evaluation: TRUE
[08:25:03.530] Environment: 0x564c341fc538
[08:25:03.530] Capture standard output: TRUE
[08:25:03.530] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.530] Globals: 9 objects totaling 5.18 KiB (function ‘...future.FUN’ of 2.67 KiB, function ‘caller’ of 247 bytes, list ‘args’ of 928 bytes, function ‘call_my_add’ of 876 bytes, function ‘my_add’ of 311 bytes, ...)
[08:25:03.530] Packages: <none>
[08:25:03.530] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.530] Resolved: TRUE
[08:25:03.530] Value: <not collected>
[08:25:03.530] Conditions captured: <none>
[08:25:03.530] Early signaling: FALSE
[08:25:03.530] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.530] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.537] Chunk #2 of 2 ... DONE
[08:25:03.537] Launching 2 futures (chunks) ... DONE
[08:25:03.537] Resolving 2 futures (chunks) ...
[08:25:03.543]  - Number of value chunks collected: 2
[08:25:03.543] Resolving 2 futures (chunks) ... DONE
[08:25:03.543] Reducing values from 2 chunks ...
[08:25:03.543]  - Number of values collected after concatenation: 3
[08:25:03.543]  - Number of values expected: 3
[08:25:03.544] Reducing values from 2 chunks ... DONE
[08:25:03.544] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[08:25:03.544] future_lapply() ...
[08:25:03.548] Number of chunks: 1
[08:25:03.548] getGlobalsAndPackagesXApply() ...
[08:25:03.548]  - future.globals: TRUE
[08:25:03.552]  - globals found/used: [n=1] ‘FUN’
[08:25:03.552]  - needed namespaces: [n=0] 
[08:25:03.552] Finding globals ... DONE
[08:25:03.552]  - use_args: TRUE
[08:25:03.552]  - Getting '...' globals ...
[08:25:03.553]    - '...' content: [n=1] ‘what’
[08:25:03.553] List of 1
[08:25:03.553]  $ ...:List of 1
[08:25:03.553]   ..$ what:function (x)  
[08:25:03.553]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.553]  - attr(*, "where")=List of 1
[08:25:03.553]   ..$ ...:<environment: 0x564c35c0a868> 
[08:25:03.553]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.553]  - attr(*, "resolved")= logi TRUE
[08:25:03.553]  - attr(*, "total_size")= num NA
[08:25:03.556]  - Getting '...' globals ... DONE
[08:25:03.556] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.557] List of 2
[08:25:03.557]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:03.557]  $ ...          :List of 1
[08:25:03.557]   ..$ what:function (x)  
[08:25:03.557]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.557]  - attr(*, "where")=List of 2
[08:25:03.557]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.557]   ..$ ...          :<environment: 0x564c35c0a868> 
[08:25:03.557]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.557]  - attr(*, "resolved")= logi FALSE
[08:25:03.557]  - attr(*, "total_size")= num 6909
[08:25:03.560] Packages to be attached in all futures: [n=0] 
[08:25:03.560] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.561] Number of futures (= number of chunks): 1
[08:25:03.561] Launching 1 futures (chunks) ...
[08:25:03.561] Chunk #1 of 1 ...
[08:25:03.561]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.561]    + additional globals found: [n=0] 
[08:25:03.562]    + additional namespaces needed: [n=0] 
[08:25:03.562]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.562]  - seeds: <none>
[08:25:03.562]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.568] Created future:
[08:25:03.569] MulticoreFuture:
[08:25:03.569] Label: ‘future_lapply-1’
[08:25:03.569] Expression:
[08:25:03.569] {
[08:25:03.569]     do.call(function(...) {
[08:25:03.569]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.569]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.569]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.569]             on.exit(options(oopts), add = TRUE)
[08:25:03.569]         }
[08:25:03.569]         {
[08:25:03.569]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.569]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.569]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.569]             })
[08:25:03.569]         }
[08:25:03.569]     }, args = future.call.arguments)
[08:25:03.569] }
[08:25:03.569] Lazy evaluation: FALSE
[08:25:03.569] Asynchronous evaluation: TRUE
[08:25:03.569] Local evaluation: TRUE
[08:25:03.569] Environment: R_GlobalEnv
[08:25:03.569] Capture standard output: TRUE
[08:25:03.569] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.569] Globals: 5 objects totaling 2.13 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 152 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.569] Packages: <none>
[08:25:03.569] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.569] Resolved: TRUE
[08:25:03.569] Value: <not collected>
[08:25:03.569] Conditions captured: <none>
[08:25:03.569] Early signaling: FALSE
[08:25:03.569] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.569] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.575] Chunk #1 of 1 ... DONE
[08:25:03.575] Launching 1 futures (chunks) ... DONE
[08:25:03.575] Resolving 1 futures (chunks) ...
[08:25:03.577]  - Number of value chunks collected: 1
[08:25:03.578] Resolving 1 futures (chunks) ... DONE
[08:25:03.578] Reducing values from 1 chunks ...
[08:25:03.578]  - Number of values collected after concatenation: 1
[08:25:03.578]  - Number of values expected: 1
[08:25:03.578] Reducing values from 1 chunks ... DONE
[08:25:03.578] future_lapply() ... DONE
[08:25:03.579] future_lapply() ...
[08:25:03.583] Number of chunks: 1
[08:25:03.583] getGlobalsAndPackagesXApply() ...
[08:25:03.583]  - future.globals: TRUE
[08:25:03.586]  - globals found/used: [n=1] ‘FUN’
[08:25:03.586]  - needed namespaces: [n=0] 
[08:25:03.586] Finding globals ... DONE
[08:25:03.587]  - use_args: TRUE
[08:25:03.587]  - Getting '...' globals ...
[08:25:03.587]    - '...' content: [n=1] ‘what’
[08:25:03.587] List of 1
[08:25:03.587]  $ ...:List of 1
[08:25:03.587]   ..$ what:function (...)  
[08:25:03.587]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.587]  - attr(*, "where")=List of 1
[08:25:03.587]   ..$ ...:<environment: 0x564c33580550> 
[08:25:03.587]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.587]  - attr(*, "resolved")= logi TRUE
[08:25:03.587]  - attr(*, "total_size")= num NA
[08:25:03.591]  - Getting '...' globals ... DONE
[08:25:03.591] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.591] List of 2
[08:25:03.591]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:03.591]  $ ...          :List of 1
[08:25:03.591]   ..$ what:function (...)  
[08:25:03.591]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.591]  - attr(*, "where")=List of 2
[08:25:03.591]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.591]   ..$ ...          :<environment: 0x564c33580550> 
[08:25:03.591]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.591]  - attr(*, "resolved")= logi FALSE
[08:25:03.591]  - attr(*, "total_size")= num 7345
[08:25:03.595] Packages to be attached in all futures: [n=0] 
[08:25:03.595] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.595] Number of futures (= number of chunks): 1
[08:25:03.595] Launching 1 futures (chunks) ...
[08:25:03.595] Chunk #1 of 1 ...
[08:25:03.595]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.596]    + additional globals found: [n=0] 
[08:25:03.596]    + additional namespaces needed: [n=0] 
[08:25:03.596]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.596]  - seeds: <none>
[08:25:03.596]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.602] Created future:
[08:25:03.603] MulticoreFuture:
[08:25:03.603] Label: ‘future_lapply-1’
[08:25:03.603] Expression:
[08:25:03.603] {
[08:25:03.603]     do.call(function(...) {
[08:25:03.603]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.603]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.603]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.603]             on.exit(options(oopts), add = TRUE)
[08:25:03.603]         }
[08:25:03.603]         {
[08:25:03.603]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.603]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.603]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.603]             })
[08:25:03.603]         }
[08:25:03.603]     }, args = future.call.arguments)
[08:25:03.603] }
[08:25:03.603] Lazy evaluation: FALSE
[08:25:03.603] Asynchronous evaluation: TRUE
[08:25:03.603] Local evaluation: TRUE
[08:25:03.603] Environment: R_GlobalEnv
[08:25:03.603] Capture standard output: TRUE
[08:25:03.603] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.603] Globals: 5 objects totaling 2.36 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 388 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.603] Packages: <none>
[08:25:03.603] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.603] Resolved: TRUE
[08:25:03.603] Value: <not collected>
[08:25:03.603] Conditions captured: <none>
[08:25:03.603] Early signaling: FALSE
[08:25:03.603] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.603] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.609] Chunk #1 of 1 ... DONE
[08:25:03.609] Launching 1 futures (chunks) ... DONE
[08:25:03.609] Resolving 1 futures (chunks) ...
[08:25:03.611]  - Number of value chunks collected: 1
[08:25:03.611] Resolving 1 futures (chunks) ... DONE
[08:25:03.611] Reducing values from 1 chunks ...
[08:25:03.611]  - Number of values collected after concatenation: 1
[08:25:03.611]  - Number of values expected: 1
[08:25:03.611] Reducing values from 1 chunks ... DONE
[08:25:03.611] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[08:25:03.612] future_lapply() ...
[08:25:03.615] Number of chunks: 1
[08:25:03.615] getGlobalsAndPackagesXApply() ...
[08:25:03.615]  - future.globals: TRUE
[08:25:03.617]  - globals found/used: [n=1] ‘FUN’
[08:25:03.620]  - needed namespaces: [n=0] 
[08:25:03.620] Finding globals ... DONE
[08:25:03.620]  - use_args: TRUE
[08:25:03.620]  - Getting '...' globals ...
[08:25:03.621]    - '...' content: [n=1] ‘b’
[08:25:03.621] List of 1
[08:25:03.621]  $ ...:List of 1
[08:25:03.621]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:03.621]   .. ..$ a: int [1:2] 1 2
[08:25:03.621]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.621]  - attr(*, "where")=List of 1
[08:25:03.621]   ..$ ...:<environment: 0x564c37267e98> 
[08:25:03.621]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.621]  - attr(*, "resolved")= logi TRUE
[08:25:03.621]  - attr(*, "total_size")= num NA
[08:25:03.625]  - Getting '...' globals ... DONE
[08:25:03.625] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.625] List of 2
[08:25:03.625]  $ ...future.FUN:function (a, b)  
[08:25:03.625]  $ ...          :List of 1
[08:25:03.625]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:03.625]   .. ..$ a: int [1:2] 1 2
[08:25:03.625]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.625]  - attr(*, "where")=List of 2
[08:25:03.625]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.625]   ..$ ...          :<environment: 0x564c37267e98> 
[08:25:03.625]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.625]  - attr(*, "resolved")= logi FALSE
[08:25:03.625]  - attr(*, "total_size")= num 4163
[08:25:03.629] Packages to be attached in all futures: [n=0] 
[08:25:03.629] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.630] Number of futures (= number of chunks): 1
[08:25:03.630] Launching 1 futures (chunks) ...
[08:25:03.630] Chunk #1 of 1 ...
[08:25:03.630]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.630]    + additional globals found: [n=0] 
[08:25:03.630]    + additional namespaces needed: [n=0] 
[08:25:03.631]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.631]  - seeds: <none>
[08:25:03.631]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.637] Created future:
[08:25:03.637] MulticoreFuture:
[08:25:03.637] Label: ‘future_lapply-1’
[08:25:03.637] Expression:
[08:25:03.637] {
[08:25:03.637]     do.call(function(...) {
[08:25:03.637]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.637]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.637]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.637]             on.exit(options(oopts), add = TRUE)
[08:25:03.637]         }
[08:25:03.637]         {
[08:25:03.637]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.637]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.637]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.637]             })
[08:25:03.637]         }
[08:25:03.637]     }, args = future.call.arguments)
[08:25:03.637] }
[08:25:03.637] Lazy evaluation: FALSE
[08:25:03.637] Asynchronous evaluation: TRUE
[08:25:03.637] Local evaluation: TRUE
[08:25:03.637] Environment: R_GlobalEnv
[08:25:03.637] Capture standard output: TRUE
[08:25:03.637] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.637] Globals: 5 objects totaling 786 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 357 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.637] Packages: <none>
[08:25:03.637] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.637] Resolved: TRUE
[08:25:03.637] Value: <not collected>
[08:25:03.637] Conditions captured: <none>
[08:25:03.637] Early signaling: FALSE
[08:25:03.637] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.637] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.644] Chunk #1 of 1 ... DONE
[08:25:03.644] Launching 1 futures (chunks) ... DONE
[08:25:03.644] Resolving 1 futures (chunks) ...
[08:25:03.646]  - Number of value chunks collected: 1
[08:25:03.646] Resolving 1 futures (chunks) ... DONE
[08:25:03.646] Reducing values from 1 chunks ...
[08:25:03.646]  - Number of values collected after concatenation: 1
[08:25:03.647]  - Number of values expected: 1
[08:25:03.647] Reducing values from 1 chunks ... DONE
[08:25:03.647] future_lapply() ... DONE
[08:25:03.647] future_lapply() ...
[08:25:03.650] Number of chunks: 1
[08:25:03.650] getGlobalsAndPackagesXApply() ...
[08:25:03.650]  - future.globals: TRUE
[08:25:03.652]  - globals found/used: [n=1] ‘FUN’
[08:25:03.652]  - needed namespaces: [n=0] 
[08:25:03.653] Finding globals ... DONE
[08:25:03.653]  - use_args: TRUE
[08:25:03.653]  - Getting '...' globals ...
[08:25:03.653]    - '...' content: [n=1] ‘b’
[08:25:03.653] List of 1
[08:25:03.653]  $ ...:List of 1
[08:25:03.653]   ..$ b:<environment: 0x564c3567df48> 
[08:25:03.653]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.653]  - attr(*, "where")=List of 1
[08:25:03.653]   ..$ ...:<environment: 0x564c3567ea00> 
[08:25:03.653]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.653]  - attr(*, "resolved")= logi TRUE
[08:25:03.653]  - attr(*, "total_size")= num NA
[08:25:03.657]  - Getting '...' globals ... DONE
[08:25:03.657] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.657] List of 2
[08:25:03.657]  $ ...future.FUN:function (a, b)  
[08:25:03.657]  $ ...          :List of 1
[08:25:03.657]   ..$ b:<environment: 0x564c3567df48> 
[08:25:03.657]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.657]  - attr(*, "where")=List of 2
[08:25:03.657]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.657]   ..$ ...          :<environment: 0x564c3567ea00> 
[08:25:03.657]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.657]  - attr(*, "resolved")= logi FALSE
[08:25:03.657]  - attr(*, "total_size")= num 3918
[08:25:03.661] Packages to be attached in all futures: [n=0] 
[08:25:03.661] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.661] Number of futures (= number of chunks): 1
[08:25:03.662] Launching 1 futures (chunks) ...
[08:25:03.662] Chunk #1 of 1 ...
[08:25:03.662]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.662]    + additional globals found: [n=0] 
[08:25:03.662]    + additional namespaces needed: [n=0] 
[08:25:03.662]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.663]  - seeds: <none>
[08:25:03.663]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.669] Created future:
[08:25:03.669] MulticoreFuture:
[08:25:03.669] Label: ‘future_lapply-1’
[08:25:03.669] Expression:
[08:25:03.669] {
[08:25:03.669]     do.call(function(...) {
[08:25:03.669]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.669]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.669]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.669]             on.exit(options(oopts), add = TRUE)
[08:25:03.669]         }
[08:25:03.669]         {
[08:25:03.669]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.669]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.669]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.669]             })
[08:25:03.669]         }
[08:25:03.669]     }, args = future.call.arguments)
[08:25:03.669] }
[08:25:03.669] Lazy evaluation: FALSE
[08:25:03.669] Asynchronous evaluation: TRUE
[08:25:03.669] Local evaluation: TRUE
[08:25:03.669] Environment: R_GlobalEnv
[08:25:03.669] Capture standard output: TRUE
[08:25:03.669] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.669] Globals: 5 objects totaling 708 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 279 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.669] Packages: <none>
[08:25:03.669] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.669] Resolved: TRUE
[08:25:03.669] Value: <not collected>
[08:25:03.669] Conditions captured: <none>
[08:25:03.669] Early signaling: FALSE
[08:25:03.669] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.669] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.676] Chunk #1 of 1 ... DONE
[08:25:03.676] Launching 1 futures (chunks) ... DONE
[08:25:03.676] Resolving 1 futures (chunks) ...
[08:25:03.678]  - Number of value chunks collected: 1
[08:25:03.678] Resolving 1 futures (chunks) ... DONE
[08:25:03.678] Reducing values from 1 chunks ...
[08:25:03.678]  - Number of values collected after concatenation: 1
[08:25:03.678]  - Number of values expected: 1
[08:25:03.678] Reducing values from 1 chunks ... DONE
[08:25:03.678] future_lapply() ... DONE
[08:25:03.679] future_lapply() ...
[08:25:03.681] Number of chunks: 1
[08:25:03.681] getGlobalsAndPackagesXApply() ...
[08:25:03.682]  - future.globals: TRUE
[08:25:03.684]  - globals found/used: [n=1] ‘FUN’
[08:25:03.684]  - needed namespaces: [n=0] 
[08:25:03.685] Finding globals ... DONE
[08:25:03.685]  - use_args: TRUE
[08:25:03.685]  - Getting '...' globals ...
[08:25:03.685]    - '...' content: [n=1] ‘b’
[08:25:03.685] List of 1
[08:25:03.685]  $ ...:List of 1
[08:25:03.685]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:03.685]   .. .. ..@ slots     :List of 4
[08:25:03.685]   .. .. .. ..$ .Data  : chr "function"
[08:25:03.685]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. ..$ target : chr "signature"
[08:25:03.685]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. ..$ defined: chr "signature"
[08:25:03.685]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. ..$ generic: chr "character"
[08:25:03.685]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. ..@ contains  :List of 3
[08:25:03.685]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.685]   .. .. ..@ virtual   : logi FALSE
[08:25:03.685]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:03.685]  list()
[08:25:03.685]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.685]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.685]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.685]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.685]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.685]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.685]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.685]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.685]   .. .. .. .. ..$ generic: chr(0) 
[08:25:03.685]   .. .. ..@ validity  : NULL
[08:25:03.685]   .. .. ..@ access    : list()
[08:25:03.685]   .. .. ..@ className : chr "MethodDefinition"
[08:25:03.685]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. ..@ subclasses:List of 7
[08:25:03.685]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.685]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.685]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.685]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.685]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.685]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.685]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.685]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.685]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.685]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.685]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.685]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.685]   .. .. ..@ versionKey:<externalptr> 
[08:25:03.685]   .. .. ..@ sealed    : logi TRUE
[08:25:03.685]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.685]  - attr(*, "where")=List of 1
[08:25:03.685]   ..$ ...:<environment: 0x564c36ad3260> 
[08:25:03.685]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.685]  - attr(*, "resolved")= logi TRUE
[08:25:03.685]  - attr(*, "total_size")= num NA
[08:25:03.742]  - Getting '...' globals ... DONE
[08:25:03.742] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.742] List of 2
[08:25:03.742]  $ ...future.FUN:function (a, b)  
[08:25:03.742]  $ ...          :List of 1
[08:25:03.742]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:03.742]   .. .. ..@ slots     :List of 4
[08:25:03.742]   .. .. .. ..$ .Data  : chr "function"
[08:25:03.742]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. ..$ target : chr "signature"
[08:25:03.742]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. ..$ defined: chr "signature"
[08:25:03.742]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. ..$ generic: chr "character"
[08:25:03.742]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. ..@ contains  :List of 3
[08:25:03.742]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.742]   .. .. ..@ virtual   : logi FALSE
[08:25:03.742]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:03.742]  list()
[08:25:03.742]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.742]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.742]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.742]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.742]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:03.742]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:03.742]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:03.742]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:03.742]   .. .. .. .. ..$ generic: chr(0) 
[08:25:03.742]   .. .. ..@ validity  : NULL
[08:25:03.742]   .. .. ..@ access    : list()
[08:25:03.742]   .. .. ..@ className : chr "MethodDefinition"
[08:25:03.742]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. ..@ subclasses:List of 7
[08:25:03.742]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 1
[08:25:03.742]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.742]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.742]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:03.742]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:03.742]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:03.742]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:03.742]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:03.742]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:03.742]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:03.742]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:03.742]   .. .. .. .. .. ..@ distance  : num 2
[08:25:03.742]   .. .. ..@ versionKey:<externalptr> 
[08:25:03.742]   .. .. ..@ sealed    : logi TRUE
[08:25:03.742]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.742]  - attr(*, "where")=List of 2
[08:25:03.742]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.742]   ..$ ...          :<environment: 0x564c36ad3260> 
[08:25:03.742]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.742]  - attr(*, "resolved")= logi FALSE
[08:25:03.742]  - attr(*, "total_size")= num 97748
[08:25:03.791] Packages to be attached in all futures: [n=0] 
[08:25:03.791] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.792] Number of futures (= number of chunks): 1
[08:25:03.792] Launching 1 futures (chunks) ...
[08:25:03.792] Chunk #1 of 1 ...
[08:25:03.792]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.792]    + additional globals found: [n=0] 
[08:25:03.792]    + additional namespaces needed: [n=0] 
[08:25:03.793]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.793]  - seeds: <none>
[08:25:03.793]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.799] Created future:
[08:25:03.799] MulticoreFuture:
[08:25:03.799] Label: ‘future_lapply-1’
[08:25:03.799] Expression:
[08:25:03.799] {
[08:25:03.799]     do.call(function(...) {
[08:25:03.799]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.799]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.799]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.799]             on.exit(options(oopts), add = TRUE)
[08:25:03.799]         }
[08:25:03.799]         {
[08:25:03.799]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.799]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.799]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.799]             })
[08:25:03.799]         }
[08:25:03.799]     }, args = future.call.arguments)
[08:25:03.799] }
[08:25:03.799] Lazy evaluation: FALSE
[08:25:03.799] Asynchronous evaluation: TRUE
[08:25:03.799] Local evaluation: TRUE
[08:25:03.799] Environment: R_GlobalEnv
[08:25:03.799] Capture standard output: TRUE
[08:25:03.799] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.799] Globals: 5 objects totaling 46.83 KiB (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 46.42 KiB, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.799] Packages: <none>
[08:25:03.799] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.799] Resolved: TRUE
[08:25:03.799] Value: <not collected>
[08:25:03.799] Conditions captured: <none>
[08:25:03.799] Early signaling: FALSE
[08:25:03.799] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.799] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.806] Chunk #1 of 1 ... DONE
[08:25:03.806] Launching 1 futures (chunks) ... DONE
[08:25:03.806] Resolving 1 futures (chunks) ...
[08:25:03.808]  - Number of value chunks collected: 1
[08:25:03.808] Resolving 1 futures (chunks) ... DONE
[08:25:03.808] Reducing values from 1 chunks ...
[08:25:03.808]  - Number of values collected after concatenation: 1
[08:25:03.809]  - Number of values expected: 1
[08:25:03.809] Reducing values from 1 chunks ... DONE
[08:25:03.809] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[08:25:03.812] future_lapply() ...
[08:25:03.815] Number of chunks: 2
[08:25:03.815] getGlobalsAndPackagesXApply() ...
[08:25:03.815]  - future.globals: TRUE
[08:25:03.817]  - globals found/used: [n=1] ‘FUN’
[08:25:03.817]  - needed namespaces: [n=0] 
[08:25:03.818] Finding globals ... DONE
[08:25:03.818]  - use_args: TRUE
[08:25:03.818]  - Getting '...' globals ...
[08:25:03.818]    - '...' content: [n=0] 
[08:25:03.818] List of 1
[08:25:03.818]  $ ...: list()
[08:25:03.818]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.818]  - attr(*, "where")=List of 1
[08:25:03.818]   ..$ ...:<environment: 0x564c35827df0> 
[08:25:03.818]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.818]  - attr(*, "resolved")= logi TRUE
[08:25:03.818]  - attr(*, "total_size")= num NA
[08:25:03.821]  - Getting '...' globals ... DONE
[08:25:03.822] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:03.822] List of 2
[08:25:03.822]  $ ...future.FUN:function (f)  
[08:25:03.822]  $ ...          : list()
[08:25:03.822]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.822]  - attr(*, "where")=List of 2
[08:25:03.822]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.822]   ..$ ...          :<environment: 0x564c35827df0> 
[08:25:03.822]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.822]  - attr(*, "resolved")= logi FALSE
[08:25:03.822]  - attr(*, "total_size")= num 4837
[08:25:03.825] Packages to be attached in all futures: [n=0] 
[08:25:03.825] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.825] Number of futures (= number of chunks): 2
[08:25:03.826] Launching 2 futures (chunks) ...
[08:25:03.826] Chunk #1 of 2 ...
[08:25:03.826]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.828]    + additional globals found: [n=2] ‘a’, ‘b’
[08:25:03.828]    + additional namespaces needed: [n=0] 
[08:25:03.828]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.828]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:03.829]  - seeds: <none>
[08:25:03.829]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[08:25:03.835] Created future:
[08:25:03.836] MulticoreFuture:
[08:25:03.836] Label: ‘future_lapply-1’
[08:25:03.836] Expression:
[08:25:03.836] {
[08:25:03.836]     do.call(function(...) {
[08:25:03.836]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.836]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.836]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.836]             on.exit(options(oopts), add = TRUE)
[08:25:03.836]         }
[08:25:03.836]         {
[08:25:03.836]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.836]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.836]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.836]             })
[08:25:03.836]         }
[08:25:03.836]     }, args = future.call.arguments)
[08:25:03.836] }
[08:25:03.836] Lazy evaluation: FALSE
[08:25:03.836] Asynchronous evaluation: TRUE
[08:25:03.836] Local evaluation: TRUE
[08:25:03.836] Environment: R_GlobalEnv
[08:25:03.836] Capture standard output: TRUE
[08:25:03.836] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.836] Globals: 7 objects totaling 1.02 KiB (function ‘...future.FUN’ of 225 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 588 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes, ...)
[08:25:03.836] Packages: <none>
[08:25:03.836] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.836] Resolved: TRUE
[08:25:03.836] Value: <not collected>
[08:25:03.836] Conditions captured: <none>
[08:25:03.836] Early signaling: FALSE
[08:25:03.836] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.836] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.842] Chunk #1 of 2 ... DONE
[08:25:03.843] Chunk #2 of 2 ...
[08:25:03.843]  - Finding globals in 'X' for chunk #2 ...
[08:25:03.846]    + additional globals found: [n=2] ‘a’, ‘b’
[08:25:03.846]    + additional namespaces needed: [n=1] ‘tools’
[08:25:03.847]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:03.847]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:03.847]  - seeds: <none>
[08:25:03.847]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[08:25:03.855] Created future:
[08:25:03.855] MulticoreFuture:
[08:25:03.855] Label: ‘future_lapply-2’
[08:25:03.855] Expression:
[08:25:03.855] {
[08:25:03.855]     do.call(function(...) {
[08:25:03.855]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.855]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.855]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.855]             on.exit(options(oopts), add = TRUE)
[08:25:03.855]         }
[08:25:03.855]         {
[08:25:03.855]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.855]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.855]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.855]             })
[08:25:03.855]         }
[08:25:03.855]     }, args = future.call.arguments)
[08:25:03.855] }
[08:25:03.855] Lazy evaluation: FALSE
[08:25:03.855] Asynchronous evaluation: TRUE
[08:25:03.855] Local evaluation: TRUE
[08:25:03.855] Environment: R_GlobalEnv
[08:25:03.855] Capture standard output: TRUE
[08:25:03.855] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.855] Globals: 7 objects totaling 1.33 KiB (function ‘...future.FUN’ of 225 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 903 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes, ...)
[08:25:03.855] Packages: 1 packages (‘tools’)
[08:25:03.855] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.855] Resolved: TRUE
[08:25:03.855] Value: <not collected>
[08:25:03.855] Conditions captured: <none>
[08:25:03.855] Early signaling: FALSE
[08:25:03.855] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.855] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.863] Chunk #2 of 2 ... DONE
[08:25:03.863] Launching 2 futures (chunks) ... DONE
[08:25:03.863] Resolving 2 futures (chunks) ...
[08:25:03.866]  - Number of value chunks collected: 2
[08:25:03.866] Resolving 2 futures (chunks) ... DONE
[08:25:03.866] Reducing values from 2 chunks ...
[08:25:03.866]  - Number of values collected after concatenation: 4
[08:25:03.867]  - Number of values expected: 4
[08:25:03.867] Reducing values from 2 chunks ... DONE
[08:25:03.867] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[08:25:03.871] future_lapply() ...
[08:25:03.874] Number of chunks: 1
[08:25:03.874] getGlobalsAndPackagesXApply() ...
[08:25:03.874]  - future.globals: TRUE
[08:25:03.877]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[08:25:03.877]  - needed namespaces: [n=0] 
[08:25:03.877] Finding globals ... DONE
[08:25:03.877]  - use_args: TRUE
[08:25:03.877]  - Getting '...' globals ...
[08:25:03.878]    - '...' content: [n=0] 
[08:25:03.878] List of 1
[08:25:03.878]  $ ...: list()
[08:25:03.878]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.878]  - attr(*, "where")=List of 1
[08:25:03.878]   ..$ ...:<environment: 0x564c36f7cde0> 
[08:25:03.878]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.878]  - attr(*, "resolved")= logi TRUE
[08:25:03.878]  - attr(*, "total_size")= num NA
[08:25:03.881]  - Getting '...' globals ... DONE
[08:25:03.881] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[08:25:03.881] List of 3
[08:25:03.881]  $ ...future.FUN        :function (x)  
[08:25:03.881]  $ future.call.arguments:List of 1
[08:25:03.881]   ..$ a: num 1
[08:25:03.881]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.881]  $ ...                  : list()
[08:25:03.881]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.881]  - attr(*, "where")=List of 3
[08:25:03.881]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[08:25:03.881]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[08:25:03.881]   ..$ ...                  :<environment: 0x564c36f7cde0> 
[08:25:03.881]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.881]  - attr(*, "resolved")= logi FALSE
[08:25:03.881]  - attr(*, "total_size")= num 3563
[08:25:03.888] Packages to be attached in all futures: [n=0] 
[08:25:03.888] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.888] Number of futures (= number of chunks): 1
[08:25:03.888] Launching 1 futures (chunks) ...
[08:25:03.889] Chunk #1 of 1 ...
[08:25:03.889]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.889]    + additional globals found: [n=0] 
[08:25:03.889]    + additional namespaces needed: [n=0] 
[08:25:03.889]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.889]  - seeds: <none>
[08:25:03.890]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.896] Created future:
[08:25:03.896] MulticoreFuture:
[08:25:03.896] Label: ‘future_lapply-1’
[08:25:03.896] Expression:
[08:25:03.896] {
[08:25:03.896]     do.call(function(...) {
[08:25:03.896]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.896]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.896]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.896]             on.exit(options(oopts), add = TRUE)
[08:25:03.896]         }
[08:25:03.896]         {
[08:25:03.896]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.896]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.896]                 ...future.FUN(...future.X_jj)
[08:25:03.896]             })
[08:25:03.896]         }
[08:25:03.896]     }, args = future.call.arguments)
[08:25:03.896] }
[08:25:03.896] Lazy evaluation: FALSE
[08:25:03.896] Asynchronous evaluation: TRUE
[08:25:03.896] Local evaluation: TRUE
[08:25:03.896] Environment: 0x564c36f7d160
[08:25:03.896] Capture standard output: TRUE
[08:25:03.896] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.896] Globals: 5 objects totaling 613 bytes (function ‘...future.FUN’ of 361 bytes, DotDotDotList ‘future.call.arguments’ of 151 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:03.896] Packages: <none>
[08:25:03.896] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.896] Resolved: TRUE
[08:25:03.896] Value: <not collected>
[08:25:03.896] Conditions captured: <none>
[08:25:03.896] Early signaling: FALSE
[08:25:03.896] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.896] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.903] Chunk #1 of 1 ... DONE
[08:25:03.903] Launching 1 futures (chunks) ... DONE
[08:25:03.903] Resolving 1 futures (chunks) ...
[08:25:03.905]  - Number of value chunks collected: 1
[08:25:03.905] Resolving 1 futures (chunks) ... DONE
[08:25:03.905] Reducing values from 1 chunks ...
[08:25:03.905]  - Number of values collected after concatenation: 1
[08:25:03.905]  - Number of values expected: 1
[08:25:03.905] Reducing values from 1 chunks ... DONE
[08:25:03.906] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[08:25:03.907] future_lapply() ...
[08:25:03.911] Number of chunks: 1
[08:25:03.911] getGlobalsAndPackagesXApply() ...
[08:25:03.911]  - future.globals: TRUE
[08:25:03.914]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:03.914]  - needed namespaces: [n=0] 
[08:25:03.914] Finding globals ... DONE
[08:25:03.914]  - use_args: TRUE
[08:25:03.914]  - Getting '...' globals ...
[08:25:03.915]    - '...' content: [n=0] 
[08:25:03.915] List of 1
[08:25:03.915]  $ ...: list()
[08:25:03.915]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.915]  - attr(*, "where")=List of 1
[08:25:03.915]   ..$ ...:<environment: 0x564c358fd6e8> 
[08:25:03.915]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.915]  - attr(*, "resolved")= logi TRUE
[08:25:03.915]  - attr(*, "total_size")= num NA
[08:25:03.918]  - Getting '...' globals ... DONE
[08:25:03.918] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:03.918] List of 3
[08:25:03.918]  $ ...future.FUN:function (ii)  
[08:25:03.918]  $ a            : num 1
[08:25:03.918]  $ ...          : list()
[08:25:03.918]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.918]  - attr(*, "where")=List of 3
[08:25:03.918]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.918]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.918]   ..$ ...          :<environment: 0x564c358fd6e8> 
[08:25:03.918]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.918]  - attr(*, "resolved")= logi FALSE
[08:25:03.918]  - attr(*, "total_size")= num 3759
[08:25:03.922] Packages to be attached in all futures: [n=0] 
[08:25:03.922] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.922] Number of futures (= number of chunks): 1
[08:25:03.922] Launching 1 futures (chunks) ...
[08:25:03.923] Chunk #1 of 1 ...
[08:25:03.923]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.923]    + additional globals found: [n=0] 
[08:25:03.923]    + additional namespaces needed: [n=0] 
[08:25:03.923]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.923]  - seeds: <none>
[08:25:03.924]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.930] Created future:
[08:25:03.931] MulticoreFuture:
[08:25:03.931] Label: ‘future_lapply-1’
[08:25:03.931] Expression:
[08:25:03.931] {
[08:25:03.931]     do.call(function(...) {
[08:25:03.931]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.931]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.931]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.931]             on.exit(options(oopts), add = TRUE)
[08:25:03.931]         }
[08:25:03.931]         {
[08:25:03.931]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.931]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.931]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.931]             })
[08:25:03.931]         }
[08:25:03.931]     }, args = future.call.arguments)
[08:25:03.931] }
[08:25:03.931] Lazy evaluation: FALSE
[08:25:03.931] Asynchronous evaluation: TRUE
[08:25:03.931] Local evaluation: TRUE
[08:25:03.931] Environment: R_GlobalEnv
[08:25:03.931] Capture standard output: TRUE
[08:25:03.931] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.931] Globals: 6 objects totaling 748 bytes (function ‘...future.FUN’ of 511 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.931] Packages: <none>
[08:25:03.931] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.931] Resolved: TRUE
[08:25:03.931] Value: <not collected>
[08:25:03.931] Conditions captured: <none>
[08:25:03.931] Early signaling: FALSE
[08:25:03.931] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.931] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.937] Chunk #1 of 1 ... DONE
[08:25:03.937] Launching 1 futures (chunks) ... DONE
[08:25:03.937] Resolving 1 futures (chunks) ...
[08:25:03.939]  - Number of value chunks collected: 1
[08:25:03.939] Resolving 1 futures (chunks) ... DONE
[08:25:03.939] Reducing values from 1 chunks ...
[08:25:03.940]  - Number of values collected after concatenation: 1
[08:25:03.940]  - Number of values expected: 1
[08:25:03.940] Reducing values from 1 chunks ... DONE
[08:25:03.940] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[08:25:03.940] future_lapply() ...
[08:25:03.943] Number of chunks: 1
[08:25:03.944] getGlobalsAndPackagesXApply() ...
[08:25:03.944]  - future.globals: TRUE
[08:25:03.947]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:03.947]  - needed namespaces: [n=0] 
[08:25:03.947] Finding globals ... DONE
[08:25:03.947]  - use_args: TRUE
[08:25:03.947]  - Getting '...' globals ...
[08:25:03.948]    - '...' content: [n=0] 
[08:25:03.948] List of 1
[08:25:03.948]  $ ...: list()
[08:25:03.948]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.948]  - attr(*, "where")=List of 1
[08:25:03.948]   ..$ ...:<environment: 0x564c3694db60> 
[08:25:03.948]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.948]  - attr(*, "resolved")= logi TRUE
[08:25:03.948]  - attr(*, "total_size")= num NA
[08:25:03.951]  - Getting '...' globals ... DONE
[08:25:03.951] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:03.951] List of 3
[08:25:03.951]  $ ...future.FUN:function (ii)  
[08:25:03.951]  $ a            : num 1
[08:25:03.951]  $ ...          : list()
[08:25:03.951]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.951]  - attr(*, "where")=List of 3
[08:25:03.951]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:03.951]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.951]   ..$ ...          :<environment: 0x564c3694db60> 
[08:25:03.951]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.951]  - attr(*, "resolved")= logi FALSE
[08:25:03.951]  - attr(*, "total_size")= num 3775
[08:25:03.955] Packages to be attached in all futures: [n=0] 
[08:25:03.955] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.955] Number of futures (= number of chunks): 1
[08:25:03.955] Launching 1 futures (chunks) ...
[08:25:03.956] Chunk #1 of 1 ...
[08:25:03.956]  - Finding globals in 'X' for chunk #1 ...
[08:25:03.956]    + additional globals found: [n=0] 
[08:25:03.956]    + additional namespaces needed: [n=0] 
[08:25:03.956]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:03.956]  - seeds: <none>
[08:25:03.956]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.963] Created future:
[08:25:03.963] MulticoreFuture:
[08:25:03.963] Label: ‘future_lapply-1’
[08:25:03.963] Expression:
[08:25:03.963] {
[08:25:03.963]     do.call(function(...) {
[08:25:03.963]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.963]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.963]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.963]             on.exit(options(oopts), add = TRUE)
[08:25:03.963]         }
[08:25:03.963]         {
[08:25:03.963]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.963]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.963]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.963]             })
[08:25:03.963]         }
[08:25:03.963]     }, args = future.call.arguments)
[08:25:03.963] }
[08:25:03.963] Lazy evaluation: FALSE
[08:25:03.963] Asynchronous evaluation: TRUE
[08:25:03.963] Local evaluation: TRUE
[08:25:03.963] Environment: R_GlobalEnv
[08:25:03.963] Capture standard output: TRUE
[08:25:03.963] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.963] Globals: 6 objects totaling 756 bytes (function ‘...future.FUN’ of 519 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.963] Packages: <none>
[08:25:03.963] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.963] Resolved: TRUE
[08:25:03.963] Value: <not collected>
[08:25:03.963] Conditions captured: <none>
[08:25:03.963] Early signaling: FALSE
[08:25:03.963] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.963] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:03.970] Chunk #1 of 1 ... DONE
[08:25:03.970] Launching 1 futures (chunks) ... DONE
[08:25:03.970] Resolving 1 futures (chunks) ...
[08:25:03.972]  - Number of value chunks collected: 1
[08:25:03.972] Resolving 1 futures (chunks) ... DONE
[08:25:03.972] Reducing values from 1 chunks ...
[08:25:03.972]  - Number of values collected after concatenation: 1
[08:25:03.972]  - Number of values expected: 1
[08:25:03.972] Reducing values from 1 chunks ... DONE
[08:25:03.972] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[08:25:03.973] future_lapply() ...
[08:25:03.976] Number of chunks: 1
[08:25:03.978] getGlobalsAndPackagesXApply() ...
[08:25:03.978]  - future.globals: <name-value list> with names ‘42’
[08:25:03.979]  - use_args: TRUE
[08:25:03.979]  - Getting '...' globals ...
[08:25:03.979]    - '...' content: [n=0] 
[08:25:03.980] List of 1
[08:25:03.980]  $ ...: list()
[08:25:03.980]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.980]  - attr(*, "where")=List of 1
[08:25:03.980]   ..$ ...:<environment: 0x564c3733a408> 
[08:25:03.980]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.980]  - attr(*, "resolved")= logi TRUE
[08:25:03.980]  - attr(*, "total_size")= num NA
[08:25:03.983]  - Getting '...' globals ... DONE
[08:25:03.983] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[08:25:03.983] List of 3
[08:25:03.983]  $ a            : num 42
[08:25:03.983]  $ ...future.FUN:function (x)  
[08:25:03.983]  $ ...          : list()
[08:25:03.983]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:03.983]  - attr(*, "where")=List of 3
[08:25:03.983]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:03.983]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[08:25:03.983]   ..$ ...          :<environment: 0x564c3733a408> 
[08:25:03.983]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:03.983]  - attr(*, "resolved")= logi FALSE
[08:25:03.983]  - attr(*, "total_size")= num NA
[08:25:03.987] Packages to be attached in all futures: [n=0] 
[08:25:03.987] getGlobalsAndPackagesXApply() ... DONE
[08:25:03.987] Number of futures (= number of chunks): 1
[08:25:03.987] Launching 1 futures (chunks) ...
[08:25:03.987] Chunk #1 of 1 ...
[08:25:03.988]  - seeds: <none>
[08:25:03.988]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:03.995] Created future:
[08:25:03.995] MulticoreFuture:
[08:25:03.995] Label: ‘future_lapply-1’
[08:25:03.995] Expression:
[08:25:03.995] {
[08:25:03.995]     do.call(function(...) {
[08:25:03.995]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:03.995]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:03.995]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:03.995]             on.exit(options(oopts), add = TRUE)
[08:25:03.995]         }
[08:25:03.995]         {
[08:25:03.995]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:03.995]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:03.995]                 ...future.FUN(...future.X_jj, ...)
[08:25:03.995]             })
[08:25:03.995]         }
[08:25:03.995]     }, args = future.call.arguments)
[08:25:03.995] }
[08:25:03.995] Lazy evaluation: FALSE
[08:25:03.995] Asynchronous evaluation: TRUE
[08:25:03.995] Local evaluation: TRUE
[08:25:03.995] Environment: R_GlobalEnv
[08:25:03.995] Capture standard output: TRUE
[08:25:03.995] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:03.995] Globals: 6 objects totaling 535 bytes (numeric ‘a’ of 39 bytes, function ‘...future.FUN’ of 298 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:03.995] Packages: <none>
[08:25:03.995] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:03.995] Resolved: TRUE
[08:25:03.995] Value: <not collected>
[08:25:03.995] Conditions captured: <none>
[08:25:03.995] Early signaling: FALSE
[08:25:03.995] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:03.995] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.002] Chunk #1 of 1 ... DONE
[08:25:04.002] Launching 1 futures (chunks) ... DONE
[08:25:04.002] Resolving 1 futures (chunks) ...
[08:25:04.004]  - Number of value chunks collected: 1
[08:25:04.004] Resolving 1 futures (chunks) ... DONE
[08:25:04.004] Reducing values from 1 chunks ...
[08:25:04.004]  - Number of values collected after concatenation: 1
[08:25:04.004]  - Number of values expected: 1
[08:25:04.004] Reducing values from 1 chunks ... DONE
[08:25:04.004] future_lapply() ... DONE
List of 1
 $ : num 42
[08:25:04.347] future_lapply() ...
[08:25:04.350] Number of chunks: 2
[08:25:04.350] getGlobalsAndPackagesXApply() ...
[08:25:04.350]  - future.globals: TRUE
[08:25:04.356]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[08:25:04.356]  - needed namespaces: [n=0] 
[08:25:04.356] Finding globals ... DONE
[08:25:04.356]  - use_args: TRUE
[08:25:04.356]  - Getting '...' globals ...
[08:25:04.357]    - '...' content: [n=0] 
[08:25:04.357] List of 1
[08:25:04.357]  $ ...: list()
[08:25:04.357]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.357]  - attr(*, "where")=List of 1
[08:25:04.357]   ..$ ...:<environment: 0x564c34199c60> 
[08:25:04.357]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.357]  - attr(*, "resolved")= logi TRUE
[08:25:04.357]  - attr(*, "total_size")= num NA
[08:25:04.360]  - Getting '...' globals ... DONE
[08:25:04.360] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[08:25:04.360] List of 6
[08:25:04.360]  $ ...future.FUN:function (i)  
[08:25:04.360]  $ caller       :function (a, b, FUN = call_my_add)  
[08:25:04.360]  $ args         :List of 1
[08:25:04.360]   ..$ FUN:function (a, b)  
[08:25:04.360]  $ call_my_add  :function (a, b)  
[08:25:04.360]  $ my_add       :function (a, b)  
[08:25:04.360]  $ ...          : list()
[08:25:04.360]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.360]  - attr(*, "where")=List of 6
[08:25:04.360]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.360]   ..$ caller       :<environment: R_EmptyEnv> 
[08:25:04.360]   ..$ args         :<environment: R_EmptyEnv> 
[08:25:04.360]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[08:25:04.360]   ..$ my_add       :<environment: R_EmptyEnv> 
[08:25:04.360]   ..$ ...          :<environment: 0x564c34199c60> 
[08:25:04.360]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.360]  - attr(*, "resolved")= logi FALSE
[08:25:04.360]  - attr(*, "total_size")= num 11089
[08:25:04.365] Packages to be attached in all futures: [n=0] 
[08:25:04.365] getGlobalsAndPackagesXApply() ... DONE
[08:25:04.366] Number of futures (= number of chunks): 2
[08:25:04.366] Launching 2 futures (chunks) ...
[08:25:04.366] Chunk #1 of 2 ...
[08:25:04.366]  - Finding globals in 'X' for chunk #1 ...
[08:25:04.366]    + additional globals found: [n=0] 
[08:25:04.366]    + additional namespaces needed: [n=0] 
[08:25:04.367]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:04.367]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:04.367]  - seeds: <none>
[08:25:04.367]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.428] Created future:
[08:25:04.428] MultisessionFuture:
[08:25:04.428] Label: ‘future_lapply-1’
[08:25:04.428] Expression:
[08:25:04.428] {
[08:25:04.428]     do.call(function(...) {
[08:25:04.428]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.428]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.428]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.428]             on.exit(options(oopts), add = TRUE)
[08:25:04.428]         }
[08:25:04.428]         {
[08:25:04.428]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.428]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.428]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.428]             })
[08:25:04.428]         }
[08:25:04.428]     }, args = future.call.arguments)
[08:25:04.428] }
[08:25:04.428] Lazy evaluation: FALSE
[08:25:04.428] Asynchronous evaluation: TRUE
[08:25:04.428] Local evaluation: TRUE
[08:25:04.428] Environment: 0x564c34199838
[08:25:04.428] Capture standard output: TRUE
[08:25:04.428] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.428] Globals: 9 objects totaling 5.17 KiB (function ‘...future.FUN’ of 2.67 KiB, function ‘caller’ of 247 bytes, list ‘args’ of 928 bytes, function ‘call_my_add’ of 876 bytes, function ‘my_add’ of 311 bytes, ...)
[08:25:04.428] Packages: <none>
[08:25:04.428] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.428] Resolved: FALSE
[08:25:04.428] Value: <not collected>
[08:25:04.428] Conditions captured: <none>
[08:25:04.428] Early signaling: FALSE
[08:25:04.428] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.428] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.440] Chunk #1 of 2 ... DONE
[08:25:04.440] Chunk #2 of 2 ...
[08:25:04.440]  - Finding globals in 'X' for chunk #2 ...
[08:25:04.440]    + additional globals found: [n=0] 
[08:25:04.441]    + additional namespaces needed: [n=0] 
[08:25:04.441]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:04.441]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:04.441]  - seeds: <none>
[08:25:04.441]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.517] Created future:
[08:25:04.517] MultisessionFuture:
[08:25:04.517] Label: ‘future_lapply-2’
[08:25:04.517] Expression:
[08:25:04.517] {
[08:25:04.517]     do.call(function(...) {
[08:25:04.517]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.517]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.517]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.517]             on.exit(options(oopts), add = TRUE)
[08:25:04.517]         }
[08:25:04.517]         {
[08:25:04.517]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.517]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.517]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.517]             })
[08:25:04.517]         }
[08:25:04.517]     }, args = future.call.arguments)
[08:25:04.517] }
[08:25:04.517] Lazy evaluation: FALSE
[08:25:04.517] Asynchronous evaluation: TRUE
[08:25:04.517] Local evaluation: TRUE
[08:25:04.517] Environment: 0x564c34199838
[08:25:04.517] Capture standard output: TRUE
[08:25:04.517] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.517] Globals: 9 objects totaling 5.18 KiB (function ‘...future.FUN’ of 2.67 KiB, function ‘caller’ of 247 bytes, list ‘args’ of 928 bytes, function ‘call_my_add’ of 876 bytes, function ‘my_add’ of 311 bytes, ...)
[08:25:04.517] Packages: <none>
[08:25:04.517] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.517] Resolved: FALSE
[08:25:04.517] Value: <not collected>
[08:25:04.517] Conditions captured: <none>
[08:25:04.517] Early signaling: FALSE
[08:25:04.517] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.517] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.529] Chunk #2 of 2 ... DONE
[08:25:04.529] Launching 2 futures (chunks) ... DONE
[08:25:04.529] Resolving 2 futures (chunks) ...
[08:25:04.598]  - Number of value chunks collected: 2
[08:25:04.598] Resolving 2 futures (chunks) ... DONE
[08:25:04.599] Reducing values from 2 chunks ...
[08:25:04.599]  - Number of values collected after concatenation: 3
[08:25:04.599]  - Number of values expected: 3
[08:25:04.599] Reducing values from 2 chunks ... DONE
[08:25:04.599] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[08:25:04.600] future_lapply() ...
[08:25:04.604] Number of chunks: 1
[08:25:04.604] getGlobalsAndPackagesXApply() ...
[08:25:04.604]  - future.globals: TRUE
[08:25:04.608]  - globals found/used: [n=1] ‘FUN’
[08:25:04.608]  - needed namespaces: [n=0] 
[08:25:04.609] Finding globals ... DONE
[08:25:04.609]  - use_args: TRUE
[08:25:04.609]  - Getting '...' globals ...
[08:25:04.609]    - '...' content: [n=1] ‘what’
[08:25:04.609] List of 1
[08:25:04.609]  $ ...:List of 1
[08:25:04.609]   ..$ what:function (x)  
[08:25:04.609]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.609]  - attr(*, "where")=List of 1
[08:25:04.609]   ..$ ...:<environment: 0x564c35988590> 
[08:25:04.609]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.609]  - attr(*, "resolved")= logi TRUE
[08:25:04.609]  - attr(*, "total_size")= num NA
[08:25:04.613]  - Getting '...' globals ... DONE
[08:25:04.614] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:04.614] List of 2
[08:25:04.614]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:04.614]  $ ...          :List of 1
[08:25:04.614]   ..$ what:function (x)  
[08:25:04.614]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.614]  - attr(*, "where")=List of 2
[08:25:04.614]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.614]   ..$ ...          :<environment: 0x564c35988590> 
[08:25:04.614]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.614]  - attr(*, "resolved")= logi FALSE
[08:25:04.614]  - attr(*, "total_size")= num 6909
[08:25:04.617] Packages to be attached in all futures: [n=0] 
[08:25:04.617] getGlobalsAndPackagesXApply() ... DONE
[08:25:04.618] Number of futures (= number of chunks): 1
[08:25:04.618] Launching 1 futures (chunks) ...
[08:25:04.618] Chunk #1 of 1 ...
[08:25:04.618]  - Finding globals in 'X' for chunk #1 ...
[08:25:04.618]    + additional globals found: [n=0] 
[08:25:04.618]    + additional namespaces needed: [n=0] 
[08:25:04.618]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:04.619]  - seeds: <none>
[08:25:04.619]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.638] Created future:
[08:25:04.638] MultisessionFuture:
[08:25:04.638] Label: ‘future_lapply-1’
[08:25:04.638] Expression:
[08:25:04.638] {
[08:25:04.638]     do.call(function(...) {
[08:25:04.638]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.638]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.638]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.638]             on.exit(options(oopts), add = TRUE)
[08:25:04.638]         }
[08:25:04.638]         {
[08:25:04.638]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.638]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.638]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.638]             })
[08:25:04.638]         }
[08:25:04.638]     }, args = future.call.arguments)
[08:25:04.638] }
[08:25:04.638] Lazy evaluation: FALSE
[08:25:04.638] Asynchronous evaluation: TRUE
[08:25:04.638] Local evaluation: TRUE
[08:25:04.638] Environment: R_GlobalEnv
[08:25:04.638] Capture standard output: TRUE
[08:25:04.638] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.638] Globals: 5 objects totaling 2.13 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 152 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:04.638] Packages: <none>
[08:25:04.638] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.638] Resolved: FALSE
[08:25:04.638] Value: <not collected>
[08:25:04.638] Conditions captured: <none>
[08:25:04.638] Early signaling: FALSE
[08:25:04.638] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.638] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.650] Chunk #1 of 1 ... DONE
[08:25:04.650] Launching 1 futures (chunks) ... DONE
[08:25:04.650] Resolving 1 futures (chunks) ...
[08:25:04.681]  - Number of value chunks collected: 1
[08:25:04.681] Resolving 1 futures (chunks) ... DONE
[08:25:04.681] Reducing values from 1 chunks ...
[08:25:04.681]  - Number of values collected after concatenation: 1
[08:25:04.681]  - Number of values expected: 1
[08:25:04.681] Reducing values from 1 chunks ... DONE
[08:25:04.682] future_lapply() ... DONE
[08:25:04.682] future_lapply() ...
[08:25:04.684] Number of chunks: 1
[08:25:04.684] getGlobalsAndPackagesXApply() ...
[08:25:04.685]  - future.globals: TRUE
[08:25:04.687]  - globals found/used: [n=1] ‘FUN’
[08:25:04.687]  - needed namespaces: [n=0] 
[08:25:04.688] Finding globals ... DONE
[08:25:04.688]  - use_args: TRUE
[08:25:04.688]  - Getting '...' globals ...
[08:25:04.688]    - '...' content: [n=1] ‘what’
[08:25:04.688] List of 1
[08:25:04.688]  $ ...:List of 1
[08:25:04.688]   ..$ what:function (...)  
[08:25:04.688]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.688]  - attr(*, "where")=List of 1
[08:25:04.688]   ..$ ...:<environment: 0x564c36a71518> 
[08:25:04.688]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.688]  - attr(*, "resolved")= logi TRUE
[08:25:04.688]  - attr(*, "total_size")= num NA
[08:25:04.691]  - Getting '...' globals ... DONE
[08:25:04.691] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:04.691] List of 2
[08:25:04.691]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[08:25:04.691]  $ ...          :List of 1
[08:25:04.691]   ..$ what:function (...)  
[08:25:04.691]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.691]  - attr(*, "where")=List of 2
[08:25:04.691]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.691]   ..$ ...          :<environment: 0x564c36a71518> 
[08:25:04.691]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.691]  - attr(*, "resolved")= logi FALSE
[08:25:04.691]  - attr(*, "total_size")= num 7345
[08:25:04.694] Packages to be attached in all futures: [n=0] 
[08:25:04.694] getGlobalsAndPackagesXApply() ... DONE
[08:25:04.694] Number of futures (= number of chunks): 1
[08:25:04.695] Launching 1 futures (chunks) ...
[08:25:04.695] Chunk #1 of 1 ...
[08:25:04.695]  - Finding globals in 'X' for chunk #1 ...
[08:25:04.695]    + additional globals found: [n=0] 
[08:25:04.695]    + additional namespaces needed: [n=0] 
[08:25:04.695]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:04.695]  - seeds: <none>
[08:25:04.695]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.715] Created future:
[08:25:04.715] MultisessionFuture:
[08:25:04.715] Label: ‘future_lapply-1’
[08:25:04.715] Expression:
[08:25:04.715] {
[08:25:04.715]     do.call(function(...) {
[08:25:04.715]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.715]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.715]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.715]             on.exit(options(oopts), add = TRUE)
[08:25:04.715]         }
[08:25:04.715]         {
[08:25:04.715]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.715]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.715]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.715]             })
[08:25:04.715]         }
[08:25:04.715]     }, args = future.call.arguments)
[08:25:04.715] }
[08:25:04.715] Lazy evaluation: FALSE
[08:25:04.715] Asynchronous evaluation: TRUE
[08:25:04.715] Local evaluation: TRUE
[08:25:04.715] Environment: R_GlobalEnv
[08:25:04.715] Capture standard output: TRUE
[08:25:04.715] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.715] Globals: 5 objects totaling 2.36 KiB (function ‘...future.FUN’ of 1.79 KiB, DotDotDotList ‘future.call.arguments’ of 388 bytes, list ‘...future.elements_ii’ of 149 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:04.715] Packages: <none>
[08:25:04.715] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.715] Resolved: FALSE
[08:25:04.715] Value: <not collected>
[08:25:04.715] Conditions captured: <none>
[08:25:04.715] Early signaling: FALSE
[08:25:04.715] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.715] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.727] Chunk #1 of 1 ... DONE
[08:25:04.727] Launching 1 futures (chunks) ... DONE
[08:25:04.727] Resolving 1 futures (chunks) ...
[08:25:04.758]  - Number of value chunks collected: 1
[08:25:04.758] Resolving 1 futures (chunks) ... DONE
[08:25:04.758] Reducing values from 1 chunks ...
[08:25:04.758]  - Number of values collected after concatenation: 1
[08:25:04.758]  - Number of values expected: 1
[08:25:04.758] Reducing values from 1 chunks ... DONE
[08:25:04.759] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[08:25:04.759] future_lapply() ...
[08:25:04.761] Number of chunks: 1
[08:25:04.761] getGlobalsAndPackagesXApply() ...
[08:25:04.761]  - future.globals: TRUE
[08:25:04.763]  - globals found/used: [n=1] ‘FUN’
[08:25:04.763]  - needed namespaces: [n=0] 
[08:25:04.763] Finding globals ... DONE
[08:25:04.763]  - use_args: TRUE
[08:25:04.763]  - Getting '...' globals ...
[08:25:04.764]    - '...' content: [n=1] ‘b’
[08:25:04.764] List of 1
[08:25:04.764]  $ ...:List of 1
[08:25:04.764]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:04.764]   .. ..$ a: int [1:2] 1 2
[08:25:04.764]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.764]  - attr(*, "where")=List of 1
[08:25:04.764]   ..$ ...:<environment: 0x564c35c86370> 
[08:25:04.764]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.764]  - attr(*, "resolved")= logi TRUE
[08:25:04.764]  - attr(*, "total_size")= num NA
[08:25:04.767]  - Getting '...' globals ... DONE
[08:25:04.767] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:04.767] List of 2
[08:25:04.767]  $ ...future.FUN:function (a, b)  
[08:25:04.767]  $ ...          :List of 1
[08:25:04.767]   ..$ b:'data.frame':	2 obs. of  1 variable:
[08:25:04.767]   .. ..$ a: int [1:2] 1 2
[08:25:04.767]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.767]  - attr(*, "where")=List of 2
[08:25:04.767]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.767]   ..$ ...          :<environment: 0x564c35c86370> 
[08:25:04.767]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.767]  - attr(*, "resolved")= logi FALSE
[08:25:04.767]  - attr(*, "total_size")= num 4163
[08:25:04.770] Packages to be attached in all futures: [n=0] 
[08:25:04.771] getGlobalsAndPackagesXApply() ... DONE
[08:25:04.771] Number of futures (= number of chunks): 1
[08:25:04.771] Launching 1 futures (chunks) ...
[08:25:04.771] Chunk #1 of 1 ...
[08:25:04.771]  - Finding globals in 'X' for chunk #1 ...
[08:25:04.771]    + additional globals found: [n=0] 
[08:25:04.772]    + additional namespaces needed: [n=0] 
[08:25:04.772]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:04.772]  - seeds: <none>
[08:25:04.772]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.790] Created future:
[08:25:04.790] MultisessionFuture:
[08:25:04.790] Label: ‘future_lapply-1’
[08:25:04.790] Expression:
[08:25:04.790] {
[08:25:04.790]     do.call(function(...) {
[08:25:04.790]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.790]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.790]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.790]             on.exit(options(oopts), add = TRUE)
[08:25:04.790]         }
[08:25:04.790]         {
[08:25:04.790]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.790]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.790]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.790]             })
[08:25:04.790]         }
[08:25:04.790]     }, args = future.call.arguments)
[08:25:04.790] }
[08:25:04.790] Lazy evaluation: FALSE
[08:25:04.790] Asynchronous evaluation: TRUE
[08:25:04.790] Local evaluation: TRUE
[08:25:04.790] Environment: R_GlobalEnv
[08:25:04.790] Capture standard output: TRUE
[08:25:04.790] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.790] Globals: 5 objects totaling 786 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 357 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:04.790] Packages: <none>
[08:25:04.790] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.790] Resolved: FALSE
[08:25:04.790] Value: <not collected>
[08:25:04.790] Conditions captured: <none>
[08:25:04.790] Early signaling: FALSE
[08:25:04.790] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.790] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.802] Chunk #1 of 1 ... DONE
[08:25:04.802] Launching 1 futures (chunks) ... DONE
[08:25:04.802] Resolving 1 futures (chunks) ...
[08:25:04.833]  - Number of value chunks collected: 1
[08:25:04.833] Resolving 1 futures (chunks) ... DONE
[08:25:04.833] Reducing values from 1 chunks ...
[08:25:04.833]  - Number of values collected after concatenation: 1
[08:25:04.833]  - Number of values expected: 1
[08:25:04.833] Reducing values from 1 chunks ... DONE
[08:25:04.834] future_lapply() ... DONE
[08:25:04.834] future_lapply() ...
[08:25:04.836] Number of chunks: 1
[08:25:04.836] getGlobalsAndPackagesXApply() ...
[08:25:04.836]  - future.globals: TRUE
[08:25:04.838]  - globals found/used: [n=1] ‘FUN’
[08:25:04.838]  - needed namespaces: [n=0] 
[08:25:04.838] Finding globals ... DONE
[08:25:04.838]  - use_args: TRUE
[08:25:04.838]  - Getting '...' globals ...
[08:25:04.838]    - '...' content: [n=1] ‘b’
[08:25:04.838] List of 1
[08:25:04.838]  $ ...:List of 1
[08:25:04.838]   ..$ b:<environment: 0x564c33949d20> 
[08:25:04.838]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.838]  - attr(*, "where")=List of 1
[08:25:04.838]   ..$ ...:<environment: 0x564c33944110> 
[08:25:04.838]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.838]  - attr(*, "resolved")= logi TRUE
[08:25:04.838]  - attr(*, "total_size")= num NA
[08:25:04.841]  - Getting '...' globals ... DONE
[08:25:04.841] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:04.842] List of 2
[08:25:04.842]  $ ...future.FUN:function (a, b)  
[08:25:04.842]  $ ...          :List of 1
[08:25:04.842]   ..$ b:<environment: 0x564c33949d20> 
[08:25:04.842]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.842]  - attr(*, "where")=List of 2
[08:25:04.842]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.842]   ..$ ...          :<environment: 0x564c33944110> 
[08:25:04.842]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.842]  - attr(*, "resolved")= logi FALSE
[08:25:04.842]  - attr(*, "total_size")= num 3918
[08:25:04.844] Packages to be attached in all futures: [n=0] 
[08:25:04.845] getGlobalsAndPackagesXApply() ... DONE
[08:25:04.845] Number of futures (= number of chunks): 1
[08:25:04.845] Launching 1 futures (chunks) ...
[08:25:04.845] Chunk #1 of 1 ...
[08:25:04.845]  - Finding globals in 'X' for chunk #1 ...
[08:25:04.845]    + additional globals found: [n=0] 
[08:25:04.845]    + additional namespaces needed: [n=0] 
[08:25:04.846]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:04.846]  - seeds: <none>
[08:25:04.846]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:04.865] Created future:
[08:25:04.865] MultisessionFuture:
[08:25:04.865] Label: ‘future_lapply-1’
[08:25:04.865] Expression:
[08:25:04.865] {
[08:25:04.865]     do.call(function(...) {
[08:25:04.865]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:04.865]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:04.865]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:04.865]             on.exit(options(oopts), add = TRUE)
[08:25:04.865]         }
[08:25:04.865]         {
[08:25:04.865]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:04.865]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:04.865]                 ...future.FUN(...future.X_jj, ...)
[08:25:04.865]             })
[08:25:04.865]         }
[08:25:04.865]     }, args = future.call.arguments)
[08:25:04.865] }
[08:25:04.865] Lazy evaluation: FALSE
[08:25:04.865] Asynchronous evaluation: TRUE
[08:25:04.865] Local evaluation: TRUE
[08:25:04.865] Environment: R_GlobalEnv
[08:25:04.865] Capture standard output: TRUE
[08:25:04.865] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:04.865] Globals: 5 objects totaling 708 bytes (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 279 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:04.865] Packages: <none>
[08:25:04.865] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:04.865] Resolved: FALSE
[08:25:04.865] Value: <not collected>
[08:25:04.865] Conditions captured: <none>
[08:25:04.865] Early signaling: FALSE
[08:25:04.865] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:04.865] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:04.876] Chunk #1 of 1 ... DONE
[08:25:04.877] Launching 1 futures (chunks) ... DONE
[08:25:04.877] Resolving 1 futures (chunks) ...
[08:25:04.908]  - Number of value chunks collected: 1
[08:25:04.908] Resolving 1 futures (chunks) ... DONE
[08:25:04.908] Reducing values from 1 chunks ...
[08:25:04.908]  - Number of values collected after concatenation: 1
[08:25:04.908]  - Number of values expected: 1
[08:25:04.908] Reducing values from 1 chunks ... DONE
[08:25:04.908] future_lapply() ... DONE
[08:25:04.909] future_lapply() ...
[08:25:04.911] Number of chunks: 1
[08:25:04.911] getGlobalsAndPackagesXApply() ...
[08:25:04.922]  - future.globals: TRUE
[08:25:04.925]  - globals found/used: [n=1] ‘FUN’
[08:25:04.925]  - needed namespaces: [n=0] 
[08:25:04.925] Finding globals ... DONE
[08:25:04.925]  - use_args: TRUE
[08:25:04.926]  - Getting '...' globals ...
[08:25:04.926]    - '...' content: [n=1] ‘b’
[08:25:04.926] List of 1
[08:25:04.926]  $ ...:List of 1
[08:25:04.926]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:04.926]   .. .. ..@ slots     :List of 4
[08:25:04.926]   .. .. .. ..$ .Data  : chr "function"
[08:25:04.926]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. ..$ target : chr "signature"
[08:25:04.926]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. ..$ defined: chr "signature"
[08:25:04.926]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. ..$ generic: chr "character"
[08:25:04.926]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. ..@ contains  :List of 3
[08:25:04.926]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.926]   .. .. ..@ virtual   : logi FALSE
[08:25:04.926]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:04.926]  list()
[08:25:04.926]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:04.926]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:04.926]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:04.926]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:04.926]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:04.926]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:04.926]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:04.926]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:04.926]   .. .. .. .. ..$ generic: chr(0) 
[08:25:04.926]   .. .. ..@ validity  : NULL
[08:25:04.926]   .. .. ..@ access    : list()
[08:25:04.926]   .. .. ..@ className : chr "MethodDefinition"
[08:25:04.926]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. ..@ subclasses:List of 7
[08:25:04.926]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.926]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.926]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.926]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.926]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.926]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.926]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.926]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.926]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:04.926]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.926]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.926]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.926]   .. .. ..@ versionKey:<externalptr> 
[08:25:04.926]   .. .. ..@ sealed    : logi TRUE
[08:25:04.926]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.926]  - attr(*, "where")=List of 1
[08:25:04.926]   ..$ ...:<environment: 0x564c3725e560> 
[08:25:04.926]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.926]  - attr(*, "resolved")= logi TRUE
[08:25:04.926]  - attr(*, "total_size")= num NA
[08:25:04.975]  - Getting '...' globals ... DONE
[08:25:04.975] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:04.975] List of 2
[08:25:04.975]  $ ...future.FUN:function (a, b)  
[08:25:04.975]  $ ...          :List of 1
[08:25:04.975]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[08:25:04.975]   .. .. ..@ slots     :List of 4
[08:25:04.975]   .. .. .. ..$ .Data  : chr "function"
[08:25:04.975]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. ..$ target : chr "signature"
[08:25:04.975]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. ..$ defined: chr "signature"
[08:25:04.975]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. ..$ generic: chr "character"
[08:25:04.975]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. ..@ contains  :List of 3
[08:25:04.975]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "function"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr "function"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.975]   .. .. ..@ virtual   : logi FALSE
[08:25:04.975]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[08:25:04.975]  list()
[08:25:04.975]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[08:25:04.975]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:04.975]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:04.975]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:04.975]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[08:25:04.975]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[08:25:04.975]   .. .. .. .. .. .. ..@ names  : chr(0) 
[08:25:04.975]   .. .. .. .. .. .. ..@ package: chr(0) 
[08:25:04.975]   .. .. .. .. ..$ generic: chr(0) 
[08:25:04.975]   .. .. ..@ validity  : NULL
[08:25:04.975]   .. .. ..@ access    : list()
[08:25:04.975]   .. .. ..@ className : chr "MethodDefinition"
[08:25:04.975]   .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. ..@ subclasses:List of 7
[08:25:04.975]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr(0) 
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 1
[08:25:04.975]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.975]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.975]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[08:25:04.975]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ package   : chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[08:25:04.975]   .. .. .. .. .. ..@ test      :function (object)  
[08:25:04.975]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[08:25:04.975]   .. .. .. .. .. ..@ simple    : logi TRUE
[08:25:04.975]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[08:25:04.975]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[08:25:04.975]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[08:25:04.975]   .. .. .. .. .. ..@ distance  : num 2
[08:25:04.975]   .. .. ..@ versionKey:<externalptr> 
[08:25:04.975]   .. .. ..@ sealed    : logi TRUE
[08:25:04.975]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:04.975]  - attr(*, "where")=List of 2
[08:25:04.975]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:04.975]   ..$ ...          :<environment: 0x564c3725e560> 
[08:25:04.975]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:04.975]  - attr(*, "resolved")= logi FALSE
[08:25:04.975]  - attr(*, "total_size")= num 97748
[08:25:05.023] Packages to be attached in all futures: [n=0] 
[08:25:05.023] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.024] Number of futures (= number of chunks): 1
[08:25:05.024] Launching 1 futures (chunks) ...
[08:25:05.024] Chunk #1 of 1 ...
[08:25:05.024]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.024]    + additional globals found: [n=0] 
[08:25:05.024]    + additional namespaces needed: [n=0] 
[08:25:05.024]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.024]  - seeds: <none>
[08:25:05.025]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.084] Created future:
[08:25:05.084] MultisessionFuture:
[08:25:05.084] Label: ‘future_lapply-1’
[08:25:05.084] Expression:
[08:25:05.084] {
[08:25:05.084]     do.call(function(...) {
[08:25:05.084]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.084]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.084]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.084]             on.exit(options(oopts), add = TRUE)
[08:25:05.084]         }
[08:25:05.084]         {
[08:25:05.084]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.084]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.084]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.084]             })
[08:25:05.084]         }
[08:25:05.084]     }, args = future.call.arguments)
[08:25:05.084] }
[08:25:05.084] Lazy evaluation: FALSE
[08:25:05.084] Asynchronous evaluation: TRUE
[08:25:05.084] Local evaluation: TRUE
[08:25:05.084] Environment: R_GlobalEnv
[08:25:05.084] Capture standard output: TRUE
[08:25:05.084] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.084] Globals: 5 objects totaling 46.83 KiB (function ‘...future.FUN’ of 332 bytes, DotDotDotList ‘future.call.arguments’ of 46.42 KiB, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.084] Packages: <none>
[08:25:05.084] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.084] Resolved: FALSE
[08:25:05.084] Value: <not collected>
[08:25:05.084] Conditions captured: <none>
[08:25:05.084] Early signaling: FALSE
[08:25:05.084] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.084] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.096] Chunk #1 of 1 ... DONE
[08:25:05.096] Launching 1 futures (chunks) ... DONE
[08:25:05.097] Resolving 1 futures (chunks) ...
[08:25:05.127]  - Number of value chunks collected: 1
[08:25:05.127] Resolving 1 futures (chunks) ... DONE
[08:25:05.127] Reducing values from 1 chunks ...
[08:25:05.127]  - Number of values collected after concatenation: 1
[08:25:05.127]  - Number of values expected: 1
[08:25:05.127] Reducing values from 1 chunks ... DONE
[08:25:05.127] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[08:25:05.129] future_lapply() ...
[08:25:05.132] Number of chunks: 2
[08:25:05.132] getGlobalsAndPackagesXApply() ...
[08:25:05.132]  - future.globals: TRUE
[08:25:05.133]  - globals found/used: [n=1] ‘FUN’
[08:25:05.133]  - needed namespaces: [n=0] 
[08:25:05.133] Finding globals ... DONE
[08:25:05.133]  - use_args: TRUE
[08:25:05.134]  - Getting '...' globals ...
[08:25:05.134]    - '...' content: [n=0] 
[08:25:05.134] List of 1
[08:25:05.134]  $ ...: list()
[08:25:05.134]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.134]  - attr(*, "where")=List of 1
[08:25:05.134]   ..$ ...:<environment: 0x564c371a96c0> 
[08:25:05.134]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.134]  - attr(*, "resolved")= logi TRUE
[08:25:05.134]  - attr(*, "total_size")= num NA
[08:25:05.136]  - Getting '...' globals ... DONE
[08:25:05.136] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:05.137] List of 2
[08:25:05.137]  $ ...future.FUN:function (f)  
[08:25:05.137]  $ ...          : list()
[08:25:05.137]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.137]  - attr(*, "where")=List of 2
[08:25:05.137]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.137]   ..$ ...          :<environment: 0x564c371a96c0> 
[08:25:05.137]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.137]  - attr(*, "resolved")= logi FALSE
[08:25:05.137]  - attr(*, "total_size")= num 4837
[08:25:05.139] Packages to be attached in all futures: [n=0] 
[08:25:05.139] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.139] Number of futures (= number of chunks): 2
[08:25:05.140] Launching 2 futures (chunks) ...
[08:25:05.140] Chunk #1 of 2 ...
[08:25:05.140]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.141]    + additional globals found: [n=2] ‘a’, ‘b’
[08:25:05.141]    + additional namespaces needed: [n=0] 
[08:25:05.142]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.142]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.142]  - seeds: <none>
[08:25:05.142]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[08:25:05.160] Created future:
[08:25:05.160] MultisessionFuture:
[08:25:05.160] Label: ‘future_lapply-1’
[08:25:05.160] Expression:
[08:25:05.160] {
[08:25:05.160]     do.call(function(...) {
[08:25:05.160]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.160]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.160]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.160]             on.exit(options(oopts), add = TRUE)
[08:25:05.160]         }
[08:25:05.160]         {
[08:25:05.160]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.160]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.160]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.160]             })
[08:25:05.160]         }
[08:25:05.160]     }, args = future.call.arguments)
[08:25:05.160] }
[08:25:05.160] Lazy evaluation: FALSE
[08:25:05.160] Asynchronous evaluation: TRUE
[08:25:05.160] Local evaluation: TRUE
[08:25:05.160] Environment: R_GlobalEnv
[08:25:05.160] Capture standard output: TRUE
[08:25:05.160] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.160] Globals: 7 objects totaling 1.02 KiB (function ‘...future.FUN’ of 225 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 588 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes, ...)
[08:25:05.160] Packages: <none>
[08:25:05.160] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.160] Resolved: FALSE
[08:25:05.160] Value: <not collected>
[08:25:05.160] Conditions captured: <none>
[08:25:05.160] Early signaling: FALSE
[08:25:05.160] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.160] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.171] Chunk #1 of 2 ... DONE
[08:25:05.171] Chunk #2 of 2 ...
[08:25:05.172]  - Finding globals in 'X' for chunk #2 ...
[08:25:05.174]    + additional globals found: [n=2] ‘a’, ‘b’
[08:25:05.174]    + additional namespaces needed: [n=1] ‘tools’
[08:25:05.174]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:05.174]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.174]  - seeds: <none>
[08:25:05.174]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[08:25:05.205] Created future:
[08:25:05.205] MultisessionFuture:
[08:25:05.205] Label: ‘future_lapply-2’
[08:25:05.205] Expression:
[08:25:05.205] {
[08:25:05.205]     do.call(function(...) {
[08:25:05.205]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.205]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.205]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.205]             on.exit(options(oopts), add = TRUE)
[08:25:05.205]         }
[08:25:05.205]         {
[08:25:05.205]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.205]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.205]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.205]             })
[08:25:05.205]         }
[08:25:05.205]     }, args = future.call.arguments)
[08:25:05.205] }
[08:25:05.205] Lazy evaluation: FALSE
[08:25:05.205] Asynchronous evaluation: TRUE
[08:25:05.205] Local evaluation: TRUE
[08:25:05.205] Environment: R_GlobalEnv
[08:25:05.205] Capture standard output: TRUE
[08:25:05.205] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.205] Globals: 7 objects totaling 1.33 KiB (function ‘...future.FUN’ of 225 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 903 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes, ...)
[08:25:05.205] Packages: 1 packages (‘tools’)
[08:25:05.205] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.205] Resolved: FALSE
[08:25:05.205] Value: <not collected>
[08:25:05.205] Conditions captured: <none>
[08:25:05.205] Early signaling: FALSE
[08:25:05.205] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.205] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.217] Chunk #2 of 2 ... DONE
[08:25:05.217] Launching 2 futures (chunks) ... DONE
[08:25:05.217] Resolving 2 futures (chunks) ...
[08:25:05.260]  - Number of value chunks collected: 2
[08:25:05.260] Resolving 2 futures (chunks) ... DONE
[08:25:05.260] Reducing values from 2 chunks ...
[08:25:05.261]  - Number of values collected after concatenation: 4
[08:25:05.261]  - Number of values expected: 4
[08:25:05.261] Reducing values from 2 chunks ... DONE
[08:25:05.261] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[08:25:05.263] future_lapply() ...
[08:25:05.265] Number of chunks: 1
[08:25:05.265] getGlobalsAndPackagesXApply() ...
[08:25:05.266]  - future.globals: TRUE
[08:25:05.268]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[08:25:05.268]  - needed namespaces: [n=0] 
[08:25:05.268] Finding globals ... DONE
[08:25:05.268]  - use_args: TRUE
[08:25:05.268]  - Getting '...' globals ...
[08:25:05.268]    - '...' content: [n=0] 
[08:25:05.268] List of 1
[08:25:05.268]  $ ...: list()
[08:25:05.268]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.268]  - attr(*, "where")=List of 1
[08:25:05.268]   ..$ ...:<environment: 0x564c3588f2d0> 
[08:25:05.268]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.268]  - attr(*, "resolved")= logi TRUE
[08:25:05.268]  - attr(*, "total_size")= num NA
[08:25:05.271]  - Getting '...' globals ... DONE
[08:25:05.271] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[08:25:05.271] List of 3
[08:25:05.271]  $ ...future.FUN        :function (x)  
[08:25:05.271]  $ future.call.arguments:List of 1
[08:25:05.271]   ..$ a: num 1
[08:25:05.271]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.271]  $ ...                  : list()
[08:25:05.271]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.271]  - attr(*, "where")=List of 3
[08:25:05.271]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[08:25:05.271]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[08:25:05.271]   ..$ ...                  :<environment: 0x564c3588f2d0> 
[08:25:05.271]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.271]  - attr(*, "resolved")= logi FALSE
[08:25:05.271]  - attr(*, "total_size")= num 3563
[08:25:05.275] Packages to be attached in all futures: [n=0] 
[08:25:05.275] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.275] Number of futures (= number of chunks): 1
[08:25:05.275] Launching 1 futures (chunks) ...
[08:25:05.275] Chunk #1 of 1 ...
[08:25:05.275]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.275]    + additional globals found: [n=0] 
[08:25:05.276]    + additional namespaces needed: [n=0] 
[08:25:05.276]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.276]  - seeds: <none>
[08:25:05.276]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.294] Created future:
[08:25:05.295] MultisessionFuture:
[08:25:05.295] Label: ‘future_lapply-1’
[08:25:05.295] Expression:
[08:25:05.295] {
[08:25:05.295]     do.call(function(...) {
[08:25:05.295]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.295]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.295]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.295]             on.exit(options(oopts), add = TRUE)
[08:25:05.295]         }
[08:25:05.295]         {
[08:25:05.295]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.295]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.295]                 ...future.FUN(...future.X_jj)
[08:25:05.295]             })
[08:25:05.295]         }
[08:25:05.295]     }, args = future.call.arguments)
[08:25:05.295] }
[08:25:05.295] Lazy evaluation: FALSE
[08:25:05.295] Asynchronous evaluation: TRUE
[08:25:05.295] Local evaluation: TRUE
[08:25:05.295] Environment: 0x564c3588ef50
[08:25:05.295] Capture standard output: TRUE
[08:25:05.295] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.295] Globals: 5 objects totaling 613 bytes (function ‘...future.FUN’ of 361 bytes, DotDotDotList ‘future.call.arguments’ of 151 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.295] Packages: <none>
[08:25:05.295] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.295] Resolved: FALSE
[08:25:05.295] Value: <not collected>
[08:25:05.295] Conditions captured: <none>
[08:25:05.295] Early signaling: FALSE
[08:25:05.295] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.295] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.306] Chunk #1 of 1 ... DONE
[08:25:05.307] Launching 1 futures (chunks) ... DONE
[08:25:05.307] Resolving 1 futures (chunks) ...
[08:25:05.337]  - Number of value chunks collected: 1
[08:25:05.337] Resolving 1 futures (chunks) ... DONE
[08:25:05.337] Reducing values from 1 chunks ...
[08:25:05.337]  - Number of values collected after concatenation: 1
[08:25:05.337]  - Number of values expected: 1
[08:25:05.337] Reducing values from 1 chunks ... DONE
[08:25:05.338] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[08:25:05.339] future_lapply() ...
[08:25:05.341] Number of chunks: 1
[08:25:05.341] getGlobalsAndPackagesXApply() ...
[08:25:05.341]  - future.globals: TRUE
[08:25:05.343]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:05.344]  - needed namespaces: [n=0] 
[08:25:05.344] Finding globals ... DONE
[08:25:05.344]  - use_args: TRUE
[08:25:05.344]  - Getting '...' globals ...
[08:25:05.344]    - '...' content: [n=0] 
[08:25:05.344] List of 1
[08:25:05.344]  $ ...: list()
[08:25:05.344]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.344]  - attr(*, "where")=List of 1
[08:25:05.344]   ..$ ...:<environment: 0x564c36ef7aa0> 
[08:25:05.344]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.344]  - attr(*, "resolved")= logi TRUE
[08:25:05.344]  - attr(*, "total_size")= num NA
[08:25:05.347]  - Getting '...' globals ... DONE
[08:25:05.347] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:05.347] List of 3
[08:25:05.347]  $ ...future.FUN:function (ii)  
[08:25:05.347]  $ a            : num 1
[08:25:05.347]  $ ...          : list()
[08:25:05.347]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.347]  - attr(*, "where")=List of 3
[08:25:05.347]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.347]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:05.347]   ..$ ...          :<environment: 0x564c36ef7aa0> 
[08:25:05.347]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.347]  - attr(*, "resolved")= logi FALSE
[08:25:05.347]  - attr(*, "total_size")= num 3759
[08:25:05.350] Packages to be attached in all futures: [n=0] 
[08:25:05.350] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.350] Number of futures (= number of chunks): 1
[08:25:05.351] Launching 1 futures (chunks) ...
[08:25:05.351] Chunk #1 of 1 ...
[08:25:05.351]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.351]    + additional globals found: [n=0] 
[08:25:05.351]    + additional namespaces needed: [n=0] 
[08:25:05.351]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.351]  - seeds: <none>
[08:25:05.351]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.369] Created future:
[08:25:05.369] MultisessionFuture:
[08:25:05.369] Label: ‘future_lapply-1’
[08:25:05.369] Expression:
[08:25:05.369] {
[08:25:05.369]     do.call(function(...) {
[08:25:05.369]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.369]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.369]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.369]             on.exit(options(oopts), add = TRUE)
[08:25:05.369]         }
[08:25:05.369]         {
[08:25:05.369]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.369]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.369]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.369]             })
[08:25:05.369]         }
[08:25:05.369]     }, args = future.call.arguments)
[08:25:05.369] }
[08:25:05.369] Lazy evaluation: FALSE
[08:25:05.369] Asynchronous evaluation: TRUE
[08:25:05.369] Local evaluation: TRUE
[08:25:05.369] Environment: R_GlobalEnv
[08:25:05.369] Capture standard output: TRUE
[08:25:05.369] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.369] Globals: 6 objects totaling 748 bytes (function ‘...future.FUN’ of 511 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:05.369] Packages: <none>
[08:25:05.369] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.369] Resolved: FALSE
[08:25:05.369] Value: <not collected>
[08:25:05.369] Conditions captured: <none>
[08:25:05.369] Early signaling: FALSE
[08:25:05.369] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.369] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.383] Chunk #1 of 1 ... DONE
[08:25:05.383] Launching 1 futures (chunks) ... DONE
[08:25:05.383] Resolving 1 futures (chunks) ...
[08:25:05.412]  - Number of value chunks collected: 1
[08:25:05.412] Resolving 1 futures (chunks) ... DONE
[08:25:05.412] Reducing values from 1 chunks ...
[08:25:05.412]  - Number of values collected after concatenation: 1
[08:25:05.412]  - Number of values expected: 1
[08:25:05.412] Reducing values from 1 chunks ... DONE
[08:25:05.412] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[08:25:05.412] future_lapply() ...
[08:25:05.415] Number of chunks: 1
[08:25:05.415] getGlobalsAndPackagesXApply() ...
[08:25:05.415]  - future.globals: TRUE
[08:25:05.417]  - globals found/used: [n=2] ‘FUN’, ‘a’
[08:25:05.417]  - needed namespaces: [n=0] 
[08:25:05.417] Finding globals ... DONE
[08:25:05.417]  - use_args: TRUE
[08:25:05.417]  - Getting '...' globals ...
[08:25:05.418]    - '...' content: [n=0] 
[08:25:05.418] List of 1
[08:25:05.418]  $ ...: list()
[08:25:05.418]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.418]  - attr(*, "where")=List of 1
[08:25:05.418]   ..$ ...:<environment: 0x564c3619be78> 
[08:25:05.418]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.418]  - attr(*, "resolved")= logi TRUE
[08:25:05.418]  - attr(*, "total_size")= num NA
[08:25:05.420]  - Getting '...' globals ... DONE
[08:25:05.420] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[08:25:05.420] List of 3
[08:25:05.420]  $ ...future.FUN:function (ii)  
[08:25:05.420]  $ a            : num 1
[08:25:05.420]  $ ...          : list()
[08:25:05.420]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.420]  - attr(*, "where")=List of 3
[08:25:05.420]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.420]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:05.420]   ..$ ...          :<environment: 0x564c3619be78> 
[08:25:05.420]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.420]  - attr(*, "resolved")= logi FALSE
[08:25:05.420]  - attr(*, "total_size")= num 3775
[08:25:05.423] Packages to be attached in all futures: [n=0] 
[08:25:05.424] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.424] Number of futures (= number of chunks): 1
[08:25:05.424] Launching 1 futures (chunks) ...
[08:25:05.424] Chunk #1 of 1 ...
[08:25:05.424]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.424]    + additional globals found: [n=0] 
[08:25:05.424]    + additional namespaces needed: [n=0] 
[08:25:05.424]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.425]  - seeds: <none>
[08:25:05.425]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.443] Created future:
[08:25:05.443] MultisessionFuture:
[08:25:05.443] Label: ‘future_lapply-1’
[08:25:05.443] Expression:
[08:25:05.443] {
[08:25:05.443]     do.call(function(...) {
[08:25:05.443]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.443]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.443]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.443]             on.exit(options(oopts), add = TRUE)
[08:25:05.443]         }
[08:25:05.443]         {
[08:25:05.443]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.443]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.443]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.443]             })
[08:25:05.443]         }
[08:25:05.443]     }, args = future.call.arguments)
[08:25:05.443] }
[08:25:05.443] Lazy evaluation: FALSE
[08:25:05.443] Asynchronous evaluation: TRUE
[08:25:05.443] Local evaluation: TRUE
[08:25:05.443] Environment: R_GlobalEnv
[08:25:05.443] Capture standard output: TRUE
[08:25:05.443] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.443] Globals: 6 objects totaling 756 bytes (function ‘...future.FUN’ of 519 bytes, numeric ‘a’ of 39 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:05.443] Packages: <none>
[08:25:05.443] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.443] Resolved: FALSE
[08:25:05.443] Value: <not collected>
[08:25:05.443] Conditions captured: <none>
[08:25:05.443] Early signaling: FALSE
[08:25:05.443] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.443] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.455] Chunk #1 of 1 ... DONE
[08:25:05.455] Launching 1 futures (chunks) ... DONE
[08:25:05.455] Resolving 1 futures (chunks) ...
[08:25:05.486]  - Number of value chunks collected: 1
[08:25:05.486] Resolving 1 futures (chunks) ... DONE
[08:25:05.486] Reducing values from 1 chunks ...
[08:25:05.486]  - Number of values collected after concatenation: 1
[08:25:05.486]  - Number of values expected: 1
[08:25:05.486] Reducing values from 1 chunks ... DONE
[08:25:05.486] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[08:25:05.487] future_lapply() ...
[08:25:05.489] Number of chunks: 1
[08:25:05.489] getGlobalsAndPackagesXApply() ...
[08:25:05.489]  - future.globals: <name-value list> with names ‘42’
[08:25:05.489]  - use_args: TRUE
[08:25:05.489]  - Getting '...' globals ...
[08:25:05.490]    - '...' content: [n=0] 
[08:25:05.490] List of 1
[08:25:05.490]  $ ...: list()
[08:25:05.490]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.490]  - attr(*, "where")=List of 1
[08:25:05.490]   ..$ ...:<environment: 0x564c3353a3d0> 
[08:25:05.490]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.490]  - attr(*, "resolved")= logi TRUE
[08:25:05.490]  - attr(*, "total_size")= num NA
[08:25:05.492]  - Getting '...' globals ... DONE
[08:25:05.492] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[08:25:05.492] List of 3
[08:25:05.492]  $ a            : num 42
[08:25:05.492]  $ ...future.FUN:function (x)  
[08:25:05.492]  $ ...          : list()
[08:25:05.492]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.492]  - attr(*, "where")=List of 3
[08:25:05.492]   ..$ a            :<environment: R_EmptyEnv> 
[08:25:05.492]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[08:25:05.492]   ..$ ...          :<environment: 0x564c3353a3d0> 
[08:25:05.492]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.492]  - attr(*, "resolved")= logi FALSE
[08:25:05.492]  - attr(*, "total_size")= num NA
[08:25:05.496] Packages to be attached in all futures: [n=0] 
[08:25:05.496] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.496] Number of futures (= number of chunks): 1
[08:25:05.496] Launching 1 futures (chunks) ...
[08:25:05.496] Chunk #1 of 1 ...
[08:25:05.496]  - seeds: <none>
[08:25:05.496]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.514] Created future:
[08:25:05.515] MultisessionFuture:
[08:25:05.515] Label: ‘future_lapply-1’
[08:25:05.515] Expression:
[08:25:05.515] {
[08:25:05.515]     do.call(function(...) {
[08:25:05.515]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.515]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.515]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.515]             on.exit(options(oopts), add = TRUE)
[08:25:05.515]         }
[08:25:05.515]         {
[08:25:05.515]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.515]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.515]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.515]             })
[08:25:05.515]         }
[08:25:05.515]     }, args = future.call.arguments)
[08:25:05.515] }
[08:25:05.515] Lazy evaluation: FALSE
[08:25:05.515] Asynchronous evaluation: TRUE
[08:25:05.515] Local evaluation: TRUE
[08:25:05.515] Environment: R_GlobalEnv
[08:25:05.515] Capture standard output: TRUE
[08:25:05.515] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.515] Globals: 6 objects totaling 535 bytes (numeric ‘a’ of 39 bytes, function ‘...future.FUN’ of 298 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 47 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, ...)
[08:25:05.515] Packages: <none>
[08:25:05.515] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.515] Resolved: FALSE
[08:25:05.515] Value: <not collected>
[08:25:05.515] Conditions captured: <none>
[08:25:05.515] Early signaling: FALSE
[08:25:05.515] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.515] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.526] Chunk #1 of 1 ... DONE
[08:25:05.526] Launching 1 futures (chunks) ... DONE
[08:25:05.526] Resolving 1 futures (chunks) ...
[08:25:05.558]  - Number of value chunks collected: 1
[08:25:05.558] Resolving 1 futures (chunks) ... DONE
[08:25:05.558] Reducing values from 1 chunks ...
[08:25:05.558]  - Number of values collected after concatenation: 1
[08:25:05.558]  - Number of values expected: 1
[08:25:05.558] Reducing values from 1 chunks ... DONE
[08:25:05.558] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[08:25:05.559] future_lapply() ...
[08:25:05.561] Number of chunks: 2
[08:25:05.561] getGlobalsAndPackagesXApply() ...
[08:25:05.562]  - future.globals: TRUE
[08:25:05.563]  - globals found/used: [n=1] ‘FUN’
[08:25:05.563]  - needed namespaces: [n=0] 
[08:25:05.563] Finding globals ... DONE
[08:25:05.563]  - use_args: TRUE
[08:25:05.563]  - Getting '...' globals ...
[08:25:05.564]    - '...' content: [n=0] 
[08:25:05.564] List of 1
[08:25:05.564]  $ ...: list()
[08:25:05.564]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.564]  - attr(*, "where")=List of 1
[08:25:05.564]   ..$ ...:<environment: 0x564c367c2a80> 
[08:25:05.564]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.564]  - attr(*, "resolved")= logi TRUE
[08:25:05.564]  - attr(*, "total_size")= num NA
[08:25:05.566]  - Getting '...' globals ... DONE
[08:25:05.566] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:05.566] List of 2
[08:25:05.566]  $ ...future.FUN:function (y)  
[08:25:05.566]  $ ...          : list()
[08:25:05.566]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.566]  - attr(*, "where")=List of 2
[08:25:05.566]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.566]   ..$ ...          :<environment: 0x564c367c2a80> 
[08:25:05.566]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.566]  - attr(*, "resolved")= logi FALSE
[08:25:05.566]  - attr(*, "total_size")= num 3388
[08:25:05.571] Packages to be attached in all futures: [n=0] 
[08:25:05.572] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.572] Number of futures (= number of chunks): 2
[08:25:05.572] Launching 2 futures (chunks) ...
[08:25:05.572] Chunk #1 of 2 ...
[08:25:05.572]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.572]    + additional globals found: [n=0] 
[08:25:05.572]    + additional namespaces needed: [n=0] 
[08:25:05.573]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.573]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.573]  - seeds: <none>
[08:25:05.573]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.590] Created future:
[08:25:05.590] MultisessionFuture:
[08:25:05.590] Label: ‘future_lapply-1’
[08:25:05.590] Expression:
[08:25:05.590] {
[08:25:05.590]     do.call(function(...) {
[08:25:05.590]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.590]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.590]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.590]             on.exit(options(oopts), add = TRUE)
[08:25:05.590]         }
[08:25:05.590]         {
[08:25:05.590]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.590]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.590]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.590]             })
[08:25:05.590]         }
[08:25:05.590]     }, args = future.call.arguments)
[08:25:05.590] }
[08:25:05.590] Lazy evaluation: FALSE
[08:25:05.590] Asynchronous evaluation: TRUE
[08:25:05.590] Local evaluation: TRUE
[08:25:05.590] Environment: 0x564c367c2e70
[08:25:05.590] Capture standard output: TRUE
[08:25:05.590] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.590] Globals: 5 objects totaling 489 bytes (function ‘...future.FUN’ of 295 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.590] Packages: <none>
[08:25:05.590] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.590] Resolved: FALSE
[08:25:05.590] Value: <not collected>
[08:25:05.590] Conditions captured: <none>
[08:25:05.590] Early signaling: FALSE
[08:25:05.590] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.590] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.602] Chunk #1 of 2 ... DONE
[08:25:05.602] Chunk #2 of 2 ...
[08:25:05.602]  - Finding globals in 'X' for chunk #2 ...
[08:25:05.602]    + additional globals found: [n=0] 
[08:25:05.602]    + additional namespaces needed: [n=0] 
[08:25:05.603]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:05.603]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.603]  - seeds: <none>
[08:25:05.603]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.620] Created future:
[08:25:05.620] MultisessionFuture:
[08:25:05.620] Label: ‘future_lapply-2’
[08:25:05.620] Expression:
[08:25:05.620] {
[08:25:05.620]     do.call(function(...) {
[08:25:05.620]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.620]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.620]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.620]             on.exit(options(oopts), add = TRUE)
[08:25:05.620]         }
[08:25:05.620]         {
[08:25:05.620]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.620]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.620]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.620]             })
[08:25:05.620]         }
[08:25:05.620]     }, args = future.call.arguments)
[08:25:05.620] }
[08:25:05.620] Lazy evaluation: FALSE
[08:25:05.620] Asynchronous evaluation: TRUE
[08:25:05.620] Local evaluation: TRUE
[08:25:05.620] Environment: 0x564c367c2e70
[08:25:05.620] Capture standard output: TRUE
[08:25:05.620] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.620] Globals: 5 objects totaling 489 bytes (function ‘...future.FUN’ of 295 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.620] Packages: <none>
[08:25:05.620] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.620] Resolved: FALSE
[08:25:05.620] Value: <not collected>
[08:25:05.620] Conditions captured: <none>
[08:25:05.620] Early signaling: FALSE
[08:25:05.620] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.620] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.632] Chunk #2 of 2 ... DONE
[08:25:05.632] Launching 2 futures (chunks) ... DONE
[08:25:05.632] Resolving 2 futures (chunks) ...
[08:25:05.663]  - Number of value chunks collected: 2
[08:25:05.663] Resolving 2 futures (chunks) ... DONE
[08:25:05.663] Reducing values from 2 chunks ...
[08:25:05.663]  - Number of values collected after concatenation: 2
[08:25:05.663]  - Number of values expected: 2
[08:25:05.663] Reducing values from 2 chunks ... DONE
[08:25:05.664] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[08:25:05.664] future_lapply() ...
[08:25:05.666] Number of chunks: 2
[08:25:05.666] getGlobalsAndPackagesXApply() ...
[08:25:05.666]  - future.globals: TRUE
[08:25:05.668]  - globals found/used: [n=1] ‘FUN’
[08:25:05.668]  - needed namespaces: [n=0] 
[08:25:05.668] Finding globals ... DONE
[08:25:05.668]  - use_args: TRUE
[08:25:05.668]  - Getting '...' globals ...
[08:25:05.669]    - '...' content: [n=0] 
[08:25:05.669] List of 1
[08:25:05.669]  $ ...: list()
[08:25:05.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.669]  - attr(*, "where")=List of 1
[08:25:05.669]   ..$ ...:<environment: 0x564c349e41b8> 
[08:25:05.669]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.669]  - attr(*, "resolved")= logi TRUE
[08:25:05.669]  - attr(*, "total_size")= num NA
[08:25:05.671]  - Getting '...' globals ... DONE
[08:25:05.671] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:05.671] List of 2
[08:25:05.671]  $ ...future.FUN:function (y)  
[08:25:05.671]  $ ...          : list()
[08:25:05.671]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.671]  - attr(*, "where")=List of 2
[08:25:05.671]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.671]   ..$ ...          :<environment: 0x564c349e41b8> 
[08:25:05.671]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.671]  - attr(*, "resolved")= logi FALSE
[08:25:05.671]  - attr(*, "total_size")= num 3576
[08:25:05.674] Packages to be attached in all futures: [n=0] 
[08:25:05.674] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.674] Number of futures (= number of chunks): 2
[08:25:05.674] Launching 2 futures (chunks) ...
[08:25:05.674] Chunk #1 of 2 ...
[08:25:05.675]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.675]    + additional globals found: [n=0] 
[08:25:05.675]    + additional namespaces needed: [n=0] 
[08:25:05.675]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.675]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.675]  - seeds: <none>
[08:25:05.675]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.692] Created future:
[08:25:05.693] MultisessionFuture:
[08:25:05.693] Label: ‘future_lapply-1’
[08:25:05.693] Expression:
[08:25:05.693] {
[08:25:05.693]     do.call(function(...) {
[08:25:05.693]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.693]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.693]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.693]             on.exit(options(oopts), add = TRUE)
[08:25:05.693]         }
[08:25:05.693]         {
[08:25:05.693]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.693]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.693]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.693]             })
[08:25:05.693]         }
[08:25:05.693]     }, args = future.call.arguments)
[08:25:05.693] }
[08:25:05.693] Lazy evaluation: FALSE
[08:25:05.693] Asynchronous evaluation: TRUE
[08:25:05.693] Local evaluation: TRUE
[08:25:05.693] Environment: 0x564c349e3dc8
[08:25:05.693] Capture standard output: TRUE
[08:25:05.693] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.693] Globals: 5 objects totaling 583 bytes (function ‘...future.FUN’ of 389 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.693] Packages: <none>
[08:25:05.693] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.693] Resolved: FALSE
[08:25:05.693] Value: <not collected>
[08:25:05.693] Conditions captured: <none>
[08:25:05.693] Early signaling: FALSE
[08:25:05.693] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.693] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.704] Chunk #1 of 2 ... DONE
[08:25:05.704] Chunk #2 of 2 ...
[08:25:05.704]  - Finding globals in 'X' for chunk #2 ...
[08:25:05.705]    + additional globals found: [n=0] 
[08:25:05.705]    + additional namespaces needed: [n=0] 
[08:25:05.705]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:05.705]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.705]  - seeds: <none>
[08:25:05.705]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.722] Created future:
[08:25:05.722] MultisessionFuture:
[08:25:05.722] Label: ‘future_lapply-2’
[08:25:05.722] Expression:
[08:25:05.722] {
[08:25:05.722]     do.call(function(...) {
[08:25:05.722]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.722]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.722]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.722]             on.exit(options(oopts), add = TRUE)
[08:25:05.722]         }
[08:25:05.722]         {
[08:25:05.722]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.722]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.722]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.722]             })
[08:25:05.722]         }
[08:25:05.722]     }, args = future.call.arguments)
[08:25:05.722] }
[08:25:05.722] Lazy evaluation: FALSE
[08:25:05.722] Asynchronous evaluation: TRUE
[08:25:05.722] Local evaluation: TRUE
[08:25:05.722] Environment: 0x564c349e3dc8
[08:25:05.722] Capture standard output: TRUE
[08:25:05.722] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.722] Globals: 5 objects totaling 583 bytes (function ‘...future.FUN’ of 389 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 43 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.722] Packages: <none>
[08:25:05.722] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.722] Resolved: FALSE
[08:25:05.722] Value: <not collected>
[08:25:05.722] Conditions captured: <none>
[08:25:05.722] Early signaling: FALSE
[08:25:05.722] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.722] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.734] Chunk #2 of 2 ... DONE
[08:25:05.734] Launching 2 futures (chunks) ... DONE
[08:25:05.734] Resolving 2 futures (chunks) ...
[08:25:05.765]  - Number of value chunks collected: 2
[08:25:05.765] Resolving 2 futures (chunks) ... DONE
[08:25:05.765] Reducing values from 2 chunks ...
[08:25:05.765]  - Number of values collected after concatenation: 2
[08:25:05.765]  - Number of values expected: 2
[08:25:05.766] Reducing values from 2 chunks ... DONE
[08:25:05.766] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[08:25:05.768] future_lapply() ...
[08:25:05.772] Number of chunks: 2
[08:25:05.772] getGlobalsAndPackagesXApply() ...
[08:25:05.772]  - future.globals: TRUE
[08:25:05.774] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[08:25:05.775] future_lapply() ...
[08:25:05.777] Number of chunks: 2
[08:25:05.777] getGlobalsAndPackagesXApply() ...
[08:25:05.777]  - future.globals: TRUE
[08:25:05.778]  - globals found/used: [n=1] ‘FUN’
[08:25:05.778]  - needed namespaces: [n=0] 
[08:25:05.778] Finding globals ... DONE
[08:25:05.779]  - use_args: TRUE
[08:25:05.779]  - Getting '...' globals ...
[08:25:05.779]    - '...' content: [n=0] 
[08:25:05.779] List of 1
[08:25:05.779]  $ ...: list()
[08:25:05.779]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.779]  - attr(*, "where")=List of 1
[08:25:05.779]   ..$ ...:<environment: 0x564c361e4538> 
[08:25:05.779]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.779]  - attr(*, "resolved")= logi TRUE
[08:25:05.779]  - attr(*, "total_size")= num NA
[08:25:05.781]  - Getting '...' globals ... DONE
[08:25:05.782] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:05.782] List of 2
[08:25:05.782]  $ ...future.FUN:function (x)  
[08:25:05.782]  $ ...          : list()
[08:25:05.782]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.782]  - attr(*, "where")=List of 2
[08:25:05.782]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.782]   ..$ ...          :<environment: 0x564c361e4538> 
[08:25:05.782]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.782]  - attr(*, "resolved")= logi FALSE
[08:25:05.782]  - attr(*, "total_size")= num 4316
[08:25:05.784] Packages to be attached in all futures: [n=0] 
[08:25:05.784] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.784] Number of futures (= number of chunks): 2
[08:25:05.785] Launching 2 futures (chunks) ...
[08:25:05.785] Chunk #1 of 2 ...
[08:25:05.785]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.785]    + additional globals found: [n=0] 
[08:25:05.785]    + additional namespaces needed: [n=0] 
[08:25:05.785]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.785]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.785]  - seeds: <none>
[08:25:05.786]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.803] Created future:
[08:25:05.803] MultisessionFuture:
[08:25:05.803] Label: ‘future_lapply-1’
[08:25:05.803] Expression:
[08:25:05.803] {
[08:25:05.803]     do.call(function(...) {
[08:25:05.803]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.803]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.803]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.803]             on.exit(options(oopts), add = TRUE)
[08:25:05.803]         }
[08:25:05.803]         {
[08:25:05.803]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.803]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.803]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.803]             })
[08:25:05.803]         }
[08:25:05.803]     }, args = future.call.arguments)
[08:25:05.803] }
[08:25:05.803] Lazy evaluation: FALSE
[08:25:05.803] Asynchronous evaluation: TRUE
[08:25:05.803] Local evaluation: TRUE
[08:25:05.803] Environment: R_GlobalEnv
[08:25:05.803] Capture standard output: TRUE
[08:25:05.803] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.803] Globals: 5 objects totaling 0.98 KiB (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 445 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.803] Packages: <none>
[08:25:05.803] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.803] Resolved: FALSE
[08:25:05.803] Value: <not collected>
[08:25:05.803] Conditions captured: <none>
[08:25:05.803] Early signaling: FALSE
[08:25:05.803] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.803] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.815] Chunk #1 of 2 ... DONE
[08:25:05.815] Chunk #2 of 2 ...
[08:25:05.815]  - Finding globals in 'X' for chunk #2 ...
[08:25:05.816]    + additional globals found: [n=0] 
[08:25:05.816]    + additional namespaces needed: [n=0] 
[08:25:05.816]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:05.816]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[08:25:05.816]  - seeds: <none>
[08:25:05.816]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.834] Created future:
[08:25:05.834] MultisessionFuture:
[08:25:05.834] Label: ‘future_lapply-2’
[08:25:05.834] Expression:
[08:25:05.834] {
[08:25:05.834]     do.call(function(...) {
[08:25:05.834]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.834]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.834]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.834]             on.exit(options(oopts), add = TRUE)
[08:25:05.834]         }
[08:25:05.834]         {
[08:25:05.834]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.834]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.834]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.834]             })
[08:25:05.834]         }
[08:25:05.834]     }, args = future.call.arguments)
[08:25:05.834] }
[08:25:05.834] Lazy evaluation: FALSE
[08:25:05.834] Asynchronous evaluation: TRUE
[08:25:05.834] Local evaluation: TRUE
[08:25:05.834] Environment: R_GlobalEnv
[08:25:05.834] Capture standard output: TRUE
[08:25:05.834] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.834] Globals: 5 objects totaling 0.98 KiB (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 445 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, NULL ‘...future.globals.maxSize’ of 27 bytes)
[08:25:05.834] Packages: <none>
[08:25:05.834] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.834] Resolved: FALSE
[08:25:05.834] Value: <not collected>
[08:25:05.834] Conditions captured: <none>
[08:25:05.834] Early signaling: FALSE
[08:25:05.834] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.834] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.846] Chunk #2 of 2 ... DONE
[08:25:05.846] Launching 2 futures (chunks) ... DONE
[08:25:05.846] Resolving 2 futures (chunks) ...
[08:25:05.877]  - Number of value chunks collected: 2
[08:25:05.877] Resolving 2 futures (chunks) ... DONE
[08:25:05.877] Reducing values from 2 chunks ...
[08:25:05.877]  - Number of values collected after concatenation: 10
[08:25:05.877]  - Number of values expected: 10
[08:25:05.878] Reducing values from 2 chunks ... DONE
[08:25:05.878] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[08:25:05.885] future_lapply() ...
[08:25:05.887] Number of chunks: 10
[08:25:05.887] getGlobalsAndPackagesXApply() ...
[08:25:05.887]  - future.globals: TRUE
[08:25:05.889]  - globals found/used: [n=1] ‘FUN’
[08:25:05.889]  - needed namespaces: [n=0] 
[08:25:05.889] Finding globals ... DONE
[08:25:05.889]  - use_args: TRUE
[08:25:05.889]  - Getting '...' globals ...
[08:25:05.890]    - '...' content: [n=0] 
[08:25:05.890] List of 1
[08:25:05.890]  $ ...: list()
[08:25:05.890]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.890]  - attr(*, "where")=List of 1
[08:25:05.890]   ..$ ...:<environment: 0x564c371a5688> 
[08:25:05.890]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.890]  - attr(*, "resolved")= logi TRUE
[08:25:05.890]  - attr(*, "total_size")= num NA
[08:25:05.892]  - Getting '...' globals ... DONE
[08:25:05.892] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:05.892] List of 2
[08:25:05.892]  $ ...future.FUN:function (x)  
[08:25:05.892]  $ ...          : list()
[08:25:05.892]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:05.892]  - attr(*, "where")=List of 2
[08:25:05.892]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:05.892]   ..$ ...          :<environment: 0x564c371a5688> 
[08:25:05.892]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:05.892]  - attr(*, "resolved")= logi FALSE
[08:25:05.892]  - attr(*, "total_size")= num 4731
[08:25:05.897] Packages to be attached in all futures: [n=0] 
[08:25:05.897] getGlobalsAndPackagesXApply() ... DONE
[08:25:05.897] Number of futures (= number of chunks): 10
[08:25:05.897] Launching 10 futures (chunks) ...
[08:25:05.897] Chunk #1 of 10 ...
[08:25:05.898]  - Finding globals in 'X' for chunk #1 ...
[08:25:05.898]    + additional globals found: [n=0] 
[08:25:05.898]    + additional namespaces needed: [n=0] 
[08:25:05.898]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:05.899]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:05.899]  - seeds: <none>
[08:25:05.899]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.916] Created future:
[08:25:05.917] MultisessionFuture:
[08:25:05.917] Label: ‘future_lapply-1’
[08:25:05.917] Expression:
[08:25:05.917] {
[08:25:05.917]     do.call(function(...) {
[08:25:05.917]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.917]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.917]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.917]             on.exit(options(oopts), add = TRUE)
[08:25:05.917]         }
[08:25:05.917]         {
[08:25:05.917]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.917]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.917]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.917]             })
[08:25:05.917]         }
[08:25:05.917]     }, args = future.call.arguments)
[08:25:05.917] }
[08:25:05.917] Lazy evaluation: FALSE
[08:25:05.917] Asynchronous evaluation: TRUE
[08:25:05.917] Local evaluation: TRUE
[08:25:05.917] Environment: R_GlobalEnv
[08:25:05.917] Capture standard output: TRUE
[08:25:05.917] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.917] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:05.917] Packages: <none>
[08:25:05.917] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.917] Resolved: FALSE
[08:25:05.917] Value: <not collected>
[08:25:05.917] Conditions captured: <none>
[08:25:05.917] Early signaling: FALSE
[08:25:05.917] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.917] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.928] Chunk #1 of 10 ... DONE
[08:25:05.928] Chunk #2 of 10 ...
[08:25:05.928]  - Finding globals in 'X' for chunk #2 ...
[08:25:05.929]    + additional globals found: [n=0] 
[08:25:05.929]    + additional namespaces needed: [n=0] 
[08:25:05.929]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:05.929]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:05.929]  - seeds: <none>
[08:25:05.929]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.946] Created future:
[08:25:05.946] MultisessionFuture:
[08:25:05.946] Label: ‘future_lapply-2’
[08:25:05.946] Expression:
[08:25:05.946] {
[08:25:05.946]     do.call(function(...) {
[08:25:05.946]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.946]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.946]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.946]             on.exit(options(oopts), add = TRUE)
[08:25:05.946]         }
[08:25:05.946]         {
[08:25:05.946]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.946]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.946]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.946]             })
[08:25:05.946]         }
[08:25:05.946]     }, args = future.call.arguments)
[08:25:05.946] }
[08:25:05.946] Lazy evaluation: FALSE
[08:25:05.946] Asynchronous evaluation: TRUE
[08:25:05.946] Local evaluation: TRUE
[08:25:05.946] Environment: R_GlobalEnv
[08:25:05.946] Capture standard output: TRUE
[08:25:05.946] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.946] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:05.946] Packages: <none>
[08:25:05.946] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.946] Resolved: FALSE
[08:25:05.946] Value: <not collected>
[08:25:05.946] Conditions captured: <none>
[08:25:05.946] Early signaling: FALSE
[08:25:05.946] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.946] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:05.958] Chunk #2 of 10 ... DONE
[08:25:05.958] Chunk #3 of 10 ...
[08:25:05.958]  - Finding globals in 'X' for chunk #3 ...
[08:25:05.959]    + additional globals found: [n=0] 
[08:25:05.959]    + additional namespaces needed: [n=0] 
[08:25:05.959]  - Finding globals in 'X' for chunk #3 ... DONE
[08:25:05.959]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:05.959]  - seeds: <none>
[08:25:05.959]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:05.988] Created future:
[08:25:05.988] MultisessionFuture:
[08:25:05.988] Label: ‘future_lapply-3’
[08:25:05.988] Expression:
[08:25:05.988] {
[08:25:05.988]     do.call(function(...) {
[08:25:05.988]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:05.988]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:05.988]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:05.988]             on.exit(options(oopts), add = TRUE)
[08:25:05.988]         }
[08:25:05.988]         {
[08:25:05.988]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:05.988]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:05.988]                 ...future.FUN(...future.X_jj, ...)
[08:25:05.988]             })
[08:25:05.988]         }
[08:25:05.988]     }, args = future.call.arguments)
[08:25:05.988] }
[08:25:05.988] Lazy evaluation: FALSE
[08:25:05.988] Asynchronous evaluation: TRUE
[08:25:05.988] Local evaluation: TRUE
[08:25:05.988] Environment: R_GlobalEnv
[08:25:05.988] Capture standard output: TRUE
[08:25:05.988] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:05.988] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:05.988] Packages: <none>
[08:25:05.988] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:05.988] Resolved: FALSE
[08:25:05.988] Value: <not collected>
[08:25:05.988] Conditions captured: <none>
[08:25:05.988] Early signaling: FALSE
[08:25:05.988] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:05.988] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.000] Chunk #3 of 10 ... DONE
[08:25:06.000] Chunk #4 of 10 ...
[08:25:06.000]  - Finding globals in 'X' for chunk #4 ...
[08:25:06.001]    + additional globals found: [n=0] 
[08:25:06.001]    + additional namespaces needed: [n=0] 
[08:25:06.001]  - Finding globals in 'X' for chunk #4 ... DONE
[08:25:06.001]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.001]  - seeds: <none>
[08:25:06.001]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.040] Created future:
[08:25:06.040] MultisessionFuture:
[08:25:06.040] Label: ‘future_lapply-4’
[08:25:06.040] Expression:
[08:25:06.040] {
[08:25:06.040]     do.call(function(...) {
[08:25:06.040]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.040]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.040]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.040]             on.exit(options(oopts), add = TRUE)
[08:25:06.040]         }
[08:25:06.040]         {
[08:25:06.040]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.040]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.040]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.040]             })
[08:25:06.040]         }
[08:25:06.040]     }, args = future.call.arguments)
[08:25:06.040] }
[08:25:06.040] Lazy evaluation: FALSE
[08:25:06.040] Asynchronous evaluation: TRUE
[08:25:06.040] Local evaluation: TRUE
[08:25:06.040] Environment: R_GlobalEnv
[08:25:06.040] Capture standard output: TRUE
[08:25:06.040] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.040] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.040] Packages: <none>
[08:25:06.040] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.040] Resolved: FALSE
[08:25:06.040] Value: <not collected>
[08:25:06.040] Conditions captured: <none>
[08:25:06.040] Early signaling: FALSE
[08:25:06.040] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.040] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.052] Chunk #4 of 10 ... DONE
[08:25:06.052] Chunk #5 of 10 ...
[08:25:06.052]  - Finding globals in 'X' for chunk #5 ...
[08:25:06.052]    + additional globals found: [n=0] 
[08:25:06.052]    + additional namespaces needed: [n=0] 
[08:25:06.052]  - Finding globals in 'X' for chunk #5 ... DONE
[08:25:06.052]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.053]  - seeds: <none>
[08:25:06.053]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.082] Created future:
[08:25:06.082] MultisessionFuture:
[08:25:06.082] Label: ‘future_lapply-5’
[08:25:06.082] Expression:
[08:25:06.082] {
[08:25:06.082]     do.call(function(...) {
[08:25:06.082]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.082]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.082]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.082]             on.exit(options(oopts), add = TRUE)
[08:25:06.082]         }
[08:25:06.082]         {
[08:25:06.082]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.082]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.082]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.082]             })
[08:25:06.082]         }
[08:25:06.082]     }, args = future.call.arguments)
[08:25:06.082] }
[08:25:06.082] Lazy evaluation: FALSE
[08:25:06.082] Asynchronous evaluation: TRUE
[08:25:06.082] Local evaluation: TRUE
[08:25:06.082] Environment: R_GlobalEnv
[08:25:06.082] Capture standard output: TRUE
[08:25:06.082] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.082] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.082] Packages: <none>
[08:25:06.082] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.082] Resolved: FALSE
[08:25:06.082] Value: <not collected>
[08:25:06.082] Conditions captured: <none>
[08:25:06.082] Early signaling: FALSE
[08:25:06.082] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.082] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.094] Chunk #5 of 10 ... DONE
[08:25:06.094] Chunk #6 of 10 ...
[08:25:06.094]  - Finding globals in 'X' for chunk #6 ...
[08:25:06.095]    + additional globals found: [n=0] 
[08:25:06.095]    + additional namespaces needed: [n=0] 
[08:25:06.095]  - Finding globals in 'X' for chunk #6 ... DONE
[08:25:06.095]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.095]  - seeds: <none>
[08:25:06.095]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.135] Created future:
[08:25:06.135] MultisessionFuture:
[08:25:06.135] Label: ‘future_lapply-6’
[08:25:06.135] Expression:
[08:25:06.135] {
[08:25:06.135]     do.call(function(...) {
[08:25:06.135]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.135]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.135]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.135]             on.exit(options(oopts), add = TRUE)
[08:25:06.135]         }
[08:25:06.135]         {
[08:25:06.135]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.135]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.135]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.135]             })
[08:25:06.135]         }
[08:25:06.135]     }, args = future.call.arguments)
[08:25:06.135] }
[08:25:06.135] Lazy evaluation: FALSE
[08:25:06.135] Asynchronous evaluation: TRUE
[08:25:06.135] Local evaluation: TRUE
[08:25:06.135] Environment: R_GlobalEnv
[08:25:06.135] Capture standard output: TRUE
[08:25:06.135] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.135] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.135] Packages: <none>
[08:25:06.135] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.135] Resolved: FALSE
[08:25:06.135] Value: <not collected>
[08:25:06.135] Conditions captured: <none>
[08:25:06.135] Early signaling: FALSE
[08:25:06.135] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.135] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.147] Chunk #6 of 10 ... DONE
[08:25:06.147] Chunk #7 of 10 ...
[08:25:06.147]  - Finding globals in 'X' for chunk #7 ...
[08:25:06.147]    + additional globals found: [n=0] 
[08:25:06.147]    + additional namespaces needed: [n=0] 
[08:25:06.148]  - Finding globals in 'X' for chunk #7 ... DONE
[08:25:06.148]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.148]  - seeds: <none>
[08:25:06.148]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.177] Created future:
[08:25:06.177] MultisessionFuture:
[08:25:06.177] Label: ‘future_lapply-7’
[08:25:06.177] Expression:
[08:25:06.177] {
[08:25:06.177]     do.call(function(...) {
[08:25:06.177]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.177]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.177]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.177]             on.exit(options(oopts), add = TRUE)
[08:25:06.177]         }
[08:25:06.177]         {
[08:25:06.177]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.177]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.177]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.177]             })
[08:25:06.177]         }
[08:25:06.177]     }, args = future.call.arguments)
[08:25:06.177] }
[08:25:06.177] Lazy evaluation: FALSE
[08:25:06.177] Asynchronous evaluation: TRUE
[08:25:06.177] Local evaluation: TRUE
[08:25:06.177] Environment: R_GlobalEnv
[08:25:06.177] Capture standard output: TRUE
[08:25:06.177] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.177] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.177] Packages: <none>
[08:25:06.177] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.177] Resolved: FALSE
[08:25:06.177] Value: <not collected>
[08:25:06.177] Conditions captured: <none>
[08:25:06.177] Early signaling: FALSE
[08:25:06.177] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.177] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.189] Chunk #7 of 10 ... DONE
[08:25:06.189] Chunk #8 of 10 ...
[08:25:06.189]  - Finding globals in 'X' for chunk #8 ...
[08:25:06.190]    + additional globals found: [n=0] 
[08:25:06.190]    + additional namespaces needed: [n=0] 
[08:25:06.190]  - Finding globals in 'X' for chunk #8 ... DONE
[08:25:06.190]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.190]  - seeds: <none>
[08:25:06.190]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.220] Created future:
[08:25:06.220] MultisessionFuture:
[08:25:06.220] Label: ‘future_lapply-8’
[08:25:06.220] Expression:
[08:25:06.220] {
[08:25:06.220]     do.call(function(...) {
[08:25:06.220]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.220]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.220]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.220]             on.exit(options(oopts), add = TRUE)
[08:25:06.220]         }
[08:25:06.220]         {
[08:25:06.220]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.220]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.220]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.220]             })
[08:25:06.220]         }
[08:25:06.220]     }, args = future.call.arguments)
[08:25:06.220] }
[08:25:06.220] Lazy evaluation: FALSE
[08:25:06.220] Asynchronous evaluation: TRUE
[08:25:06.220] Local evaluation: TRUE
[08:25:06.220] Environment: R_GlobalEnv
[08:25:06.220] Capture standard output: TRUE
[08:25:06.220] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.220] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.220] Packages: <none>
[08:25:06.220] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.220] Resolved: FALSE
[08:25:06.220] Value: <not collected>
[08:25:06.220] Conditions captured: <none>
[08:25:06.220] Early signaling: FALSE
[08:25:06.220] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.220] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.231] Chunk #8 of 10 ... DONE
[08:25:06.232] Chunk #9 of 10 ...
[08:25:06.232]  - Finding globals in 'X' for chunk #9 ...
[08:25:06.232]    + additional globals found: [n=0] 
[08:25:06.232]    + additional namespaces needed: [n=0] 
[08:25:06.232]  - Finding globals in 'X' for chunk #9 ... DONE
[08:25:06.232]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.233]  - seeds: <none>
[08:25:06.233]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.262] Created future:
[08:25:06.262] MultisessionFuture:
[08:25:06.262] Label: ‘future_lapply-9’
[08:25:06.262] Expression:
[08:25:06.262] {
[08:25:06.262]     do.call(function(...) {
[08:25:06.262]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.262]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.262]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.262]             on.exit(options(oopts), add = TRUE)
[08:25:06.262]         }
[08:25:06.262]         {
[08:25:06.262]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.262]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.262]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.262]             })
[08:25:06.262]         }
[08:25:06.262]     }, args = future.call.arguments)
[08:25:06.262] }
[08:25:06.262] Lazy evaluation: FALSE
[08:25:06.262] Asynchronous evaluation: TRUE
[08:25:06.262] Local evaluation: TRUE
[08:25:06.262] Environment: R_GlobalEnv
[08:25:06.262] Capture standard output: TRUE
[08:25:06.262] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.262] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.262] Packages: <none>
[08:25:06.262] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.262] Resolved: FALSE
[08:25:06.262] Value: <not collected>
[08:25:06.262] Conditions captured: <none>
[08:25:06.262] Early signaling: FALSE
[08:25:06.262] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.262] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.273] Chunk #9 of 10 ... DONE
[08:25:06.274] Chunk #10 of 10 ...
[08:25:06.274]  - Finding globals in 'X' for chunk #10 ...
[08:25:06.274]    + additional globals found: [n=0] 
[08:25:06.274]    + additional namespaces needed: [n=0] 
[08:25:06.274]  - Finding globals in 'X' for chunk #10 ... DONE
[08:25:06.274]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[08:25:06.275]  - seeds: <none>
[08:25:06.275]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.304] Created future:
[08:25:06.304] MultisessionFuture:
[08:25:06.304] Label: ‘future_lapply-10’
[08:25:06.304] Expression:
[08:25:06.304] {
[08:25:06.304]     do.call(function(...) {
[08:25:06.304]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.304]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.304]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.304]             on.exit(options(oopts), add = TRUE)
[08:25:06.304]         }
[08:25:06.304]         {
[08:25:06.304]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.304]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.304]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.304]             })
[08:25:06.304]         }
[08:25:06.304]     }, args = future.call.arguments)
[08:25:06.304] }
[08:25:06.304] Lazy evaluation: FALSE
[08:25:06.304] Asynchronous evaluation: TRUE
[08:25:06.304] Local evaluation: TRUE
[08:25:06.304] Environment: R_GlobalEnv
[08:25:06.304] Capture standard output: TRUE
[08:25:06.304] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.304] Globals: 5 objects totaling 711 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 141 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.304] Packages: <none>
[08:25:06.304] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.304] Resolved: FALSE
[08:25:06.304] Value: <not collected>
[08:25:06.304] Conditions captured: <none>
[08:25:06.304] Early signaling: FALSE
[08:25:06.304] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.304] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.316] Chunk #10 of 10 ... DONE
[08:25:06.316] Launching 10 futures (chunks) ... DONE
[08:25:06.316] Resolving 10 futures (chunks) ...
[08:25:06.347]  - Number of value chunks collected: 10
[08:25:06.348] Resolving 10 futures (chunks) ... DONE
[08:25:06.348] Reducing values from 10 chunks ...
[08:25:06.348]  - Number of values collected after concatenation: 10
[08:25:06.348]  - Number of values expected: 10
[08:25:06.348] Reducing values from 10 chunks ... DONE
[08:25:06.348] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[08:25:06.351] future_lapply() ...
[08:25:06.354] Number of chunks: 5
[08:25:06.354] getGlobalsAndPackagesXApply() ...
[08:25:06.354]  - future.globals: TRUE
[08:25:06.355]  - globals found/used: [n=1] ‘FUN’
[08:25:06.356]  - needed namespaces: [n=0] 
[08:25:06.356] Finding globals ... DONE
[08:25:06.356]  - use_args: TRUE
[08:25:06.356]  - Getting '...' globals ...
[08:25:06.356]    - '...' content: [n=0] 
[08:25:06.356] List of 1
[08:25:06.356]  $ ...: list()
[08:25:06.356]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.356]  - attr(*, "where")=List of 1
[08:25:06.356]   ..$ ...:<environment: 0x564c36a9e510> 
[08:25:06.356]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.356]  - attr(*, "resolved")= logi TRUE
[08:25:06.356]  - attr(*, "total_size")= num NA
[08:25:06.361]  - Getting '...' globals ... DONE
[08:25:06.361] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:06.361] List of 2
[08:25:06.361]  $ ...future.FUN:function (x)  
[08:25:06.361]  $ ...          : list()
[08:25:06.361]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.361]  - attr(*, "where")=List of 2
[08:25:06.361]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:06.361]   ..$ ...          :<environment: 0x564c36a9e510> 
[08:25:06.361]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.361]  - attr(*, "resolved")= logi FALSE
[08:25:06.361]  - attr(*, "total_size")= num 4731
[08:25:06.364] Packages to be attached in all futures: [n=0] 
[08:25:06.364] getGlobalsAndPackagesXApply() ... DONE
[08:25:06.364] Number of futures (= number of chunks): 5
[08:25:06.364] Launching 5 futures (chunks) ...
[08:25:06.364] Chunk #1 of 5 ...
[08:25:06.364]  - Finding globals in 'X' for chunk #1 ...
[08:25:06.365]    + additional globals found: [n=0] 
[08:25:06.365]    + additional namespaces needed: [n=0] 
[08:25:06.365]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:06.365]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[08:25:06.365]  - seeds: <none>
[08:25:06.365]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.382] Created future:
[08:25:06.383] MultisessionFuture:
[08:25:06.383] Label: ‘future_lapply-1’
[08:25:06.383] Expression:
[08:25:06.383] {
[08:25:06.383]     do.call(function(...) {
[08:25:06.383]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.383]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.383]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.383]             on.exit(options(oopts), add = TRUE)
[08:25:06.383]         }
[08:25:06.383]         {
[08:25:06.383]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.383]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.383]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.383]             })
[08:25:06.383]         }
[08:25:06.383]     }, args = future.call.arguments)
[08:25:06.383] }
[08:25:06.383] Lazy evaluation: FALSE
[08:25:06.383] Asynchronous evaluation: TRUE
[08:25:06.383] Local evaluation: TRUE
[08:25:06.383] Environment: R_GlobalEnv
[08:25:06.383] Capture standard output: TRUE
[08:25:06.383] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.383] Globals: 5 objects totaling 787 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 217 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.383] Packages: <none>
[08:25:06.383] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.383] Resolved: FALSE
[08:25:06.383] Value: <not collected>
[08:25:06.383] Conditions captured: <none>
[08:25:06.383] Early signaling: FALSE
[08:25:06.383] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.383] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.394] Chunk #1 of 5 ... DONE
[08:25:06.394] Chunk #2 of 5 ...
[08:25:06.394]  - Finding globals in 'X' for chunk #2 ...
[08:25:06.395]    + additional globals found: [n=0] 
[08:25:06.395]    + additional namespaces needed: [n=0] 
[08:25:06.395]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:06.395]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[08:25:06.395]  - seeds: <none>
[08:25:06.395]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.413] Created future:
[08:25:06.413] MultisessionFuture:
[08:25:06.413] Label: ‘future_lapply-2’
[08:25:06.413] Expression:
[08:25:06.413] {
[08:25:06.413]     do.call(function(...) {
[08:25:06.413]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.413]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.413]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.413]             on.exit(options(oopts), add = TRUE)
[08:25:06.413]         }
[08:25:06.413]         {
[08:25:06.413]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.413]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.413]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.413]             })
[08:25:06.413]         }
[08:25:06.413]     }, args = future.call.arguments)
[08:25:06.413] }
[08:25:06.413] Lazy evaluation: FALSE
[08:25:06.413] Asynchronous evaluation: TRUE
[08:25:06.413] Local evaluation: TRUE
[08:25:06.413] Environment: R_GlobalEnv
[08:25:06.413] Capture standard output: TRUE
[08:25:06.413] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.413] Globals: 5 objects totaling 787 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 217 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.413] Packages: <none>
[08:25:06.413] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.413] Resolved: FALSE
[08:25:06.413] Value: <not collected>
[08:25:06.413] Conditions captured: <none>
[08:25:06.413] Early signaling: FALSE
[08:25:06.413] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.413] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.425] Chunk #2 of 5 ... DONE
[08:25:06.425] Chunk #3 of 5 ...
[08:25:06.425]  - Finding globals in 'X' for chunk #3 ...
[08:25:06.425]    + additional globals found: [n=0] 
[08:25:06.426]    + additional namespaces needed: [n=0] 
[08:25:06.426]  - Finding globals in 'X' for chunk #3 ... DONE
[08:25:06.426]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[08:25:06.426]  - seeds: <none>
[08:25:06.426]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.455] Created future:
[08:25:06.455] MultisessionFuture:
[08:25:06.455] Label: ‘future_lapply-3’
[08:25:06.455] Expression:
[08:25:06.455] {
[08:25:06.455]     do.call(function(...) {
[08:25:06.455]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.455]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.455]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.455]             on.exit(options(oopts), add = TRUE)
[08:25:06.455]         }
[08:25:06.455]         {
[08:25:06.455]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.455]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.455]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.455]             })
[08:25:06.455]         }
[08:25:06.455]     }, args = future.call.arguments)
[08:25:06.455] }
[08:25:06.455] Lazy evaluation: FALSE
[08:25:06.455] Asynchronous evaluation: TRUE
[08:25:06.455] Local evaluation: TRUE
[08:25:06.455] Environment: R_GlobalEnv
[08:25:06.455] Capture standard output: TRUE
[08:25:06.455] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.455] Globals: 5 objects totaling 787 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 217 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.455] Packages: <none>
[08:25:06.455] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.455] Resolved: FALSE
[08:25:06.455] Value: <not collected>
[08:25:06.455] Conditions captured: <none>
[08:25:06.455] Early signaling: FALSE
[08:25:06.455] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.455] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.467] Chunk #3 of 5 ... DONE
[08:25:06.467] Chunk #4 of 5 ...
[08:25:06.467]  - Finding globals in 'X' for chunk #4 ...
[08:25:06.467]    + additional globals found: [n=0] 
[08:25:06.468]    + additional namespaces needed: [n=0] 
[08:25:06.468]  - Finding globals in 'X' for chunk #4 ... DONE
[08:25:06.468]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[08:25:06.468]  - seeds: <none>
[08:25:06.468]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.497] Created future:
[08:25:06.498] MultisessionFuture:
[08:25:06.498] Label: ‘future_lapply-4’
[08:25:06.498] Expression:
[08:25:06.498] {
[08:25:06.498]     do.call(function(...) {
[08:25:06.498]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.498]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.498]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.498]             on.exit(options(oopts), add = TRUE)
[08:25:06.498]         }
[08:25:06.498]         {
[08:25:06.498]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.498]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.498]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.498]             })
[08:25:06.498]         }
[08:25:06.498]     }, args = future.call.arguments)
[08:25:06.498] }
[08:25:06.498] Lazy evaluation: FALSE
[08:25:06.498] Asynchronous evaluation: TRUE
[08:25:06.498] Local evaluation: TRUE
[08:25:06.498] Environment: R_GlobalEnv
[08:25:06.498] Capture standard output: TRUE
[08:25:06.498] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.498] Globals: 5 objects totaling 787 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 217 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.498] Packages: <none>
[08:25:06.498] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.498] Resolved: FALSE
[08:25:06.498] Value: <not collected>
[08:25:06.498] Conditions captured: <none>
[08:25:06.498] Early signaling: FALSE
[08:25:06.498] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.498] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.509] Chunk #4 of 5 ... DONE
[08:25:06.509] Chunk #5 of 5 ...
[08:25:06.509]  - Finding globals in 'X' for chunk #5 ...
[08:25:06.510]    + additional globals found: [n=0] 
[08:25:06.510]    + additional namespaces needed: [n=0] 
[08:25:06.510]  - Finding globals in 'X' for chunk #5 ... DONE
[08:25:06.510]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[08:25:06.510]  - seeds: <none>
[08:25:06.510]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.539] Created future:
[08:25:06.539] MultisessionFuture:
[08:25:06.539] Label: ‘future_lapply-5’
[08:25:06.539] Expression:
[08:25:06.539] {
[08:25:06.539]     do.call(function(...) {
[08:25:06.539]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.539]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.539]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.539]             on.exit(options(oopts), add = TRUE)
[08:25:06.539]         }
[08:25:06.539]         {
[08:25:06.539]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.539]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.539]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.539]             })
[08:25:06.539]         }
[08:25:06.539]     }, args = future.call.arguments)
[08:25:06.539] }
[08:25:06.539] Lazy evaluation: FALSE
[08:25:06.539] Asynchronous evaluation: TRUE
[08:25:06.539] Local evaluation: TRUE
[08:25:06.539] Environment: R_GlobalEnv
[08:25:06.539] Capture standard output: TRUE
[08:25:06.539] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.539] Globals: 5 objects totaling 787 bytes (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 217 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.539] Packages: <none>
[08:25:06.539] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.539] Resolved: FALSE
[08:25:06.539] Value: <not collected>
[08:25:06.539] Conditions captured: <none>
[08:25:06.539] Early signaling: FALSE
[08:25:06.539] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.539] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.551] Chunk #5 of 5 ... DONE
[08:25:06.551] Launching 5 futures (chunks) ... DONE
[08:25:06.551] Resolving 5 futures (chunks) ...
[08:25:06.582]  - Number of value chunks collected: 5
[08:25:06.582] Resolving 5 futures (chunks) ... DONE
[08:25:06.582] Reducing values from 5 chunks ...
[08:25:06.582]  - Number of values collected after concatenation: 10
[08:25:06.582]  - Number of values expected: 10
[08:25:06.583] Reducing values from 5 chunks ... DONE
[08:25:06.583] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[08:25:06.586] future_lapply() ...
[08:25:06.591] Number of chunks: 2
[08:25:06.591] getGlobalsAndPackagesXApply() ...
[08:25:06.591]  - future.globals: TRUE
[08:25:06.593]  - globals found/used: [n=1] ‘FUN’
[08:25:06.593]  - needed namespaces: [n=0] 
[08:25:06.593] Finding globals ... DONE
[08:25:06.593]  - use_args: TRUE
[08:25:06.593]  - Getting '...' globals ...
[08:25:06.594]    - '...' content: [n=0] 
[08:25:06.594] List of 1
[08:25:06.594]  $ ...: list()
[08:25:06.594]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.594]  - attr(*, "where")=List of 1
[08:25:06.594]   ..$ ...:<environment: 0x564c374be508> 
[08:25:06.594]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.594]  - attr(*, "resolved")= logi TRUE
[08:25:06.594]  - attr(*, "total_size")= num NA
[08:25:06.596]  - Getting '...' globals ... DONE
[08:25:06.596] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:06.596] List of 2
[08:25:06.596]  $ ...future.FUN:function (x)  
[08:25:06.596]  $ ...          : list()
[08:25:06.596]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.596]  - attr(*, "where")=List of 2
[08:25:06.596]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:06.596]   ..$ ...          :<environment: 0x564c374be508> 
[08:25:06.596]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.596]  - attr(*, "resolved")= logi FALSE
[08:25:06.596]  - attr(*, "total_size")= num 4731
[08:25:06.599] Packages to be attached in all futures: [n=0] 
[08:25:06.599] getGlobalsAndPackagesXApply() ... DONE
[08:25:06.599] Number of futures (= number of chunks): 2
[08:25:06.599] Launching 2 futures (chunks) ...
[08:25:06.599] Chunk #1 of 2 ...
[08:25:06.599]  - Finding globals in 'X' for chunk #1 ...
[08:25:06.600]    + additional globals found: [n=0] 
[08:25:06.600]    + additional namespaces needed: [n=0] 
[08:25:06.600]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:06.600]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[08:25:06.600]  - seeds: <none>
[08:25:06.600]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.617] Created future:
[08:25:06.618] MultisessionFuture:
[08:25:06.618] Label: ‘future_lapply-1’
[08:25:06.618] Expression:
[08:25:06.618] {
[08:25:06.618]     do.call(function(...) {
[08:25:06.618]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.618]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.618]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.618]             on.exit(options(oopts), add = TRUE)
[08:25:06.618]         }
[08:25:06.618]         {
[08:25:06.618]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.618]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.618]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.618]             })
[08:25:06.618]         }
[08:25:06.618]     }, args = future.call.arguments)
[08:25:06.618] }
[08:25:06.618] Lazy evaluation: FALSE
[08:25:06.618] Asynchronous evaluation: TRUE
[08:25:06.618] Local evaluation: TRUE
[08:25:06.618] Environment: R_GlobalEnv
[08:25:06.618] Capture standard output: TRUE
[08:25:06.618] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.618] Globals: 5 objects totaling 0.99 KiB (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 445 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.618] Packages: <none>
[08:25:06.618] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.618] Resolved: FALSE
[08:25:06.618] Value: <not collected>
[08:25:06.618] Conditions captured: <none>
[08:25:06.618] Early signaling: FALSE
[08:25:06.618] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.618] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.629] Chunk #1 of 2 ... DONE
[08:25:06.629] Chunk #2 of 2 ...
[08:25:06.630]  - Finding globals in 'X' for chunk #2 ...
[08:25:06.630]    + additional globals found: [n=0] 
[08:25:06.630]    + additional namespaces needed: [n=0] 
[08:25:06.630]  - Finding globals in 'X' for chunk #2 ... DONE
[08:25:06.630]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[08:25:06.630]  - seeds: <none>
[08:25:06.630]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.649] Created future:
[08:25:06.649] MultisessionFuture:
[08:25:06.649] Label: ‘future_lapply-2’
[08:25:06.649] Expression:
[08:25:06.649] {
[08:25:06.649]     do.call(function(...) {
[08:25:06.649]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.649]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.649]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.649]             on.exit(options(oopts), add = TRUE)
[08:25:06.649]         }
[08:25:06.649]         {
[08:25:06.649]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.649]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.649]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.649]             })
[08:25:06.649]         }
[08:25:06.649]     }, args = future.call.arguments)
[08:25:06.649] }
[08:25:06.649] Lazy evaluation: FALSE
[08:25:06.649] Asynchronous evaluation: TRUE
[08:25:06.649] Local evaluation: TRUE
[08:25:06.649] Environment: R_GlobalEnv
[08:25:06.649] Capture standard output: TRUE
[08:25:06.649] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.649] Globals: 5 objects totaling 0.99 KiB (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 445 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.649] Packages: <none>
[08:25:06.649] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.649] Resolved: FALSE
[08:25:06.649] Value: <not collected>
[08:25:06.649] Conditions captured: <none>
[08:25:06.649] Early signaling: FALSE
[08:25:06.649] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.649] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.661] Chunk #2 of 2 ... DONE
[08:25:06.661] Launching 2 futures (chunks) ... DONE
[08:25:06.661] Resolving 2 futures (chunks) ...
[08:25:06.692]  - Number of value chunks collected: 2
[08:25:06.692] Resolving 2 futures (chunks) ... DONE
[08:25:06.692] Reducing values from 2 chunks ...
[08:25:06.692]  - Number of values collected after concatenation: 10
[08:25:06.692]  - Number of values expected: 10
[08:25:06.693] Reducing values from 2 chunks ... DONE
[08:25:06.693] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[08:25:06.696] future_lapply() ...
[08:25:06.698] Number of chunks: 1
[08:25:06.698] getGlobalsAndPackagesXApply() ...
[08:25:06.698]  - future.globals: TRUE
[08:25:06.700]  - globals found/used: [n=1] ‘FUN’
[08:25:06.700]  - needed namespaces: [n=0] 
[08:25:06.701] Finding globals ... DONE
[08:25:06.701]  - use_args: TRUE
[08:25:06.701]  - Getting '...' globals ...
[08:25:06.701]    - '...' content: [n=0] 
[08:25:06.701] List of 1
[08:25:06.701]  $ ...: list()
[08:25:06.701]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.701]  - attr(*, "where")=List of 1
[08:25:06.701]   ..$ ...:<environment: 0x564c36060620> 
[08:25:06.701]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.701]  - attr(*, "resolved")= logi TRUE
[08:25:06.701]  - attr(*, "total_size")= num NA
[08:25:06.704]  - Getting '...' globals ... DONE
[08:25:06.704] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:06.704] List of 2
[08:25:06.704]  $ ...future.FUN:function (x)  
[08:25:06.704]  $ ...          : list()
[08:25:06.704]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.704]  - attr(*, "where")=List of 2
[08:25:06.704]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:06.704]   ..$ ...          :<environment: 0x564c36060620> 
[08:25:06.704]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.704]  - attr(*, "resolved")= logi FALSE
[08:25:06.704]  - attr(*, "total_size")= num 4731
[08:25:06.706] Packages to be attached in all futures: [n=0] 
[08:25:06.707] getGlobalsAndPackagesXApply() ... DONE
[08:25:06.707] Number of futures (= number of chunks): 1
[08:25:06.707] Launching 1 futures (chunks) ...
[08:25:06.707] Chunk #1 of 1 ...
[08:25:06.707]  - Finding globals in 'X' for chunk #1 ...
[08:25:06.707]    + additional globals found: [n=0] 
[08:25:06.707]    + additional namespaces needed: [n=0] 
[08:25:06.708]  - Finding globals in 'X' for chunk #1 ... DONE
[08:25:06.708]  - seeds: <none>
[08:25:06.708]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[08:25:06.725] Created future:
[08:25:06.726] MultisessionFuture:
[08:25:06.726] Label: ‘future_lapply-1’
[08:25:06.726] Expression:
[08:25:06.726] {
[08:25:06.726]     do.call(function(...) {
[08:25:06.726]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[08:25:06.726]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[08:25:06.726]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[08:25:06.726]             on.exit(options(oopts), add = TRUE)
[08:25:06.726]         }
[08:25:06.726]         {
[08:25:06.726]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[08:25:06.726]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[08:25:06.726]                 ...future.FUN(...future.X_jj, ...)
[08:25:06.726]             })
[08:25:06.726]         }
[08:25:06.726]     }, args = future.call.arguments)
[08:25:06.726] }
[08:25:06.726] Lazy evaluation: FALSE
[08:25:06.726] Asynchronous evaluation: TRUE
[08:25:06.726] Local evaluation: TRUE
[08:25:06.726] Environment: R_GlobalEnv
[08:25:06.726] Capture standard output: TRUE
[08:25:06.726] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[08:25:06.726] Globals: 5 objects totaling 1.36 KiB (function ‘...future.FUN’ of 407 bytes, DotDotDotList ‘future.call.arguments’ of 97 bytes, list ‘...future.elements_ii’ of 825 bytes, NULL ‘...future.seeds_ii’ of 27 bytes, numeric ‘...future.globals.maxSize’ of 39 bytes)
[08:25:06.726] Packages: <none>
[08:25:06.726] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[08:25:06.726] Resolved: FALSE
[08:25:06.726] Value: <not collected>
[08:25:06.726] Conditions captured: <none>
[08:25:06.726] Early signaling: FALSE
[08:25:06.726] Owner process: b3268564-25a5-9f2f-d4a5-3fa6bed7b9e6
[08:25:06.726] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[08:25:06.737] Chunk #1 of 1 ... DONE
[08:25:06.737] Launching 1 futures (chunks) ... DONE
[08:25:06.737] Resolving 1 futures (chunks) ...
[08:25:06.772]  - Number of value chunks collected: 1
[08:25:06.772] Resolving 1 futures (chunks) ... DONE
[08:25:06.772] Reducing values from 1 chunks ...
[08:25:06.772]  - Number of values collected after concatenation: 10
[08:25:06.772]  - Number of values expected: 10
[08:25:06.773] Reducing values from 1 chunks ... DONE
[08:25:06.773] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[08:25:06.776] future_lapply() ...
[08:25:06.778] Number of chunks: 1
[08:25:06.778] getGlobalsAndPackagesXApply() ...
[08:25:06.778] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[08:25:06.779] future_lapply() ...
[08:25:06.780] Number of chunks: 1
[08:25:06.780] getGlobalsAndPackagesXApply() ...
[08:25:06.780]  - future.globals: <name-value list> with names ‘1’
[08:25:06.780] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[08:25:06.781] future_lapply() ...
[08:25:06.782] Number of chunks: 1
[08:25:06.782] getGlobalsAndPackagesXApply() ...
[08:25:06.782]  - future.globals: ‘...future.FUN’
[08:25:06.783]  - use_args: TRUE
[08:25:06.783] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[08:25:06.783] future_lapply() ...
[08:25:06.784] Number of chunks: 1
[08:25:06.784] getGlobalsAndPackagesXApply() ...
[08:25:06.784]  - future.globals: ‘...future.FUN’
[08:25:06.785]  - use_args: TRUE
[08:25:06.785] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[08:25:06.785] future_lapply() ...
[08:25:06.786] Number of chunks: 1
[08:25:06.787] getGlobalsAndPackagesXApply() ...
[08:25:06.787]  - future.globals: TRUE
[08:25:06.788]  - globals found/used: [n=1] ‘FUN’
[08:25:06.788]  - needed namespaces: [n=0] 
[08:25:06.788] Finding globals ... DONE
[08:25:06.788]  - use_args: TRUE
[08:25:06.788]  - Getting '...' globals ...
[08:25:06.789]    - '...' content: [n=0] 
[08:25:06.789] List of 1
[08:25:06.789]  $ ...: list()
[08:25:06.789]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.789]  - attr(*, "where")=List of 1
[08:25:06.789]   ..$ ...:<environment: 0x564c355bf338> 
[08:25:06.789]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.789]  - attr(*, "resolved")= logi TRUE
[08:25:06.789]  - attr(*, "total_size")= num NA
[08:25:06.791]  - Getting '...' globals ... DONE
[08:25:06.791] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[08:25:06.791] List of 2
[08:25:06.791]  $ ...future.FUN:function (f)  
[08:25:06.791]  $ ...          : list()
[08:25:06.791]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:25:06.791]  - attr(*, "where")=List of 2
[08:25:06.791]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[08:25:06.791]   ..$ ...          :<environment: 0x564c355bf338> 
[08:25:06.791]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:25:06.791]  - attr(*, "resolved")= logi FALSE
[08:25:06.791]  - attr(*, "total_size")= num 2927
[08:25:06.794] Packages to be attached in all futures: [n=0] 
[08:25:06.794] getGlobalsAndPackagesXApply() ... DONE
[08:25:06.794] Number of futures (= number of chunks): 1
[08:25:06.795] Launching 1 futures (chunks) ...
[08:25:06.795] Chunk #1 of 1 ...
[08:25:06.795]  - Finding globals in 'X' for chunk #1 ...
[08:25:06.796]    + additional globals found: [n=1] ‘...future.elements_ii’
[08:25:06.796]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
