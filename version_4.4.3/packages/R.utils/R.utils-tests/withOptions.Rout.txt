
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> oopts <- options()
> 
> digits <- getOption("digits")
> print(pi)
[1] 3.141593
> 
> # Same, i.e. using default
> withOptions({
+   print(pi)
+   stopifnot(getOption("digits") == digits)
+ })
[1] 3.141593
> 
> # Printing with two digits
> withOptions({
+   print(pi)
+   stopifnot(getOption("digits") == 2)
+ }, digits=2)
[1] 3.1
> 
> # Printing with two digits then with three more
> withOptions({
+   print(pi)
+   withOptions({
+     print(pi)
+     stopifnot(getOption("digits") == 5)
+   }, digits=getOption("digits")+3)
+   stopifnot(getOption("digits")+3 == 5)
+ }, digits=2)
[1] 3.1
[1] 3.1416
> 
> 
> # Still printing with the default
> print(pi)
[1] 3.141593
> stopifnot(getOption("digits") == digits)
> 
> # Reset also options set inside call
> options(dummy=NULL)
> withOptions({
+   print(pi)
+   options(digits=1L)
+   print(pi)
+   stopifnot(getOption("digits") == 1L)
+   options(dummy="Hello")
+   print(getOption("dummy"))
+ })
[1] 3.141593
[1] 3
[1] "Hello"
> stopifnot(is.null(getOption("dummy")))
> 
> # Any modified or added option is undone
> stopifnot(all.equal(options(), oopts))
> 
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Visibility
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> digits <- getOption("digits")+1L
> res <- withVisible({
+   withOptions({ 1 }, digits=digits)
+ })
> str(res)
List of 2
 $ value  : num 1
 $ visible: logi TRUE
> stopifnot(all.equal(res$value, 1))
> stopifnot(res$visible)
> 
> x <- 0
> res <- withVisible({
+   withOptions({ x <- 1 }, digits=digits)
+ })
> str(res)
List of 2
 $ value  : num 1
 $ visible: logi FALSE
> stopifnot(all.equal(res$value, 1))
> stopifnot(!res$visible)
> stopifnot(all.equal(x, 1))
> 
