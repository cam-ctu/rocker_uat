
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> 
> # Some vectors
> x <- 1:6
> y <- 10:1
> z <- LETTERS[x]
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> # Abbreviation of output vector
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> printf("x = %s.\n", hpaste(x))
x = 1, 2, 3, ..., 6.
> ## x = 1, 2, 3, ..., 6.
> 
> printf("x = %s.\n", hpaste(x, maxHead=2))
x = 1, 2, ..., 6.
> ## x = 1, 2, ..., 6.
> 
> printf("x = %s.\n", hpaste(x, maxHead=3)) # Default
x = 1, 2, 3, ..., 6.
> ## x = 1, 2, 3, ..., 6.
> 
> # It will never output 1, 2, 3, 4, ..., 6
> printf("x = %s.\n", hpaste(x, maxHead=4))
x = 1, 2, 3, 4, 5, 6.
> ## x = 1, 2, 3, 4, 5 and 6.
> 
> # Showing the tail
> printf("x = %s.\n", hpaste(x, maxHead=1, maxTail=2))
x = 1, ..., 5, 6.
> ## x = 1, ..., 5, 6.
> 
> # Turning off abbreviation
> printf("y = %s.\n", hpaste(y, maxHead=Inf))
y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1.
> ## y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
> 
> ## ...or simply
> printf("y = %s.\n", paste(y, collapse=", "))
y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1.
> ## y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> # Adding a special separator before the last element
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> # Change last separator
> printf("x = %s.\n", hpaste(x, lastCollapse=" and "))
x = 1, 2, 3, 4, 5 and 6.
> ## x = 1, 2, 3, 4, 5 and 6.
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Empty input
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> s <- hpaste(integer(0))
> stopifnot(identical(s, character(0L)))
> 
> s <- hpaste(integer(0), empty = "")
> stopifnot(identical(s, ""))
> 
> s <- hpaste(integer(0), empty = NA_character_)
> stopifnot(identical(s, NA_character_))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> # Backward compatibility with paste()
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
> s1 <- hpaste(x, maxHead=Inf)
> s2 <- paste(x, collapse=", ")
> printf("s = %s.\n", s1)
s = 1, 2, 3, 4, 5, 6.
> stopifnot(identical(s1, s2))
> 
> s1 <- hpaste('<', x, '>', maxHead=Inf)
> s2 <- paste('<', x, '>', sep="", collapse=", ")
> printf("s = %s.\n", s1)
s = <1>, <2>, <3>, <4>, <5>, <6>.
> stopifnot(identical(s1, s2))
> 
> s1 <- hpaste(x, y, z, sep="/", maxHead=Inf)
> s2 <- paste(x, y, z, sep="/", collapse=", ")
> printf("s = %s.\n", s1)
s = 1/10/A, 2/9/B, 3/8/C, 4/7/D, 5/6/E, 6/5/F, 1/4/A, 2/3/B, 3/2/C, 4/1/D.
> stopifnot(identical(s1, s2))
> 
> s1 <- hpaste(x, collapse=NULL, maxHead=Inf)
> s2 <- paste(x, collapse=NULL)
> stopifnot(identical(s1, s2))
> 
> 
