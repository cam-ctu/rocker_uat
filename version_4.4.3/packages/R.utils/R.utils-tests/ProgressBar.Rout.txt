
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # A progress bar with default step length one.
> pb <- ProgressBar(max=42)
> reset(pb)
[> while (!isDone(pb)) {
+   x <- rnorm(3e4)
+   increase(pb)
+   # Emulate a slow process
+   if (interactive()) Sys.sleep(0.02)
+ }
.........|.........|.........|.........|.]
> cat("\n")

> 
> # A "faster" progress bar with default step length 1.4.
> pb <- ProgressBar(max=42, stepLength=1.4)
> reset(pb)
[> while (!isDone(pb)) {
+   x <- rnorm(3e4)
+   increase(pb)
+   # Emulate a slow process
+   if (interactive()) Sys.sleep(0.02)
+ }
.........|.........|.........|.........|.]
> 
> cat("\n")

> 
> 
> ## Odds and ends
> print(pb)
[1] "ProgressBar: max=42, value=42"
> print(setStepLength(pb, 1L))
[1] 1.4
> print(setMaxValue(pb, 100L))
[1] 100
> print(setProgress(pb, 0.3))
[1] 0.42
> print(setTicks(pb, 10L))
[1]  0 10 20 30 40
> 
> 
