
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Basic tests
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # The current set of locales
> old <- Sys.getlocale("LC_ALL")
> 
> # Vector
> cat("Original vector:\n")
Original vector:
> x <- c(letters[1:8], LETTERS[1:8])
> print(x)
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "A" "B" "C" "D" "E" "F" "G" "H"
> 
> cat("Sorting with 'C' locale:\n")
Sorting with 'C' locale:
> y1 <- withLocale(sort(x), "LC_COLLATE", "C")
> print(y1)
 [1] "A" "B" "C" "D" "E" "F" "G" "H" "a" "b" "c" "d" "e" "f" "g" "h"
> 
> cat("Sorting with an 'English' locale:\n")
Sorting with an 'English' locale:
> y2 <- withLocale(sort(x), "LC_COLLATE", c("en_US", "en_US.UTF8", "English_United States.1252"))
> print(y2)
 [1] "a" "A" "b" "B" "c" "C" "d" "D" "e" "E" "f" "F" "g" "G" "h" "H"
> 
> # Sanity check
> curr <- Sys.getlocale("LC_ALL")
> if (!identical(curr, old)) {
+   throw("Locale settings have changed: ", old, " != ", curr)
+ }
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Nested calls
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> cat("Sorting with 'C' locale (nested inside a English one):\n")
Sorting with 'C' locale (nested inside a English one):
> y3 <- withLocale({
+   withLocale({
+     sort(x)
+   }, "LC_COLLATE", "C")
+ }, "LC_COLLATE", c("en_US", "en_US.UTF8", "English_United States.1252"))
> print(y3)
 [1] "A" "B" "C" "D" "E" "F" "G" "H" "a" "b" "c" "d" "e" "f" "g" "h"
> stopifnot(identical(y3, y1))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Visibility
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> res <- withVisible({
+   withLocale({ 1 }, "LC_COLLATE", "C")
+ })
> str(res)
List of 2
 $ value  : num 1
 $ visible: logi TRUE
> stopifnot(all.equal(res$value, 1))
> stopifnot(res$visible)
> 
> x <- 0
> res <- withVisible({
+   withLocale({ x <- 1 }, "LC_COLLATE", "C")
+ })
> str(res)
List of 2
 $ value  : num 1
 $ visible: logi FALSE
> stopifnot(all.equal(res$value, 1))
> stopifnot(!res$visible)
> stopifnot(all.equal(x, 1))
> 
