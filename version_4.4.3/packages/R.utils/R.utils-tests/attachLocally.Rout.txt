
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # A named list
> x <- list(a=1, b=base::letters)
> keys <- attachLocally(x)
> stopifnot(identical(keys, names(x)))
> for (key in keys) stopifnot(identical(get(key), x[[key]]))
> 
> 
> # A list with "empty" names
> x <- list(a=1, b=base::letters, "noname", "another one")
> keys <- attachLocally(x)
> stopifnot(identical(keys, setdiff(names(x), "")))
> for (key in keys) stopifnot(identical(get(key), x[[key]]))
> 
> # An environment
> x <- list(a=1, b=base::letters)
> env <- list2env(x)
> stopifnot(identical(ls(envir=env), names(x)))
> keys <- attachLocally(env)
> stopifnot(identical(keys, ls(envir=env)))
> for (key in keys) stopifnot(identical(get(key), env[[key]]))
> 
> # A data.frame
> df <- data.frame(a=1, b=base::letters, stringsAsFactors=FALSE)
> keys <- attachLocally(df)
> stopifnot(identical(keys, names(df)))
> for (key in keys) stopifnot(identical(get(key), df[[key]]))
> 
