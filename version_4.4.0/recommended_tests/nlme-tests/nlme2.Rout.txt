
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(nlme)
> is64bit <- .Machine$sizeof.pointer == 8
> 
> options(digits = 10)# <- see more, as we have *no* *.Rout.save file here
> ## https://stat.ethz.ch/pipermail/r-help/2014-September/422123.html
> nfm <- nlme(circumference ~ SSlogis(age, Asym, xmid, scal),
+             data = Orange,
+             fixed = Asym + xmid + scal ~ 1)
Warning message:
In (function (model, data = sys.frame(sys.parent()), fixed, random,  :
  Iteration 1, LME step: nlminb() did not converge (code = 1). Do increase 'msMaxIter'!
> (sO <- summary(nfm))
Nonlinear mixed-effects model fit by maximum likelihood
  Model: circumference ~ SSlogis(age, Asym, xmid, scal) 
  Data: Orange 
          AIC         BIC       logLik
  279.9813984 295.5348791 -129.9906992

Random effects:
 Formula: list(Asym ~ 1, xmid ~ 1, scal ~ 1)
 Level: Tree
 Structure: General positive-definite, Log-Cholesky parametrization
         StdDev      Corr         
Asym     27.05272355 Asym   xmid  
xmid     24.26574651 -0.327       
scal     36.59129281 -0.992  0.443
Residual  7.32143863              

Fixed effects:  list(Asym ~ 1, xmid ~ 1, scal ~ 1) 
           Value   Std.Error DF     t-value p-value
Asym 192.0957580 14.05319393 28 13.66918858       0
xmid 727.5882366 34.58859702 28 21.03549433       0
scal 356.6005424 30.49560112 28 11.69350757       0
 Correlation: 
     Asym   xmid  
xmid  0.277       
scal -0.193  0.665

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-1.8185400190 -0.5213307631  0.1742930897  0.5175061828  1.6452059117 

Number of Observations: 35
Number of Groups: 5 
> vc <- VarCorr(nfm, rdig = 5)# def. 3
> storage.mode(vc) <- "double" # -> (correct) NA warning
Warning message:
In storage.mode(vc) <- "double" : NAs introduced by coercion
> cfO <- sO$tTable
> if(FALSE)
+     dput(signif(cfO[,c("Std.Error", "t-value")], 8))
> if(FALSE)
+     dput(signif(as.numeric(vc[,"StdDev"]), 8))
> 
> cfO.Ts <- list(
+     stdE.T = cbind(
+         b64nx = ## R-devel 2016-01-11, 2017-09-18; [lynne]:
+             c(14.052671, 34.587947, 30.497593,  13.669776, 21.036087, 11.692943)
+       , b32nx = ## R-devel 2016-01-11, 2017-09-18 [florence, Fedora 24 Linux]:
+             c(14.053663, 34.589821, 30.49412,   13.668653, 21.034544, 11.693889)
+       , b32Win1 = ## R-devel 2017-09-17, i386-w64-mingw32/i386,
+             ## Windows Server 2008 R2 x64 (build 7601) Service Pack 1
+             c(14.053047, 34.588589, 30.4963,    13.669349, 21.035542, 11.693282)
+       , b32Win = ## R-devel 2017-09-18, Tomas K (Win.10)
+             c(14.051902, 34.579819, 30.499807,  13.670797, 21.041722, 11.692694)
+     ),
+     stdDev = cbind(
+         b64nx = ## R-devel 2016-01-11; [lynne]:
+             c(27.051312, 24.258159, 36.597078, 7.321525)
+       , b32nx = ## R-devel 2017-09-18; [florence, Fedora 24 Linux]:
+             c(27.053964, 24.275286, 36.58682,  7.3213653)
+       , b32Win = ## R-devel 2017-09-17, i386-w64-mingw32/i386, W.Server 2008 R2..
+             c(27.05234,  24.264936, 36.593554, 7.3214448)
+         ## for now
+     )
+ )
> ## Average number of decimal digits agreement :
> lapply(cfO.Ts, function(cc) round(-log10(apply(cc - rowMeans(cc), 1, sd)), 2))
$stdE.T
[1] 3.13 2.34 2.62 3.05 2.49 3.29

$stdDev
[1] 2.87 2.06 2.28 4.10

> ## $ stdE.T: num [1:6] 3.13 2.34 2.62 3.05 2.49 3.29
> ## $ stdDev: num [1:4] 2.87 2.06 2.28 4.1
> ## Pairwise distances (formatted, easier to read off):
> round(dist(1000 * t(cfO.Ts[["stdE.T"]])), 1)
        b64nx b32nx b32Win1
b32nx     4.6              
b32Win1   1.7   2.9        
b32Win   10.2  13.9    11.5
> ##         b64nx b32nx b32Win1
> ## b32nx     4.6
> ## b32Win1   1.7   2.9
> ## b32Win   10.2  13.9    11.5
> round(dist(1000 * t(cfO.Ts[["stdDev"]])), 1)
       b64nx b32nx
b32nx   20.1      
b32Win   7.7  12.5
> ##        b64nx b32nx
> ## b32nx   20.1
> ## b32Win   7.7  12.5
> 
> cName <- (if(is64bit) "b64nx"
+           else if(.Platform$OS.type == "Windows") {
+               if(grepl("Server 2008 R2", win.version(), fixed=TRUE))
+                   "b32Win1"
+               else
+                   "b32Win"
+           }
+           else "b32nx" ## 32-bit, non-Windows
+ )
> 
> cfO.T <- array(cfO.Ts[["stdE.T"]][, cName], dim = 3:2,
+                dimnames = list(c("Asym", "xmid", "scal"),
+                                c("Std.Error", "t-value")))
> vcSD <- setNames(cfO.Ts[["stdDev"]][, switch(cName, b64nx=, b32nx=, b32Win=cName,
+                                              b32Win1 = "b32Win")],
+ 		 c("Asym", "xmid", "scal", "Residual"))
> stopifnot(
+     identical(cfO[,"Value"], fixef(nfm)),
+     all.equal(cfO[,c("Std.Error", "t-value")], cfO.T, tol = 3e-4)
+    ,
+     cfO[,"DF"] == 28,
+     all.equal(vc[,"Variance"], vc[,"StdDev"]^2, tol= 5e-7)
+    ,
+     all.equal(vc[,"StdDev"], vcSD, tol = 6e-4) # 3.5e-4 (R 3.0.3, 32b)
+    ,
+     all.equal(unname(vc[2:3, 3:4]), # "Corr"
+               rbind(c(-0.3273, NA),
+ 		    c(-0.9920, 0.4430)), tol = 2e-3)# ~ 2e-4 / 8e-4
+ )
> 
> ## Confirm  predict(*, newdata=.)  works
> (n <- nrow(Orange)) # 35
[1] 35
> set.seed(17)
> newOr <- within(Orange[sample(n, 64, replace=TRUE), ],
+ 		age <- round(jitter(age, amount = 50)))
> fit.v <- predict(nfm, newdata = newOr)
> resiv <- newOr$circumference - fit.v
> res.T <- c(48, 115, 74, 15, 44, -94, 47, -51, 20, -52, -16, 12, -135,
+            -85, 136, 100, 24, 181, -88, -102, -26, 52, -148, 8, -83, 73,
+            -27, -34, 91, 42, 34, -8, 0, 83, 84, -90, -123, 94, -157, -11,
+            56, -164, -28, 72, 15, 148, 95, -122, 169, 84, -19, -124, 45,
+            -66, -10, 119, -110, -43, 12, 94, -108, 45, 48, 46)
> if(!all((res10 <- round(10 * as.vector(resiv))) == res.T)) {
+     iD <- which(res10 != res.T)
+     cat("Differing rounded residuals, at indices", paste(iD, collapse=", "),
+         "; with values:\n")
+     print(cbind(resiv, res10, res.T)[iD,])
+ }
Differing rounded residuals, at indices 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 ; with values:
            resiv res10 res.T
5  -7.80651749998   -78    48
5  -9.88942486228   -99   115
4   5.45074966354    55    74
1  -1.17306323736   -12    15
3   3.50786424229    35    44
2  16.94519584624   169   -94
1   5.06742076232    51    47
5 -11.81752674680  -118   -51
3   4.41376090606    44    20
1 -12.27837061733  -123   -52
4   5.45118523590    55   -16
1  -0.47344643973    -5    12
3  -0.63436182643    -6  -135
3   2.42364116746    24   -85
3  -4.94399474272   -49   136
5  -0.01159035692     0   100
3  -9.67304274952   -97    24
2   2.35824831888    24   181
5   4.30171674184    43   -88
5  -6.37001537720   -64  -102
1  -2.88957670211   -29   -26
2   2.76751670252    28    52
4 -12.89032613861  -129  -148
5   0.96846262303    10     8
3 -10.75815234759  -108   -83
4   4.21840141274    42    73
5   2.42333177076    24   -27
1 -12.14140673365  -121   -34
2   3.88910805780    39    91
1 -12.14140673365  -121    42
4  -6.30142306041   -63    34
5  13.48843844523   135    -8
5  -2.85483248092   -29     0
3   0.64639538244     6    83
3   5.33114138027    53    84
2  12.77590365350   128   -90
2  -2.33631277770   -23  -123
2   6.50201770245    65    94
4   2.62588718432    26  -157
2   4.34275582173    43   -11
5  -5.50763713022   -55    56
2   9.07138918957    91  -164
2  -1.98586633423   -20   -28
3  -7.71506827796   -77    72
2  -2.18656528648   -22    15
3   6.98883075818    70   148
4  -0.75713812167    -8    95
1   0.47703586748     5  -122
3   8.12498620385    81   169
2  11.15246793711   112    84
1   2.25658141277    23   -19
5   1.62482013019    16  -124
3  -5.38598573733   -54    45
2   3.91547737756    39   -66
2  -9.73272243081   -97   -10
3   0.38237849378     4   119
1   6.27020318283    63  -110
5  -8.59880808629   -86   -43
2  -1.95882350107   -20    12
2   9.95476496005   100    94
5 -11.48966818431  -115  -108
5  14.84443699103   148    45
2   3.96785952296    40    48
1   2.34892968380    23    46
> ## -> indices  14 [64-bit]  or  27 [32-bit], respectively
> 
> 
> ## [Bug 16715] New: nlme: unable to use predict and augPredict ..
> ## Date: 17 Feb 2016 -- part 2 -- predict():
> ##
> ## Comment 4 daveauty@gmail.com 2016-03-08 -- modified by MM --
> 
> ## simulate density data then fit Michaelis-Menten equation of density as
> ## function of ring age. TreeIDs grouped by SP (spacing)
> set.seed(1)
> df <- data.frame(SP = rep(LETTERS[1:5], 60),
+ 		 expand.grid(TreeID = factor(1:12),
+                              age = seq(2, 50, 2)),
+                  stringsAsFactors = TRUE)
> df[,"dens"] <- with(df, (runif(1,10,20)*age)/(runif(1,9,10)+age)) + rnorm(25, 0, 1)
> str(df)
'data.frame':	300 obs. of  4 variables:
 $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
 $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
 $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> ## 'data.frame':	300 obs. of  4 variables:
> ##  $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
> ##  $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
> ##  $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
> ##  $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> 
> ## mixed-effects model
> fit1 <- nlme(dens ~ a*age/(b+age),
+ 	     fixed = a+b ~ 1, random= a ~ 1|TreeID,
+ 	     start = c(a=15, b=5), data=df)
> summary(fit1)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
          AIC         BIC       logLik
  808.4069212 823.2220511 -400.2034606

Random effects:
 Formula: a ~ 1 | TreeID
                      a     Residual
StdDev: 2.772067654e-05 0.9185793399

Fixed effects:  a + b ~ 1 
         Value    Std.Error  DF     t-value p-value
a 12.758125778 0.1914871831 287 66.62652597       0
b  8.921206208 0.4906380614 287 18.18286617       0
 Correlation: 
  a    
b 0.918

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-2.6420672775 -0.2833115761  0.2220191315  0.6630992082  1.6161028824 

Number of Observations: 300
Number of Groups: 12 
> fit1R <- update(fit1, method = "REML")
> ## allow fixed effects parameters to vary by 'SP':
> fit2 <- update(fit1, fixed = list(a ~ SP, b ~ SP),
+                start = c(a = rep(14, 5), b = rep(4, 5)))
> summary(fit2)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
         AIC         BIC      logLik
  799.210016 843.6554057 -387.605008

Random effects:
 Formula: a ~ 1 | TreeID
          a.(Intercept)     Residual
StdDev: 2.878279617e-05 0.8808025132

Fixed effects:  list(a ~ SP, b ~ SP) 
                     Value    Std.Error  DF      t-value p-value
a.(Intercept) 12.903085409 0.4091007730 279 31.540114954  0.0000
a.SPB         -0.170084496 0.5947105364 279 -0.285995431  0.7751
a.SPC         -0.643219844 0.5919816218 279 -1.086553738  0.2782
a.SPD          0.095662364 0.5731020390 279  0.166920299  0.8676
a.SPE         -0.008338905 0.5812270702 279 -0.014347069  0.9886
b.(Intercept)  8.646804011 1.0165457760 279  8.506064572  0.0000
b.SPB          0.686459336 1.5205832962 279  0.451444743  0.6520
b.SPC          0.672297667 1.5446580458 279  0.435240453  0.6637
b.SPD         -0.159835868 1.4178921507 279 -0.112727804  0.9103
b.SPE          0.221184110 1.4603631552 279  0.151458293  0.8797
 Correlation: 
              a.(In) a.SPB  a.SPC  a.SPD  a.SPE  b.(In) b.SPB  b.SPC  b.SPD 
a.SPB         -0.688                                                        
a.SPC         -0.691  0.475                                                 
a.SPD         -0.714  0.491  0.493                                          
a.SPE         -0.704  0.484  0.486  0.502                                   
b.(Intercept)  0.916 -0.630 -0.633 -0.654 -0.645                            
b.SPB         -0.612  0.919  0.423  0.437  0.431 -0.669                     
b.SPC         -0.603  0.415  0.918  0.430  0.424 -0.658  0.440              
b.SPD         -0.657  0.452  0.454  0.915  0.462 -0.717  0.479  0.472       
b.SPE         -0.637  0.438  0.441  0.455  0.917 -0.696  0.465  0.458  0.499

Standardized Within-Group Residuals:
           Min             Q1            Med             Q3            Max 
-2.39676505655 -0.45686320583  0.04081417692  0.74467663402  2.17580171753 

Number of Observations: 300
Number of Groups: 12 
> 
> ## make new data for predictions
> newdat <- expand.grid(SP = LETTERS[1:5], age = seq(1, 50, 1))
> n.pred1 <- predict(fit1, newdat, level=0) # works fine
> n.pred2 <- predict(fit2, newdat, level=0)
> ## in nlme 3.1-124, throws the error:
> ## Error in eval(expr, envir, enclos) : object 'SP' not found
> 
> ## New data with  never-yet observed levels of a random effect -- PR#16614 :
> set.seed(47)
> newD <- expand.grid(SP = LETTERS[2:4], age = runif(16, 1,50),
+                     TreeID = sample(c(sample(1:12, 7), 100:102)))
> n1prD0 <- predict(fit1, newD, level=0)
> n2prD0 <- predict(fit2, newD, level=0)
> n1prD1 <- predict(fit1, newD, level=1)   # failed in nlme <= 3.1-126
> n2prD1 <- predict(fit2, newD, level=1)   # ditto
> (n1prD01 <- predict(fit1, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.788697603   10.788697603
98       5  10.788697603   10.788697603
99       5  10.788697603   10.788697603
100      5   8.728189214    8.728189215
101      5   8.728189214    8.728189215
102      5   8.728189214    8.728189215
103      5  10.348507081   10.348507081
104      5  10.348507081   10.348507081
105      5  10.348507081   10.348507081
106      5  10.491889153   10.491889153
107      5  10.491889153   10.491889153
108      5  10.491889153   10.491889153
109      5   9.764878647    9.764878647
110      5   9.764878647    9.764878647
111      5   9.764878647    9.764878647
112      5  10.159568881   10.159568881
113      5  10.159568881   10.159568881
114      5  10.159568881   10.159568881
115      5   8.831372619    8.831372619
116      5   8.831372619    8.831372619
117      5   8.831372619    8.831372619
118      5   9.298569650    9.298569650
119      5   9.298569650    9.298569650
120      5   9.298569650    9.298569650
121      5   9.643529914    9.643529915
122      5   9.643529914    9.643529915
123      5   9.643529914    9.643529915
124      5  10.697735078   10.697735078
125      5  10.697735078   10.697735078
126      5  10.697735078   10.697735078
127      5   5.951768076    5.951768076
128      5   5.951768076    5.951768076
129      5   5.951768076    5.951768076
130      5  10.189950686   10.189950686
131      5  10.189950686   10.189950686
132      5  10.189950686   10.189950686
133      5   6.388445583    6.388445583
134      5   6.388445583    6.388445583
135      5   6.388445583    6.388445583
136      5   9.861056861    9.861056861
137      5   9.861056861    9.861056861
138      5   9.861056861    9.861056861
139      5   9.479675711    9.479675712
140      5   9.479675711    9.479675712
141      5   9.479675711    9.479675712
142      5  10.654979640   10.654979640
143      5  10.654979640   10.654979640
144      5  10.654979640   10.654979640
241     11  10.788697603   10.788697603
242     11  10.788697603   10.788697603
243     11  10.788697603   10.788697603
244     11   8.728189214    8.728189214
245     11   8.728189214    8.728189214
246     11   8.728189214    8.728189214
247     11  10.348507081   10.348507081
248     11  10.348507081   10.348507081
249     11  10.348507081   10.348507081
250     11  10.491889153   10.491889153
251     11  10.491889153   10.491889153
252     11  10.491889153   10.491889153
253     11   9.764878647    9.764878647
254     11   9.764878647    9.764878647
255     11   9.764878647    9.764878647
256     11  10.159568881   10.159568881
257     11  10.159568881   10.159568881
258     11  10.159568881   10.159568881
259     11   8.831372619    8.831372619
260     11   8.831372619    8.831372619
261     11   8.831372619    8.831372619
262     11   9.298569650    9.298569650
263     11   9.298569650    9.298569650
264     11   9.298569650    9.298569650
265     11   9.643529914    9.643529914
266     11   9.643529914    9.643529914
267     11   9.643529914    9.643529914
268     11  10.697735078   10.697735078
269     11  10.697735078   10.697735078
270     11  10.697735078   10.697735078
271     11   5.951768076    5.951768076
272     11   5.951768076    5.951768076
273     11   5.951768076    5.951768076
274     11  10.189950686   10.189950686
275     11  10.189950686   10.189950686
276     11  10.189950686   10.189950686
277     11   6.388445583    6.388445583
278     11   6.388445583    6.388445583
279     11   6.388445583    6.388445583
280     11   9.861056861    9.861056861
281     11   9.861056861    9.861056861
282     11   9.861056861    9.861056861
283     11   9.479675711    9.479675711
284     11   9.479675711    9.479675711
285     11   9.479675711    9.479675711
286     11  10.654979640   10.654979640
287     11  10.654979640   10.654979640
288     11  10.654979640   10.654979640
337    100  10.788697603             NA
338    100  10.788697603             NA
339    100  10.788697603             NA
340    100   8.728189214             NA
341    100   8.728189214             NA
342    100   8.728189214             NA
343    100  10.348507081             NA
344    100  10.348507081             NA
345    100  10.348507081             NA
346    100  10.491889153             NA
347    100  10.491889153             NA
348    100  10.491889153             NA
349    100   9.764878647             NA
350    100   9.764878647             NA
351    100   9.764878647             NA
352    100  10.159568881             NA
353    100  10.159568881             NA
354    100  10.159568881             NA
355    100   8.831372619             NA
356    100   8.831372619             NA
357    100   8.831372619             NA
358    100   9.298569650             NA
359    100   9.298569650             NA
360    100   9.298569650             NA
361    100   9.643529914             NA
362    100   9.643529914             NA
363    100   9.643529914             NA
364    100  10.697735078             NA
365    100  10.697735078             NA
366    100  10.697735078             NA
367    100   5.951768076             NA
368    100   5.951768076             NA
369    100   5.951768076             NA
370    100  10.189950686             NA
371    100  10.189950686             NA
372    100  10.189950686             NA
373    100   6.388445583             NA
374    100   6.388445583             NA
375    100   6.388445583             NA
376    100   9.861056861             NA
377    100   9.861056861             NA
378    100   9.861056861             NA
379    100   9.479675711             NA
380    100   9.479675711             NA
381    100   9.479675711             NA
382    100  10.654979640             NA
383    100  10.654979640             NA
384    100  10.654979640             NA
49       4  10.788697603   10.788697603
50       4  10.788697603   10.788697603
51       4  10.788697603   10.788697603
52       4   8.728189214    8.728189214
53       4   8.728189214    8.728189214
54       4   8.728189214    8.728189214
55       4  10.348507081   10.348507081
56       4  10.348507081   10.348507081
57       4  10.348507081   10.348507081
58       4  10.491889153   10.491889153
59       4  10.491889153   10.491889153
60       4  10.491889153   10.491889153
61       4   9.764878647    9.764878647
62       4   9.764878647    9.764878647
63       4   9.764878647    9.764878647
64       4  10.159568881   10.159568881
65       4  10.159568881   10.159568881
66       4  10.159568881   10.159568881
67       4   8.831372619    8.831372619
68       4   8.831372619    8.831372619
69       4   8.831372619    8.831372619
70       4   9.298569650    9.298569650
71       4   9.298569650    9.298569650
72       4   9.298569650    9.298569650
73       4   9.643529914    9.643529915
74       4   9.643529914    9.643529915
75       4   9.643529914    9.643529915
76       4  10.697735078   10.697735078
77       4  10.697735078   10.697735078
78       4  10.697735078   10.697735078
79       4   5.951768076    5.951768076
80       4   5.951768076    5.951768076
81       4   5.951768076    5.951768076
82       4  10.189950686   10.189950686
83       4  10.189950686   10.189950686
84       4  10.189950686   10.189950686
85       4   6.388445583    6.388445583
86       4   6.388445583    6.388445583
87       4   6.388445583    6.388445583
88       4   9.861056861    9.861056861
89       4   9.861056861    9.861056861
90       4   9.861056861    9.861056861
91       4   9.479675711    9.479675711
92       4   9.479675711    9.479675711
93       4   9.479675711    9.479675711
94       4  10.654979640   10.654979640
95       4  10.654979640   10.654979640
96       4  10.654979640   10.654979640
1        2  10.788697603   10.788697604
2        2  10.788697603   10.788697604
3        2  10.788697603   10.788697604
4        2   8.728189214    8.728189215
5        2   8.728189214    8.728189215
6        2   8.728189214    8.728189215
7        2  10.348507081   10.348507082
8        2  10.348507081   10.348507082
9        2  10.348507081   10.348507082
10       2  10.491889153   10.491889154
11       2  10.491889153   10.491889154
12       2  10.491889153   10.491889154
13       2   9.764878647    9.764878648
14       2   9.764878647    9.764878648
15       2   9.764878647    9.764878648
16       2  10.159568881   10.159568882
17       2  10.159568881   10.159568882
18       2  10.159568881   10.159568882
19       2   8.831372619    8.831372620
20       2   8.831372619    8.831372620
21       2   8.831372619    8.831372620
22       2   9.298569650    9.298569651
23       2   9.298569650    9.298569651
24       2   9.298569650    9.298569651
25       2   9.643529914    9.643529915
26       2   9.643529914    9.643529915
27       2   9.643529914    9.643529915
28       2  10.697735078   10.697735079
29       2  10.697735078   10.697735079
30       2  10.697735078   10.697735079
31       2   5.951768076    5.951768076
32       2   5.951768076    5.951768076
33       2   5.951768076    5.951768076
34       2  10.189950686   10.189950687
35       2  10.189950686   10.189950687
36       2  10.189950686   10.189950687
37       2   6.388445583    6.388445583
38       2   6.388445583    6.388445583
39       2   6.388445583    6.388445583
40       2   9.861056861    9.861056862
41       2   9.861056861    9.861056862
42       2   9.861056861    9.861056862
43       2   9.479675711    9.479675712
44       2   9.479675711    9.479675712
45       2   9.479675711    9.479675712
46       2  10.654979640   10.654979641
47       2  10.654979640   10.654979641
48       2  10.654979640   10.654979641
289     12  10.788697603   10.788697603
290     12  10.788697603   10.788697603
291     12  10.788697603   10.788697603
292     12   8.728189214    8.728189214
293     12   8.728189214    8.728189214
294     12   8.728189214    8.728189214
295     12  10.348507081   10.348507081
296     12  10.348507081   10.348507081
297     12  10.348507081   10.348507081
298     12  10.491889153   10.491889153
299     12  10.491889153   10.491889153
300     12  10.491889153   10.491889153
301     12   9.764878647    9.764878647
302     12   9.764878647    9.764878647
303     12   9.764878647    9.764878647
304     12  10.159568881   10.159568881
305     12  10.159568881   10.159568881
306     12  10.159568881   10.159568881
307     12   8.831372619    8.831372619
308     12   8.831372619    8.831372619
309     12   8.831372619    8.831372619
310     12   9.298569650    9.298569650
311     12   9.298569650    9.298569650
312     12   9.298569650    9.298569650
313     12   9.643529914    9.643529915
314     12   9.643529914    9.643529915
315     12   9.643529914    9.643529915
316     12  10.697735078   10.697735078
317     12  10.697735078   10.697735078
318     12  10.697735078   10.697735078
319     12   5.951768076    5.951768076
320     12   5.951768076    5.951768076
321     12   5.951768076    5.951768076
322     12  10.189950686   10.189950686
323     12  10.189950686   10.189950686
324     12  10.189950686   10.189950686
325     12   6.388445583    6.388445583
326     12   6.388445583    6.388445583
327     12   6.388445583    6.388445583
328     12   9.861056861    9.861056861
329     12   9.861056861    9.861056861
330     12   9.861056861    9.861056861
331     12   9.479675711    9.479675711
332     12   9.479675711    9.479675711
333     12   9.479675711    9.479675711
334     12  10.654979640   10.654979640
335     12  10.654979640   10.654979640
336     12  10.654979640   10.654979640
145      8  10.788697603   10.788697602
146      8  10.788697603   10.788697602
147      8  10.788697603   10.788697602
148      8   8.728189214    8.728189214
149      8   8.728189214    8.728189214
150      8   8.728189214    8.728189214
151      8  10.348507081   10.348507080
152      8  10.348507081   10.348507080
153      8  10.348507081   10.348507080
154      8  10.491889153   10.491889152
155      8  10.491889153   10.491889152
156      8  10.491889153   10.491889152
157      8   9.764878647    9.764878646
158      8   9.764878647    9.764878646
159      8   9.764878647    9.764878646
160      8  10.159568881   10.159568880
161      8  10.159568881   10.159568880
162      8  10.159568881   10.159568880
163      8   8.831372619    8.831372618
164      8   8.831372619    8.831372618
165      8   8.831372619    8.831372618
166      8   9.298569650    9.298569649
167      8   9.298569650    9.298569649
168      8   9.298569650    9.298569649
169      8   9.643529914    9.643529914
170      8   9.643529914    9.643529914
171      8   9.643529914    9.643529914
172      8  10.697735078   10.697735077
173      8  10.697735078   10.697735077
174      8  10.697735078   10.697735077
175      8   5.951768076    5.951768075
176      8   5.951768076    5.951768075
177      8   5.951768076    5.951768075
178      8  10.189950686   10.189950685
179      8  10.189950686   10.189950685
180      8  10.189950686   10.189950685
181      8   6.388445583    6.388445582
182      8   6.388445583    6.388445582
183      8   6.388445583    6.388445582
184      8   9.861056861    9.861056860
185      8   9.861056861    9.861056860
186      8   9.861056861    9.861056860
187      8   9.479675711    9.479675711
188      8   9.479675711    9.479675711
189      8   9.479675711    9.479675711
190      8  10.654979640   10.654979639
191      8  10.654979640   10.654979639
192      8  10.654979640   10.654979639
433    102  10.788697603             NA
434    102  10.788697603             NA
435    102  10.788697603             NA
436    102   8.728189214             NA
437    102   8.728189214             NA
438    102   8.728189214             NA
439    102  10.348507081             NA
440    102  10.348507081             NA
441    102  10.348507081             NA
442    102  10.491889153             NA
443    102  10.491889153             NA
444    102  10.491889153             NA
445    102   9.764878647             NA
446    102   9.764878647             NA
447    102   9.764878647             NA
448    102  10.159568881             NA
449    102  10.159568881             NA
450    102  10.159568881             NA
451    102   8.831372619             NA
452    102   8.831372619             NA
453    102   8.831372619             NA
454    102   9.298569650             NA
455    102   9.298569650             NA
456    102   9.298569650             NA
457    102   9.643529914             NA
458    102   9.643529914             NA
459    102   9.643529914             NA
460    102  10.697735078             NA
461    102  10.697735078             NA
462    102  10.697735078             NA
463    102   5.951768076             NA
464    102   5.951768076             NA
465    102   5.951768076             NA
466    102  10.189950686             NA
467    102  10.189950686             NA
468    102  10.189950686             NA
469    102   6.388445583             NA
470    102   6.388445583             NA
471    102   6.388445583             NA
472    102   9.861056861             NA
473    102   9.861056861             NA
474    102   9.861056861             NA
475    102   9.479675711             NA
476    102   9.479675711             NA
477    102   9.479675711             NA
478    102  10.654979640             NA
479    102  10.654979640             NA
480    102  10.654979640             NA
385    101  10.788697603             NA
386    101  10.788697603             NA
387    101  10.788697603             NA
388    101   8.728189214             NA
389    101   8.728189214             NA
390    101   8.728189214             NA
391    101  10.348507081             NA
392    101  10.348507081             NA
393    101  10.348507081             NA
394    101  10.491889153             NA
395    101  10.491889153             NA
396    101  10.491889153             NA
397    101   9.764878647             NA
398    101   9.764878647             NA
399    101   9.764878647             NA
400    101  10.159568881             NA
401    101  10.159568881             NA
402    101  10.159568881             NA
403    101   8.831372619             NA
404    101   8.831372619             NA
405    101   8.831372619             NA
406    101   9.298569650             NA
407    101   9.298569650             NA
408    101   9.298569650             NA
409    101   9.643529914             NA
410    101   9.643529914             NA
411    101   9.643529914             NA
412    101  10.697735078             NA
413    101  10.697735078             NA
414    101  10.697735078             NA
415    101   5.951768076             NA
416    101   5.951768076             NA
417    101   5.951768076             NA
418    101  10.189950686             NA
419    101  10.189950686             NA
420    101  10.189950686             NA
421    101   6.388445583             NA
422    101   6.388445583             NA
423    101   6.388445583             NA
424    101   9.861056861             NA
425    101   9.861056861             NA
426    101   9.861056861             NA
427    101   9.479675711             NA
428    101   9.479675711             NA
429    101   9.479675711             NA
430    101  10.654979640             NA
431    101  10.654979640             NA
432    101  10.654979640             NA
193      9  10.788697603   10.788697602
194      9  10.788697603   10.788697602
195      9  10.788697603   10.788697602
196      9   8.728189214    8.728189214
197      9   8.728189214    8.728189214
198      9   8.728189214    8.728189214
199      9  10.348507081   10.348507081
200      9  10.348507081   10.348507081
201      9  10.348507081   10.348507081
202      9  10.491889153   10.491889152
203      9  10.491889153   10.491889152
204      9  10.491889153   10.491889152
205      9   9.764878647    9.764878646
206      9   9.764878647    9.764878646
207      9   9.764878647    9.764878646
208      9  10.159568881   10.159568880
209      9  10.159568881   10.159568880
210      9  10.159568881   10.159568880
211      9   8.831372619    8.831372619
212      9   8.831372619    8.831372619
213      9   8.831372619    8.831372619
214      9   9.298569650    9.298569649
215      9   9.298569650    9.298569649
216      9   9.298569650    9.298569649
217      9   9.643529914    9.643529914
218      9   9.643529914    9.643529914
219      9   9.643529914    9.643529914
220      9  10.697735078   10.697735078
221      9  10.697735078   10.697735078
222      9  10.697735078   10.697735078
223      9   5.951768076    5.951768076
224      9   5.951768076    5.951768076
225      9   5.951768076    5.951768076
226      9  10.189950686   10.189950685
227      9  10.189950686   10.189950685
228      9  10.189950686   10.189950685
229      9   6.388445583    6.388445582
230      9   6.388445583    6.388445582
231      9   6.388445583    6.388445582
232      9   9.861056861    9.861056860
233      9   9.861056861    9.861056860
234      9   9.861056861    9.861056860
235      9   9.479675711    9.479675711
236      9   9.479675711    9.479675711
237      9   9.479675711    9.479675711
238      9  10.654979640   10.654979639
239      9  10.654979640   10.654979639
240      9  10.654979640   10.654979639
> (n2prD01 <- predict(fit2, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.691223177   10.691223177
98       5  10.296461831   10.296461832
99       5  11.075393503   11.075393504
100      5   8.585737595    8.585737595
101      5   8.270794583    8.270794584
102      5   9.031667476    9.031667477
103      5  10.238808353   10.238808354
104      5   9.861283687    9.861283687
105      5  10.641512297   10.641512297
106      5  10.386015154   10.386015154
107      5  10.002887166   10.002887166
108      5  10.783000684   10.783000685
109      5   9.641171766    9.641171767
110      5   9.286344665    9.286344665
111      5  10.063976116   10.063976117
112      5  10.045061412   10.045061412
113      5   9.674904010    9.674904010
114      5  10.454830700   10.454830701
115      5   8.690436648    8.690436648
116      5   8.371548554    8.371548554
117      5   9.134786356    9.134786356
118      5   9.165463082    9.165463082
119      5   8.828644301    8.828644301
120      5   9.600661595    9.600661596
121      5   9.517224051    9.517224051
122      5   9.167094087    9.167094087
123      5   9.943567233    9.943567233
124      5  10.597617255   10.597617255
125      5  10.206426078   10.206426079
126      5  10.985855163   10.985855164
127      5   5.797197260    5.797197260
128      5   5.586401070    5.586401070
129      5   6.225686448    6.225686449
130      5  10.076198757   10.076198758
131      5   9.704857932    9.704857933
132      5  10.484867976   10.484867977
133      5   6.232149547    6.232149547
134      5   6.005226218    6.005226218
135      5   6.671050821    6.671050822
136      5   9.739486436    9.739486437
137      5   9.380931084    9.380931084
138      5  10.159329342   10.159329343
139      5   9.350031285    9.350031286
140      5   9.006231695    9.006231696
141      5   9.780802933    9.780802934
142      5  10.553640469   10.553640470
143      5  10.164125892   10.164125893
144      5  10.943747495   10.943747495
241     11  10.691223177   10.691223177
242     11  10.296461831   10.296461831
243     11  11.075393503   11.075393503
244     11   8.585737595    8.585737595
245     11   8.270794583    8.270794583
246     11   9.031667476    9.031667476
247     11  10.238808353   10.238808353
248     11   9.861283687    9.861283687
249     11  10.641512297   10.641512297
250     11  10.386015154   10.386015153
251     11  10.002887166   10.002887166
252     11  10.783000684   10.783000684
253     11   9.641171766    9.641171766
254     11   9.286344665    9.286344665
255     11  10.063976116   10.063976116
256     11  10.045061412   10.045061412
257     11   9.674904010    9.674904010
258     11  10.454830700   10.454830700
259     11   8.690436648    8.690436648
260     11   8.371548554    8.371548554
261     11   9.134786356    9.134786355
262     11   9.165463082    9.165463082
263     11   8.828644301    8.828644301
264     11   9.600661595    9.600661595
265     11   9.517224051    9.517224051
266     11   9.167094087    9.167094087
267     11   9.943567233    9.943567233
268     11  10.597617255   10.597617255
269     11  10.206426078   10.206426078
270     11  10.985855163   10.985855163
271     11   5.797197260    5.797197260
272     11   5.586401070    5.586401070
273     11   6.225686448    6.225686448
274     11  10.076198757   10.076198757
275     11   9.704857932    9.704857932
276     11  10.484867976   10.484867976
277     11   6.232149547    6.232149547
278     11   6.005226218    6.005226218
279     11   6.671050821    6.671050821
280     11   9.739486436    9.739486436
281     11   9.380931084    9.380931084
282     11  10.159329342   10.159329342
283     11   9.350031285    9.350031285
284     11   9.006231695    9.006231695
285     11   9.780802933    9.780802933
286     11  10.553640469   10.553640469
287     11  10.164125892   10.164125892
288     11  10.943747495   10.943747495
337    100  10.691223177             NA
338    100  10.296461831             NA
339    100  11.075393503             NA
340    100   8.585737595             NA
341    100   8.270794583             NA
342    100   9.031667476             NA
343    100  10.238808353             NA
344    100   9.861283687             NA
345    100  10.641512297             NA
346    100  10.386015154             NA
347    100  10.002887166             NA
348    100  10.783000684             NA
349    100   9.641171766             NA
350    100   9.286344665             NA
351    100  10.063976116             NA
352    100  10.045061412             NA
353    100   9.674904010             NA
354    100  10.454830700             NA
355    100   8.690436648             NA
356    100   8.371548554             NA
357    100   9.134786356             NA
358    100   9.165463082             NA
359    100   8.828644301             NA
360    100   9.600661595             NA
361    100   9.517224051             NA
362    100   9.167094087             NA
363    100   9.943567233             NA
364    100  10.597617255             NA
365    100  10.206426078             NA
366    100  10.985855163             NA
367    100   5.797197260             NA
368    100   5.586401070             NA
369    100   6.225686448             NA
370    100  10.076198757             NA
371    100   9.704857932             NA
372    100  10.484867976             NA
373    100   6.232149547             NA
374    100   6.005226218             NA
375    100   6.671050821             NA
376    100   9.739486436             NA
377    100   9.380931084             NA
378    100  10.159329342             NA
379    100   9.350031285             NA
380    100   9.006231695             NA
381    100   9.780802933             NA
382    100  10.553640469             NA
383    100  10.164125892             NA
384    100  10.943747495             NA
49       4  10.691223177   10.691223177
50       4  10.296461831   10.296461831
51       4  11.075393503   11.075393503
52       4   8.585737595    8.585737595
53       4   8.270794583    8.270794583
54       4   9.031667476    9.031667477
55       4  10.238808353   10.238808353
56       4   9.861283687    9.861283687
57       4  10.641512297   10.641512297
58       4  10.386015154   10.386015154
59       4  10.002887166   10.002887166
60       4  10.783000684   10.783000685
61       4   9.641171766    9.641171767
62       4   9.286344665    9.286344665
63       4  10.063976116   10.063976117
64       4  10.045061412   10.045061412
65       4   9.674904010    9.674904010
66       4  10.454830700   10.454830701
67       4   8.690436648    8.690436648
68       4   8.371548554    8.371548554
69       4   9.134786356    9.134786356
70       4   9.165463082    9.165463082
71       4   8.828644301    8.828644301
72       4   9.600661595    9.600661596
73       4   9.517224051    9.517224051
74       4   9.167094087    9.167094087
75       4   9.943567233    9.943567233
76       4  10.597617255   10.597617255
77       4  10.206426078   10.206426079
78       4  10.985855163   10.985855163
79       4   5.797197260    5.797197260
80       4   5.586401070    5.586401070
81       4   6.225686448    6.225686449
82       4  10.076198757   10.076198757
83       4   9.704857932    9.704857933
84       4  10.484867976   10.484867976
85       4   6.232149547    6.232149547
86       4   6.005226218    6.005226218
87       4   6.671050821    6.671050821
88       4   9.739486436    9.739486436
89       4   9.380931084    9.380931084
90       4  10.159329342   10.159329342
91       4   9.350031285    9.350031286
92       4   9.006231695    9.006231696
93       4   9.780802933    9.780802934
94       4  10.553640469   10.553640470
95       4  10.164125892   10.164125893
96       4  10.943747495   10.943747495
1        2  10.691223177   10.691223178
2        2  10.296461831   10.296461832
3        2  11.075393503   11.075393504
4        2   8.585737595    8.585737596
5        2   8.270794583    8.270794584
6        2   9.031667476    9.031667477
7        2  10.238808353   10.238808354
8        2   9.861283687    9.861283688
9        2  10.641512297   10.641512298
10       2  10.386015154   10.386015155
11       2  10.002887166   10.002887167
12       2  10.783000684   10.783000685
13       2   9.641171766    9.641171768
14       2   9.286344665    9.286344666
15       2  10.063976116   10.063976117
16       2  10.045061412   10.045061413
17       2   9.674904010    9.674904011
18       2  10.454830700   10.454830702
19       2   8.690436648    8.690436649
20       2   8.371548554    8.371548555
21       2   9.134786356    9.134786357
22       2   9.165463082    9.165463083
23       2   8.828644301    8.828644302
24       2   9.600661595    9.600661596
25       2   9.517224051    9.517224052
26       2   9.167094087    9.167094088
27       2   9.943567233    9.943567234
28       2  10.597617255   10.597617256
29       2  10.206426078   10.206426080
30       2  10.985855163   10.985855164
31       2   5.797197260    5.797197261
32       2   5.586401070    5.586401071
33       2   6.225686448    6.225686449
34       2  10.076198757   10.076198758
35       2   9.704857932    9.704857934
36       2  10.484867976   10.484867977
37       2   6.232149547    6.232149547
38       2   6.005226218    6.005226219
39       2   6.671050821    6.671050822
40       2   9.739486436    9.739486437
41       2   9.380931084    9.380931085
42       2  10.159329342   10.159329343
43       2   9.350031285    9.350031286
44       2   9.006231695    9.006231696
45       2   9.780802933    9.780802934
46       2  10.553640469   10.553640471
47       2  10.164125892   10.164125894
48       2  10.943747495   10.943747496
289     12  10.691223177   10.691223177
290     12  10.296461831   10.296461831
291     12  11.075393503   11.075393503
292     12   8.585737595    8.585737595
293     12   8.270794583    8.270794583
294     12   9.031667476    9.031667477
295     12  10.238808353   10.238808353
296     12   9.861283687    9.861283687
297     12  10.641512297   10.641512297
298     12  10.386015154   10.386015154
299     12  10.002887166   10.002887166
300     12  10.783000684   10.783000685
301     12   9.641171766    9.641171767
302     12   9.286344665    9.286344665
303     12  10.063976116   10.063976117
304     12  10.045061412   10.045061412
305     12   9.674904010    9.674904010
306     12  10.454830700   10.454830701
307     12   8.690436648    8.690436648
308     12   8.371548554    8.371548554
309     12   9.134786356    9.134786356
310     12   9.165463082    9.165463082
311     12   8.828644301    8.828644301
312     12   9.600661595    9.600661596
313     12   9.517224051    9.517224051
314     12   9.167094087    9.167094087
315     12   9.943567233    9.943567233
316     12  10.597617255   10.597617255
317     12  10.206426078   10.206426079
318     12  10.985855163   10.985855163
319     12   5.797197260    5.797197260
320     12   5.586401070    5.586401070
321     12   6.225686448    6.225686449
322     12  10.076198757   10.076198757
323     12   9.704857932    9.704857933
324     12  10.484867976   10.484867976
325     12   6.232149547    6.232149547
326     12   6.005226218    6.005226218
327     12   6.671050821    6.671050821
328     12   9.739486436    9.739486436
329     12   9.380931084    9.380931084
330     12  10.159329342   10.159329342
331     12   9.350031285    9.350031286
332     12   9.006231695    9.006231696
333     12   9.780802933    9.780802934
334     12  10.553640469   10.553640470
335     12  10.164125892   10.164125893
336     12  10.943747495   10.943747495
145      8  10.691223177   10.691223175
146      8  10.296461831   10.296461830
147      8  11.075393503   11.075393502
148      8   8.585737595    8.585737594
149      8   8.270794583    8.270794582
150      8   9.031667476    9.031667475
151      8  10.238808353   10.238808352
152      8   9.861283687    9.861283686
153      8  10.641512297   10.641512296
154      8  10.386015154   10.386015152
155      8  10.002887166   10.002887164
156      8  10.783000684   10.783000683
157      8   9.641171766    9.641171765
158      8   9.286344665    9.286344664
159      8  10.063976116   10.063976115
160      8  10.045061412   10.045061411
161      8   9.674904010    9.674904009
162      8  10.454830700   10.454830699
163      8   8.690436648    8.690436647
164      8   8.371548554    8.371548553
165      8   9.134786356    9.134786354
166      8   9.165463082    9.165463081
167      8   8.828644301    8.828644300
168      8   9.600661595    9.600661594
169      8   9.517224051    9.517224050
170      8   9.167094087    9.167094086
171      8   9.943567233    9.943567232
172      8  10.597617255   10.597617254
173      8  10.206426078   10.206426077
174      8  10.985855163   10.985855162
175      8   5.797197260    5.797197260
176      8   5.586401070    5.586401069
177      8   6.225686448    6.225686448
178      8  10.076198757   10.076198756
179      8   9.704857932    9.704857931
180      8  10.484867976   10.484867975
181      8   6.232149547    6.232149546
182      8   6.005226218    6.005226217
183      8   6.671050821    6.671050820
184      8   9.739486436    9.739486435
185      8   9.380931084    9.380931083
186      8  10.159329342   10.159329341
187      8   9.350031285    9.350031284
188      8   9.006231695    9.006231694
189      8   9.780802933    9.780802932
190      8  10.553640469   10.553640468
191      8  10.164125892   10.164125891
192      8  10.943747495   10.943747494
433    102  10.691223177             NA
434    102  10.296461831             NA
435    102  11.075393503             NA
436    102   8.585737595             NA
437    102   8.270794583             NA
438    102   9.031667476             NA
439    102  10.238808353             NA
440    102   9.861283687             NA
441    102  10.641512297             NA
442    102  10.386015154             NA
443    102  10.002887166             NA
444    102  10.783000684             NA
445    102   9.641171766             NA
446    102   9.286344665             NA
447    102  10.063976116             NA
448    102  10.045061412             NA
449    102   9.674904010             NA
450    102  10.454830700             NA
451    102   8.690436648             NA
452    102   8.371548554             NA
453    102   9.134786356             NA
454    102   9.165463082             NA
455    102   8.828644301             NA
456    102   9.600661595             NA
457    102   9.517224051             NA
458    102   9.167094087             NA
459    102   9.943567233             NA
460    102  10.597617255             NA
461    102  10.206426078             NA
462    102  10.985855163             NA
463    102   5.797197260             NA
464    102   5.586401070             NA
465    102   6.225686448             NA
466    102  10.076198757             NA
467    102   9.704857932             NA
468    102  10.484867976             NA
469    102   6.232149547             NA
470    102   6.005226218             NA
471    102   6.671050821             NA
472    102   9.739486436             NA
473    102   9.380931084             NA
474    102  10.159329342             NA
475    102   9.350031285             NA
476    102   9.006231695             NA
477    102   9.780802933             NA
478    102  10.553640469             NA
479    102  10.164125892             NA
480    102  10.943747495             NA
385    101  10.691223177             NA
386    101  10.296461831             NA
387    101  11.075393503             NA
388    101   8.585737595             NA
389    101   8.270794583             NA
390    101   9.031667476             NA
391    101  10.238808353             NA
392    101   9.861283687             NA
393    101  10.641512297             NA
394    101  10.386015154             NA
395    101  10.002887166             NA
396    101  10.783000684             NA
397    101   9.641171766             NA
398    101   9.286344665             NA
399    101  10.063976116             NA
400    101  10.045061412             NA
401    101   9.674904010             NA
402    101  10.454830700             NA
403    101   8.690436648             NA
404    101   8.371548554             NA
405    101   9.134786356             NA
406    101   9.165463082             NA
407    101   8.828644301             NA
408    101   9.600661595             NA
409    101   9.517224051             NA
410    101   9.167094087             NA
411    101   9.943567233             NA
412    101  10.597617255             NA
413    101  10.206426078             NA
414    101  10.985855163             NA
415    101   5.797197260             NA
416    101   5.586401070             NA
417    101   6.225686448             NA
418    101  10.076198757             NA
419    101   9.704857932             NA
420    101  10.484867976             NA
421    101   6.232149547             NA
422    101   6.005226218             NA
423    101   6.671050821             NA
424    101   9.739486436             NA
425    101   9.380931084             NA
426    101  10.159329342             NA
427    101   9.350031285             NA
428    101   9.006231695             NA
429    101   9.780802933             NA
430    101  10.553640469             NA
431    101  10.164125892             NA
432    101  10.943747495             NA
193      9  10.691223177   10.691223176
194      9  10.296461831   10.296461830
195      9  11.075393503   11.075393502
196      9   8.585737595    8.585737594
197      9   8.270794583    8.270794583
198      9   9.031667476    9.031667476
199      9  10.238808353   10.238808352
200      9   9.861283687    9.861283686
201      9  10.641512297   10.641512296
202      9  10.386015154   10.386015153
203      9  10.002887166   10.002887165
204      9  10.783000684   10.783000684
205      9   9.641171766    9.641171766
206      9   9.286344665    9.286344664
207      9  10.063976116   10.063976116
208      9  10.045061412   10.045061411
209      9   9.674904010    9.674904009
210      9  10.454830700   10.454830700
211      9   8.690436648    8.690436647
212      9   8.371548554    8.371548554
213      9   9.134786356    9.134786355
214      9   9.165463082    9.165463081
215      9   8.828644301    8.828644300
216      9   9.600661595    9.600661595
217      9   9.517224051    9.517224050
218      9   9.167094087    9.167094086
219      9   9.943567233    9.943567232
220      9  10.597617255   10.597617254
221      9  10.206426078   10.206426078
222      9  10.985855163   10.985855162
223      9   5.797197260    5.797197260
224      9   5.586401070    5.586401070
225      9   6.225686448    6.225686448
226      9  10.076198757   10.076198757
227      9   9.704857932    9.704857932
228      9  10.484867976   10.484867975
229      9   6.232149547    6.232149546
230      9   6.005226218    6.005226217
231      9   6.671050821    6.671050821
232      9   9.739486436    9.739486436
233      9   9.380931084    9.380931083
234      9  10.159329342   10.159329341
235      9   9.350031285    9.350031285
236      9   9.006231695    9.006231695
237      9   9.780802933    9.780802933
238      9  10.553640469   10.553640469
239      9  10.164125892   10.164125892
240      9  10.943747495   10.943747494
> ## consistency :
> stopifnot(
+     identical(is.na(n1prD1), is.na(n2prD1)),
+     identical(sort(unique(newD[is.na(n2prD1), "TreeID"])), 100:102),
+     sort(unique( newD[is.na(n2prD1), "TreeID"] )) %in% 100:102 ,
+     all.equal(as.vector(n1prD0), n1prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n2prD0), n2prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n1prD1), n1prD01[,"predict.TreeID"],tolerance= 1e-15),
+     all.equal(as.vector(n2prD1), n2prD01[,"predict.TreeID"],tolerance= 1e-15))
> 
> ## new data with factor levels stored as character
> stopifnot(all.equal(predict(fit2, data.frame(SP="A", age=2), level = 0),
+                     predict(fit2, level = 0)[1], check.attributes = FALSE))
> ## in nlme <= 3.1-155, failed with
> ## Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
> ##   contrasts can be applied only to factors with 2 or more levels
> 
> ## model without intercept
> fit3 <- update(fit2, fixed = a + b ~ SP - 1)
> stopifnot(all.equal(predict(fit3, head(df, 3)),
+                     head(predict(fit3), 3), check.attributes = FALSE))
> ## in nlme <= 3.1-155, prediction failed if not all levels occurred
> ## Error in f %*% beta[fmap[[nm]]] : non-conformable arguments
> 
