
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "servr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('servr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("auth_basic")
> ### * auth_basic
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: auth_basic
> ### Title: Generate Basic authentication strings
> ### Aliases: auth_basic
> 
> ### ** Examples
> 
> servr::auth_basic("foo", "B@R")
[1] "Basic Zm9vOkJAUg=="
> 
> 
> 
> cleanEx()
> nameEx("browse_last")
> ### * browse_last
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: browse_last
> ### Title: Reopen the last browsed page
> ### Aliases: browse_last
> 
> ### ** Examples
> 
> servr::browse_last()
It seems you have not served any content with servr yet.
> 
> 
> 
> cleanEx()
> nameEx("create_server")
> ### * create_server
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: create_server
> ### Title: Create a server
> ### Aliases: create_server
> 
> ### ** Examples
> ## Don't show: 
> if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # always return 'Success:' followed by the requested path
+ s = servr::create_server(handler = function(req) {
+     list(status = 200L, body = paste("Success:", req$PATH_INFO))
+ })
+ s$url
+ 
+ browseURL(paste0(s$url, "/hello"))
+ browseURL(paste0(s$url, "/world"))
+ 
+ s$stop_server()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("dynamic_site")
> ### * dynamic_site
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: jekyll
> ### Title: Serve R Markdown based websites
> ### Aliases: jekyll rmdv2 rmdv1
> 
> ### ** Examples
> 
> if (interactive()) servr::rmdv1()  # serve the current dir with R Markdown v1
> if (interactive()) servr::rmdv2()  # or R Markdown v2
> 
> # built-in examples
> servr::serve_example("rmd", servr::rmdv1)
> servr::serve_example("rmd", servr::rmdv2)
> 
> 
> 
> cleanEx()
> nameEx("httd")
> ### * httd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: httd
> ### Title: Serve static files under a directory
> ### Aliases: httd httr httw
> 
> ### ** Examples
> ## Don't show: 
> if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ servr::httd()
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("make")
> ### * make
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make
> ### Title: Serve files under a directory based on GNU Make
> ### Aliases: make
> 
> ### ** Examples
> 
> # some built-in examples (if you are not familiar with make, you can take a
> # look at the Makefile of each example)
> servr::serve_example("make1", servr::make)
> servr::serve_example("make2", servr::make)
> 
> 
> 
> cleanEx()
> nameEx("redirect")
> ### * redirect
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: redirect
> ### Title: Create a redirect response
> ### Aliases: redirect
> 
> ### ** Examples
> 
> servr::redirect("https://www.r-project.org")
$status
[1] 301

$body
[1] ""

$headers
$headers$Location
[1] "https://www.r-project.org"


> 
> 
> 
> cleanEx()
> nameEx("serve_example")
> ### * serve_example
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: serve_example
> ### Title: A convenience function to serve examples in this package
> ### Aliases: serve_example
> 
> ### ** Examples
> 
> # R Markdown v1 or v2
> servr::serve_example("rmd", servr::rmdv1)
> servr::serve_example("rmd", servr::rmdv2)
> 
> # GNU Make
> servr::serve_example("make1", servr::make)
> servr::serve_example("make2", servr::make)
> 
> 
> 
> cleanEx()
> nameEx("server_config")
> ### * server_config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: server_config
> ### Title: Server configurations
> ### Aliases: server_config
> 
> ### ** Examples
> ## Don't show: 
> if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ # an example of authentication
+ servr::httd(auth = list(scheme = "Basic", creds = servr::auth_basic("john", "pa$s!")))
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.216 0.025 0.24 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
