
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[17:36:45.344] plan(): Setting new future strategy stack:
[17:36:45.344] List of future strategies:
[17:36:45.344] 1. sequential:
[17:36:45.344]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[17:36:45.344]    - tweaked: FALSE
[17:36:45.344]    - call: future::plan("sequential")
[17:36:45.359] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[17:36:45.919] future_lapply() ...
[17:36:45.923] Number of chunks: 1
[17:36:45.924] getGlobalsAndPackagesXApply() ...
[17:36:45.924]  - future.globals: FALSE
[17:36:45.926]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:36:45.927]  - needed namespaces: [n=0] 
[17:36:45.927] Finding globals ... DONE
[17:36:45.927]  - use_args: TRUE
[17:36:45.927]  - Getting '...' globals ...
[17:36:45.928]    - '...' content: [n=0] 
[17:36:45.928] List of 1
[17:36:45.928]  $ ...: list()
[17:36:45.928]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:45.928]  - attr(*, "where")=List of 1
[17:36:45.928]   ..$ ...:<environment: 0x55699e90c2e8> 
[17:36:45.928]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:45.928]  - attr(*, "resolved")= logi TRUE
[17:36:45.928]  - attr(*, "total_size")= num NA
[17:36:45.931]  - Getting '...' globals ... DONE
[17:36:45.931] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:36:45.931] List of 3
[17:36:45.931]  $ ...future.FUN        :function (x)  
[17:36:45.931]  $ future.call.arguments: list()
[17:36:45.931]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:45.931]  $ ...                  : list()
[17:36:45.931]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:45.931]  - attr(*, "where")=List of 3
[17:36:45.931]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:36:45.931]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:36:45.931]   ..$ ...                  :<environment: 0x55699e90c2e8> 
[17:36:45.931]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:45.931]  - attr(*, "resolved")= logi FALSE
[17:36:45.931]  - attr(*, "total_size")= num 3824
[17:36:45.935] Packages to be attached in all futures: [n=1] ‘utils’
[17:36:45.935] getGlobalsAndPackagesXApply() ... DONE
[17:36:45.935] Number of futures (= number of chunks): 1
[17:36:45.935] Launching 1 futures (chunks) ...
[17:36:45.935] Chunk #1 of 1 ...
[17:36:45.936]  - seeds: <none>
[17:36:45.936]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:45.946] Created future:
[17:36:45.946] ClusterFuture:
[17:36:45.946] Label: ‘future_lapply-1’
[17:36:45.946] Expression:
[17:36:45.946] {
[17:36:45.946]     do.call(function(...) {
[17:36:45.946]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:45.946]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:45.946]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:45.946]             on.exit(options(oopts), add = TRUE)
[17:36:45.946]         }
[17:36:45.946]         {
[17:36:45.946]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:45.946]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:45.946]                 ...future.FUN(...future.X_jj, ...)
[17:36:45.946]             })
[17:36:45.946]         }
[17:36:45.946]     }, args = future.call.arguments)
[17:36:45.946] }
[17:36:45.946] Lazy evaluation: FALSE
[17:36:45.946] Asynchronous evaluation: TRUE
[17:36:45.946] Local evaluation: TRUE
[17:36:45.946] Environment: R_GlobalEnv
[17:36:45.946] Capture standard output: TRUE
[17:36:45.946] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:45.946] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:45.946] Packages: 1 packages (‘utils’)
[17:36:45.946] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:45.946] Resolved: FALSE
[17:36:45.946] Value: <not collected>
[17:36:45.946] Conditions captured: <none>
[17:36:45.946] Early signaling: FALSE
[17:36:45.946] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:45.946] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:45.959] Chunk #1 of 1 ... DONE
[17:36:45.959] Launching 1 futures (chunks) ... DONE
[17:36:45.959] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[17:36:46.002] future_lapply() ...
[17:36:46.003] Number of chunks: 1
[17:36:46.003] getGlobalsAndPackagesXApply() ...
[17:36:46.003]  - future.globals: TRUE
[17:36:46.007]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[17:36:46.007]  - needed namespaces: [n=1] ‘stats’
[17:36:46.007] Finding globals ... DONE
[17:36:46.007]  - use_args: TRUE
[17:36:46.007]  - Getting '...' globals ...
[17:36:46.008]    - '...' content: [n=0] 
[17:36:46.008] List of 1
[17:36:46.008]  $ ...: list()
[17:36:46.008]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.008]  - attr(*, "where")=List of 1
[17:36:46.008]   ..$ ...:<environment: 0x5569a0791038> 
[17:36:46.008]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.008]  - attr(*, "resolved")= logi TRUE
[17:36:46.008]  - attr(*, "total_size")= num NA
[17:36:46.011]  - Getting '...' globals ... DONE
[17:36:46.011] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[17:36:46.012] List of 4
[17:36:46.012]  $ ...future.FUN:function (x)  
[17:36:46.012]  $ a            : num 1
[17:36:46.012]  $ b            : num 2
[17:36:46.012]  $ ...          : list()
[17:36:46.012]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.012]  - attr(*, "where")=List of 4
[17:36:46.012]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.012]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:46.012]   ..$ b            :<environment: R_EmptyEnv> 
[17:36:46.012]   ..$ ...          :<environment: 0x5569a0791038> 
[17:36:46.012]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.012]  - attr(*, "resolved")= logi FALSE
[17:36:46.012]  - attr(*, "total_size")= num 3936
[17:36:46.016] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[17:36:46.016] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.017] Number of futures (= number of chunks): 1
[17:36:46.017] Launching 1 futures (chunks) ...
[17:36:46.017] Chunk #1 of 1 ...
[17:36:46.017]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.021]    + additional globals found: [n=0] 
[17:36:46.021]    + additional namespaces needed: [n=0] 
[17:36:46.021]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.021]  - seeds: <none>
[17:36:46.021]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.034] Created future:
[17:36:46.034] ClusterFuture:
[17:36:46.034] Label: ‘future_lapply-1’
[17:36:46.034] Expression:
[17:36:46.034] {
[17:36:46.034]     do.call(function(...) {
[17:36:46.034]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.034]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.034]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.034]             on.exit(options(oopts), add = TRUE)
[17:36:46.034]         }
[17:36:46.034]         {
[17:36:46.034]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.034]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.034]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.034]             })
[17:36:46.034]         }
[17:36:46.034]     }, args = future.call.arguments)
[17:36:46.034] }
[17:36:46.034] Lazy evaluation: FALSE
[17:36:46.034] Asynchronous evaluation: TRUE
[17:36:46.034] Local evaluation: TRUE
[17:36:46.034] Environment: R_GlobalEnv
[17:36:46.034] Capture standard output: TRUE
[17:36:46.034] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.034] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:36:46.034] Packages: 2 packages (‘stats’, ‘utils’)
[17:36:46.034] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.034] Resolved: FALSE
[17:36:46.034] Value: <not collected>
[17:36:46.034] Conditions captured: <none>
[17:36:46.034] Early signaling: FALSE
[17:36:46.034] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.034] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.046] Chunk #1 of 1 ... DONE
[17:36:46.046] Launching 1 futures (chunks) ... DONE
[17:36:46.046] Resolving 1 futures (chunks) ...
[17:36:46.089]  - Number of value chunks collected: 1
[17:36:46.089] Resolving 1 futures (chunks) ... DONE
[17:36:46.089] Reducing values from 1 chunks ...
[17:36:46.089]  - Number of values collected after concatenation: 1
[17:36:46.089]  - Number of values expected: 1
[17:36:46.089] Reducing values from 1 chunks ... DONE
[17:36:46.089] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[17:36:46.090] future_lapply() ...
[17:36:46.090] Number of chunks: 1
[17:36:46.091] getGlobalsAndPackagesXApply() ...
[17:36:46.091]  - future.globals: ‘a’, ‘b’
[17:36:46.091]  - use_args: TRUE
[17:36:46.091] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:36:46.091] List of 4
[17:36:46.091]  $ a            : num 1
[17:36:46.091]  $ b            : num 2
[17:36:46.091]  $ ...future.FUN:function (x)  
[17:36:46.091]  $ ...          : list()
[17:36:46.091]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.091]  - attr(*, "where")=List of 4
[17:36:46.091]   ..$ a            :<environment: R_GlobalEnv> 
[17:36:46.091]   ..$ b            :<environment: R_GlobalEnv> 
[17:36:46.091]   ..$ ...future.FUN:<environment: 0x55699f624d80> 
[17:36:46.091]   ..$ ...          :<environment: 0x55699f624d80> 
[17:36:46.091]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.091]  - attr(*, "resolved")= logi FALSE
[17:36:46.091]  - attr(*, "total_size")= num NA
[17:36:46.095] Packages to be attached in all futures: [n=1] ‘utils’
[17:36:46.095] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.095] Number of futures (= number of chunks): 1
[17:36:46.095] Launching 1 futures (chunks) ...
[17:36:46.095] Chunk #1 of 1 ...
[17:36:46.095]  - seeds: <none>
[17:36:46.096]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.106] Created future:
[17:36:46.106] ClusterFuture:
[17:36:46.106] Label: ‘future_lapply-1’
[17:36:46.106] Expression:
[17:36:46.106] {
[17:36:46.106]     do.call(function(...) {
[17:36:46.106]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.106]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.106]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.106]             on.exit(options(oopts), add = TRUE)
[17:36:46.106]         }
[17:36:46.106]         {
[17:36:46.106]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.106]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.106]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.106]             })
[17:36:46.106]         }
[17:36:46.106]     }, args = future.call.arguments)
[17:36:46.106] }
[17:36:46.106] Lazy evaluation: FALSE
[17:36:46.106] Asynchronous evaluation: TRUE
[17:36:46.106] Local evaluation: TRUE
[17:36:46.106] Environment: R_GlobalEnv
[17:36:46.106] Capture standard output: TRUE
[17:36:46.106] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.106] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:36:46.106] Packages: 1 packages (‘utils’)
[17:36:46.106] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.106] Resolved: FALSE
[17:36:46.106] Value: <not collected>
[17:36:46.106] Conditions captured: <none>
[17:36:46.106] Early signaling: FALSE
[17:36:46.106] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.106] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.117] Chunk #1 of 1 ... DONE
[17:36:46.117] Launching 1 futures (chunks) ... DONE
[17:36:46.117] Resolving 1 futures (chunks) ...
[17:36:46.160]  - Number of value chunks collected: 1
[17:36:46.160] Resolving 1 futures (chunks) ... DONE
[17:36:46.160] Reducing values from 1 chunks ...
[17:36:46.160]  - Number of values collected after concatenation: 1
[17:36:46.160]  - Number of values expected: 1
[17:36:46.160] Reducing values from 1 chunks ... DONE
[17:36:46.160] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[17:36:46.160] future_lapply() ...
[17:36:46.161] Number of chunks: 1
[17:36:46.161] getGlobalsAndPackagesXApply() ...
[17:36:46.161]  - future.globals: <name-value list> with names ‘2’, ‘3’
[17:36:46.162]  - use_args: TRUE
[17:36:46.162]  - Getting '...' globals ...
[17:36:46.162]    - '...' content: [n=0] 
[17:36:46.162] List of 1
[17:36:46.162]  $ ...: list()
[17:36:46.162]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.162]  - attr(*, "where")=List of 1
[17:36:46.162]   ..$ ...:<environment: 0x55699e99c6f8> 
[17:36:46.162]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.162]  - attr(*, "resolved")= logi TRUE
[17:36:46.162]  - attr(*, "total_size")= num NA
[17:36:46.165]  - Getting '...' globals ... DONE
[17:36:46.165] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:36:46.165] List of 4
[17:36:46.165]  $ a            : num 2
[17:36:46.165]  $ b            : num 3
[17:36:46.165]  $ ...future.FUN:function (x)  
[17:36:46.165]  $ ...          : list()
[17:36:46.165]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.165]  - attr(*, "where")=List of 4
[17:36:46.165]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:46.165]   ..$ b            :<environment: R_EmptyEnv> 
[17:36:46.165]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:36:46.165]   ..$ ...          :<environment: 0x55699e99c6f8> 
[17:36:46.165]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.165]  - attr(*, "resolved")= logi FALSE
[17:36:46.165]  - attr(*, "total_size")= num NA
[17:36:46.169] Packages to be attached in all futures: [n=1] ‘utils’
[17:36:46.169] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.169] Number of futures (= number of chunks): 1
[17:36:46.169] Launching 1 futures (chunks) ...
[17:36:46.169] Chunk #1 of 1 ...
[17:36:46.169]  - seeds: <none>
[17:36:46.169]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.179] Created future:
[17:36:46.180] ClusterFuture:
[17:36:46.180] Label: ‘future_lapply-1’
[17:36:46.180] Expression:
[17:36:46.180] {
[17:36:46.180]     do.call(function(...) {
[17:36:46.180]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.180]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.180]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.180]             on.exit(options(oopts), add = TRUE)
[17:36:46.180]         }
[17:36:46.180]         {
[17:36:46.180]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.180]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.180]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.180]             })
[17:36:46.180]         }
[17:36:46.180]     }, args = future.call.arguments)
[17:36:46.180] }
[17:36:46.180] Lazy evaluation: FALSE
[17:36:46.180] Asynchronous evaluation: TRUE
[17:36:46.180] Local evaluation: TRUE
[17:36:46.180] Environment: R_GlobalEnv
[17:36:46.180] Capture standard output: TRUE
[17:36:46.180] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.180] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:36:46.180] Packages: 1 packages (‘utils’)
[17:36:46.180] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.180] Resolved: FALSE
[17:36:46.180] Value: <not collected>
[17:36:46.180] Conditions captured: <none>
[17:36:46.180] Early signaling: FALSE
[17:36:46.180] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.180] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.191] Chunk #1 of 1 ... DONE
[17:36:46.191] Launching 1 futures (chunks) ... DONE
[17:36:46.191] Resolving 1 futures (chunks) ...
[17:36:46.223]  - Number of value chunks collected: 1
[17:36:46.223] Resolving 1 futures (chunks) ... DONE
[17:36:46.223] Reducing values from 1 chunks ...
[17:36:46.223]  - Number of values collected after concatenation: 1
[17:36:46.223]  - Number of values expected: 1
[17:36:46.223] Reducing values from 1 chunks ... DONE
[17:36:46.223] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[17:36:46.224] future_lapply() ...
[17:36:46.225] Number of chunks: 1
[17:36:46.225] getGlobalsAndPackagesXApply() ...
[17:36:46.225]  - future.globals: FALSE
[17:36:46.226]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[17:36:46.226]  - needed namespaces: [n=0] 
[17:36:46.226] Finding globals ... DONE
[17:36:46.226]  - use_args: TRUE
[17:36:46.226]  - Getting '...' globals ...
[17:36:46.226]    - '...' content: [n=0] 
[17:36:46.227] List of 1
[17:36:46.227]  $ ...: list()
[17:36:46.227]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.227]  - attr(*, "where")=List of 1
[17:36:46.227]   ..$ ...:<environment: 0x5569a07213d8> 
[17:36:46.227]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.227]  - attr(*, "resolved")= logi TRUE
[17:36:46.227]  - attr(*, "total_size")= num NA
[17:36:46.229]  - Getting '...' globals ... DONE
[17:36:46.229] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:36:46.229] List of 4
[17:36:46.229]  $ d                    : num 42
[17:36:46.229]  $ ...future.FUN        :function (x)  
[17:36:46.229]  $ future.call.arguments: list()
[17:36:46.229]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.229]  $ ...                  : list()
[17:36:46.229]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.229]  - attr(*, "where")=List of 4
[17:36:46.229]   ..$ d                    :<environment: R_EmptyEnv> 
[17:36:46.229]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:36:46.229]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:36:46.229]   ..$ ...                  :<environment: 0x5569a07213d8> 
[17:36:46.229]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.229]  - attr(*, "resolved")= logi FALSE
[17:36:46.229]  - attr(*, "total_size")= num 784
[17:36:46.233] Packages to be attached in all futures: [n=0] 
[17:36:46.233] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.233] Number of futures (= number of chunks): 1
[17:36:46.233] Launching 1 futures (chunks) ...
[17:36:46.234] Chunk #1 of 1 ...
[17:36:46.234]  - seeds: <none>
[17:36:46.234]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.245] Created future:
[17:36:46.245] ClusterFuture:
[17:36:46.245] Label: ‘future_lapply-1’
[17:36:46.245] Expression:
[17:36:46.245] {
[17:36:46.245]     do.call(function(...) {
[17:36:46.245]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.245]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.245]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.245]             on.exit(options(oopts), add = TRUE)
[17:36:46.245]         }
[17:36:46.245]         {
[17:36:46.245]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.245]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.245]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.245]             })
[17:36:46.245]         }
[17:36:46.245]     }, args = future.call.arguments)
[17:36:46.245] }
[17:36:46.245] Lazy evaluation: FALSE
[17:36:46.245] Asynchronous evaluation: TRUE
[17:36:46.245] Local evaluation: TRUE
[17:36:46.245] Environment: R_GlobalEnv
[17:36:46.245] Capture standard output: TRUE
[17:36:46.245] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.245] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:46.245] Packages: <none>
[17:36:46.245] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.245] Resolved: FALSE
[17:36:46.245] Value: <not collected>
[17:36:46.245] Conditions captured: <none>
[17:36:46.245] Early signaling: FALSE
[17:36:46.245] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.245] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.256] Chunk #1 of 1 ... DONE
[17:36:46.256] Launching 1 futures (chunks) ... DONE
[17:36:46.257] Resolving 1 futures (chunks) ...
[17:36:46.299]  - Number of value chunks collected: 1
[17:36:46.299] Resolving 1 futures (chunks) ... DONE
[17:36:46.299] Reducing values from 1 chunks ...
[17:36:46.299]  - Number of values collected after concatenation: 2
[17:36:46.299]  - Number of values expected: 2
[17:36:46.299] Reducing values from 1 chunks ... DONE
[17:36:46.300] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[17:36:46.300] future_lapply() ...
[17:36:46.300] Number of chunks: 1
[17:36:46.301] getGlobalsAndPackagesXApply() ...
[17:36:46.301]  - future.globals: TRUE
[17:36:46.302]  - globals found/used: [n=1] ‘FUN’
[17:36:46.302]  - needed namespaces: [n=0] 
[17:36:46.303] Finding globals ... DONE
[17:36:46.303]  - use_args: TRUE
[17:36:46.303]  - Getting '...' globals ...
[17:36:46.303]    - '...' content: [n=0] 
[17:36:46.303] List of 1
[17:36:46.303]  $ ...: list()
[17:36:46.303]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.303]  - attr(*, "where")=List of 1
[17:36:46.303]   ..$ ...:<environment: 0x55699fab1a00> 
[17:36:46.303]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.303]  - attr(*, "resolved")= logi TRUE
[17:36:46.303]  - attr(*, "total_size")= num NA
[17:36:46.306]  - Getting '...' globals ... DONE
[17:36:46.306] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.306] List of 2
[17:36:46.306]  $ ...future.FUN:function (x)  
[17:36:46.306]  $ ...          : list()
[17:36:46.306]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.306]  - attr(*, "where")=List of 2
[17:36:46.306]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.306]   ..$ ...          :<environment: 0x55699fab1a00> 
[17:36:46.306]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.306]  - attr(*, "resolved")= logi FALSE
[17:36:46.306]  - attr(*, "total_size")= num 728
[17:36:46.309] Packages to be attached in all futures: [n=0] 
[17:36:46.309] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.309] Number of futures (= number of chunks): 1
[17:36:46.309] Launching 1 futures (chunks) ...
[17:36:46.309] Chunk #1 of 1 ...
[17:36:46.309]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.309]    + additional globals found: [n=0] 
[17:36:46.310]    + additional namespaces needed: [n=0] 
[17:36:46.310]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.310]  - seeds: <none>
[17:36:46.310]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.318] Created future:
[17:36:46.319] ClusterFuture:
[17:36:46.319] Label: ‘future_lapply-1’
[17:36:46.319] Expression:
[17:36:46.319] {
[17:36:46.319]     do.call(function(...) {
[17:36:46.319]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.319]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.319]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.319]             on.exit(options(oopts), add = TRUE)
[17:36:46.319]         }
[17:36:46.319]         {
[17:36:46.319]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.319]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.319]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.319]             })
[17:36:46.319]         }
[17:36:46.319]     }, args = future.call.arguments)
[17:36:46.319] }
[17:36:46.319] Lazy evaluation: FALSE
[17:36:46.319] Asynchronous evaluation: TRUE
[17:36:46.319] Local evaluation: TRUE
[17:36:46.319] Environment: R_GlobalEnv
[17:36:46.319] Capture standard output: TRUE
[17:36:46.319] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.319] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.319] Packages: <none>
[17:36:46.319] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.319] Resolved: FALSE
[17:36:46.319] Value: <not collected>
[17:36:46.319] Conditions captured: <none>
[17:36:46.319] Early signaling: FALSE
[17:36:46.319] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.319] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.330] Chunk #1 of 1 ... DONE
[17:36:46.330] Launching 1 futures (chunks) ... DONE
[17:36:46.330] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[17:36:46.423] future_lapply() ...
[17:36:46.424] Number of chunks: 1
[17:36:46.425] getGlobalsAndPackagesXApply() ...
[17:36:46.425]  - future.globals: TRUE
[17:36:46.431]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:36:46.431]  - needed namespaces: [n=0] 
[17:36:46.431] Finding globals ... DONE
[17:36:46.432]  - use_args: TRUE
[17:36:46.432]  - Getting '...' globals ...
[17:36:46.432]    - '...' content: [n=0] 
[17:36:46.432] List of 1
[17:36:46.432]  $ ...: list()
[17:36:46.432]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.432]  - attr(*, "where")=List of 1
[17:36:46.432]   ..$ ...:<environment: 0x5569a06ba898> 
[17:36:46.432]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.432]  - attr(*, "resolved")= logi TRUE
[17:36:46.432]  - attr(*, "total_size")= num NA
[17:36:46.435]  - Getting '...' globals ... DONE
[17:36:46.435] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:36:46.436] List of 6
[17:36:46.436]  $ ...future.FUN:function (i)  
[17:36:46.436]  $ caller       :function (a, b, FUN = call_my_add)  
[17:36:46.436]  $ args         :List of 1
[17:36:46.436]   ..$ FUN:function (a, b)  
[17:36:46.436]  $ call_my_add  :function (a, b)  
[17:36:46.436]  $ my_add       :function (a, b)  
[17:36:46.436]  $ ...          : list()
[17:36:46.436]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.436]  - attr(*, "where")=List of 6
[17:36:46.436]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.436]   ..$ caller       :<environment: R_EmptyEnv> 
[17:36:46.436]   ..$ args         :<environment: R_EmptyEnv> 
[17:36:46.436]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:36:46.436]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:36:46.436]   ..$ ...          :<environment: 0x5569a06ba898> 
[17:36:46.436]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.436]  - attr(*, "resolved")= logi FALSE
[17:36:46.436]  - attr(*, "total_size")= num 6664
[17:36:46.442] Packages to be attached in all futures: [n=0] 
[17:36:46.442] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.442] Number of futures (= number of chunks): 1
[17:36:46.442] Launching 1 futures (chunks) ...
[17:36:46.443] Chunk #1 of 1 ...
[17:36:46.443]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.443]    + additional globals found: [n=0] 
[17:36:46.443]    + additional namespaces needed: [n=0] 
[17:36:46.443]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.443]  - seeds: <none>
[17:36:46.443]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.449] Created future:
[17:36:46.449] SequentialFuture:
[17:36:46.449] Label: ‘future_lapply-1’
[17:36:46.449] Expression:
[17:36:46.449] {
[17:36:46.449]     do.call(function(...) {
[17:36:46.449]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.449]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.449]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.449]             on.exit(options(oopts), add = TRUE)
[17:36:46.449]         }
[17:36:46.449]         {
[17:36:46.449]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.449]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.449]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.449]             })
[17:36:46.449]         }
[17:36:46.449]     }, args = future.call.arguments)
[17:36:46.449] }
[17:36:46.449] Lazy evaluation: FALSE
[17:36:46.449] Asynchronous evaluation: FALSE
[17:36:46.449] Local evaluation: TRUE
[17:36:46.449] Environment: 0x5569a06bacf8
[17:36:46.449] Capture standard output: TRUE
[17:36:46.449] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.449] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:36:46.449] Packages: <none>
[17:36:46.449] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.449] Resolved: TRUE
[17:36:46.449] Value: 168 bytes of class ‘list’
[17:36:46.449] Early signaling: FALSE
[17:36:46.449] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.449] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.450] Chunk #1 of 1 ... DONE
[17:36:46.450] Launching 1 futures (chunks) ... DONE
[17:36:46.450] Resolving 1 futures (chunks) ...
[17:36:46.451]  - Number of value chunks collected: 1
[17:36:46.451] Resolving 1 futures (chunks) ... DONE
[17:36:46.451] Reducing values from 1 chunks ...
[17:36:46.451]  - Number of values collected after concatenation: 3
[17:36:46.451]  - Number of values expected: 3
[17:36:46.451] Reducing values from 1 chunks ... DONE
[17:36:46.451] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:36:46.451] future_lapply() ...
[17:36:46.455] Number of chunks: 1
[17:36:46.455] getGlobalsAndPackagesXApply() ...
[17:36:46.455]  - future.globals: TRUE
[17:36:46.458]  - globals found/used: [n=1] ‘FUN’
[17:36:46.458]  - needed namespaces: [n=0] 
[17:36:46.458] Finding globals ... DONE
[17:36:46.458]  - use_args: TRUE
[17:36:46.458]  - Getting '...' globals ...
[17:36:46.458]    - '...' content: [n=1] ‘what’
[17:36:46.459] List of 1
[17:36:46.459]  $ ...:List of 1
[17:36:46.459]   ..$ what:function (x)  
[17:36:46.459]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.459]  - attr(*, "where")=List of 1
[17:36:46.459]   ..$ ...:<environment: 0x55699f359d90> 
[17:36:46.459]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.459]  - attr(*, "resolved")= logi TRUE
[17:36:46.459]  - attr(*, "total_size")= num NA
[17:36:46.461]  - Getting '...' globals ... DONE
[17:36:46.461] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.462] List of 2
[17:36:46.462]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:46.462]  $ ...          :List of 1
[17:36:46.462]   ..$ what:function (x)  
[17:36:46.462]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.462]  - attr(*, "where")=List of 2
[17:36:46.462]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.462]   ..$ ...          :<environment: 0x55699f359d90> 
[17:36:46.462]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.462]  - attr(*, "resolved")= logi FALSE
[17:36:46.462]  - attr(*, "total_size")= num 12192
[17:36:46.464] Packages to be attached in all futures: [n=0] 
[17:36:46.465] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.465] Number of futures (= number of chunks): 1
[17:36:46.465] Launching 1 futures (chunks) ...
[17:36:46.465] Chunk #1 of 1 ...
[17:36:46.465]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.465]    + additional globals found: [n=0] 
[17:36:46.465]    + additional namespaces needed: [n=0] 
[17:36:46.466]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.466]  - seeds: <none>
[17:36:46.466]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.468] Created future:
[17:36:46.468] SequentialFuture:
[17:36:46.468] Label: ‘future_lapply-1’
[17:36:46.468] Expression:
[17:36:46.468] {
[17:36:46.468]     do.call(function(...) {
[17:36:46.468]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.468]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.468]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.468]             on.exit(options(oopts), add = TRUE)
[17:36:46.468]         }
[17:36:46.468]         {
[17:36:46.468]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.468]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.468]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.468]             })
[17:36:46.468]         }
[17:36:46.468]     }, args = future.call.arguments)
[17:36:46.468] }
[17:36:46.468] Lazy evaluation: FALSE
[17:36:46.468] Asynchronous evaluation: FALSE
[17:36:46.468] Local evaluation: TRUE
[17:36:46.468] Environment: R_GlobalEnv
[17:36:46.468] Capture standard output: TRUE
[17:36:46.468] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.468] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.468] Packages: <none>
[17:36:46.468] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.468] Resolved: TRUE
[17:36:46.468] Value: 56 bytes of class ‘list’
[17:36:46.468] Early signaling: FALSE
[17:36:46.468] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.468] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.469] Chunk #1 of 1 ... DONE
[17:36:46.469] Launching 1 futures (chunks) ... DONE
[17:36:46.469] Resolving 1 futures (chunks) ...
[17:36:46.470]  - Number of value chunks collected: 1
[17:36:46.470] Resolving 1 futures (chunks) ... DONE
[17:36:46.470] Reducing values from 1 chunks ...
[17:36:46.470]  - Number of values collected after concatenation: 1
[17:36:46.470]  - Number of values expected: 1
[17:36:46.470] Reducing values from 1 chunks ... DONE
[17:36:46.470] future_lapply() ... DONE
[17:36:46.470] future_lapply() ...
[17:36:46.472] Number of chunks: 1
[17:36:46.472] getGlobalsAndPackagesXApply() ...
[17:36:46.472]  - future.globals: TRUE
[17:36:46.474]  - globals found/used: [n=1] ‘FUN’
[17:36:46.474]  - needed namespaces: [n=0] 
[17:36:46.474] Finding globals ... DONE
[17:36:46.475]  - use_args: TRUE
[17:36:46.475]  - Getting '...' globals ...
[17:36:46.475]    - '...' content: [n=1] ‘what’
[17:36:46.475] List of 1
[17:36:46.475]  $ ...:List of 1
[17:36:46.475]   ..$ what:function (...)  
[17:36:46.475]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.475]  - attr(*, "where")=List of 1
[17:36:46.475]   ..$ ...:<environment: 0x5569a036ea18> 
[17:36:46.475]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.475]  - attr(*, "resolved")= logi TRUE
[17:36:46.475]  - attr(*, "total_size")= num NA
[17:36:46.478]  - Getting '...' globals ... DONE
[17:36:46.478] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.478] List of 2
[17:36:46.478]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:46.478]  $ ...          :List of 1
[17:36:46.478]   ..$ what:function (...)  
[17:36:46.478]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.478]  - attr(*, "where")=List of 2
[17:36:46.478]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.478]   ..$ ...          :<environment: 0x5569a036ea18> 
[17:36:46.478]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.478]  - attr(*, "resolved")= logi FALSE
[17:36:46.478]  - attr(*, "total_size")= num 12584
[17:36:46.481] Packages to be attached in all futures: [n=0] 
[17:36:46.481] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.481] Number of futures (= number of chunks): 1
[17:36:46.481] Launching 1 futures (chunks) ...
[17:36:46.481] Chunk #1 of 1 ...
[17:36:46.481]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.482]    + additional globals found: [n=0] 
[17:36:46.482]    + additional namespaces needed: [n=0] 
[17:36:46.482]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.482]  - seeds: <none>
[17:36:46.482]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.485] Created future:
[17:36:46.485] SequentialFuture:
[17:36:46.485] Label: ‘future_lapply-1’
[17:36:46.485] Expression:
[17:36:46.485] {
[17:36:46.485]     do.call(function(...) {
[17:36:46.485]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.485]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.485]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.485]             on.exit(options(oopts), add = TRUE)
[17:36:46.485]         }
[17:36:46.485]         {
[17:36:46.485]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.485]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.485]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.485]             })
[17:36:46.485]         }
[17:36:46.485]     }, args = future.call.arguments)
[17:36:46.485] }
[17:36:46.485] Lazy evaluation: FALSE
[17:36:46.485] Asynchronous evaluation: FALSE
[17:36:46.485] Local evaluation: TRUE
[17:36:46.485] Environment: R_GlobalEnv
[17:36:46.485] Capture standard output: TRUE
[17:36:46.485] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.485] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.485] Packages: <none>
[17:36:46.485] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.485] Resolved: TRUE
[17:36:46.485] Value: 56 bytes of class ‘list’
[17:36:46.485] Early signaling: FALSE
[17:36:46.485] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.485] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.486] Chunk #1 of 1 ... DONE
[17:36:46.486] Launching 1 futures (chunks) ... DONE
[17:36:46.486] Resolving 1 futures (chunks) ...
[17:36:46.488]  - Number of value chunks collected: 1
[17:36:46.489] Resolving 1 futures (chunks) ... DONE
[17:36:46.489] Reducing values from 1 chunks ...
[17:36:46.489]  - Number of values collected after concatenation: 1
[17:36:46.489]  - Number of values expected: 1
[17:36:46.489] Reducing values from 1 chunks ... DONE
[17:36:46.489] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:36:46.489] future_lapply() ...
[17:36:46.490] Number of chunks: 1
[17:36:46.490] getGlobalsAndPackagesXApply() ...
[17:36:46.490]  - future.globals: TRUE
[17:36:46.492]  - globals found/used: [n=1] ‘FUN’
[17:36:46.492]  - needed namespaces: [n=0] 
[17:36:46.492] Finding globals ... DONE
[17:36:46.492]  - use_args: TRUE
[17:36:46.492]  - Getting '...' globals ...
[17:36:46.492]    - '...' content: [n=1] ‘b’
[17:36:46.492] List of 1
[17:36:46.492]  $ ...:List of 1
[17:36:46.492]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:46.492]   .. ..$ a: int [1:2] 1 2
[17:36:46.492]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.492]  - attr(*, "where")=List of 1
[17:36:46.492]   ..$ ...:<environment: 0x55699fce6260> 
[17:36:46.492]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.492]  - attr(*, "resolved")= logi TRUE
[17:36:46.492]  - attr(*, "total_size")= num NA
[17:36:46.496]  - Getting '...' globals ... DONE
[17:36:46.496] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.496] List of 2
[17:36:46.496]  $ ...future.FUN:function (a, b)  
[17:36:46.496]  $ ...          :List of 1
[17:36:46.496]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:46.496]   .. ..$ a: int [1:2] 1 2
[17:36:46.496]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.496]  - attr(*, "where")=List of 2
[17:36:46.496]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.496]   ..$ ...          :<environment: 0x55699fce6260> 
[17:36:46.496]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.496]  - attr(*, "resolved")= logi FALSE
[17:36:46.496]  - attr(*, "total_size")= num 1440
[17:36:46.499] Packages to be attached in all futures: [n=0] 
[17:36:46.499] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.499] Number of futures (= number of chunks): 1
[17:36:46.499] Launching 1 futures (chunks) ...
[17:36:46.500] Chunk #1 of 1 ...
[17:36:46.500]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.500]    + additional globals found: [n=0] 
[17:36:46.500]    + additional namespaces needed: [n=0] 
[17:36:46.500]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.500]  - seeds: <none>
[17:36:46.500]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.502] Created future:
[17:36:46.503] SequentialFuture:
[17:36:46.503] Label: ‘future_lapply-1’
[17:36:46.503] Expression:
[17:36:46.503] {
[17:36:46.503]     do.call(function(...) {
[17:36:46.503]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.503]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.503]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.503]             on.exit(options(oopts), add = TRUE)
[17:36:46.503]         }
[17:36:46.503]         {
[17:36:46.503]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.503]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.503]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.503]             })
[17:36:46.503]         }
[17:36:46.503]     }, args = future.call.arguments)
[17:36:46.503] }
[17:36:46.503] Lazy evaluation: FALSE
[17:36:46.503] Asynchronous evaluation: FALSE
[17:36:46.503] Local evaluation: TRUE
[17:36:46.503] Environment: R_GlobalEnv
[17:36:46.503] Capture standard output: TRUE
[17:36:46.503] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.503] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.503] Packages: <none>
[17:36:46.503] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.503] Resolved: TRUE
[17:36:46.503] Value: 112 bytes of class ‘list’
[17:36:46.503] Early signaling: FALSE
[17:36:46.503] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.503] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.504] Chunk #1 of 1 ... DONE
[17:36:46.504] Launching 1 futures (chunks) ... DONE
[17:36:46.504] Resolving 1 futures (chunks) ...
[17:36:46.504]  - Number of value chunks collected: 1
[17:36:46.504] Resolving 1 futures (chunks) ... DONE
[17:36:46.504] Reducing values from 1 chunks ...
[17:36:46.504]  - Number of values collected after concatenation: 1
[17:36:46.504]  - Number of values expected: 1
[17:36:46.505] Reducing values from 1 chunks ... DONE
[17:36:46.505] future_lapply() ... DONE
[17:36:46.505] future_lapply() ...
[17:36:46.505] Number of chunks: 1
[17:36:46.505] getGlobalsAndPackagesXApply() ...
[17:36:46.505]  - future.globals: TRUE
[17:36:46.507]  - globals found/used: [n=1] ‘FUN’
[17:36:46.507]  - needed namespaces: [n=0] 
[17:36:46.507] Finding globals ... DONE
[17:36:46.507]  - use_args: TRUE
[17:36:46.507]  - Getting '...' globals ...
[17:36:46.508]    - '...' content: [n=1] ‘b’
[17:36:46.508] List of 1
[17:36:46.508]  $ ...:List of 1
[17:36:46.508]   ..$ b:<environment: 0x55699ed7f0d0> 
[17:36:46.508]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.508]  - attr(*, "where")=List of 1
[17:36:46.508]   ..$ ...:<environment: 0x55699ed7fbc0> 
[17:36:46.508]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.508]  - attr(*, "resolved")= logi TRUE
[17:36:46.508]  - attr(*, "total_size")= num NA
[17:36:46.511]  - Getting '...' globals ... DONE
[17:36:46.511] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.511] List of 2
[17:36:46.511]  $ ...future.FUN:function (a, b)  
[17:36:46.511]  $ ...          :List of 1
[17:36:46.511]   ..$ b:<environment: 0x55699ed7f0d0> 
[17:36:46.511]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.511]  - attr(*, "where")=List of 2
[17:36:46.511]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.511]   ..$ ...          :<environment: 0x55699ed7fbc0> 
[17:36:46.511]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.511]  - attr(*, "resolved")= logi FALSE
[17:36:46.511]  - attr(*, "total_size")= num 1440
[17:36:46.514] Packages to be attached in all futures: [n=0] 
[17:36:46.514] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.514] Number of futures (= number of chunks): 1
[17:36:46.514] Launching 1 futures (chunks) ...
[17:36:46.514] Chunk #1 of 1 ...
[17:36:46.514]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.515]    + additional globals found: [n=0] 
[17:36:46.515]    + additional namespaces needed: [n=0] 
[17:36:46.515]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.515]  - seeds: <none>
[17:36:46.515]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.518] Created future:
[17:36:46.518] SequentialFuture:
[17:36:46.518] Label: ‘future_lapply-1’
[17:36:46.518] Expression:
[17:36:46.518] {
[17:36:46.518]     do.call(function(...) {
[17:36:46.518]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.518]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.518]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.518]             on.exit(options(oopts), add = TRUE)
[17:36:46.518]         }
[17:36:46.518]         {
[17:36:46.518]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.518]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.518]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.518]             })
[17:36:46.518]         }
[17:36:46.518]     }, args = future.call.arguments)
[17:36:46.518] }
[17:36:46.518] Lazy evaluation: FALSE
[17:36:46.518] Asynchronous evaluation: FALSE
[17:36:46.518] Local evaluation: TRUE
[17:36:46.518] Environment: R_GlobalEnv
[17:36:46.518] Capture standard output: TRUE
[17:36:46.518] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.518] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.518] Packages: <none>
[17:36:46.518] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.518] Resolved: TRUE
[17:36:46.518] Value: 120 bytes of class ‘list’
[17:36:46.518] Early signaling: FALSE
[17:36:46.518] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.518] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.519] Chunk #1 of 1 ... DONE
[17:36:46.519] Launching 1 futures (chunks) ... DONE
[17:36:46.519] Resolving 1 futures (chunks) ...
[17:36:46.519]  - Number of value chunks collected: 1
[17:36:46.519] Resolving 1 futures (chunks) ... DONE
[17:36:46.519] Reducing values from 1 chunks ...
[17:36:46.520]  - Number of values collected after concatenation: 1
[17:36:46.520]  - Number of values expected: 1
[17:36:46.520] Reducing values from 1 chunks ... DONE
[17:36:46.520] future_lapply() ... DONE
[17:36:46.520] future_lapply() ...
[17:36:46.521] Number of chunks: 1
[17:36:46.521] getGlobalsAndPackagesXApply() ...
[17:36:46.521]  - future.globals: TRUE
[17:36:46.523]  - globals found/used: [n=1] ‘FUN’
[17:36:46.523]  - needed namespaces: [n=0] 
[17:36:46.523] Finding globals ... DONE
[17:36:46.523]  - use_args: TRUE
[17:36:46.523]  - Getting '...' globals ...
[17:36:46.524]    - '...' content: [n=1] ‘b’
[17:36:46.524] List of 1
[17:36:46.524]  $ ...:List of 1
[17:36:46.524]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:46.524]   .. .. ..@ slots     :List of 4
[17:36:46.524]   .. .. .. ..$ .Data  : chr "function"
[17:36:46.524]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. ..$ target : chr "signature"
[17:36:46.524]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. ..$ defined: chr "signature"
[17:36:46.524]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. ..$ generic: chr "character"
[17:36:46.524]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. ..@ contains  :List of 3
[17:36:46.524]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.524]   .. .. ..@ virtual   : logi FALSE
[17:36:46.524]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:46.524]  list()
[17:36:46.524]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.524]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.524]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.524]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.524]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.524]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.524]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.524]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.524]   .. .. .. .. ..$ generic: chr(0) 
[17:36:46.524]   .. .. ..@ validity  : NULL
[17:36:46.524]   .. .. ..@ access    : list()
[17:36:46.524]   .. .. ..@ className : chr "MethodDefinition"
[17:36:46.524]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. ..@ subclasses:List of 7
[17:36:46.524]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.524]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.524]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.524]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.524]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.524]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.524]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.524]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.524]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.524]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.524]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.524]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.524]   .. .. ..@ versionKey:<externalptr> 
[17:36:46.524]   .. .. ..@ sealed    : logi TRUE
[17:36:46.524]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.524]  - attr(*, "where")=List of 1
[17:36:46.524]   ..$ ...:<environment: 0x5569a04da730> 
[17:36:46.524]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.524]  - attr(*, "resolved")= logi TRUE
[17:36:46.524]  - attr(*, "total_size")= num NA
[17:36:46.571]  - Getting '...' globals ... DONE
[17:36:46.571] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.571] List of 2
[17:36:46.571]  $ ...future.FUN:function (a, b)  
[17:36:46.571]  $ ...          :List of 1
[17:36:46.571]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:46.571]   .. .. ..@ slots     :List of 4
[17:36:46.571]   .. .. .. ..$ .Data  : chr "function"
[17:36:46.571]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. ..$ target : chr "signature"
[17:36:46.571]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. ..$ defined: chr "signature"
[17:36:46.571]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. ..$ generic: chr "character"
[17:36:46.571]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. ..@ contains  :List of 3
[17:36:46.571]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.571]   .. .. ..@ virtual   : logi FALSE
[17:36:46.571]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:46.571]  list()
[17:36:46.571]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.571]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.571]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.571]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.571]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.571]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.571]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.571]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.571]   .. .. .. .. ..$ generic: chr(0) 
[17:36:46.571]   .. .. ..@ validity  : NULL
[17:36:46.571]   .. .. ..@ access    : list()
[17:36:46.571]   .. .. ..@ className : chr "MethodDefinition"
[17:36:46.571]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. ..@ subclasses:List of 7
[17:36:46.571]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.571]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.571]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.571]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.571]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.571]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.571]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.571]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.571]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.571]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.571]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.571]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.571]   .. .. ..@ versionKey:<externalptr> 
[17:36:46.571]   .. .. ..@ sealed    : logi TRUE
[17:36:46.571]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.571]  - attr(*, "where")=List of 2
[17:36:46.571]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.571]   ..$ ...          :<environment: 0x5569a04da730> 
[17:36:46.571]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.571]  - attr(*, "resolved")= logi FALSE
[17:36:46.571]  - attr(*, "total_size")= num 405168
[17:36:46.619] Packages to be attached in all futures: [n=0] 
[17:36:46.619] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.620] Number of futures (= number of chunks): 1
[17:36:46.620] Launching 1 futures (chunks) ...
[17:36:46.620] Chunk #1 of 1 ...
[17:36:46.620]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.620]    + additional globals found: [n=0] 
[17:36:46.620]    + additional namespaces needed: [n=0] 
[17:36:46.620]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.621]  - seeds: <none>
[17:36:46.621]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.623] Created future:
[17:36:46.623] SequentialFuture:
[17:36:46.623] Label: ‘future_lapply-1’
[17:36:46.623] Expression:
[17:36:46.623] {
[17:36:46.623]     do.call(function(...) {
[17:36:46.623]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.623]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.623]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.623]             on.exit(options(oopts), add = TRUE)
[17:36:46.623]         }
[17:36:46.623]         {
[17:36:46.623]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.623]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.623]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.623]             })
[17:36:46.623]         }
[17:36:46.623]     }, args = future.call.arguments)
[17:36:46.623] }
[17:36:46.623] Lazy evaluation: FALSE
[17:36:46.623] Asynchronous evaluation: FALSE
[17:36:46.623] Local evaluation: TRUE
[17:36:46.623] Environment: R_GlobalEnv
[17:36:46.623] Capture standard output: TRUE
[17:36:46.623] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.623] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.623] Packages: <none>
[17:36:46.623] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.623] Resolved: TRUE
[17:36:46.623] Value: 112 bytes of class ‘list’
[17:36:46.623] Early signaling: FALSE
[17:36:46.623] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.623] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.624] Chunk #1 of 1 ... DONE
[17:36:46.624] Launching 1 futures (chunks) ... DONE
[17:36:46.624] Resolving 1 futures (chunks) ...
[17:36:46.625]  - Number of value chunks collected: 1
[17:36:46.625] Resolving 1 futures (chunks) ... DONE
[17:36:46.625] Reducing values from 1 chunks ...
[17:36:46.625]  - Number of values collected after concatenation: 1
[17:36:46.625]  - Number of values expected: 1
[17:36:46.625] Reducing values from 1 chunks ... DONE
[17:36:46.625] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:36:46.627] future_lapply() ...
[17:36:46.628] Number of chunks: 1
[17:36:46.628] getGlobalsAndPackagesXApply() ...
[17:36:46.628]  - future.globals: TRUE
[17:36:46.629]  - globals found/used: [n=1] ‘FUN’
[17:36:46.629]  - needed namespaces: [n=0] 
[17:36:46.629] Finding globals ... DONE
[17:36:46.629]  - use_args: TRUE
[17:36:46.629]  - Getting '...' globals ...
[17:36:46.630]    - '...' content: [n=0] 
[17:36:46.630] List of 1
[17:36:46.630]  $ ...: list()
[17:36:46.630]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.630]  - attr(*, "where")=List of 1
[17:36:46.630]   ..$ ...:<environment: 0x55699f32c848> 
[17:36:46.630]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.630]  - attr(*, "resolved")= logi TRUE
[17:36:46.630]  - attr(*, "total_size")= num NA
[17:36:46.632]  - Getting '...' globals ... DONE
[17:36:46.632] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.633] List of 2
[17:36:46.633]  $ ...future.FUN:function (f)  
[17:36:46.633]  $ ...          : list()
[17:36:46.633]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.633]  - attr(*, "where")=List of 2
[17:36:46.633]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.633]   ..$ ...          :<environment: 0x55699f32c848> 
[17:36:46.633]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.633]  - attr(*, "resolved")= logi FALSE
[17:36:46.633]  - attr(*, "total_size")= num 1008
[17:36:46.635] Packages to be attached in all futures: [n=0] 
[17:36:46.635] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.635] Number of futures (= number of chunks): 1
[17:36:46.635] Launching 1 futures (chunks) ...
[17:36:46.636] Chunk #1 of 1 ...
[17:36:46.636]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.638]    + additional globals found: [n=2] ‘a’, ‘b’
[17:36:46.638]    + additional namespaces needed: [n=1] ‘tools’
[17:36:46.638]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.638]  - seeds: <none>
[17:36:46.638]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:36:46.641] Created future:
[17:36:46.641] SequentialFuture:
[17:36:46.641] Label: ‘future_lapply-1’
[17:36:46.641] Expression:
[17:36:46.641] {
[17:36:46.641]     do.call(function(...) {
[17:36:46.641]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.641]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.641]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.641]             on.exit(options(oopts), add = TRUE)
[17:36:46.641]         }
[17:36:46.641]         {
[17:36:46.641]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.641]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.641]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.641]             })
[17:36:46.641]         }
[17:36:46.641]     }, args = future.call.arguments)
[17:36:46.641] }
[17:36:46.641] Lazy evaluation: FALSE
[17:36:46.641] Asynchronous evaluation: FALSE
[17:36:46.641] Local evaluation: TRUE
[17:36:46.641] Environment: R_GlobalEnv
[17:36:46.641] Capture standard output: TRUE
[17:36:46.641] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.641] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:36:46.641] Packages: 1 packages (‘tools’)
[17:36:46.641] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.641] Resolved: TRUE
[17:36:46.641] Value: 224 bytes of class ‘list’
[17:36:46.641] Early signaling: FALSE
[17:36:46.641] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.641] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.642] Chunk #1 of 1 ... DONE
[17:36:46.642] Launching 1 futures (chunks) ... DONE
[17:36:46.642] Resolving 1 futures (chunks) ...
[17:36:46.643]  - Number of value chunks collected: 1
[17:36:46.643] Resolving 1 futures (chunks) ... DONE
[17:36:46.643] Reducing values from 1 chunks ...
[17:36:46.643]  - Number of values collected after concatenation: 4
[17:36:46.643]  - Number of values expected: 4
[17:36:46.643] Reducing values from 1 chunks ... DONE
[17:36:46.643] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:36:46.646] future_lapply() ...
[17:36:46.647] Number of chunks: 1
[17:36:46.647] getGlobalsAndPackagesXApply() ...
[17:36:46.647]  - future.globals: TRUE
[17:36:46.649]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:36:46.649]  - needed namespaces: [n=0] 
[17:36:46.649] Finding globals ... DONE
[17:36:46.649]  - use_args: TRUE
[17:36:46.649]  - Getting '...' globals ...
[17:36:46.650]    - '...' content: [n=0] 
[17:36:46.650] List of 1
[17:36:46.650]  $ ...: list()
[17:36:46.650]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.650]  - attr(*, "where")=List of 1
[17:36:46.650]   ..$ ...:<environment: 0x5569a039cac8> 
[17:36:46.650]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.650]  - attr(*, "resolved")= logi TRUE
[17:36:46.650]  - attr(*, "total_size")= num NA
[17:36:46.652]  - Getting '...' globals ... DONE
[17:36:46.652] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:36:46.652] List of 3
[17:36:46.652]  $ ...future.FUN        :function (x)  
[17:36:46.652]  $ future.call.arguments:List of 1
[17:36:46.652]   ..$ a: num 1
[17:36:46.652]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.652]  $ ...                  : list()
[17:36:46.652]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.652]  - attr(*, "where")=List of 3
[17:36:46.652]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:36:46.652]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:36:46.652]   ..$ ...                  :<environment: 0x5569a039cac8> 
[17:36:46.652]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.652]  - attr(*, "resolved")= logi FALSE
[17:36:46.652]  - attr(*, "total_size")= num 1272
[17:36:46.656] Packages to be attached in all futures: [n=0] 
[17:36:46.656] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.656] Number of futures (= number of chunks): 1
[17:36:46.656] Launching 1 futures (chunks) ...
[17:36:46.657] Chunk #1 of 1 ...
[17:36:46.657]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.657]    + additional globals found: [n=0] 
[17:36:46.657]    + additional namespaces needed: [n=0] 
[17:36:46.657]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.657]  - seeds: <none>
[17:36:46.657]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.660] Created future:
[17:36:46.660] SequentialFuture:
[17:36:46.660] Label: ‘future_lapply-1’
[17:36:46.660] Expression:
[17:36:46.660] {
[17:36:46.660]     do.call(function(...) {
[17:36:46.660]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.660]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.660]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.660]             on.exit(options(oopts), add = TRUE)
[17:36:46.660]         }
[17:36:46.660]         {
[17:36:46.660]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.660]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.660]                 ...future.FUN(...future.X_jj)
[17:36:46.660]             })
[17:36:46.660]         }
[17:36:46.660]     }, args = future.call.arguments)
[17:36:46.660] }
[17:36:46.660] Lazy evaluation: FALSE
[17:36:46.660] Asynchronous evaluation: FALSE
[17:36:46.660] Local evaluation: TRUE
[17:36:46.660] Environment: 0x5569a039ce48
[17:36:46.660] Capture standard output: TRUE
[17:36:46.660] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.660] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.660] Packages: <none>
[17:36:46.660] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.660] Resolved: TRUE
[17:36:46.660] Value: 56 bytes of class ‘list’
[17:36:46.660] Early signaling: FALSE
[17:36:46.660] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.660] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.661] Chunk #1 of 1 ... DONE
[17:36:46.661] Launching 1 futures (chunks) ... DONE
[17:36:46.661] Resolving 1 futures (chunks) ...
[17:36:46.661]  - Number of value chunks collected: 1
[17:36:46.662] Resolving 1 futures (chunks) ... DONE
[17:36:46.662] Reducing values from 1 chunks ...
[17:36:46.662]  - Number of values collected after concatenation: 1
[17:36:46.662]  - Number of values expected: 1
[17:36:46.664] Reducing values from 1 chunks ... DONE
[17:36:46.664] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:36:46.665] future_lapply() ...
[17:36:46.666] Number of chunks: 1
[17:36:46.666] getGlobalsAndPackagesXApply() ...
[17:36:46.666]  - future.globals: TRUE
[17:36:46.668]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:46.668]  - needed namespaces: [n=0] 
[17:36:46.668] Finding globals ... DONE
[17:36:46.668]  - use_args: TRUE
[17:36:46.668]  - Getting '...' globals ...
[17:36:46.669]    - '...' content: [n=0] 
[17:36:46.669] List of 1
[17:36:46.669]  $ ...: list()
[17:36:46.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.669]  - attr(*, "where")=List of 1
[17:36:46.669]   ..$ ...:<environment: 0x55699fcc2238> 
[17:36:46.669]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.669]  - attr(*, "resolved")= logi TRUE
[17:36:46.669]  - attr(*, "total_size")= num NA
[17:36:46.671]  - Getting '...' globals ... DONE
[17:36:46.671] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:46.672] List of 3
[17:36:46.672]  $ ...future.FUN:function (ii)  
[17:36:46.672]  $ a            : num 1
[17:36:46.672]  $ ...          : list()
[17:36:46.672]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.672]  - attr(*, "where")=List of 3
[17:36:46.672]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.672]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:46.672]   ..$ ...          :<environment: 0x55699fcc2238> 
[17:36:46.672]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.672]  - attr(*, "resolved")= logi FALSE
[17:36:46.672]  - attr(*, "total_size")= num 2984
[17:36:46.675] Packages to be attached in all futures: [n=0] 
[17:36:46.675] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.675] Number of futures (= number of chunks): 1
[17:36:46.675] Launching 1 futures (chunks) ...
[17:36:46.675] Chunk #1 of 1 ...
[17:36:46.675]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.675]    + additional globals found: [n=0] 
[17:36:46.676]    + additional namespaces needed: [n=0] 
[17:36:46.676]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.676]  - seeds: <none>
[17:36:46.676]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.678] Created future:
[17:36:46.678] SequentialFuture:
[17:36:46.678] Label: ‘future_lapply-1’
[17:36:46.678] Expression:
[17:36:46.678] {
[17:36:46.678]     do.call(function(...) {
[17:36:46.678]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.678]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.678]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.678]             on.exit(options(oopts), add = TRUE)
[17:36:46.678]         }
[17:36:46.678]         {
[17:36:46.678]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.678]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.678]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.678]             })
[17:36:46.678]         }
[17:36:46.678]     }, args = future.call.arguments)
[17:36:46.678] }
[17:36:46.678] Lazy evaluation: FALSE
[17:36:46.678] Asynchronous evaluation: FALSE
[17:36:46.678] Local evaluation: TRUE
[17:36:46.678] Environment: R_GlobalEnv
[17:36:46.678] Capture standard output: TRUE
[17:36:46.678] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.678] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:46.678] Packages: <none>
[17:36:46.678] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.678] Resolved: TRUE
[17:36:46.678] Value: 56 bytes of class ‘list’
[17:36:46.678] Early signaling: FALSE
[17:36:46.678] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.678] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.679] Chunk #1 of 1 ... DONE
[17:36:46.679] Launching 1 futures (chunks) ... DONE
[17:36:46.680] Resolving 1 futures (chunks) ...
[17:36:46.680]  - Number of value chunks collected: 1
[17:36:46.680] Resolving 1 futures (chunks) ... DONE
[17:36:46.680] Reducing values from 1 chunks ...
[17:36:46.680]  - Number of values collected after concatenation: 1
[17:36:46.680]  - Number of values expected: 1
[17:36:46.680] Reducing values from 1 chunks ... DONE
[17:36:46.681] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:36:46.681] future_lapply() ...
[17:36:46.681] Number of chunks: 1
[17:36:46.682] getGlobalsAndPackagesXApply() ...
[17:36:46.682]  - future.globals: TRUE
[17:36:46.684]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:46.684]  - needed namespaces: [n=0] 
[17:36:46.684] Finding globals ... DONE
[17:36:46.684]  - use_args: TRUE
[17:36:46.684]  - Getting '...' globals ...
[17:36:46.684]    - '...' content: [n=0] 
[17:36:46.685] List of 1
[17:36:46.685]  $ ...: list()
[17:36:46.685]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.685]  - attr(*, "where")=List of 1
[17:36:46.685]   ..$ ...:<environment: 0x55699ea7e6d8> 
[17:36:46.685]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.685]  - attr(*, "resolved")= logi TRUE
[17:36:46.685]  - attr(*, "total_size")= num NA
[17:36:46.687]  - Getting '...' globals ... DONE
[17:36:46.687] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:46.687] List of 3
[17:36:46.687]  $ ...future.FUN:function (ii)  
[17:36:46.687]  $ a            : num 1
[17:36:46.687]  $ ...          : list()
[17:36:46.687]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.687]  - attr(*, "where")=List of 3
[17:36:46.687]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.687]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:46.687]   ..$ ...          :<environment: 0x55699ea7e6d8> 
[17:36:46.687]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.687]  - attr(*, "resolved")= logi FALSE
[17:36:46.687]  - attr(*, "total_size")= num 2984
[17:36:46.690] Packages to be attached in all futures: [n=0] 
[17:36:46.691] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.691] Number of futures (= number of chunks): 1
[17:36:46.691] Launching 1 futures (chunks) ...
[17:36:46.691] Chunk #1 of 1 ...
[17:36:46.691]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.691]    + additional globals found: [n=0] 
[17:36:46.691]    + additional namespaces needed: [n=0] 
[17:36:46.691]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.692]  - seeds: <none>
[17:36:46.692]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.694] Created future:
[17:36:46.694] SequentialFuture:
[17:36:46.694] Label: ‘future_lapply-1’
[17:36:46.694] Expression:
[17:36:46.694] {
[17:36:46.694]     do.call(function(...) {
[17:36:46.694]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.694]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.694]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.694]             on.exit(options(oopts), add = TRUE)
[17:36:46.694]         }
[17:36:46.694]         {
[17:36:46.694]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.694]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.694]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.694]             })
[17:36:46.694]         }
[17:36:46.694]     }, args = future.call.arguments)
[17:36:46.694] }
[17:36:46.694] Lazy evaluation: FALSE
[17:36:46.694] Asynchronous evaluation: FALSE
[17:36:46.694] Local evaluation: TRUE
[17:36:46.694] Environment: R_GlobalEnv
[17:36:46.694] Capture standard output: TRUE
[17:36:46.694] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.694] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:46.694] Packages: <none>
[17:36:46.694] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.694] Resolved: TRUE
[17:36:46.694] Value: 56 bytes of class ‘list’
[17:36:46.694] Early signaling: FALSE
[17:36:46.694] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.694] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.695] Chunk #1 of 1 ... DONE
[17:36:46.695] Launching 1 futures (chunks) ... DONE
[17:36:46.695] Resolving 1 futures (chunks) ...
[17:36:46.696]  - Number of value chunks collected: 1
[17:36:46.696] Resolving 1 futures (chunks) ... DONE
[17:36:46.696] Reducing values from 1 chunks ...
[17:36:46.696]  - Number of values collected after concatenation: 1
[17:36:46.696]  - Number of values expected: 1
[17:36:46.696] Reducing values from 1 chunks ... DONE
[17:36:46.696] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:36:46.697] future_lapply() ...
[17:36:46.697] Number of chunks: 1
[17:36:46.697] getGlobalsAndPackagesXApply() ...
[17:36:46.697]  - future.globals: <name-value list> with names ‘42’
[17:36:46.697]  - use_args: TRUE
[17:36:46.697]  - Getting '...' globals ...
[17:36:46.698]    - '...' content: [n=0] 
[17:36:46.698] List of 1
[17:36:46.698]  $ ...: list()
[17:36:46.698]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.698]  - attr(*, "where")=List of 1
[17:36:46.698]   ..$ ...:<environment: 0x5569a064fb10> 
[17:36:46.698]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.698]  - attr(*, "resolved")= logi TRUE
[17:36:46.698]  - attr(*, "total_size")= num NA
[17:36:46.700]  - Getting '...' globals ... DONE
[17:36:46.700] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:36:46.701] List of 3
[17:36:46.701]  $ a            : num 42
[17:36:46.701]  $ ...future.FUN:function (x)  
[17:36:46.701]  $ ...          : list()
[17:36:46.701]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.701]  - attr(*, "where")=List of 3
[17:36:46.701]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:46.701]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:36:46.701]   ..$ ...          :<environment: 0x5569a064fb10> 
[17:36:46.701]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.701]  - attr(*, "resolved")= logi FALSE
[17:36:46.701]  - attr(*, "total_size")= num NA
[17:36:46.704] Packages to be attached in all futures: [n=0] 
[17:36:46.704] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.704] Number of futures (= number of chunks): 1
[17:36:46.704] Launching 1 futures (chunks) ...
[17:36:46.704] Chunk #1 of 1 ...
[17:36:46.704]  - seeds: <none>
[17:36:46.704]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.707] Created future:
[17:36:46.707] SequentialFuture:
[17:36:46.707] Label: ‘future_lapply-1’
[17:36:46.707] Expression:
[17:36:46.707] {
[17:36:46.707]     do.call(function(...) {
[17:36:46.707]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.707]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.707]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.707]             on.exit(options(oopts), add = TRUE)
[17:36:46.707]         }
[17:36:46.707]         {
[17:36:46.707]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.707]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.707]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.707]             })
[17:36:46.707]         }
[17:36:46.707]     }, args = future.call.arguments)
[17:36:46.707] }
[17:36:46.707] Lazy evaluation: FALSE
[17:36:46.707] Asynchronous evaluation: FALSE
[17:36:46.707] Local evaluation: TRUE
[17:36:46.707] Environment: R_GlobalEnv
[17:36:46.707] Capture standard output: TRUE
[17:36:46.707] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.707] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:46.707] Packages: <none>
[17:36:46.707] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.707] Resolved: TRUE
[17:36:46.707] Value: 56 bytes of class ‘list’
[17:36:46.707] Early signaling: FALSE
[17:36:46.707] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.707] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:36:46.708] Chunk #1 of 1 ... DONE
[17:36:46.708] Launching 1 futures (chunks) ... DONE
[17:36:46.709] Resolving 1 futures (chunks) ...
[17:36:46.711]  - Number of value chunks collected: 1
[17:36:46.711] Resolving 1 futures (chunks) ... DONE
[17:36:46.711] Reducing values from 1 chunks ...
[17:36:46.711]  - Number of values collected after concatenation: 1
[17:36:46.711]  - Number of values expected: 1
[17:36:46.711] Reducing values from 1 chunks ... DONE
[17:36:46.711] future_lapply() ... DONE
List of 1
 $ : num 42
[17:36:46.718] future_lapply() ...
[17:36:46.724] Number of chunks: 2
[17:36:46.724] getGlobalsAndPackagesXApply() ...
[17:36:46.724]  - future.globals: TRUE
[17:36:46.728]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:36:46.728]  - needed namespaces: [n=0] 
[17:36:46.728] Finding globals ... DONE
[17:36:46.728]  - use_args: TRUE
[17:36:46.729]  - Getting '...' globals ...
[17:36:46.729]    - '...' content: [n=0] 
[17:36:46.729] List of 1
[17:36:46.729]  $ ...: list()
[17:36:46.729]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.729]  - attr(*, "where")=List of 1
[17:36:46.729]   ..$ ...:<environment: 0x55699f63eab0> 
[17:36:46.729]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.729]  - attr(*, "resolved")= logi TRUE
[17:36:46.729]  - attr(*, "total_size")= num NA
[17:36:46.731]  - Getting '...' globals ... DONE
[17:36:46.732] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:36:46.732] List of 6
[17:36:46.732]  $ ...future.FUN:function (i)  
[17:36:46.732]  $ caller       :function (a, b, FUN = call_my_add)  
[17:36:46.732]  $ args         :List of 1
[17:36:46.732]   ..$ FUN:function (a, b)  
[17:36:46.732]  $ call_my_add  :function (a, b)  
[17:36:46.732]  $ my_add       :function (a, b)  
[17:36:46.732]  $ ...          : list()
[17:36:46.732]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.732]  - attr(*, "where")=List of 6
[17:36:46.732]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.732]   ..$ caller       :<environment: R_EmptyEnv> 
[17:36:46.732]   ..$ args         :<environment: R_EmptyEnv> 
[17:36:46.732]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:36:46.732]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:36:46.732]   ..$ ...          :<environment: 0x55699f63eab0> 
[17:36:46.732]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.732]  - attr(*, "resolved")= logi FALSE
[17:36:46.732]  - attr(*, "total_size")= num 24120
[17:36:46.736] Packages to be attached in all futures: [n=0] 
[17:36:46.736] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.737] Number of futures (= number of chunks): 2
[17:36:46.737] Launching 2 futures (chunks) ...
[17:36:46.737] Chunk #1 of 2 ...
[17:36:46.737]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.737]    + additional globals found: [n=0] 
[17:36:46.737]    + additional namespaces needed: [n=0] 
[17:36:46.737]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.737]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:46.738]  - seeds: <none>
[17:36:46.738]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.747] Created future:
[17:36:46.747] MulticoreFuture:
[17:36:46.747] Label: ‘future_lapply-1’
[17:36:46.747] Expression:
[17:36:46.747] {
[17:36:46.747]     do.call(function(...) {
[17:36:46.747]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.747]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.747]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.747]             on.exit(options(oopts), add = TRUE)
[17:36:46.747]         }
[17:36:46.747]         {
[17:36:46.747]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.747]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.747]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.747]             })
[17:36:46.747]         }
[17:36:46.747]     }, args = future.call.arguments)
[17:36:46.747] }
[17:36:46.747] Lazy evaluation: FALSE
[17:36:46.747] Asynchronous evaluation: TRUE
[17:36:46.747] Local evaluation: TRUE
[17:36:46.747] Environment: 0x55699fbdacf0
[17:36:46.747] Capture standard output: TRUE
[17:36:46.747] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.747] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:36:46.747] Packages: <none>
[17:36:46.747] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.747] Resolved: TRUE
[17:36:46.747] Value: <not collected>
[17:36:46.747] Conditions captured: <none>
[17:36:46.747] Early signaling: FALSE
[17:36:46.747] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.747] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.755] Chunk #1 of 2 ... DONE
[17:36:46.755] Chunk #2 of 2 ...
[17:36:46.755]  - Finding globals in 'X' for chunk #2 ...
[17:36:46.756]    + additional globals found: [n=0] 
[17:36:46.756]    + additional namespaces needed: [n=0] 
[17:36:46.756]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:46.756]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:46.756]  - seeds: <none>
[17:36:46.756]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.765] Created future:
[17:36:46.766] MulticoreFuture:
[17:36:46.766] Label: ‘future_lapply-2’
[17:36:46.766] Expression:
[17:36:46.766] {
[17:36:46.766]     do.call(function(...) {
[17:36:46.766]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.766]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.766]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.766]             on.exit(options(oopts), add = TRUE)
[17:36:46.766]         }
[17:36:46.766]         {
[17:36:46.766]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.766]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.766]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.766]             })
[17:36:46.766]         }
[17:36:46.766]     }, args = future.call.arguments)
[17:36:46.766] }
[17:36:46.766] Lazy evaluation: FALSE
[17:36:46.766] Asynchronous evaluation: TRUE
[17:36:46.766] Local evaluation: TRUE
[17:36:46.766] Environment: 0x55699fbdacf0
[17:36:46.766] Capture standard output: TRUE
[17:36:46.766] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.766] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:36:46.766] Packages: <none>
[17:36:46.766] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.766] Resolved: TRUE
[17:36:46.766] Value: <not collected>
[17:36:46.766] Conditions captured: <none>
[17:36:46.766] Early signaling: FALSE
[17:36:46.766] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.766] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.774] Chunk #2 of 2 ... DONE
[17:36:46.774] Launching 2 futures (chunks) ... DONE
[17:36:46.775] Resolving 2 futures (chunks) ...
[17:36:46.779]  - Number of value chunks collected: 2
[17:36:46.779] Resolving 2 futures (chunks) ... DONE
[17:36:46.779] Reducing values from 2 chunks ...
[17:36:46.780]  - Number of values collected after concatenation: 3
[17:36:46.780]  - Number of values expected: 3
[17:36:46.780] Reducing values from 2 chunks ... DONE
[17:36:46.780] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:36:46.781] future_lapply() ...
[17:36:46.786] Number of chunks: 1
[17:36:46.786] getGlobalsAndPackagesXApply() ...
[17:36:46.786]  - future.globals: TRUE
[17:36:46.790]  - globals found/used: [n=1] ‘FUN’
[17:36:46.790]  - needed namespaces: [n=0] 
[17:36:46.790] Finding globals ... DONE
[17:36:46.790]  - use_args: TRUE
[17:36:46.790]  - Getting '...' globals ...
[17:36:46.791]    - '...' content: [n=1] ‘what’
[17:36:46.791] List of 1
[17:36:46.791]  $ ...:List of 1
[17:36:46.791]   ..$ what:function (x)  
[17:36:46.791]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.791]  - attr(*, "where")=List of 1
[17:36:46.791]   ..$ ...:<environment: 0x5569a08933b8> 
[17:36:46.791]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.791]  - attr(*, "resolved")= logi TRUE
[17:36:46.791]  - attr(*, "total_size")= num NA
[17:36:46.797]  - Getting '...' globals ... DONE
[17:36:46.797] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.797] List of 2
[17:36:46.797]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:46.797]  $ ...          :List of 1
[17:36:46.797]   ..$ what:function (x)  
[17:36:46.797]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.797]  - attr(*, "where")=List of 2
[17:36:46.797]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.797]   ..$ ...          :<environment: 0x5569a08933b8> 
[17:36:46.797]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.797]  - attr(*, "resolved")= logi FALSE
[17:36:46.797]  - attr(*, "total_size")= num 12192
[17:36:46.801] Packages to be attached in all futures: [n=0] 
[17:36:46.801] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.801] Number of futures (= number of chunks): 1
[17:36:46.801] Launching 1 futures (chunks) ...
[17:36:46.801] Chunk #1 of 1 ...
[17:36:46.801]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.802]    + additional globals found: [n=0] 
[17:36:46.802]    + additional namespaces needed: [n=0] 
[17:36:46.802]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.802]  - seeds: <none>
[17:36:46.802]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.810] Created future:
[17:36:46.810] MulticoreFuture:
[17:36:46.810] Label: ‘future_lapply-1’
[17:36:46.810] Expression:
[17:36:46.810] {
[17:36:46.810]     do.call(function(...) {
[17:36:46.810]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.810]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.810]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.810]             on.exit(options(oopts), add = TRUE)
[17:36:46.810]         }
[17:36:46.810]         {
[17:36:46.810]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.810]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.810]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.810]             })
[17:36:46.810]         }
[17:36:46.810]     }, args = future.call.arguments)
[17:36:46.810] }
[17:36:46.810] Lazy evaluation: FALSE
[17:36:46.810] Asynchronous evaluation: TRUE
[17:36:46.810] Local evaluation: TRUE
[17:36:46.810] Environment: R_GlobalEnv
[17:36:46.810] Capture standard output: TRUE
[17:36:46.810] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.810] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.810] Packages: <none>
[17:36:46.810] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.810] Resolved: TRUE
[17:36:46.810] Value: <not collected>
[17:36:46.810] Conditions captured: <none>
[17:36:46.810] Early signaling: FALSE
[17:36:46.810] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.810] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.819] Chunk #1 of 1 ... DONE
[17:36:46.819] Launching 1 futures (chunks) ... DONE
[17:36:46.819] Resolving 1 futures (chunks) ...
[17:36:46.821]  - Number of value chunks collected: 1
[17:36:46.821] Resolving 1 futures (chunks) ... DONE
[17:36:46.821] Reducing values from 1 chunks ...
[17:36:46.821]  - Number of values collected after concatenation: 1
[17:36:46.821]  - Number of values expected: 1
[17:36:46.821] Reducing values from 1 chunks ... DONE
[17:36:46.822] future_lapply() ... DONE
[17:36:46.822] future_lapply() ...
[17:36:46.828] Number of chunks: 1
[17:36:46.828] getGlobalsAndPackagesXApply() ...
[17:36:46.828]  - future.globals: TRUE
[17:36:46.831]  - globals found/used: [n=1] ‘FUN’
[17:36:46.831]  - needed namespaces: [n=0] 
[17:36:46.831] Finding globals ... DONE
[17:36:46.832]  - use_args: TRUE
[17:36:46.832]  - Getting '...' globals ...
[17:36:46.832]    - '...' content: [n=1] ‘what’
[17:36:46.832] List of 1
[17:36:46.832]  $ ...:List of 1
[17:36:46.832]   ..$ what:function (...)  
[17:36:46.832]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.832]  - attr(*, "where")=List of 1
[17:36:46.832]   ..$ ...:<environment: 0x55699f2ea298> 
[17:36:46.832]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.832]  - attr(*, "resolved")= logi TRUE
[17:36:46.832]  - attr(*, "total_size")= num NA
[17:36:46.836]  - Getting '...' globals ... DONE
[17:36:46.836] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.836] List of 2
[17:36:46.836]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:46.836]  $ ...          :List of 1
[17:36:46.836]   ..$ what:function (...)  
[17:36:46.836]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.836]  - attr(*, "where")=List of 2
[17:36:46.836]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.836]   ..$ ...          :<environment: 0x55699f2ea298> 
[17:36:46.836]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.836]  - attr(*, "resolved")= logi FALSE
[17:36:46.836]  - attr(*, "total_size")= num 13352
[17:36:46.840] Packages to be attached in all futures: [n=0] 
[17:36:46.840] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.840] Number of futures (= number of chunks): 1
[17:36:46.840] Launching 1 futures (chunks) ...
[17:36:46.840] Chunk #1 of 1 ...
[17:36:46.841]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.841]    + additional globals found: [n=0] 
[17:36:46.841]    + additional namespaces needed: [n=0] 
[17:36:46.841]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.841]  - seeds: <none>
[17:36:46.842]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.850] Created future:
[17:36:46.850] MulticoreFuture:
[17:36:46.850] Label: ‘future_lapply-1’
[17:36:46.850] Expression:
[17:36:46.850] {
[17:36:46.850]     do.call(function(...) {
[17:36:46.850]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.850]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.850]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.850]             on.exit(options(oopts), add = TRUE)
[17:36:46.850]         }
[17:36:46.850]         {
[17:36:46.850]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.850]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.850]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.850]             })
[17:36:46.850]         }
[17:36:46.850]     }, args = future.call.arguments)
[17:36:46.850] }
[17:36:46.850] Lazy evaluation: FALSE
[17:36:46.850] Asynchronous evaluation: TRUE
[17:36:46.850] Local evaluation: TRUE
[17:36:46.850] Environment: R_GlobalEnv
[17:36:46.850] Capture standard output: TRUE
[17:36:46.850] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.850] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.850] Packages: <none>
[17:36:46.850] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.850] Resolved: TRUE
[17:36:46.850] Value: <not collected>
[17:36:46.850] Conditions captured: <none>
[17:36:46.850] Early signaling: FALSE
[17:36:46.850] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.850] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.858] Chunk #1 of 1 ... DONE
[17:36:46.859] Launching 1 futures (chunks) ... DONE
[17:36:46.859] Resolving 1 futures (chunks) ...
[17:36:46.861]  - Number of value chunks collected: 1
[17:36:46.861] Resolving 1 futures (chunks) ... DONE
[17:36:46.861] Reducing values from 1 chunks ...
[17:36:46.861]  - Number of values collected after concatenation: 1
[17:36:46.861]  - Number of values expected: 1
[17:36:46.862] Reducing values from 1 chunks ... DONE
[17:36:46.862] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:36:46.862] future_lapply() ...
[17:36:46.868] Number of chunks: 1
[17:36:46.869] getGlobalsAndPackagesXApply() ...
[17:36:46.869]  - future.globals: TRUE
[17:36:46.871]  - globals found/used: [n=1] ‘FUN’
[17:36:46.872]  - needed namespaces: [n=0] 
[17:36:46.872] Finding globals ... DONE
[17:36:46.872]  - use_args: TRUE
[17:36:46.872]  - Getting '...' globals ...
[17:36:46.872]    - '...' content: [n=1] ‘b’
[17:36:46.873] List of 1
[17:36:46.873]  $ ...:List of 1
[17:36:46.873]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:46.873]   .. ..$ a: int [1:2] 1 2
[17:36:46.873]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.873]  - attr(*, "where")=List of 1
[17:36:46.873]   ..$ ...:<environment: 0x5569a04000d8> 
[17:36:46.873]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.873]  - attr(*, "resolved")= logi TRUE
[17:36:46.873]  - attr(*, "total_size")= num NA
[17:36:46.877]  - Getting '...' globals ... DONE
[17:36:46.877] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.877] List of 2
[17:36:46.877]  $ ...future.FUN:function (a, b)  
[17:36:46.877]  $ ...          :List of 1
[17:36:46.877]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:46.877]   .. ..$ a: int [1:2] 1 2
[17:36:46.877]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.877]  - attr(*, "where")=List of 2
[17:36:46.877]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.877]   ..$ ...          :<environment: 0x5569a04000d8> 
[17:36:46.877]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.877]  - attr(*, "resolved")= logi FALSE
[17:36:46.877]  - attr(*, "total_size")= num 1440
[17:36:46.881] Packages to be attached in all futures: [n=0] 
[17:36:46.881] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.881] Number of futures (= number of chunks): 1
[17:36:46.881] Launching 1 futures (chunks) ...
[17:36:46.882] Chunk #1 of 1 ...
[17:36:46.882]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.882]    + additional globals found: [n=0] 
[17:36:46.882]    + additional namespaces needed: [n=0] 
[17:36:46.882]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.882]  - seeds: <none>
[17:36:46.882]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.895] Created future:
[17:36:46.895] MulticoreFuture:
[17:36:46.895] Label: ‘future_lapply-1’
[17:36:46.895] Expression:
[17:36:46.895] {
[17:36:46.895]     do.call(function(...) {
[17:36:46.895]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.895]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.895]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.895]             on.exit(options(oopts), add = TRUE)
[17:36:46.895]         }
[17:36:46.895]         {
[17:36:46.895]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.895]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.895]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.895]             })
[17:36:46.895]         }
[17:36:46.895]     }, args = future.call.arguments)
[17:36:46.895] }
[17:36:46.895] Lazy evaluation: FALSE
[17:36:46.895] Asynchronous evaluation: TRUE
[17:36:46.895] Local evaluation: TRUE
[17:36:46.895] Environment: R_GlobalEnv
[17:36:46.895] Capture standard output: TRUE
[17:36:46.895] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.895] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.895] Packages: <none>
[17:36:46.895] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.895] Resolved: TRUE
[17:36:46.895] Value: <not collected>
[17:36:46.895] Conditions captured: <none>
[17:36:46.895] Early signaling: FALSE
[17:36:46.895] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.895] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.904] Chunk #1 of 1 ... DONE
[17:36:46.904] Launching 1 futures (chunks) ... DONE
[17:36:46.904] Resolving 1 futures (chunks) ...
[17:36:46.906]  - Number of value chunks collected: 1
[17:36:46.906] Resolving 1 futures (chunks) ... DONE
[17:36:46.906] Reducing values from 1 chunks ...
[17:36:46.906]  - Number of values collected after concatenation: 1
[17:36:46.906]  - Number of values expected: 1
[17:36:46.906] Reducing values from 1 chunks ... DONE
[17:36:46.906] future_lapply() ... DONE
[17:36:46.907] future_lapply() ...
[17:36:46.911] Number of chunks: 1
[17:36:46.911] getGlobalsAndPackagesXApply() ...
[17:36:46.911]  - future.globals: TRUE
[17:36:46.914]  - globals found/used: [n=1] ‘FUN’
[17:36:46.914]  - needed namespaces: [n=0] 
[17:36:46.914] Finding globals ... DONE
[17:36:46.914]  - use_args: TRUE
[17:36:46.914]  - Getting '...' globals ...
[17:36:46.915]    - '...' content: [n=1] ‘b’
[17:36:46.915] List of 1
[17:36:46.915]  $ ...:List of 1
[17:36:46.915]   ..$ b:<environment: 0x55699fb62e98> 
[17:36:46.915]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.915]  - attr(*, "where")=List of 1
[17:36:46.915]   ..$ ...:<environment: 0x55699fb5dc00> 
[17:36:46.915]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.915]  - attr(*, "resolved")= logi TRUE
[17:36:46.915]  - attr(*, "total_size")= num NA
[17:36:46.918]  - Getting '...' globals ... DONE
[17:36:46.919] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:46.919] List of 2
[17:36:46.919]  $ ...future.FUN:function (a, b)  
[17:36:46.919]  $ ...          :List of 1
[17:36:46.919]   ..$ b:<environment: 0x55699fb62e98> 
[17:36:46.919]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.919]  - attr(*, "where")=List of 2
[17:36:46.919]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:46.919]   ..$ ...          :<environment: 0x55699fb5dc00> 
[17:36:46.919]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.919]  - attr(*, "resolved")= logi FALSE
[17:36:46.919]  - attr(*, "total_size")= num 1440
[17:36:46.922] Packages to be attached in all futures: [n=0] 
[17:36:46.922] getGlobalsAndPackagesXApply() ... DONE
[17:36:46.922] Number of futures (= number of chunks): 1
[17:36:46.923] Launching 1 futures (chunks) ...
[17:36:46.923] Chunk #1 of 1 ...
[17:36:46.923]  - Finding globals in 'X' for chunk #1 ...
[17:36:46.923]    + additional globals found: [n=0] 
[17:36:46.923]    + additional namespaces needed: [n=0] 
[17:36:46.923]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:46.923]  - seeds: <none>
[17:36:46.924]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:46.932] Created future:
[17:36:46.932] MulticoreFuture:
[17:36:46.932] Label: ‘future_lapply-1’
[17:36:46.932] Expression:
[17:36:46.932] {
[17:36:46.932]     do.call(function(...) {
[17:36:46.932]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:46.932]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:46.932]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:46.932]             on.exit(options(oopts), add = TRUE)
[17:36:46.932]         }
[17:36:46.932]         {
[17:36:46.932]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:46.932]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:46.932]                 ...future.FUN(...future.X_jj, ...)
[17:36:46.932]             })
[17:36:46.932]         }
[17:36:46.932]     }, args = future.call.arguments)
[17:36:46.932] }
[17:36:46.932] Lazy evaluation: FALSE
[17:36:46.932] Asynchronous evaluation: TRUE
[17:36:46.932] Local evaluation: TRUE
[17:36:46.932] Environment: R_GlobalEnv
[17:36:46.932] Capture standard output: TRUE
[17:36:46.932] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:46.932] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:46.932] Packages: <none>
[17:36:46.932] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:46.932] Resolved: TRUE
[17:36:46.932] Value: <not collected>
[17:36:46.932] Conditions captured: <none>
[17:36:46.932] Early signaling: FALSE
[17:36:46.932] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:46.932] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:46.941] Chunk #1 of 1 ... DONE
[17:36:46.941] Launching 1 futures (chunks) ... DONE
[17:36:46.941] Resolving 1 futures (chunks) ...
[17:36:46.943]  - Number of value chunks collected: 1
[17:36:46.943] Resolving 1 futures (chunks) ... DONE
[17:36:46.943] Reducing values from 1 chunks ...
[17:36:46.943]  - Number of values collected after concatenation: 1
[17:36:46.943]  - Number of values expected: 1
[17:36:46.943] Reducing values from 1 chunks ... DONE
[17:36:46.944] future_lapply() ... DONE
[17:36:46.944] future_lapply() ...
[17:36:46.948] Number of chunks: 1
[17:36:46.949] getGlobalsAndPackagesXApply() ...
[17:36:46.949]  - future.globals: TRUE
[17:36:46.951]  - globals found/used: [n=1] ‘FUN’
[17:36:46.951]  - needed namespaces: [n=0] 
[17:36:46.952] Finding globals ... DONE
[17:36:46.952]  - use_args: TRUE
[17:36:46.952]  - Getting '...' globals ...
[17:36:46.952]    - '...' content: [n=1] ‘b’
[17:36:46.953] List of 1
[17:36:46.953]  $ ...:List of 1
[17:36:46.953]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:46.953]   .. .. ..@ slots     :List of 4
[17:36:46.953]   .. .. .. ..$ .Data  : chr "function"
[17:36:46.953]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. ..$ target : chr "signature"
[17:36:46.953]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. ..$ defined: chr "signature"
[17:36:46.953]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. ..$ generic: chr "character"
[17:36:46.953]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. ..@ contains  :List of 3
[17:36:46.953]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.953]   .. .. ..@ virtual   : logi FALSE
[17:36:46.953]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:46.953]  list()
[17:36:46.953]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.953]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.953]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.953]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.953]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:46.953]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:46.953]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:46.953]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:46.953]   .. .. .. .. ..$ generic: chr(0) 
[17:36:46.953]   .. .. ..@ validity  : NULL
[17:36:46.953]   .. .. ..@ access    : list()
[17:36:46.953]   .. .. ..@ className : chr "MethodDefinition"
[17:36:46.953]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. ..@ subclasses:List of 7
[17:36:46.953]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 1
[17:36:46.953]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.953]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.953]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:46.953]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:46.953]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:46.953]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:46.953]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:46.953]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:46.953]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:46.953]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:46.953]   .. .. .. .. .. ..@ distance  : num 2
[17:36:46.953]   .. .. ..@ versionKey:<externalptr> 
[17:36:46.953]   .. .. ..@ sealed    : logi TRUE
[17:36:46.953]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:46.953]  - attr(*, "where")=List of 1
[17:36:46.953]   ..$ ...:<environment: 0x55699d9a84b8> 
[17:36:46.953]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:46.953]  - attr(*, "resolved")= logi TRUE
[17:36:46.953]  - attr(*, "total_size")= num NA
[17:36:47.006]  - Getting '...' globals ... DONE
[17:36:47.007] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:47.007] List of 2
[17:36:47.007]  $ ...future.FUN:function (a, b)  
[17:36:47.007]  $ ...          :List of 1
[17:36:47.007]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:47.007]   .. .. ..@ slots     :List of 4
[17:36:47.007]   .. .. .. ..$ .Data  : chr "function"
[17:36:47.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. ..$ target : chr "signature"
[17:36:47.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. ..$ defined: chr "signature"
[17:36:47.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. ..$ generic: chr "character"
[17:36:47.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. ..@ contains  :List of 3
[17:36:47.007]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 2
[17:36:47.007]   .. .. ..@ virtual   : logi FALSE
[17:36:47.007]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:47.007]  list()
[17:36:47.007]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:47.007]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:47.007]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:47.007]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:47.007]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:47.007]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:47.007]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:47.007]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:47.007]   .. .. .. .. ..$ generic: chr(0) 
[17:36:47.007]   .. .. ..@ validity  : NULL
[17:36:47.007]   .. .. ..@ access    : list()
[17:36:47.007]   .. .. ..@ className : chr "MethodDefinition"
[17:36:47.007]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. ..@ subclasses:List of 7
[17:36:47.007]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 1
[17:36:47.007]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 2
[17:36:47.007]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 2
[17:36:47.007]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:47.007]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:47.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:47.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:47.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:47.007]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:47.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:47.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:47.007]   .. .. .. .. .. ..@ distance  : num 2
[17:36:47.007]   .. .. ..@ versionKey:<externalptr> 
[17:36:47.007]   .. .. ..@ sealed    : logi TRUE
[17:36:47.007]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.007]  - attr(*, "where")=List of 2
[17:36:47.007]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.007]   ..$ ...          :<environment: 0x55699d9a84b8> 
[17:36:47.007]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.007]  - attr(*, "resolved")= logi FALSE
[17:36:47.007]  - attr(*, "total_size")= num 405168
[17:36:47.055] Packages to be attached in all futures: [n=0] 
[17:36:47.055] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.056] Number of futures (= number of chunks): 1
[17:36:47.056] Launching 1 futures (chunks) ...
[17:36:47.056] Chunk #1 of 1 ...
[17:36:47.056]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.056]    + additional globals found: [n=0] 
[17:36:47.056]    + additional namespaces needed: [n=0] 
[17:36:47.057]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.057]  - seeds: <none>
[17:36:47.057]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.064] Created future:
[17:36:47.065] MulticoreFuture:
[17:36:47.065] Label: ‘future_lapply-1’
[17:36:47.065] Expression:
[17:36:47.065] {
[17:36:47.065]     do.call(function(...) {
[17:36:47.065]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.065]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.065]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.065]             on.exit(options(oopts), add = TRUE)
[17:36:47.065]         }
[17:36:47.065]         {
[17:36:47.065]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.065]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.065]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.065]             })
[17:36:47.065]         }
[17:36:47.065]     }, args = future.call.arguments)
[17:36:47.065] }
[17:36:47.065] Lazy evaluation: FALSE
[17:36:47.065] Asynchronous evaluation: TRUE
[17:36:47.065] Local evaluation: TRUE
[17:36:47.065] Environment: R_GlobalEnv
[17:36:47.065] Capture standard output: TRUE
[17:36:47.065] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.065] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:47.065] Packages: <none>
[17:36:47.065] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.065] Resolved: TRUE
[17:36:47.065] Value: <not collected>
[17:36:47.065] Conditions captured: <none>
[17:36:47.065] Early signaling: FALSE
[17:36:47.065] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.065] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.073] Chunk #1 of 1 ... DONE
[17:36:47.073] Launching 1 futures (chunks) ... DONE
[17:36:47.073] Resolving 1 futures (chunks) ...
[17:36:47.075]  - Number of value chunks collected: 1
[17:36:47.075] Resolving 1 futures (chunks) ... DONE
[17:36:47.075] Reducing values from 1 chunks ...
[17:36:47.075]  - Number of values collected after concatenation: 1
[17:36:47.075]  - Number of values expected: 1
[17:36:47.076] Reducing values from 1 chunks ... DONE
[17:36:47.076] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:36:47.079] future_lapply() ...
[17:36:47.083] Number of chunks: 2
[17:36:47.083] getGlobalsAndPackagesXApply() ...
[17:36:47.083]  - future.globals: TRUE
[17:36:47.085]  - globals found/used: [n=1] ‘FUN’
[17:36:47.085]  - needed namespaces: [n=0] 
[17:36:47.085] Finding globals ... DONE
[17:36:47.086]  - use_args: TRUE
[17:36:47.086]  - Getting '...' globals ...
[17:36:47.086]    - '...' content: [n=0] 
[17:36:47.086] List of 1
[17:36:47.086]  $ ...: list()
[17:36:47.086]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.086]  - attr(*, "where")=List of 1
[17:36:47.086]   ..$ ...:<environment: 0x55699f4a7960> 
[17:36:47.086]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.086]  - attr(*, "resolved")= logi TRUE
[17:36:47.086]  - attr(*, "total_size")= num NA
[17:36:47.089]  - Getting '...' globals ... DONE
[17:36:47.089] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:47.090] List of 2
[17:36:47.090]  $ ...future.FUN:function (f)  
[17:36:47.090]  $ ...          : list()
[17:36:47.090]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.090]  - attr(*, "where")=List of 2
[17:36:47.090]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.090]   ..$ ...          :<environment: 0x55699f4a7960> 
[17:36:47.090]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.090]  - attr(*, "resolved")= logi FALSE
[17:36:47.090]  - attr(*, "total_size")= num 1008
[17:36:47.093] Packages to be attached in all futures: [n=0] 
[17:36:47.093] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.093] Number of futures (= number of chunks): 2
[17:36:47.093] Launching 2 futures (chunks) ...
[17:36:47.093] Chunk #1 of 2 ...
[17:36:47.094]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.095]    + additional globals found: [n=2] ‘a’, ‘b’
[17:36:47.096]    + additional namespaces needed: [n=0] 
[17:36:47.096]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.096]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:47.096]  - seeds: <none>
[17:36:47.096]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:36:47.104] Created future:
[17:36:47.105] MulticoreFuture:
[17:36:47.105] Label: ‘future_lapply-1’
[17:36:47.105] Expression:
[17:36:47.105] {
[17:36:47.105]     do.call(function(...) {
[17:36:47.105]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.105]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.105]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.105]             on.exit(options(oopts), add = TRUE)
[17:36:47.105]         }
[17:36:47.105]         {
[17:36:47.105]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.105]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.105]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.105]             })
[17:36:47.105]         }
[17:36:47.105]     }, args = future.call.arguments)
[17:36:47.105] }
[17:36:47.105] Lazy evaluation: FALSE
[17:36:47.105] Asynchronous evaluation: TRUE
[17:36:47.105] Local evaluation: TRUE
[17:36:47.105] Environment: R_GlobalEnv
[17:36:47.105] Capture standard output: TRUE
[17:36:47.105] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.105] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:36:47.105] Packages: <none>
[17:36:47.105] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.105] Resolved: TRUE
[17:36:47.105] Value: <not collected>
[17:36:47.105] Conditions captured: <none>
[17:36:47.105] Early signaling: FALSE
[17:36:47.105] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.105] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.113] Chunk #1 of 2 ... DONE
[17:36:47.114] Chunk #2 of 2 ...
[17:36:47.114]  - Finding globals in 'X' for chunk #2 ...
[17:36:47.117]    + additional globals found: [n=2] ‘a’, ‘b’
[17:36:47.117]    + additional namespaces needed: [n=1] ‘tools’
[17:36:47.118]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:47.118]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:47.118]  - seeds: <none>
[17:36:47.118]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:36:47.127] Created future:
[17:36:47.128] MulticoreFuture:
[17:36:47.128] Label: ‘future_lapply-2’
[17:36:47.128] Expression:
[17:36:47.128] {
[17:36:47.128]     do.call(function(...) {
[17:36:47.128]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.128]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.128]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.128]             on.exit(options(oopts), add = TRUE)
[17:36:47.128]         }
[17:36:47.128]         {
[17:36:47.128]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.128]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.128]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.128]             })
[17:36:47.128]         }
[17:36:47.128]     }, args = future.call.arguments)
[17:36:47.128] }
[17:36:47.128] Lazy evaluation: FALSE
[17:36:47.128] Asynchronous evaluation: TRUE
[17:36:47.128] Local evaluation: TRUE
[17:36:47.128] Environment: R_GlobalEnv
[17:36:47.128] Capture standard output: TRUE
[17:36:47.128] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.128] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:36:47.128] Packages: 1 packages (‘tools’)
[17:36:47.128] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.128] Resolved: TRUE
[17:36:47.128] Value: <not collected>
[17:36:47.128] Conditions captured: <none>
[17:36:47.128] Early signaling: FALSE
[17:36:47.128] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.128] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.137] Chunk #2 of 2 ... DONE
[17:36:47.137] Launching 2 futures (chunks) ... DONE
[17:36:47.137] Resolving 2 futures (chunks) ...
[17:36:47.140]  - Number of value chunks collected: 2
[17:36:47.141] Resolving 2 futures (chunks) ... DONE
[17:36:47.141] Reducing values from 2 chunks ...
[17:36:47.141]  - Number of values collected after concatenation: 4
[17:36:47.141]  - Number of values expected: 4
[17:36:47.141] Reducing values from 2 chunks ... DONE
[17:36:47.142] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:36:47.145] future_lapply() ...
[17:36:47.150] Number of chunks: 1
[17:36:47.150] getGlobalsAndPackagesXApply() ...
[17:36:47.150]  - future.globals: TRUE
[17:36:47.153]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:36:47.153]  - needed namespaces: [n=0] 
[17:36:47.153] Finding globals ... DONE
[17:36:47.153]  - use_args: TRUE
[17:36:47.154]  - Getting '...' globals ...
[17:36:47.154]    - '...' content: [n=0] 
[17:36:47.154] List of 1
[17:36:47.154]  $ ...: list()
[17:36:47.154]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.154]  - attr(*, "where")=List of 1
[17:36:47.154]   ..$ ...:<environment: 0x5569a07e40e0> 
[17:36:47.154]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.154]  - attr(*, "resolved")= logi TRUE
[17:36:47.154]  - attr(*, "total_size")= num NA
[17:36:47.157]  - Getting '...' globals ... DONE
[17:36:47.157] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:36:47.157] List of 3
[17:36:47.157]  $ ...future.FUN        :function (x)  
[17:36:47.157]  $ future.call.arguments:List of 1
[17:36:47.157]   ..$ a: num 1
[17:36:47.157]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.157]  $ ...                  : list()
[17:36:47.157]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.157]  - attr(*, "where")=List of 3
[17:36:47.157]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:36:47.157]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:36:47.157]   ..$ ...                  :<environment: 0x5569a07e40e0> 
[17:36:47.157]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.157]  - attr(*, "resolved")= logi FALSE
[17:36:47.157]  - attr(*, "total_size")= num 1272
[17:36:47.164] Packages to be attached in all futures: [n=0] 
[17:36:47.164] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.164] Number of futures (= number of chunks): 1
[17:36:47.164] Launching 1 futures (chunks) ...
[17:36:47.165] Chunk #1 of 1 ...
[17:36:47.165]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.165]    + additional globals found: [n=0] 
[17:36:47.165]    + additional namespaces needed: [n=0] 
[17:36:47.165]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.165]  - seeds: <none>
[17:36:47.166]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.174] Created future:
[17:36:47.174] MulticoreFuture:
[17:36:47.174] Label: ‘future_lapply-1’
[17:36:47.174] Expression:
[17:36:47.174] {
[17:36:47.174]     do.call(function(...) {
[17:36:47.174]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.174]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.174]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.174]             on.exit(options(oopts), add = TRUE)
[17:36:47.174]         }
[17:36:47.174]         {
[17:36:47.174]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.174]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.174]                 ...future.FUN(...future.X_jj)
[17:36:47.174]             })
[17:36:47.174]         }
[17:36:47.174]     }, args = future.call.arguments)
[17:36:47.174] }
[17:36:47.174] Lazy evaluation: FALSE
[17:36:47.174] Asynchronous evaluation: TRUE
[17:36:47.174] Local evaluation: TRUE
[17:36:47.174] Environment: 0x5569a07e4460
[17:36:47.174] Capture standard output: TRUE
[17:36:47.174] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.174] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:47.174] Packages: <none>
[17:36:47.174] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.174] Resolved: TRUE
[17:36:47.174] Value: <not collected>
[17:36:47.174] Conditions captured: <none>
[17:36:47.174] Early signaling: FALSE
[17:36:47.174] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.174] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.182] Chunk #1 of 1 ... DONE
[17:36:47.183] Launching 1 futures (chunks) ... DONE
[17:36:47.183] Resolving 1 futures (chunks) ...
[17:36:47.184]  - Number of value chunks collected: 1
[17:36:47.185] Resolving 1 futures (chunks) ... DONE
[17:36:47.185] Reducing values from 1 chunks ...
[17:36:47.185]  - Number of values collected after concatenation: 1
[17:36:47.185]  - Number of values expected: 1
[17:36:47.185] Reducing values from 1 chunks ... DONE
[17:36:47.185] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:36:47.187] future_lapply() ...
[17:36:47.192] Number of chunks: 1
[17:36:47.192] getGlobalsAndPackagesXApply() ...
[17:36:47.192]  - future.globals: TRUE
[17:36:47.195]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:47.196]  - needed namespaces: [n=0] 
[17:36:47.196] Finding globals ... DONE
[17:36:47.196]  - use_args: TRUE
[17:36:47.196]  - Getting '...' globals ...
[17:36:47.196]    - '...' content: [n=0] 
[17:36:47.196] List of 1
[17:36:47.196]  $ ...: list()
[17:36:47.196]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.196]  - attr(*, "where")=List of 1
[17:36:47.196]   ..$ ...:<environment: 0x55699f250798> 
[17:36:47.196]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.196]  - attr(*, "resolved")= logi TRUE
[17:36:47.196]  - attr(*, "total_size")= num NA
[17:36:47.200]  - Getting '...' globals ... DONE
[17:36:47.200] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:47.200] List of 3
[17:36:47.200]  $ ...future.FUN:function (ii)  
[17:36:47.200]  $ a            : num 1
[17:36:47.200]  $ ...          : list()
[17:36:47.200]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.200]  - attr(*, "where")=List of 3
[17:36:47.200]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.200]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:47.200]   ..$ ...          :<environment: 0x55699f250798> 
[17:36:47.200]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.200]  - attr(*, "resolved")= logi FALSE
[17:36:47.200]  - attr(*, "total_size")= num 2984
[17:36:47.204] Packages to be attached in all futures: [n=0] 
[17:36:47.204] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.204] Number of futures (= number of chunks): 1
[17:36:47.204] Launching 1 futures (chunks) ...
[17:36:47.204] Chunk #1 of 1 ...
[17:36:47.205]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.205]    + additional globals found: [n=0] 
[17:36:47.205]    + additional namespaces needed: [n=0] 
[17:36:47.205]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.205]  - seeds: <none>
[17:36:47.205]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.214] Created future:
[17:36:47.214] MulticoreFuture:
[17:36:47.214] Label: ‘future_lapply-1’
[17:36:47.214] Expression:
[17:36:47.214] {
[17:36:47.214]     do.call(function(...) {
[17:36:47.214]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.214]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.214]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.214]             on.exit(options(oopts), add = TRUE)
[17:36:47.214]         }
[17:36:47.214]         {
[17:36:47.214]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.214]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.214]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.214]             })
[17:36:47.214]         }
[17:36:47.214]     }, args = future.call.arguments)
[17:36:47.214] }
[17:36:47.214] Lazy evaluation: FALSE
[17:36:47.214] Asynchronous evaluation: TRUE
[17:36:47.214] Local evaluation: TRUE
[17:36:47.214] Environment: R_GlobalEnv
[17:36:47.214] Capture standard output: TRUE
[17:36:47.214] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.214] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:47.214] Packages: <none>
[17:36:47.214] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.214] Resolved: TRUE
[17:36:47.214] Value: <not collected>
[17:36:47.214] Conditions captured: <none>
[17:36:47.214] Early signaling: FALSE
[17:36:47.214] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.214] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.222] Chunk #1 of 1 ... DONE
[17:36:47.222] Launching 1 futures (chunks) ... DONE
[17:36:47.222] Resolving 1 futures (chunks) ...
[17:36:47.224]  - Number of value chunks collected: 1
[17:36:47.224] Resolving 1 futures (chunks) ... DONE
[17:36:47.224] Reducing values from 1 chunks ...
[17:36:47.225]  - Number of values collected after concatenation: 1
[17:36:47.225]  - Number of values expected: 1
[17:36:47.225] Reducing values from 1 chunks ... DONE
[17:36:47.225] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:36:47.225] future_lapply() ...
[17:36:47.231] Number of chunks: 1
[17:36:47.231] getGlobalsAndPackagesXApply() ...
[17:36:47.231]  - future.globals: TRUE
[17:36:47.234]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:47.234]  - needed namespaces: [n=0] 
[17:36:47.234] Finding globals ... DONE
[17:36:47.234]  - use_args: TRUE
[17:36:47.234]  - Getting '...' globals ...
[17:36:47.235]    - '...' content: [n=0] 
[17:36:47.235] List of 1
[17:36:47.235]  $ ...: list()
[17:36:47.235]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.235]  - attr(*, "where")=List of 1
[17:36:47.235]   ..$ ...:<environment: 0x5569a038efc8> 
[17:36:47.235]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.235]  - attr(*, "resolved")= logi TRUE
[17:36:47.235]  - attr(*, "total_size")= num NA
[17:36:47.238]  - Getting '...' globals ... DONE
[17:36:47.238] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:47.238] List of 3
[17:36:47.238]  $ ...future.FUN:function (ii)  
[17:36:47.238]  $ a            : num 1
[17:36:47.238]  $ ...          : list()
[17:36:47.238]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.238]  - attr(*, "where")=List of 3
[17:36:47.238]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.238]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:47.238]   ..$ ...          :<environment: 0x5569a038efc8> 
[17:36:47.238]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.238]  - attr(*, "resolved")= logi FALSE
[17:36:47.238]  - attr(*, "total_size")= num 2984
[17:36:47.242] Packages to be attached in all futures: [n=0] 
[17:36:47.242] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.242] Number of futures (= number of chunks): 1
[17:36:47.243] Launching 1 futures (chunks) ...
[17:36:47.243] Chunk #1 of 1 ...
[17:36:47.243]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.243]    + additional globals found: [n=0] 
[17:36:47.243]    + additional namespaces needed: [n=0] 
[17:36:47.243]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.243]  - seeds: <none>
[17:36:47.244]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.254] Created future:
[17:36:47.254] MulticoreFuture:
[17:36:47.254] Label: ‘future_lapply-1’
[17:36:47.254] Expression:
[17:36:47.254] {
[17:36:47.254]     do.call(function(...) {
[17:36:47.254]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.254]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.254]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.254]             on.exit(options(oopts), add = TRUE)
[17:36:47.254]         }
[17:36:47.254]         {
[17:36:47.254]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.254]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.254]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.254]             })
[17:36:47.254]         }
[17:36:47.254]     }, args = future.call.arguments)
[17:36:47.254] }
[17:36:47.254] Lazy evaluation: FALSE
[17:36:47.254] Asynchronous evaluation: TRUE
[17:36:47.254] Local evaluation: TRUE
[17:36:47.254] Environment: R_GlobalEnv
[17:36:47.254] Capture standard output: TRUE
[17:36:47.254] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.254] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:47.254] Packages: <none>
[17:36:47.254] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.254] Resolved: TRUE
[17:36:47.254] Value: <not collected>
[17:36:47.254] Conditions captured: <none>
[17:36:47.254] Early signaling: FALSE
[17:36:47.254] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.254] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.263] Chunk #1 of 1 ... DONE
[17:36:47.263] Launching 1 futures (chunks) ... DONE
[17:36:47.263] Resolving 1 futures (chunks) ...
[17:36:47.265]  - Number of value chunks collected: 1
[17:36:47.265] Resolving 1 futures (chunks) ... DONE
[17:36:47.265] Reducing values from 1 chunks ...
[17:36:47.265]  - Number of values collected after concatenation: 1
[17:36:47.265]  - Number of values expected: 1
[17:36:47.265] Reducing values from 1 chunks ... DONE
[17:36:47.266] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:36:47.266] future_lapply() ...
[17:36:47.270] Number of chunks: 1
[17:36:47.270] getGlobalsAndPackagesXApply() ...
[17:36:47.270]  - future.globals: <name-value list> with names ‘42’
[17:36:47.271]  - use_args: TRUE
[17:36:47.271]  - Getting '...' globals ...
[17:36:47.271]    - '...' content: [n=0] 
[17:36:47.271] List of 1
[17:36:47.271]  $ ...: list()
[17:36:47.271]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.271]  - attr(*, "where")=List of 1
[17:36:47.271]   ..$ ...:<environment: 0x55699fb4ea68> 
[17:36:47.271]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.271]  - attr(*, "resolved")= logi TRUE
[17:36:47.271]  - attr(*, "total_size")= num NA
[17:36:47.275]  - Getting '...' globals ... DONE
[17:36:47.275] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:36:47.275] List of 3
[17:36:47.275]  $ a            : num 42
[17:36:47.275]  $ ...future.FUN:function (x)  
[17:36:47.275]  $ ...          : list()
[17:36:47.275]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.275]  - attr(*, "where")=List of 3
[17:36:47.275]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:47.275]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:36:47.275]   ..$ ...          :<environment: 0x55699fb4ea68> 
[17:36:47.275]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.275]  - attr(*, "resolved")= logi FALSE
[17:36:47.275]  - attr(*, "total_size")= num NA
[17:36:47.279] Packages to be attached in all futures: [n=0] 
[17:36:47.279] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.279] Number of futures (= number of chunks): 1
[17:36:47.279] Launching 1 futures (chunks) ...
[17:36:47.279] Chunk #1 of 1 ...
[17:36:47.279]  - seeds: <none>
[17:36:47.280]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.288] Created future:
[17:36:47.288] MulticoreFuture:
[17:36:47.288] Label: ‘future_lapply-1’
[17:36:47.288] Expression:
[17:36:47.288] {
[17:36:47.288]     do.call(function(...) {
[17:36:47.288]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.288]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.288]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.288]             on.exit(options(oopts), add = TRUE)
[17:36:47.288]         }
[17:36:47.288]         {
[17:36:47.288]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.288]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.288]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.288]             })
[17:36:47.288]         }
[17:36:47.288]     }, args = future.call.arguments)
[17:36:47.288] }
[17:36:47.288] Lazy evaluation: FALSE
[17:36:47.288] Asynchronous evaluation: TRUE
[17:36:47.288] Local evaluation: TRUE
[17:36:47.288] Environment: R_GlobalEnv
[17:36:47.288] Capture standard output: TRUE
[17:36:47.288] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.288] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:47.288] Packages: <none>
[17:36:47.288] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.288] Resolved: TRUE
[17:36:47.288] Value: <not collected>
[17:36:47.288] Conditions captured: <none>
[17:36:47.288] Early signaling: FALSE
[17:36:47.288] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.288] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.297] Chunk #1 of 1 ... DONE
[17:36:47.297] Launching 1 futures (chunks) ... DONE
[17:36:47.297] Resolving 1 futures (chunks) ...
[17:36:47.299]  - Number of value chunks collected: 1
[17:36:47.299] Resolving 1 futures (chunks) ... DONE
[17:36:47.299] Reducing values from 1 chunks ...
[17:36:47.300]  - Number of values collected after concatenation: 1
[17:36:47.300]  - Number of values expected: 1
[17:36:47.300] Reducing values from 1 chunks ... DONE
[17:36:47.300] future_lapply() ... DONE
List of 1
 $ : num 42
[17:36:47.670] future_lapply() ...
[17:36:47.675] Number of chunks: 2
[17:36:47.676] getGlobalsAndPackagesXApply() ...
[17:36:47.676]  - future.globals: TRUE
[17:36:47.681]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:36:47.681]  - needed namespaces: [n=0] 
[17:36:47.682] Finding globals ... DONE
[17:36:47.682]  - use_args: TRUE
[17:36:47.682]  - Getting '...' globals ...
[17:36:47.682]    - '...' content: [n=0] 
[17:36:47.682] List of 1
[17:36:47.682]  $ ...: list()
[17:36:47.682]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.682]  - attr(*, "where")=List of 1
[17:36:47.682]   ..$ ...:<environment: 0x55699cf86278> 
[17:36:47.682]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.682]  - attr(*, "resolved")= logi TRUE
[17:36:47.682]  - attr(*, "total_size")= num NA
[17:36:47.685]  - Getting '...' globals ... DONE
[17:36:47.685] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:36:47.686] List of 6
[17:36:47.686]  $ ...future.FUN:function (i)  
[17:36:47.686]  $ caller       :function (a, b, FUN = call_my_add)  
[17:36:47.686]  $ args         :List of 1
[17:36:47.686]   ..$ FUN:function (a, b)  
[17:36:47.686]  $ call_my_add  :function (a, b)  
[17:36:47.686]  $ my_add       :function (a, b)  
[17:36:47.686]  $ ...          : list()
[17:36:47.686]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.686]  - attr(*, "where")=List of 6
[17:36:47.686]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.686]   ..$ caller       :<environment: R_EmptyEnv> 
[17:36:47.686]   ..$ args         :<environment: R_EmptyEnv> 
[17:36:47.686]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:36:47.686]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:36:47.686]   ..$ ...          :<environment: 0x55699cf86278> 
[17:36:47.686]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.686]  - attr(*, "resolved")= logi FALSE
[17:36:47.686]  - attr(*, "total_size")= num 24120
[17:36:47.693] Packages to be attached in all futures: [n=0] 
[17:36:47.693] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.693] Number of futures (= number of chunks): 2
[17:36:47.694] Launching 2 futures (chunks) ...
[17:36:47.694] Chunk #1 of 2 ...
[17:36:47.694]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.694]    + additional globals found: [n=0] 
[17:36:47.694]    + additional namespaces needed: [n=0] 
[17:36:47.694]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.694]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:47.695]  - seeds: <none>
[17:36:47.695]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.755] Created future:
[17:36:47.756] MultisessionFuture:
[17:36:47.756] Label: ‘future_lapply-1’
[17:36:47.756] Expression:
[17:36:47.756] {
[17:36:47.756]     do.call(function(...) {
[17:36:47.756]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.756]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.756]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.756]             on.exit(options(oopts), add = TRUE)
[17:36:47.756]         }
[17:36:47.756]         {
[17:36:47.756]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.756]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.756]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.756]             })
[17:36:47.756]         }
[17:36:47.756]     }, args = future.call.arguments)
[17:36:47.756] }
[17:36:47.756] Lazy evaluation: FALSE
[17:36:47.756] Asynchronous evaluation: TRUE
[17:36:47.756] Local evaluation: TRUE
[17:36:47.756] Environment: 0x55699cf89c80
[17:36:47.756] Capture standard output: TRUE
[17:36:47.756] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.756] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:36:47.756] Packages: <none>
[17:36:47.756] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.756] Resolved: FALSE
[17:36:47.756] Value: <not collected>
[17:36:47.756] Conditions captured: <none>
[17:36:47.756] Early signaling: FALSE
[17:36:47.756] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.756] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.768] Chunk #1 of 2 ... DONE
[17:36:47.768] Chunk #2 of 2 ...
[17:36:47.768]  - Finding globals in 'X' for chunk #2 ...
[17:36:47.769]    + additional globals found: [n=0] 
[17:36:47.769]    + additional namespaces needed: [n=0] 
[17:36:47.769]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:47.769]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:47.769]  - seeds: <none>
[17:36:47.769]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.838] Created future:
[17:36:47.839] MultisessionFuture:
[17:36:47.839] Label: ‘future_lapply-2’
[17:36:47.839] Expression:
[17:36:47.839] {
[17:36:47.839]     do.call(function(...) {
[17:36:47.839]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.839]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.839]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.839]             on.exit(options(oopts), add = TRUE)
[17:36:47.839]         }
[17:36:47.839]         {
[17:36:47.839]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.839]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.839]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.839]             })
[17:36:47.839]         }
[17:36:47.839]     }, args = future.call.arguments)
[17:36:47.839] }
[17:36:47.839] Lazy evaluation: FALSE
[17:36:47.839] Asynchronous evaluation: TRUE
[17:36:47.839] Local evaluation: TRUE
[17:36:47.839] Environment: 0x55699cf89c80
[17:36:47.839] Capture standard output: TRUE
[17:36:47.839] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.839] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:36:47.839] Packages: <none>
[17:36:47.839] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.839] Resolved: FALSE
[17:36:47.839] Value: <not collected>
[17:36:47.839] Conditions captured: <none>
[17:36:47.839] Early signaling: FALSE
[17:36:47.839] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.839] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.851] Chunk #2 of 2 ... DONE
[17:36:47.851] Launching 2 futures (chunks) ... DONE
[17:36:47.851] Resolving 2 futures (chunks) ...
[17:36:47.920]  - Number of value chunks collected: 2
[17:36:47.920] Resolving 2 futures (chunks) ... DONE
[17:36:47.920] Reducing values from 2 chunks ...
[17:36:47.921]  - Number of values collected after concatenation: 3
[17:36:47.921]  - Number of values expected: 3
[17:36:47.921] Reducing values from 2 chunks ... DONE
[17:36:47.921] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:36:47.921] future_lapply() ...
[17:36:47.926] Number of chunks: 1
[17:36:47.926] getGlobalsAndPackagesXApply() ...
[17:36:47.926]  - future.globals: TRUE
[17:36:47.929]  - globals found/used: [n=1] ‘FUN’
[17:36:47.929]  - needed namespaces: [n=0] 
[17:36:47.929] Finding globals ... DONE
[17:36:47.929]  - use_args: TRUE
[17:36:47.929]  - Getting '...' globals ...
[17:36:47.930]    - '...' content: [n=1] ‘what’
[17:36:47.930] List of 1
[17:36:47.930]  $ ...:List of 1
[17:36:47.930]   ..$ what:function (x)  
[17:36:47.930]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.930]  - attr(*, "where")=List of 1
[17:36:47.930]   ..$ ...:<environment: 0x55699ea62710> 
[17:36:47.930]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.930]  - attr(*, "resolved")= logi TRUE
[17:36:47.930]  - attr(*, "total_size")= num NA
[17:36:47.933]  - Getting '...' globals ... DONE
[17:36:47.933] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:47.933] List of 2
[17:36:47.933]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:47.933]  $ ...          :List of 1
[17:36:47.933]   ..$ what:function (x)  
[17:36:47.933]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:47.933]  - attr(*, "where")=List of 2
[17:36:47.933]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:47.933]   ..$ ...          :<environment: 0x55699ea62710> 
[17:36:47.933]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:47.933]  - attr(*, "resolved")= logi FALSE
[17:36:47.933]  - attr(*, "total_size")= num 12192
[17:36:47.936] Packages to be attached in all futures: [n=0] 
[17:36:47.936] getGlobalsAndPackagesXApply() ... DONE
[17:36:47.936] Number of futures (= number of chunks): 1
[17:36:47.936] Launching 1 futures (chunks) ...
[17:36:47.936] Chunk #1 of 1 ...
[17:36:47.937]  - Finding globals in 'X' for chunk #1 ...
[17:36:47.937]    + additional globals found: [n=0] 
[17:36:47.937]    + additional namespaces needed: [n=0] 
[17:36:47.937]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:47.937]  - seeds: <none>
[17:36:47.937]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:47.959] Created future:
[17:36:47.959] MultisessionFuture:
[17:36:47.959] Label: ‘future_lapply-1’
[17:36:47.959] Expression:
[17:36:47.959] {
[17:36:47.959]     do.call(function(...) {
[17:36:47.959]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:47.959]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:47.959]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:47.959]             on.exit(options(oopts), add = TRUE)
[17:36:47.959]         }
[17:36:47.959]         {
[17:36:47.959]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:47.959]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:47.959]                 ...future.FUN(...future.X_jj, ...)
[17:36:47.959]             })
[17:36:47.959]         }
[17:36:47.959]     }, args = future.call.arguments)
[17:36:47.959] }
[17:36:47.959] Lazy evaluation: FALSE
[17:36:47.959] Asynchronous evaluation: TRUE
[17:36:47.959] Local evaluation: TRUE
[17:36:47.959] Environment: R_GlobalEnv
[17:36:47.959] Capture standard output: TRUE
[17:36:47.959] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:47.959] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:47.959] Packages: <none>
[17:36:47.959] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:47.959] Resolved: FALSE
[17:36:47.959] Value: <not collected>
[17:36:47.959] Conditions captured: <none>
[17:36:47.959] Early signaling: FALSE
[17:36:47.959] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:47.959] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:47.970] Chunk #1 of 1 ... DONE
[17:36:47.970] Launching 1 futures (chunks) ... DONE
[17:36:47.971] Resolving 1 futures (chunks) ...
[17:36:48.013]  - Number of value chunks collected: 1
[17:36:48.013] Resolving 1 futures (chunks) ... DONE
[17:36:48.013] Reducing values from 1 chunks ...
[17:36:48.013]  - Number of values collected after concatenation: 1
[17:36:48.013]  - Number of values expected: 1
[17:36:48.013] Reducing values from 1 chunks ... DONE
[17:36:48.014] future_lapply() ... DONE
[17:36:48.014] future_lapply() ...
[17:36:48.018] Number of chunks: 1
[17:36:48.019] getGlobalsAndPackagesXApply() ...
[17:36:48.019]  - future.globals: TRUE
[17:36:48.033]  - globals found/used: [n=1] ‘FUN’
[17:36:48.033]  - needed namespaces: [n=0] 
[17:36:48.033] Finding globals ... DONE
[17:36:48.033]  - use_args: TRUE
[17:36:48.033]  - Getting '...' globals ...
[17:36:48.034]    - '...' content: [n=1] ‘what’
[17:36:48.034] List of 1
[17:36:48.034]  $ ...:List of 1
[17:36:48.034]   ..$ what:function (...)  
[17:36:48.034]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.034]  - attr(*, "where")=List of 1
[17:36:48.034]   ..$ ...:<environment: 0x5569a0a305f0> 
[17:36:48.034]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.034]  - attr(*, "resolved")= logi TRUE
[17:36:48.034]  - attr(*, "total_size")= num NA
[17:36:48.037]  - Getting '...' globals ... DONE
[17:36:48.037] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.037] List of 2
[17:36:48.037]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:36:48.037]  $ ...          :List of 1
[17:36:48.037]   ..$ what:function (...)  
[17:36:48.037]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.037]  - attr(*, "where")=List of 2
[17:36:48.037]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.037]   ..$ ...          :<environment: 0x5569a0a305f0> 
[17:36:48.037]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.037]  - attr(*, "resolved")= logi FALSE
[17:36:48.037]  - attr(*, "total_size")= num 13352
[17:36:48.040] Packages to be attached in all futures: [n=0] 
[17:36:48.040] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.040] Number of futures (= number of chunks): 1
[17:36:48.040] Launching 1 futures (chunks) ...
[17:36:48.040] Chunk #1 of 1 ...
[17:36:48.040]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.041]    + additional globals found: [n=0] 
[17:36:48.041]    + additional namespaces needed: [n=0] 
[17:36:48.041]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.041]  - seeds: <none>
[17:36:48.041]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.059] Created future:
[17:36:48.059] MultisessionFuture:
[17:36:48.059] Label: ‘future_lapply-1’
[17:36:48.059] Expression:
[17:36:48.059] {
[17:36:48.059]     do.call(function(...) {
[17:36:48.059]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.059]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.059]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.059]             on.exit(options(oopts), add = TRUE)
[17:36:48.059]         }
[17:36:48.059]         {
[17:36:48.059]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.059]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.059]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.059]             })
[17:36:48.059]         }
[17:36:48.059]     }, args = future.call.arguments)
[17:36:48.059] }
[17:36:48.059] Lazy evaluation: FALSE
[17:36:48.059] Asynchronous evaluation: TRUE
[17:36:48.059] Local evaluation: TRUE
[17:36:48.059] Environment: R_GlobalEnv
[17:36:48.059] Capture standard output: TRUE
[17:36:48.059] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.059] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.059] Packages: <none>
[17:36:48.059] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.059] Resolved: FALSE
[17:36:48.059] Value: <not collected>
[17:36:48.059] Conditions captured: <none>
[17:36:48.059] Early signaling: FALSE
[17:36:48.059] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.059] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.071] Chunk #1 of 1 ... DONE
[17:36:48.071] Launching 1 futures (chunks) ... DONE
[17:36:48.071] Resolving 1 futures (chunks) ...
[17:36:48.102]  - Number of value chunks collected: 1
[17:36:48.103] Resolving 1 futures (chunks) ... DONE
[17:36:48.103] Reducing values from 1 chunks ...
[17:36:48.103]  - Number of values collected after concatenation: 1
[17:36:48.103]  - Number of values expected: 1
[17:36:48.103] Reducing values from 1 chunks ... DONE
[17:36:48.103] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:36:48.103] future_lapply() ...
[17:36:48.107] Number of chunks: 1
[17:36:48.107] getGlobalsAndPackagesXApply() ...
[17:36:48.108]  - future.globals: TRUE
[17:36:48.109]  - globals found/used: [n=1] ‘FUN’
[17:36:48.109]  - needed namespaces: [n=0] 
[17:36:48.110] Finding globals ... DONE
[17:36:48.110]  - use_args: TRUE
[17:36:48.110]  - Getting '...' globals ...
[17:36:48.110]    - '...' content: [n=1] ‘b’
[17:36:48.110] List of 1
[17:36:48.110]  $ ...:List of 1
[17:36:48.110]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:48.110]   .. ..$ a: int [1:2] 1 2
[17:36:48.110]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.110]  - attr(*, "where")=List of 1
[17:36:48.110]   ..$ ...:<environment: 0x55699d2787a0> 
[17:36:48.110]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.110]  - attr(*, "resolved")= logi TRUE
[17:36:48.110]  - attr(*, "total_size")= num NA
[17:36:48.113]  - Getting '...' globals ... DONE
[17:36:48.114] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.114] List of 2
[17:36:48.114]  $ ...future.FUN:function (a, b)  
[17:36:48.114]  $ ...          :List of 1
[17:36:48.114]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:36:48.114]   .. ..$ a: int [1:2] 1 2
[17:36:48.114]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.114]  - attr(*, "where")=List of 2
[17:36:48.114]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.114]   ..$ ...          :<environment: 0x55699d2787a0> 
[17:36:48.114]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.114]  - attr(*, "resolved")= logi FALSE
[17:36:48.114]  - attr(*, "total_size")= num 1440
[17:36:48.117] Packages to be attached in all futures: [n=0] 
[17:36:48.117] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.117] Number of futures (= number of chunks): 1
[17:36:48.118] Launching 1 futures (chunks) ...
[17:36:48.118] Chunk #1 of 1 ...
[17:36:48.118]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.118]    + additional globals found: [n=0] 
[17:36:48.118]    + additional namespaces needed: [n=0] 
[17:36:48.118]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.118]  - seeds: <none>
[17:36:48.118]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.135] Created future:
[17:36:48.136] MultisessionFuture:
[17:36:48.136] Label: ‘future_lapply-1’
[17:36:48.136] Expression:
[17:36:48.136] {
[17:36:48.136]     do.call(function(...) {
[17:36:48.136]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.136]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.136]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.136]             on.exit(options(oopts), add = TRUE)
[17:36:48.136]         }
[17:36:48.136]         {
[17:36:48.136]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.136]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.136]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.136]             })
[17:36:48.136]         }
[17:36:48.136]     }, args = future.call.arguments)
[17:36:48.136] }
[17:36:48.136] Lazy evaluation: FALSE
[17:36:48.136] Asynchronous evaluation: TRUE
[17:36:48.136] Local evaluation: TRUE
[17:36:48.136] Environment: R_GlobalEnv
[17:36:48.136] Capture standard output: TRUE
[17:36:48.136] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.136] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.136] Packages: <none>
[17:36:48.136] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.136] Resolved: FALSE
[17:36:48.136] Value: <not collected>
[17:36:48.136] Conditions captured: <none>
[17:36:48.136] Early signaling: FALSE
[17:36:48.136] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.136] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.147] Chunk #1 of 1 ... DONE
[17:36:48.147] Launching 1 futures (chunks) ... DONE
[17:36:48.148] Resolving 1 futures (chunks) ...
[17:36:48.179]  - Number of value chunks collected: 1
[17:36:48.179] Resolving 1 futures (chunks) ... DONE
[17:36:48.179] Reducing values from 1 chunks ...
[17:36:48.179]  - Number of values collected after concatenation: 1
[17:36:48.179]  - Number of values expected: 1
[17:36:48.179] Reducing values from 1 chunks ... DONE
[17:36:48.179] future_lapply() ... DONE
[17:36:48.179] future_lapply() ...
[17:36:48.183] Number of chunks: 1
[17:36:48.184] getGlobalsAndPackagesXApply() ...
[17:36:48.184]  - future.globals: TRUE
[17:36:48.185]  - globals found/used: [n=1] ‘FUN’
[17:36:48.186]  - needed namespaces: [n=0] 
[17:36:48.186] Finding globals ... DONE
[17:36:48.186]  - use_args: TRUE
[17:36:48.186]  - Getting '...' globals ...
[17:36:48.186]    - '...' content: [n=1] ‘b’
[17:36:48.186] List of 1
[17:36:48.186]  $ ...:List of 1
[17:36:48.186]   ..$ b:<environment: 0x55699fc20a18> 
[17:36:48.186]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.186]  - attr(*, "where")=List of 1
[17:36:48.186]   ..$ ...:<environment: 0x55699fc23d90> 
[17:36:48.186]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.186]  - attr(*, "resolved")= logi TRUE
[17:36:48.186]  - attr(*, "total_size")= num NA
[17:36:48.189]  - Getting '...' globals ... DONE
[17:36:48.189] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.190] List of 2
[17:36:48.190]  $ ...future.FUN:function (a, b)  
[17:36:48.190]  $ ...          :List of 1
[17:36:48.190]   ..$ b:<environment: 0x55699fc20a18> 
[17:36:48.190]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.190]  - attr(*, "where")=List of 2
[17:36:48.190]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.190]   ..$ ...          :<environment: 0x55699fc23d90> 
[17:36:48.190]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.190]  - attr(*, "resolved")= logi FALSE
[17:36:48.190]  - attr(*, "total_size")= num 1440
[17:36:48.195] Packages to be attached in all futures: [n=0] 
[17:36:48.195] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.195] Number of futures (= number of chunks): 1
[17:36:48.195] Launching 1 futures (chunks) ...
[17:36:48.195] Chunk #1 of 1 ...
[17:36:48.195]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.196]    + additional globals found: [n=0] 
[17:36:48.196]    + additional namespaces needed: [n=0] 
[17:36:48.196]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.196]  - seeds: <none>
[17:36:48.196]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.213] Created future:
[17:36:48.213] MultisessionFuture:
[17:36:48.213] Label: ‘future_lapply-1’
[17:36:48.213] Expression:
[17:36:48.213] {
[17:36:48.213]     do.call(function(...) {
[17:36:48.213]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.213]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.213]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.213]             on.exit(options(oopts), add = TRUE)
[17:36:48.213]         }
[17:36:48.213]         {
[17:36:48.213]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.213]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.213]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.213]             })
[17:36:48.213]         }
[17:36:48.213]     }, args = future.call.arguments)
[17:36:48.213] }
[17:36:48.213] Lazy evaluation: FALSE
[17:36:48.213] Asynchronous evaluation: TRUE
[17:36:48.213] Local evaluation: TRUE
[17:36:48.213] Environment: R_GlobalEnv
[17:36:48.213] Capture standard output: TRUE
[17:36:48.213] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.213] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.213] Packages: <none>
[17:36:48.213] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.213] Resolved: FALSE
[17:36:48.213] Value: <not collected>
[17:36:48.213] Conditions captured: <none>
[17:36:48.213] Early signaling: FALSE
[17:36:48.213] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.213] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.225] Chunk #1 of 1 ... DONE
[17:36:48.225] Launching 1 futures (chunks) ... DONE
[17:36:48.225] Resolving 1 futures (chunks) ...
[17:36:48.267]  - Number of value chunks collected: 1
[17:36:48.267] Resolving 1 futures (chunks) ... DONE
[17:36:48.268] Reducing values from 1 chunks ...
[17:36:48.268]  - Number of values collected after concatenation: 1
[17:36:48.268]  - Number of values expected: 1
[17:36:48.268] Reducing values from 1 chunks ... DONE
[17:36:48.268] future_lapply() ... DONE
[17:36:48.268] future_lapply() ...
[17:36:48.272] Number of chunks: 1
[17:36:48.272] getGlobalsAndPackagesXApply() ...
[17:36:48.272]  - future.globals: TRUE
[17:36:48.274]  - globals found/used: [n=1] ‘FUN’
[17:36:48.274]  - needed namespaces: [n=0] 
[17:36:48.275] Finding globals ... DONE
[17:36:48.275]  - use_args: TRUE
[17:36:48.275]  - Getting '...' globals ...
[17:36:48.275]    - '...' content: [n=1] ‘b’
[17:36:48.275] List of 1
[17:36:48.275]  $ ...:List of 1
[17:36:48.275]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:48.275]   .. .. ..@ slots     :List of 4
[17:36:48.275]   .. .. .. ..$ .Data  : chr "function"
[17:36:48.275]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. ..$ target : chr "signature"
[17:36:48.275]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. ..$ defined: chr "signature"
[17:36:48.275]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. ..$ generic: chr "character"
[17:36:48.275]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. ..@ contains  :List of 3
[17:36:48.275]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.275]   .. .. ..@ virtual   : logi FALSE
[17:36:48.275]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:48.275]  list()
[17:36:48.275]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:48.275]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:48.275]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:48.275]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:48.275]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:48.275]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:48.275]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:48.275]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:48.275]   .. .. .. .. ..$ generic: chr(0) 
[17:36:48.275]   .. .. ..@ validity  : NULL
[17:36:48.275]   .. .. ..@ access    : list()
[17:36:48.275]   .. .. ..@ className : chr "MethodDefinition"
[17:36:48.275]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. ..@ subclasses:List of 7
[17:36:48.275]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.275]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.275]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.275]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.275]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.275]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.275]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.275]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.275]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:48.275]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.275]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.275]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.275]   .. .. ..@ versionKey:<externalptr> 
[17:36:48.275]   .. .. ..@ sealed    : logi TRUE
[17:36:48.275]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.275]  - attr(*, "where")=List of 1
[17:36:48.275]   ..$ ...:<environment: 0x55699ef8db58> 
[17:36:48.275]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.275]  - attr(*, "resolved")= logi TRUE
[17:36:48.275]  - attr(*, "total_size")= num NA
[17:36:48.337]  - Getting '...' globals ... DONE
[17:36:48.338] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.338] List of 2
[17:36:48.338]  $ ...future.FUN:function (a, b)  
[17:36:48.338]  $ ...          :List of 1
[17:36:48.338]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:36:48.338]   .. .. ..@ slots     :List of 4
[17:36:48.338]   .. .. .. ..$ .Data  : chr "function"
[17:36:48.338]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. ..$ target : chr "signature"
[17:36:48.338]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. ..$ defined: chr "signature"
[17:36:48.338]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. ..$ generic: chr "character"
[17:36:48.338]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. ..@ contains  :List of 3
[17:36:48.338]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "function"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr "function"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.338]   .. .. ..@ virtual   : logi FALSE
[17:36:48.338]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:36:48.338]  list()
[17:36:48.338]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:36:48.338]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:48.338]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:48.338]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:48.338]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:36:48.338]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:36:48.338]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:36:48.338]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:36:48.338]   .. .. .. .. ..$ generic: chr(0) 
[17:36:48.338]   .. .. ..@ validity  : NULL
[17:36:48.338]   .. .. ..@ access    : list()
[17:36:48.338]   .. .. ..@ className : chr "MethodDefinition"
[17:36:48.338]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. ..@ subclasses:List of 7
[17:36:48.338]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr(0) 
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 1
[17:36:48.338]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.338]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.338]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:36:48.338]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ package   : chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:36:48.338]   .. .. .. .. .. ..@ test      :function (object)  
[17:36:48.338]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:36:48.338]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:36:48.338]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:36:48.338]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:36:48.338]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:36:48.338]   .. .. .. .. .. ..@ distance  : num 2
[17:36:48.338]   .. .. ..@ versionKey:<externalptr> 
[17:36:48.338]   .. .. ..@ sealed    : logi TRUE
[17:36:48.338]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.338]  - attr(*, "where")=List of 2
[17:36:48.338]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.338]   ..$ ...          :<environment: 0x55699ef8db58> 
[17:36:48.338]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.338]  - attr(*, "resolved")= logi FALSE
[17:36:48.338]  - attr(*, "total_size")= num 405168
[17:36:48.385] Packages to be attached in all futures: [n=0] 
[17:36:48.385] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.385] Number of futures (= number of chunks): 1
[17:36:48.385] Launching 1 futures (chunks) ...
[17:36:48.385] Chunk #1 of 1 ...
[17:36:48.385]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.386]    + additional globals found: [n=0] 
[17:36:48.386]    + additional namespaces needed: [n=0] 
[17:36:48.386]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.386]  - seeds: <none>
[17:36:48.386]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.446] Created future:
[17:36:48.446] MultisessionFuture:
[17:36:48.446] Label: ‘future_lapply-1’
[17:36:48.446] Expression:
[17:36:48.446] {
[17:36:48.446]     do.call(function(...) {
[17:36:48.446]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.446]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.446]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.446]             on.exit(options(oopts), add = TRUE)
[17:36:48.446]         }
[17:36:48.446]         {
[17:36:48.446]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.446]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.446]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.446]             })
[17:36:48.446]         }
[17:36:48.446]     }, args = future.call.arguments)
[17:36:48.446] }
[17:36:48.446] Lazy evaluation: FALSE
[17:36:48.446] Asynchronous evaluation: TRUE
[17:36:48.446] Local evaluation: TRUE
[17:36:48.446] Environment: R_GlobalEnv
[17:36:48.446] Capture standard output: TRUE
[17:36:48.446] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.446] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.446] Packages: <none>
[17:36:48.446] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.446] Resolved: FALSE
[17:36:48.446] Value: <not collected>
[17:36:48.446] Conditions captured: <none>
[17:36:48.446] Early signaling: FALSE
[17:36:48.446] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.446] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.458] Chunk #1 of 1 ... DONE
[17:36:48.458] Launching 1 futures (chunks) ... DONE
[17:36:48.458] Resolving 1 futures (chunks) ...
[17:36:48.501]  - Number of value chunks collected: 1
[17:36:48.501] Resolving 1 futures (chunks) ... DONE
[17:36:48.501] Reducing values from 1 chunks ...
[17:36:48.501]  - Number of values collected after concatenation: 1
[17:36:48.501]  - Number of values expected: 1
[17:36:48.501] Reducing values from 1 chunks ... DONE
[17:36:48.501] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:36:48.503] future_lapply() ...
[17:36:48.510] Number of chunks: 2
[17:36:48.510] getGlobalsAndPackagesXApply() ...
[17:36:48.510]  - future.globals: TRUE
[17:36:48.512]  - globals found/used: [n=1] ‘FUN’
[17:36:48.512]  - needed namespaces: [n=0] 
[17:36:48.512] Finding globals ... DONE
[17:36:48.512]  - use_args: TRUE
[17:36:48.512]  - Getting '...' globals ...
[17:36:48.512]    - '...' content: [n=0] 
[17:36:48.513] List of 1
[17:36:48.513]  $ ...: list()
[17:36:48.513]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.513]  - attr(*, "where")=List of 1
[17:36:48.513]   ..$ ...:<environment: 0x5569a08e80e8> 
[17:36:48.513]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.513]  - attr(*, "resolved")= logi TRUE
[17:36:48.513]  - attr(*, "total_size")= num NA
[17:36:48.515]  - Getting '...' globals ... DONE
[17:36:48.515] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.515] List of 2
[17:36:48.515]  $ ...future.FUN:function (f)  
[17:36:48.515]  $ ...          : list()
[17:36:48.515]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.515]  - attr(*, "where")=List of 2
[17:36:48.515]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.515]   ..$ ...          :<environment: 0x5569a08e80e8> 
[17:36:48.515]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.515]  - attr(*, "resolved")= logi FALSE
[17:36:48.515]  - attr(*, "total_size")= num 1008
[17:36:48.518] Packages to be attached in all futures: [n=0] 
[17:36:48.518] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.518] Number of futures (= number of chunks): 2
[17:36:48.518] Launching 2 futures (chunks) ...
[17:36:48.518] Chunk #1 of 2 ...
[17:36:48.518]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.520]    + additional globals found: [n=2] ‘a’, ‘b’
[17:36:48.520]    + additional namespaces needed: [n=0] 
[17:36:48.520]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.520]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:48.521]  - seeds: <none>
[17:36:48.521]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:36:48.538] Created future:
[17:36:48.538] MultisessionFuture:
[17:36:48.538] Label: ‘future_lapply-1’
[17:36:48.538] Expression:
[17:36:48.538] {
[17:36:48.538]     do.call(function(...) {
[17:36:48.538]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.538]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.538]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.538]             on.exit(options(oopts), add = TRUE)
[17:36:48.538]         }
[17:36:48.538]         {
[17:36:48.538]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.538]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.538]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.538]             })
[17:36:48.538]         }
[17:36:48.538]     }, args = future.call.arguments)
[17:36:48.538] }
[17:36:48.538] Lazy evaluation: FALSE
[17:36:48.538] Asynchronous evaluation: TRUE
[17:36:48.538] Local evaluation: TRUE
[17:36:48.538] Environment: R_GlobalEnv
[17:36:48.538] Capture standard output: TRUE
[17:36:48.538] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.538] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:36:48.538] Packages: <none>
[17:36:48.538] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.538] Resolved: FALSE
[17:36:48.538] Value: <not collected>
[17:36:48.538] Conditions captured: <none>
[17:36:48.538] Early signaling: FALSE
[17:36:48.538] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.538] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.550] Chunk #1 of 2 ... DONE
[17:36:48.550] Chunk #2 of 2 ...
[17:36:48.550]  - Finding globals in 'X' for chunk #2 ...
[17:36:48.552]    + additional globals found: [n=2] ‘a’, ‘b’
[17:36:48.552]    + additional namespaces needed: [n=1] ‘tools’
[17:36:48.552]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:48.552]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:48.552]  - seeds: <none>
[17:36:48.552]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:36:48.571] Created future:
[17:36:48.571] MultisessionFuture:
[17:36:48.571] Label: ‘future_lapply-2’
[17:36:48.571] Expression:
[17:36:48.571] {
[17:36:48.571]     do.call(function(...) {
[17:36:48.571]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.571]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.571]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.571]             on.exit(options(oopts), add = TRUE)
[17:36:48.571]         }
[17:36:48.571]         {
[17:36:48.571]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.571]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.571]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.571]             })
[17:36:48.571]         }
[17:36:48.571]     }, args = future.call.arguments)
[17:36:48.571] }
[17:36:48.571] Lazy evaluation: FALSE
[17:36:48.571] Asynchronous evaluation: TRUE
[17:36:48.571] Local evaluation: TRUE
[17:36:48.571] Environment: R_GlobalEnv
[17:36:48.571] Capture standard output: TRUE
[17:36:48.571] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.571] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:36:48.571] Packages: 1 packages (‘tools’)
[17:36:48.571] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.571] Resolved: FALSE
[17:36:48.571] Value: <not collected>
[17:36:48.571] Conditions captured: <none>
[17:36:48.571] Early signaling: FALSE
[17:36:48.571] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.571] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.582] Chunk #2 of 2 ... DONE
[17:36:48.583] Launching 2 futures (chunks) ... DONE
[17:36:48.583] Resolving 2 futures (chunks) ...
[17:36:48.626]  - Number of value chunks collected: 2
[17:36:48.626] Resolving 2 futures (chunks) ... DONE
[17:36:48.626] Reducing values from 2 chunks ...
[17:36:48.626]  - Number of values collected after concatenation: 4
[17:36:48.626]  - Number of values expected: 4
[17:36:48.626] Reducing values from 2 chunks ... DONE
[17:36:48.626] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:36:48.629] future_lapply() ...
[17:36:48.633] Number of chunks: 1
[17:36:48.634] getGlobalsAndPackagesXApply() ...
[17:36:48.634]  - future.globals: TRUE
[17:36:48.636]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:36:48.636]  - needed namespaces: [n=0] 
[17:36:48.636] Finding globals ... DONE
[17:36:48.636]  - use_args: TRUE
[17:36:48.636]  - Getting '...' globals ...
[17:36:48.637]    - '...' content: [n=0] 
[17:36:48.637] List of 1
[17:36:48.637]  $ ...: list()
[17:36:48.637]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.637]  - attr(*, "where")=List of 1
[17:36:48.637]   ..$ ...:<environment: 0x5569a00702f8> 
[17:36:48.637]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.637]  - attr(*, "resolved")= logi TRUE
[17:36:48.637]  - attr(*, "total_size")= num NA
[17:36:48.639]  - Getting '...' globals ... DONE
[17:36:48.639] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:36:48.639] List of 3
[17:36:48.639]  $ ...future.FUN        :function (x)  
[17:36:48.639]  $ future.call.arguments:List of 1
[17:36:48.639]   ..$ a: num 1
[17:36:48.639]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.639]  $ ...                  : list()
[17:36:48.639]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.639]  - attr(*, "where")=List of 3
[17:36:48.639]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:36:48.639]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:36:48.639]   ..$ ...                  :<environment: 0x5569a00702f8> 
[17:36:48.639]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.639]  - attr(*, "resolved")= logi FALSE
[17:36:48.639]  - attr(*, "total_size")= num 1272
[17:36:48.643] Packages to be attached in all futures: [n=0] 
[17:36:48.643] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.643] Number of futures (= number of chunks): 1
[17:36:48.643] Launching 1 futures (chunks) ...
[17:36:48.643] Chunk #1 of 1 ...
[17:36:48.644]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.644]    + additional globals found: [n=0] 
[17:36:48.644]    + additional namespaces needed: [n=0] 
[17:36:48.644]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.644]  - seeds: <none>
[17:36:48.644]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.664] Created future:
[17:36:48.664] MultisessionFuture:
[17:36:48.664] Label: ‘future_lapply-1’
[17:36:48.664] Expression:
[17:36:48.664] {
[17:36:48.664]     do.call(function(...) {
[17:36:48.664]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.664]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.664]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.664]             on.exit(options(oopts), add = TRUE)
[17:36:48.664]         }
[17:36:48.664]         {
[17:36:48.664]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.664]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.664]                 ...future.FUN(...future.X_jj)
[17:36:48.664]             })
[17:36:48.664]         }
[17:36:48.664]     }, args = future.call.arguments)
[17:36:48.664] }
[17:36:48.664] Lazy evaluation: FALSE
[17:36:48.664] Asynchronous evaluation: TRUE
[17:36:48.664] Local evaluation: TRUE
[17:36:48.664] Environment: 0x5569a0070678
[17:36:48.664] Capture standard output: TRUE
[17:36:48.664] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.664] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.664] Packages: <none>
[17:36:48.664] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.664] Resolved: FALSE
[17:36:48.664] Value: <not collected>
[17:36:48.664] Conditions captured: <none>
[17:36:48.664] Early signaling: FALSE
[17:36:48.664] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.664] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.676] Chunk #1 of 1 ... DONE
[17:36:48.676] Launching 1 futures (chunks) ... DONE
[17:36:48.676] Resolving 1 futures (chunks) ...
[17:36:48.707]  - Number of value chunks collected: 1
[17:36:48.707] Resolving 1 futures (chunks) ... DONE
[17:36:48.707] Reducing values from 1 chunks ...
[17:36:48.707]  - Number of values collected after concatenation: 1
[17:36:48.707]  - Number of values expected: 1
[17:36:48.707] Reducing values from 1 chunks ... DONE
[17:36:48.707] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:36:48.709] future_lapply() ...
[17:36:48.713] Number of chunks: 1
[17:36:48.713] getGlobalsAndPackagesXApply() ...
[17:36:48.713]  - future.globals: TRUE
[17:36:48.715]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:48.715]  - needed namespaces: [n=0] 
[17:36:48.715] Finding globals ... DONE
[17:36:48.715]  - use_args: TRUE
[17:36:48.716]  - Getting '...' globals ...
[17:36:48.716]    - '...' content: [n=0] 
[17:36:48.716] List of 1
[17:36:48.716]  $ ...: list()
[17:36:48.716]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.716]  - attr(*, "where")=List of 1
[17:36:48.716]   ..$ ...:<environment: 0x55699f39cc58> 
[17:36:48.716]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.716]  - attr(*, "resolved")= logi TRUE
[17:36:48.716]  - attr(*, "total_size")= num NA
[17:36:48.718]  - Getting '...' globals ... DONE
[17:36:48.719] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:48.719] List of 3
[17:36:48.719]  $ ...future.FUN:function (ii)  
[17:36:48.719]  $ a            : num 1
[17:36:48.719]  $ ...          : list()
[17:36:48.719]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.719]  - attr(*, "where")=List of 3
[17:36:48.719]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.719]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:48.719]   ..$ ...          :<environment: 0x55699f39cc58> 
[17:36:48.719]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.719]  - attr(*, "resolved")= logi FALSE
[17:36:48.719]  - attr(*, "total_size")= num 2984
[17:36:48.722] Packages to be attached in all futures: [n=0] 
[17:36:48.722] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.722] Number of futures (= number of chunks): 1
[17:36:48.722] Launching 1 futures (chunks) ...
[17:36:48.722] Chunk #1 of 1 ...
[17:36:48.722]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.723]    + additional globals found: [n=0] 
[17:36:48.723]    + additional namespaces needed: [n=0] 
[17:36:48.723]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.723]  - seeds: <none>
[17:36:48.723]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.741] Created future:
[17:36:48.741] MultisessionFuture:
[17:36:48.741] Label: ‘future_lapply-1’
[17:36:48.741] Expression:
[17:36:48.741] {
[17:36:48.741]     do.call(function(...) {
[17:36:48.741]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.741]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.741]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.741]             on.exit(options(oopts), add = TRUE)
[17:36:48.741]         }
[17:36:48.741]         {
[17:36:48.741]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.741]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.741]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.741]             })
[17:36:48.741]         }
[17:36:48.741]     }, args = future.call.arguments)
[17:36:48.741] }
[17:36:48.741] Lazy evaluation: FALSE
[17:36:48.741] Asynchronous evaluation: TRUE
[17:36:48.741] Local evaluation: TRUE
[17:36:48.741] Environment: R_GlobalEnv
[17:36:48.741] Capture standard output: TRUE
[17:36:48.741] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.741] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:48.741] Packages: <none>
[17:36:48.741] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.741] Resolved: FALSE
[17:36:48.741] Value: <not collected>
[17:36:48.741] Conditions captured: <none>
[17:36:48.741] Early signaling: FALSE
[17:36:48.741] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.741] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.753] Chunk #1 of 1 ... DONE
[17:36:48.754] Launching 1 futures (chunks) ... DONE
[17:36:48.754] Resolving 1 futures (chunks) ...
[17:36:48.796]  - Number of value chunks collected: 1
[17:36:48.796] Resolving 1 futures (chunks) ... DONE
[17:36:48.796] Reducing values from 1 chunks ...
[17:36:48.797]  - Number of values collected after concatenation: 1
[17:36:48.797]  - Number of values expected: 1
[17:36:48.797] Reducing values from 1 chunks ... DONE
[17:36:48.797] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:36:48.797] future_lapply() ...
[17:36:48.801] Number of chunks: 1
[17:36:48.801] getGlobalsAndPackagesXApply() ...
[17:36:48.801]  - future.globals: TRUE
[17:36:48.804]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:36:48.804]  - needed namespaces: [n=0] 
[17:36:48.804] Finding globals ... DONE
[17:36:48.804]  - use_args: TRUE
[17:36:48.804]  - Getting '...' globals ...
[17:36:48.804]    - '...' content: [n=0] 
[17:36:48.804] List of 1
[17:36:48.804]  $ ...: list()
[17:36:48.804]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.804]  - attr(*, "where")=List of 1
[17:36:48.804]   ..$ ...:<environment: 0x55699fa1aa20> 
[17:36:48.804]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.804]  - attr(*, "resolved")= logi TRUE
[17:36:48.804]  - attr(*, "total_size")= num NA
[17:36:48.807]  - Getting '...' globals ... DONE
[17:36:48.807] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:36:48.807] List of 3
[17:36:48.807]  $ ...future.FUN:function (ii)  
[17:36:48.807]  $ a            : num 1
[17:36:48.807]  $ ...          : list()
[17:36:48.807]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.807]  - attr(*, "where")=List of 3
[17:36:48.807]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.807]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:48.807]   ..$ ...          :<environment: 0x55699fa1aa20> 
[17:36:48.807]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.807]  - attr(*, "resolved")= logi FALSE
[17:36:48.807]  - attr(*, "total_size")= num 2984
[17:36:48.810] Packages to be attached in all futures: [n=0] 
[17:36:48.810] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.811] Number of futures (= number of chunks): 1
[17:36:48.811] Launching 1 futures (chunks) ...
[17:36:48.811] Chunk #1 of 1 ...
[17:36:48.811]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.811]    + additional globals found: [n=0] 
[17:36:48.811]    + additional namespaces needed: [n=0] 
[17:36:48.811]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.812]  - seeds: <none>
[17:36:48.812]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.834] Created future:
[17:36:48.834] MultisessionFuture:
[17:36:48.834] Label: ‘future_lapply-1’
[17:36:48.834] Expression:
[17:36:48.834] {
[17:36:48.834]     do.call(function(...) {
[17:36:48.834]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.834]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.834]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.834]             on.exit(options(oopts), add = TRUE)
[17:36:48.834]         }
[17:36:48.834]         {
[17:36:48.834]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.834]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.834]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.834]             })
[17:36:48.834]         }
[17:36:48.834]     }, args = future.call.arguments)
[17:36:48.834] }
[17:36:48.834] Lazy evaluation: FALSE
[17:36:48.834] Asynchronous evaluation: TRUE
[17:36:48.834] Local evaluation: TRUE
[17:36:48.834] Environment: R_GlobalEnv
[17:36:48.834] Capture standard output: TRUE
[17:36:48.834] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.834] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:48.834] Packages: <none>
[17:36:48.834] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.834] Resolved: FALSE
[17:36:48.834] Value: <not collected>
[17:36:48.834] Conditions captured: <none>
[17:36:48.834] Early signaling: FALSE
[17:36:48.834] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.834] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.845] Chunk #1 of 1 ... DONE
[17:36:48.846] Launching 1 futures (chunks) ... DONE
[17:36:48.846] Resolving 1 futures (chunks) ...
[17:36:48.889]  - Number of value chunks collected: 1
[17:36:48.889] Resolving 1 futures (chunks) ... DONE
[17:36:48.889] Reducing values from 1 chunks ...
[17:36:48.889]  - Number of values collected after concatenation: 1
[17:36:48.889]  - Number of values expected: 1
[17:36:48.889] Reducing values from 1 chunks ... DONE
[17:36:48.889] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:36:48.889] future_lapply() ...
[17:36:48.893] Number of chunks: 1
[17:36:48.893] getGlobalsAndPackagesXApply() ...
[17:36:48.893]  - future.globals: <name-value list> with names ‘42’
[17:36:48.894]  - use_args: TRUE
[17:36:48.894]  - Getting '...' globals ...
[17:36:48.894]    - '...' content: [n=0] 
[17:36:48.894] List of 1
[17:36:48.894]  $ ...: list()
[17:36:48.894]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.894]  - attr(*, "where")=List of 1
[17:36:48.894]   ..$ ...:<environment: 0x55699fa8ab80> 
[17:36:48.894]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.894]  - attr(*, "resolved")= logi TRUE
[17:36:48.894]  - attr(*, "total_size")= num NA
[17:36:48.897]  - Getting '...' globals ... DONE
[17:36:48.897] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:36:48.897] List of 3
[17:36:48.897]  $ a            : num 42
[17:36:48.897]  $ ...future.FUN:function (x)  
[17:36:48.897]  $ ...          : list()
[17:36:48.897]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.897]  - attr(*, "where")=List of 3
[17:36:48.897]   ..$ a            :<environment: R_EmptyEnv> 
[17:36:48.897]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:36:48.897]   ..$ ...          :<environment: 0x55699fa8ab80> 
[17:36:48.897]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.897]  - attr(*, "resolved")= logi FALSE
[17:36:48.897]  - attr(*, "total_size")= num NA
[17:36:48.900] Packages to be attached in all futures: [n=0] 
[17:36:48.900] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.900] Number of futures (= number of chunks): 1
[17:36:48.900] Launching 1 futures (chunks) ...
[17:36:48.901] Chunk #1 of 1 ...
[17:36:48.901]  - seeds: <none>
[17:36:48.901]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.919] Created future:
[17:36:48.919] MultisessionFuture:
[17:36:48.919] Label: ‘future_lapply-1’
[17:36:48.919] Expression:
[17:36:48.919] {
[17:36:48.919]     do.call(function(...) {
[17:36:48.919]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.919]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.919]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.919]             on.exit(options(oopts), add = TRUE)
[17:36:48.919]         }
[17:36:48.919]         {
[17:36:48.919]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.919]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.919]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.919]             })
[17:36:48.919]         }
[17:36:48.919]     }, args = future.call.arguments)
[17:36:48.919] }
[17:36:48.919] Lazy evaluation: FALSE
[17:36:48.919] Asynchronous evaluation: TRUE
[17:36:48.919] Local evaluation: TRUE
[17:36:48.919] Environment: R_GlobalEnv
[17:36:48.919] Capture standard output: TRUE
[17:36:48.919] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.919] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:36:48.919] Packages: <none>
[17:36:48.919] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.919] Resolved: FALSE
[17:36:48.919] Value: <not collected>
[17:36:48.919] Conditions captured: <none>
[17:36:48.919] Early signaling: FALSE
[17:36:48.919] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.919] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:48.931] Chunk #1 of 1 ... DONE
[17:36:48.931] Launching 1 futures (chunks) ... DONE
[17:36:48.931] Resolving 1 futures (chunks) ...
[17:36:48.962]  - Number of value chunks collected: 1
[17:36:48.963] Resolving 1 futures (chunks) ... DONE
[17:36:48.963] Reducing values from 1 chunks ...
[17:36:48.963]  - Number of values collected after concatenation: 1
[17:36:48.963]  - Number of values expected: 1
[17:36:48.963] Reducing values from 1 chunks ... DONE
[17:36:48.963] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[17:36:48.964] future_lapply() ...
[17:36:48.968] Number of chunks: 2
[17:36:48.968] getGlobalsAndPackagesXApply() ...
[17:36:48.968]  - future.globals: TRUE
[17:36:48.970]  - globals found/used: [n=1] ‘FUN’
[17:36:48.970]  - needed namespaces: [n=0] 
[17:36:48.970] Finding globals ... DONE
[17:36:48.970]  - use_args: TRUE
[17:36:48.970]  - Getting '...' globals ...
[17:36:48.971]    - '...' content: [n=0] 
[17:36:48.971] List of 1
[17:36:48.971]  $ ...: list()
[17:36:48.971]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.971]  - attr(*, "where")=List of 1
[17:36:48.971]   ..$ ...:<environment: 0x55699d38d018> 
[17:36:48.971]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.971]  - attr(*, "resolved")= logi TRUE
[17:36:48.971]  - attr(*, "total_size")= num NA
[17:36:48.973]  - Getting '...' globals ... DONE
[17:36:48.974] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:48.974] List of 2
[17:36:48.974]  $ ...future.FUN:function (y)  
[17:36:48.974]  $ ...          : list()
[17:36:48.974]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:48.974]  - attr(*, "where")=List of 2
[17:36:48.974]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:48.974]   ..$ ...          :<environment: 0x55699d38d018> 
[17:36:48.974]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:48.974]  - attr(*, "resolved")= logi FALSE
[17:36:48.974]  - attr(*, "total_size")= num 280
[17:36:48.976] Packages to be attached in all futures: [n=0] 
[17:36:48.976] getGlobalsAndPackagesXApply() ... DONE
[17:36:48.976] Number of futures (= number of chunks): 2
[17:36:48.977] Launching 2 futures (chunks) ...
[17:36:48.977] Chunk #1 of 2 ...
[17:36:48.977]  - Finding globals in 'X' for chunk #1 ...
[17:36:48.977]    + additional globals found: [n=0] 
[17:36:48.977]    + additional namespaces needed: [n=0] 
[17:36:48.977]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:48.977]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:48.978]  - seeds: <none>
[17:36:48.978]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:48.995] Created future:
[17:36:48.995] MultisessionFuture:
[17:36:48.995] Label: ‘future_lapply-1’
[17:36:48.995] Expression:
[17:36:48.995] {
[17:36:48.995]     do.call(function(...) {
[17:36:48.995]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:48.995]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:48.995]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:48.995]             on.exit(options(oopts), add = TRUE)
[17:36:48.995]         }
[17:36:48.995]         {
[17:36:48.995]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:48.995]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:48.995]                 ...future.FUN(...future.X_jj, ...)
[17:36:48.995]             })
[17:36:48.995]         }
[17:36:48.995]     }, args = future.call.arguments)
[17:36:48.995] }
[17:36:48.995] Lazy evaluation: FALSE
[17:36:48.995] Asynchronous evaluation: TRUE
[17:36:48.995] Local evaluation: TRUE
[17:36:48.995] Environment: 0x55699d38cbb8
[17:36:48.995] Capture standard output: TRUE
[17:36:48.995] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:48.995] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:48.995] Packages: <none>
[17:36:48.995] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:48.995] Resolved: FALSE
[17:36:48.995] Value: <not collected>
[17:36:48.995] Conditions captured: <none>
[17:36:48.995] Early signaling: FALSE
[17:36:48.995] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:48.995] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.007] Chunk #1 of 2 ... DONE
[17:36:49.007] Chunk #2 of 2 ...
[17:36:49.007]  - Finding globals in 'X' for chunk #2 ...
[17:36:49.007]    + additional globals found: [n=0] 
[17:36:49.007]    + additional namespaces needed: [n=0] 
[17:36:49.007]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:49.008]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:49.008]  - seeds: <none>
[17:36:49.008]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.025] Created future:
[17:36:49.025] MultisessionFuture:
[17:36:49.025] Label: ‘future_lapply-2’
[17:36:49.025] Expression:
[17:36:49.025] {
[17:36:49.025]     do.call(function(...) {
[17:36:49.025]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.025]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.025]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.025]             on.exit(options(oopts), add = TRUE)
[17:36:49.025]         }
[17:36:49.025]         {
[17:36:49.025]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.025]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.025]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.025]             })
[17:36:49.025]         }
[17:36:49.025]     }, args = future.call.arguments)
[17:36:49.025] }
[17:36:49.025] Lazy evaluation: FALSE
[17:36:49.025] Asynchronous evaluation: TRUE
[17:36:49.025] Local evaluation: TRUE
[17:36:49.025] Environment: 0x55699d38cbb8
[17:36:49.025] Capture standard output: TRUE
[17:36:49.025] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.025] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:49.025] Packages: <none>
[17:36:49.025] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.025] Resolved: FALSE
[17:36:49.025] Value: <not collected>
[17:36:49.025] Conditions captured: <none>
[17:36:49.025] Early signaling: FALSE
[17:36:49.025] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.025] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.039] Chunk #2 of 2 ... DONE
[17:36:49.039] Launching 2 futures (chunks) ... DONE
[17:36:49.039] Resolving 2 futures (chunks) ...
[17:36:49.071]  - Number of value chunks collected: 2
[17:36:49.071] Resolving 2 futures (chunks) ... DONE
[17:36:49.071] Reducing values from 2 chunks ...
[17:36:49.071]  - Number of values collected after concatenation: 2
[17:36:49.071]  - Number of values expected: 2
[17:36:49.071] Reducing values from 2 chunks ... DONE
[17:36:49.071] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[17:36:49.072] future_lapply() ...
[17:36:49.076] Number of chunks: 2
[17:36:49.076] getGlobalsAndPackagesXApply() ...
[17:36:49.076]  - future.globals: TRUE
[17:36:49.078]  - globals found/used: [n=1] ‘FUN’
[17:36:49.078]  - needed namespaces: [n=0] 
[17:36:49.078] Finding globals ... DONE
[17:36:49.078]  - use_args: TRUE
[17:36:49.078]  - Getting '...' globals ...
[17:36:49.079]    - '...' content: [n=0] 
[17:36:49.079] List of 1
[17:36:49.079]  $ ...: list()
[17:36:49.079]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.079]  - attr(*, "where")=List of 1
[17:36:49.079]   ..$ ...:<environment: 0x55699fb32608> 
[17:36:49.079]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.079]  - attr(*, "resolved")= logi TRUE
[17:36:49.079]  - attr(*, "total_size")= num NA
[17:36:49.081]  - Getting '...' globals ... DONE
[17:36:49.081] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:49.081] List of 2
[17:36:49.081]  $ ...future.FUN:function (y)  
[17:36:49.081]  $ ...          : list()
[17:36:49.081]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.081]  - attr(*, "where")=List of 2
[17:36:49.081]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:49.081]   ..$ ...          :<environment: 0x55699fb32608> 
[17:36:49.081]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.081]  - attr(*, "resolved")= logi FALSE
[17:36:49.081]  - attr(*, "total_size")= num 280
[17:36:49.084] Packages to be attached in all futures: [n=0] 
[17:36:49.084] getGlobalsAndPackagesXApply() ... DONE
[17:36:49.084] Number of futures (= number of chunks): 2
[17:36:49.084] Launching 2 futures (chunks) ...
[17:36:49.084] Chunk #1 of 2 ...
[17:36:49.085]  - Finding globals in 'X' for chunk #1 ...
[17:36:49.085]    + additional globals found: [n=0] 
[17:36:49.085]    + additional namespaces needed: [n=0] 
[17:36:49.085]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:49.085]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:49.085]  - seeds: <none>
[17:36:49.085]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.103] Created future:
[17:36:49.103] MultisessionFuture:
[17:36:49.103] Label: ‘future_lapply-1’
[17:36:49.103] Expression:
[17:36:49.103] {
[17:36:49.103]     do.call(function(...) {
[17:36:49.103]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.103]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.103]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.103]             on.exit(options(oopts), add = TRUE)
[17:36:49.103]         }
[17:36:49.103]         {
[17:36:49.103]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.103]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.103]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.103]             })
[17:36:49.103]         }
[17:36:49.103]     }, args = future.call.arguments)
[17:36:49.103] }
[17:36:49.103] Lazy evaluation: FALSE
[17:36:49.103] Asynchronous evaluation: TRUE
[17:36:49.103] Local evaluation: TRUE
[17:36:49.103] Environment: 0x55699fb32170
[17:36:49.103] Capture standard output: TRUE
[17:36:49.103] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.103] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:49.103] Packages: <none>
[17:36:49.103] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.103] Resolved: FALSE
[17:36:49.103] Value: <not collected>
[17:36:49.103] Conditions captured: <none>
[17:36:49.103] Early signaling: FALSE
[17:36:49.103] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.103] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.115] Chunk #1 of 2 ... DONE
[17:36:49.115] Chunk #2 of 2 ...
[17:36:49.115]  - Finding globals in 'X' for chunk #2 ...
[17:36:49.116]    + additional globals found: [n=0] 
[17:36:49.116]    + additional namespaces needed: [n=0] 
[17:36:49.116]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:49.116]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:49.116]  - seeds: <none>
[17:36:49.116]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.134] Created future:
[17:36:49.134] MultisessionFuture:
[17:36:49.134] Label: ‘future_lapply-2’
[17:36:49.134] Expression:
[17:36:49.134] {
[17:36:49.134]     do.call(function(...) {
[17:36:49.134]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.134]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.134]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.134]             on.exit(options(oopts), add = TRUE)
[17:36:49.134]         }
[17:36:49.134]         {
[17:36:49.134]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.134]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.134]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.134]             })
[17:36:49.134]         }
[17:36:49.134]     }, args = future.call.arguments)
[17:36:49.134] }
[17:36:49.134] Lazy evaluation: FALSE
[17:36:49.134] Asynchronous evaluation: TRUE
[17:36:49.134] Local evaluation: TRUE
[17:36:49.134] Environment: 0x55699fb32170
[17:36:49.134] Capture standard output: TRUE
[17:36:49.134] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.134] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:49.134] Packages: <none>
[17:36:49.134] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.134] Resolved: FALSE
[17:36:49.134] Value: <not collected>
[17:36:49.134] Conditions captured: <none>
[17:36:49.134] Early signaling: FALSE
[17:36:49.134] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.134] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.146] Chunk #2 of 2 ... DONE
[17:36:49.146] Launching 2 futures (chunks) ... DONE
[17:36:49.147] Resolving 2 futures (chunks) ...
[17:36:49.179]  - Number of value chunks collected: 2
[17:36:49.179] Resolving 2 futures (chunks) ... DONE
[17:36:49.179] Reducing values from 2 chunks ...
[17:36:49.179]  - Number of values collected after concatenation: 2
[17:36:49.179]  - Number of values expected: 2
[17:36:49.179] Reducing values from 2 chunks ... DONE
[17:36:49.179] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[17:36:49.182] future_lapply() ...
[17:36:49.186] Number of chunks: 2
[17:36:49.186] getGlobalsAndPackagesXApply() ...
[17:36:49.186]  - future.globals: TRUE
[17:36:49.188] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[17:36:49.188] future_lapply() ...
[17:36:49.192] Number of chunks: 2
[17:36:49.192] getGlobalsAndPackagesXApply() ...
[17:36:49.192]  - future.globals: TRUE
[17:36:49.194]  - globals found/used: [n=1] ‘FUN’
[17:36:49.194]  - needed namespaces: [n=0] 
[17:36:49.194] Finding globals ... DONE
[17:36:49.194]  - use_args: TRUE
[17:36:49.194]  - Getting '...' globals ...
[17:36:49.194]    - '...' content: [n=0] 
[17:36:49.194] List of 1
[17:36:49.194]  $ ...: list()
[17:36:49.194]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.194]  - attr(*, "where")=List of 1
[17:36:49.194]   ..$ ...:<environment: 0x5569a0ccd3d8> 
[17:36:49.194]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.194]  - attr(*, "resolved")= logi TRUE
[17:36:49.194]  - attr(*, "total_size")= num NA
[17:36:49.197]  - Getting '...' globals ... DONE
[17:36:49.197] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:49.197] List of 2
[17:36:49.197]  $ ...future.FUN:function (x)  
[17:36:49.197]  $ ...          : list()
[17:36:49.197]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.197]  - attr(*, "where")=List of 2
[17:36:49.197]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:49.197]   ..$ ...          :<environment: 0x5569a0ccd3d8> 
[17:36:49.197]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.197]  - attr(*, "resolved")= logi FALSE
[17:36:49.197]  - attr(*, "total_size")= num 1840
[17:36:49.202] Packages to be attached in all futures: [n=0] 
[17:36:49.202] getGlobalsAndPackagesXApply() ... DONE
[17:36:49.202] Number of futures (= number of chunks): 2
[17:36:49.202] Launching 2 futures (chunks) ...
[17:36:49.203] Chunk #1 of 2 ...
[17:36:49.203]  - Finding globals in 'X' for chunk #1 ...
[17:36:49.203]    + additional globals found: [n=0] 
[17:36:49.203]    + additional namespaces needed: [n=0] 
[17:36:49.203]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:49.203]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:49.203]  - seeds: <none>
[17:36:49.203]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.221] Created future:
[17:36:49.221] MultisessionFuture:
[17:36:49.221] Label: ‘future_lapply-1’
[17:36:49.221] Expression:
[17:36:49.221] {
[17:36:49.221]     do.call(function(...) {
[17:36:49.221]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.221]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.221]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.221]             on.exit(options(oopts), add = TRUE)
[17:36:49.221]         }
[17:36:49.221]         {
[17:36:49.221]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.221]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.221]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.221]             })
[17:36:49.221]         }
[17:36:49.221]     }, args = future.call.arguments)
[17:36:49.221] }
[17:36:49.221] Lazy evaluation: FALSE
[17:36:49.221] Asynchronous evaluation: TRUE
[17:36:49.221] Local evaluation: TRUE
[17:36:49.221] Environment: R_GlobalEnv
[17:36:49.221] Capture standard output: TRUE
[17:36:49.221] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.221] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:49.221] Packages: <none>
[17:36:49.221] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.221] Resolved: FALSE
[17:36:49.221] Value: <not collected>
[17:36:49.221] Conditions captured: <none>
[17:36:49.221] Early signaling: FALSE
[17:36:49.221] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.221] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.232] Chunk #1 of 2 ... DONE
[17:36:49.232] Chunk #2 of 2 ...
[17:36:49.233]  - Finding globals in 'X' for chunk #2 ...
[17:36:49.233]    + additional globals found: [n=0] 
[17:36:49.233]    + additional namespaces needed: [n=0] 
[17:36:49.233]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:49.233]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:36:49.233]  - seeds: <none>
[17:36:49.234]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.251] Created future:
[17:36:49.251] MultisessionFuture:
[17:36:49.251] Label: ‘future_lapply-2’
[17:36:49.251] Expression:
[17:36:49.251] {
[17:36:49.251]     do.call(function(...) {
[17:36:49.251]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.251]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.251]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.251]             on.exit(options(oopts), add = TRUE)
[17:36:49.251]         }
[17:36:49.251]         {
[17:36:49.251]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.251]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.251]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.251]             })
[17:36:49.251]         }
[17:36:49.251]     }, args = future.call.arguments)
[17:36:49.251] }
[17:36:49.251] Lazy evaluation: FALSE
[17:36:49.251] Asynchronous evaluation: TRUE
[17:36:49.251] Local evaluation: TRUE
[17:36:49.251] Environment: R_GlobalEnv
[17:36:49.251] Capture standard output: TRUE
[17:36:49.251] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.251] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:36:49.251] Packages: <none>
[17:36:49.251] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.251] Resolved: FALSE
[17:36:49.251] Value: <not collected>
[17:36:49.251] Conditions captured: <none>
[17:36:49.251] Early signaling: FALSE
[17:36:49.251] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.251] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.263] Chunk #2 of 2 ... DONE
[17:36:49.263] Launching 2 futures (chunks) ... DONE
[17:36:49.263] Resolving 2 futures (chunks) ...
[17:36:49.295]  - Number of value chunks collected: 2
[17:36:49.295] Resolving 2 futures (chunks) ... DONE
[17:36:49.295] Reducing values from 2 chunks ...
[17:36:49.295]  - Number of values collected after concatenation: 10
[17:36:49.295]  - Number of values expected: 10
[17:36:49.295] Reducing values from 2 chunks ... DONE
[17:36:49.295] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[17:36:49.303] future_lapply() ...
[17:36:49.307] Number of chunks: 10
[17:36:49.307] getGlobalsAndPackagesXApply() ...
[17:36:49.307]  - future.globals: TRUE
[17:36:49.309]  - globals found/used: [n=1] ‘FUN’
[17:36:49.309]  - needed namespaces: [n=0] 
[17:36:49.309] Finding globals ... DONE
[17:36:49.309]  - use_args: TRUE
[17:36:49.309]  - Getting '...' globals ...
[17:36:49.310]    - '...' content: [n=0] 
[17:36:49.310] List of 1
[17:36:49.310]  $ ...: list()
[17:36:49.310]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.310]  - attr(*, "where")=List of 1
[17:36:49.310]   ..$ ...:<environment: 0x5569a0784f20> 
[17:36:49.310]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.310]  - attr(*, "resolved")= logi TRUE
[17:36:49.310]  - attr(*, "total_size")= num NA
[17:36:49.312]  - Getting '...' globals ... DONE
[17:36:49.313] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:49.313] List of 2
[17:36:49.313]  $ ...future.FUN:function (x)  
[17:36:49.313]  $ ...          : list()
[17:36:49.313]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.313]  - attr(*, "where")=List of 2
[17:36:49.313]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:49.313]   ..$ ...          :<environment: 0x5569a0784f20> 
[17:36:49.313]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.313]  - attr(*, "resolved")= logi FALSE
[17:36:49.313]  - attr(*, "total_size")= num 1840
[17:36:49.315] Packages to be attached in all futures: [n=0] 
[17:36:49.315] getGlobalsAndPackagesXApply() ... DONE
[17:36:49.316] Number of futures (= number of chunks): 10
[17:36:49.316] Launching 10 futures (chunks) ...
[17:36:49.316] Chunk #1 of 10 ...
[17:36:49.316]  - Finding globals in 'X' for chunk #1 ...
[17:36:49.316]    + additional globals found: [n=0] 
[17:36:49.316]    + additional namespaces needed: [n=0] 
[17:36:49.316]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:49.317]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.317]  - seeds: <none>
[17:36:49.317]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.334] Created future:
[17:36:49.334] MultisessionFuture:
[17:36:49.334] Label: ‘future_lapply-1’
[17:36:49.334] Expression:
[17:36:49.334] {
[17:36:49.334]     do.call(function(...) {
[17:36:49.334]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.334]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.334]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.334]             on.exit(options(oopts), add = TRUE)
[17:36:49.334]         }
[17:36:49.334]         {
[17:36:49.334]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.334]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.334]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.334]             })
[17:36:49.334]         }
[17:36:49.334]     }, args = future.call.arguments)
[17:36:49.334] }
[17:36:49.334] Lazy evaluation: FALSE
[17:36:49.334] Asynchronous evaluation: TRUE
[17:36:49.334] Local evaluation: TRUE
[17:36:49.334] Environment: R_GlobalEnv
[17:36:49.334] Capture standard output: TRUE
[17:36:49.334] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.334] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.334] Packages: <none>
[17:36:49.334] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.334] Resolved: FALSE
[17:36:49.334] Value: <not collected>
[17:36:49.334] Conditions captured: <none>
[17:36:49.334] Early signaling: FALSE
[17:36:49.334] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.334] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.345] Chunk #1 of 10 ... DONE
[17:36:49.346] Chunk #2 of 10 ...
[17:36:49.346]  - Finding globals in 'X' for chunk #2 ...
[17:36:49.346]    + additional globals found: [n=0] 
[17:36:49.346]    + additional namespaces needed: [n=0] 
[17:36:49.346]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:49.346]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.346]  - seeds: <none>
[17:36:49.346]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.367] Created future:
[17:36:49.367] MultisessionFuture:
[17:36:49.367] Label: ‘future_lapply-2’
[17:36:49.367] Expression:
[17:36:49.367] {
[17:36:49.367]     do.call(function(...) {
[17:36:49.367]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.367]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.367]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.367]             on.exit(options(oopts), add = TRUE)
[17:36:49.367]         }
[17:36:49.367]         {
[17:36:49.367]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.367]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.367]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.367]             })
[17:36:49.367]         }
[17:36:49.367]     }, args = future.call.arguments)
[17:36:49.367] }
[17:36:49.367] Lazy evaluation: FALSE
[17:36:49.367] Asynchronous evaluation: TRUE
[17:36:49.367] Local evaluation: TRUE
[17:36:49.367] Environment: R_GlobalEnv
[17:36:49.367] Capture standard output: TRUE
[17:36:49.367] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.367] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.367] Packages: <none>
[17:36:49.367] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.367] Resolved: FALSE
[17:36:49.367] Value: <not collected>
[17:36:49.367] Conditions captured: <none>
[17:36:49.367] Early signaling: FALSE
[17:36:49.367] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.367] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.379] Chunk #2 of 10 ... DONE
[17:36:49.379] Chunk #3 of 10 ...
[17:36:49.379]  - Finding globals in 'X' for chunk #3 ...
[17:36:49.380]    + additional globals found: [n=0] 
[17:36:49.380]    + additional namespaces needed: [n=0] 
[17:36:49.380]  - Finding globals in 'X' for chunk #3 ... DONE
[17:36:49.380]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.380]  - seeds: <none>
[17:36:49.380]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.408] Created future:
[17:36:49.408] MultisessionFuture:
[17:36:49.408] Label: ‘future_lapply-3’
[17:36:49.408] Expression:
[17:36:49.408] {
[17:36:49.408]     do.call(function(...) {
[17:36:49.408]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.408]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.408]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.408]             on.exit(options(oopts), add = TRUE)
[17:36:49.408]         }
[17:36:49.408]         {
[17:36:49.408]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.408]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.408]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.408]             })
[17:36:49.408]         }
[17:36:49.408]     }, args = future.call.arguments)
[17:36:49.408] }
[17:36:49.408] Lazy evaluation: FALSE
[17:36:49.408] Asynchronous evaluation: TRUE
[17:36:49.408] Local evaluation: TRUE
[17:36:49.408] Environment: R_GlobalEnv
[17:36:49.408] Capture standard output: TRUE
[17:36:49.408] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.408] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.408] Packages: <none>
[17:36:49.408] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.408] Resolved: FALSE
[17:36:49.408] Value: <not collected>
[17:36:49.408] Conditions captured: <none>
[17:36:49.408] Early signaling: FALSE
[17:36:49.408] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.408] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.420] Chunk #3 of 10 ... DONE
[17:36:49.420] Chunk #4 of 10 ...
[17:36:49.421]  - Finding globals in 'X' for chunk #4 ...
[17:36:49.421]    + additional globals found: [n=0] 
[17:36:49.421]    + additional namespaces needed: [n=0] 
[17:36:49.421]  - Finding globals in 'X' for chunk #4 ... DONE
[17:36:49.421]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.421]  - seeds: <none>
[17:36:49.422]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.459] Created future:
[17:36:49.459] MultisessionFuture:
[17:36:49.459] Label: ‘future_lapply-4’
[17:36:49.459] Expression:
[17:36:49.459] {
[17:36:49.459]     do.call(function(...) {
[17:36:49.459]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.459]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.459]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.459]             on.exit(options(oopts), add = TRUE)
[17:36:49.459]         }
[17:36:49.459]         {
[17:36:49.459]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.459]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.459]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.459]             })
[17:36:49.459]         }
[17:36:49.459]     }, args = future.call.arguments)
[17:36:49.459] }
[17:36:49.459] Lazy evaluation: FALSE
[17:36:49.459] Asynchronous evaluation: TRUE
[17:36:49.459] Local evaluation: TRUE
[17:36:49.459] Environment: R_GlobalEnv
[17:36:49.459] Capture standard output: TRUE
[17:36:49.459] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.459] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.459] Packages: <none>
[17:36:49.459] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.459] Resolved: FALSE
[17:36:49.459] Value: <not collected>
[17:36:49.459] Conditions captured: <none>
[17:36:49.459] Early signaling: FALSE
[17:36:49.459] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.459] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.471] Chunk #4 of 10 ... DONE
[17:36:49.471] Chunk #5 of 10 ...
[17:36:49.471]  - Finding globals in 'X' for chunk #5 ...
[17:36:49.471]    + additional globals found: [n=0] 
[17:36:49.471]    + additional namespaces needed: [n=0] 
[17:36:49.471]  - Finding globals in 'X' for chunk #5 ... DONE
[17:36:49.472]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.472]  - seeds: <none>
[17:36:49.472]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.499] Created future:
[17:36:49.500] MultisessionFuture:
[17:36:49.500] Label: ‘future_lapply-5’
[17:36:49.500] Expression:
[17:36:49.500] {
[17:36:49.500]     do.call(function(...) {
[17:36:49.500]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.500]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.500]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.500]             on.exit(options(oopts), add = TRUE)
[17:36:49.500]         }
[17:36:49.500]         {
[17:36:49.500]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.500]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.500]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.500]             })
[17:36:49.500]         }
[17:36:49.500]     }, args = future.call.arguments)
[17:36:49.500] }
[17:36:49.500] Lazy evaluation: FALSE
[17:36:49.500] Asynchronous evaluation: TRUE
[17:36:49.500] Local evaluation: TRUE
[17:36:49.500] Environment: R_GlobalEnv
[17:36:49.500] Capture standard output: TRUE
[17:36:49.500] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.500] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.500] Packages: <none>
[17:36:49.500] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.500] Resolved: FALSE
[17:36:49.500] Value: <not collected>
[17:36:49.500] Conditions captured: <none>
[17:36:49.500] Early signaling: FALSE
[17:36:49.500] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.500] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.511] Chunk #5 of 10 ... DONE
[17:36:49.511] Chunk #6 of 10 ...
[17:36:49.512]  - Finding globals in 'X' for chunk #6 ...
[17:36:49.512]    + additional globals found: [n=0] 
[17:36:49.512]    + additional namespaces needed: [n=0] 
[17:36:49.512]  - Finding globals in 'X' for chunk #6 ... DONE
[17:36:49.512]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.513]  - seeds: <none>
[17:36:49.513]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.540] Created future:
[17:36:49.541] MultisessionFuture:
[17:36:49.541] Label: ‘future_lapply-6’
[17:36:49.541] Expression:
[17:36:49.541] {
[17:36:49.541]     do.call(function(...) {
[17:36:49.541]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.541]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.541]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.541]             on.exit(options(oopts), add = TRUE)
[17:36:49.541]         }
[17:36:49.541]         {
[17:36:49.541]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.541]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.541]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.541]             })
[17:36:49.541]         }
[17:36:49.541]     }, args = future.call.arguments)
[17:36:49.541] }
[17:36:49.541] Lazy evaluation: FALSE
[17:36:49.541] Asynchronous evaluation: TRUE
[17:36:49.541] Local evaluation: TRUE
[17:36:49.541] Environment: R_GlobalEnv
[17:36:49.541] Capture standard output: TRUE
[17:36:49.541] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.541] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.541] Packages: <none>
[17:36:49.541] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.541] Resolved: FALSE
[17:36:49.541] Value: <not collected>
[17:36:49.541] Conditions captured: <none>
[17:36:49.541] Early signaling: FALSE
[17:36:49.541] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.541] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.552] Chunk #6 of 10 ... DONE
[17:36:49.552] Chunk #7 of 10 ...
[17:36:49.552]  - Finding globals in 'X' for chunk #7 ...
[17:36:49.553]    + additional globals found: [n=0] 
[17:36:49.553]    + additional namespaces needed: [n=0] 
[17:36:49.553]  - Finding globals in 'X' for chunk #7 ... DONE
[17:36:49.553]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.553]  - seeds: <none>
[17:36:49.553]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.585] Created future:
[17:36:49.585] MultisessionFuture:
[17:36:49.585] Label: ‘future_lapply-7’
[17:36:49.585] Expression:
[17:36:49.585] {
[17:36:49.585]     do.call(function(...) {
[17:36:49.585]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.585]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.585]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.585]             on.exit(options(oopts), add = TRUE)
[17:36:49.585]         }
[17:36:49.585]         {
[17:36:49.585]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.585]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.585]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.585]             })
[17:36:49.585]         }
[17:36:49.585]     }, args = future.call.arguments)
[17:36:49.585] }
[17:36:49.585] Lazy evaluation: FALSE
[17:36:49.585] Asynchronous evaluation: TRUE
[17:36:49.585] Local evaluation: TRUE
[17:36:49.585] Environment: R_GlobalEnv
[17:36:49.585] Capture standard output: TRUE
[17:36:49.585] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.585] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.585] Packages: <none>
[17:36:49.585] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.585] Resolved: FALSE
[17:36:49.585] Value: <not collected>
[17:36:49.585] Conditions captured: <none>
[17:36:49.585] Early signaling: FALSE
[17:36:49.585] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.585] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.596] Chunk #7 of 10 ... DONE
[17:36:49.597] Chunk #8 of 10 ...
[17:36:49.597]  - Finding globals in 'X' for chunk #8 ...
[17:36:49.597]    + additional globals found: [n=0] 
[17:36:49.597]    + additional namespaces needed: [n=0] 
[17:36:49.597]  - Finding globals in 'X' for chunk #8 ... DONE
[17:36:49.597]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.597]  - seeds: <none>
[17:36:49.598]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.626] Created future:
[17:36:49.626] MultisessionFuture:
[17:36:49.626] Label: ‘future_lapply-8’
[17:36:49.626] Expression:
[17:36:49.626] {
[17:36:49.626]     do.call(function(...) {
[17:36:49.626]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.626]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.626]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.626]             on.exit(options(oopts), add = TRUE)
[17:36:49.626]         }
[17:36:49.626]         {
[17:36:49.626]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.626]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.626]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.626]             })
[17:36:49.626]         }
[17:36:49.626]     }, args = future.call.arguments)
[17:36:49.626] }
[17:36:49.626] Lazy evaluation: FALSE
[17:36:49.626] Asynchronous evaluation: TRUE
[17:36:49.626] Local evaluation: TRUE
[17:36:49.626] Environment: R_GlobalEnv
[17:36:49.626] Capture standard output: TRUE
[17:36:49.626] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.626] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.626] Packages: <none>
[17:36:49.626] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.626] Resolved: FALSE
[17:36:49.626] Value: <not collected>
[17:36:49.626] Conditions captured: <none>
[17:36:49.626] Early signaling: FALSE
[17:36:49.626] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.626] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.638] Chunk #8 of 10 ... DONE
[17:36:49.638] Chunk #9 of 10 ...
[17:36:49.638]  - Finding globals in 'X' for chunk #9 ...
[17:36:49.638]    + additional globals found: [n=0] 
[17:36:49.638]    + additional namespaces needed: [n=0] 
[17:36:49.639]  - Finding globals in 'X' for chunk #9 ... DONE
[17:36:49.639]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.639]  - seeds: <none>
[17:36:49.639]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.667] Created future:
[17:36:49.667] MultisessionFuture:
[17:36:49.667] Label: ‘future_lapply-9’
[17:36:49.667] Expression:
[17:36:49.667] {
[17:36:49.667]     do.call(function(...) {
[17:36:49.667]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.667]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.667]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.667]             on.exit(options(oopts), add = TRUE)
[17:36:49.667]         }
[17:36:49.667]         {
[17:36:49.667]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.667]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.667]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.667]             })
[17:36:49.667]         }
[17:36:49.667]     }, args = future.call.arguments)
[17:36:49.667] }
[17:36:49.667] Lazy evaluation: FALSE
[17:36:49.667] Asynchronous evaluation: TRUE
[17:36:49.667] Local evaluation: TRUE
[17:36:49.667] Environment: R_GlobalEnv
[17:36:49.667] Capture standard output: TRUE
[17:36:49.667] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.667] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.667] Packages: <none>
[17:36:49.667] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.667] Resolved: FALSE
[17:36:49.667] Value: <not collected>
[17:36:49.667] Conditions captured: <none>
[17:36:49.667] Early signaling: FALSE
[17:36:49.667] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.667] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.678] Chunk #9 of 10 ... DONE
[17:36:49.678] Chunk #10 of 10 ...
[17:36:49.678]  - Finding globals in 'X' for chunk #10 ...
[17:36:49.679]    + additional globals found: [n=0] 
[17:36:49.679]    + additional namespaces needed: [n=0] 
[17:36:49.679]  - Finding globals in 'X' for chunk #10 ... DONE
[17:36:49.679]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:36:49.679]  - seeds: <none>
[17:36:49.679]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.708] Created future:
[17:36:49.708] MultisessionFuture:
[17:36:49.708] Label: ‘future_lapply-10’
[17:36:49.708] Expression:
[17:36:49.708] {
[17:36:49.708]     do.call(function(...) {
[17:36:49.708]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.708]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.708]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.708]             on.exit(options(oopts), add = TRUE)
[17:36:49.708]         }
[17:36:49.708]         {
[17:36:49.708]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.708]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.708]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.708]             })
[17:36:49.708]         }
[17:36:49.708]     }, args = future.call.arguments)
[17:36:49.708] }
[17:36:49.708] Lazy evaluation: FALSE
[17:36:49.708] Asynchronous evaluation: TRUE
[17:36:49.708] Local evaluation: TRUE
[17:36:49.708] Environment: R_GlobalEnv
[17:36:49.708] Capture standard output: TRUE
[17:36:49.708] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.708] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.708] Packages: <none>
[17:36:49.708] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.708] Resolved: FALSE
[17:36:49.708] Value: <not collected>
[17:36:49.708] Conditions captured: <none>
[17:36:49.708] Early signaling: FALSE
[17:36:49.708] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.708] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.720] Chunk #10 of 10 ... DONE
[17:36:49.721] Launching 10 futures (chunks) ... DONE
[17:36:49.721] Resolving 10 futures (chunks) ...
[17:36:49.751]  - Number of value chunks collected: 10
[17:36:49.751] Resolving 10 futures (chunks) ... DONE
[17:36:49.752] Reducing values from 10 chunks ...
[17:36:49.752]  - Number of values collected after concatenation: 10
[17:36:49.752]  - Number of values expected: 10
[17:36:49.752] Reducing values from 10 chunks ... DONE
[17:36:49.752] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:36:49.756] future_lapply() ...
[17:36:49.760] Number of chunks: 5
[17:36:49.760] getGlobalsAndPackagesXApply() ...
[17:36:49.761]  - future.globals: TRUE
[17:36:49.762]  - globals found/used: [n=1] ‘FUN’
[17:36:49.763]  - needed namespaces: [n=0] 
[17:36:49.763] Finding globals ... DONE
[17:36:49.763]  - use_args: TRUE
[17:36:49.763]  - Getting '...' globals ...
[17:36:49.763]    - '...' content: [n=0] 
[17:36:49.763] List of 1
[17:36:49.763]  $ ...: list()
[17:36:49.763]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.763]  - attr(*, "where")=List of 1
[17:36:49.763]   ..$ ...:<environment: 0x5569a07d57d8> 
[17:36:49.763]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.763]  - attr(*, "resolved")= logi TRUE
[17:36:49.763]  - attr(*, "total_size")= num NA
[17:36:49.766]  - Getting '...' globals ... DONE
[17:36:49.766] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:49.766] List of 2
[17:36:49.766]  $ ...future.FUN:function (x)  
[17:36:49.766]  $ ...          : list()
[17:36:49.766]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:49.766]  - attr(*, "where")=List of 2
[17:36:49.766]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:49.766]   ..$ ...          :<environment: 0x5569a07d57d8> 
[17:36:49.766]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:49.766]  - attr(*, "resolved")= logi FALSE
[17:36:49.766]  - attr(*, "total_size")= num 1840
[17:36:49.771] Packages to be attached in all futures: [n=0] 
[17:36:49.771] getGlobalsAndPackagesXApply() ... DONE
[17:36:49.771] Number of futures (= number of chunks): 5
[17:36:49.772] Launching 5 futures (chunks) ...
[17:36:49.772] Chunk #1 of 5 ...
[17:36:49.772]  - Finding globals in 'X' for chunk #1 ...
[17:36:49.772]    + additional globals found: [n=0] 
[17:36:49.772]    + additional namespaces needed: [n=0] 
[17:36:49.772]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:49.773]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:36:49.773]  - seeds: <none>
[17:36:49.773]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.790] Created future:
[17:36:49.790] MultisessionFuture:
[17:36:49.790] Label: ‘future_lapply-1’
[17:36:49.790] Expression:
[17:36:49.790] {
[17:36:49.790]     do.call(function(...) {
[17:36:49.790]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.790]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.790]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.790]             on.exit(options(oopts), add = TRUE)
[17:36:49.790]         }
[17:36:49.790]         {
[17:36:49.790]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.790]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.790]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.790]             })
[17:36:49.790]         }
[17:36:49.790]     }, args = future.call.arguments)
[17:36:49.790] }
[17:36:49.790] Lazy evaluation: FALSE
[17:36:49.790] Asynchronous evaluation: TRUE
[17:36:49.790] Local evaluation: TRUE
[17:36:49.790] Environment: R_GlobalEnv
[17:36:49.790] Capture standard output: TRUE
[17:36:49.790] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.790] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.790] Packages: <none>
[17:36:49.790] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.790] Resolved: FALSE
[17:36:49.790] Value: <not collected>
[17:36:49.790] Conditions captured: <none>
[17:36:49.790] Early signaling: FALSE
[17:36:49.790] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.790] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.802] Chunk #1 of 5 ... DONE
[17:36:49.802] Chunk #2 of 5 ...
[17:36:49.802]  - Finding globals in 'X' for chunk #2 ...
[17:36:49.802]    + additional globals found: [n=0] 
[17:36:49.802]    + additional namespaces needed: [n=0] 
[17:36:49.802]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:49.802]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:36:49.802]  - seeds: <none>
[17:36:49.803]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.820] Created future:
[17:36:49.820] MultisessionFuture:
[17:36:49.820] Label: ‘future_lapply-2’
[17:36:49.820] Expression:
[17:36:49.820] {
[17:36:49.820]     do.call(function(...) {
[17:36:49.820]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.820]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.820]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.820]             on.exit(options(oopts), add = TRUE)
[17:36:49.820]         }
[17:36:49.820]         {
[17:36:49.820]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.820]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.820]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.820]             })
[17:36:49.820]         }
[17:36:49.820]     }, args = future.call.arguments)
[17:36:49.820] }
[17:36:49.820] Lazy evaluation: FALSE
[17:36:49.820] Asynchronous evaluation: TRUE
[17:36:49.820] Local evaluation: TRUE
[17:36:49.820] Environment: R_GlobalEnv
[17:36:49.820] Capture standard output: TRUE
[17:36:49.820] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.820] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.820] Packages: <none>
[17:36:49.820] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.820] Resolved: FALSE
[17:36:49.820] Value: <not collected>
[17:36:49.820] Conditions captured: <none>
[17:36:49.820] Early signaling: FALSE
[17:36:49.820] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.820] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.831] Chunk #2 of 5 ... DONE
[17:36:49.831] Chunk #3 of 5 ...
[17:36:49.832]  - Finding globals in 'X' for chunk #3 ...
[17:36:49.832]    + additional globals found: [n=0] 
[17:36:49.832]    + additional namespaces needed: [n=0] 
[17:36:49.832]  - Finding globals in 'X' for chunk #3 ... DONE
[17:36:49.832]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:36:49.832]  - seeds: <none>
[17:36:49.833]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.860] Created future:
[17:36:49.860] MultisessionFuture:
[17:36:49.860] Label: ‘future_lapply-3’
[17:36:49.860] Expression:
[17:36:49.860] {
[17:36:49.860]     do.call(function(...) {
[17:36:49.860]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.860]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.860]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.860]             on.exit(options(oopts), add = TRUE)
[17:36:49.860]         }
[17:36:49.860]         {
[17:36:49.860]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.860]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.860]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.860]             })
[17:36:49.860]         }
[17:36:49.860]     }, args = future.call.arguments)
[17:36:49.860] }
[17:36:49.860] Lazy evaluation: FALSE
[17:36:49.860] Asynchronous evaluation: TRUE
[17:36:49.860] Local evaluation: TRUE
[17:36:49.860] Environment: R_GlobalEnv
[17:36:49.860] Capture standard output: TRUE
[17:36:49.860] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.860] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.860] Packages: <none>
[17:36:49.860] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.860] Resolved: FALSE
[17:36:49.860] Value: <not collected>
[17:36:49.860] Conditions captured: <none>
[17:36:49.860] Early signaling: FALSE
[17:36:49.860] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.860] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.872] Chunk #3 of 5 ... DONE
[17:36:49.873] Chunk #4 of 5 ...
[17:36:49.873]  - Finding globals in 'X' for chunk #4 ...
[17:36:49.873]    + additional globals found: [n=0] 
[17:36:49.873]    + additional namespaces needed: [n=0] 
[17:36:49.873]  - Finding globals in 'X' for chunk #4 ... DONE
[17:36:49.873]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:36:49.874]  - seeds: <none>
[17:36:49.874]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.902] Created future:
[17:36:49.903] MultisessionFuture:
[17:36:49.903] Label: ‘future_lapply-4’
[17:36:49.903] Expression:
[17:36:49.903] {
[17:36:49.903]     do.call(function(...) {
[17:36:49.903]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.903]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.903]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.903]             on.exit(options(oopts), add = TRUE)
[17:36:49.903]         }
[17:36:49.903]         {
[17:36:49.903]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.903]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.903]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.903]             })
[17:36:49.903]         }
[17:36:49.903]     }, args = future.call.arguments)
[17:36:49.903] }
[17:36:49.903] Lazy evaluation: FALSE
[17:36:49.903] Asynchronous evaluation: TRUE
[17:36:49.903] Local evaluation: TRUE
[17:36:49.903] Environment: R_GlobalEnv
[17:36:49.903] Capture standard output: TRUE
[17:36:49.903] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.903] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.903] Packages: <none>
[17:36:49.903] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.903] Resolved: FALSE
[17:36:49.903] Value: <not collected>
[17:36:49.903] Conditions captured: <none>
[17:36:49.903] Early signaling: FALSE
[17:36:49.903] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.903] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.914] Chunk #4 of 5 ... DONE
[17:36:49.914] Chunk #5 of 5 ...
[17:36:49.914]  - Finding globals in 'X' for chunk #5 ...
[17:36:49.915]    + additional globals found: [n=0] 
[17:36:49.915]    + additional namespaces needed: [n=0] 
[17:36:49.915]  - Finding globals in 'X' for chunk #5 ... DONE
[17:36:49.915]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:36:49.915]  - seeds: <none>
[17:36:49.915]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:49.943] Created future:
[17:36:49.943] MultisessionFuture:
[17:36:49.943] Label: ‘future_lapply-5’
[17:36:49.943] Expression:
[17:36:49.943] {
[17:36:49.943]     do.call(function(...) {
[17:36:49.943]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:49.943]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:49.943]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:49.943]             on.exit(options(oopts), add = TRUE)
[17:36:49.943]         }
[17:36:49.943]         {
[17:36:49.943]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:49.943]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:49.943]                 ...future.FUN(...future.X_jj, ...)
[17:36:49.943]             })
[17:36:49.943]         }
[17:36:49.943]     }, args = future.call.arguments)
[17:36:49.943] }
[17:36:49.943] Lazy evaluation: FALSE
[17:36:49.943] Asynchronous evaluation: TRUE
[17:36:49.943] Local evaluation: TRUE
[17:36:49.943] Environment: R_GlobalEnv
[17:36:49.943] Capture standard output: TRUE
[17:36:49.943] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:49.943] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:49.943] Packages: <none>
[17:36:49.943] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:49.943] Resolved: FALSE
[17:36:49.943] Value: <not collected>
[17:36:49.943] Conditions captured: <none>
[17:36:49.943] Early signaling: FALSE
[17:36:49.943] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:49.943] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:49.955] Chunk #5 of 5 ... DONE
[17:36:49.955] Launching 5 futures (chunks) ... DONE
[17:36:49.955] Resolving 5 futures (chunks) ...
[17:36:49.986]  - Number of value chunks collected: 5
[17:36:49.987] Resolving 5 futures (chunks) ... DONE
[17:36:49.987] Reducing values from 5 chunks ...
[17:36:49.987]  - Number of values collected after concatenation: 10
[17:36:49.987]  - Number of values expected: 10
[17:36:49.987] Reducing values from 5 chunks ... DONE
[17:36:49.987] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:36:49.991] future_lapply() ...
[17:36:49.995] Number of chunks: 2
[17:36:49.995] getGlobalsAndPackagesXApply() ...
[17:36:49.995]  - future.globals: TRUE
[17:36:49.999]  - globals found/used: [n=1] ‘FUN’
[17:36:49.999]  - needed namespaces: [n=0] 
[17:36:49.999] Finding globals ... DONE
[17:36:49.999]  - use_args: TRUE
[17:36:49.999]  - Getting '...' globals ...
[17:36:50.000]    - '...' content: [n=0] 
[17:36:50.000] List of 1
[17:36:50.000]  $ ...: list()
[17:36:50.000]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.000]  - attr(*, "where")=List of 1
[17:36:50.000]   ..$ ...:<environment: 0x5569a0a46110> 
[17:36:50.000]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.000]  - attr(*, "resolved")= logi TRUE
[17:36:50.000]  - attr(*, "total_size")= num NA
[17:36:50.002]  - Getting '...' globals ... DONE
[17:36:50.002] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:50.002] List of 2
[17:36:50.002]  $ ...future.FUN:function (x)  
[17:36:50.002]  $ ...          : list()
[17:36:50.002]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.002]  - attr(*, "where")=List of 2
[17:36:50.002]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:50.002]   ..$ ...          :<environment: 0x5569a0a46110> 
[17:36:50.002]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.002]  - attr(*, "resolved")= logi FALSE
[17:36:50.002]  - attr(*, "total_size")= num 1840
[17:36:50.005] Packages to be attached in all futures: [n=0] 
[17:36:50.005] getGlobalsAndPackagesXApply() ... DONE
[17:36:50.005] Number of futures (= number of chunks): 2
[17:36:50.005] Launching 2 futures (chunks) ...
[17:36:50.005] Chunk #1 of 2 ...
[17:36:50.006]  - Finding globals in 'X' for chunk #1 ...
[17:36:50.006]    + additional globals found: [n=0] 
[17:36:50.006]    + additional namespaces needed: [n=0] 
[17:36:50.006]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:50.006]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:36:50.006]  - seeds: <none>
[17:36:50.006]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:50.023] Created future:
[17:36:50.023] MultisessionFuture:
[17:36:50.023] Label: ‘future_lapply-1’
[17:36:50.023] Expression:
[17:36:50.023] {
[17:36:50.023]     do.call(function(...) {
[17:36:50.023]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:50.023]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:50.023]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:50.023]             on.exit(options(oopts), add = TRUE)
[17:36:50.023]         }
[17:36:50.023]         {
[17:36:50.023]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:50.023]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:50.023]                 ...future.FUN(...future.X_jj, ...)
[17:36:50.023]             })
[17:36:50.023]         }
[17:36:50.023]     }, args = future.call.arguments)
[17:36:50.023] }
[17:36:50.023] Lazy evaluation: FALSE
[17:36:50.023] Asynchronous evaluation: TRUE
[17:36:50.023] Local evaluation: TRUE
[17:36:50.023] Environment: R_GlobalEnv
[17:36:50.023] Capture standard output: TRUE
[17:36:50.023] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:50.023] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:50.023] Packages: <none>
[17:36:50.023] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:50.023] Resolved: FALSE
[17:36:50.023] Value: <not collected>
[17:36:50.023] Conditions captured: <none>
[17:36:50.023] Early signaling: FALSE
[17:36:50.023] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:50.023] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:50.035] Chunk #1 of 2 ... DONE
[17:36:50.035] Chunk #2 of 2 ...
[17:36:50.035]  - Finding globals in 'X' for chunk #2 ...
[17:36:50.035]    + additional globals found: [n=0] 
[17:36:50.036]    + additional namespaces needed: [n=0] 
[17:36:50.036]  - Finding globals in 'X' for chunk #2 ... DONE
[17:36:50.036]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:36:50.036]  - seeds: <none>
[17:36:50.036]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:50.054] Created future:
[17:36:50.054] MultisessionFuture:
[17:36:50.054] Label: ‘future_lapply-2’
[17:36:50.054] Expression:
[17:36:50.054] {
[17:36:50.054]     do.call(function(...) {
[17:36:50.054]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:50.054]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:50.054]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:50.054]             on.exit(options(oopts), add = TRUE)
[17:36:50.054]         }
[17:36:50.054]         {
[17:36:50.054]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:50.054]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:50.054]                 ...future.FUN(...future.X_jj, ...)
[17:36:50.054]             })
[17:36:50.054]         }
[17:36:50.054]     }, args = future.call.arguments)
[17:36:50.054] }
[17:36:50.054] Lazy evaluation: FALSE
[17:36:50.054] Asynchronous evaluation: TRUE
[17:36:50.054] Local evaluation: TRUE
[17:36:50.054] Environment: R_GlobalEnv
[17:36:50.054] Capture standard output: TRUE
[17:36:50.054] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:50.054] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:50.054] Packages: <none>
[17:36:50.054] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:50.054] Resolved: FALSE
[17:36:50.054] Value: <not collected>
[17:36:50.054] Conditions captured: <none>
[17:36:50.054] Early signaling: FALSE
[17:36:50.054] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:50.054] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:50.066] Chunk #2 of 2 ... DONE
[17:36:50.066] Launching 2 futures (chunks) ... DONE
[17:36:50.066] Resolving 2 futures (chunks) ...
[17:36:50.098]  - Number of value chunks collected: 2
[17:36:50.099] Resolving 2 futures (chunks) ... DONE
[17:36:50.099] Reducing values from 2 chunks ...
[17:36:50.099]  - Number of values collected after concatenation: 10
[17:36:50.099]  - Number of values expected: 10
[17:36:50.099] Reducing values from 2 chunks ... DONE
[17:36:50.099] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:36:50.103] future_lapply() ...
[17:36:50.107] Number of chunks: 1
[17:36:50.107] getGlobalsAndPackagesXApply() ...
[17:36:50.107]  - future.globals: TRUE
[17:36:50.109]  - globals found/used: [n=1] ‘FUN’
[17:36:50.109]  - needed namespaces: [n=0] 
[17:36:50.109] Finding globals ... DONE
[17:36:50.109]  - use_args: TRUE
[17:36:50.109]  - Getting '...' globals ...
[17:36:50.109]    - '...' content: [n=0] 
[17:36:50.109] List of 1
[17:36:50.109]  $ ...: list()
[17:36:50.109]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.109]  - attr(*, "where")=List of 1
[17:36:50.109]   ..$ ...:<environment: 0x55699f9bf378> 
[17:36:50.109]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.109]  - attr(*, "resolved")= logi TRUE
[17:36:50.109]  - attr(*, "total_size")= num NA
[17:36:50.112]  - Getting '...' globals ... DONE
[17:36:50.112] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:50.112] List of 2
[17:36:50.112]  $ ...future.FUN:function (x)  
[17:36:50.112]  $ ...          : list()
[17:36:50.112]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.112]  - attr(*, "where")=List of 2
[17:36:50.112]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:50.112]   ..$ ...          :<environment: 0x55699f9bf378> 
[17:36:50.112]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.112]  - attr(*, "resolved")= logi FALSE
[17:36:50.112]  - attr(*, "total_size")= num 1840
[17:36:50.115] Packages to be attached in all futures: [n=0] 
[17:36:50.115] getGlobalsAndPackagesXApply() ... DONE
[17:36:50.115] Number of futures (= number of chunks): 1
[17:36:50.115] Launching 1 futures (chunks) ...
[17:36:50.115] Chunk #1 of 1 ...
[17:36:50.115]  - Finding globals in 'X' for chunk #1 ...
[17:36:50.116]    + additional globals found: [n=0] 
[17:36:50.116]    + additional namespaces needed: [n=0] 
[17:36:50.116]  - Finding globals in 'X' for chunk #1 ... DONE
[17:36:50.116]  - seeds: <none>
[17:36:50.116]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:36:50.133] Created future:
[17:36:50.133] MultisessionFuture:
[17:36:50.133] Label: ‘future_lapply-1’
[17:36:50.133] Expression:
[17:36:50.133] {
[17:36:50.133]     do.call(function(...) {
[17:36:50.133]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:36:50.133]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:36:50.133]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:36:50.133]             on.exit(options(oopts), add = TRUE)
[17:36:50.133]         }
[17:36:50.133]         {
[17:36:50.133]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:36:50.133]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:36:50.133]                 ...future.FUN(...future.X_jj, ...)
[17:36:50.133]             })
[17:36:50.133]         }
[17:36:50.133]     }, args = future.call.arguments)
[17:36:50.133] }
[17:36:50.133] Lazy evaluation: FALSE
[17:36:50.133] Asynchronous evaluation: TRUE
[17:36:50.133] Local evaluation: TRUE
[17:36:50.133] Environment: R_GlobalEnv
[17:36:50.133] Capture standard output: TRUE
[17:36:50.133] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:36:50.133] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:36:50.133] Packages: <none>
[17:36:50.133] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:36:50.133] Resolved: FALSE
[17:36:50.133] Value: <not collected>
[17:36:50.133] Conditions captured: <none>
[17:36:50.133] Early signaling: FALSE
[17:36:50.133] Owner process: 91c4846f-49a1-f606-032a-48eeb9a6319f
[17:36:50.133] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:36:50.147] Chunk #1 of 1 ... DONE
[17:36:50.147] Launching 1 futures (chunks) ... DONE
[17:36:50.147] Resolving 1 futures (chunks) ...
[17:36:50.179]  - Number of value chunks collected: 1
[17:36:50.179] Resolving 1 futures (chunks) ... DONE
[17:36:50.179] Reducing values from 1 chunks ...
[17:36:50.179]  - Number of values collected after concatenation: 10
[17:36:50.179]  - Number of values expected: 10
[17:36:50.179] Reducing values from 1 chunks ... DONE
[17:36:50.179] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[17:36:50.183] future_lapply() ...
[17:36:50.187] Number of chunks: 1
[17:36:50.187] getGlobalsAndPackagesXApply() ...
[17:36:50.187] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[17:36:50.187] future_lapply() ...
[17:36:50.191] Number of chunks: 1
[17:36:50.191] getGlobalsAndPackagesXApply() ...
[17:36:50.191]  - future.globals: <name-value list> with names ‘1’
[17:36:50.191] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:36:50.191] future_lapply() ...
[17:36:50.195] Number of chunks: 1
[17:36:50.195] getGlobalsAndPackagesXApply() ...
[17:36:50.195]  - future.globals: ‘...future.FUN’
[17:36:50.195]  - use_args: TRUE
[17:36:50.195] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:36:50.195] future_lapply() ...
[17:36:50.199] Number of chunks: 1
[17:36:50.199] getGlobalsAndPackagesXApply() ...
[17:36:50.199]  - future.globals: ‘...future.FUN’
[17:36:50.199]  - use_args: TRUE
[17:36:50.199] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[17:36:50.199] future_lapply() ...
[17:36:50.203] Number of chunks: 1
[17:36:50.203] getGlobalsAndPackagesXApply() ...
[17:36:50.203]  - future.globals: TRUE
[17:36:50.204]  - globals found/used: [n=1] ‘FUN’
[17:36:50.204]  - needed namespaces: [n=0] 
[17:36:50.205] Finding globals ... DONE
[17:36:50.205]  - use_args: TRUE
[17:36:50.205]  - Getting '...' globals ...
[17:36:50.205]    - '...' content: [n=0] 
[17:36:50.205] List of 1
[17:36:50.205]  $ ...: list()
[17:36:50.205]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.205]  - attr(*, "where")=List of 1
[17:36:50.205]   ..$ ...:<environment: 0x55699ea20b28> 
[17:36:50.205]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.205]  - attr(*, "resolved")= logi TRUE
[17:36:50.205]  - attr(*, "total_size")= num NA
[17:36:50.208]  - Getting '...' globals ... DONE
[17:36:50.208] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:36:50.208] List of 2
[17:36:50.208]  $ ...future.FUN:function (f)  
[17:36:50.208]  $ ...          : list()
[17:36:50.208]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:36:50.208]  - attr(*, "where")=List of 2
[17:36:50.208]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:36:50.208]   ..$ ...          :<environment: 0x55699ea20b28> 
[17:36:50.208]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:36:50.208]  - attr(*, "resolved")= logi FALSE
[17:36:50.208]  - attr(*, "total_size")= num 336
[17:36:50.211] Packages to be attached in all futures: [n=0] 
[17:36:50.211] getGlobalsAndPackagesXApply() ... DONE
[17:36:50.211] Number of futures (= number of chunks): 1
[17:36:50.211] Launching 1 futures (chunks) ...
[17:36:50.211] Chunk #1 of 1 ...
[17:36:50.211]  - Finding globals in 'X' for chunk #1 ...
[17:36:50.212]    + additional globals found: [n=1] ‘...future.elements_ii’
[17:36:50.212]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
