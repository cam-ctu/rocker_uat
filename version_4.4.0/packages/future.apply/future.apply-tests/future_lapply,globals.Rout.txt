
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[09:28:27.746] plan(): Setting new future strategy stack:
[09:28:27.747] List of future strategies:
[09:28:27.747] 1. sequential:
[09:28:27.747]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[09:28:27.747]    - tweaked: FALSE
[09:28:27.747]    - call: future::plan("sequential")
[09:28:27.760] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[09:28:28.294] future_lapply() ...
[09:28:28.298] Number of chunks: 1
[09:28:28.299] getGlobalsAndPackagesXApply() ...
[09:28:28.299]  - future.globals: FALSE
[09:28:28.301]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[09:28:28.302]  - needed namespaces: [n=0] 
[09:28:28.302] Finding globals ... DONE
[09:28:28.302]  - use_args: TRUE
[09:28:28.302]  - Getting '...' globals ...
[09:28:28.303]    - '...' content: [n=0] 
[09:28:28.303] List of 1
[09:28:28.303]  $ ...: list()
[09:28:28.303]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.303]  - attr(*, "where")=List of 1
[09:28:28.303]   ..$ ...:<environment: 0x55f693f612e8> 
[09:28:28.303]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.303]  - attr(*, "resolved")= logi TRUE
[09:28:28.303]  - attr(*, "total_size")= num NA
[09:28:28.305]  - Getting '...' globals ... DONE
[09:28:28.306] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[09:28:28.306] List of 3
[09:28:28.306]  $ ...future.FUN        :function (x)  
[09:28:28.306]  $ future.call.arguments: list()
[09:28:28.306]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.306]  $ ...                  : list()
[09:28:28.306]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.306]  - attr(*, "where")=List of 3
[09:28:28.306]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[09:28:28.306]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[09:28:28.306]   ..$ ...                  :<environment: 0x55f693f612e8> 
[09:28:28.306]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.306]  - attr(*, "resolved")= logi FALSE
[09:28:28.306]  - attr(*, "total_size")= num 3824
[09:28:28.310] Packages to be attached in all futures: [n=1] ‘utils’
[09:28:28.310] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.310] Number of futures (= number of chunks): 1
[09:28:28.310] Launching 1 futures (chunks) ...
[09:28:28.310] Chunk #1 of 1 ...
[09:28:28.310]  - seeds: <none>
[09:28:28.311]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.320] Created future:
[09:28:28.320] ClusterFuture:
[09:28:28.320] Label: ‘future_lapply-1’
[09:28:28.320] Expression:
[09:28:28.320] {
[09:28:28.320]     do.call(function(...) {
[09:28:28.320]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.320]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.320]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.320]             on.exit(options(oopts), add = TRUE)
[09:28:28.320]         }
[09:28:28.320]         {
[09:28:28.320]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.320]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.320]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.320]             })
[09:28:28.320]         }
[09:28:28.320]     }, args = future.call.arguments)
[09:28:28.320] }
[09:28:28.320] Lazy evaluation: FALSE
[09:28:28.320] Asynchronous evaluation: TRUE
[09:28:28.320] Local evaluation: TRUE
[09:28:28.320] Environment: R_GlobalEnv
[09:28:28.320] Capture standard output: TRUE
[09:28:28.320] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.320] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.320] Packages: 1 packages (‘utils’)
[09:28:28.320] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.320] Resolved: FALSE
[09:28:28.320] Value: <not collected>
[09:28:28.320] Conditions captured: <none>
[09:28:28.320] Early signaling: FALSE
[09:28:28.320] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.320] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.333] Chunk #1 of 1 ... DONE
[09:28:28.333] Launching 1 futures (chunks) ... DONE
[09:28:28.333] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[09:28:28.376] future_lapply() ...
[09:28:28.377] Number of chunks: 1
[09:28:28.377] getGlobalsAndPackagesXApply() ...
[09:28:28.377]  - future.globals: TRUE
[09:28:28.381]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[09:28:28.381]  - needed namespaces: [n=1] ‘stats’
[09:28:28.381] Finding globals ... DONE
[09:28:28.381]  - use_args: TRUE
[09:28:28.381]  - Getting '...' globals ...
[09:28:28.382]    - '...' content: [n=0] 
[09:28:28.382] List of 1
[09:28:28.382]  $ ...: list()
[09:28:28.382]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.382]  - attr(*, "where")=List of 1
[09:28:28.382]   ..$ ...:<environment: 0x55f695de6408> 
[09:28:28.382]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.382]  - attr(*, "resolved")= logi TRUE
[09:28:28.382]  - attr(*, "total_size")= num NA
[09:28:28.385]  - Getting '...' globals ... DONE
[09:28:28.385] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[09:28:28.385] List of 4
[09:28:28.385]  $ ...future.FUN:function (x)  
[09:28:28.385]  $ a            : num 1
[09:28:28.385]  $ b            : num 2
[09:28:28.385]  $ ...          : list()
[09:28:28.385]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.385]  - attr(*, "where")=List of 4
[09:28:28.385]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.385]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:28.385]   ..$ b            :<environment: R_EmptyEnv> 
[09:28:28.385]   ..$ ...          :<environment: 0x55f695de6408> 
[09:28:28.385]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.385]  - attr(*, "resolved")= logi FALSE
[09:28:28.385]  - attr(*, "total_size")= num 3936
[09:28:28.390] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[09:28:28.390] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.390] Number of futures (= number of chunks): 1
[09:28:28.390] Launching 1 futures (chunks) ...
[09:28:28.390] Chunk #1 of 1 ...
[09:28:28.390]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.394]    + additional globals found: [n=0] 
[09:28:28.394]    + additional namespaces needed: [n=0] 
[09:28:28.394]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.394]  - seeds: <none>
[09:28:28.394]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.406] Created future:
[09:28:28.406] ClusterFuture:
[09:28:28.406] Label: ‘future_lapply-1’
[09:28:28.406] Expression:
[09:28:28.406] {
[09:28:28.406]     do.call(function(...) {
[09:28:28.406]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.406]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.406]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.406]             on.exit(options(oopts), add = TRUE)
[09:28:28.406]         }
[09:28:28.406]         {
[09:28:28.406]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.406]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.406]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.406]             })
[09:28:28.406]         }
[09:28:28.406]     }, args = future.call.arguments)
[09:28:28.406] }
[09:28:28.406] Lazy evaluation: FALSE
[09:28:28.406] Asynchronous evaluation: TRUE
[09:28:28.406] Local evaluation: TRUE
[09:28:28.406] Environment: R_GlobalEnv
[09:28:28.406] Capture standard output: TRUE
[09:28:28.406] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.406] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[09:28:28.406] Packages: 2 packages (‘stats’, ‘utils’)
[09:28:28.406] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.406] Resolved: FALSE
[09:28:28.406] Value: <not collected>
[09:28:28.406] Conditions captured: <none>
[09:28:28.406] Early signaling: FALSE
[09:28:28.406] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.406] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.418] Chunk #1 of 1 ... DONE
[09:28:28.418] Launching 1 futures (chunks) ... DONE
[09:28:28.418] Resolving 1 futures (chunks) ...
[09:28:28.460]  - Number of value chunks collected: 1
[09:28:28.460] Resolving 1 futures (chunks) ... DONE
[09:28:28.460] Reducing values from 1 chunks ...
[09:28:28.461]  - Number of values collected after concatenation: 1
[09:28:28.461]  - Number of values expected: 1
[09:28:28.461] Reducing values from 1 chunks ... DONE
[09:28:28.461] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[09:28:28.461] future_lapply() ...
[09:28:28.462] Number of chunks: 1
[09:28:28.462] getGlobalsAndPackagesXApply() ...
[09:28:28.462]  - future.globals: ‘a’, ‘b’
[09:28:28.462]  - use_args: TRUE
[09:28:28.462] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[09:28:28.462] List of 4
[09:28:28.462]  $ a            : num 1
[09:28:28.462]  $ b            : num 2
[09:28:28.462]  $ ...future.FUN:function (x)  
[09:28:28.462]  $ ...          : list()
[09:28:28.462]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.462]  - attr(*, "where")=List of 4
[09:28:28.462]   ..$ a            :<environment: R_GlobalEnv> 
[09:28:28.462]   ..$ b            :<environment: R_GlobalEnv> 
[09:28:28.462]   ..$ ...future.FUN:<environment: 0x55f694c79d48> 
[09:28:28.462]   ..$ ...          :<environment: 0x55f694c79d48> 
[09:28:28.462]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.462]  - attr(*, "resolved")= logi FALSE
[09:28:28.462]  - attr(*, "total_size")= num NA
[09:28:28.466] Packages to be attached in all futures: [n=1] ‘utils’
[09:28:28.466] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.466] Number of futures (= number of chunks): 1
[09:28:28.467] Launching 1 futures (chunks) ...
[09:28:28.467] Chunk #1 of 1 ...
[09:28:28.467]  - seeds: <none>
[09:28:28.467]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.476] Created future:
[09:28:28.477] ClusterFuture:
[09:28:28.477] Label: ‘future_lapply-1’
[09:28:28.477] Expression:
[09:28:28.477] {
[09:28:28.477]     do.call(function(...) {
[09:28:28.477]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.477]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.477]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.477]             on.exit(options(oopts), add = TRUE)
[09:28:28.477]         }
[09:28:28.477]         {
[09:28:28.477]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.477]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.477]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.477]             })
[09:28:28.477]         }
[09:28:28.477]     }, args = future.call.arguments)
[09:28:28.477] }
[09:28:28.477] Lazy evaluation: FALSE
[09:28:28.477] Asynchronous evaluation: TRUE
[09:28:28.477] Local evaluation: TRUE
[09:28:28.477] Environment: R_GlobalEnv
[09:28:28.477] Capture standard output: TRUE
[09:28:28.477] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.477] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[09:28:28.477] Packages: 1 packages (‘utils’)
[09:28:28.477] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.477] Resolved: FALSE
[09:28:28.477] Value: <not collected>
[09:28:28.477] Conditions captured: <none>
[09:28:28.477] Early signaling: FALSE
[09:28:28.477] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.477] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.488] Chunk #1 of 1 ... DONE
[09:28:28.488] Launching 1 futures (chunks) ... DONE
[09:28:28.488] Resolving 1 futures (chunks) ...
[09:28:28.530]  - Number of value chunks collected: 1
[09:28:28.531] Resolving 1 futures (chunks) ... DONE
[09:28:28.531] Reducing values from 1 chunks ...
[09:28:28.531]  - Number of values collected after concatenation: 1
[09:28:28.531]  - Number of values expected: 1
[09:28:28.531] Reducing values from 1 chunks ... DONE
[09:28:28.531] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[09:28:28.531] future_lapply() ...
[09:28:28.532] Number of chunks: 1
[09:28:28.532] getGlobalsAndPackagesXApply() ...
[09:28:28.532]  - future.globals: <name-value list> with names ‘2’, ‘3’
[09:28:28.532]  - use_args: TRUE
[09:28:28.532]  - Getting '...' globals ...
[09:28:28.533]    - '...' content: [n=0] 
[09:28:28.533] List of 1
[09:28:28.533]  $ ...: list()
[09:28:28.533]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.533]  - attr(*, "where")=List of 1
[09:28:28.533]   ..$ ...:<environment: 0x55f693ff16c0> 
[09:28:28.533]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.533]  - attr(*, "resolved")= logi TRUE
[09:28:28.533]  - attr(*, "total_size")= num NA
[09:28:28.535]  - Getting '...' globals ... DONE
[09:28:28.535] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[09:28:28.535] List of 4
[09:28:28.535]  $ a            : num 2
[09:28:28.535]  $ b            : num 3
[09:28:28.535]  $ ...future.FUN:function (x)  
[09:28:28.535]  $ ...          : list()
[09:28:28.535]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.535]  - attr(*, "where")=List of 4
[09:28:28.535]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:28.535]   ..$ b            :<environment: R_EmptyEnv> 
[09:28:28.535]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[09:28:28.535]   ..$ ...          :<environment: 0x55f693ff16c0> 
[09:28:28.535]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.535]  - attr(*, "resolved")= logi FALSE
[09:28:28.535]  - attr(*, "total_size")= num NA
[09:28:28.539] Packages to be attached in all futures: [n=1] ‘utils’
[09:28:28.539] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.539] Number of futures (= number of chunks): 1
[09:28:28.539] Launching 1 futures (chunks) ...
[09:28:28.540] Chunk #1 of 1 ...
[09:28:28.540]  - seeds: <none>
[09:28:28.540]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.549] Created future:
[09:28:28.549] ClusterFuture:
[09:28:28.549] Label: ‘future_lapply-1’
[09:28:28.549] Expression:
[09:28:28.549] {
[09:28:28.549]     do.call(function(...) {
[09:28:28.549]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.549]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.549]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.549]             on.exit(options(oopts), add = TRUE)
[09:28:28.549]         }
[09:28:28.549]         {
[09:28:28.549]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.549]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.549]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.549]             })
[09:28:28.549]         }
[09:28:28.549]     }, args = future.call.arguments)
[09:28:28.549] }
[09:28:28.549] Lazy evaluation: FALSE
[09:28:28.549] Asynchronous evaluation: TRUE
[09:28:28.549] Local evaluation: TRUE
[09:28:28.549] Environment: R_GlobalEnv
[09:28:28.549] Capture standard output: TRUE
[09:28:28.549] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.549] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[09:28:28.549] Packages: 1 packages (‘utils’)
[09:28:28.549] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.549] Resolved: FALSE
[09:28:28.549] Value: <not collected>
[09:28:28.549] Conditions captured: <none>
[09:28:28.549] Early signaling: FALSE
[09:28:28.549] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.549] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.561] Chunk #1 of 1 ... DONE
[09:28:28.561] Launching 1 futures (chunks) ... DONE
[09:28:28.561] Resolving 1 futures (chunks) ...
[09:28:28.603]  - Number of value chunks collected: 1
[09:28:28.603] Resolving 1 futures (chunks) ... DONE
[09:28:28.603] Reducing values from 1 chunks ...
[09:28:28.603]  - Number of values collected after concatenation: 1
[09:28:28.604]  - Number of values expected: 1
[09:28:28.604] Reducing values from 1 chunks ... DONE
[09:28:28.604] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[09:28:28.604] future_lapply() ...
[09:28:28.605] Number of chunks: 1
[09:28:28.605] getGlobalsAndPackagesXApply() ...
[09:28:28.605]  - future.globals: FALSE
[09:28:28.606]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[09:28:28.606]  - needed namespaces: [n=0] 
[09:28:28.606] Finding globals ... DONE
[09:28:28.606]  - use_args: TRUE
[09:28:28.606]  - Getting '...' globals ...
[09:28:28.607]    - '...' content: [n=0] 
[09:28:28.607] List of 1
[09:28:28.607]  $ ...: list()
[09:28:28.607]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.607]  - attr(*, "where")=List of 1
[09:28:28.607]   ..$ ...:<environment: 0x55f695d91870> 
[09:28:28.607]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.607]  - attr(*, "resolved")= logi TRUE
[09:28:28.607]  - attr(*, "total_size")= num NA
[09:28:28.609]  - Getting '...' globals ... DONE
[09:28:28.609] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[09:28:28.609] List of 4
[09:28:28.609]  $ d                    : num 42
[09:28:28.609]  $ ...future.FUN        :function (x)  
[09:28:28.609]  $ future.call.arguments: list()
[09:28:28.609]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.609]  $ ...                  : list()
[09:28:28.609]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.609]  - attr(*, "where")=List of 4
[09:28:28.609]   ..$ d                    :<environment: R_EmptyEnv> 
[09:28:28.609]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[09:28:28.609]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[09:28:28.609]   ..$ ...                  :<environment: 0x55f695d91870> 
[09:28:28.609]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.609]  - attr(*, "resolved")= logi FALSE
[09:28:28.609]  - attr(*, "total_size")= num 784
[09:28:28.613] Packages to be attached in all futures: [n=0] 
[09:28:28.613] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.613] Number of futures (= number of chunks): 1
[09:28:28.613] Launching 1 futures (chunks) ...
[09:28:28.613] Chunk #1 of 1 ...
[09:28:28.614]  - seeds: <none>
[09:28:28.614]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.624] Created future:
[09:28:28.624] ClusterFuture:
[09:28:28.624] Label: ‘future_lapply-1’
[09:28:28.624] Expression:
[09:28:28.624] {
[09:28:28.624]     do.call(function(...) {
[09:28:28.624]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.624]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.624]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.624]             on.exit(options(oopts), add = TRUE)
[09:28:28.624]         }
[09:28:28.624]         {
[09:28:28.624]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.624]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.624]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.624]             })
[09:28:28.624]         }
[09:28:28.624]     }, args = future.call.arguments)
[09:28:28.624] }
[09:28:28.624] Lazy evaluation: FALSE
[09:28:28.624] Asynchronous evaluation: TRUE
[09:28:28.624] Local evaluation: TRUE
[09:28:28.624] Environment: R_GlobalEnv
[09:28:28.624] Capture standard output: TRUE
[09:28:28.624] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.624] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:28.624] Packages: <none>
[09:28:28.624] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.624] Resolved: TRUE
[09:28:28.624] Value: <not collected>
[09:28:28.624] Conditions captured: <none>
[09:28:28.624] Early signaling: FALSE
[09:28:28.624] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.624] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.627] Chunk #1 of 1 ... DONE
[09:28:28.627] Launching 1 futures (chunks) ... DONE
[09:28:28.627] Resolving 1 futures (chunks) ...
[09:28:28.627]  - Number of value chunks collected: 1
[09:28:28.627] Resolving 1 futures (chunks) ... DONE
[09:28:28.627] Reducing values from 1 chunks ...
[09:28:28.627]  - Number of values collected after concatenation: 2
[09:28:28.627]  - Number of values expected: 2
[09:28:28.628] Reducing values from 1 chunks ... DONE
[09:28:28.628] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[09:28:28.628] future_lapply() ...
[09:28:28.628] Number of chunks: 1
[09:28:28.629] getGlobalsAndPackagesXApply() ...
[09:28:28.629]  - future.globals: TRUE
[09:28:28.630]  - globals found/used: [n=1] ‘FUN’
[09:28:28.630]  - needed namespaces: [n=0] 
[09:28:28.630] Finding globals ... DONE
[09:28:28.631]  - use_args: TRUE
[09:28:28.631]  - Getting '...' globals ...
[09:28:28.631]    - '...' content: [n=0] 
[09:28:28.631] List of 1
[09:28:28.631]  $ ...: list()
[09:28:28.631]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.631]  - attr(*, "where")=List of 1
[09:28:28.631]   ..$ ...:<environment: 0x55f69514ec90> 
[09:28:28.631]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.631]  - attr(*, "resolved")= logi TRUE
[09:28:28.631]  - attr(*, "total_size")= num NA
[09:28:28.633]  - Getting '...' globals ... DONE
[09:28:28.633] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.634] List of 2
[09:28:28.634]  $ ...future.FUN:function (x)  
[09:28:28.634]  $ ...          : list()
[09:28:28.634]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.634]  - attr(*, "where")=List of 2
[09:28:28.634]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.634]   ..$ ...          :<environment: 0x55f69514ec90> 
[09:28:28.634]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.634]  - attr(*, "resolved")= logi FALSE
[09:28:28.634]  - attr(*, "total_size")= num 728
[09:28:28.636] Packages to be attached in all futures: [n=0] 
[09:28:28.636] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.636] Number of futures (= number of chunks): 1
[09:28:28.636] Launching 1 futures (chunks) ...
[09:28:28.637] Chunk #1 of 1 ...
[09:28:28.637]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.637]    + additional globals found: [n=0] 
[09:28:28.637]    + additional namespaces needed: [n=0] 
[09:28:28.637]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.637]  - seeds: <none>
[09:28:28.637]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.646] Created future:
[09:28:28.646] ClusterFuture:
[09:28:28.646] Label: ‘future_lapply-1’
[09:28:28.646] Expression:
[09:28:28.646] {
[09:28:28.646]     do.call(function(...) {
[09:28:28.646]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.646]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.646]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.646]             on.exit(options(oopts), add = TRUE)
[09:28:28.646]         }
[09:28:28.646]         {
[09:28:28.646]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.646]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.646]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.646]             })
[09:28:28.646]         }
[09:28:28.646]     }, args = future.call.arguments)
[09:28:28.646] }
[09:28:28.646] Lazy evaluation: FALSE
[09:28:28.646] Asynchronous evaluation: TRUE
[09:28:28.646] Local evaluation: TRUE
[09:28:28.646] Environment: R_GlobalEnv
[09:28:28.646] Capture standard output: TRUE
[09:28:28.646] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.646] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.646] Packages: <none>
[09:28:28.646] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.646] Resolved: TRUE
[09:28:28.646] Value: <not collected>
[09:28:28.646] Conditions captured: <none>
[09:28:28.646] Early signaling: FALSE
[09:28:28.646] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.646] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:28.648] Chunk #1 of 1 ... DONE
[09:28:28.648] Launching 1 futures (chunks) ... DONE
[09:28:28.648] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[09:28:28.699] future_lapply() ...
[09:28:28.700] Number of chunks: 1
[09:28:28.700] getGlobalsAndPackagesXApply() ...
[09:28:28.700]  - future.globals: TRUE
[09:28:28.705]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[09:28:28.705]  - needed namespaces: [n=0] 
[09:28:28.705] Finding globals ... DONE
[09:28:28.705]  - use_args: TRUE
[09:28:28.705]  - Getting '...' globals ...
[09:28:28.706]    - '...' content: [n=0] 
[09:28:28.706] List of 1
[09:28:28.706]  $ ...: list()
[09:28:28.706]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.706]  - attr(*, "where")=List of 1
[09:28:28.706]   ..$ ...:<environment: 0x55f695c0e520> 
[09:28:28.706]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.706]  - attr(*, "resolved")= logi TRUE
[09:28:28.706]  - attr(*, "total_size")= num NA
[09:28:28.708]  - Getting '...' globals ... DONE
[09:28:28.709] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[09:28:28.709] List of 6
[09:28:28.709]  $ ...future.FUN:function (i)  
[09:28:28.709]  $ caller       :function (a, b, FUN = call_my_add)  
[09:28:28.709]  $ args         :List of 1
[09:28:28.709]   ..$ FUN:function (a, b)  
[09:28:28.709]  $ call_my_add  :function (a, b)  
[09:28:28.709]  $ my_add       :function (a, b)  
[09:28:28.709]  $ ...          : list()
[09:28:28.709]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.709]  - attr(*, "where")=List of 6
[09:28:28.709]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.709]   ..$ caller       :<environment: R_EmptyEnv> 
[09:28:28.709]   ..$ args         :<environment: R_EmptyEnv> 
[09:28:28.709]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[09:28:28.709]   ..$ my_add       :<environment: R_EmptyEnv> 
[09:28:28.709]   ..$ ...          :<environment: 0x55f695c0e520> 
[09:28:28.709]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.709]  - attr(*, "resolved")= logi FALSE
[09:28:28.709]  - attr(*, "total_size")= num 6664
[09:28:28.715] Packages to be attached in all futures: [n=0] 
[09:28:28.715] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.715] Number of futures (= number of chunks): 1
[09:28:28.715] Launching 1 futures (chunks) ...
[09:28:28.715] Chunk #1 of 1 ...
[09:28:28.715]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.715]    + additional globals found: [n=0] 
[09:28:28.716]    + additional namespaces needed: [n=0] 
[09:28:28.716]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.716]  - seeds: <none>
[09:28:28.716]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.721] Created future:
[09:28:28.721] SequentialFuture:
[09:28:28.721] Label: ‘future_lapply-1’
[09:28:28.721] Expression:
[09:28:28.721] {
[09:28:28.721]     do.call(function(...) {
[09:28:28.721]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.721]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.721]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.721]             on.exit(options(oopts), add = TRUE)
[09:28:28.721]         }
[09:28:28.721]         {
[09:28:28.721]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.721]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.721]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.721]             })
[09:28:28.721]         }
[09:28:28.721]     }, args = future.call.arguments)
[09:28:28.721] }
[09:28:28.721] Lazy evaluation: FALSE
[09:28:28.721] Asynchronous evaluation: FALSE
[09:28:28.721] Local evaluation: TRUE
[09:28:28.721] Environment: 0x55f695c0e980
[09:28:28.721] Capture standard output: TRUE
[09:28:28.721] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.721] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[09:28:28.721] Packages: <none>
[09:28:28.721] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.721] Resolved: TRUE
[09:28:28.721] Value: 168 bytes of class ‘list’
[09:28:28.721] Early signaling: FALSE
[09:28:28.721] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.721] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.722] Chunk #1 of 1 ... DONE
[09:28:28.722] Launching 1 futures (chunks) ... DONE
[09:28:28.723] Resolving 1 futures (chunks) ...
[09:28:28.723]  - Number of value chunks collected: 1
[09:28:28.723] Resolving 1 futures (chunks) ... DONE
[09:28:28.723] Reducing values from 1 chunks ...
[09:28:28.723]  - Number of values collected after concatenation: 3
[09:28:28.723]  - Number of values expected: 3
[09:28:28.724] Reducing values from 1 chunks ... DONE
[09:28:28.724] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[09:28:28.724] future_lapply() ...
[09:28:28.727] Number of chunks: 1
[09:28:28.727] getGlobalsAndPackagesXApply() ...
[09:28:28.727]  - future.globals: TRUE
[09:28:28.730]  - globals found/used: [n=1] ‘FUN’
[09:28:28.730]  - needed namespaces: [n=0] 
[09:28:28.730] Finding globals ... DONE
[09:28:28.730]  - use_args: TRUE
[09:28:28.730]  - Getting '...' globals ...
[09:28:28.730]    - '...' content: [n=1] ‘what’
[09:28:28.730] List of 1
[09:28:28.730]  $ ...:List of 1
[09:28:28.730]   ..$ what:function (x)  
[09:28:28.730]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.730]  - attr(*, "where")=List of 1
[09:28:28.730]   ..$ ...:<environment: 0x55f694a4d5c0> 
[09:28:28.730]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.730]  - attr(*, "resolved")= logi TRUE
[09:28:28.730]  - attr(*, "total_size")= num NA
[09:28:28.733]  - Getting '...' globals ... DONE
[09:28:28.733] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.733] List of 2
[09:28:28.733]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:28.733]  $ ...          :List of 1
[09:28:28.733]   ..$ what:function (x)  
[09:28:28.733]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.733]  - attr(*, "where")=List of 2
[09:28:28.733]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.733]   ..$ ...          :<environment: 0x55f694a4d5c0> 
[09:28:28.733]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.733]  - attr(*, "resolved")= logi FALSE
[09:28:28.733]  - attr(*, "total_size")= num 12192
[09:28:28.736] Packages to be attached in all futures: [n=0] 
[09:28:28.736] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.737] Number of futures (= number of chunks): 1
[09:28:28.737] Launching 1 futures (chunks) ...
[09:28:28.737] Chunk #1 of 1 ...
[09:28:28.737]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.737]    + additional globals found: [n=0] 
[09:28:28.737]    + additional namespaces needed: [n=0] 
[09:28:28.737]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.737]  - seeds: <none>
[09:28:28.738]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.740] Created future:
[09:28:28.740] SequentialFuture:
[09:28:28.740] Label: ‘future_lapply-1’
[09:28:28.740] Expression:
[09:28:28.740] {
[09:28:28.740]     do.call(function(...) {
[09:28:28.740]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.740]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.740]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.740]             on.exit(options(oopts), add = TRUE)
[09:28:28.740]         }
[09:28:28.740]         {
[09:28:28.740]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.740]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.740]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.740]             })
[09:28:28.740]         }
[09:28:28.740]     }, args = future.call.arguments)
[09:28:28.740] }
[09:28:28.740] Lazy evaluation: FALSE
[09:28:28.740] Asynchronous evaluation: FALSE
[09:28:28.740] Local evaluation: TRUE
[09:28:28.740] Environment: R_GlobalEnv
[09:28:28.740] Capture standard output: TRUE
[09:28:28.740] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.740] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.740] Packages: <none>
[09:28:28.740] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.740] Resolved: TRUE
[09:28:28.740] Value: 56 bytes of class ‘list’
[09:28:28.740] Early signaling: FALSE
[09:28:28.740] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.740] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.741] Chunk #1 of 1 ... DONE
[09:28:28.741] Launching 1 futures (chunks) ... DONE
[09:28:28.741] Resolving 1 futures (chunks) ...
[09:28:28.741]  - Number of value chunks collected: 1
[09:28:28.741] Resolving 1 futures (chunks) ... DONE
[09:28:28.742] Reducing values from 1 chunks ...
[09:28:28.742]  - Number of values collected after concatenation: 1
[09:28:28.742]  - Number of values expected: 1
[09:28:28.742] Reducing values from 1 chunks ... DONE
[09:28:28.742] future_lapply() ... DONE
[09:28:28.742] future_lapply() ...
[09:28:28.743] Number of chunks: 1
[09:28:28.743] getGlobalsAndPackagesXApply() ...
[09:28:28.743]  - future.globals: TRUE
[09:28:28.746]  - globals found/used: [n=1] ‘FUN’
[09:28:28.746]  - needed namespaces: [n=0] 
[09:28:28.746] Finding globals ... DONE
[09:28:28.746]  - use_args: TRUE
[09:28:28.746]  - Getting '...' globals ...
[09:28:28.746]    - '...' content: [n=1] ‘what’
[09:28:28.747] List of 1
[09:28:28.747]  $ ...:List of 1
[09:28:28.747]   ..$ what:function (...)  
[09:28:28.747]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.747]  - attr(*, "where")=List of 1
[09:28:28.747]   ..$ ...:<environment: 0x55f695932640> 
[09:28:28.747]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.747]  - attr(*, "resolved")= logi TRUE
[09:28:28.747]  - attr(*, "total_size")= num NA
[09:28:28.749]  - Getting '...' globals ... DONE
[09:28:28.749] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.749] List of 2
[09:28:28.749]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:28.749]  $ ...          :List of 1
[09:28:28.749]   ..$ what:function (...)  
[09:28:28.749]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.749]  - attr(*, "where")=List of 2
[09:28:28.749]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.749]   ..$ ...          :<environment: 0x55f695932640> 
[09:28:28.749]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.749]  - attr(*, "resolved")= logi FALSE
[09:28:28.749]  - attr(*, "total_size")= num 12584
[09:28:28.752] Packages to be attached in all futures: [n=0] 
[09:28:28.752] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.753] Number of futures (= number of chunks): 1
[09:28:28.753] Launching 1 futures (chunks) ...
[09:28:28.753] Chunk #1 of 1 ...
[09:28:28.753]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.753]    + additional globals found: [n=0] 
[09:28:28.753]    + additional namespaces needed: [n=0] 
[09:28:28.753]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.753]  - seeds: <none>
[09:28:28.754]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.756] Created future:
[09:28:28.757] SequentialFuture:
[09:28:28.757] Label: ‘future_lapply-1’
[09:28:28.757] Expression:
[09:28:28.757] {
[09:28:28.757]     do.call(function(...) {
[09:28:28.757]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.757]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.757]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.757]             on.exit(options(oopts), add = TRUE)
[09:28:28.757]         }
[09:28:28.757]         {
[09:28:28.757]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.757]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.757]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.757]             })
[09:28:28.757]         }
[09:28:28.757]     }, args = future.call.arguments)
[09:28:28.757] }
[09:28:28.757] Lazy evaluation: FALSE
[09:28:28.757] Asynchronous evaluation: FALSE
[09:28:28.757] Local evaluation: TRUE
[09:28:28.757] Environment: R_GlobalEnv
[09:28:28.757] Capture standard output: TRUE
[09:28:28.757] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.757] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.757] Packages: <none>
[09:28:28.757] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.757] Resolved: TRUE
[09:28:28.757] Value: 56 bytes of class ‘list’
[09:28:28.757] Early signaling: FALSE
[09:28:28.757] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.757] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.757] Chunk #1 of 1 ... DONE
[09:28:28.758] Launching 1 futures (chunks) ... DONE
[09:28:28.758] Resolving 1 futures (chunks) ...
[09:28:28.758]  - Number of value chunks collected: 1
[09:28:28.758] Resolving 1 futures (chunks) ... DONE
[09:28:28.758] Reducing values from 1 chunks ...
[09:28:28.758]  - Number of values collected after concatenation: 1
[09:28:28.758]  - Number of values expected: 1
[09:28:28.758] Reducing values from 1 chunks ... DONE
[09:28:28.758] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[09:28:28.759] future_lapply() ...
[09:28:28.761] Number of chunks: 1
[09:28:28.761] getGlobalsAndPackagesXApply() ...
[09:28:28.761]  - future.globals: TRUE
[09:28:28.762]  - globals found/used: [n=1] ‘FUN’
[09:28:28.762]  - needed namespaces: [n=0] 
[09:28:28.763] Finding globals ... DONE
[09:28:28.763]  - use_args: TRUE
[09:28:28.763]  - Getting '...' globals ...
[09:28:28.763]    - '...' content: [n=1] ‘b’
[09:28:28.763] List of 1
[09:28:28.763]  $ ...:List of 1
[09:28:28.763]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:28.763]   .. ..$ a: int [1:2] 1 2
[09:28:28.763]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.763]  - attr(*, "where")=List of 1
[09:28:28.763]   ..$ ...:<environment: 0x55f6963569a0> 
[09:28:28.763]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.763]  - attr(*, "resolved")= logi TRUE
[09:28:28.763]  - attr(*, "total_size")= num NA
[09:28:28.766]  - Getting '...' globals ... DONE
[09:28:28.766] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.766] List of 2
[09:28:28.766]  $ ...future.FUN:function (a, b)  
[09:28:28.766]  $ ...          :List of 1
[09:28:28.766]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:28.766]   .. ..$ a: int [1:2] 1 2
[09:28:28.766]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.766]  - attr(*, "where")=List of 2
[09:28:28.766]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.766]   ..$ ...          :<environment: 0x55f6963569a0> 
[09:28:28.766]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.766]  - attr(*, "resolved")= logi FALSE
[09:28:28.766]  - attr(*, "total_size")= num 1440
[09:28:28.770] Packages to be attached in all futures: [n=0] 
[09:28:28.770] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.770] Number of futures (= number of chunks): 1
[09:28:28.770] Launching 1 futures (chunks) ...
[09:28:28.770] Chunk #1 of 1 ...
[09:28:28.770]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.770]    + additional globals found: [n=0] 
[09:28:28.771]    + additional namespaces needed: [n=0] 
[09:28:28.771]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.771]  - seeds: <none>
[09:28:28.771]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.773] Created future:
[09:28:28.773] SequentialFuture:
[09:28:28.773] Label: ‘future_lapply-1’
[09:28:28.773] Expression:
[09:28:28.773] {
[09:28:28.773]     do.call(function(...) {
[09:28:28.773]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.773]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.773]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.773]             on.exit(options(oopts), add = TRUE)
[09:28:28.773]         }
[09:28:28.773]         {
[09:28:28.773]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.773]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.773]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.773]             })
[09:28:28.773]         }
[09:28:28.773]     }, args = future.call.arguments)
[09:28:28.773] }
[09:28:28.773] Lazy evaluation: FALSE
[09:28:28.773] Asynchronous evaluation: FALSE
[09:28:28.773] Local evaluation: TRUE
[09:28:28.773] Environment: R_GlobalEnv
[09:28:28.773] Capture standard output: TRUE
[09:28:28.773] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.773] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.773] Packages: <none>
[09:28:28.773] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.773] Resolved: TRUE
[09:28:28.773] Value: 112 bytes of class ‘list’
[09:28:28.773] Early signaling: FALSE
[09:28:28.773] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.773] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.774] Chunk #1 of 1 ... DONE
[09:28:28.774] Launching 1 futures (chunks) ... DONE
[09:28:28.774] Resolving 1 futures (chunks) ...
[09:28:28.774]  - Number of value chunks collected: 1
[09:28:28.775] Resolving 1 futures (chunks) ... DONE
[09:28:28.775] Reducing values from 1 chunks ...
[09:28:28.775]  - Number of values collected after concatenation: 1
[09:28:28.775]  - Number of values expected: 1
[09:28:28.775] Reducing values from 1 chunks ... DONE
[09:28:28.775] future_lapply() ... DONE
[09:28:28.775] future_lapply() ...
[09:28:28.775] Number of chunks: 1
[09:28:28.776] getGlobalsAndPackagesXApply() ...
[09:28:28.776]  - future.globals: TRUE
[09:28:28.777]  - globals found/used: [n=1] ‘FUN’
[09:28:28.777]  - needed namespaces: [n=0] 
[09:28:28.777] Finding globals ... DONE
[09:28:28.777]  - use_args: TRUE
[09:28:28.777]  - Getting '...' globals ...
[09:28:28.778]    - '...' content: [n=1] ‘b’
[09:28:28.778] List of 1
[09:28:28.778]  $ ...:List of 1
[09:28:28.778]   ..$ b:<environment: 0x55f6945da618> 
[09:28:28.778]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.778]  - attr(*, "where")=List of 1
[09:28:28.778]   ..$ ...:<environment: 0x55f6945db0d0> 
[09:28:28.778]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.778]  - attr(*, "resolved")= logi TRUE
[09:28:28.778]  - attr(*, "total_size")= num NA
[09:28:28.781]  - Getting '...' globals ... DONE
[09:28:28.781] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.781] List of 2
[09:28:28.781]  $ ...future.FUN:function (a, b)  
[09:28:28.781]  $ ...          :List of 1
[09:28:28.781]   ..$ b:<environment: 0x55f6945da618> 
[09:28:28.781]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.781]  - attr(*, "where")=List of 2
[09:28:28.781]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.781]   ..$ ...          :<environment: 0x55f6945db0d0> 
[09:28:28.781]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.781]  - attr(*, "resolved")= logi FALSE
[09:28:28.781]  - attr(*, "total_size")= num 1440
[09:28:28.784] Packages to be attached in all futures: [n=0] 
[09:28:28.784] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.784] Number of futures (= number of chunks): 1
[09:28:28.784] Launching 1 futures (chunks) ...
[09:28:28.784] Chunk #1 of 1 ...
[09:28:28.784]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.784]    + additional globals found: [n=0] 
[09:28:28.785]    + additional namespaces needed: [n=0] 
[09:28:28.785]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.785]  - seeds: <none>
[09:28:28.785]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.787] Created future:
[09:28:28.787] SequentialFuture:
[09:28:28.787] Label: ‘future_lapply-1’
[09:28:28.787] Expression:
[09:28:28.787] {
[09:28:28.787]     do.call(function(...) {
[09:28:28.787]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.787]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.787]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.787]             on.exit(options(oopts), add = TRUE)
[09:28:28.787]         }
[09:28:28.787]         {
[09:28:28.787]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.787]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.787]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.787]             })
[09:28:28.787]         }
[09:28:28.787]     }, args = future.call.arguments)
[09:28:28.787] }
[09:28:28.787] Lazy evaluation: FALSE
[09:28:28.787] Asynchronous evaluation: FALSE
[09:28:28.787] Local evaluation: TRUE
[09:28:28.787] Environment: R_GlobalEnv
[09:28:28.787] Capture standard output: TRUE
[09:28:28.787] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.787] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.787] Packages: <none>
[09:28:28.787] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.787] Resolved: TRUE
[09:28:28.787] Value: 120 bytes of class ‘list’
[09:28:28.787] Early signaling: FALSE
[09:28:28.787] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.787] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.788] Chunk #1 of 1 ... DONE
[09:28:28.788] Launching 1 futures (chunks) ... DONE
[09:28:28.788] Resolving 1 futures (chunks) ...
[09:28:28.788]  - Number of value chunks collected: 1
[09:28:28.789] Resolving 1 futures (chunks) ... DONE
[09:28:28.789] Reducing values from 1 chunks ...
[09:28:28.789]  - Number of values collected after concatenation: 1
[09:28:28.789]  - Number of values expected: 1
[09:28:28.789] Reducing values from 1 chunks ... DONE
[09:28:28.789] future_lapply() ... DONE
[09:28:28.789] future_lapply() ...
[09:28:28.790] Number of chunks: 1
[09:28:28.790] getGlobalsAndPackagesXApply() ...
[09:28:28.790]  - future.globals: TRUE
[09:28:28.792]  - globals found/used: [n=1] ‘FUN’
[09:28:28.792]  - needed namespaces: [n=0] 
[09:28:28.792] Finding globals ... DONE
[09:28:28.792]  - use_args: TRUE
[09:28:28.792]  - Getting '...' globals ...
[09:28:28.792]    - '...' content: [n=1] ‘b’
[09:28:28.793] List of 1
[09:28:28.793]  $ ...:List of 1
[09:28:28.793]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:28.793]   .. .. ..@ slots     :List of 4
[09:28:28.793]   .. .. .. ..$ .Data  : chr "function"
[09:28:28.793]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. ..$ target : chr "signature"
[09:28:28.793]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. ..$ defined: chr "signature"
[09:28:28.793]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. ..$ generic: chr "character"
[09:28:28.793]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. ..@ contains  :List of 3
[09:28:28.793]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.793]   .. .. ..@ virtual   : logi FALSE
[09:28:28.793]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:28.793]  list()
[09:28:28.793]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:28.793]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:28.793]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:28.793]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:28.793]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:28.793]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:28.793]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:28.793]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:28.793]   .. .. .. .. ..$ generic: chr(0) 
[09:28:28.793]   .. .. ..@ validity  : NULL
[09:28:28.793]   .. .. ..@ access    : list()
[09:28:28.793]   .. .. ..@ className : chr "MethodDefinition"
[09:28:28.793]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. ..@ subclasses:List of 7
[09:28:28.793]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.793]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.793]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.793]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.793]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.793]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.793]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.793]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.793]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:28.793]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.793]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.793]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.793]   .. .. ..@ versionKey:<externalptr> 
[09:28:28.793]   .. .. ..@ sealed    : logi TRUE
[09:28:28.793]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.793]  - attr(*, "where")=List of 1
[09:28:28.793]   ..$ ...:<environment: 0x55f695a5a4a0> 
[09:28:28.793]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.793]  - attr(*, "resolved")= logi TRUE
[09:28:28.793]  - attr(*, "total_size")= num NA
[09:28:28.837]  - Getting '...' globals ... DONE
[09:28:28.837] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.837] List of 2
[09:28:28.837]  $ ...future.FUN:function (a, b)  
[09:28:28.837]  $ ...          :List of 1
[09:28:28.837]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:28.837]   .. .. ..@ slots     :List of 4
[09:28:28.837]   .. .. .. ..$ .Data  : chr "function"
[09:28:28.837]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. ..$ target : chr "signature"
[09:28:28.837]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. ..$ defined: chr "signature"
[09:28:28.837]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. ..$ generic: chr "character"
[09:28:28.837]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. ..@ contains  :List of 3
[09:28:28.837]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.837]   .. .. ..@ virtual   : logi FALSE
[09:28:28.837]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:28.837]  list()
[09:28:28.837]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:28.837]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:28.837]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:28.837]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:28.837]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:28.837]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:28.837]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:28.837]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:28.837]   .. .. .. .. ..$ generic: chr(0) 
[09:28:28.837]   .. .. ..@ validity  : NULL
[09:28:28.837]   .. .. ..@ access    : list()
[09:28:28.837]   .. .. ..@ className : chr "MethodDefinition"
[09:28:28.837]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. ..@ subclasses:List of 7
[09:28:28.837]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 1
[09:28:28.837]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.837]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.837]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:28.837]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:28.837]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:28.837]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:28.837]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:28.837]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:28.837]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:28.837]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:28.837]   .. .. .. .. .. ..@ distance  : num 2
[09:28:28.837]   .. .. ..@ versionKey:<externalptr> 
[09:28:28.837]   .. .. ..@ sealed    : logi TRUE
[09:28:28.837]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.837]  - attr(*, "where")=List of 2
[09:28:28.837]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.837]   ..$ ...          :<environment: 0x55f695a5a4a0> 
[09:28:28.837]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.837]  - attr(*, "resolved")= logi FALSE
[09:28:28.837]  - attr(*, "total_size")= num 405168
[09:28:28.883] Packages to be attached in all futures: [n=0] 
[09:28:28.883] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.883] Number of futures (= number of chunks): 1
[09:28:28.883] Launching 1 futures (chunks) ...
[09:28:28.883] Chunk #1 of 1 ...
[09:28:28.883]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.883]    + additional globals found: [n=0] 
[09:28:28.884]    + additional namespaces needed: [n=0] 
[09:28:28.884]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.884]  - seeds: <none>
[09:28:28.884]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.886] Created future:
[09:28:28.886] SequentialFuture:
[09:28:28.886] Label: ‘future_lapply-1’
[09:28:28.886] Expression:
[09:28:28.886] {
[09:28:28.886]     do.call(function(...) {
[09:28:28.886]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.886]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.886]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.886]             on.exit(options(oopts), add = TRUE)
[09:28:28.886]         }
[09:28:28.886]         {
[09:28:28.886]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.886]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.886]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.886]             })
[09:28:28.886]         }
[09:28:28.886]     }, args = future.call.arguments)
[09:28:28.886] }
[09:28:28.886] Lazy evaluation: FALSE
[09:28:28.886] Asynchronous evaluation: FALSE
[09:28:28.886] Local evaluation: TRUE
[09:28:28.886] Environment: R_GlobalEnv
[09:28:28.886] Capture standard output: TRUE
[09:28:28.886] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.886] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.886] Packages: <none>
[09:28:28.886] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.886] Resolved: TRUE
[09:28:28.886] Value: 112 bytes of class ‘list’
[09:28:28.886] Early signaling: FALSE
[09:28:28.886] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.886] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.887] Chunk #1 of 1 ... DONE
[09:28:28.887] Launching 1 futures (chunks) ... DONE
[09:28:28.887] Resolving 1 futures (chunks) ...
[09:28:28.888]  - Number of value chunks collected: 1
[09:28:28.888] Resolving 1 futures (chunks) ... DONE
[09:28:28.888] Reducing values from 1 chunks ...
[09:28:28.888]  - Number of values collected after concatenation: 1
[09:28:28.888]  - Number of values expected: 1
[09:28:28.888] Reducing values from 1 chunks ... DONE
[09:28:28.888] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[09:28:28.890] future_lapply() ...
[09:28:28.890] Number of chunks: 1
[09:28:28.891] getGlobalsAndPackagesXApply() ...
[09:28:28.891]  - future.globals: TRUE
[09:28:28.892]  - globals found/used: [n=1] ‘FUN’
[09:28:28.892]  - needed namespaces: [n=0] 
[09:28:28.892] Finding globals ... DONE
[09:28:28.892]  - use_args: TRUE
[09:28:28.892]  - Getting '...' globals ...
[09:28:28.893]    - '...' content: [n=0] 
[09:28:28.893] List of 1
[09:28:28.893]  $ ...: list()
[09:28:28.893]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.893]  - attr(*, "where")=List of 1
[09:28:28.893]   ..$ ...:<environment: 0x55f694a118a8> 
[09:28:28.893]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.893]  - attr(*, "resolved")= logi TRUE
[09:28:28.893]  - attr(*, "total_size")= num NA
[09:28:28.895]  - Getting '...' globals ... DONE
[09:28:28.895] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:28.895] List of 2
[09:28:28.895]  $ ...future.FUN:function (f)  
[09:28:28.895]  $ ...          : list()
[09:28:28.895]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.895]  - attr(*, "where")=List of 2
[09:28:28.895]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.895]   ..$ ...          :<environment: 0x55f694a118a8> 
[09:28:28.895]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.895]  - attr(*, "resolved")= logi FALSE
[09:28:28.895]  - attr(*, "total_size")= num 1008
[09:28:28.898] Packages to be attached in all futures: [n=0] 
[09:28:28.898] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.898] Number of futures (= number of chunks): 1
[09:28:28.898] Launching 1 futures (chunks) ...
[09:28:28.898] Chunk #1 of 1 ...
[09:28:28.898]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.900]    + additional globals found: [n=2] ‘a’, ‘b’
[09:28:28.900]    + additional namespaces needed: [n=1] ‘tools’
[09:28:28.901]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.901]  - seeds: <none>
[09:28:28.901]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[09:28:28.903] Created future:
[09:28:28.903] SequentialFuture:
[09:28:28.903] Label: ‘future_lapply-1’
[09:28:28.903] Expression:
[09:28:28.903] {
[09:28:28.903]     do.call(function(...) {
[09:28:28.903]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.903]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.903]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.903]             on.exit(options(oopts), add = TRUE)
[09:28:28.903]         }
[09:28:28.903]         {
[09:28:28.903]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.903]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.903]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.903]             })
[09:28:28.903]         }
[09:28:28.903]     }, args = future.call.arguments)
[09:28:28.903] }
[09:28:28.903] Lazy evaluation: FALSE
[09:28:28.903] Asynchronous evaluation: FALSE
[09:28:28.903] Local evaluation: TRUE
[09:28:28.903] Environment: R_GlobalEnv
[09:28:28.903] Capture standard output: TRUE
[09:28:28.903] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.903] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[09:28:28.903] Packages: 1 packages (‘tools’)
[09:28:28.903] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.903] Resolved: TRUE
[09:28:28.903] Value: 224 bytes of class ‘list’
[09:28:28.903] Early signaling: FALSE
[09:28:28.903] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.903] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.904] Chunk #1 of 1 ... DONE
[09:28:28.905] Launching 1 futures (chunks) ... DONE
[09:28:28.905] Resolving 1 futures (chunks) ...
[09:28:28.905]  - Number of value chunks collected: 1
[09:28:28.905] Resolving 1 futures (chunks) ... DONE
[09:28:28.905] Reducing values from 1 chunks ...
[09:28:28.905]  - Number of values collected after concatenation: 4
[09:28:28.905]  - Number of values expected: 4
[09:28:28.905] Reducing values from 1 chunks ... DONE
[09:28:28.906] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[09:28:28.908] future_lapply() ...
[09:28:28.909] Number of chunks: 1
[09:28:28.909] getGlobalsAndPackagesXApply() ...
[09:28:28.909]  - future.globals: TRUE
[09:28:28.911]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[09:28:28.911]  - needed namespaces: [n=0] 
[09:28:28.911] Finding globals ... DONE
[09:28:28.911]  - use_args: TRUE
[09:28:28.911]  - Getting '...' globals ...
[09:28:28.912]    - '...' content: [n=0] 
[09:28:28.912] List of 1
[09:28:28.912]  $ ...: list()
[09:28:28.912]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.912]  - attr(*, "where")=List of 1
[09:28:28.912]   ..$ ...:<environment: 0x55f695956048> 
[09:28:28.912]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.912]  - attr(*, "resolved")= logi TRUE
[09:28:28.912]  - attr(*, "total_size")= num NA
[09:28:28.914]  - Getting '...' globals ... DONE
[09:28:28.914] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[09:28:28.914] List of 3
[09:28:28.914]  $ ...future.FUN        :function (x)  
[09:28:28.914]  $ future.call.arguments:List of 1
[09:28:28.914]   ..$ a: num 1
[09:28:28.914]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.914]  $ ...                  : list()
[09:28:28.914]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.914]  - attr(*, "where")=List of 3
[09:28:28.914]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[09:28:28.914]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[09:28:28.914]   ..$ ...                  :<environment: 0x55f695956048> 
[09:28:28.914]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.914]  - attr(*, "resolved")= logi FALSE
[09:28:28.914]  - attr(*, "total_size")= num 1272
[09:28:28.918] Packages to be attached in all futures: [n=0] 
[09:28:28.918] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.918] Number of futures (= number of chunks): 1
[09:28:28.918] Launching 1 futures (chunks) ...
[09:28:28.918] Chunk #1 of 1 ...
[09:28:28.918]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.919]    + additional globals found: [n=0] 
[09:28:28.919]    + additional namespaces needed: [n=0] 
[09:28:28.919]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.919]  - seeds: <none>
[09:28:28.919]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.921] Created future:
[09:28:28.921] SequentialFuture:
[09:28:28.921] Label: ‘future_lapply-1’
[09:28:28.921] Expression:
[09:28:28.921] {
[09:28:28.921]     do.call(function(...) {
[09:28:28.921]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.921]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.921]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.921]             on.exit(options(oopts), add = TRUE)
[09:28:28.921]         }
[09:28:28.921]         {
[09:28:28.921]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.921]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.921]                 ...future.FUN(...future.X_jj)
[09:28:28.921]             })
[09:28:28.921]         }
[09:28:28.921]     }, args = future.call.arguments)
[09:28:28.921] }
[09:28:28.921] Lazy evaluation: FALSE
[09:28:28.921] Asynchronous evaluation: FALSE
[09:28:28.921] Local evaluation: TRUE
[09:28:28.921] Environment: 0x55f6959563c8
[09:28:28.921] Capture standard output: TRUE
[09:28:28.921] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.921] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:28.921] Packages: <none>
[09:28:28.921] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.921] Resolved: TRUE
[09:28:28.921] Value: 56 bytes of class ‘list’
[09:28:28.921] Early signaling: FALSE
[09:28:28.921] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.921] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.922] Chunk #1 of 1 ... DONE
[09:28:28.922] Launching 1 futures (chunks) ... DONE
[09:28:28.923] Resolving 1 futures (chunks) ...
[09:28:28.923]  - Number of value chunks collected: 1
[09:28:28.923] Resolving 1 futures (chunks) ... DONE
[09:28:28.923] Reducing values from 1 chunks ...
[09:28:28.923]  - Number of values collected after concatenation: 1
[09:28:28.923]  - Number of values expected: 1
[09:28:28.923] Reducing values from 1 chunks ... DONE
[09:28:28.923] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[09:28:28.925] future_lapply() ...
[09:28:28.927] Number of chunks: 1
[09:28:28.927] getGlobalsAndPackagesXApply() ...
[09:28:28.927]  - future.globals: TRUE
[09:28:28.929]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:28.929]  - needed namespaces: [n=0] 
[09:28:28.929] Finding globals ... DONE
[09:28:28.929]  - use_args: TRUE
[09:28:28.929]  - Getting '...' globals ...
[09:28:28.929]    - '...' content: [n=0] 
[09:28:28.929] List of 1
[09:28:28.929]  $ ...: list()
[09:28:28.929]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.929]  - attr(*, "where")=List of 1
[09:28:28.929]   ..$ ...:<environment: 0x55f696333588> 
[09:28:28.929]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.929]  - attr(*, "resolved")= logi TRUE
[09:28:28.929]  - attr(*, "total_size")= num NA
[09:28:28.932]  - Getting '...' globals ... DONE
[09:28:28.932] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:28.932] List of 3
[09:28:28.932]  $ ...future.FUN:function (ii)  
[09:28:28.932]  $ a            : num 1
[09:28:28.932]  $ ...          : list()
[09:28:28.932]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.932]  - attr(*, "where")=List of 3
[09:28:28.932]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.932]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:28.932]   ..$ ...          :<environment: 0x55f696333588> 
[09:28:28.932]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.932]  - attr(*, "resolved")= logi FALSE
[09:28:28.932]  - attr(*, "total_size")= num 2984
[09:28:28.935] Packages to be attached in all futures: [n=0] 
[09:28:28.935] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.935] Number of futures (= number of chunks): 1
[09:28:28.935] Launching 1 futures (chunks) ...
[09:28:28.935] Chunk #1 of 1 ...
[09:28:28.935]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.936]    + additional globals found: [n=0] 
[09:28:28.936]    + additional namespaces needed: [n=0] 
[09:28:28.936]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.936]  - seeds: <none>
[09:28:28.936]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.938] Created future:
[09:28:28.938] SequentialFuture:
[09:28:28.938] Label: ‘future_lapply-1’
[09:28:28.938] Expression:
[09:28:28.938] {
[09:28:28.938]     do.call(function(...) {
[09:28:28.938]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.938]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.938]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.938]             on.exit(options(oopts), add = TRUE)
[09:28:28.938]         }
[09:28:28.938]         {
[09:28:28.938]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.938]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.938]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.938]             })
[09:28:28.938]         }
[09:28:28.938]     }, args = future.call.arguments)
[09:28:28.938] }
[09:28:28.938] Lazy evaluation: FALSE
[09:28:28.938] Asynchronous evaluation: FALSE
[09:28:28.938] Local evaluation: TRUE
[09:28:28.938] Environment: R_GlobalEnv
[09:28:28.938] Capture standard output: TRUE
[09:28:28.938] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.938] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:28.938] Packages: <none>
[09:28:28.938] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.938] Resolved: TRUE
[09:28:28.938] Value: 56 bytes of class ‘list’
[09:28:28.938] Early signaling: FALSE
[09:28:28.938] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.938] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.939] Chunk #1 of 1 ... DONE
[09:28:28.939] Launching 1 futures (chunks) ... DONE
[09:28:28.939] Resolving 1 futures (chunks) ...
[09:28:28.940]  - Number of value chunks collected: 1
[09:28:28.940] Resolving 1 futures (chunks) ... DONE
[09:28:28.940] Reducing values from 1 chunks ...
[09:28:28.940]  - Number of values collected after concatenation: 1
[09:28:28.940]  - Number of values expected: 1
[09:28:28.940] Reducing values from 1 chunks ... DONE
[09:28:28.940] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[09:28:28.940] future_lapply() ...
[09:28:28.941] Number of chunks: 1
[09:28:28.941] getGlobalsAndPackagesXApply() ...
[09:28:28.941]  - future.globals: TRUE
[09:28:28.943]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:28.943]  - needed namespaces: [n=0] 
[09:28:28.943] Finding globals ... DONE
[09:28:28.944]  - use_args: TRUE
[09:28:28.944]  - Getting '...' globals ...
[09:28:28.944]    - '...' content: [n=0] 
[09:28:28.944] List of 1
[09:28:28.944]  $ ...: list()
[09:28:28.944]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.944]  - attr(*, "where")=List of 1
[09:28:28.944]   ..$ ...:<environment: 0x55f6945533a8> 
[09:28:28.944]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.944]  - attr(*, "resolved")= logi TRUE
[09:28:28.944]  - attr(*, "total_size")= num NA
[09:28:28.946]  - Getting '...' globals ... DONE
[09:28:28.947] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:28.947] List of 3
[09:28:28.947]  $ ...future.FUN:function (ii)  
[09:28:28.947]  $ a            : num 1
[09:28:28.947]  $ ...          : list()
[09:28:28.947]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.947]  - attr(*, "where")=List of 3
[09:28:28.947]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.947]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:28.947]   ..$ ...          :<environment: 0x55f6945533a8> 
[09:28:28.947]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.947]  - attr(*, "resolved")= logi FALSE
[09:28:28.947]  - attr(*, "total_size")= num 2984
[09:28:28.950] Packages to be attached in all futures: [n=0] 
[09:28:28.950] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.950] Number of futures (= number of chunks): 1
[09:28:28.950] Launching 1 futures (chunks) ...
[09:28:28.950] Chunk #1 of 1 ...
[09:28:28.950]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.951]    + additional globals found: [n=0] 
[09:28:28.951]    + additional namespaces needed: [n=0] 
[09:28:28.951]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.951]  - seeds: <none>
[09:28:28.951]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.953] Created future:
[09:28:28.953] SequentialFuture:
[09:28:28.953] Label: ‘future_lapply-1’
[09:28:28.953] Expression:
[09:28:28.953] {
[09:28:28.953]     do.call(function(...) {
[09:28:28.953]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.953]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.953]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.953]             on.exit(options(oopts), add = TRUE)
[09:28:28.953]         }
[09:28:28.953]         {
[09:28:28.953]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.953]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.953]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.953]             })
[09:28:28.953]         }
[09:28:28.953]     }, args = future.call.arguments)
[09:28:28.953] }
[09:28:28.953] Lazy evaluation: FALSE
[09:28:28.953] Asynchronous evaluation: FALSE
[09:28:28.953] Local evaluation: TRUE
[09:28:28.953] Environment: R_GlobalEnv
[09:28:28.953] Capture standard output: TRUE
[09:28:28.953] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.953] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:28.953] Packages: <none>
[09:28:28.953] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.953] Resolved: TRUE
[09:28:28.953] Value: 56 bytes of class ‘list’
[09:28:28.953] Early signaling: FALSE
[09:28:28.953] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.953] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.954] Chunk #1 of 1 ... DONE
[09:28:28.954] Launching 1 futures (chunks) ... DONE
[09:28:28.954] Resolving 1 futures (chunks) ...
[09:28:28.955]  - Number of value chunks collected: 1
[09:28:28.955] Resolving 1 futures (chunks) ... DONE
[09:28:28.955] Reducing values from 1 chunks ...
[09:28:28.955]  - Number of values collected after concatenation: 1
[09:28:28.955]  - Number of values expected: 1
[09:28:28.955] Reducing values from 1 chunks ... DONE
[09:28:28.955] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[09:28:28.955] future_lapply() ...
[09:28:28.956] Number of chunks: 1
[09:28:28.956] getGlobalsAndPackagesXApply() ...
[09:28:28.956]  - future.globals: <name-value list> with names ‘42’
[09:28:28.956]  - use_args: TRUE
[09:28:28.956]  - Getting '...' globals ...
[09:28:28.956]    - '...' content: [n=0] 
[09:28:28.957] List of 1
[09:28:28.957]  $ ...: list()
[09:28:28.957]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.957]  - attr(*, "where")=List of 1
[09:28:28.957]   ..$ ...:<environment: 0x55f695b96a78> 
[09:28:28.957]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.957]  - attr(*, "resolved")= logi TRUE
[09:28:28.957]  - attr(*, "total_size")= num NA
[09:28:28.959]  - Getting '...' globals ... DONE
[09:28:28.959] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[09:28:28.959] List of 3
[09:28:28.959]  $ a            : num 42
[09:28:28.959]  $ ...future.FUN:function (x)  
[09:28:28.959]  $ ...          : list()
[09:28:28.959]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.959]  - attr(*, "where")=List of 3
[09:28:28.959]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:28.959]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[09:28:28.959]   ..$ ...          :<environment: 0x55f695b96a78> 
[09:28:28.959]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.959]  - attr(*, "resolved")= logi FALSE
[09:28:28.959]  - attr(*, "total_size")= num NA
[09:28:28.962] Packages to be attached in all futures: [n=0] 
[09:28:28.962] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.962] Number of futures (= number of chunks): 1
[09:28:28.963] Launching 1 futures (chunks) ...
[09:28:28.963] Chunk #1 of 1 ...
[09:28:28.963]  - seeds: <none>
[09:28:28.963]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:28.965] Created future:
[09:28:28.966] SequentialFuture:
[09:28:28.966] Label: ‘future_lapply-1’
[09:28:28.966] Expression:
[09:28:28.966] {
[09:28:28.966]     do.call(function(...) {
[09:28:28.966]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:28.966]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:28.966]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:28.966]             on.exit(options(oopts), add = TRUE)
[09:28:28.966]         }
[09:28:28.966]         {
[09:28:28.966]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:28.966]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:28.966]                 ...future.FUN(...future.X_jj, ...)
[09:28:28.966]             })
[09:28:28.966]         }
[09:28:28.966]     }, args = future.call.arguments)
[09:28:28.966] }
[09:28:28.966] Lazy evaluation: FALSE
[09:28:28.966] Asynchronous evaluation: FALSE
[09:28:28.966] Local evaluation: TRUE
[09:28:28.966] Environment: R_GlobalEnv
[09:28:28.966] Capture standard output: TRUE
[09:28:28.966] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:28.966] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:28.966] Packages: <none>
[09:28:28.966] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:28.966] Resolved: TRUE
[09:28:28.966] Value: 56 bytes of class ‘list’
[09:28:28.966] Early signaling: FALSE
[09:28:28.966] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:28.966] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[09:28:28.966] Chunk #1 of 1 ... DONE
[09:28:28.967] Launching 1 futures (chunks) ... DONE
[09:28:28.967] Resolving 1 futures (chunks) ...
[09:28:28.967]  - Number of value chunks collected: 1
[09:28:28.967] Resolving 1 futures (chunks) ... DONE
[09:28:28.967] Reducing values from 1 chunks ...
[09:28:28.967]  - Number of values collected after concatenation: 1
[09:28:28.967]  - Number of values expected: 1
[09:28:28.967] Reducing values from 1 chunks ... DONE
[09:28:28.968] future_lapply() ... DONE
List of 1
 $ : num 42
[09:28:28.976] future_lapply() ...
[09:28:28.981] Number of chunks: 2
[09:28:28.981] getGlobalsAndPackagesXApply() ...
[09:28:28.981]  - future.globals: TRUE
[09:28:28.985]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[09:28:28.985]  - needed namespaces: [n=0] 
[09:28:28.986] Finding globals ... DONE
[09:28:28.986]  - use_args: TRUE
[09:28:28.986]  - Getting '...' globals ...
[09:28:28.986]    - '...' content: [n=0] 
[09:28:28.986] List of 1
[09:28:28.986]  $ ...: list()
[09:28:28.986]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.986]  - attr(*, "where")=List of 1
[09:28:28.986]   ..$ ...:<environment: 0x55f695011840> 
[09:28:28.986]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.986]  - attr(*, "resolved")= logi TRUE
[09:28:28.986]  - attr(*, "total_size")= num NA
[09:28:28.988]  - Getting '...' globals ... DONE
[09:28:28.989] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[09:28:28.989] List of 6
[09:28:28.989]  $ ...future.FUN:function (i)  
[09:28:28.989]  $ caller       :function (a, b, FUN = call_my_add)  
[09:28:28.989]  $ args         :List of 1
[09:28:28.989]   ..$ FUN:function (a, b)  
[09:28:28.989]  $ call_my_add  :function (a, b)  
[09:28:28.989]  $ my_add       :function (a, b)  
[09:28:28.989]  $ ...          : list()
[09:28:28.989]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:28.989]  - attr(*, "where")=List of 6
[09:28:28.989]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:28.989]   ..$ caller       :<environment: R_EmptyEnv> 
[09:28:28.989]   ..$ args         :<environment: R_EmptyEnv> 
[09:28:28.989]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[09:28:28.989]   ..$ my_add       :<environment: R_EmptyEnv> 
[09:28:28.989]   ..$ ...          :<environment: 0x55f695011840> 
[09:28:28.989]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:28.989]  - attr(*, "resolved")= logi FALSE
[09:28:28.989]  - attr(*, "total_size")= num 24120
[09:28:28.993] Packages to be attached in all futures: [n=0] 
[09:28:28.993] getGlobalsAndPackagesXApply() ... DONE
[09:28:28.993] Number of futures (= number of chunks): 2
[09:28:28.993] Launching 2 futures (chunks) ...
[09:28:28.994] Chunk #1 of 2 ...
[09:28:28.994]  - Finding globals in 'X' for chunk #1 ...
[09:28:28.994]    + additional globals found: [n=0] 
[09:28:28.994]    + additional namespaces needed: [n=0] 
[09:28:28.994]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:28.994]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:28.994]  - seeds: <none>
[09:28:28.994]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.003] Created future:
[09:28:29.003] MulticoreFuture:
[09:28:29.003] Label: ‘future_lapply-1’
[09:28:29.003] Expression:
[09:28:29.003] {
[09:28:29.003]     do.call(function(...) {
[09:28:29.003]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.003]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.003]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.003]             on.exit(options(oopts), add = TRUE)
[09:28:29.003]         }
[09:28:29.003]         {
[09:28:29.003]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.003]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.003]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.003]             })
[09:28:29.003]         }
[09:28:29.003]     }, args = future.call.arguments)
[09:28:29.003] }
[09:28:29.003] Lazy evaluation: FALSE
[09:28:29.003] Asynchronous evaluation: TRUE
[09:28:29.003] Local evaluation: TRUE
[09:28:29.003] Environment: 0x55f695327d60
[09:28:29.003] Capture standard output: TRUE
[09:28:29.003] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.003] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[09:28:29.003] Packages: <none>
[09:28:29.003] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.003] Resolved: TRUE
[09:28:29.003] Value: <not collected>
[09:28:29.003] Conditions captured: <none>
[09:28:29.003] Early signaling: FALSE
[09:28:29.003] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.003] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.011] Chunk #1 of 2 ... DONE
[09:28:29.011] Chunk #2 of 2 ...
[09:28:29.011]  - Finding globals in 'X' for chunk #2 ...
[09:28:29.012]    + additional globals found: [n=0] 
[09:28:29.012]    + additional namespaces needed: [n=0] 
[09:28:29.012]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:29.012]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:29.012]  - seeds: <none>
[09:28:29.013]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.021] Created future:
[09:28:29.022] MulticoreFuture:
[09:28:29.022] Label: ‘future_lapply-2’
[09:28:29.022] Expression:
[09:28:29.022] {
[09:28:29.022]     do.call(function(...) {
[09:28:29.022]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.022]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.022]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.022]             on.exit(options(oopts), add = TRUE)
[09:28:29.022]         }
[09:28:29.022]         {
[09:28:29.022]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.022]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.022]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.022]             })
[09:28:29.022]         }
[09:28:29.022]     }, args = future.call.arguments)
[09:28:29.022] }
[09:28:29.022] Lazy evaluation: FALSE
[09:28:29.022] Asynchronous evaluation: TRUE
[09:28:29.022] Local evaluation: TRUE
[09:28:29.022] Environment: 0x55f695327d60
[09:28:29.022] Capture standard output: TRUE
[09:28:29.022] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.022] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[09:28:29.022] Packages: <none>
[09:28:29.022] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.022] Resolved: TRUE
[09:28:29.022] Value: <not collected>
[09:28:29.022] Conditions captured: <none>
[09:28:29.022] Early signaling: FALSE
[09:28:29.022] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.022] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.029] Chunk #2 of 2 ... DONE
[09:28:29.030] Launching 2 futures (chunks) ... DONE
[09:28:29.030] Resolving 2 futures (chunks) ...
[09:28:29.034]  - Number of value chunks collected: 2
[09:28:29.034] Resolving 2 futures (chunks) ... DONE
[09:28:29.034] Reducing values from 2 chunks ...
[09:28:29.034]  - Number of values collected after concatenation: 3
[09:28:29.035]  - Number of values expected: 3
[09:28:29.035] Reducing values from 2 chunks ... DONE
[09:28:29.035] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[09:28:29.035] future_lapply() ...
[09:28:29.041] Number of chunks: 1
[09:28:29.041] getGlobalsAndPackagesXApply() ...
[09:28:29.041]  - future.globals: TRUE
[09:28:29.044]  - globals found/used: [n=1] ‘FUN’
[09:28:29.044]  - needed namespaces: [n=0] 
[09:28:29.044] Finding globals ... DONE
[09:28:29.044]  - use_args: TRUE
[09:28:29.044]  - Getting '...' globals ...
[09:28:29.045]    - '...' content: [n=1] ‘what’
[09:28:29.045] List of 1
[09:28:29.045]  $ ...:List of 1
[09:28:29.045]   ..$ what:function (x)  
[09:28:29.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.045]  - attr(*, "where")=List of 1
[09:28:29.045]   ..$ ...:<environment: 0x55f695dee600> 
[09:28:29.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.045]  - attr(*, "resolved")= logi TRUE
[09:28:29.045]  - attr(*, "total_size")= num NA
[09:28:29.048]  - Getting '...' globals ... DONE
[09:28:29.049] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.049] List of 2
[09:28:29.049]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:29.049]  $ ...          :List of 1
[09:28:29.049]   ..$ what:function (x)  
[09:28:29.049]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.049]  - attr(*, "where")=List of 2
[09:28:29.049]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.049]   ..$ ...          :<environment: 0x55f695dee600> 
[09:28:29.049]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.049]  - attr(*, "resolved")= logi FALSE
[09:28:29.049]  - attr(*, "total_size")= num 12192
[09:28:29.055] Packages to be attached in all futures: [n=0] 
[09:28:29.055] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.055] Number of futures (= number of chunks): 1
[09:28:29.055] Launching 1 futures (chunks) ...
[09:28:29.055] Chunk #1 of 1 ...
[09:28:29.055]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.056]    + additional globals found: [n=0] 
[09:28:29.056]    + additional namespaces needed: [n=0] 
[09:28:29.056]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.056]  - seeds: <none>
[09:28:29.056]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.063] Created future:
[09:28:29.064] MulticoreFuture:
[09:28:29.064] Label: ‘future_lapply-1’
[09:28:29.064] Expression:
[09:28:29.064] {
[09:28:29.064]     do.call(function(...) {
[09:28:29.064]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.064]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.064]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.064]             on.exit(options(oopts), add = TRUE)
[09:28:29.064]         }
[09:28:29.064]         {
[09:28:29.064]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.064]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.064]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.064]             })
[09:28:29.064]         }
[09:28:29.064]     }, args = future.call.arguments)
[09:28:29.064] }
[09:28:29.064] Lazy evaluation: FALSE
[09:28:29.064] Asynchronous evaluation: TRUE
[09:28:29.064] Local evaluation: TRUE
[09:28:29.064] Environment: R_GlobalEnv
[09:28:29.064] Capture standard output: TRUE
[09:28:29.064] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.064] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.064] Packages: <none>
[09:28:29.064] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.064] Resolved: TRUE
[09:28:29.064] Value: <not collected>
[09:28:29.064] Conditions captured: <none>
[09:28:29.064] Early signaling: FALSE
[09:28:29.064] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.064] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.071] Chunk #1 of 1 ... DONE
[09:28:29.071] Launching 1 futures (chunks) ... DONE
[09:28:29.072] Resolving 1 futures (chunks) ...
[09:28:29.073]  - Number of value chunks collected: 1
[09:28:29.073] Resolving 1 futures (chunks) ... DONE
[09:28:29.073] Reducing values from 1 chunks ...
[09:28:29.073]  - Number of values collected after concatenation: 1
[09:28:29.074]  - Number of values expected: 1
[09:28:29.074] Reducing values from 1 chunks ... DONE
[09:28:29.074] future_lapply() ... DONE
[09:28:29.074] future_lapply() ...
[09:28:29.079] Number of chunks: 1
[09:28:29.079] getGlobalsAndPackagesXApply() ...
[09:28:29.079]  - future.globals: TRUE
[09:28:29.082]  - globals found/used: [n=1] ‘FUN’
[09:28:29.083]  - needed namespaces: [n=0] 
[09:28:29.083] Finding globals ... DONE
[09:28:29.083]  - use_args: TRUE
[09:28:29.083]  - Getting '...' globals ...
[09:28:29.083]    - '...' content: [n=1] ‘what’
[09:28:29.084] List of 1
[09:28:29.084]  $ ...:List of 1
[09:28:29.084]   ..$ what:function (...)  
[09:28:29.084]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.084]  - attr(*, "where")=List of 1
[09:28:29.084]   ..$ ...:<environment: 0x55f6949e4400> 
[09:28:29.084]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.084]  - attr(*, "resolved")= logi TRUE
[09:28:29.084]  - attr(*, "total_size")= num NA
[09:28:29.087]  - Getting '...' globals ... DONE
[09:28:29.087] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.087] List of 2
[09:28:29.087]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:29.087]  $ ...          :List of 1
[09:28:29.087]   ..$ what:function (...)  
[09:28:29.087]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.087]  - attr(*, "where")=List of 2
[09:28:29.087]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.087]   ..$ ...          :<environment: 0x55f6949e4400> 
[09:28:29.087]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.087]  - attr(*, "resolved")= logi FALSE
[09:28:29.087]  - attr(*, "total_size")= num 13352
[09:28:29.091] Packages to be attached in all futures: [n=0] 
[09:28:29.091] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.091] Number of futures (= number of chunks): 1
[09:28:29.091] Launching 1 futures (chunks) ...
[09:28:29.091] Chunk #1 of 1 ...
[09:28:29.091]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.092]    + additional globals found: [n=0] 
[09:28:29.092]    + additional namespaces needed: [n=0] 
[09:28:29.092]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.092]  - seeds: <none>
[09:28:29.092]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.100] Created future:
[09:28:29.100] MulticoreFuture:
[09:28:29.100] Label: ‘future_lapply-1’
[09:28:29.100] Expression:
[09:28:29.100] {
[09:28:29.100]     do.call(function(...) {
[09:28:29.100]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.100]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.100]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.100]             on.exit(options(oopts), add = TRUE)
[09:28:29.100]         }
[09:28:29.100]         {
[09:28:29.100]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.100]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.100]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.100]             })
[09:28:29.100]         }
[09:28:29.100]     }, args = future.call.arguments)
[09:28:29.100] }
[09:28:29.100] Lazy evaluation: FALSE
[09:28:29.100] Asynchronous evaluation: TRUE
[09:28:29.100] Local evaluation: TRUE
[09:28:29.100] Environment: R_GlobalEnv
[09:28:29.100] Capture standard output: TRUE
[09:28:29.100] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.100] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.100] Packages: <none>
[09:28:29.100] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.100] Resolved: TRUE
[09:28:29.100] Value: <not collected>
[09:28:29.100] Conditions captured: <none>
[09:28:29.100] Early signaling: FALSE
[09:28:29.100] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.100] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.108] Chunk #1 of 1 ... DONE
[09:28:29.108] Launching 1 futures (chunks) ... DONE
[09:28:29.108] Resolving 1 futures (chunks) ...
[09:28:29.109]  - Number of value chunks collected: 1
[09:28:29.109] Resolving 1 futures (chunks) ... DONE
[09:28:29.110] Reducing values from 1 chunks ...
[09:28:29.110]  - Number of values collected after concatenation: 1
[09:28:29.110]  - Number of values expected: 1
[09:28:29.110] Reducing values from 1 chunks ... DONE
[09:28:29.110] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[09:28:29.111] future_lapply() ...
[09:28:29.115] Number of chunks: 1
[09:28:29.115] getGlobalsAndPackagesXApply() ...
[09:28:29.115]  - future.globals: TRUE
[09:28:29.117]  - globals found/used: [n=1] ‘FUN’
[09:28:29.117]  - needed namespaces: [n=0] 
[09:28:29.117] Finding globals ... DONE
[09:28:29.117]  - use_args: TRUE
[09:28:29.117]  - Getting '...' globals ...
[09:28:29.118]    - '...' content: [n=1] ‘b’
[09:28:29.118] List of 1
[09:28:29.118]  $ ...:List of 1
[09:28:29.118]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:29.118]   .. ..$ a: int [1:2] 1 2
[09:28:29.118]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.118]  - attr(*, "where")=List of 1
[09:28:29.118]   ..$ ...:<environment: 0x55f69599bb20> 
[09:28:29.118]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.118]  - attr(*, "resolved")= logi TRUE
[09:28:29.118]  - attr(*, "total_size")= num NA
[09:28:29.122]  - Getting '...' globals ... DONE
[09:28:29.122] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.122] List of 2
[09:28:29.122]  $ ...future.FUN:function (a, b)  
[09:28:29.122]  $ ...          :List of 1
[09:28:29.122]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:29.122]   .. ..$ a: int [1:2] 1 2
[09:28:29.122]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.122]  - attr(*, "where")=List of 2
[09:28:29.122]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.122]   ..$ ...          :<environment: 0x55f69599bb20> 
[09:28:29.122]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.122]  - attr(*, "resolved")= logi FALSE
[09:28:29.122]  - attr(*, "total_size")= num 1440
[09:28:29.126] Packages to be attached in all futures: [n=0] 
[09:28:29.126] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.127] Number of futures (= number of chunks): 1
[09:28:29.127] Launching 1 futures (chunks) ...
[09:28:29.127] Chunk #1 of 1 ...
[09:28:29.127]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.127]    + additional globals found: [n=0] 
[09:28:29.127]    + additional namespaces needed: [n=0] 
[09:28:29.127]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.128]  - seeds: <none>
[09:28:29.128]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.135] Created future:
[09:28:29.135] MulticoreFuture:
[09:28:29.135] Label: ‘future_lapply-1’
[09:28:29.135] Expression:
[09:28:29.135] {
[09:28:29.135]     do.call(function(...) {
[09:28:29.135]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.135]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.135]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.135]             on.exit(options(oopts), add = TRUE)
[09:28:29.135]         }
[09:28:29.135]         {
[09:28:29.135]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.135]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.135]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.135]             })
[09:28:29.135]         }
[09:28:29.135]     }, args = future.call.arguments)
[09:28:29.135] }
[09:28:29.135] Lazy evaluation: FALSE
[09:28:29.135] Asynchronous evaluation: TRUE
[09:28:29.135] Local evaluation: TRUE
[09:28:29.135] Environment: R_GlobalEnv
[09:28:29.135] Capture standard output: TRUE
[09:28:29.135] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.135] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.135] Packages: <none>
[09:28:29.135] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.135] Resolved: TRUE
[09:28:29.135] Value: <not collected>
[09:28:29.135] Conditions captured: <none>
[09:28:29.135] Early signaling: FALSE
[09:28:29.135] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.135] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.149] Chunk #1 of 1 ... DONE
[09:28:29.149] Launching 1 futures (chunks) ... DONE
[09:28:29.149] Resolving 1 futures (chunks) ...
[09:28:29.150]  - Number of value chunks collected: 1
[09:28:29.150] Resolving 1 futures (chunks) ... DONE
[09:28:29.151] Reducing values from 1 chunks ...
[09:28:29.151]  - Number of values collected after concatenation: 1
[09:28:29.151]  - Number of values expected: 1
[09:28:29.151] Reducing values from 1 chunks ... DONE
[09:28:29.151] future_lapply() ... DONE
[09:28:29.151] future_lapply() ...
[09:28:29.155] Number of chunks: 1
[09:28:29.155] getGlobalsAndPackagesXApply() ...
[09:28:29.156]  - future.globals: TRUE
[09:28:29.158]  - globals found/used: [n=1] ‘FUN’
[09:28:29.158]  - needed namespaces: [n=0] 
[09:28:29.158] Finding globals ... DONE
[09:28:29.158]  - use_args: TRUE
[09:28:29.158]  - Getting '...' globals ...
[09:28:29.158]    - '...' content: [n=1] ‘b’
[09:28:29.159] List of 1
[09:28:29.159]  $ ...:List of 1
[09:28:29.159]   ..$ b:<environment: 0x55f6952eeab0> 
[09:28:29.159]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.159]  - attr(*, "where")=List of 1
[09:28:29.159]   ..$ ...:<environment: 0x55f6952ef568> 
[09:28:29.159]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.159]  - attr(*, "resolved")= logi TRUE
[09:28:29.159]  - attr(*, "total_size")= num NA
[09:28:29.162]  - Getting '...' globals ... DONE
[09:28:29.162] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.162] List of 2
[09:28:29.162]  $ ...future.FUN:function (a, b)  
[09:28:29.162]  $ ...          :List of 1
[09:28:29.162]   ..$ b:<environment: 0x55f6952eeab0> 
[09:28:29.162]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.162]  - attr(*, "where")=List of 2
[09:28:29.162]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.162]   ..$ ...          :<environment: 0x55f6952ef568> 
[09:28:29.162]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.162]  - attr(*, "resolved")= logi FALSE
[09:28:29.162]  - attr(*, "total_size")= num 1440
[09:28:29.166] Packages to be attached in all futures: [n=0] 
[09:28:29.166] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.166] Number of futures (= number of chunks): 1
[09:28:29.166] Launching 1 futures (chunks) ...
[09:28:29.166] Chunk #1 of 1 ...
[09:28:29.166]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.167]    + additional globals found: [n=0] 
[09:28:29.167]    + additional namespaces needed: [n=0] 
[09:28:29.167]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.167]  - seeds: <none>
[09:28:29.167]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.174] Created future:
[09:28:29.174] MulticoreFuture:
[09:28:29.174] Label: ‘future_lapply-1’
[09:28:29.174] Expression:
[09:28:29.174] {
[09:28:29.174]     do.call(function(...) {
[09:28:29.174]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.174]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.174]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.174]             on.exit(options(oopts), add = TRUE)
[09:28:29.174]         }
[09:28:29.174]         {
[09:28:29.174]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.174]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.174]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.174]             })
[09:28:29.174]         }
[09:28:29.174]     }, args = future.call.arguments)
[09:28:29.174] }
[09:28:29.174] Lazy evaluation: FALSE
[09:28:29.174] Asynchronous evaluation: TRUE
[09:28:29.174] Local evaluation: TRUE
[09:28:29.174] Environment: R_GlobalEnv
[09:28:29.174] Capture standard output: TRUE
[09:28:29.174] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.174] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.174] Packages: <none>
[09:28:29.174] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.174] Resolved: TRUE
[09:28:29.174] Value: <not collected>
[09:28:29.174] Conditions captured: <none>
[09:28:29.174] Early signaling: FALSE
[09:28:29.174] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.174] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.183] Chunk #1 of 1 ... DONE
[09:28:29.183] Launching 1 futures (chunks) ... DONE
[09:28:29.183] Resolving 1 futures (chunks) ...
[09:28:29.185]  - Number of value chunks collected: 1
[09:28:29.185] Resolving 1 futures (chunks) ... DONE
[09:28:29.185] Reducing values from 1 chunks ...
[09:28:29.185]  - Number of values collected after concatenation: 1
[09:28:29.186]  - Number of values expected: 1
[09:28:29.186] Reducing values from 1 chunks ... DONE
[09:28:29.186] future_lapply() ... DONE
[09:28:29.186] future_lapply() ...
[09:28:29.190] Number of chunks: 1
[09:28:29.190] getGlobalsAndPackagesXApply() ...
[09:28:29.190]  - future.globals: TRUE
[09:28:29.193]  - globals found/used: [n=1] ‘FUN’
[09:28:29.193]  - needed namespaces: [n=0] 
[09:28:29.193] Finding globals ... DONE
[09:28:29.193]  - use_args: TRUE
[09:28:29.193]  - Getting '...' globals ...
[09:28:29.194]    - '...' content: [n=1] ‘b’
[09:28:29.194] List of 1
[09:28:29.194]  $ ...:List of 1
[09:28:29.194]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:29.194]   .. .. ..@ slots     :List of 4
[09:28:29.194]   .. .. .. ..$ .Data  : chr "function"
[09:28:29.194]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. ..$ target : chr "signature"
[09:28:29.194]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. ..$ defined: chr "signature"
[09:28:29.194]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. ..$ generic: chr "character"
[09:28:29.194]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. ..@ contains  :List of 3
[09:28:29.194]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.194]   .. .. ..@ virtual   : logi FALSE
[09:28:29.194]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:29.194]  list()
[09:28:29.194]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:29.194]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:29.194]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:29.194]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:29.194]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:29.194]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:29.194]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:29.194]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:29.194]   .. .. .. .. ..$ generic: chr(0) 
[09:28:29.194]   .. .. ..@ validity  : NULL
[09:28:29.194]   .. .. ..@ access    : list()
[09:28:29.194]   .. .. ..@ className : chr "MethodDefinition"
[09:28:29.194]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. ..@ subclasses:List of 7
[09:28:29.194]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.194]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.194]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.194]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.194]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.194]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.194]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.194]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.194]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:29.194]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.194]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.194]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.194]   .. .. ..@ versionKey:<externalptr> 
[09:28:29.194]   .. .. ..@ sealed    : logi TRUE
[09:28:29.194]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.194]  - attr(*, "where")=List of 1
[09:28:29.194]   ..$ ...:<environment: 0x55f694018918> 
[09:28:29.194]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.194]  - attr(*, "resolved")= logi TRUE
[09:28:29.194]  - attr(*, "total_size")= num NA
[09:28:29.246]  - Getting '...' globals ... DONE
[09:28:29.246] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.246] List of 2
[09:28:29.246]  $ ...future.FUN:function (a, b)  
[09:28:29.246]  $ ...          :List of 1
[09:28:29.246]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:29.246]   .. .. ..@ slots     :List of 4
[09:28:29.246]   .. .. .. ..$ .Data  : chr "function"
[09:28:29.246]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. ..$ target : chr "signature"
[09:28:29.246]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. ..$ defined: chr "signature"
[09:28:29.246]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. ..$ generic: chr "character"
[09:28:29.246]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. ..@ contains  :List of 3
[09:28:29.246]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.246]   .. .. ..@ virtual   : logi FALSE
[09:28:29.246]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:29.246]  list()
[09:28:29.246]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:29.246]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:29.246]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:29.246]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:29.246]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:29.246]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:29.246]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:29.246]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:29.246]   .. .. .. .. ..$ generic: chr(0) 
[09:28:29.246]   .. .. ..@ validity  : NULL
[09:28:29.246]   .. .. ..@ access    : list()
[09:28:29.246]   .. .. ..@ className : chr "MethodDefinition"
[09:28:29.246]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. ..@ subclasses:List of 7
[09:28:29.246]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 1
[09:28:29.246]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.246]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.246]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:29.246]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:29.246]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:29.246]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:29.246]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:29.246]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:29.246]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:29.246]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:29.246]   .. .. .. .. .. ..@ distance  : num 2
[09:28:29.246]   .. .. ..@ versionKey:<externalptr> 
[09:28:29.246]   .. .. ..@ sealed    : logi TRUE
[09:28:29.246]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.246]  - attr(*, "where")=List of 2
[09:28:29.246]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.246]   ..$ ...          :<environment: 0x55f694018918> 
[09:28:29.246]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.246]  - attr(*, "resolved")= logi FALSE
[09:28:29.246]  - attr(*, "total_size")= num 405168
[09:28:29.290] Packages to be attached in all futures: [n=0] 
[09:28:29.290] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.290] Number of futures (= number of chunks): 1
[09:28:29.290] Launching 1 futures (chunks) ...
[09:28:29.291] Chunk #1 of 1 ...
[09:28:29.291]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.291]    + additional globals found: [n=0] 
[09:28:29.291]    + additional namespaces needed: [n=0] 
[09:28:29.291]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.291]  - seeds: <none>
[09:28:29.291]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.300] Created future:
[09:28:29.301] MulticoreFuture:
[09:28:29.301] Label: ‘future_lapply-1’
[09:28:29.301] Expression:
[09:28:29.301] {
[09:28:29.301]     do.call(function(...) {
[09:28:29.301]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.301]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.301]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.301]             on.exit(options(oopts), add = TRUE)
[09:28:29.301]         }
[09:28:29.301]         {
[09:28:29.301]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.301]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.301]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.301]             })
[09:28:29.301]         }
[09:28:29.301]     }, args = future.call.arguments)
[09:28:29.301] }
[09:28:29.301] Lazy evaluation: FALSE
[09:28:29.301] Asynchronous evaluation: TRUE
[09:28:29.301] Local evaluation: TRUE
[09:28:29.301] Environment: R_GlobalEnv
[09:28:29.301] Capture standard output: TRUE
[09:28:29.301] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.301] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.301] Packages: <none>
[09:28:29.301] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.301] Resolved: TRUE
[09:28:29.301] Value: <not collected>
[09:28:29.301] Conditions captured: <none>
[09:28:29.301] Early signaling: FALSE
[09:28:29.301] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.301] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.308] Chunk #1 of 1 ... DONE
[09:28:29.309] Launching 1 futures (chunks) ... DONE
[09:28:29.309] Resolving 1 futures (chunks) ...
[09:28:29.310]  - Number of value chunks collected: 1
[09:28:29.311] Resolving 1 futures (chunks) ... DONE
[09:28:29.311] Reducing values from 1 chunks ...
[09:28:29.311]  - Number of values collected after concatenation: 1
[09:28:29.311]  - Number of values expected: 1
[09:28:29.311] Reducing values from 1 chunks ... DONE
[09:28:29.311] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[09:28:29.314] future_lapply() ...
[09:28:29.318] Number of chunks: 2
[09:28:29.319] getGlobalsAndPackagesXApply() ...
[09:28:29.319]  - future.globals: TRUE
[09:28:29.321]  - globals found/used: [n=1] ‘FUN’
[09:28:29.321]  - needed namespaces: [n=0] 
[09:28:29.321] Finding globals ... DONE
[09:28:29.321]  - use_args: TRUE
[09:28:29.321]  - Getting '...' globals ...
[09:28:29.321]    - '...' content: [n=0] 
[09:28:29.322] List of 1
[09:28:29.322]  $ ...: list()
[09:28:29.322]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.322]  - attr(*, "where")=List of 1
[09:28:29.322]   ..$ ...:<environment: 0x55f694cd81c8> 
[09:28:29.322]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.322]  - attr(*, "resolved")= logi TRUE
[09:28:29.322]  - attr(*, "total_size")= num NA
[09:28:29.324]  - Getting '...' globals ... DONE
[09:28:29.325] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:29.325] List of 2
[09:28:29.325]  $ ...future.FUN:function (f)  
[09:28:29.325]  $ ...          : list()
[09:28:29.325]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.325]  - attr(*, "where")=List of 2
[09:28:29.325]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.325]   ..$ ...          :<environment: 0x55f694cd81c8> 
[09:28:29.325]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.325]  - attr(*, "resolved")= logi FALSE
[09:28:29.325]  - attr(*, "total_size")= num 1008
[09:28:29.328] Packages to be attached in all futures: [n=0] 
[09:28:29.328] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.328] Number of futures (= number of chunks): 2
[09:28:29.328] Launching 2 futures (chunks) ...
[09:28:29.329] Chunk #1 of 2 ...
[09:28:29.329]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.330]    + additional globals found: [n=2] ‘a’, ‘b’
[09:28:29.331]    + additional namespaces needed: [n=0] 
[09:28:29.331]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.331]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:29.331]  - seeds: <none>
[09:28:29.331]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[09:28:29.338] Created future:
[09:28:29.339] MulticoreFuture:
[09:28:29.339] Label: ‘future_lapply-1’
[09:28:29.339] Expression:
[09:28:29.339] {
[09:28:29.339]     do.call(function(...) {
[09:28:29.339]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.339]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.339]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.339]             on.exit(options(oopts), add = TRUE)
[09:28:29.339]         }
[09:28:29.339]         {
[09:28:29.339]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.339]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.339]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.339]             })
[09:28:29.339]         }
[09:28:29.339]     }, args = future.call.arguments)
[09:28:29.339] }
[09:28:29.339] Lazy evaluation: FALSE
[09:28:29.339] Asynchronous evaluation: TRUE
[09:28:29.339] Local evaluation: TRUE
[09:28:29.339] Environment: R_GlobalEnv
[09:28:29.339] Capture standard output: TRUE
[09:28:29.339] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.339] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[09:28:29.339] Packages: <none>
[09:28:29.339] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.339] Resolved: TRUE
[09:28:29.339] Value: <not collected>
[09:28:29.339] Conditions captured: <none>
[09:28:29.339] Early signaling: FALSE
[09:28:29.339] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.339] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.346] Chunk #1 of 2 ... DONE
[09:28:29.347] Chunk #2 of 2 ...
[09:28:29.347]  - Finding globals in 'X' for chunk #2 ...
[09:28:29.350]    + additional globals found: [n=2] ‘a’, ‘b’
[09:28:29.351]    + additional namespaces needed: [n=1] ‘tools’
[09:28:29.351]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:29.351]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:29.351]  - seeds: <none>
[09:28:29.351]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[09:28:29.360] Created future:
[09:28:29.361] MulticoreFuture:
[09:28:29.361] Label: ‘future_lapply-2’
[09:28:29.361] Expression:
[09:28:29.361] {
[09:28:29.361]     do.call(function(...) {
[09:28:29.361]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.361]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.361]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.361]             on.exit(options(oopts), add = TRUE)
[09:28:29.361]         }
[09:28:29.361]         {
[09:28:29.361]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.361]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.361]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.361]             })
[09:28:29.361]         }
[09:28:29.361]     }, args = future.call.arguments)
[09:28:29.361] }
[09:28:29.361] Lazy evaluation: FALSE
[09:28:29.361] Asynchronous evaluation: TRUE
[09:28:29.361] Local evaluation: TRUE
[09:28:29.361] Environment: R_GlobalEnv
[09:28:29.361] Capture standard output: TRUE
[09:28:29.361] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.361] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[09:28:29.361] Packages: 1 packages (‘tools’)
[09:28:29.361] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.361] Resolved: TRUE
[09:28:29.361] Value: <not collected>
[09:28:29.361] Conditions captured: <none>
[09:28:29.361] Early signaling: FALSE
[09:28:29.361] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.361] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.370] Chunk #2 of 2 ... DONE
[09:28:29.370] Launching 2 futures (chunks) ... DONE
[09:28:29.370] Resolving 2 futures (chunks) ...
[09:28:29.373]  - Number of value chunks collected: 2
[09:28:29.373] Resolving 2 futures (chunks) ... DONE
[09:28:29.373] Reducing values from 2 chunks ...
[09:28:29.374]  - Number of values collected after concatenation: 4
[09:28:29.374]  - Number of values expected: 4
[09:28:29.374] Reducing values from 2 chunks ... DONE
[09:28:29.374] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[09:28:29.378] future_lapply() ...
[09:28:29.382] Number of chunks: 1
[09:28:29.382] getGlobalsAndPackagesXApply() ...
[09:28:29.382]  - future.globals: TRUE
[09:28:29.385]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[09:28:29.385]  - needed namespaces: [n=0] 
[09:28:29.385] Finding globals ... DONE
[09:28:29.385]  - use_args: TRUE
[09:28:29.385]  - Getting '...' globals ...
[09:28:29.386]    - '...' content: [n=0] 
[09:28:29.386] List of 1
[09:28:29.386]  $ ...: list()
[09:28:29.386]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.386]  - attr(*, "where")=List of 1
[09:28:29.386]   ..$ ...:<environment: 0x55f695d04100> 
[09:28:29.386]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.386]  - attr(*, "resolved")= logi TRUE
[09:28:29.386]  - attr(*, "total_size")= num NA
[09:28:29.389]  - Getting '...' globals ... DONE
[09:28:29.389] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[09:28:29.389] List of 3
[09:28:29.389]  $ ...future.FUN        :function (x)  
[09:28:29.389]  $ future.call.arguments:List of 1
[09:28:29.389]   ..$ a: num 1
[09:28:29.389]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.389]  $ ...                  : list()
[09:28:29.389]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.389]  - attr(*, "where")=List of 3
[09:28:29.389]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[09:28:29.389]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[09:28:29.389]   ..$ ...                  :<environment: 0x55f695d04100> 
[09:28:29.389]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.389]  - attr(*, "resolved")= logi FALSE
[09:28:29.389]  - attr(*, "total_size")= num 1272
[09:28:29.395] Packages to be attached in all futures: [n=0] 
[09:28:29.396] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.396] Number of futures (= number of chunks): 1
[09:28:29.396] Launching 1 futures (chunks) ...
[09:28:29.396] Chunk #1 of 1 ...
[09:28:29.396]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.397]    + additional globals found: [n=0] 
[09:28:29.397]    + additional namespaces needed: [n=0] 
[09:28:29.397]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.397]  - seeds: <none>
[09:28:29.397]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.404] Created future:
[09:28:29.404] MulticoreFuture:
[09:28:29.404] Label: ‘future_lapply-1’
[09:28:29.404] Expression:
[09:28:29.404] {
[09:28:29.404]     do.call(function(...) {
[09:28:29.404]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.404]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.404]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.404]             on.exit(options(oopts), add = TRUE)
[09:28:29.404]         }
[09:28:29.404]         {
[09:28:29.404]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.404]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.404]                 ...future.FUN(...future.X_jj)
[09:28:29.404]             })
[09:28:29.404]         }
[09:28:29.404]     }, args = future.call.arguments)
[09:28:29.404] }
[09:28:29.404] Lazy evaluation: FALSE
[09:28:29.404] Asynchronous evaluation: TRUE
[09:28:29.404] Local evaluation: TRUE
[09:28:29.404] Environment: 0x55f695d04480
[09:28:29.404] Capture standard output: TRUE
[09:28:29.404] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.404] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:29.404] Packages: <none>
[09:28:29.404] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.404] Resolved: TRUE
[09:28:29.404] Value: <not collected>
[09:28:29.404] Conditions captured: <none>
[09:28:29.404] Early signaling: FALSE
[09:28:29.404] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.404] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.412] Chunk #1 of 1 ... DONE
[09:28:29.412] Launching 1 futures (chunks) ... DONE
[09:28:29.413] Resolving 1 futures (chunks) ...
[09:28:29.414]  - Number of value chunks collected: 1
[09:28:29.414] Resolving 1 futures (chunks) ... DONE
[09:28:29.414] Reducing values from 1 chunks ...
[09:28:29.415]  - Number of values collected after concatenation: 1
[09:28:29.415]  - Number of values expected: 1
[09:28:29.415] Reducing values from 1 chunks ... DONE
[09:28:29.415] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[09:28:29.417] future_lapply() ...
[09:28:29.421] Number of chunks: 1
[09:28:29.422] getGlobalsAndPackagesXApply() ...
[09:28:29.422]  - future.globals: TRUE
[09:28:29.424]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:29.424]  - needed namespaces: [n=0] 
[09:28:29.424] Finding globals ... DONE
[09:28:29.425]  - use_args: TRUE
[09:28:29.425]  - Getting '...' globals ...
[09:28:29.425]    - '...' content: [n=0] 
[09:28:29.425] List of 1
[09:28:29.425]  $ ...: list()
[09:28:29.425]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.425]  - attr(*, "where")=List of 1
[09:28:29.425]   ..$ ...:<environment: 0x55f694a30d48> 
[09:28:29.425]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.425]  - attr(*, "resolved")= logi TRUE
[09:28:29.425]  - attr(*, "total_size")= num NA
[09:28:29.428]  - Getting '...' globals ... DONE
[09:28:29.428] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:29.429] List of 3
[09:28:29.429]  $ ...future.FUN:function (ii)  
[09:28:29.429]  $ a            : num 1
[09:28:29.429]  $ ...          : list()
[09:28:29.429]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.429]  - attr(*, "where")=List of 3
[09:28:29.429]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.429]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:29.429]   ..$ ...          :<environment: 0x55f694a30d48> 
[09:28:29.429]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.429]  - attr(*, "resolved")= logi FALSE
[09:28:29.429]  - attr(*, "total_size")= num 2984
[09:28:29.432] Packages to be attached in all futures: [n=0] 
[09:28:29.432] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.433] Number of futures (= number of chunks): 1
[09:28:29.433] Launching 1 futures (chunks) ...
[09:28:29.433] Chunk #1 of 1 ...
[09:28:29.433]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.433]    + additional globals found: [n=0] 
[09:28:29.434]    + additional namespaces needed: [n=0] 
[09:28:29.434]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.434]  - seeds: <none>
[09:28:29.434]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.441] Created future:
[09:28:29.441] MulticoreFuture:
[09:28:29.441] Label: ‘future_lapply-1’
[09:28:29.441] Expression:
[09:28:29.441] {
[09:28:29.441]     do.call(function(...) {
[09:28:29.441]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.441]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.441]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.441]             on.exit(options(oopts), add = TRUE)
[09:28:29.441]         }
[09:28:29.441]         {
[09:28:29.441]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.441]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.441]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.441]             })
[09:28:29.441]         }
[09:28:29.441]     }, args = future.call.arguments)
[09:28:29.441] }
[09:28:29.441] Lazy evaluation: FALSE
[09:28:29.441] Asynchronous evaluation: TRUE
[09:28:29.441] Local evaluation: TRUE
[09:28:29.441] Environment: R_GlobalEnv
[09:28:29.441] Capture standard output: TRUE
[09:28:29.441] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.441] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:29.441] Packages: <none>
[09:28:29.441] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.441] Resolved: TRUE
[09:28:29.441] Value: <not collected>
[09:28:29.441] Conditions captured: <none>
[09:28:29.441] Early signaling: FALSE
[09:28:29.441] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.441] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.449] Chunk #1 of 1 ... DONE
[09:28:29.449] Launching 1 futures (chunks) ... DONE
[09:28:29.449] Resolving 1 futures (chunks) ...
[09:28:29.451]  - Number of value chunks collected: 1
[09:28:29.451] Resolving 1 futures (chunks) ... DONE
[09:28:29.451] Reducing values from 1 chunks ...
[09:28:29.451]  - Number of values collected after concatenation: 1
[09:28:29.451]  - Number of values expected: 1
[09:28:29.452] Reducing values from 1 chunks ... DONE
[09:28:29.452] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[09:28:29.452] future_lapply() ...
[09:28:29.457] Number of chunks: 1
[09:28:29.457] getGlobalsAndPackagesXApply() ...
[09:28:29.457]  - future.globals: TRUE
[09:28:29.459]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:29.459]  - needed namespaces: [n=0] 
[09:28:29.460] Finding globals ... DONE
[09:28:29.460]  - use_args: TRUE
[09:28:29.460]  - Getting '...' globals ...
[09:28:29.460]    - '...' content: [n=0] 
[09:28:29.460] List of 1
[09:28:29.460]  $ ...: list()
[09:28:29.460]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.460]  - attr(*, "where")=List of 1
[09:28:29.460]   ..$ ...:<environment: 0x55f692490b18> 
[09:28:29.460]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.460]  - attr(*, "resolved")= logi TRUE
[09:28:29.460]  - attr(*, "total_size")= num NA
[09:28:29.463]  - Getting '...' globals ... DONE
[09:28:29.464] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:29.464] List of 3
[09:28:29.464]  $ ...future.FUN:function (ii)  
[09:28:29.464]  $ a            : num 1
[09:28:29.464]  $ ...          : list()
[09:28:29.464]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.464]  - attr(*, "where")=List of 3
[09:28:29.464]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.464]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:29.464]   ..$ ...          :<environment: 0x55f692490b18> 
[09:28:29.464]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.464]  - attr(*, "resolved")= logi FALSE
[09:28:29.464]  - attr(*, "total_size")= num 2984
[09:28:29.467] Packages to be attached in all futures: [n=0] 
[09:28:29.467] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.468] Number of futures (= number of chunks): 1
[09:28:29.468] Launching 1 futures (chunks) ...
[09:28:29.468] Chunk #1 of 1 ...
[09:28:29.468]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.468]    + additional globals found: [n=0] 
[09:28:29.468]    + additional namespaces needed: [n=0] 
[09:28:29.469]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.469]  - seeds: <none>
[09:28:29.469]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.476] Created future:
[09:28:29.476] MulticoreFuture:
[09:28:29.476] Label: ‘future_lapply-1’
[09:28:29.476] Expression:
[09:28:29.476] {
[09:28:29.476]     do.call(function(...) {
[09:28:29.476]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.476]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.476]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.476]             on.exit(options(oopts), add = TRUE)
[09:28:29.476]         }
[09:28:29.476]         {
[09:28:29.476]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.476]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.476]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.476]             })
[09:28:29.476]         }
[09:28:29.476]     }, args = future.call.arguments)
[09:28:29.476] }
[09:28:29.476] Lazy evaluation: FALSE
[09:28:29.476] Asynchronous evaluation: TRUE
[09:28:29.476] Local evaluation: TRUE
[09:28:29.476] Environment: R_GlobalEnv
[09:28:29.476] Capture standard output: TRUE
[09:28:29.476] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.476] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:29.476] Packages: <none>
[09:28:29.476] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.476] Resolved: TRUE
[09:28:29.476] Value: <not collected>
[09:28:29.476] Conditions captured: <none>
[09:28:29.476] Early signaling: FALSE
[09:28:29.476] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.476] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.484] Chunk #1 of 1 ... DONE
[09:28:29.484] Launching 1 futures (chunks) ... DONE
[09:28:29.484] Resolving 1 futures (chunks) ...
[09:28:29.486]  - Number of value chunks collected: 1
[09:28:29.486] Resolving 1 futures (chunks) ... DONE
[09:28:29.488] Reducing values from 1 chunks ...
[09:28:29.488]  - Number of values collected after concatenation: 1
[09:28:29.489]  - Number of values expected: 1
[09:28:29.489] Reducing values from 1 chunks ... DONE
[09:28:29.489] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[09:28:29.489] future_lapply() ...
[09:28:29.493] Number of chunks: 1
[09:28:29.493] getGlobalsAndPackagesXApply() ...
[09:28:29.493]  - future.globals: <name-value list> with names ‘42’
[09:28:29.494]  - use_args: TRUE
[09:28:29.494]  - Getting '...' globals ...
[09:28:29.494]    - '...' content: [n=0] 
[09:28:29.494] List of 1
[09:28:29.494]  $ ...: list()
[09:28:29.494]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.494]  - attr(*, "where")=List of 1
[09:28:29.494]   ..$ ...:<environment: 0x55f6953bd888> 
[09:28:29.494]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.494]  - attr(*, "resolved")= logi TRUE
[09:28:29.494]  - attr(*, "total_size")= num NA
[09:28:29.497]  - Getting '...' globals ... DONE
[09:28:29.497] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[09:28:29.498] List of 3
[09:28:29.498]  $ a            : num 42
[09:28:29.498]  $ ...future.FUN:function (x)  
[09:28:29.498]  $ ...          : list()
[09:28:29.498]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.498]  - attr(*, "where")=List of 3
[09:28:29.498]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:29.498]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[09:28:29.498]   ..$ ...          :<environment: 0x55f6953bd888> 
[09:28:29.498]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.498]  - attr(*, "resolved")= logi FALSE
[09:28:29.498]  - attr(*, "total_size")= num NA
[09:28:29.501] Packages to be attached in all futures: [n=0] 
[09:28:29.501] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.502] Number of futures (= number of chunks): 1
[09:28:29.502] Launching 1 futures (chunks) ...
[09:28:29.502] Chunk #1 of 1 ...
[09:28:29.502]  - seeds: <none>
[09:28:29.502]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.510] Created future:
[09:28:29.510] MulticoreFuture:
[09:28:29.510] Label: ‘future_lapply-1’
[09:28:29.510] Expression:
[09:28:29.510] {
[09:28:29.510]     do.call(function(...) {
[09:28:29.510]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.510]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.510]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.510]             on.exit(options(oopts), add = TRUE)
[09:28:29.510]         }
[09:28:29.510]         {
[09:28:29.510]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.510]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.510]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.510]             })
[09:28:29.510]         }
[09:28:29.510]     }, args = future.call.arguments)
[09:28:29.510] }
[09:28:29.510] Lazy evaluation: FALSE
[09:28:29.510] Asynchronous evaluation: TRUE
[09:28:29.510] Local evaluation: TRUE
[09:28:29.510] Environment: R_GlobalEnv
[09:28:29.510] Capture standard output: TRUE
[09:28:29.510] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.510] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:29.510] Packages: <none>
[09:28:29.510] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.510] Resolved: TRUE
[09:28:29.510] Value: <not collected>
[09:28:29.510] Conditions captured: <none>
[09:28:29.510] Early signaling: FALSE
[09:28:29.510] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.510] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:29.520] Chunk #1 of 1 ... DONE
[09:28:29.520] Launching 1 futures (chunks) ... DONE
[09:28:29.520] Resolving 1 futures (chunks) ...
[09:28:29.523]  - Number of value chunks collected: 1
[09:28:29.523] Resolving 1 futures (chunks) ... DONE
[09:28:29.523] Reducing values from 1 chunks ...
[09:28:29.523]  - Number of values collected after concatenation: 1
[09:28:29.523]  - Number of values expected: 1
[09:28:29.524] Reducing values from 1 chunks ... DONE
[09:28:29.524] future_lapply() ... DONE
List of 1
 $ : num 42
[09:28:29.904] future_lapply() ...
[09:28:29.909] Number of chunks: 2
[09:28:29.909] getGlobalsAndPackagesXApply() ...
[09:28:29.909]  - future.globals: TRUE
[09:28:29.915]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[09:28:29.915]  - needed namespaces: [n=0] 
[09:28:29.915] Finding globals ... DONE
[09:28:29.915]  - use_args: TRUE
[09:28:29.915]  - Getting '...' globals ...
[09:28:29.916]    - '...' content: [n=0] 
[09:28:29.916] List of 1
[09:28:29.916]  $ ...: list()
[09:28:29.916]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.916]  - attr(*, "where")=List of 1
[09:28:29.916]   ..$ ...:<environment: 0x55f6930d6298> 
[09:28:29.916]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.916]  - attr(*, "resolved")= logi TRUE
[09:28:29.916]  - attr(*, "total_size")= num NA
[09:28:29.919]  - Getting '...' globals ... DONE
[09:28:29.919] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[09:28:29.919] List of 6
[09:28:29.919]  $ ...future.FUN:function (i)  
[09:28:29.919]  $ caller       :function (a, b, FUN = call_my_add)  
[09:28:29.919]  $ args         :List of 1
[09:28:29.919]   ..$ FUN:function (a, b)  
[09:28:29.919]  $ call_my_add  :function (a, b)  
[09:28:29.919]  $ my_add       :function (a, b)  
[09:28:29.919]  $ ...          : list()
[09:28:29.919]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:29.919]  - attr(*, "where")=List of 6
[09:28:29.919]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:29.919]   ..$ caller       :<environment: R_EmptyEnv> 
[09:28:29.919]   ..$ args         :<environment: R_EmptyEnv> 
[09:28:29.919]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[09:28:29.919]   ..$ my_add       :<environment: R_EmptyEnv> 
[09:28:29.919]   ..$ ...          :<environment: 0x55f6930d6298> 
[09:28:29.919]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:29.919]  - attr(*, "resolved")= logi FALSE
[09:28:29.919]  - attr(*, "total_size")= num 24120
[09:28:29.924] Packages to be attached in all futures: [n=0] 
[09:28:29.925] getGlobalsAndPackagesXApply() ... DONE
[09:28:29.925] Number of futures (= number of chunks): 2
[09:28:29.925] Launching 2 futures (chunks) ...
[09:28:29.925] Chunk #1 of 2 ...
[09:28:29.925]  - Finding globals in 'X' for chunk #1 ...
[09:28:29.925]    + additional globals found: [n=0] 
[09:28:29.926]    + additional namespaces needed: [n=0] 
[09:28:29.926]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:29.926]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:29.926]  - seeds: <none>
[09:28:29.926]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:29.990] Created future:
[09:28:29.991] MultisessionFuture:
[09:28:29.991] Label: ‘future_lapply-1’
[09:28:29.991] Expression:
[09:28:29.991] {
[09:28:29.991]     do.call(function(...) {
[09:28:29.991]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:29.991]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:29.991]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:29.991]             on.exit(options(oopts), add = TRUE)
[09:28:29.991]         }
[09:28:29.991]         {
[09:28:29.991]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:29.991]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:29.991]                 ...future.FUN(...future.X_jj, ...)
[09:28:29.991]             })
[09:28:29.991]         }
[09:28:29.991]     }, args = future.call.arguments)
[09:28:29.991] }
[09:28:29.991] Lazy evaluation: FALSE
[09:28:29.991] Asynchronous evaluation: TRUE
[09:28:29.991] Local evaluation: TRUE
[09:28:29.991] Environment: 0x55f6930d5e38
[09:28:29.991] Capture standard output: TRUE
[09:28:29.991] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:29.991] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[09:28:29.991] Packages: <none>
[09:28:29.991] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:29.991] Resolved: FALSE
[09:28:29.991] Value: <not collected>
[09:28:29.991] Conditions captured: <none>
[09:28:29.991] Early signaling: FALSE
[09:28:29.991] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:29.991] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.002] Chunk #1 of 2 ... DONE
[09:28:30.003] Chunk #2 of 2 ...
[09:28:30.003]  - Finding globals in 'X' for chunk #2 ...
[09:28:30.003]    + additional globals found: [n=0] 
[09:28:30.003]    + additional namespaces needed: [n=0] 
[09:28:30.003]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:30.004]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:30.004]  - seeds: <none>
[09:28:30.004]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.072] Created future:
[09:28:30.072] MultisessionFuture:
[09:28:30.072] Label: ‘future_lapply-2’
[09:28:30.072] Expression:
[09:28:30.072] {
[09:28:30.072]     do.call(function(...) {
[09:28:30.072]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.072]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.072]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.072]             on.exit(options(oopts), add = TRUE)
[09:28:30.072]         }
[09:28:30.072]         {
[09:28:30.072]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.072]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.072]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.072]             })
[09:28:30.072]         }
[09:28:30.072]     }, args = future.call.arguments)
[09:28:30.072] }
[09:28:30.072] Lazy evaluation: FALSE
[09:28:30.072] Asynchronous evaluation: TRUE
[09:28:30.072] Local evaluation: TRUE
[09:28:30.072] Environment: 0x55f6930d5e38
[09:28:30.072] Capture standard output: TRUE
[09:28:30.072] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.072] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[09:28:30.072] Packages: <none>
[09:28:30.072] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.072] Resolved: FALSE
[09:28:30.072] Value: <not collected>
[09:28:30.072] Conditions captured: <none>
[09:28:30.072] Early signaling: FALSE
[09:28:30.072] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.072] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.084] Chunk #2 of 2 ... DONE
[09:28:30.084] Launching 2 futures (chunks) ... DONE
[09:28:30.084] Resolving 2 futures (chunks) ...
[09:28:30.149]  - Number of value chunks collected: 2
[09:28:30.149] Resolving 2 futures (chunks) ... DONE
[09:28:30.149] Reducing values from 2 chunks ...
[09:28:30.149]  - Number of values collected after concatenation: 3
[09:28:30.149]  - Number of values expected: 3
[09:28:30.149] Reducing values from 2 chunks ... DONE
[09:28:30.149] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[09:28:30.150] future_lapply() ...
[09:28:30.154] Number of chunks: 1
[09:28:30.155] getGlobalsAndPackagesXApply() ...
[09:28:30.155]  - future.globals: TRUE
[09:28:30.158]  - globals found/used: [n=1] ‘FUN’
[09:28:30.158]  - needed namespaces: [n=0] 
[09:28:30.158] Finding globals ... DONE
[09:28:30.158]  - use_args: TRUE
[09:28:30.158]  - Getting '...' globals ...
[09:28:30.158]    - '...' content: [n=1] ‘what’
[09:28:30.158] List of 1
[09:28:30.158]  $ ...:List of 1
[09:28:30.158]   ..$ what:function (x)  
[09:28:30.158]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.158]  - attr(*, "where")=List of 1
[09:28:30.158]   ..$ ...:<environment: 0x55f6946477f0> 
[09:28:30.158]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.158]  - attr(*, "resolved")= logi TRUE
[09:28:30.158]  - attr(*, "total_size")= num NA
[09:28:30.161]  - Getting '...' globals ... DONE
[09:28:30.161] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.162] List of 2
[09:28:30.162]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:30.162]  $ ...          :List of 1
[09:28:30.162]   ..$ what:function (x)  
[09:28:30.162]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.162]  - attr(*, "where")=List of 2
[09:28:30.162]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.162]   ..$ ...          :<environment: 0x55f6946477f0> 
[09:28:30.162]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.162]  - attr(*, "resolved")= logi FALSE
[09:28:30.162]  - attr(*, "total_size")= num 12192
[09:28:30.164] Packages to be attached in all futures: [n=0] 
[09:28:30.165] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.165] Number of futures (= number of chunks): 1
[09:28:30.165] Launching 1 futures (chunks) ...
[09:28:30.165] Chunk #1 of 1 ...
[09:28:30.165]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.165]    + additional globals found: [n=0] 
[09:28:30.165]    + additional namespaces needed: [n=0] 
[09:28:30.166]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.166]  - seeds: <none>
[09:28:30.166]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.186] Created future:
[09:28:30.186] MultisessionFuture:
[09:28:30.186] Label: ‘future_lapply-1’
[09:28:30.186] Expression:
[09:28:30.186] {
[09:28:30.186]     do.call(function(...) {
[09:28:30.186]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.186]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.186]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.186]             on.exit(options(oopts), add = TRUE)
[09:28:30.186]         }
[09:28:30.186]         {
[09:28:30.186]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.186]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.186]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.186]             })
[09:28:30.186]         }
[09:28:30.186]     }, args = future.call.arguments)
[09:28:30.186] }
[09:28:30.186] Lazy evaluation: FALSE
[09:28:30.186] Asynchronous evaluation: TRUE
[09:28:30.186] Local evaluation: TRUE
[09:28:30.186] Environment: R_GlobalEnv
[09:28:30.186] Capture standard output: TRUE
[09:28:30.186] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.186] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.186] Packages: <none>
[09:28:30.186] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.186] Resolved: FALSE
[09:28:30.186] Value: <not collected>
[09:28:30.186] Conditions captured: <none>
[09:28:30.186] Early signaling: FALSE
[09:28:30.186] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.186] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.198] Chunk #1 of 1 ... DONE
[09:28:30.198] Launching 1 futures (chunks) ... DONE
[09:28:30.198] Resolving 1 futures (chunks) ...
[09:28:30.230]  - Number of value chunks collected: 1
[09:28:30.230] Resolving 1 futures (chunks) ... DONE
[09:28:30.230] Reducing values from 1 chunks ...
[09:28:30.230]  - Number of values collected after concatenation: 1
[09:28:30.230]  - Number of values expected: 1
[09:28:30.230] Reducing values from 1 chunks ... DONE
[09:28:30.230] future_lapply() ... DONE
[09:28:30.230] future_lapply() ...
[09:28:30.235] Number of chunks: 1
[09:28:30.235] getGlobalsAndPackagesXApply() ...
[09:28:30.235]  - future.globals: TRUE
[09:28:30.237]  - globals found/used: [n=1] ‘FUN’
[09:28:30.237]  - needed namespaces: [n=0] 
[09:28:30.238] Finding globals ... DONE
[09:28:30.238]  - use_args: TRUE
[09:28:30.238]  - Getting '...' globals ...
[09:28:30.238]    - '...' content: [n=1] ‘what’
[09:28:30.238] List of 1
[09:28:30.238]  $ ...:List of 1
[09:28:30.238]   ..$ what:function (...)  
[09:28:30.238]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.238]  - attr(*, "where")=List of 1
[09:28:30.238]   ..$ ...:<environment: 0x55f695f02ad0> 
[09:28:30.238]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.238]  - attr(*, "resolved")= logi TRUE
[09:28:30.238]  - attr(*, "total_size")= num NA
[09:28:30.250]  - Getting '...' globals ... DONE
[09:28:30.250] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.250] List of 2
[09:28:30.250]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[09:28:30.250]  $ ...          :List of 1
[09:28:30.250]   ..$ what:function (...)  
[09:28:30.250]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.250]  - attr(*, "where")=List of 2
[09:28:30.250]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.250]   ..$ ...          :<environment: 0x55f695f02ad0> 
[09:28:30.250]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.250]  - attr(*, "resolved")= logi FALSE
[09:28:30.250]  - attr(*, "total_size")= num 13352
[09:28:30.253] Packages to be attached in all futures: [n=0] 
[09:28:30.253] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.253] Number of futures (= number of chunks): 1
[09:28:30.253] Launching 1 futures (chunks) ...
[09:28:30.253] Chunk #1 of 1 ...
[09:28:30.253]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.254]    + additional globals found: [n=0] 
[09:28:30.254]    + additional namespaces needed: [n=0] 
[09:28:30.254]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.254]  - seeds: <none>
[09:28:30.254]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.271] Created future:
[09:28:30.271] MultisessionFuture:
[09:28:30.271] Label: ‘future_lapply-1’
[09:28:30.271] Expression:
[09:28:30.271] {
[09:28:30.271]     do.call(function(...) {
[09:28:30.271]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.271]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.271]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.271]             on.exit(options(oopts), add = TRUE)
[09:28:30.271]         }
[09:28:30.271]         {
[09:28:30.271]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.271]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.271]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.271]             })
[09:28:30.271]         }
[09:28:30.271]     }, args = future.call.arguments)
[09:28:30.271] }
[09:28:30.271] Lazy evaluation: FALSE
[09:28:30.271] Asynchronous evaluation: TRUE
[09:28:30.271] Local evaluation: TRUE
[09:28:30.271] Environment: R_GlobalEnv
[09:28:30.271] Capture standard output: TRUE
[09:28:30.271] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.271] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.271] Packages: <none>
[09:28:30.271] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.271] Resolved: FALSE
[09:28:30.271] Value: <not collected>
[09:28:30.271] Conditions captured: <none>
[09:28:30.271] Early signaling: FALSE
[09:28:30.271] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.271] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.283] Chunk #1 of 1 ... DONE
[09:28:30.283] Launching 1 futures (chunks) ... DONE
[09:28:30.283] Resolving 1 futures (chunks) ...
[09:28:30.314]  - Number of value chunks collected: 1
[09:28:30.314] Resolving 1 futures (chunks) ... DONE
[09:28:30.314] Reducing values from 1 chunks ...
[09:28:30.314]  - Number of values collected after concatenation: 1
[09:28:30.314]  - Number of values expected: 1
[09:28:30.314] Reducing values from 1 chunks ... DONE
[09:28:30.314] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[09:28:30.315] future_lapply() ...
[09:28:30.318] Number of chunks: 1
[09:28:30.318] getGlobalsAndPackagesXApply() ...
[09:28:30.318]  - future.globals: TRUE
[09:28:30.320]  - globals found/used: [n=1] ‘FUN’
[09:28:30.320]  - needed namespaces: [n=0] 
[09:28:30.320] Finding globals ... DONE
[09:28:30.320]  - use_args: TRUE
[09:28:30.320]  - Getting '...' globals ...
[09:28:30.321]    - '...' content: [n=1] ‘b’
[09:28:30.321] List of 1
[09:28:30.321]  $ ...:List of 1
[09:28:30.321]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:30.321]   .. ..$ a: int [1:2] 1 2
[09:28:30.321]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.321]  - attr(*, "where")=List of 1
[09:28:30.321]   ..$ ...:<environment: 0x55f6940670e0> 
[09:28:30.321]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.321]  - attr(*, "resolved")= logi TRUE
[09:28:30.321]  - attr(*, "total_size")= num NA
[09:28:30.324]  - Getting '...' globals ... DONE
[09:28:30.324] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.325] List of 2
[09:28:30.325]  $ ...future.FUN:function (a, b)  
[09:28:30.325]  $ ...          :List of 1
[09:28:30.325]   ..$ b:'data.frame':	2 obs. of  1 variable:
[09:28:30.325]   .. ..$ a: int [1:2] 1 2
[09:28:30.325]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.325]  - attr(*, "where")=List of 2
[09:28:30.325]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.325]   ..$ ...          :<environment: 0x55f6940670e0> 
[09:28:30.325]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.325]  - attr(*, "resolved")= logi FALSE
[09:28:30.325]  - attr(*, "total_size")= num 1440
[09:28:30.328] Packages to be attached in all futures: [n=0] 
[09:28:30.328] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.328] Number of futures (= number of chunks): 1
[09:28:30.328] Launching 1 futures (chunks) ...
[09:28:30.328] Chunk #1 of 1 ...
[09:28:30.328]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.329]    + additional globals found: [n=0] 
[09:28:30.329]    + additional namespaces needed: [n=0] 
[09:28:30.329]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.329]  - seeds: <none>
[09:28:30.329]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.345] Created future:
[09:28:30.346] MultisessionFuture:
[09:28:30.346] Label: ‘future_lapply-1’
[09:28:30.346] Expression:
[09:28:30.346] {
[09:28:30.346]     do.call(function(...) {
[09:28:30.346]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.346]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.346]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.346]             on.exit(options(oopts), add = TRUE)
[09:28:30.346]         }
[09:28:30.346]         {
[09:28:30.346]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.346]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.346]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.346]             })
[09:28:30.346]         }
[09:28:30.346]     }, args = future.call.arguments)
[09:28:30.346] }
[09:28:30.346] Lazy evaluation: FALSE
[09:28:30.346] Asynchronous evaluation: TRUE
[09:28:30.346] Local evaluation: TRUE
[09:28:30.346] Environment: R_GlobalEnv
[09:28:30.346] Capture standard output: TRUE
[09:28:30.346] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.346] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.346] Packages: <none>
[09:28:30.346] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.346] Resolved: FALSE
[09:28:30.346] Value: <not collected>
[09:28:30.346] Conditions captured: <none>
[09:28:30.346] Early signaling: FALSE
[09:28:30.346] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.346] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.357] Chunk #1 of 1 ... DONE
[09:28:30.357] Launching 1 futures (chunks) ... DONE
[09:28:30.357] Resolving 1 futures (chunks) ...
[09:28:30.399]  - Number of value chunks collected: 1
[09:28:30.399] Resolving 1 futures (chunks) ... DONE
[09:28:30.399] Reducing values from 1 chunks ...
[09:28:30.399]  - Number of values collected after concatenation: 1
[09:28:30.400]  - Number of values expected: 1
[09:28:30.400] Reducing values from 1 chunks ... DONE
[09:28:30.400] future_lapply() ... DONE
[09:28:30.400] future_lapply() ...
[09:28:30.403] Number of chunks: 1
[09:28:30.403] getGlobalsAndPackagesXApply() ...
[09:28:30.404]  - future.globals: TRUE
[09:28:30.405]  - globals found/used: [n=1] ‘FUN’
[09:28:30.405]  - needed namespaces: [n=0] 
[09:28:30.405] Finding globals ... DONE
[09:28:30.405]  - use_args: TRUE
[09:28:30.405]  - Getting '...' globals ...
[09:28:30.406]    - '...' content: [n=1] ‘b’
[09:28:30.406] List of 1
[09:28:30.406]  $ ...:List of 1
[09:28:30.406]   ..$ b:<environment: 0x55f695d26338> 
[09:28:30.406]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.406]  - attr(*, "where")=List of 1
[09:28:30.406]   ..$ ...:<environment: 0x55f695d25880> 
[09:28:30.406]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.406]  - attr(*, "resolved")= logi TRUE
[09:28:30.406]  - attr(*, "total_size")= num NA
[09:28:30.409]  - Getting '...' globals ... DONE
[09:28:30.409] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.409] List of 2
[09:28:30.409]  $ ...future.FUN:function (a, b)  
[09:28:30.409]  $ ...          :List of 1
[09:28:30.409]   ..$ b:<environment: 0x55f695d26338> 
[09:28:30.409]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.409]  - attr(*, "where")=List of 2
[09:28:30.409]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.409]   ..$ ...          :<environment: 0x55f695d25880> 
[09:28:30.409]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.409]  - attr(*, "resolved")= logi FALSE
[09:28:30.409]  - attr(*, "total_size")= num 1440
[09:28:30.412] Packages to be attached in all futures: [n=0] 
[09:28:30.412] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.414] Number of futures (= number of chunks): 1
[09:28:30.414] Launching 1 futures (chunks) ...
[09:28:30.414] Chunk #1 of 1 ...
[09:28:30.414]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.415]    + additional globals found: [n=0] 
[09:28:30.415]    + additional namespaces needed: [n=0] 
[09:28:30.415]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.415]  - seeds: <none>
[09:28:30.415]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.432] Created future:
[09:28:30.432] MultisessionFuture:
[09:28:30.432] Label: ‘future_lapply-1’
[09:28:30.432] Expression:
[09:28:30.432] {
[09:28:30.432]     do.call(function(...) {
[09:28:30.432]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.432]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.432]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.432]             on.exit(options(oopts), add = TRUE)
[09:28:30.432]         }
[09:28:30.432]         {
[09:28:30.432]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.432]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.432]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.432]             })
[09:28:30.432]         }
[09:28:30.432]     }, args = future.call.arguments)
[09:28:30.432] }
[09:28:30.432] Lazy evaluation: FALSE
[09:28:30.432] Asynchronous evaluation: TRUE
[09:28:30.432] Local evaluation: TRUE
[09:28:30.432] Environment: R_GlobalEnv
[09:28:30.432] Capture standard output: TRUE
[09:28:30.432] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.432] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.432] Packages: <none>
[09:28:30.432] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.432] Resolved: FALSE
[09:28:30.432] Value: <not collected>
[09:28:30.432] Conditions captured: <none>
[09:28:30.432] Early signaling: FALSE
[09:28:30.432] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.432] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.443] Chunk #1 of 1 ... DONE
[09:28:30.443] Launching 1 futures (chunks) ... DONE
[09:28:30.443] Resolving 1 futures (chunks) ...
[09:28:30.474]  - Number of value chunks collected: 1
[09:28:30.474] Resolving 1 futures (chunks) ... DONE
[09:28:30.474] Reducing values from 1 chunks ...
[09:28:30.474]  - Number of values collected after concatenation: 1
[09:28:30.474]  - Number of values expected: 1
[09:28:30.474] Reducing values from 1 chunks ... DONE
[09:28:30.474] future_lapply() ... DONE
[09:28:30.474] future_lapply() ...
[09:28:30.478] Number of chunks: 1
[09:28:30.478] getGlobalsAndPackagesXApply() ...
[09:28:30.478]  - future.globals: TRUE
[09:28:30.480]  - globals found/used: [n=1] ‘FUN’
[09:28:30.480]  - needed namespaces: [n=0] 
[09:28:30.480] Finding globals ... DONE
[09:28:30.480]  - use_args: TRUE
[09:28:30.480]  - Getting '...' globals ...
[09:28:30.481]    - '...' content: [n=1] ‘b’
[09:28:30.481] List of 1
[09:28:30.481]  $ ...:List of 1
[09:28:30.481]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:30.481]   .. .. ..@ slots     :List of 4
[09:28:30.481]   .. .. .. ..$ .Data  : chr "function"
[09:28:30.481]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. ..$ target : chr "signature"
[09:28:30.481]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. ..$ defined: chr "signature"
[09:28:30.481]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. ..$ generic: chr "character"
[09:28:30.481]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. ..@ contains  :List of 3
[09:28:30.481]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.481]   .. .. ..@ virtual   : logi FALSE
[09:28:30.481]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:30.481]  list()
[09:28:30.481]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:30.481]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:30.481]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:30.481]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:30.481]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:30.481]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:30.481]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:30.481]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:30.481]   .. .. .. .. ..$ generic: chr(0) 
[09:28:30.481]   .. .. ..@ validity  : NULL
[09:28:30.481]   .. .. ..@ access    : list()
[09:28:30.481]   .. .. ..@ className : chr "MethodDefinition"
[09:28:30.481]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. ..@ subclasses:List of 7
[09:28:30.481]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.481]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.481]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.481]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.481]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.481]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.481]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.481]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.481]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:30.481]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.481]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.481]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.481]   .. .. ..@ versionKey:<externalptr> 
[09:28:30.481]   .. .. ..@ sealed    : logi TRUE
[09:28:30.481]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.481]  - attr(*, "where")=List of 1
[09:28:30.481]   ..$ ...:<environment: 0x55f69497dc38> 
[09:28:30.481]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.481]  - attr(*, "resolved")= logi TRUE
[09:28:30.481]  - attr(*, "total_size")= num NA
[09:28:30.527]  - Getting '...' globals ... DONE
[09:28:30.527] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.527] List of 2
[09:28:30.527]  $ ...future.FUN:function (a, b)  
[09:28:30.527]  $ ...          :List of 1
[09:28:30.527]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[09:28:30.527]   .. .. ..@ slots     :List of 4
[09:28:30.527]   .. .. .. ..$ .Data  : chr "function"
[09:28:30.527]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. ..$ target : chr "signature"
[09:28:30.527]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. ..$ defined: chr "signature"
[09:28:30.527]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. ..$ generic: chr "character"
[09:28:30.527]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. ..@ contains  :List of 3
[09:28:30.527]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "function"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr "function"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.527]   .. .. ..@ virtual   : logi FALSE
[09:28:30.527]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[09:28:30.527]  list()
[09:28:30.527]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[09:28:30.527]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:30.527]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:30.527]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:30.527]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[09:28:30.527]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[09:28:30.527]   .. .. .. .. .. .. ..@ names  : chr(0) 
[09:28:30.527]   .. .. .. .. .. .. ..@ package: chr(0) 
[09:28:30.527]   .. .. .. .. ..$ generic: chr(0) 
[09:28:30.527]   .. .. ..@ validity  : NULL
[09:28:30.527]   .. .. ..@ access    : list()
[09:28:30.527]   .. .. ..@ className : chr "MethodDefinition"
[09:28:30.527]   .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. ..@ subclasses:List of 7
[09:28:30.527]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr(0) 
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 1
[09:28:30.527]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.527]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.527]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[09:28:30.527]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ package   : chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[09:28:30.527]   .. .. .. .. .. ..@ test      :function (object)  
[09:28:30.527]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[09:28:30.527]   .. .. .. .. .. ..@ simple    : logi TRUE
[09:28:30.527]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[09:28:30.527]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[09:28:30.527]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[09:28:30.527]   .. .. .. .. .. ..@ distance  : num 2
[09:28:30.527]   .. .. ..@ versionKey:<externalptr> 
[09:28:30.527]   .. .. ..@ sealed    : logi TRUE
[09:28:30.527]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.527]  - attr(*, "where")=List of 2
[09:28:30.527]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.527]   ..$ ...          :<environment: 0x55f69497dc38> 
[09:28:30.527]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.527]  - attr(*, "resolved")= logi FALSE
[09:28:30.527]  - attr(*, "total_size")= num 405168
[09:28:30.572] Packages to be attached in all futures: [n=0] 
[09:28:30.572] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.572] Number of futures (= number of chunks): 1
[09:28:30.573] Launching 1 futures (chunks) ...
[09:28:30.573] Chunk #1 of 1 ...
[09:28:30.573]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.573]    + additional globals found: [n=0] 
[09:28:30.573]    + additional namespaces needed: [n=0] 
[09:28:30.573]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.573]  - seeds: <none>
[09:28:30.574]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.633] Created future:
[09:28:30.633] MultisessionFuture:
[09:28:30.633] Label: ‘future_lapply-1’
[09:28:30.633] Expression:
[09:28:30.633] {
[09:28:30.633]     do.call(function(...) {
[09:28:30.633]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.633]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.633]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.633]             on.exit(options(oopts), add = TRUE)
[09:28:30.633]         }
[09:28:30.633]         {
[09:28:30.633]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.633]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.633]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.633]             })
[09:28:30.633]         }
[09:28:30.633]     }, args = future.call.arguments)
[09:28:30.633] }
[09:28:30.633] Lazy evaluation: FALSE
[09:28:30.633] Asynchronous evaluation: TRUE
[09:28:30.633] Local evaluation: TRUE
[09:28:30.633] Environment: R_GlobalEnv
[09:28:30.633] Capture standard output: TRUE
[09:28:30.633] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.633] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.633] Packages: <none>
[09:28:30.633] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.633] Resolved: TRUE
[09:28:30.633] Value: <not collected>
[09:28:30.633] Conditions captured: <none>
[09:28:30.633] Early signaling: FALSE
[09:28:30.633] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.633] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.635] Chunk #1 of 1 ... DONE
[09:28:30.635] Launching 1 futures (chunks) ... DONE
[09:28:30.635] Resolving 1 futures (chunks) ...
[09:28:30.636]  - Number of value chunks collected: 1
[09:28:30.636] Resolving 1 futures (chunks) ... DONE
[09:28:30.636] Reducing values from 1 chunks ...
[09:28:30.636]  - Number of values collected after concatenation: 1
[09:28:30.636]  - Number of values expected: 1
[09:28:30.636] Reducing values from 1 chunks ... DONE
[09:28:30.636] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[09:28:30.638] future_lapply() ...
[09:28:30.642] Number of chunks: 2
[09:28:30.642] getGlobalsAndPackagesXApply() ...
[09:28:30.642]  - future.globals: TRUE
[09:28:30.643]  - globals found/used: [n=1] ‘FUN’
[09:28:30.643]  - needed namespaces: [n=0] 
[09:28:30.644] Finding globals ... DONE
[09:28:30.644]  - use_args: TRUE
[09:28:30.644]  - Getting '...' globals ...
[09:28:30.644]    - '...' content: [n=0] 
[09:28:30.644] List of 1
[09:28:30.644]  $ ...: list()
[09:28:30.644]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.644]  - attr(*, "where")=List of 1
[09:28:30.644]   ..$ ...:<environment: 0x55f69600d958> 
[09:28:30.644]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.644]  - attr(*, "resolved")= logi TRUE
[09:28:30.644]  - attr(*, "total_size")= num NA
[09:28:30.648]  - Getting '...' globals ... DONE
[09:28:30.649] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:30.649] List of 2
[09:28:30.649]  $ ...future.FUN:function (f)  
[09:28:30.649]  $ ...          : list()
[09:28:30.649]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.649]  - attr(*, "where")=List of 2
[09:28:30.649]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.649]   ..$ ...          :<environment: 0x55f69600d958> 
[09:28:30.649]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.649]  - attr(*, "resolved")= logi FALSE
[09:28:30.649]  - attr(*, "total_size")= num 1008
[09:28:30.651] Packages to be attached in all futures: [n=0] 
[09:28:30.651] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.651] Number of futures (= number of chunks): 2
[09:28:30.652] Launching 2 futures (chunks) ...
[09:28:30.652] Chunk #1 of 2 ...
[09:28:30.652]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.653]    + additional globals found: [n=2] ‘a’, ‘b’
[09:28:30.653]    + additional namespaces needed: [n=0] 
[09:28:30.654]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.654]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:30.654]  - seeds: <none>
[09:28:30.654]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[09:28:30.670] Created future:
[09:28:30.671] MultisessionFuture:
[09:28:30.671] Label: ‘future_lapply-1’
[09:28:30.671] Expression:
[09:28:30.671] {
[09:28:30.671]     do.call(function(...) {
[09:28:30.671]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.671]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.671]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.671]             on.exit(options(oopts), add = TRUE)
[09:28:30.671]         }
[09:28:30.671]         {
[09:28:30.671]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.671]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.671]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.671]             })
[09:28:30.671]         }
[09:28:30.671]     }, args = future.call.arguments)
[09:28:30.671] }
[09:28:30.671] Lazy evaluation: FALSE
[09:28:30.671] Asynchronous evaluation: TRUE
[09:28:30.671] Local evaluation: TRUE
[09:28:30.671] Environment: R_GlobalEnv
[09:28:30.671] Capture standard output: TRUE
[09:28:30.671] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.671] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[09:28:30.671] Packages: <none>
[09:28:30.671] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.671] Resolved: FALSE
[09:28:30.671] Value: <not collected>
[09:28:30.671] Conditions captured: <none>
[09:28:30.671] Early signaling: FALSE
[09:28:30.671] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.671] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.682] Chunk #1 of 2 ... DONE
[09:28:30.682] Chunk #2 of 2 ...
[09:28:30.682]  - Finding globals in 'X' for chunk #2 ...
[09:28:30.684]    + additional globals found: [n=2] ‘a’, ‘b’
[09:28:30.684]    + additional namespaces needed: [n=1] ‘tools’
[09:28:30.684]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:30.684]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:30.684]  - seeds: <none>
[09:28:30.684]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[09:28:30.702] Created future:
[09:28:30.702] MultisessionFuture:
[09:28:30.702] Label: ‘future_lapply-2’
[09:28:30.702] Expression:
[09:28:30.702] {
[09:28:30.702]     do.call(function(...) {
[09:28:30.702]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.702]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.702]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.702]             on.exit(options(oopts), add = TRUE)
[09:28:30.702]         }
[09:28:30.702]         {
[09:28:30.702]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.702]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.702]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.702]             })
[09:28:30.702]         }
[09:28:30.702]     }, args = future.call.arguments)
[09:28:30.702] }
[09:28:30.702] Lazy evaluation: FALSE
[09:28:30.702] Asynchronous evaluation: TRUE
[09:28:30.702] Local evaluation: TRUE
[09:28:30.702] Environment: R_GlobalEnv
[09:28:30.702] Capture standard output: TRUE
[09:28:30.702] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.702] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[09:28:30.702] Packages: 1 packages (‘tools’)
[09:28:30.702] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.702] Resolved: FALSE
[09:28:30.702] Value: <not collected>
[09:28:30.702] Conditions captured: <none>
[09:28:30.702] Early signaling: FALSE
[09:28:30.702] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.702] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.713] Chunk #2 of 2 ... DONE
[09:28:30.713] Launching 2 futures (chunks) ... DONE
[09:28:30.714] Resolving 2 futures (chunks) ...
[09:28:30.757]  - Number of value chunks collected: 2
[09:28:30.757] Resolving 2 futures (chunks) ... DONE
[09:28:30.757] Reducing values from 2 chunks ...
[09:28:30.757]  - Number of values collected after concatenation: 4
[09:28:30.757]  - Number of values expected: 4
[09:28:30.757] Reducing values from 2 chunks ... DONE
[09:28:30.757] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[09:28:30.760] future_lapply() ...
[09:28:30.763] Number of chunks: 1
[09:28:30.764] getGlobalsAndPackagesXApply() ...
[09:28:30.764]  - future.globals: TRUE
[09:28:30.766]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[09:28:30.766]  - needed namespaces: [n=0] 
[09:28:30.766] Finding globals ... DONE
[09:28:30.766]  - use_args: TRUE
[09:28:30.766]  - Getting '...' globals ...
[09:28:30.766]    - '...' content: [n=0] 
[09:28:30.767] List of 1
[09:28:30.767]  $ ...: list()
[09:28:30.767]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.767]  - attr(*, "where")=List of 1
[09:28:30.767]   ..$ ...:<environment: 0x55f6947b12e8> 
[09:28:30.767]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.767]  - attr(*, "resolved")= logi TRUE
[09:28:30.767]  - attr(*, "total_size")= num NA
[09:28:30.769]  - Getting '...' globals ... DONE
[09:28:30.769] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[09:28:30.769] List of 3
[09:28:30.769]  $ ...future.FUN        :function (x)  
[09:28:30.769]  $ future.call.arguments:List of 1
[09:28:30.769]   ..$ a: num 1
[09:28:30.769]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.769]  $ ...                  : list()
[09:28:30.769]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.769]  - attr(*, "where")=List of 3
[09:28:30.769]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[09:28:30.769]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[09:28:30.769]   ..$ ...                  :<environment: 0x55f6947b12e8> 
[09:28:30.769]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.769]  - attr(*, "resolved")= logi FALSE
[09:28:30.769]  - attr(*, "total_size")= num 1272
[09:28:30.773] Packages to be attached in all futures: [n=0] 
[09:28:30.773] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.773] Number of futures (= number of chunks): 1
[09:28:30.773] Launching 1 futures (chunks) ...
[09:28:30.773] Chunk #1 of 1 ...
[09:28:30.773]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.774]    + additional globals found: [n=0] 
[09:28:30.774]    + additional namespaces needed: [n=0] 
[09:28:30.774]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.774]  - seeds: <none>
[09:28:30.774]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.790] Created future:
[09:28:30.790] MultisessionFuture:
[09:28:30.790] Label: ‘future_lapply-1’
[09:28:30.790] Expression:
[09:28:30.790] {
[09:28:30.790]     do.call(function(...) {
[09:28:30.790]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.790]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.790]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.790]             on.exit(options(oopts), add = TRUE)
[09:28:30.790]         }
[09:28:30.790]         {
[09:28:30.790]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.790]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.790]                 ...future.FUN(...future.X_jj)
[09:28:30.790]             })
[09:28:30.790]         }
[09:28:30.790]     }, args = future.call.arguments)
[09:28:30.790] }
[09:28:30.790] Lazy evaluation: FALSE
[09:28:30.790] Asynchronous evaluation: TRUE
[09:28:30.790] Local evaluation: TRUE
[09:28:30.790] Environment: 0x55f6947b1668
[09:28:30.790] Capture standard output: TRUE
[09:28:30.790] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.790] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:30.790] Packages: <none>
[09:28:30.790] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.790] Resolved: FALSE
[09:28:30.790] Value: <not collected>
[09:28:30.790] Conditions captured: <none>
[09:28:30.790] Early signaling: FALSE
[09:28:30.790] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.790] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.804] Chunk #1 of 1 ... DONE
[09:28:30.804] Launching 1 futures (chunks) ... DONE
[09:28:30.804] Resolving 1 futures (chunks) ...
[09:28:30.834]  - Number of value chunks collected: 1
[09:28:30.834] Resolving 1 futures (chunks) ... DONE
[09:28:30.834] Reducing values from 1 chunks ...
[09:28:30.834]  - Number of values collected after concatenation: 1
[09:28:30.834]  - Number of values expected: 1
[09:28:30.834] Reducing values from 1 chunks ... DONE
[09:28:30.834] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[09:28:30.835] future_lapply() ...
[09:28:30.839] Number of chunks: 1
[09:28:30.839] getGlobalsAndPackagesXApply() ...
[09:28:30.839]  - future.globals: TRUE
[09:28:30.841]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:30.841]  - needed namespaces: [n=0] 
[09:28:30.841] Finding globals ... DONE
[09:28:30.841]  - use_args: TRUE
[09:28:30.842]  - Getting '...' globals ...
[09:28:30.842]    - '...' content: [n=0] 
[09:28:30.842] List of 1
[09:28:30.842]  $ ...: list()
[09:28:30.842]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.842]  - attr(*, "where")=List of 1
[09:28:30.842]   ..$ ...:<environment: 0x55f6950e65d8> 
[09:28:30.842]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.842]  - attr(*, "resolved")= logi TRUE
[09:28:30.842]  - attr(*, "total_size")= num NA
[09:28:30.844]  - Getting '...' globals ... DONE
[09:28:30.844] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:30.844] List of 3
[09:28:30.844]  $ ...future.FUN:function (ii)  
[09:28:30.844]  $ a            : num 1
[09:28:30.844]  $ ...          : list()
[09:28:30.844]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.844]  - attr(*, "where")=List of 3
[09:28:30.844]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.844]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:30.844]   ..$ ...          :<environment: 0x55f6950e65d8> 
[09:28:30.844]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.844]  - attr(*, "resolved")= logi FALSE
[09:28:30.844]  - attr(*, "total_size")= num 2984
[09:28:30.847] Packages to be attached in all futures: [n=0] 
[09:28:30.848] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.848] Number of futures (= number of chunks): 1
[09:28:30.848] Launching 1 futures (chunks) ...
[09:28:30.848] Chunk #1 of 1 ...
[09:28:30.848]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.848]    + additional globals found: [n=0] 
[09:28:30.848]    + additional namespaces needed: [n=0] 
[09:28:30.849]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.849]  - seeds: <none>
[09:28:30.849]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.867] Created future:
[09:28:30.867] MultisessionFuture:
[09:28:30.867] Label: ‘future_lapply-1’
[09:28:30.867] Expression:
[09:28:30.867] {
[09:28:30.867]     do.call(function(...) {
[09:28:30.867]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.867]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.867]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.867]             on.exit(options(oopts), add = TRUE)
[09:28:30.867]         }
[09:28:30.867]         {
[09:28:30.867]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.867]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.867]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.867]             })
[09:28:30.867]         }
[09:28:30.867]     }, args = future.call.arguments)
[09:28:30.867] }
[09:28:30.867] Lazy evaluation: FALSE
[09:28:30.867] Asynchronous evaluation: TRUE
[09:28:30.867] Local evaluation: TRUE
[09:28:30.867] Environment: R_GlobalEnv
[09:28:30.867] Capture standard output: TRUE
[09:28:30.867] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.867] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:30.867] Packages: <none>
[09:28:30.867] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.867] Resolved: FALSE
[09:28:30.867] Value: <not collected>
[09:28:30.867] Conditions captured: <none>
[09:28:30.867] Early signaling: FALSE
[09:28:30.867] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.867] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.878] Chunk #1 of 1 ... DONE
[09:28:30.878] Launching 1 futures (chunks) ... DONE
[09:28:30.878] Resolving 1 futures (chunks) ...
[09:28:30.910]  - Number of value chunks collected: 1
[09:28:30.910] Resolving 1 futures (chunks) ... DONE
[09:28:30.910] Reducing values from 1 chunks ...
[09:28:30.910]  - Number of values collected after concatenation: 1
[09:28:30.910]  - Number of values expected: 1
[09:28:30.910] Reducing values from 1 chunks ... DONE
[09:28:30.910] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[09:28:30.910] future_lapply() ...
[09:28:30.915] Number of chunks: 1
[09:28:30.915] getGlobalsAndPackagesXApply() ...
[09:28:30.915]  - future.globals: TRUE
[09:28:30.917]  - globals found/used: [n=2] ‘FUN’, ‘a’
[09:28:30.917]  - needed namespaces: [n=0] 
[09:28:30.917] Finding globals ... DONE
[09:28:30.917]  - use_args: TRUE
[09:28:30.917]  - Getting '...' globals ...
[09:28:30.918]    - '...' content: [n=0] 
[09:28:30.918] List of 1
[09:28:30.918]  $ ...: list()
[09:28:30.918]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.918]  - attr(*, "where")=List of 1
[09:28:30.918]   ..$ ...:<environment: 0x55f695bd5c10> 
[09:28:30.918]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.918]  - attr(*, "resolved")= logi TRUE
[09:28:30.918]  - attr(*, "total_size")= num NA
[09:28:30.920]  - Getting '...' globals ... DONE
[09:28:30.921] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[09:28:30.921] List of 3
[09:28:30.921]  $ ...future.FUN:function (ii)  
[09:28:30.921]  $ a            : num 1
[09:28:30.921]  $ ...          : list()
[09:28:30.921]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:30.921]  - attr(*, "where")=List of 3
[09:28:30.921]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:30.921]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:30.921]   ..$ ...          :<environment: 0x55f695bd5c10> 
[09:28:30.921]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:30.921]  - attr(*, "resolved")= logi FALSE
[09:28:30.921]  - attr(*, "total_size")= num 2984
[09:28:30.924] Packages to be attached in all futures: [n=0] 
[09:28:30.924] getGlobalsAndPackagesXApply() ... DONE
[09:28:30.924] Number of futures (= number of chunks): 1
[09:28:30.924] Launching 1 futures (chunks) ...
[09:28:30.924] Chunk #1 of 1 ...
[09:28:30.924]  - Finding globals in 'X' for chunk #1 ...
[09:28:30.925]    + additional globals found: [n=0] 
[09:28:30.925]    + additional namespaces needed: [n=0] 
[09:28:30.925]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:30.925]  - seeds: <none>
[09:28:30.925]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:30.941] Created future:
[09:28:30.942] MultisessionFuture:
[09:28:30.942] Label: ‘future_lapply-1’
[09:28:30.942] Expression:
[09:28:30.942] {
[09:28:30.942]     do.call(function(...) {
[09:28:30.942]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:30.942]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:30.942]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:30.942]             on.exit(options(oopts), add = TRUE)
[09:28:30.942]         }
[09:28:30.942]         {
[09:28:30.942]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:30.942]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:30.942]                 ...future.FUN(...future.X_jj, ...)
[09:28:30.942]             })
[09:28:30.942]         }
[09:28:30.942]     }, args = future.call.arguments)
[09:28:30.942] }
[09:28:30.942] Lazy evaluation: FALSE
[09:28:30.942] Asynchronous evaluation: TRUE
[09:28:30.942] Local evaluation: TRUE
[09:28:30.942] Environment: R_GlobalEnv
[09:28:30.942] Capture standard output: TRUE
[09:28:30.942] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:30.942] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:30.942] Packages: <none>
[09:28:30.942] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:30.942] Resolved: FALSE
[09:28:30.942] Value: <not collected>
[09:28:30.942] Conditions captured: <none>
[09:28:30.942] Early signaling: FALSE
[09:28:30.942] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:30.942] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:30.953] Chunk #1 of 1 ... DONE
[09:28:30.953] Launching 1 futures (chunks) ... DONE
[09:28:30.953] Resolving 1 futures (chunks) ...
[09:28:30.995]  - Number of value chunks collected: 1
[09:28:30.995] Resolving 1 futures (chunks) ... DONE
[09:28:30.995] Reducing values from 1 chunks ...
[09:28:30.995]  - Number of values collected after concatenation: 1
[09:28:30.996]  - Number of values expected: 1
[09:28:30.996] Reducing values from 1 chunks ... DONE
[09:28:30.996] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[09:28:30.998] future_lapply() ...
[09:28:31.001] Number of chunks: 1
[09:28:31.001] getGlobalsAndPackagesXApply() ...
[09:28:31.002]  - future.globals: <name-value list> with names ‘42’
[09:28:31.002]  - use_args: TRUE
[09:28:31.002]  - Getting '...' globals ...
[09:28:31.002]    - '...' content: [n=0] 
[09:28:31.002] List of 1
[09:28:31.002]  $ ...: list()
[09:28:31.002]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.002]  - attr(*, "where")=List of 1
[09:28:31.002]   ..$ ...:<environment: 0x55f6949806b8> 
[09:28:31.002]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.002]  - attr(*, "resolved")= logi TRUE
[09:28:31.002]  - attr(*, "total_size")= num NA
[09:28:31.005]  - Getting '...' globals ... DONE
[09:28:31.005] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[09:28:31.005] List of 3
[09:28:31.005]  $ a            : num 42
[09:28:31.005]  $ ...future.FUN:function (x)  
[09:28:31.005]  $ ...          : list()
[09:28:31.005]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.005]  - attr(*, "where")=List of 3
[09:28:31.005]   ..$ a            :<environment: R_EmptyEnv> 
[09:28:31.005]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[09:28:31.005]   ..$ ...          :<environment: 0x55f6949806b8> 
[09:28:31.005]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.005]  - attr(*, "resolved")= logi FALSE
[09:28:31.005]  - attr(*, "total_size")= num NA
[09:28:31.008] Packages to be attached in all futures: [n=0] 
[09:28:31.008] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.008] Number of futures (= number of chunks): 1
[09:28:31.008] Launching 1 futures (chunks) ...
[09:28:31.008] Chunk #1 of 1 ...
[09:28:31.009]  - seeds: <none>
[09:28:31.009]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.026] Created future:
[09:28:31.026] MultisessionFuture:
[09:28:31.026] Label: ‘future_lapply-1’
[09:28:31.026] Expression:
[09:28:31.026] {
[09:28:31.026]     do.call(function(...) {
[09:28:31.026]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.026]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.026]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.026]             on.exit(options(oopts), add = TRUE)
[09:28:31.026]         }
[09:28:31.026]         {
[09:28:31.026]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.026]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.026]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.026]             })
[09:28:31.026]         }
[09:28:31.026]     }, args = future.call.arguments)
[09:28:31.026] }
[09:28:31.026] Lazy evaluation: FALSE
[09:28:31.026] Asynchronous evaluation: TRUE
[09:28:31.026] Local evaluation: TRUE
[09:28:31.026] Environment: R_GlobalEnv
[09:28:31.026] Capture standard output: TRUE
[09:28:31.026] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.026] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[09:28:31.026] Packages: <none>
[09:28:31.026] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.026] Resolved: FALSE
[09:28:31.026] Value: <not collected>
[09:28:31.026] Conditions captured: <none>
[09:28:31.026] Early signaling: FALSE
[09:28:31.026] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.026] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.037] Chunk #1 of 1 ... DONE
[09:28:31.038] Launching 1 futures (chunks) ... DONE
[09:28:31.038] Resolving 1 futures (chunks) ...
[09:28:31.080]  - Number of value chunks collected: 1
[09:28:31.080] Resolving 1 futures (chunks) ... DONE
[09:28:31.080] Reducing values from 1 chunks ...
[09:28:31.080]  - Number of values collected after concatenation: 1
[09:28:31.081]  - Number of values expected: 1
[09:28:31.081] Reducing values from 1 chunks ... DONE
[09:28:31.081] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[09:28:31.082] future_lapply() ...
[09:28:31.085] Number of chunks: 2
[09:28:31.085] getGlobalsAndPackagesXApply() ...
[09:28:31.085]  - future.globals: TRUE
[09:28:31.087]  - globals found/used: [n=1] ‘FUN’
[09:28:31.087]  - needed namespaces: [n=0] 
[09:28:31.087] Finding globals ... DONE
[09:28:31.087]  - use_args: TRUE
[09:28:31.087]  - Getting '...' globals ...
[09:28:31.088]    - '...' content: [n=0] 
[09:28:31.088] List of 1
[09:28:31.088]  $ ...: list()
[09:28:31.088]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.088]  - attr(*, "where")=List of 1
[09:28:31.088]   ..$ ...:<environment: 0x55f693c8ab00> 
[09:28:31.088]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.088]  - attr(*, "resolved")= logi TRUE
[09:28:31.088]  - attr(*, "total_size")= num NA
[09:28:31.090]  - Getting '...' globals ... DONE
[09:28:31.090] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:31.090] List of 2
[09:28:31.090]  $ ...future.FUN:function (y)  
[09:28:31.090]  $ ...          : list()
[09:28:31.090]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.090]  - attr(*, "where")=List of 2
[09:28:31.090]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:31.090]   ..$ ...          :<environment: 0x55f693c8ab00> 
[09:28:31.090]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.090]  - attr(*, "resolved")= logi FALSE
[09:28:31.090]  - attr(*, "total_size")= num 280
[09:28:31.093] Packages to be attached in all futures: [n=0] 
[09:28:31.093] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.093] Number of futures (= number of chunks): 2
[09:28:31.093] Launching 2 futures (chunks) ...
[09:28:31.093] Chunk #1 of 2 ...
[09:28:31.093]  - Finding globals in 'X' for chunk #1 ...
[09:28:31.094]    + additional globals found: [n=0] 
[09:28:31.094]    + additional namespaces needed: [n=0] 
[09:28:31.094]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:31.094]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.094]  - seeds: <none>
[09:28:31.094]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.111] Created future:
[09:28:31.111] MultisessionFuture:
[09:28:31.111] Label: ‘future_lapply-1’
[09:28:31.111] Expression:
[09:28:31.111] {
[09:28:31.111]     do.call(function(...) {
[09:28:31.111]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.111]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.111]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.111]             on.exit(options(oopts), add = TRUE)
[09:28:31.111]         }
[09:28:31.111]         {
[09:28:31.111]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.111]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.111]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.111]             })
[09:28:31.111]         }
[09:28:31.111]     }, args = future.call.arguments)
[09:28:31.111] }
[09:28:31.111] Lazy evaluation: FALSE
[09:28:31.111] Asynchronous evaluation: TRUE
[09:28:31.111] Local evaluation: TRUE
[09:28:31.111] Environment: 0x55f693c8a710
[09:28:31.111] Capture standard output: TRUE
[09:28:31.111] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.111] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.111] Packages: <none>
[09:28:31.111] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.111] Resolved: FALSE
[09:28:31.111] Value: <not collected>
[09:28:31.111] Conditions captured: <none>
[09:28:31.111] Early signaling: FALSE
[09:28:31.111] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.111] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.122] Chunk #1 of 2 ... DONE
[09:28:31.122] Chunk #2 of 2 ...
[09:28:31.123]  - Finding globals in 'X' for chunk #2 ...
[09:28:31.123]    + additional globals found: [n=0] 
[09:28:31.123]    + additional namespaces needed: [n=0] 
[09:28:31.123]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:31.123]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.123]  - seeds: <none>
[09:28:31.123]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.140] Created future:
[09:28:31.140] MultisessionFuture:
[09:28:31.140] Label: ‘future_lapply-2’
[09:28:31.140] Expression:
[09:28:31.140] {
[09:28:31.140]     do.call(function(...) {
[09:28:31.140]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.140]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.140]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.140]             on.exit(options(oopts), add = TRUE)
[09:28:31.140]         }
[09:28:31.140]         {
[09:28:31.140]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.140]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.140]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.140]             })
[09:28:31.140]         }
[09:28:31.140]     }, args = future.call.arguments)
[09:28:31.140] }
[09:28:31.140] Lazy evaluation: FALSE
[09:28:31.140] Asynchronous evaluation: TRUE
[09:28:31.140] Local evaluation: TRUE
[09:28:31.140] Environment: 0x55f693c8a710
[09:28:31.140] Capture standard output: TRUE
[09:28:31.140] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.140] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.140] Packages: <none>
[09:28:31.140] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.140] Resolved: FALSE
[09:28:31.140] Value: <not collected>
[09:28:31.140] Conditions captured: <none>
[09:28:31.140] Early signaling: FALSE
[09:28:31.140] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.140] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.151] Chunk #2 of 2 ... DONE
[09:28:31.151] Launching 2 futures (chunks) ... DONE
[09:28:31.152] Resolving 2 futures (chunks) ...
[09:28:31.182]  - Number of value chunks collected: 2
[09:28:31.182] Resolving 2 futures (chunks) ... DONE
[09:28:31.182] Reducing values from 2 chunks ...
[09:28:31.182]  - Number of values collected after concatenation: 2
[09:28:31.182]  - Number of values expected: 2
[09:28:31.182] Reducing values from 2 chunks ... DONE
[09:28:31.182] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[09:28:31.183] future_lapply() ...
[09:28:31.188] Number of chunks: 2
[09:28:31.188] getGlobalsAndPackagesXApply() ...
[09:28:31.189]  - future.globals: TRUE
[09:28:31.190]  - globals found/used: [n=1] ‘FUN’
[09:28:31.190]  - needed namespaces: [n=0] 
[09:28:31.190] Finding globals ... DONE
[09:28:31.190]  - use_args: TRUE
[09:28:31.190]  - Getting '...' globals ...
[09:28:31.191]    - '...' content: [n=0] 
[09:28:31.191] List of 1
[09:28:31.191]  $ ...: list()
[09:28:31.191]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.191]  - attr(*, "where")=List of 1
[09:28:31.191]   ..$ ...:<environment: 0x55f69615ecf8> 
[09:28:31.191]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.191]  - attr(*, "resolved")= logi TRUE
[09:28:31.191]  - attr(*, "total_size")= num NA
[09:28:31.193]  - Getting '...' globals ... DONE
[09:28:31.193] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:31.193] List of 2
[09:28:31.193]  $ ...future.FUN:function (y)  
[09:28:31.193]  $ ...          : list()
[09:28:31.193]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.193]  - attr(*, "where")=List of 2
[09:28:31.193]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:31.193]   ..$ ...          :<environment: 0x55f69615ecf8> 
[09:28:31.193]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.193]  - attr(*, "resolved")= logi FALSE
[09:28:31.193]  - attr(*, "total_size")= num 280
[09:28:31.196] Packages to be attached in all futures: [n=0] 
[09:28:31.196] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.196] Number of futures (= number of chunks): 2
[09:28:31.196] Launching 2 futures (chunks) ...
[09:28:31.196] Chunk #1 of 2 ...
[09:28:31.196]  - Finding globals in 'X' for chunk #1 ...
[09:28:31.197]    + additional globals found: [n=0] 
[09:28:31.197]    + additional namespaces needed: [n=0] 
[09:28:31.197]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:31.197]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.197]  - seeds: <none>
[09:28:31.197]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.214] Created future:
[09:28:31.214] MultisessionFuture:
[09:28:31.214] Label: ‘future_lapply-1’
[09:28:31.214] Expression:
[09:28:31.214] {
[09:28:31.214]     do.call(function(...) {
[09:28:31.214]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.214]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.214]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.214]             on.exit(options(oopts), add = TRUE)
[09:28:31.214]         }
[09:28:31.214]         {
[09:28:31.214]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.214]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.214]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.214]             })
[09:28:31.214]         }
[09:28:31.214]     }, args = future.call.arguments)
[09:28:31.214] }
[09:28:31.214] Lazy evaluation: FALSE
[09:28:31.214] Asynchronous evaluation: TRUE
[09:28:31.214] Local evaluation: TRUE
[09:28:31.214] Environment: 0x55f69615f0e8
[09:28:31.214] Capture standard output: TRUE
[09:28:31.214] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.214] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.214] Packages: <none>
[09:28:31.214] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.214] Resolved: FALSE
[09:28:31.214] Value: <not collected>
[09:28:31.214] Conditions captured: <none>
[09:28:31.214] Early signaling: FALSE
[09:28:31.214] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.214] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.225] Chunk #1 of 2 ... DONE
[09:28:31.225] Chunk #2 of 2 ...
[09:28:31.225]  - Finding globals in 'X' for chunk #2 ...
[09:28:31.226]    + additional globals found: [n=0] 
[09:28:31.226]    + additional namespaces needed: [n=0] 
[09:28:31.226]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:31.226]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.226]  - seeds: <none>
[09:28:31.226]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.244] Created future:
[09:28:31.244] MultisessionFuture:
[09:28:31.244] Label: ‘future_lapply-2’
[09:28:31.244] Expression:
[09:28:31.244] {
[09:28:31.244]     do.call(function(...) {
[09:28:31.244]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.244]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.244]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.244]             on.exit(options(oopts), add = TRUE)
[09:28:31.244]         }
[09:28:31.244]         {
[09:28:31.244]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.244]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.244]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.244]             })
[09:28:31.244]         }
[09:28:31.244]     }, args = future.call.arguments)
[09:28:31.244] }
[09:28:31.244] Lazy evaluation: FALSE
[09:28:31.244] Asynchronous evaluation: TRUE
[09:28:31.244] Local evaluation: TRUE
[09:28:31.244] Environment: 0x55f69615f0e8
[09:28:31.244] Capture standard output: TRUE
[09:28:31.244] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.244] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.244] Packages: <none>
[09:28:31.244] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.244] Resolved: FALSE
[09:28:31.244] Value: <not collected>
[09:28:31.244] Conditions captured: <none>
[09:28:31.244] Early signaling: FALSE
[09:28:31.244] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.244] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.256] Chunk #2 of 2 ... DONE
[09:28:31.256] Launching 2 futures (chunks) ... DONE
[09:28:31.256] Resolving 2 futures (chunks) ...
[09:28:31.300]  - Number of value chunks collected: 2
[09:28:31.300] Resolving 2 futures (chunks) ... DONE
[09:28:31.300] Reducing values from 2 chunks ...
[09:28:31.300]  - Number of values collected after concatenation: 2
[09:28:31.300]  - Number of values expected: 2
[09:28:31.300] Reducing values from 2 chunks ... DONE
[09:28:31.300] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[09:28:31.303] future_lapply() ...
[09:28:31.306] Number of chunks: 2
[09:28:31.307] getGlobalsAndPackagesXApply() ...
[09:28:31.307]  - future.globals: TRUE
[09:28:31.308] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[09:28:31.308] future_lapply() ...
[09:28:31.312] Number of chunks: 2
[09:28:31.312] getGlobalsAndPackagesXApply() ...
[09:28:31.312]  - future.globals: TRUE
[09:28:31.314]  - globals found/used: [n=1] ‘FUN’
[09:28:31.314]  - needed namespaces: [n=0] 
[09:28:31.314] Finding globals ... DONE
[09:28:31.314]  - use_args: TRUE
[09:28:31.314]  - Getting '...' globals ...
[09:28:31.314]    - '...' content: [n=0] 
[09:28:31.314] List of 1
[09:28:31.314]  $ ...: list()
[09:28:31.314]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.314]  - attr(*, "where")=List of 1
[09:28:31.314]   ..$ ...:<environment: 0x55f6947333b0> 
[09:28:31.314]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.314]  - attr(*, "resolved")= logi TRUE
[09:28:31.314]  - attr(*, "total_size")= num NA
[09:28:31.317]  - Getting '...' globals ... DONE
[09:28:31.317] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:31.317] List of 2
[09:28:31.317]  $ ...future.FUN:function (x)  
[09:28:31.317]  $ ...          : list()
[09:28:31.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.317]  - attr(*, "where")=List of 2
[09:28:31.317]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:31.317]   ..$ ...          :<environment: 0x55f6947333b0> 
[09:28:31.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.317]  - attr(*, "resolved")= logi FALSE
[09:28:31.317]  - attr(*, "total_size")= num 1840
[09:28:31.320] Packages to be attached in all futures: [n=0] 
[09:28:31.320] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.320] Number of futures (= number of chunks): 2
[09:28:31.320] Launching 2 futures (chunks) ...
[09:28:31.320] Chunk #1 of 2 ...
[09:28:31.320]  - Finding globals in 'X' for chunk #1 ...
[09:28:31.321]    + additional globals found: [n=0] 
[09:28:31.321]    + additional namespaces needed: [n=0] 
[09:28:31.321]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:31.321]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.321]  - seeds: <none>
[09:28:31.321]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.343] Created future:
[09:28:31.344] MultisessionFuture:
[09:28:31.344] Label: ‘future_lapply-1’
[09:28:31.344] Expression:
[09:28:31.344] {
[09:28:31.344]     do.call(function(...) {
[09:28:31.344]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.344]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.344]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.344]             on.exit(options(oopts), add = TRUE)
[09:28:31.344]         }
[09:28:31.344]         {
[09:28:31.344]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.344]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.344]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.344]             })
[09:28:31.344]         }
[09:28:31.344]     }, args = future.call.arguments)
[09:28:31.344] }
[09:28:31.344] Lazy evaluation: FALSE
[09:28:31.344] Asynchronous evaluation: TRUE
[09:28:31.344] Local evaluation: TRUE
[09:28:31.344] Environment: R_GlobalEnv
[09:28:31.344] Capture standard output: TRUE
[09:28:31.344] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.344] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.344] Packages: <none>
[09:28:31.344] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.344] Resolved: FALSE
[09:28:31.344] Value: <not collected>
[09:28:31.344] Conditions captured: <none>
[09:28:31.344] Early signaling: FALSE
[09:28:31.344] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.344] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.355] Chunk #1 of 2 ... DONE
[09:28:31.355] Chunk #2 of 2 ...
[09:28:31.355]  - Finding globals in 'X' for chunk #2 ...
[09:28:31.356]    + additional globals found: [n=0] 
[09:28:31.356]    + additional namespaces needed: [n=0] 
[09:28:31.356]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:31.356]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[09:28:31.356]  - seeds: <none>
[09:28:31.356]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.372] Created future:
[09:28:31.372] MultisessionFuture:
[09:28:31.372] Label: ‘future_lapply-2’
[09:28:31.372] Expression:
[09:28:31.372] {
[09:28:31.372]     do.call(function(...) {
[09:28:31.372]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.372]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.372]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.372]             on.exit(options(oopts), add = TRUE)
[09:28:31.372]         }
[09:28:31.372]         {
[09:28:31.372]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.372]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.372]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.372]             })
[09:28:31.372]         }
[09:28:31.372]     }, args = future.call.arguments)
[09:28:31.372] }
[09:28:31.372] Lazy evaluation: FALSE
[09:28:31.372] Asynchronous evaluation: TRUE
[09:28:31.372] Local evaluation: TRUE
[09:28:31.372] Environment: R_GlobalEnv
[09:28:31.372] Capture standard output: TRUE
[09:28:31.372] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.372] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[09:28:31.372] Packages: <none>
[09:28:31.372] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.372] Resolved: FALSE
[09:28:31.372] Value: <not collected>
[09:28:31.372] Conditions captured: <none>
[09:28:31.372] Early signaling: FALSE
[09:28:31.372] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.372] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.384] Chunk #2 of 2 ... DONE
[09:28:31.384] Launching 2 futures (chunks) ... DONE
[09:28:31.384] Resolving 2 futures (chunks) ...
[09:28:31.418]  - Number of value chunks collected: 2
[09:28:31.418] Resolving 2 futures (chunks) ... DONE
[09:28:31.418] Reducing values from 2 chunks ...
[09:28:31.418]  - Number of values collected after concatenation: 10
[09:28:31.418]  - Number of values expected: 10
[09:28:31.418] Reducing values from 2 chunks ... DONE
[09:28:31.418] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[09:28:31.425] future_lapply() ...
[09:28:31.429] Number of chunks: 10
[09:28:31.429] getGlobalsAndPackagesXApply() ...
[09:28:31.429]  - future.globals: TRUE
[09:28:31.431]  - globals found/used: [n=1] ‘FUN’
[09:28:31.431]  - needed namespaces: [n=0] 
[09:28:31.431] Finding globals ... DONE
[09:28:31.431]  - use_args: TRUE
[09:28:31.431]  - Getting '...' globals ...
[09:28:31.432]    - '...' content: [n=0] 
[09:28:31.432] List of 1
[09:28:31.432]  $ ...: list()
[09:28:31.432]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.432]  - attr(*, "where")=List of 1
[09:28:31.432]   ..$ ...:<environment: 0x55f692859288> 
[09:28:31.432]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.432]  - attr(*, "resolved")= logi TRUE
[09:28:31.432]  - attr(*, "total_size")= num NA
[09:28:31.434]  - Getting '...' globals ... DONE
[09:28:31.434] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:31.435] List of 2
[09:28:31.435]  $ ...future.FUN:function (x)  
[09:28:31.435]  $ ...          : list()
[09:28:31.435]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.435]  - attr(*, "where")=List of 2
[09:28:31.435]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:31.435]   ..$ ...          :<environment: 0x55f692859288> 
[09:28:31.435]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.435]  - attr(*, "resolved")= logi FALSE
[09:28:31.435]  - attr(*, "total_size")= num 1840
[09:28:31.437] Packages to be attached in all futures: [n=0] 
[09:28:31.437] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.437] Number of futures (= number of chunks): 10
[09:28:31.438] Launching 10 futures (chunks) ...
[09:28:31.438] Chunk #1 of 10 ...
[09:28:31.438]  - Finding globals in 'X' for chunk #1 ...
[09:28:31.438]    + additional globals found: [n=0] 
[09:28:31.438]    + additional namespaces needed: [n=0] 
[09:28:31.438]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:31.438]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.439]  - seeds: <none>
[09:28:31.439]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.455] Created future:
[09:28:31.455] MultisessionFuture:
[09:28:31.455] Label: ‘future_lapply-1’
[09:28:31.455] Expression:
[09:28:31.455] {
[09:28:31.455]     do.call(function(...) {
[09:28:31.455]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.455]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.455]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.455]             on.exit(options(oopts), add = TRUE)
[09:28:31.455]         }
[09:28:31.455]         {
[09:28:31.455]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.455]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.455]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.455]             })
[09:28:31.455]         }
[09:28:31.455]     }, args = future.call.arguments)
[09:28:31.455] }
[09:28:31.455] Lazy evaluation: FALSE
[09:28:31.455] Asynchronous evaluation: TRUE
[09:28:31.455] Local evaluation: TRUE
[09:28:31.455] Environment: R_GlobalEnv
[09:28:31.455] Capture standard output: TRUE
[09:28:31.455] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.455] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.455] Packages: <none>
[09:28:31.455] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.455] Resolved: FALSE
[09:28:31.455] Value: <not collected>
[09:28:31.455] Conditions captured: <none>
[09:28:31.455] Early signaling: FALSE
[09:28:31.455] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.455] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.467] Chunk #1 of 10 ... DONE
[09:28:31.467] Chunk #2 of 10 ...
[09:28:31.467]  - Finding globals in 'X' for chunk #2 ...
[09:28:31.467]    + additional globals found: [n=0] 
[09:28:31.467]    + additional namespaces needed: [n=0] 
[09:28:31.468]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:31.468]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.468]  - seeds: <none>
[09:28:31.468]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.486] Created future:
[09:28:31.486] MultisessionFuture:
[09:28:31.486] Label: ‘future_lapply-2’
[09:28:31.486] Expression:
[09:28:31.486] {
[09:28:31.486]     do.call(function(...) {
[09:28:31.486]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.486]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.486]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.486]             on.exit(options(oopts), add = TRUE)
[09:28:31.486]         }
[09:28:31.486]         {
[09:28:31.486]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.486]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.486]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.486]             })
[09:28:31.486]         }
[09:28:31.486]     }, args = future.call.arguments)
[09:28:31.486] }
[09:28:31.486] Lazy evaluation: FALSE
[09:28:31.486] Asynchronous evaluation: TRUE
[09:28:31.486] Local evaluation: TRUE
[09:28:31.486] Environment: R_GlobalEnv
[09:28:31.486] Capture standard output: TRUE
[09:28:31.486] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.486] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.486] Packages: <none>
[09:28:31.486] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.486] Resolved: FALSE
[09:28:31.486] Value: <not collected>
[09:28:31.486] Conditions captured: <none>
[09:28:31.486] Early signaling: FALSE
[09:28:31.486] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.486] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.498] Chunk #2 of 10 ... DONE
[09:28:31.498] Chunk #3 of 10 ...
[09:28:31.498]  - Finding globals in 'X' for chunk #3 ...
[09:28:31.498]    + additional globals found: [n=0] 
[09:28:31.498]    + additional namespaces needed: [n=0] 
[09:28:31.498]  - Finding globals in 'X' for chunk #3 ... DONE
[09:28:31.498]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.499]  - seeds: <none>
[09:28:31.499]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.526] Created future:
[09:28:31.526] MultisessionFuture:
[09:28:31.526] Label: ‘future_lapply-3’
[09:28:31.526] Expression:
[09:28:31.526] {
[09:28:31.526]     do.call(function(...) {
[09:28:31.526]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.526]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.526]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.526]             on.exit(options(oopts), add = TRUE)
[09:28:31.526]         }
[09:28:31.526]         {
[09:28:31.526]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.526]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.526]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.526]             })
[09:28:31.526]         }
[09:28:31.526]     }, args = future.call.arguments)
[09:28:31.526] }
[09:28:31.526] Lazy evaluation: FALSE
[09:28:31.526] Asynchronous evaluation: TRUE
[09:28:31.526] Local evaluation: TRUE
[09:28:31.526] Environment: R_GlobalEnv
[09:28:31.526] Capture standard output: TRUE
[09:28:31.526] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.526] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.526] Packages: <none>
[09:28:31.526] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.526] Resolved: FALSE
[09:28:31.526] Value: <not collected>
[09:28:31.526] Conditions captured: <none>
[09:28:31.526] Early signaling: FALSE
[09:28:31.526] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.526] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.537] Chunk #3 of 10 ... DONE
[09:28:31.537] Chunk #4 of 10 ...
[09:28:31.537]  - Finding globals in 'X' for chunk #4 ...
[09:28:31.538]    + additional globals found: [n=0] 
[09:28:31.538]    + additional namespaces needed: [n=0] 
[09:28:31.538]  - Finding globals in 'X' for chunk #4 ... DONE
[09:28:31.538]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.538]  - seeds: <none>
[09:28:31.538]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.574] Created future:
[09:28:31.574] MultisessionFuture:
[09:28:31.574] Label: ‘future_lapply-4’
[09:28:31.574] Expression:
[09:28:31.574] {
[09:28:31.574]     do.call(function(...) {
[09:28:31.574]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.574]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.574]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.574]             on.exit(options(oopts), add = TRUE)
[09:28:31.574]         }
[09:28:31.574]         {
[09:28:31.574]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.574]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.574]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.574]             })
[09:28:31.574]         }
[09:28:31.574]     }, args = future.call.arguments)
[09:28:31.574] }
[09:28:31.574] Lazy evaluation: FALSE
[09:28:31.574] Asynchronous evaluation: TRUE
[09:28:31.574] Local evaluation: TRUE
[09:28:31.574] Environment: R_GlobalEnv
[09:28:31.574] Capture standard output: TRUE
[09:28:31.574] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.574] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.574] Packages: <none>
[09:28:31.574] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.574] Resolved: FALSE
[09:28:31.574] Value: <not collected>
[09:28:31.574] Conditions captured: <none>
[09:28:31.574] Early signaling: FALSE
[09:28:31.574] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.574] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.585] Chunk #4 of 10 ... DONE
[09:28:31.585] Chunk #5 of 10 ...
[09:28:31.585]  - Finding globals in 'X' for chunk #5 ...
[09:28:31.586]    + additional globals found: [n=0] 
[09:28:31.586]    + additional namespaces needed: [n=0] 
[09:28:31.586]  - Finding globals in 'X' for chunk #5 ... DONE
[09:28:31.586]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.586]  - seeds: <none>
[09:28:31.586]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.613] Created future:
[09:28:31.614] MultisessionFuture:
[09:28:31.614] Label: ‘future_lapply-5’
[09:28:31.614] Expression:
[09:28:31.614] {
[09:28:31.614]     do.call(function(...) {
[09:28:31.614]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.614]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.614]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.614]             on.exit(options(oopts), add = TRUE)
[09:28:31.614]         }
[09:28:31.614]         {
[09:28:31.614]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.614]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.614]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.614]             })
[09:28:31.614]         }
[09:28:31.614]     }, args = future.call.arguments)
[09:28:31.614] }
[09:28:31.614] Lazy evaluation: FALSE
[09:28:31.614] Asynchronous evaluation: TRUE
[09:28:31.614] Local evaluation: TRUE
[09:28:31.614] Environment: R_GlobalEnv
[09:28:31.614] Capture standard output: TRUE
[09:28:31.614] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.614] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.614] Packages: <none>
[09:28:31.614] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.614] Resolved: FALSE
[09:28:31.614] Value: <not collected>
[09:28:31.614] Conditions captured: <none>
[09:28:31.614] Early signaling: FALSE
[09:28:31.614] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.614] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.625] Chunk #5 of 10 ... DONE
[09:28:31.625] Chunk #6 of 10 ...
[09:28:31.625]  - Finding globals in 'X' for chunk #6 ...
[09:28:31.626]    + additional globals found: [n=0] 
[09:28:31.626]    + additional namespaces needed: [n=0] 
[09:28:31.626]  - Finding globals in 'X' for chunk #6 ... DONE
[09:28:31.626]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.626]  - seeds: <none>
[09:28:31.626]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.653] Created future:
[09:28:31.653] MultisessionFuture:
[09:28:31.653] Label: ‘future_lapply-6’
[09:28:31.653] Expression:
[09:28:31.653] {
[09:28:31.653]     do.call(function(...) {
[09:28:31.653]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.653]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.653]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.653]             on.exit(options(oopts), add = TRUE)
[09:28:31.653]         }
[09:28:31.653]         {
[09:28:31.653]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.653]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.653]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.653]             })
[09:28:31.653]         }
[09:28:31.653]     }, args = future.call.arguments)
[09:28:31.653] }
[09:28:31.653] Lazy evaluation: FALSE
[09:28:31.653] Asynchronous evaluation: TRUE
[09:28:31.653] Local evaluation: TRUE
[09:28:31.653] Environment: R_GlobalEnv
[09:28:31.653] Capture standard output: TRUE
[09:28:31.653] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.653] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.653] Packages: <none>
[09:28:31.653] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.653] Resolved: FALSE
[09:28:31.653] Value: <not collected>
[09:28:31.653] Conditions captured: <none>
[09:28:31.653] Early signaling: FALSE
[09:28:31.653] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.653] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.665] Chunk #6 of 10 ... DONE
[09:28:31.665] Chunk #7 of 10 ...
[09:28:31.665]  - Finding globals in 'X' for chunk #7 ...
[09:28:31.665]    + additional globals found: [n=0] 
[09:28:31.665]    + additional namespaces needed: [n=0] 
[09:28:31.665]  - Finding globals in 'X' for chunk #7 ... DONE
[09:28:31.665]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.665]  - seeds: <none>
[09:28:31.666]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.695] Created future:
[09:28:31.695] MultisessionFuture:
[09:28:31.695] Label: ‘future_lapply-7’
[09:28:31.695] Expression:
[09:28:31.695] {
[09:28:31.695]     do.call(function(...) {
[09:28:31.695]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.695]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.695]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.695]             on.exit(options(oopts), add = TRUE)
[09:28:31.695]         }
[09:28:31.695]         {
[09:28:31.695]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.695]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.695]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.695]             })
[09:28:31.695]         }
[09:28:31.695]     }, args = future.call.arguments)
[09:28:31.695] }
[09:28:31.695] Lazy evaluation: FALSE
[09:28:31.695] Asynchronous evaluation: TRUE
[09:28:31.695] Local evaluation: TRUE
[09:28:31.695] Environment: R_GlobalEnv
[09:28:31.695] Capture standard output: TRUE
[09:28:31.695] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.695] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.695] Packages: <none>
[09:28:31.695] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.695] Resolved: FALSE
[09:28:31.695] Value: <not collected>
[09:28:31.695] Conditions captured: <none>
[09:28:31.695] Early signaling: FALSE
[09:28:31.695] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.695] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.706] Chunk #7 of 10 ... DONE
[09:28:31.707] Chunk #8 of 10 ...
[09:28:31.707]  - Finding globals in 'X' for chunk #8 ...
[09:28:31.707]    + additional globals found: [n=0] 
[09:28:31.707]    + additional namespaces needed: [n=0] 
[09:28:31.707]  - Finding globals in 'X' for chunk #8 ... DONE
[09:28:31.707]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.707]  - seeds: <none>
[09:28:31.708]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.734] Created future:
[09:28:31.735] MultisessionFuture:
[09:28:31.735] Label: ‘future_lapply-8’
[09:28:31.735] Expression:
[09:28:31.735] {
[09:28:31.735]     do.call(function(...) {
[09:28:31.735]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.735]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.735]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.735]             on.exit(options(oopts), add = TRUE)
[09:28:31.735]         }
[09:28:31.735]         {
[09:28:31.735]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.735]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.735]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.735]             })
[09:28:31.735]         }
[09:28:31.735]     }, args = future.call.arguments)
[09:28:31.735] }
[09:28:31.735] Lazy evaluation: FALSE
[09:28:31.735] Asynchronous evaluation: TRUE
[09:28:31.735] Local evaluation: TRUE
[09:28:31.735] Environment: R_GlobalEnv
[09:28:31.735] Capture standard output: TRUE
[09:28:31.735] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.735] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.735] Packages: <none>
[09:28:31.735] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.735] Resolved: FALSE
[09:28:31.735] Value: <not collected>
[09:28:31.735] Conditions captured: <none>
[09:28:31.735] Early signaling: FALSE
[09:28:31.735] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.735] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.746] Chunk #8 of 10 ... DONE
[09:28:31.746] Chunk #9 of 10 ...
[09:28:31.746]  - Finding globals in 'X' for chunk #9 ...
[09:28:31.747]    + additional globals found: [n=0] 
[09:28:31.747]    + additional namespaces needed: [n=0] 
[09:28:31.747]  - Finding globals in 'X' for chunk #9 ... DONE
[09:28:31.747]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.747]  - seeds: <none>
[09:28:31.747]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.775] Created future:
[09:28:31.775] MultisessionFuture:
[09:28:31.775] Label: ‘future_lapply-9’
[09:28:31.775] Expression:
[09:28:31.775] {
[09:28:31.775]     do.call(function(...) {
[09:28:31.775]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.775]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.775]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.775]             on.exit(options(oopts), add = TRUE)
[09:28:31.775]         }
[09:28:31.775]         {
[09:28:31.775]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.775]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.775]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.775]             })
[09:28:31.775]         }
[09:28:31.775]     }, args = future.call.arguments)
[09:28:31.775] }
[09:28:31.775] Lazy evaluation: FALSE
[09:28:31.775] Asynchronous evaluation: TRUE
[09:28:31.775] Local evaluation: TRUE
[09:28:31.775] Environment: R_GlobalEnv
[09:28:31.775] Capture standard output: TRUE
[09:28:31.775] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.775] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.775] Packages: <none>
[09:28:31.775] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.775] Resolved: TRUE
[09:28:31.775] Value: <not collected>
[09:28:31.775] Conditions captured: <none>
[09:28:31.775] Early signaling: FALSE
[09:28:31.775] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.775] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.777] Chunk #9 of 10 ... DONE
[09:28:31.777] Chunk #10 of 10 ...
[09:28:31.777]  - Finding globals in 'X' for chunk #10 ...
[09:28:31.777]    + additional globals found: [n=0] 
[09:28:31.778]    + additional namespaces needed: [n=0] 
[09:28:31.778]  - Finding globals in 'X' for chunk #10 ... DONE
[09:28:31.778]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[09:28:31.778]  - seeds: <none>
[09:28:31.778]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.796] Created future:
[09:28:31.796] MultisessionFuture:
[09:28:31.796] Label: ‘future_lapply-10’
[09:28:31.796] Expression:
[09:28:31.796] {
[09:28:31.796]     do.call(function(...) {
[09:28:31.796]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.796]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.796]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.796]             on.exit(options(oopts), add = TRUE)
[09:28:31.796]         }
[09:28:31.796]         {
[09:28:31.796]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.796]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.796]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.796]             })
[09:28:31.796]         }
[09:28:31.796]     }, args = future.call.arguments)
[09:28:31.796] }
[09:28:31.796] Lazy evaluation: FALSE
[09:28:31.796] Asynchronous evaluation: TRUE
[09:28:31.796] Local evaluation: TRUE
[09:28:31.796] Environment: R_GlobalEnv
[09:28:31.796] Capture standard output: TRUE
[09:28:31.796] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.796] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.796] Packages: <none>
[09:28:31.796] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.796] Resolved: FALSE
[09:28:31.796] Value: <not collected>
[09:28:31.796] Conditions captured: <none>
[09:28:31.796] Early signaling: FALSE
[09:28:31.796] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.796] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.807] Chunk #10 of 10 ... DONE
[09:28:31.807] Launching 10 futures (chunks) ... DONE
[09:28:31.808] Resolving 10 futures (chunks) ...
[09:28:31.842]  - Number of value chunks collected: 10
[09:28:31.842] Resolving 10 futures (chunks) ... DONE
[09:28:31.842] Reducing values from 10 chunks ...
[09:28:31.842]  - Number of values collected after concatenation: 10
[09:28:31.842]  - Number of values expected: 10
[09:28:31.842] Reducing values from 10 chunks ... DONE
[09:28:31.842] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[09:28:31.846] future_lapply() ...
[09:28:31.850] Number of chunks: 5
[09:28:31.850] getGlobalsAndPackagesXApply() ...
[09:28:31.850]  - future.globals: TRUE
[09:28:31.851]  - globals found/used: [n=1] ‘FUN’
[09:28:31.851]  - needed namespaces: [n=0] 
[09:28:31.852] Finding globals ... DONE
[09:28:31.852]  - use_args: TRUE
[09:28:31.852]  - Getting '...' globals ...
[09:28:31.852]    - '...' content: [n=0] 
[09:28:31.852] List of 1
[09:28:31.852]  $ ...: list()
[09:28:31.852]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.852]  - attr(*, "where")=List of 1
[09:28:31.852]   ..$ ...:<environment: 0x55f695bed070> 
[09:28:31.852]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.852]  - attr(*, "resolved")= logi TRUE
[09:28:31.852]  - attr(*, "total_size")= num NA
[09:28:31.855]  - Getting '...' globals ... DONE
[09:28:31.855] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:31.855] List of 2
[09:28:31.855]  $ ...future.FUN:function (x)  
[09:28:31.855]  $ ...          : list()
[09:28:31.855]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:31.855]  - attr(*, "where")=List of 2
[09:28:31.855]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:31.855]   ..$ ...          :<environment: 0x55f695bed070> 
[09:28:31.855]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:31.855]  - attr(*, "resolved")= logi FALSE
[09:28:31.855]  - attr(*, "total_size")= num 1840
[09:28:31.857] Packages to be attached in all futures: [n=0] 
[09:28:31.858] getGlobalsAndPackagesXApply() ... DONE
[09:28:31.858] Number of futures (= number of chunks): 5
[09:28:31.858] Launching 5 futures (chunks) ...
[09:28:31.858] Chunk #1 of 5 ...
[09:28:31.858]  - Finding globals in 'X' for chunk #1 ...
[09:28:31.858]    + additional globals found: [n=0] 
[09:28:31.858]    + additional namespaces needed: [n=0] 
[09:28:31.858]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:31.859]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[09:28:31.859]  - seeds: <none>
[09:28:31.859]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.877] Created future:
[09:28:31.877] MultisessionFuture:
[09:28:31.877] Label: ‘future_lapply-1’
[09:28:31.877] Expression:
[09:28:31.877] {
[09:28:31.877]     do.call(function(...) {
[09:28:31.877]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.877]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.877]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.877]             on.exit(options(oopts), add = TRUE)
[09:28:31.877]         }
[09:28:31.877]         {
[09:28:31.877]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.877]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.877]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.877]             })
[09:28:31.877]         }
[09:28:31.877]     }, args = future.call.arguments)
[09:28:31.877] }
[09:28:31.877] Lazy evaluation: FALSE
[09:28:31.877] Asynchronous evaluation: TRUE
[09:28:31.877] Local evaluation: TRUE
[09:28:31.877] Environment: R_GlobalEnv
[09:28:31.877] Capture standard output: TRUE
[09:28:31.877] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.877] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.877] Packages: <none>
[09:28:31.877] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.877] Resolved: FALSE
[09:28:31.877] Value: <not collected>
[09:28:31.877] Conditions captured: <none>
[09:28:31.877] Early signaling: FALSE
[09:28:31.877] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.877] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.889] Chunk #1 of 5 ... DONE
[09:28:31.889] Chunk #2 of 5 ...
[09:28:31.889]  - Finding globals in 'X' for chunk #2 ...
[09:28:31.889]    + additional globals found: [n=0] 
[09:28:31.889]    + additional namespaces needed: [n=0] 
[09:28:31.889]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:31.890]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[09:28:31.890]  - seeds: <none>
[09:28:31.890]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.906] Created future:
[09:28:31.906] MultisessionFuture:
[09:28:31.906] Label: ‘future_lapply-2’
[09:28:31.906] Expression:
[09:28:31.906] {
[09:28:31.906]     do.call(function(...) {
[09:28:31.906]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.906]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.906]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.906]             on.exit(options(oopts), add = TRUE)
[09:28:31.906]         }
[09:28:31.906]         {
[09:28:31.906]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.906]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.906]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.906]             })
[09:28:31.906]         }
[09:28:31.906]     }, args = future.call.arguments)
[09:28:31.906] }
[09:28:31.906] Lazy evaluation: FALSE
[09:28:31.906] Asynchronous evaluation: TRUE
[09:28:31.906] Local evaluation: TRUE
[09:28:31.906] Environment: R_GlobalEnv
[09:28:31.906] Capture standard output: TRUE
[09:28:31.906] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.906] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.906] Packages: <none>
[09:28:31.906] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.906] Resolved: FALSE
[09:28:31.906] Value: <not collected>
[09:28:31.906] Conditions captured: <none>
[09:28:31.906] Early signaling: FALSE
[09:28:31.906] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.906] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.918] Chunk #2 of 5 ... DONE
[09:28:31.918] Chunk #3 of 5 ...
[09:28:31.918]  - Finding globals in 'X' for chunk #3 ...
[09:28:31.918]    + additional globals found: [n=0] 
[09:28:31.919]    + additional namespaces needed: [n=0] 
[09:28:31.919]  - Finding globals in 'X' for chunk #3 ... DONE
[09:28:31.919]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[09:28:31.919]  - seeds: <none>
[09:28:31.919]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.948] Created future:
[09:28:31.948] MultisessionFuture:
[09:28:31.948] Label: ‘future_lapply-3’
[09:28:31.948] Expression:
[09:28:31.948] {
[09:28:31.948]     do.call(function(...) {
[09:28:31.948]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.948]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.948]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.948]             on.exit(options(oopts), add = TRUE)
[09:28:31.948]         }
[09:28:31.948]         {
[09:28:31.948]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.948]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.948]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.948]             })
[09:28:31.948]         }
[09:28:31.948]     }, args = future.call.arguments)
[09:28:31.948] }
[09:28:31.948] Lazy evaluation: FALSE
[09:28:31.948] Asynchronous evaluation: TRUE
[09:28:31.948] Local evaluation: TRUE
[09:28:31.948] Environment: R_GlobalEnv
[09:28:31.948] Capture standard output: TRUE
[09:28:31.948] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.948] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.948] Packages: <none>
[09:28:31.948] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.948] Resolved: FALSE
[09:28:31.948] Value: <not collected>
[09:28:31.948] Conditions captured: <none>
[09:28:31.948] Early signaling: FALSE
[09:28:31.948] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.948] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:31.959] Chunk #3 of 5 ... DONE
[09:28:31.960] Chunk #4 of 5 ...
[09:28:31.960]  - Finding globals in 'X' for chunk #4 ...
[09:28:31.960]    + additional globals found: [n=0] 
[09:28:31.960]    + additional namespaces needed: [n=0] 
[09:28:31.960]  - Finding globals in 'X' for chunk #4 ... DONE
[09:28:31.960]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[09:28:31.960]  - seeds: <none>
[09:28:31.961]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:31.989] Created future:
[09:28:31.989] MultisessionFuture:
[09:28:31.989] Label: ‘future_lapply-4’
[09:28:31.989] Expression:
[09:28:31.989] {
[09:28:31.989]     do.call(function(...) {
[09:28:31.989]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:31.989]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:31.989]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:31.989]             on.exit(options(oopts), add = TRUE)
[09:28:31.989]         }
[09:28:31.989]         {
[09:28:31.989]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:31.989]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:31.989]                 ...future.FUN(...future.X_jj, ...)
[09:28:31.989]             })
[09:28:31.989]         }
[09:28:31.989]     }, args = future.call.arguments)
[09:28:31.989] }
[09:28:31.989] Lazy evaluation: FALSE
[09:28:31.989] Asynchronous evaluation: TRUE
[09:28:31.989] Local evaluation: TRUE
[09:28:31.989] Environment: R_GlobalEnv
[09:28:31.989] Capture standard output: TRUE
[09:28:31.989] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:31.989] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:31.989] Packages: <none>
[09:28:31.989] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:31.989] Resolved: FALSE
[09:28:31.989] Value: <not collected>
[09:28:31.989] Conditions captured: <none>
[09:28:31.989] Early signaling: FALSE
[09:28:31.989] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:31.989] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:32.000] Chunk #4 of 5 ... DONE
[09:28:32.000] Chunk #5 of 5 ...
[09:28:32.000]  - Finding globals in 'X' for chunk #5 ...
[09:28:32.001]    + additional globals found: [n=0] 
[09:28:32.001]    + additional namespaces needed: [n=0] 
[09:28:32.001]  - Finding globals in 'X' for chunk #5 ... DONE
[09:28:32.001]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[09:28:32.001]  - seeds: <none>
[09:28:32.001]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:32.028] Created future:
[09:28:32.028] MultisessionFuture:
[09:28:32.028] Label: ‘future_lapply-5’
[09:28:32.028] Expression:
[09:28:32.028] {
[09:28:32.028]     do.call(function(...) {
[09:28:32.028]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:32.028]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:32.028]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:32.028]             on.exit(options(oopts), add = TRUE)
[09:28:32.028]         }
[09:28:32.028]         {
[09:28:32.028]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:32.028]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:32.028]                 ...future.FUN(...future.X_jj, ...)
[09:28:32.028]             })
[09:28:32.028]         }
[09:28:32.028]     }, args = future.call.arguments)
[09:28:32.028] }
[09:28:32.028] Lazy evaluation: FALSE
[09:28:32.028] Asynchronous evaluation: TRUE
[09:28:32.028] Local evaluation: TRUE
[09:28:32.028] Environment: R_GlobalEnv
[09:28:32.028] Capture standard output: TRUE
[09:28:32.028] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:32.028] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:32.028] Packages: <none>
[09:28:32.028] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:32.028] Resolved: FALSE
[09:28:32.028] Value: <not collected>
[09:28:32.028] Conditions captured: <none>
[09:28:32.028] Early signaling: FALSE
[09:28:32.028] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:32.028] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:32.040] Chunk #5 of 5 ... DONE
[09:28:32.040] Launching 5 futures (chunks) ... DONE
[09:28:32.040] Resolving 5 futures (chunks) ...
[09:28:32.084]  - Number of value chunks collected: 5
[09:28:32.084] Resolving 5 futures (chunks) ... DONE
[09:28:32.084] Reducing values from 5 chunks ...
[09:28:32.085]  - Number of values collected after concatenation: 10
[09:28:32.085]  - Number of values expected: 10
[09:28:32.085] Reducing values from 5 chunks ... DONE
[09:28:32.085] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[09:28:32.088] future_lapply() ...
[09:28:32.092] Number of chunks: 2
[09:28:32.092] getGlobalsAndPackagesXApply() ...
[09:28:32.092]  - future.globals: TRUE
[09:28:32.094]  - globals found/used: [n=1] ‘FUN’
[09:28:32.094]  - needed namespaces: [n=0] 
[09:28:32.094] Finding globals ... DONE
[09:28:32.094]  - use_args: TRUE
[09:28:32.094]  - Getting '...' globals ...
[09:28:32.094]    - '...' content: [n=0] 
[09:28:32.095] List of 1
[09:28:32.095]  $ ...: list()
[09:28:32.095]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.095]  - attr(*, "where")=List of 1
[09:28:32.095]   ..$ ...:<environment: 0x55f695ef7390> 
[09:28:32.095]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.095]  - attr(*, "resolved")= logi TRUE
[09:28:32.095]  - attr(*, "total_size")= num NA
[09:28:32.099]  - Getting '...' globals ... DONE
[09:28:32.099] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:32.099] List of 2
[09:28:32.099]  $ ...future.FUN:function (x)  
[09:28:32.099]  $ ...          : list()
[09:28:32.099]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.099]  - attr(*, "where")=List of 2
[09:28:32.099]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:32.099]   ..$ ...          :<environment: 0x55f695ef7390> 
[09:28:32.099]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.099]  - attr(*, "resolved")= logi FALSE
[09:28:32.099]  - attr(*, "total_size")= num 1840
[09:28:32.102] Packages to be attached in all futures: [n=0] 
[09:28:32.102] getGlobalsAndPackagesXApply() ... DONE
[09:28:32.102] Number of futures (= number of chunks): 2
[09:28:32.102] Launching 2 futures (chunks) ...
[09:28:32.102] Chunk #1 of 2 ...
[09:28:32.102]  - Finding globals in 'X' for chunk #1 ...
[09:28:32.103]    + additional globals found: [n=0] 
[09:28:32.103]    + additional namespaces needed: [n=0] 
[09:28:32.103]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:32.103]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[09:28:32.103]  - seeds: <none>
[09:28:32.103]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:32.120] Created future:
[09:28:32.120] MultisessionFuture:
[09:28:32.120] Label: ‘future_lapply-1’
[09:28:32.120] Expression:
[09:28:32.120] {
[09:28:32.120]     do.call(function(...) {
[09:28:32.120]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:32.120]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:32.120]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:32.120]             on.exit(options(oopts), add = TRUE)
[09:28:32.120]         }
[09:28:32.120]         {
[09:28:32.120]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:32.120]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:32.120]                 ...future.FUN(...future.X_jj, ...)
[09:28:32.120]             })
[09:28:32.120]         }
[09:28:32.120]     }, args = future.call.arguments)
[09:28:32.120] }
[09:28:32.120] Lazy evaluation: FALSE
[09:28:32.120] Asynchronous evaluation: TRUE
[09:28:32.120] Local evaluation: TRUE
[09:28:32.120] Environment: R_GlobalEnv
[09:28:32.120] Capture standard output: TRUE
[09:28:32.120] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:32.120] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:32.120] Packages: <none>
[09:28:32.120] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:32.120] Resolved: FALSE
[09:28:32.120] Value: <not collected>
[09:28:32.120] Conditions captured: <none>
[09:28:32.120] Early signaling: FALSE
[09:28:32.120] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:32.120] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:32.131] Chunk #1 of 2 ... DONE
[09:28:32.132] Chunk #2 of 2 ...
[09:28:32.132]  - Finding globals in 'X' for chunk #2 ...
[09:28:32.132]    + additional globals found: [n=0] 
[09:28:32.132]    + additional namespaces needed: [n=0] 
[09:28:32.132]  - Finding globals in 'X' for chunk #2 ... DONE
[09:28:32.132]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[09:28:32.133]  - seeds: <none>
[09:28:32.133]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:32.150] Created future:
[09:28:32.150] MultisessionFuture:
[09:28:32.150] Label: ‘future_lapply-2’
[09:28:32.150] Expression:
[09:28:32.150] {
[09:28:32.150]     do.call(function(...) {
[09:28:32.150]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:32.150]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:32.150]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:32.150]             on.exit(options(oopts), add = TRUE)
[09:28:32.150]         }
[09:28:32.150]         {
[09:28:32.150]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:32.150]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:32.150]                 ...future.FUN(...future.X_jj, ...)
[09:28:32.150]             })
[09:28:32.150]         }
[09:28:32.150]     }, args = future.call.arguments)
[09:28:32.150] }
[09:28:32.150] Lazy evaluation: FALSE
[09:28:32.150] Asynchronous evaluation: TRUE
[09:28:32.150] Local evaluation: TRUE
[09:28:32.150] Environment: R_GlobalEnv
[09:28:32.150] Capture standard output: TRUE
[09:28:32.150] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:32.150] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:32.150] Packages: <none>
[09:28:32.150] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:32.150] Resolved: FALSE
[09:28:32.150] Value: <not collected>
[09:28:32.150] Conditions captured: <none>
[09:28:32.150] Early signaling: FALSE
[09:28:32.150] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:32.150] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:32.161] Chunk #2 of 2 ... DONE
[09:28:32.162] Launching 2 futures (chunks) ... DONE
[09:28:32.162] Resolving 2 futures (chunks) ...
[09:28:32.194]  - Number of value chunks collected: 2
[09:28:32.194] Resolving 2 futures (chunks) ... DONE
[09:28:32.194] Reducing values from 2 chunks ...
[09:28:32.194]  - Number of values collected after concatenation: 10
[09:28:32.194]  - Number of values expected: 10
[09:28:32.194] Reducing values from 2 chunks ... DONE
[09:28:32.194] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[09:28:32.198] future_lapply() ...
[09:28:32.201] Number of chunks: 1
[09:28:32.202] getGlobalsAndPackagesXApply() ...
[09:28:32.202]  - future.globals: TRUE
[09:28:32.203]  - globals found/used: [n=1] ‘FUN’
[09:28:32.203]  - needed namespaces: [n=0] 
[09:28:32.203] Finding globals ... DONE
[09:28:32.203]  - use_args: TRUE
[09:28:32.204]  - Getting '...' globals ...
[09:28:32.204]    - '...' content: [n=0] 
[09:28:32.204] List of 1
[09:28:32.204]  $ ...: list()
[09:28:32.204]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.204]  - attr(*, "where")=List of 1
[09:28:32.204]   ..$ ...:<environment: 0x55f695e8b250> 
[09:28:32.204]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.204]  - attr(*, "resolved")= logi TRUE
[09:28:32.204]  - attr(*, "total_size")= num NA
[09:28:32.206]  - Getting '...' globals ... DONE
[09:28:32.207] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:32.207] List of 2
[09:28:32.207]  $ ...future.FUN:function (x)  
[09:28:32.207]  $ ...          : list()
[09:28:32.207]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.207]  - attr(*, "where")=List of 2
[09:28:32.207]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:32.207]   ..$ ...          :<environment: 0x55f695e8b250> 
[09:28:32.207]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.207]  - attr(*, "resolved")= logi FALSE
[09:28:32.207]  - attr(*, "total_size")= num 1840
[09:28:32.209] Packages to be attached in all futures: [n=0] 
[09:28:32.209] getGlobalsAndPackagesXApply() ... DONE
[09:28:32.209] Number of futures (= number of chunks): 1
[09:28:32.210] Launching 1 futures (chunks) ...
[09:28:32.210] Chunk #1 of 1 ...
[09:28:32.210]  - Finding globals in 'X' for chunk #1 ...
[09:28:32.210]    + additional globals found: [n=0] 
[09:28:32.210]    + additional namespaces needed: [n=0] 
[09:28:32.210]  - Finding globals in 'X' for chunk #1 ... DONE
[09:28:32.210]  - seeds: <none>
[09:28:32.210]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[09:28:32.226] Created future:
[09:28:32.227] MultisessionFuture:
[09:28:32.227] Label: ‘future_lapply-1’
[09:28:32.227] Expression:
[09:28:32.227] {
[09:28:32.227]     do.call(function(...) {
[09:28:32.227]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[09:28:32.227]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[09:28:32.227]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[09:28:32.227]             on.exit(options(oopts), add = TRUE)
[09:28:32.227]         }
[09:28:32.227]         {
[09:28:32.227]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[09:28:32.227]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[09:28:32.227]                 ...future.FUN(...future.X_jj, ...)
[09:28:32.227]             })
[09:28:32.227]         }
[09:28:32.227]     }, args = future.call.arguments)
[09:28:32.227] }
[09:28:32.227] Lazy evaluation: FALSE
[09:28:32.227] Asynchronous evaluation: TRUE
[09:28:32.227] Local evaluation: TRUE
[09:28:32.227] Environment: R_GlobalEnv
[09:28:32.227] Capture standard output: TRUE
[09:28:32.227] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[09:28:32.227] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[09:28:32.227] Packages: <none>
[09:28:32.227] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[09:28:32.227] Resolved: FALSE
[09:28:32.227] Value: <not collected>
[09:28:32.227] Conditions captured: <none>
[09:28:32.227] Early signaling: FALSE
[09:28:32.227] Owner process: 141bcce9-bf97-84dd-dbad-28ff7f0920ea
[09:28:32.227] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[09:28:32.238] Chunk #1 of 1 ... DONE
[09:28:32.238] Launching 1 futures (chunks) ... DONE
[09:28:32.238] Resolving 1 futures (chunks) ...
[09:28:32.270]  - Number of value chunks collected: 1
[09:28:32.270] Resolving 1 futures (chunks) ... DONE
[09:28:32.270] Reducing values from 1 chunks ...
[09:28:32.272]  - Number of values collected after concatenation: 10
[09:28:32.272]  - Number of values expected: 10
[09:28:32.272] Reducing values from 1 chunks ... DONE
[09:28:32.272] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[09:28:32.276] future_lapply() ...
[09:28:32.280] Number of chunks: 1
[09:28:32.280] getGlobalsAndPackagesXApply() ...
[09:28:32.280] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[09:28:32.280] future_lapply() ...
[09:28:32.284] Number of chunks: 1
[09:28:32.284] getGlobalsAndPackagesXApply() ...
[09:28:32.284]  - future.globals: <name-value list> with names ‘1’
[09:28:32.284] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[09:28:32.284] future_lapply() ...
[09:28:32.288] Number of chunks: 1
[09:28:32.288] getGlobalsAndPackagesXApply() ...
[09:28:32.288]  - future.globals: ‘...future.FUN’
[09:28:32.288]  - use_args: TRUE
[09:28:32.288] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[09:28:32.288] future_lapply() ...
[09:28:32.292] Number of chunks: 1
[09:28:32.292] getGlobalsAndPackagesXApply() ...
[09:28:32.292]  - future.globals: ‘...future.FUN’
[09:28:32.292]  - use_args: TRUE
[09:28:32.292] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[09:28:32.293] future_lapply() ...
[09:28:32.296] Number of chunks: 1
[09:28:32.296] getGlobalsAndPackagesXApply() ...
[09:28:32.296]  - future.globals: TRUE
[09:28:32.297]  - globals found/used: [n=1] ‘FUN’
[09:28:32.298]  - needed namespaces: [n=0] 
[09:28:32.298] Finding globals ... DONE
[09:28:32.298]  - use_args: TRUE
[09:28:32.298]  - Getting '...' globals ...
[09:28:32.298]    - '...' content: [n=0] 
[09:28:32.298] List of 1
[09:28:32.298]  $ ...: list()
[09:28:32.298]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.298]  - attr(*, "where")=List of 1
[09:28:32.298]   ..$ ...:<environment: 0x55f6945bafa0> 
[09:28:32.298]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.298]  - attr(*, "resolved")= logi TRUE
[09:28:32.298]  - attr(*, "total_size")= num NA
[09:28:32.301]  - Getting '...' globals ... DONE
[09:28:32.301] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[09:28:32.301] List of 2
[09:28:32.301]  $ ...future.FUN:function (f)  
[09:28:32.301]  $ ...          : list()
[09:28:32.301]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[09:28:32.301]  - attr(*, "where")=List of 2
[09:28:32.301]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[09:28:32.301]   ..$ ...          :<environment: 0x55f6945bafa0> 
[09:28:32.301]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[09:28:32.301]  - attr(*, "resolved")= logi FALSE
[09:28:32.301]  - attr(*, "total_size")= num 336
[09:28:32.304] Packages to be attached in all futures: [n=0] 
[09:28:32.304] getGlobalsAndPackagesXApply() ... DONE
[09:28:32.304] Number of futures (= number of chunks): 1
[09:28:32.304] Launching 1 futures (chunks) ...
[09:28:32.304] Chunk #1 of 1 ...
[09:28:32.304]  - Finding globals in 'X' for chunk #1 ...
[09:28:32.305]    + additional globals found: [n=1] ‘...future.elements_ii’
[09:28:32.306]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
