
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[09:32:03.387] plan(): Setting new future strategy stack:
[09:32:03.388] List of future strategies:
[09:32:03.388] 1. sequential:
[09:32:03.388]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[09:32:03.388]    - tweaked: FALSE
[09:32:03.388]    - call: future::plan("sequential")
[09:32:03.398] plan(): nbrOfWorkers() = 1
> 
> options(future.debug = FALSE)
> 
> message("*** withRestart() and muffling ...")
*** withRestart() and muffling ...
> 
> ## https://github.com/HenrikBengtsson/future/issues/485
> fcn <- function(...) {
+   withRestarts({
+     cond <- simpleCondition("boom")
+     class(cond) <- c("not_me", class(cond))
+     signalCondition(cond)
+     "success"
+   }, muffleSomething = function() {
+     message("Condition muffled")
+     "weird"
+   })
+ }
> 
> message(" - conditions = NULL")
 - conditions = NULL
> ## Disabling relaying conditions works
> f <- future(fcn(), conditions = NULL)
> v <- value(f)
> message("RESULT: ", v)
RESULT: success
> stopifnot(v == "success")
> 
> message(" - split = TRUE")
 - split = TRUE
> ## Splitting output works
> f <- future(fcn(), split = TRUE)
> v <- value(f)
> message("RESULT: ", v)
RESULT: success
> stopifnot(v == "success")
> 
> message(" - muffleInclude = '^$'")
 - muffleInclude = '^$'
> f <- future(fcn(), conditions = structure("condition", muffleInclude = "^$"))
> v <- value(f)
> message("RESULT: ", v)
RESULT: success
> stopifnot(v == "success")
> 
> message(" - FIXME")
 - FIXME
> ## FIXME: Ignoring specific condition class 'not_me' does not work
> f <- future(fcn(), conditions = structure("condition", exclude = "not_me"))
> v <- value(f)
Condition muffled
> message("RESULT: ", v)
RESULT: weird
> if (isTRUE(as.logical(Sys.getenv("R_CHECK_IDEAL")))) {
+   stopifnot(v == "success")
+ }
> 
> 
> message("*** withRestart() and muffling ... DONE")
*** withRestart() and muffling ... DONE
> 
> source("incl/end.R")
> 
