
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[09:31:44.008] plan(): Setting new future strategy stack:
[09:31:44.008] List of future strategies:
[09:31:44.008] 1. sequential:
[09:31:44.008]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[09:31:44.008]    - tweaked: FALSE
[09:31:44.008]    - call: future::plan("sequential")
[09:31:44.019] plan(): nbrOfWorkers() = 1
> stopCluster <- parallel::stopCluster
> 
> message("*** MPI ...")
*** MPI ...
> 
> pkg <- "Rmpi"
> if (fullTest && requireNamespace(pkg, quietly = TRUE)) {
+   cl <- makeClusterMPI(availableCores())
+   str(cl)
+   
+   plan(cluster, workers = cl)
+ 
+   fs <- lapply(1:2, FUN = function(x) future({
+     printf("Hostname: %s\n", Sys.info()[["nodename"]])
+     printf("PID: %d\n", Sys.getpid())
+     Sys.sleep(0.5)
+     x^2
+   }))
+   print(fs)
+   vs <- value(fs)
+   print(vs)
+   stopifnot(all(unlist(vs) == c(1, 4)))
+ 
+   stopCluster(cl)
+   str(cl)
+ }
> 
> message("*** MPI ... DONE")
*** MPI ... DONE
> 
> source("incl/end.R")
[09:31:44.032] plan(): Setting new future strategy stack:
[09:31:44.032] List of future strategies:
[09:31:44.032] 1. FutureStrategy:
[09:31:44.032]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[09:31:44.032]    - tweaked: FALSE
[09:31:44.032]    - call: future::plan(oplan)
[09:31:44.042] plan(): nbrOfWorkers() = 1
> 
