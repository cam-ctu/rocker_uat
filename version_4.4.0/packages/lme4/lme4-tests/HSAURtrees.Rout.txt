
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (.Platform$OS.type != "windows") withAutoprint({
+     library("lme4")
+ 
+     ## example from HSAUR2 package; data from 'multcomp'; see ../inst/testdata/trees513.R
+     load(system.file("testdata","trees513.RData",package="lme4"))
+ 
+     ## model formula:
+     modForm <- damage ~ species - 1 + (1 | lattice / plot)
+ 
+     dfun <- glmer(modForm, data = trees513B, family = binomial,
+                   devFunOnly = TRUE)
+     ls.str(environment(dfun))# "for your information"
+ 
+     .not.call <- function(x) x[names(x) != "call"]
+ 
+     if(lme4:::testLevel() < 2) q("no")
+     ## else  (testLevel >= 2) : --------------------------------------------------
+ 
+     ## Generate oldres:
+     ## ----------------
+     ## library(lme4.0)
+     ## system.time(mmod0 <- glmer(damage ~ species - 1 + (1 | lattice / plot),
+     ##               data = trees513, family = binomial()))
+     ## ## 4 seconds
+     ## oldres <- c(fixef(mmod0),getME(mmod0,"theta"))
+     ## detach("package:lme4.0")
+     ## dput(oldres)
+     oldres <- structure(c(5.23645064474105, 4.73568475545248, 2.65289926317093,
+                           1.29043984816924, 1.59329381563025,
+                           0.532663142106669, 1.16703186884403
+                           ), .Names = c("speciesspruce", "speciespine",
+                                         "speciesbeech",
+                                         "speciesoak", "specieshardwood",
+                                         "plot:lattice.(Intercept)",
+                                         "lattice.(Intercept)"))
+     system.time(mmodA <- glmer(modForm, data = trees513A, family = binomial()))
+     ## 7 seconds
+     newres <- c(fixef(mmodA), getME(mmodA,"theta"))
+     stopifnot(all.equal(oldres, newres, tolerance=1.5e-3))
+     system.time(mmodB <- glmer(modForm, data = trees513B, family = binomial()))
+     ## 10.4 seconds
+     ##
+     if(FALSE) { ## defuncted in 2019-05 [been deprecated since 2013-06]
+         ## lmer( + family) -> diverts to glmer() with a warning [TODO: use assertWarning(.) eventually]
+         system.time(lmodB <-
+                         lmer(modForm, data = trees513B, family = binomial()))
+         stopifnot(all.equal(.not.call(summary(mmodB)),
+                             .not.call(summary(lmodB))))
+         newresB <- c(fixef(mmodB),getME(mmodB,"theta"))
+         stopifnot(length(newresB) == length(oldres) + 1)# extra: species[ash/maple/elm/lime]
+     }
+ 
+ 
+ }) ## skip on windows (for speed)
> library("lme4")
Loading required package: Matrix
> load(system.file("testdata", "trees513.RData", package = "lme4"))
> modForm <- damage ~ species - 1 + (1 | lattice/plot)
> dfun <- glmer(modForm, data = trees513B, family = binomial, devFunOnly = TRUE)
> ls.str(environment(dfun))
baseOffset :  num [1:2687] 0 0 0 0 0 0 0 0 0 0 ...
compDev :  logi TRUE
control : List of 1
 $ iprint: int 0
dpars :  int [1:2] 1 2
fac :  Factor w/ 180 levels "10_1:10","10_2:10",..: 6 6 6 6 6 6 6 6 6 6 ...
GQmat :  num [1, 1:3] 0 1 -0.919
lower :  num [1:8] 0 0 -Inf -Inf -Inf ...
lp0 :  num [1:2687] 0.404 3.747 0.404 3.747 3.747 ...
maxit :  int 100
nAGQ :  int 1
pp : Reference class 'merPredD' [package "lme4"] with 18 fields
 and 45 methods, of which 31 are  possibly relevant:
   b, beta, CcNumer, copy#envRefClass, initialize, initializePtr, installPars,
   L, ldL2, ldRX2, linPred, P, ptr, RX, RXdiag, RXi, setBeta0, setDelb,
   setDelu, setTheta, setZt, solve, solveU, sqrL, u, unsc, updateDecomp,
   updateL, updateLamtUt, updateRes, updateXwts
pwrssUpdate : function (pp, resp, tol, GQmat, compDev = TRUE, grpFac = NULL, maxit = 70L, 
    verbose = 0)  
resp : Reference class 'glmResp' [package "lme4"] with 11 fields
 and 43 methods, of which 29 are  possibly relevant:
   aic, allInfo, allInfo#lmResp, copy#envRefClass, devResid, fam, initialize,
   initialize#lmResp, initializePtr, Laplace, link, muEta, ptr, ptr#lmResp,
   resDev, setOffset, setResp, setTheta, setWeights, sqrtWrkWt, theta,
   updateMu, updateMu#lmResp, updateWts, variance, wrkResids, wrkResp, wrss,
   wtWrkResp
tolPwrss :  num 1e-07
verbose :  int 0
> .not.call <- function(x) x[names(x) != "call"]
> if (lme4:::testLevel() < 2) q("no")
