
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "utils"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('utils')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("DLL.version")
> ### * DLL.version
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DLL.version
> ### Title: DLL Version Information on MS Windows
> ### Aliases: DLL.version
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows") withAutoprint({
+   DLL.version(file.path(R.home("bin"), "R.dll"))
+   DLL.version(file.path(R.home(), "library/stats/libs", .Platform$r_arch, "stats.dll"))
+ })
> 
> 
> 
> cleanEx()
> nameEx("LINK")
> ### * LINK
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: LINK
> ### Title: Create Executable Programs on Unix-alikes
> ### Aliases: LINK
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## examples of front-ends linked against R.
> ##D ## First a C program
> ##D CC=`R CMD config CC`
> ##D R CMD LINK $CC -o foo foo.o `R CMD config --ldflags`
> ##D 
> ##D ## if Fortran code has been compiled into ForFoo.o
> ##D FLIBS=`R CMD config FLIBS`
> ##D R CMD LINK $CC -o foo foo.o ForFoo.o `R CMD config --ldflags` $FLIBS
> ##D 
> ##D ## And for a C++ front-end
> ##D CXX=`R CMD config CXX`
> ##D R CMD COMPILE foo.cc
> ##D R CMD LINK $CXX -o foo foo.o `R CMD config --ldflags`
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("Question")
> ### * Question
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Question
> ### Title: Documentation Shortcuts
> ### Aliases: Question ?
> ### Keywords: documentation
> 
> ### ** Examples
> 
> ?lapply
lapply                  package:base                   R Documentation

_A_p_p_l_y _a _F_u_n_c_t_i_o_n _o_v_e_r _a _L_i_s_t _o_r _V_e_c_t_o_r

_D_e_s_c_r_i_p_t_i_o_n:

     ‘lapply’ returns a list of the same length as ‘X’, each element of
     which is the result of applying ‘FUN’ to the corresponding element
     of ‘X’.

     ‘sapply’ is a user-friendly version and wrapper of ‘lapply’ by
     default returning a vector, matrix or, if ‘simplify = "array"’, an
     array if appropriate, by applying ‘simplify2array()’.  ‘sapply(x,
     f, simplify = FALSE, USE.NAMES = FALSE)’ is the same as ‘lapply(x,
     f)’.

     ‘vapply’ is similar to ‘sapply’, but has a pre-specified type of
     return value, so it can be safer (and sometimes faster) to use.

     ‘replicate’ is a wrapper for the common use of ‘sapply’ for
     repeated evaluation of an expression (which will usually involve
     random number generation).

     ‘simplify2array()’ is the utility called from ‘sapply()’ when
     ‘simplify’ is not false and is similarly called from ‘mapply()’.

_U_s_a_g_e:

     lapply(X, FUN, ...)
     
     sapply(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE)
     
     vapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)
     
     replicate(n, expr, simplify = "array")
     
     simplify2array(x, higher = TRUE, except = c(0L, 1L))
     
_A_r_g_u_m_e_n_t_s:

       X: a vector (atomic or list) or an ‘expression’ object.  Other
          objects (including classed objects) will be coerced by
          ‘base::as.list’.

     FUN: the function to be applied to each element of ‘X’: see
          ‘Details’.  In the case of functions like ‘+’, ‘%*%’, the
          function name must be backquoted or quoted.

     ...: optional arguments to ‘FUN’.

simplify: logical or character string; should the result be simplified
          to a vector, matrix or higher dimensional array if possible?
          For ‘sapply’ it must be named and not abbreviated.  The
          default value, ‘TRUE’, returns a vector or matrix if
          appropriate, whereas if ‘simplify = "array"’ the result may
          be an ‘array’ of “rank” (=‘length(dim(.))’) one higher than
          the result of ‘FUN(X[[i]])’.

USE.NAMES: logical; if ‘TRUE’ and if ‘X’ is character, use ‘X’ as
          ‘names’ for the result unless it had names already.  Since
          this argument follows ‘...’ its name cannot be abbreviated.

FUN.VALUE: a (generalized) vector; a template for the return value from
          FUN.  See ‘Details’.

       n: integer: the number of replications.

    expr: the expression (a language object, usually a call) to
          evaluate repeatedly.

       x: a list, typically returned from ‘lapply()’.

  higher: logical; if true, ‘simplify2array()’ will produce a (“higher
          rank”) array when appropriate, whereas ‘higher = FALSE’ would
          return a matrix (or vector) only.  These two cases correspond
          to ‘sapply(*, simplify = "array")’ or ‘simplify = TRUE’,
          respectively.

  except: integer vector or ‘NULL’; the default ‘c(0L, 1L)’ corresponds
          to the exceptions used by ‘sapply’: a list with elements of
          common length 0 or 1 is not simplified to an array but is
          returned, respectively, as is or unlisted.  These exceptions
          can be disabled by specifying only a subset of ‘0:1’, or
          ‘NULL’ to always simplify to an array (if possible).

_D_e_t_a_i_l_s:

     ‘FUN’ is found by a call to ‘match.fun’ and typically is specified
     as a function or a symbol (e.g., a backquoted name) or a character
     string specifying a function to be searched for from the
     environment of the call to ‘lapply’.

     Function ‘FUN’ must be able to accept as input any of the elements
     of ‘X’.  If the latter is an atomic vector, ‘FUN’ will always be
     passed a length-one vector of the same type as ‘X’.

     Arguments in ‘...’ cannot have the same name as any of the other
     arguments, and care may be needed to avoid partial matching to
     ‘FUN’.  In general-purpose code it is good practice to name the
     first two arguments ‘X’ and ‘FUN’ if ‘...’ is passed through: this
     both avoids partial matching to ‘FUN’ and ensures that a sensible
     error message is given if arguments named ‘X’ or ‘FUN’ are passed
     through ‘...’.

     Simplification in ‘sapply’ is only attempted if ‘X’ has length
     greater than zero and if the return values from all elements of
     ‘X’ are all of the same (positive) length.  If the common length
     is one the result is a vector, and if greater than one is a matrix
     with a column corresponding to each element of ‘X’.

     Simplification is always done in ‘vapply’.  This function checks
     that all values of ‘FUN’ are compatible with the ‘FUN.VALUE’, in
     that they must have the same length and type.  (Types may be
     promoted to a higher type within the ordering logical < integer <
     double < complex, but not demoted.)

     Users of S4 classes should pass a list to ‘lapply’ and ‘vapply’:
     the internal coercion is done by the ‘as.list’ in the base
     namespace and not one defined by a user (e.g., by setting S4
     methods on the base function).

_V_a_l_u_e:

     For ‘lapply’, ‘sapply(simplify = FALSE)’ and ‘replicate(simplify =
     FALSE)’, a list.

     For ‘sapply(simplify = TRUE)’ and ‘replicate(simplify = TRUE)’: if
     ‘X’ has length zero or ‘n = 0’, an empty list.  Otherwise an
     atomic vector or matrix or list of the same length as ‘X’ (of
     length ‘n’ for ‘replicate’).  If simplification occurs, the output
     type is determined from the highest type of the return values in
     the hierarchy NULL < raw < logical < integer < double < complex <
     character < list < expression, after coercion of pairlists to
     lists.

     ‘vapply’ returns a vector or array of type matching the
     ‘FUN.VALUE’.  If ‘length(FUN.VALUE) == 1’ a vector of the same
     length as ‘X’ is returned, otherwise an array.  If ‘FUN.VALUE’ is
     not an ‘array’, the result is a matrix with ‘length(FUN.VALUE)’
     rows and ‘length(X)’ columns, otherwise an array ‘a’ with ‘dim(a)
     == c(dim(FUN.VALUE), length(X))’.

     The (Dim)names of the array value are taken from the ‘FUN.VALUE’
     if it is named, otherwise from the result of the first function
     call.  Column names of the matrix or more generally the names of
     the last dimension of the array value or names of the vector value
     are set from ‘X’ as in ‘sapply’.

_N_o_t_e:

     ‘sapply(*, simplify = FALSE, USE.NAMES = FALSE)’ is equivalent to
     ‘lapply(*)’.

     For historical reasons, the calls created by ‘lapply’ are
     unevaluated, and code has been written (e.g., ‘bquote’) that
     relies on this.  This means that the recorded call is always of
     the form ‘FUN(X[[i]], ...)’, with ‘i’ replaced by the current
     (integer or double) index.  This is not normally a problem, but it
     can be if ‘FUN’ uses ‘sys.call’ or ‘match.call’ or if it is a
     primitive function that makes use of the call.  This means that it
     is often safer to call primitive functions with a wrapper, so that
     e.g. ‘lapply(ll, function(x) is.numeric(x))’ is required to ensure
     that method dispatch for ‘is.numeric’ occurs correctly.

     If ‘expr’ is a function call, be aware of assumptions about where
     it is evaluated, and in particular what ‘...’ might refer to.  You
     can pass additional named arguments to a function call as
     additional named arguments to ‘replicate’: see ‘Examples’.

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘apply’, ‘tapply’, ‘mapply’ for applying a function to *m*ultiple
     arguments, and ‘rapply’ for a *r*ecursive version of ‘lapply()’,
     ‘eapply’ for applying a function to each entry in an
     ‘environment’.

_E_x_a_m_p_l_e_s:

     require(stats); require(graphics)
     
     x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
     # compute the list mean for each list element
     lapply(x, mean)
     # median and quartiles for each list element
     lapply(x, quantile, probs = 1:3/4)
     sapply(x, quantile)
     i39 <- sapply(3:9, seq) # list of vectors
     sapply(i39, fivenum)
     vapply(i39, fivenum,
            c(Min. = 0, "1st Qu." = 0, Median = 0, "3rd Qu." = 0, Max. = 0))
     
     ## sapply(*, "array") -- artificial example
     (v <- structure(10*(5:8), names = LETTERS[1:4]))
     f2 <- function(x, y) outer(rep(x, length.out = 3), y)
     (a2 <- sapply(v, f2, y = 2*(1:5), simplify = "array"))
     a.2 <- vapply(v, f2, outer(1:3, 1:5), y = 2*(1:5))
     stopifnot(dim(a2) == c(3,5,4), all.equal(a2, a.2),
               identical(dimnames(a2), list(NULL,NULL,LETTERS[1:4])))
     
     hist(replicate(100, mean(rexp(10))))
     
     ## use of replicate() with parameters:
     foo <- function(x = 1, y = 2) c(x, y)
     # does not work: bar <- function(n, ...) replicate(n, foo(...))
     bar <- function(n, x) replicate(n, foo(x = x))
     bar(5, x = 3)
     

> 
> ?"for"                  # but quotes/backticks are needed
Control                  package:base                  R Documentation

_C_o_n_t_r_o_l _F_l_o_w

_D_e_s_c_r_i_p_t_i_o_n:

     These are the basic control-flow constructs of the R language.
     They function in much the same way as control statements in any
     Algol-like language.  They are all reserved words.

_U_s_a_g_e:

     if(cond) expr
     if(cond) cons.expr  else  alt.expr
     
     for(var in seq) expr
     while(cond) expr
     repeat expr
     break
     next
     
_A_r_g_u_m_e_n_t_s:

    cond: A length-one logical vector that is not ‘NA’.  Other types
          are coerced to logical if possible, ignoring any class.
          (Conditions of length greater than one are an error.)

     var: A syntactical name for a variable.

     seq: An expression evaluating to a vector (including a list and an
          expression) or to a pairlist or ‘NULL’.  A factor value will
          be coerced to a character vector.  This can be a long vector.

expr, cons.expr, alt.expr: An _expression_ in a formal sense.  This is
          either a simple expression or a so-called _compound
          expression_, usually of the form ‘{ expr1 ; expr2 }’.

_D_e_t_a_i_l_s:

     ‘break’ breaks out of a ‘for’, ‘while’ or ‘repeat’ loop; control
     is transferred to the first statement outside the inner-most loop.
     ‘next’ halts the processing of the current iteration and advances
     the looping index.  Both ‘break’ and ‘next’ apply only to the
     innermost of nested loops.

     Note that it is a common mistake to forget to put braces (‘{ ..
     }’) around your statements, e.g., after ‘if(..)’ or ‘for(....)’.
     In particular, you should not have a newline between ‘}’ and
     ‘else’ to avoid a syntax error in entering a ‘if ... else’
     construct at the keyboard or via ‘source’.  For that reason, one
     (somewhat extreme) attitude of defensive programming is to always
     use braces, e.g., for ‘if’ clauses.

     The ‘seq’ in a ‘for’ loop is evaluated at the start of the loop;
     changing it subsequently does not affect the loop.  If ‘seq’ has
     length zero the body of the loop is skipped. Otherwise the
     variable ‘var’ is assigned in turn the value of each element of
     ‘seq’. You can assign to ‘var’ within the body of the loop, but
     this will not affect the next iteration.  When the loop
     terminates, ‘var’ remains as a variable containing its latest
     value.

_V_a_l_u_e:

     ‘if’ returns the value of the expression evaluated, or ‘NULL’
     invisibly if none was (which may happen if there is no ‘else’).

     ‘for’, ‘while’ and ‘repeat’ return ‘NULL’ invisibly.  ‘for’ sets
     ‘var’ to the last used element of ‘seq’, or to ‘NULL’ if it was of
     length zero.

     ‘break’ and ‘next’ do not return a value as they transfer control
     within the loop.

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘Syntax’ for the basic R syntax and operators, ‘Paren’ for
     parentheses and braces.

     ‘ifelse’, ‘switch’ for other ways to control flow.

_E_x_a_m_p_l_e_s:

     for(i in 1:5) print(1:i)
     for(n in c(2,5,10,20,50)) {
        x <- stats::rnorm(n)
        cat(n, ": ", sum(x^2), "\n", sep = "")
     }
     f <- factor(sample(letters[1:5], 10, replace = TRUE))
     for(i in unique(f)) print(i)
     

> ?`+`
Arithmetic                package:base                 R Documentation

_A_r_i_t_h_m_e_t_i_c _O_p_e_r_a_t_o_r_s

_D_e_s_c_r_i_p_t_i_o_n:

     These unary and binary operators perform arithmetic on numeric or
     complex vectors (or objects which can be coerced to them).

_U_s_a_g_e:

     + x
     - x
     x + y
     x - y
     x * y
     x / y
     x ^ y
     x %% y
     x %/% y
     
_A_r_g_u_m_e_n_t_s:

    x, y: numeric or complex vectors or objects which can be coerced to
          such, or other objects for which methods have been written.

_D_e_t_a_i_l_s:

     The unary and binary arithmetic operators are generic functions:
     methods can be written for them individually or via the ‘Ops’
     group generic function.  (See ‘Ops’ for how dispatch is computed.)

     If applied to arrays the result will be an array if this is
     sensible (for example it will not if the recycling rule has been
     invoked).

     Logical vectors will be coerced to integer or numeric vectors,
     ‘FALSE’ having value zero and ‘TRUE’ having value one.

     ‘1 ^ y’ and ‘y ^ 0’ are ‘1’, _always_.  ‘x ^ y’ should also give
     the proper limit result when either (numeric) argument is infinite
     (one of ‘Inf’ or ‘-Inf’).

     Objects such as arrays or time-series can be operated on this way
     provided they are conformable.

     For double arguments, ‘%%’ can be subject to catastrophic loss of
     accuracy if ‘x’ is much larger than ‘y’, and a warning is given if
     this is detected.

     ‘%%’ and ‘x %/% y’ can be used for non-integer ‘y’, e.g. ‘1 %/%
     0.2’, but the results are subject to representation error and so
     may be platform-dependent.  Because the IEC 60559 representation
     of ‘0.2’ is a binary fraction slightly larger than ‘0.2’, the
     answer to ‘1 %/% 0.2’ should be ‘4’ but most platforms give ‘5’.

     Users are sometimes surprised by the value returned, for example
     why ‘(-8)^(1/3)’ is ‘NaN’.  For double inputs, R makes use of IEC
     60559 arithmetic on all platforms, together with the C system
     function ‘pow’ for the ‘^’ operator.  The relevant standards
     define the result in many corner cases.  In particular, the result
     in the example above is mandated by the C99 standard.  On many
     Unix-alike systems the command ‘man pow’ gives details of the
     values in a large number of corner cases.

     Arithmetic on type double in R is supposed to be done in ‘round to
     nearest, ties to even’ mode, but this does depend on the compiler
     and FPU being set up correctly.

_V_a_l_u_e:

     Unary ‘+’ and unary ‘-’ return a numeric or complex vector.  All
     attributes (including class) are preserved if there is no
     coercion: logical ‘x’ is coerced to integer and names, dims and
     dimnames are preserved.

     The binary operators return vectors containing the result of the
     element by element operations.  If involving a zero-length vector
     the result has length zero.  Otherwise, the elements of shorter
     vectors are recycled as necessary (with a ‘warning’ when they are
     recycled only _fractionally_).  The operators are ‘+’ for
     addition, ‘-’ for subtraction, ‘*’ for multiplication, ‘/’ for
     division and ‘^’ for exponentiation.

     ‘%%’ indicates ‘x mod y’ (“x modulo y”), i.e., computes the
     ‘remainder’ ‘r <- x %% y’, and ‘%/%’ indicates integer division,
     where R uses “floored” integer division, i.e., ‘q <- x %/% y :=
     floor(x/y)’, as promoted by Donald Knuth, see the Wikipedia page
     on ‘Modulo operation’, and hence ‘sign(r) == sign(y)’.  It is
     guaranteed that

     ‘ x == (x %% y) + y * (x %/% y) ’ (up to rounding error)

     unless ‘y == 0’ where the result of ‘%%’ is ‘NA_integer_’ or ‘NaN’
     (depending on the ‘typeof’ of the arguments) or for some
     non-finite arguments, e.g., when the RHS of the identity above
     amounts to ‘Inf - Inf’.

     If either argument is complex the result will be complex,
     otherwise if one or both arguments are numeric, the result will be
     numeric.  If both arguments are of type integer, the type of the
     result of ‘/’ and ‘^’ is numeric and for the other operators it is
     integer (with overflow, which occurs at +/- (2^31 - 1), returned
     as ‘NA_integer_’ with a warning).

     The rules for determining the attributes of the result are rather
     complicated.  Most attributes are taken from the longer argument.
     Names will be copied from the first if it is the same length as
     the answer, otherwise from the second if that is.  If the
     arguments are the same length, attributes will be copied from
     both, with those of the first argument taking precedence when the
     same attribute is present in both arguments. For time series,
     these operations are allowed only if the series are compatible,
     when the class and ‘tsp’ attribute of whichever is a time series
     (the same, if both are) are used.  For arrays (and an array
     result) the dimensions and dimnames are taken from first argument
     if it is an array, otherwise the second.

_S_4 _m_e_t_h_o_d_s:

     These operators are members of the S4 ‘Arith’ group generic, and
     so methods can be written for them individually as well as for the
     group generic (or the ‘Ops’ group generic), with arguments ‘c(e1,
     e2)’ (with ‘e2’ missing for a unary operator).

_I_m_p_l_e_m_e_n_t_a_t_i_o_n _l_i_m_i_t_s:

     R is dependent on OS services (and they on FPUs) for
     floating-point arithmetic.  On all current R platforms IEC 60559
     (also known as IEEE 754) arithmetic is used, but some things in
     those standards are optional.  In particular, the support for
     _denormal_ aka _subnormal_ numbers (those outside the range given
     by ‘.Machine’) may differ between platforms and even between
     calculations on a single platform.

     Another potential issue is signed zeroes: on IEC 60559 platforms
     there are two zeroes with internal representations differing by
     sign.  Where possible R treats them as the same, but for example
     direct output from C code often does not do so and may output
     ‘-0.0’ (and on Windows whether it does so or not depends on the
     version of Windows).  One place in R where the difference might be
     seen is in division by zero: ‘1/x’ is ‘Inf’ or ‘-Inf’ depending on
     the sign of zero ‘x’.  Another place is ‘identical(0, -0, num.eq =
     FALSE)’.

_N_o_t_e:

     All logical operations involving a zero-length vector have a
     zero-length result.

     The binary operators are sometimes called as functions as e.g.
     ‘`&`(x, y)’: see the description of how argument-matching is done
     in ‘Ops’.

     ‘**’ is translated in the parser to ‘^’, but this was undocumented
     for many years.  It appears as an index entry in Becker _et al_
     (1988), pointing to the help for ‘Deprecated’ but is not actually
     mentioned on that page.  Even though it had been deprecated in S
     for 20 years, it was still accepted in R in 2008.

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

     D. Goldberg (1991).  What Every Computer Scientist Should Know
     about Floating-Point Arithmetic.  _ACM Computing Surveys_,
     *23*(1), 5-48.  doi:10.1145/103162.103163
     <https://doi.org/10.1145/103162.103163>.

     Also available at
     <https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html>.

     For the IEC 60559 (aka IEEE 754) standard:
     <https://www.iso.org/standard/57469.html> and
     <https://en.wikipedia.org/wiki/IEEE_754>.

     On the integer division and remainder (modulo) computations, ‘%%’
     and ‘%/%’: <https://en.wikipedia.org/wiki/Modulo_operation>, and
     Donald Knuth (1972) _The Art of Computer Programming_, Vol.1.

_S_e_e _A_l_s_o:

     ‘sqrt’ for miscellaneous and ‘Special’ for special mathematical
     functions.

     ‘Syntax’ for operator precedence.

     ‘%*%’ for matrix multiplication.

_E_x_a_m_p_l_e_s:

     x <- -1:12
     x + 1
     2 * x + 3
     x %%  3 # is periodic  2 0  1  2 0  1 ...
     x %% -3 #  (ditto)    -1 0 -2 -1 0 -2 ...
     x %/% 5
     x %% Inf # now is defined by limit (gave NaN in earlier versions of R)
     

> 
> ?women                  # information about data set "women"
women                 package:datasets                 R Documentation

_A_v_e_r_a_g_e _H_e_i_g_h_t_s _a_n_d _W_e_i_g_h_t_s _f_o_r _A_m_e_r_i_c_a_n _W_o_m_e_n

_D_e_s_c_r_i_p_t_i_o_n:

     This data set gives the average heights and weights for American
     women aged 30-39.

_U_s_a_g_e:

     women
     
_F_o_r_m_a_t:

     A data frame with 15 observations on 2 variables.

       ‘[,1]’  ‘height’  numeric  Height (in)  
       ‘[,2]’  ‘weight’  numeric  Weight (lbs) 
      
_D_e_t_a_i_l_s:

     The data set appears to have been taken from the American Society
     of Actuaries _Build and Blood Pressure Study_ for some (unknown to
     us) earlier year.

     The World Almanac notes: “The figures represent weights in
     ordinary indoor clothing and shoes, and heights with shoes”.

_S_o_u_r_c_e:

     The World Almanac and Book of Facts, 1975.

_R_e_f_e_r_e_n_c_e_s:

     McNeil, D. R. (1977) _Interactive Data Analysis_.  Wiley.

_E_x_a_m_p_l_e_s:

     require(graphics)
     plot(women, xlab = "Height (in)", ylab = "Weight (lb)",
          main = "women data: American women aged 30-39")
     

> 
> ## Not run: 
> ##D require(methods)
> ##D ## define a S4 generic function and some methods
> ##D combo <- function(x, y) c(x, y)
> ##D setGeneric("combo")
> ##D setMethod("combo", c("numeric", "numeric"), function(x, y) x+y)
> ##D 
> ##D ## assume we have written some documentation
> ##D ## for combo, and its methods ....
> ##D 
> ##D ?combo  # produces the function documentation
> ##D 
> ##D methods?combo  # looks for the overall methods documentation
> ##D 
> ##D method?combo("numeric", "numeric")  # documentation for the method above
> ##D 
> ##D ?combo(1:10, rnorm(10))  # ... the same method, selected according to
> ##D                          # the arguments (one integer, the other numeric)
> ##D 
> ##D ?combo(1:10, letters)    # documentation for the default method
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("RShowDoc")
> ### * RShowDoc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RShowDoc
> ### Title: Show R Manuals and Other Documentation
> ### Aliases: RShowDoc
> ### Keywords: documentation
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("RSiteSearch")
> ### * RSiteSearch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RSiteSearch
> ### Title: Search for Key Words or Phrases in Documentation
> ### Aliases: RSiteSearch
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("Rconsole")
> ### * Rconsole
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rwin configuration
> ### Title: R for Windows Configuration
> ### Aliases: Rconsole Rdevga loadRconsole
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows") withAutoprint({
+   ruser <- Sys.getenv("R_USER")
+   cat("\n\nLocation for personal configuration files is\n   R_USER = ",
+       ruser, "\n\n", sep = "")
+   ## see if there are personal configuration files
+   file.exists(file.path(ruser, c("Rconsole", "Rdevga")))
+ 
+   ## show the configuration files used
+   showConfig <- function(file)
+   {
+       ruser <- Sys.getenv("R_USER")
+       path <- file.path(ruser, file)
+       if(!file.exists(path)) path <- file.path(R.home(), "etc", file)
+       file.show(path, header = path)
+   }
+   showConfig("Rconsole")
+ })
> 
> 
> 
> cleanEx()
> nameEx("Rprof")
> ### * Rprof
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rprof
> ### Title: Enable Profiling of R's Execution
> ### Aliases: Rprof
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D Rprof()
> ##D ## some code to be profiled
> ##D Rprof(NULL)
> ##D ## some code NOT to be profiled
> ##D Rprof(append = TRUE)
> ##D ## some code to be profiled
> ##D Rprof(NULL)
> ##D ## ...
> ##D ## Now post-process the output as described in Details
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("Rprofmem")
> ### * Rprofmem
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rprofmem
> ### Title: Enable Profiling of R's Memory Use
> ### Aliases: Rprofmem
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## not supported unless R is compiled to support it.
> ##D Rprofmem("Rprofmem.out", threshold = 1000)
> ##D example(glm)
> ##D Rprofmem(NULL)
> ##D noquote(readLines("Rprofmem.out", n = 5))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("Rscript")
> ### * Rscript
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rscript
> ### Title: Scripting Front-End for R
> ### Aliases: Rscript
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D Rscript -e 'date()' -e 'format(Sys.time(), "%a %b %d %X %Y")'
> ##D 
> ##D # Get the same initial packages in the same order as default R:
> ##D Rscript --default-packages=methods,datasets,utils,grDevices,graphics,stats -e 'sessionInfo()'
> ##D 
> ##D ## example #! script for a Unix-alike
> ##D ## (arguments given on the #! line end up as [options] to Rscript, while
> ##D ## arguments passed to the #! script end up as [args], so available to
> ##D ## commandArgs())
> ##D #! /path/to/Rscript --vanilla --default-packages=utils
> ##D args <- commandArgs(TRUE)
> ##D res <- try(install.packages(args))
> ##D if(inherits(res, "try-error")) q(status=1) else q()
> ##D 
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("Rtangle")
> ### * Rtangle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rtangle
> ### Title: R Driver for Stangle
> ### Aliases: Rtangle RtangleSetup
> ### Keywords: utilities
> 
> ### ** Examples
> 
> nmRnw <- "example-1.Rnw"
> exfile <- system.file("Sweave", nmRnw, package = "utils")
> ## Create R source file
> Stangle(exfile)
Writing to file example-1.R 
> nmR <- sub("Rnw$", "R", nmRnw) # the (default) R output file name
> if(interactive()) file.show("example-1.R")
> ## Don't show: 
> file.rename("example-1.R", "example-1_def.R")
[1] TRUE
> ## End(Don't show)
> ## Smaller R source file with custom annotation:
> my.Ann <- function(options, chunk, output) {
+   cat("### chunk #", options$chunknr, ": ",
+       if(!is.null(ol <- options$label)) ol else .RtangleCodeLabel(chunk),
+       if(!options$eval) " (eval = FALSE)", "\n",
+       file = output, sep = "")
+ }
> Stangle(exfile, annotate = my.Ann)
Writing to file example-1.R 
> if(interactive()) file.show("example-1.R")
> ## Don't show: 
> file.rename("example-1.R", "example-1_myA.R")
[1] TRUE
> ## End(Don't show)
> Stangle(exfile, annotate = my.Ann, drop.evalFALSE=TRUE)
Writing to file example-1.R 
> if(interactive()) file.show("example-1.R")
> ## Don't show: 
> file.rename("example-1.R", "example-1_myA-noF.R")
[1] TRUE
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("SHLIB")
> ### * SHLIB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SHLIB
> ### Title: Build Shared Object/DLL for Dynamic Loading
> ### Aliases: SHLIB
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D # To link against a library not on the system library paths:
> ##D R CMD SHLIB -o mylib.so a.f b.f -L/opt/acml3.5.0/gnu64/lib -lacml
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("Sweave")
> ### * Sweave
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Sweave
> ### Title: Automatic Generation of Reports
> ### Aliases: Sweave Stangle SweaveSyntaxLatex SweaveSyntaxNoweb
> ### Keywords: utilities
> 
> ### ** Examples
> 
> testfile <- system.file("Sweave", "Sweave-test-1.Rnw", package = "utils")
> ## Don't show: 
> oldwd <- setwd(tempdir()) # so we will write only to a temp directory
> ## End(Don't show)
> 
> ## enforce par(ask = FALSE)
> options(device.ask.default = FALSE)
> 
> ## create a LaTeX file - in the current working directory, getwd():
> Sweave(testfile)
Writing to file Sweave-test-1.tex
Processing code chunks with options ...
 1 : keep.source print term verbatim (Sweave-test-1.Rnw:15)
 2 : keep.source term hide (Sweave-test-1.Rnw:17)
 3 : echo keep.source print term verbatim (Sweave-test-1.Rnw:22)
 4 : keep.source term verbatim (Sweave-test-1.Rnw:30)
 5 : echo keep.source term verbatim (Sweave-test-1.Rnw:45)
 6 : echo keep.source term verbatim pdf  (Sweave-test-1.Rnw:53)
 7 : echo keep.source term verbatim pdf  (Sweave-test-1.Rnw:63)

You can now run (pdf)latex on ‘Sweave-test-1.tex’
> 
> ## This can be compiled to PDF by
> ## tools::texi2pdf("Sweave-test-1.tex")
> 
> ## or outside R by
> ##
> ## 	R CMD texi2pdf Sweave-test-1.tex
> ## on Unix-alikes which sets the appropriate TEXINPUTS path.
> ##
> ## On Windows,
> ##      Rcmd texify --pdf Sweave-test-1.tex
> ## if MiKTeX is available.
> 
> ## create an R source file from the code chunks
> Stangle(testfile)
Writing to file Sweave-test-1.R 
> ## which can be sourced, e.g.
> source("Sweave-test-1.R")
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 [1]  0.91897737  0.78213630  0.07456498 -1.98935170  0.61982575 -0.05612874
 [7] -0.15579551 -1.47075238 -0.47815006  0.41794156  1.35867955 -0.10278773
[13]  0.38767161 -0.05380504 -1.37705956 -0.41499456 -0.39428995 -0.05931340
[19]  1.10002537  0.76317575

	One Sample t-test

data:  x
t = -0.033214, df = 19, p-value = 0.9739
alternative hypothesis: true mean is not equal to 0
95 percent confidence interval:
 -0.414283  0.401340
sample estimates:
   mean of x 
-0.006471519 

> 
> ## Don't show: 
> if(!interactive()) unlink("Sweave-test-1*")
> setwd(oldwd)
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("SweaveSyntConv")
> ### * SweaveSyntConv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SweaveSyntConv
> ### Title: Convert Sweave Syntax
> ### Aliases: SweaveSyntConv
> ### Keywords: utilities
> 
> ### ** Examples
> 
> testfile <- system.file("Sweave", "Sweave-test-1.Rnw", package = "utils")
> ## Don't show: 
> oldwd <- setwd(tempdir())
> ## End(Don't show)
> 
> ## convert the file to latex syntax
> SweaveSyntConv(testfile, SweaveSyntaxLatex)
Wrote file Sweave-test-1.Stex 
> 
> ## and run it through Sweave
> Sweave("Sweave-test-1.Stex")
Writing to file Sweave-test-1.tex
Processing code chunks with options ...
 1 : keep.source print term verbatim (Sweave-test-1.Stex:15)
 2 : keep.source term hide (Sweave-test-1.Stex:17)
 3 : echo keep.source print term verbatim (Sweave-test-1.Stex:22)
 4 : keep.source term verbatim (Sweave-test-1.Stex:30)
 5 : echo keep.source term verbatim (Sweave-test-1.Stex:45)
 6 : echo keep.source term verbatim pdf  (Sweave-test-1.Stex:53)
 7 : echo keep.source term verbatim pdf  (Sweave-test-1.Stex:63)

You can now run (pdf)latex on ‘Sweave-test-1.tex’
> 
> ## Don't show: 
>  if(!interactive()) unlink("Sweave-test-1*") ; setwd(oldwd) 
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("URLencode")
> ### * URLencode
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: URLencode
> ### Title: Encode or Decode (partial) URLs
> ### Aliases: URLencode URLdecode
> ### Keywords: utilities
> 
> ### ** Examples
> 
> (y <- URLencode("a url with spaces and / and @"))
[1] "a%20url%20with%20spaces%20and%20/%20and%20@"
> URLdecode(y)
[1] "a url with spaces and / and @"
> (y <- URLencode("a url with spaces and / and @", reserved = TRUE))
[1] "a%20url%20with%20spaces%20and%20%2F%20and%20%40"
> URLdecode(y)
[1] "a url with spaces and / and @"
> 
> URLdecode(z <- "ab%20cd")
[1] "ab cd"
> c(URLencode(z), URLencode(z, repeated = TRUE)) # first is usually wanted
[1] "ab%20cd"   "ab%2520cd"
> 
> ## both functions support character vectors of length > 1
> y <- URLdecode(URLencode(c("url with space", "another one")))
> 
> 
> 
> cleanEx()
> nameEx("adist")
> ### * adist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: adist
> ### Title: Approximate String Distances
> ### Aliases: adist
> ### Keywords: character
> 
> ### ** Examples
> 
> ## Cf. https://en.wikipedia.org/wiki/Levenshtein_distance
> adist("kitten", "sitting")
     [,1]
[1,]    3
> ## To see the transformation counts for the Levenshtein distance:
> drop(attr(adist("kitten", "sitting", counts = TRUE), "counts"))
ins del sub 
  1   0   2 
> ## To see the transformation sequences:
> attr(adist(c("kitten", "sitting"), counts = TRUE), "trafos")
     [,1]      [,2]     
[1,] "MMMMMM"  "SMMMSMI"
[2,] "SMMMSMD" "MMMMMMM"
> 
> ## Cf. the examples for agrep:
> adist("lasy", "1 lazy 2")
     [,1]
[1,]    5
> ## For a "partial approximate match" (as used for agrep):
> adist("lasy", "1 lazy 2", partial = TRUE)
     [,1]
[1,]    1
> 
> 
> 
> cleanEx()
> nameEx("alarm")
> ### * alarm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: alarm
> ### Title: Alert the User
> ### Aliases: alarm
> ### Keywords: utilities
> 
> ### ** Examples
> 
> alarm()
> 
> 
> 
> cleanEx()
> nameEx("apropos")
> ### * apropos
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apropos
> ### Title: Find Objects by (Partial) Name
> ### Aliases: apropos find
> ### Keywords: data documentation environment
> 
> ### ** Examples
> 
> require(stats)
> 
> ## Not run: apropos("lm")
> apropos("GLM")                      # several
[1] "glm"           "glm.control"   "glm.fit"       "predict.glm"  
[5] "residuals.glm" "summary.glm"  
> apropos("GLM", ignore.case = FALSE) # not one
character(0)
> apropos("lq")
[1] "evalq"       "evalqOnLoad"
> 
> cor <- 1:pi
> find("cor")                         #> ".GlobalEnv"   "package:stats"
[1] ".GlobalEnv"    "package:stats"
> find("cor", numeric = TRUE)                     # numbers with these names
   .GlobalEnv package:stats 
            1             3 
> find("cor", numeric = TRUE, mode = "function")  # only the second one
package:stats 
            3 
> rm(cor)
> 
> ## Not run: apropos(".", mode="list")  # a long list
> 
> # need a DOUBLE backslash '\\' (in case you don't see it anymore)
> apropos("\\[")
 [1] "["                    "[.AsIs"               "[.DLLInfoList"       
 [4] "[.Date"               "[.Dlist"              "[.POSIXct"           
 [7] "[.POSIXlt"            "[.data.frame"         "[.difftime"          
[10] "[.factor"             "[.hexmode"            "[.listof"            
[13] "[.noquote"            "[.numeric_version"    "[.octmode"           
[16] "[.simple.list"        "[.table"              "[.warnings"          
[19] "[<-"                  "[<-.Date"             "[<-.POSIXct"         
[22] "[<-.POSIXlt"          "[<-.data.frame"       "[<-.difftime"        
[25] "[<-.factor"           "[<-.numeric_version"  "[["                  
[28] "[[.Date"              "[[.POSIXct"           "[[.POSIXlt"          
[31] "[[.data.frame"        "[[.factor"            "[[.numeric_version"  
[34] "[[<-"                 "[[<-.POSIXlt"         "[[<-.data.frame"     
[37] "[[<-.factor"          "[[<-.numeric_version"
> 
> 
> 
> cleanEx()
> nameEx("aregexec")
> ### * aregexec
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aregexec
> ### Title: Approximate String Match Positions
> ### Aliases: aregexec
> ### Keywords: character
> 
> ### ** Examples
> 
> ## Cf. the examples for agrep.
> x <- c("1 lazy", "1", "1 LAZY")
> aregexec("laysy", x, max.distance = 2)
[[1]]
[1] 3
attr(,"match.length")
[1] 4

[[2]]
[1] -1
attr(,"match.length")
[1] -1

[[3]]
[1] -1
attr(,"match.length")
[1] -1

> aregexec("(lay)(sy)", x, max.distance = 2)
[[1]]
[1] 3 3 5
attr(,"match.length")
[1] 4 2 2

[[2]]
[1] -1
attr(,"match.length")
[1] -1

[[3]]
[1] -1
attr(,"match.length")
[1] -1

> aregexec("(lay)(sy)", x, max.distance = 2, ignore.case = TRUE)
[[1]]
[1] 3 3 6
attr(,"match.length")
[1] 4 3 1

[[2]]
[1] -1
attr(,"match.length")
[1] -1

[[3]]
[1] 3 3 6
attr(,"match.length")
[1] 4 3 1

> m <- aregexec("(lay)(sy)", x, max.distance = 2)
> regmatches(x, m)
[[1]]
[1] "lazy" "la"   "zy"  

[[2]]
character(0)

[[3]]
character(0)

> 
> 
> 
> cleanEx()
> nameEx("arrangeWindows")
> ### * arrangeWindows
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: arrangeWindows
> ### Title: Rearrange Windows on MS Windows
> ### Aliases: arrangeWindows
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Only available on Windows :
> ##D arrangeWindows("v")
> ##D # This default is useful only in SDI mode:  it will tile any Firefox window
> ##D # along with the R windows
> ##D .arrangeWindowsDefaults <- list(c("R", "all"), pattern = c("", "Firefox"))
> ##D arrangeWindows("v")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("askYesNo")
> ### * askYesNo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: askYesNo
> ### Title: Ask a Yes/No Question
> ### Aliases: askYesNo
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if (interactive())
+     askYesNo("Do you want to use askYesNo?")
> 
> 
> 
> cleanEx()
> nameEx("aspell")
> ### * aspell
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aspell
> ### Title: Spell Check Interface
> ### Aliases: aspell
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## To check all Rd files in a directory, (additionally) skipping the
> ##D ## \references sections.
> ##D files <- Sys.glob("*.Rd")
> ##D aspell(files, filter = list("Rd", drop = "\\references"))
> ##D 
> ##D ## To check all Sweave files
> ##D files <- Sys.glob(c("*.Rnw", "*.Snw", "*.rnw", "*.snw"))
> ##D aspell(files, filter = "Sweave", control = "-t")
> ##D 
> ##D ## To check all Texinfo files (Aspell only)
> ##D files <- Sys.glob("*.texi")
> ##D aspell(files, control = "--mode=texinfo")
> ## End(Not run)
> 
> ## List the available R system dictionaries.
> Sys.glob(file.path(R.home("share"), "dictionaries", "*.rds"))
[1] "/usr/local/lib/R/share/dictionaries/en_stats.rds"
> 
> 
> 
> cleanEx()
> nameEx("available.packages")
> ### * available.packages
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: available.packages
> ### Title: List Available Packages at CRAN-like Repositories
> ### Aliases: available.packages R_AVAILABLE_PACKAGES_CACHE_CONTROL_MAX_AGE
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## Count package licenses
> ##D db <- available.packages(filters = "duplicates")
> ##D table(db[,"License"])
> ##D 
> ##D ## Use custom filter function to only keep recommended packages
> ##D ## which do not require compilation
> ##D available.packages(filters = list(
> ##D   add = TRUE,
> ##D   function (db) db[db[,"Priority"] %in% "recommended" &
> ##D                    db[,"NeedsCompilation"] == "no", ]
> ##D ))
> ##D 
> ##D ## Restrict install.packages() (etc) to known-to-be-FOSS packages
> ##D options(available_packages_filters =
> ##D   c("R_version", "OS_type", "subarch", "duplicates", "license/FOSS"))
> ##D ## or
> ##D options(available_packages_filters = list(add = TRUE, "license/FOSS"))
> ##D 
> ##D ## Give priority to released versions on CRAN, rather than development
> ##D ## versions on R-Forge etc.
> ##D options(available_packages_filters =
> ##D      c("R_version", "OS_type", "subarch", "CRAN", "duplicates"))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("bibentry")
> ### * bibentry
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bibentry
> ### Title: Bibliography Entries
> ### Aliases: bibentry print.bibentry format.bibentry sort.bibentry
> ###   print.citation format.citation toBibtex.bibentry
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> ## R reference
> rref <- bibentry(
+    bibtype = "Manual",
+    title = "R: A Language and Environment for Statistical Computing",
+    author = person("R Core Team"),
+    organization = "R Foundation for Statistical Computing",
+    address = "Vienna, Austria",
+    year = 2014,
+    url = "https://www.R-project.org/")
> 
> ## Different printing styles
> print(rref)
R Core Team (2014). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.
> print(rref, style = "bibtex")
@Manual{,
  title = {R: A Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  organization = {R Foundation for Statistical Computing},
  address = {Vienna, Austria},
  year = {2014},
  url = {https://www.R-project.org/},
}
> print(rref, style = "citation")
R Core Team (2014). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {R: A Language and Environment for Statistical Computing},
    author = {{R Core Team}},
    organization = {R Foundation for Statistical Computing},
    address = {Vienna, Austria},
    year = {2014},
    url = {https://www.R-project.org/},
  }
> print(rref, style = "html")
<p>R Core Team (2014).
<em>R: A Language and Environment for Statistical Computing</em>.
R Foundation for Statistical Computing, Vienna, Austria.
<a href="https://www.R-project.org/">https://www.R-project.org/</a>. 
</p>
> print(rref, style = "latex")
R Core Team (2014).
\emph{R: A Language and Environment for Statistical Computing}.
R Foundation for Statistical Computing, Vienna, Austria.
\url{https://www.R-project.org/}.
> print(rref, style = "R")
bibentry(bibtype = "Manual",
         title = "R: A Language and Environment for Statistical Computing",
         author = person(given = "R Core Team"),
         organization = "R Foundation for Statistical Computing",
         address = "Vienna, Austria",
         year = "2014",
         url = "https://www.R-project.org/")
> 
> ## References for boot package and associated book
> bref <- c(
+    bibentry(
+      bibtype = "Manual",
+      title = "boot: Bootstrap R (S-PLUS) Functions",
+      author = c(
+        person("Angelo", "Canty", role = "aut",
+          comment = "S original"),
+        person(c("Brian", "D."), "Ripley", role = c("aut", "trl", "cre"),
+          comment = "R port, author of parallel support",
+          email = "ripley@stats.ox.ac.uk")
+      ),
+      year = "2012",
+      note = "R package version 1.3-4",
+      url = "https://CRAN.R-project.org/package=boot",
+      key = "boot-package"
+    ),
+ 
+    bibentry(
+      bibtype = "Book",
+      title = "Bootstrap Methods and Their Applications",
+      author = as.person("Anthony C. Davison [aut], David V. Hinkley [aut]"),
+      year = "1997",
+      publisher = "Cambridge University Press",
+      address = "Cambridge",
+      isbn = "0-521-57391-2",
+      url = "http://statwww.epfl.ch/davison/BMA/",
+      key = "boot-book"
+    )
+ )
> 
> ## Combining and subsetting
> c(rref, bref)
R Core Team (2014). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.

Canty A, Ripley BD (2012). _boot: Bootstrap R (S-PLUS) Functions_. R
package version 1.3-4, <https://CRAN.R-project.org/package=boot>.

Davison AC, Hinkley DV (1997). _Bootstrap Methods and Their
Applications_. Cambridge University Press, Cambridge. ISBN
0-521-57391-2, <http://statwww.epfl.ch/davison/BMA/>.
> bref[2]
Davison AC, Hinkley DV (1997). _Bootstrap Methods and Their
Applications_. Cambridge University Press, Cambridge. ISBN
0-521-57391-2, <http://statwww.epfl.ch/davison/BMA/>.
> bref["boot-book"]
Davison AC, Hinkley DV (1997). _Bootstrap Methods and Their
Applications_. Cambridge University Press, Cambridge. ISBN
0-521-57391-2, <http://statwww.epfl.ch/davison/BMA/>.
> 
> ## Extracting fields
> bref$author
[[1]]
[1] "Angelo Canty [aut] (S original)"                                                             
[2] "Brian D. Ripley <ripley@stats.ox.ac.uk> [aut, trl, cre] (R port, author of parallel support)"

[[2]]
[1] "Anthony C. Davison [aut]" "David V. Hinkley [aut]"  

> bref[1]$author
[1] "Angelo Canty [aut] (S original)"                                                             
[2] "Brian D. Ripley <ripley@stats.ox.ac.uk> [aut, trl, cre] (R port, author of parallel support)"
> bref[1]$author[2]$email
[1] "ripley@stats.ox.ac.uk"
> 
> ## Field names are case-insensitive
> rref$Year
[1] "2014"
> rref$Year <- R.version$year
> stopifnot(identical(rref$year, R.version$year))
> 
> ## Convert to BibTeX
> toBibtex(bref)
@Manual{boot-package,
  title = {boot: Bootstrap R (S-PLUS) Functions},
  author = {Angelo Canty and Brian D. Ripley},
  year = {2012},
  note = {R package version 1.3-4},
  url = {https://CRAN.R-project.org/package=boot},
}

@Book{boot-book,
  title = {Bootstrap Methods and Their Applications},
  author = {Anthony C. Davison and David V. Hinkley},
  year = {1997},
  publisher = {Cambridge University Press},
  address = {Cambridge},
  isbn = {0-521-57391-2},
  url = {http://statwww.epfl.ch/davison/BMA/},
}
> 
> ## Transform
> transform(rref, address = paste0(address, ", Europe"))
R Core Team (2024). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria,
Europe. <https://www.R-project.org/>.
> 
> ## BibTeX reminder message (in case of >= 2 refs):
> print(bref, style = "citation")
Canty A, Ripley BD (2012). _boot: Bootstrap R (S-PLUS) Functions_. R
package version 1.3-4, <https://CRAN.R-project.org/package=boot>.

Davison AC, Hinkley DV (1997). _Bootstrap Methods and Their
Applications_. Cambridge University Press, Cambridge. ISBN
0-521-57391-2, <http://statwww.epfl.ch/davison/BMA/>.

To see these entries in BibTeX format, use 'format(<citation>,
bibtex=TRUE)', or 'toBibtex(.)'.
> 
> ## Format in R style
> ## One bibentry() call for each bibentry:
> writeLines(paste(format(bref, "R"), collapse = "\n\n"))
bibentry(bibtype = "Manual",
         key = "boot-package",
         title = "boot: Bootstrap R (S-PLUS) Functions",
         author = c(person(given = "Angelo",
                           family = "Canty",
                           role = "aut",
                           comment = "S original"),
                    person(given = c("Brian", "D."),
                           family = "Ripley",
                           role = c("aut", "trl", "cre"),
                           email = "ripley@stats.ox.ac.uk",
                           comment = "R port, author of parallel support")),
         year = "2012",
         note = "R package version 1.3-4",
         url = "https://CRAN.R-project.org/package=boot")

bibentry(bibtype = "Book",
         key = "boot-book",
         title = "Bootstrap Methods and Their Applications",
         author = c(person(given = c("Anthony", "C."),
                           family = "Davison",
                           role = "aut"),
                    person(given = c("David", "V."),
                           family = "Hinkley",
                           role = "aut")),
         year = "1997",
         publisher = "Cambridge University Press",
         address = "Cambridge",
         isbn = "0-521-57391-2",
         url = "http://statwww.epfl.ch/davison/BMA/")
> ## One collapsed call:
> writeLines(format(bref, "R", collapse = TRUE))
c(bibentry(bibtype = "Manual",
           key = "boot-package",
           title = "boot: Bootstrap R (S-PLUS) Functions",
           author = c(person(given = "Angelo",
                             family = "Canty",
                             role = "aut",
                             comment = "S original"),
                      person(given = c("Brian", "D."),
                             family = "Ripley",
                             role = c("aut", "trl", "cre"),
                             email = "ripley@stats.ox.ac.uk",
                             comment = "R port, author of parallel support")),
           year = "2012",
           note = "R package version 1.3-4",
           url = "https://CRAN.R-project.org/package=boot"),
  bibentry(bibtype = "Book",
           key = "boot-book",
           title = "Bootstrap Methods and Their Applications",
           author = c(person(given = c("Anthony", "C."),
                             family = "Davison",
                             role = "aut"),
                      person(given = c("David", "V."),
                             family = "Hinkley",
                             role = "aut")),
           year = "1997",
           publisher = "Cambridge University Press",
           address = "Cambridge",
           isbn = "0-521-57391-2",
           url = "http://statwww.epfl.ch/davison/BMA/"))
> 
> 
> 
> cleanEx()
> nameEx("browseEnv")
> ### * browseEnv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: browseEnv
> ### Title: Browse Objects in Environment
> ### Aliases: browseEnv wsbrowser
> ### Keywords: interface
> 
> ### ** Examples
> 
> if(interactive()) {
+    ## create some interesting objects :
+    ofa <- ordered(4:1)
+    ex1 <- expression(1+ 0:9)
+    ex3 <- expression(u, v, 1+ 0:9)
+    example(factor, echo = FALSE)
+    example(table, echo = FALSE)
+    example(ftable, echo = FALSE)
+    example(lm, echo = FALSE, ask = FALSE)
+    example(str, echo = FALSE)
+ 
+    ## and browse them:
+    browseEnv()
+ 
+    ## a (simple) function's environment:
+    af12 <- approxfun(1:2, 1:2, method = "const")
+    browseEnv(envir = environment(af12))
+  }
> 
> 
> 
> cleanEx()
> nameEx("browseURL")
> ### * browseURL
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: browseURL
> ### Title: Load URL into an HTML Browser
> ### Aliases: browseURL
> ### Keywords: file
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## for KDE users who want to open files in a new tab
> ##D options(browser = "kfmclient newTab")
> ##D 
> ##D browseURL("https://www.r-project.org")
> ##D 
> ##D ## On Windows-only, something like
> ##D browseURL("file://d:/R/R-2.5.1/doc/html/index.html",
> ##D           browser = "C:/Program Files/Mozilla Firefox/firefox.exe")
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("browseVignettes")
> ### * browseVignettes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: browseVignettes
> ### Title: List Vignettes in an HTML Browser
> ### Aliases: browseVignettes print.browseVignettes
> ### Keywords: documentation
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("capture.output")
> ### * capture.output
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: capture.output
> ### Title: Send Output to a Character String or File
> ### Aliases: capture.output
> ### Keywords: utilities
> 
> ### ** Examples
> 
> require(stats)
> glmout <- capture.output(summary(glm(case ~ spontaneous+induced,
+                                      data = infert, family = binomial())))
> glmout[1:5]
[1] ""                                                                 
[2] "Call:"                                                            
[3] "glm(formula = case ~ spontaneous + induced, family = binomial(), "
[4] "    data = infert)"                                               
[5] ""                                                                 
> capture.output(1+1, 2+2)
[1] "[1] 2" "[1] 4"
> capture.output({1+1; 2+2})
[1] "[1] 4"
> 
> ## Not run: 
> ##D ## on Unix-alike with a2ps available##D 
> ##D op <- options(useFancyQuotes=FALSE)
> ##D pdf <- pipe("a2ps -o - | ps2pdf - tempout.pdf", "w")
> ##D capture.output(example(glm), file = pdf)
> ##D close(pdf); options(op) ; system("evince tempout.pdf &")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("changedFiles")
> ### * changedFiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: changedFiles
> ### Title: Detect which Files Have Changed
> ### Aliases: fileSnapshot changedFiles print.changedFiles
> ###   print.fileSnapshot
> ### Keywords: utilities file
> 
> ### ** Examples
> 
> # Create some files in a temporary directory
> dir <- tempfile()
> dir.create(dir)
> writeBin(1L, file.path(dir, "file1"))
> writeBin(2L, file.path(dir, "file2"))
> dir.create(file.path(dir, "dir"))
> 
> # Take a snapshot
> snapshot <- fileSnapshot(dir, timestamp = tempfile("timestamp"), md5sum=TRUE)
> ## Don't show: 
> Sys.sleep(.01)
> ## End(Don't show)  
> # Change one of the files.
> writeBin(3L:4L, file.path(dir, "file2"))
> 
> # Display the detected changes.  We may or may not see mtime change...
> changedFiles(snapshot)
File changes:
      size mtime Newer md5sum
file2 TRUE  TRUE  TRUE   TRUE
> changedFiles(snapshot)$changes
       size isdir  mode mtime Newer md5sum
dir   FALSE FALSE FALSE FALSE FALSE     NA
file1 FALSE FALSE FALSE FALSE FALSE  FALSE
file2  TRUE FALSE FALSE  TRUE  TRUE   TRUE
> 
> 
> 
> cleanEx()
> nameEx("charClass")
> ### * charClass
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: charClass
> ### Title: Character Classification
> ### Aliases: charClass
> 
> ### ** Examples
> 
> x <- c(48:70, 32, 0xa0) # Last is non-breaking space
> cl <- c("alnum", "alpha", "blank", "digit", "graph", "punct", "upper", "xdigit")
> X <- lapply(cl, function(y) charClass(x,y)); names(X) <- cl
> X <- as.data.frame(X); row.names(X) <- sQuote(intToUtf8(x, multiple = TRUE))
> X
    alnum alpha blank digit graph punct upper xdigit
‘0’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘1’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘2’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘3’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘4’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘5’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘6’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘7’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘8’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘9’  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE   TRUE
‘:’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘;’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘<’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘=’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘>’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘?’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘@’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
‘A’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘B’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘C’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘D’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘E’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘F’  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE   TRUE
‘ ’ FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  FALSE
‘ ’ FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  FALSE
> 
> charClass("ABC123", "alpha")
[1]  TRUE  TRUE  TRUE FALSE FALSE FALSE
> ## Some accented capital Greek characters
> (x <- "\u0386\u0388\u0389")
[1] "ΆΈΉ"
> charClass(x, "upper")
[1] TRUE TRUE TRUE
> 
> ## How many printable characters are there? (Around 280,000 in Unicode 13.)
> ## There are 2^21-1 possible Unicode points (most not yet assigned).
> pr <- charClass(1:0x1fffff, "print") 
> table(pr)
pr
  FALSE    TRUE 
1814988  282163 
> 
> 
> 
> cleanEx()
> nameEx("choose.dir")
> ### * choose.dir
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: choose.dir
> ### Title: Choose a Folder Interactively on MS Windows
> ### Aliases: choose.dir
> ### Keywords: file
> 
> ### ** Examples
> 
>   if (interactive() && .Platform$OS.type == "windows")
+         choose.dir(getwd(), "Choose a suitable folder")
> 
> 
> 
> cleanEx()
> nameEx("choose.files")
> ### * choose.files
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: choose.files
> ### Title: Choose a List of Files Interactively on MS Windows
> ### Aliases: choose.files Filters
> ### Keywords: file
> 
> ### ** Examples
> 
>   if (interactive() && .Platform$OS.type == "windows")
+        choose.files(filters = Filters[c("zip", "All"),])
> 
> 
> 
> cleanEx()
> nameEx("citation")
> ### * citation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: citation
> ### Title: Citing R and R Packages in Publications
> ### Aliases: CITATION citation readCitationFile citHeader citFooter
> ### Keywords: misc
> 
> ### ** Examples
> 
> ## the basic R reference
> citation()
To cite R in publications use:

  R Core Team (2024). _R: A Language and Environment for Statistical
  Computing_. R Foundation for Statistical Computing, Vienna, Austria.
  <https://www.R-project.org/>.

A BibTeX entry for LaTeX users is

  @Manual{,
    title = {R: A Language and Environment for Statistical Computing},
    author = {{R Core Team}},
    organization = {R Foundation for Statistical Computing},
    address = {Vienna, Austria},
    year = {2024},
    url = {https://www.R-project.org/},
  }

We have invested a lot of time and effort in creating R, please cite it
when using it for data analysis. See also ‘citation("pkgname")’ for
citing R packages.
> 
> ## extract the BibTeX entry from the return value
> x <- citation()
> toBibtex(x)
@Manual{,
  title = {R: A Language and Environment for Statistical Computing},
  author = {{R Core Team}},
  organization = {R Foundation for Statistical Computing},
  address = {Vienna, Austria},
  year = {2024},
  url = {https://www.R-project.org/},
}
> 
> 
> 
> cleanEx()
> nameEx("cite")
> ### * cite
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cite
> ### Title: Cite a Bibliography Entry
> ### Aliases: cite citeNatbib
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> ## R reference
> rref <- bibentry(
+    bibtype = "Manual",
+    title = "R: A Language and Environment for Statistical Computing",
+    author = person("R Core Team"),
+    organization = "R Foundation for Statistical Computing",
+    address = "Vienna, Austria",
+    year = 2013,
+    url = "https://www.R-project.org/",
+    key = "R")
> 
> ## References for boot package and associated book
> bref <- c(
+    bibentry(
+      bibtype = "Manual",
+      title = "boot: Bootstrap R (S-PLUS) Functions",
+      author = c(
+        person("Angelo", "Canty", role = "aut",
+          comment = "S original"),
+        person(c("Brian", "D."), "Ripley", role = c("aut", "trl", "cre"),
+          comment = "R port, author of parallel support",
+          email = "ripley@stats.ox.ac.uk")
+      ),
+      year = "2012",
+      note = "R package version 1.3-4",
+      url = "https://CRAN.R-project.org/package=boot",
+      key = "boot-package"
+    ),
+ 
+    bibentry(
+      bibtype = "Book",
+      title = "Bootstrap Methods and Their Applications",
+      author = as.person("Anthony C. Davison [aut], David V. Hinkley [aut]"),
+      year = "1997",
+      publisher = "Cambridge University Press",
+      address = "Cambridge",
+      isbn = "0-521-57391-2",
+      url = "http://statwww.epfl.ch/davison/BMA/",
+      key = "boot-book"
+    )
+ )
> 
> ## Combine and cite
> refs <- c(rref, bref)
> cite("R, boot-package", refs)
[1] "(R Core Team 2013; Canty and Ripley 2012)"
> 
> ## Cite numerically
> savestyle <- tools::getBibstyle()
> tools::bibstyle("JSSnumbered", .init = TRUE,
+          fmtPrefix = function(paper) paste0("[", paper$.index, "]"),
+          cite = function(key, bib, ...)
+          	citeNatbib(key, bib, mode = "numbers",
+          	    bibpunct = c("[", "]", ";", "n", "", ","), ...)
+          )
<environment: 0x556fb99a6bc8>
> cite("R, boot-package", refs, textual = TRUE)
[1] "R Core Team [3]; Canty and Ripley [1]"
> refs
[1] R Core Team (2013). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<https://www.R-project.org/>.

[2] Canty A, Ripley BD (2012). _boot: Bootstrap R (S-PLUS) Functions_.
R package version 1.3-4, <https://CRAN.R-project.org/package=boot>.

[3] Davison AC, Hinkley DV (1997). _Bootstrap Methods and Their
Applications_. Cambridge University Press, Cambridge. ISBN
0-521-57391-2, <http://statwww.epfl.ch/davison/BMA/>.
> 
> ## restore the old style
> tools::bibstyle(savestyle, .default = TRUE)
<environment: 0x556fba2f4398>
> 
> 
> 
> cleanEx()
> nameEx("combn")
> ### * combn
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: combn
> ### Title: Generate All Combinations of n Elements, Taken m at a Time
> ### Aliases: combn
> ### Keywords: utilities iteration
> 
> ### ** Examples
> 
> combn(letters[1:4], 2)
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] "a"  "a"  "a"  "b"  "b"  "c" 
[2,] "b"  "c"  "d"  "c"  "d"  "d" 
> (m <- combn(10, 5, min))   # minimum value in each combination
  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[186] 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[223] 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 6
> mm <- combn(15, 6, function(x) matrix(x, 2, 3))
> stopifnot(round(choose(10, 5)) == length(m), is.array(m), # 1-dimensional
+           c(2,3, round(choose(15, 6))) == dim(mm))
> 
> ## Different way of encoding points:
> combn(c(1,1,1,1,2,2,2,3,3,4), 3, tabulate, nbins = 4)
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
[1,]    3    3    2    2    2    2    2    2    3     2     2     2     2     2
[2,]    0    0    1    1    1    0    0    0    0     1     1     1     0     0
[3,]    0    0    0    0    0    1    1    0    0     0     0     0     1     1
[4,]    0    0    0    0    0    0    0    1    0     0     0     0     0     0
     [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26]
[1,]     2     2     2     2     2     2     2     1     1     1     1     1
[2,]     0     1     1     1     0     0     0     2     2     1     1     1
[3,]     0     0     0     0     1     1     0     0     0     1     1     0
[4,]     1     0     0     0     0     0     1     0     0     0     0     1
     [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38]
[1,]     1     1     1     1     1     1     1     1     1     1     3     2
[2,]     2     1     1     1     1     1     1     0     0     0     0     1
[3,]     0     1     1     0     1     1     0     2     1     1     0     0
[4,]     0     0     0     1     0     0     1     0     1     1     0     0
     [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50]
[1,]     2     2     2     2     2     2     2     2     2     2     2     1
[2,]     1     1     0     0     0     1     1     1     0     0     0     2
[3,]     0     0     1     1     0     0     0     0     1     1     0     0
[4,]     0     0     0     0     1     0     0     0     0     0     1     0
     [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62]
[1,]     1     1     1     1     1     1     1     1     1     1     1     1
[2,]     2     1     1     1     2     1     1     1     1     1     1     0
[3,]     0     1     1     0     0     1     1     0     1     1     0     2
[4,]     0     0     0     1     0     0     0     1     0     0     1     0
     [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74]
[1,]     1     1     2     2     2     2     2     2     1     1     1     1
[2,]     0     0     1     1     1     0     0     0     2     2     1     1
[3,]     1     1     0     0     0     1     1     0     0     0     1     1
[4,]     1     1     0     0     0     0     0     1     0     0     0     0
     [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86]
[1,]     1     1     1     1     1     1     1     1     1     1     1     1
[2,]     1     2     1     1     1     1     1     1     0     0     0     2
[3,]     0     0     1     1     0     1     1     0     2     1     1     0
[4,]     1     0     0     0     1     0     0     1     0     1     1     0
     [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98]
[1,]     1     1     1     1     1     1     1     1     1     1     1     1
[2,]     2     1     1     1     2     1     1     1     1     1     1     0
[3,]     0     1     1     0     0     1     1     0     1     1     0     2
[4,]     0     0     0     1     0     0     0     1     0     0     1     0
     [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108]
[1,]     1      1      0      0      0      0      0      0      0      0
[2,]     0      0      3      2      2      2      2      2      2      1
[3,]     1      1      0      1      1      0      1      1      0      2
[4,]     1      1      0      0      0      1      0      0      1      0
     [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118]
[1,]      0      0      0      0      0      0      0      0      0      0
[2,]      1      1      2      2      2      1      1      1      1      1
[3,]      1      1      1      1      0      2      1      1      2      1
[4,]      1      1      0      0      1      0      1      1      0      1
     [,119] [,120]
[1,]      0      0
[2,]      1      0
[3,]      1      2
[4,]      1      1
> 
> ## Compute support points and (scaled) probabilities for a
> ## Multivariate-Hypergeometric(n = 3, N = c(4,3,2,1)) p.f.:
> # table.mat(t(combn(c(1,1,1,1,2,2,2,3,3,4), 3, tabulate, nbins = 4)))
> 
> ## Assuring the identity
> for(n in 1:7)
+  for(m in 0:n) stopifnot(is.array(cc <- combn(n, m)),
+                          dim(cc) == c(m, choose(n, m)),
+                          identical(cc, combn(n, m, identity)) || m == 1)
> 
> 
> 
> cleanEx()
> nameEx("compareVersion")
> ### * compareVersion
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compareVersion
> ### Title: Compare Two Package Version Numbers
> ### Aliases: compareVersion
> ### Keywords: utilities
> 
> ### ** Examples
> 
> compareVersion("1.0", "1.0-1")
[1] -1
> compareVersion("7.2-0","7.1-12")
[1] 1
> 
> 
> 
> cleanEx()
> nameEx("count.fields")
> ### * count.fields
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: count.fields
> ### Title: Count the Number of Fields per Line
> ### Aliases: count.fields
> ### Keywords: file
> 
> ### ** Examples
> 
> fil <- tempfile()
> cat("NAME", "1:John", "2:Paul", file = fil, sep = "\n")
> count.fields(fil, sep = ":")
[1] 1 2 2
> unlink(fil)
> 
> 
> 
> cleanEx()
> nameEx("data")
> ### * data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data
> ### Title: Data Sets
> ### Aliases: data print.packageIQR
> ### Keywords: documentation datasets
> 
> ### ** Examples
> 
> require(utils)
> data()                         # list all available data sets
Data sets in package ‘datasets’:

AirPassengers           Monthly Airline Passenger Numbers 1949-1960
BJsales                 Sales Data with Leading Indicator
BJsales.lead (BJsales)
                        Sales Data with Leading Indicator
BOD                     Biochemical Oxygen Demand
CO2                     Carbon Dioxide Uptake in Grass Plants
ChickWeight             Weight versus age of chicks on different diets
DNase                   Elisa assay of DNase
EuStockMarkets          Daily Closing Prices of Major European Stock
                        Indices, 1991-1998
Formaldehyde            Determination of Formaldehyde
HairEyeColor            Hair and Eye Color of Statistics Students
Harman23.cor            Harman Example 2.3
Harman74.cor            Harman Example 7.4
Indometh                Pharmacokinetics of Indomethacin
InsectSprays            Effectiveness of Insect Sprays
JohnsonJohnson          Quarterly Earnings per Johnson & Johnson Share
LakeHuron               Level of Lake Huron 1875-1972
LifeCycleSavings        Intercountry Life-Cycle Savings Data
Loblolly                Growth of Loblolly pine trees
Nile                    Flow of the River Nile
Orange                  Growth of Orange Trees
OrchardSprays           Potency of Orchard Sprays
PlantGrowth             Results from an Experiment on Plant Growth
Puromycin               Reaction Velocity of an Enzymatic Reaction
Seatbelts               Road Casualties in Great Britain 1969-84
Theoph                  Pharmacokinetics of Theophylline
Titanic                 Survival of passengers on the Titanic
ToothGrowth             The Effect of Vitamin C on Tooth Growth in
                        Guinea Pigs
UCBAdmissions           Student Admissions at UC Berkeley
UKDriverDeaths          Road Casualties in Great Britain 1969-84
UKgas                   UK Quarterly Gas Consumption
USAccDeaths             Accidental Deaths in the US 1973-1978
USArrests               Violent Crime Rates by US State
USJudgeRatings          Lawyers' Ratings of State Judges in the US
                        Superior Court
USPersonalExpenditure   Personal Expenditure Data
UScitiesD               Distances Between European Cities and Between
                        US Cities
VADeaths                Death Rates in Virginia (1940)
WWWusage                Internet Usage per Minute
WorldPhones             The World's Telephones
ability.cov             Ability and Intelligence Tests
airmiles                Passenger Miles on Commercial US Airlines,
                        1937-1960
airquality              New York Air Quality Measurements
anscombe                Anscombe's Quartet of 'Identical' Simple Linear
                        Regressions
attenu                  The Joyner-Boore Attenuation Data
attitude                The Chatterjee-Price Attitude Data
austres                 Quarterly Time Series of the Number of
                        Australian Residents
beaver1 (beavers)       Body Temperature Series of Two Beavers
beaver2 (beavers)       Body Temperature Series of Two Beavers
cars                    Speed and Stopping Distances of Cars
chickwts                Chicken Weights by Feed Type
co2                     Mauna Loa Atmospheric CO2 Concentration
crimtab                 Student's 3000 Criminals Data
discoveries             Yearly Numbers of Important Discoveries
esoph                   Smoking, Alcohol and (O)esophageal Cancer
euro                    Conversion Rates of Euro Currencies
euro.cross (euro)       Conversion Rates of Euro Currencies
eurodist                Distances Between European Cities and Between
                        US Cities
faithful                Old Faithful Geyser Data
fdeaths (UKLungDeaths)
                        Monthly Deaths from Lung Diseases in the UK
freeny                  Freeny's Revenue Data
freeny.x (freeny)       Freeny's Revenue Data
freeny.y (freeny)       Freeny's Revenue Data
infert                  Infertility after Spontaneous and Induced
                        Abortion
iris                    Edgar Anderson's Iris Data
iris3                   Edgar Anderson's Iris Data
islands                 Areas of the World's Major Landmasses
ldeaths (UKLungDeaths)
                        Monthly Deaths from Lung Diseases in the UK
lh                      Luteinizing Hormone in Blood Samples
longley                 Longley's Economic Regression Data
lynx                    Annual Canadian Lynx trappings 1821-1934
mdeaths (UKLungDeaths)
                        Monthly Deaths from Lung Diseases in the UK
morley                  Michelson Speed of Light Data
mtcars                  Motor Trend Car Road Tests
nhtemp                  Average Yearly Temperatures in New Haven
nottem                  Average Monthly Temperatures at Nottingham,
                        1920-1939
npk                     Classical N, P, K Factorial Experiment
occupationalStatus      Occupational Status of Fathers and their Sons
precip                  Annual Precipitation in US Cities
presidents              Quarterly Approval Ratings of US Presidents
pressure                Vapor Pressure of Mercury as a Function of
                        Temperature
quakes                  Locations of Earthquakes off Fiji
randu                   Random Numbers from Congruential Generator
                        RANDU
rivers                  Lengths of Major North American Rivers
rock                    Measurements on Petroleum Rock Samples
sleep                   Student's Sleep Data
stack.loss (stackloss)
                        Brownlee's Stack Loss Plant Data
stack.x (stackloss)     Brownlee's Stack Loss Plant Data
stackloss               Brownlee's Stack Loss Plant Data
state.abb (state)       US State Facts and Figures
state.area (state)      US State Facts and Figures
state.center (state)    US State Facts and Figures
state.division (state)
                        US State Facts and Figures
state.name (state)      US State Facts and Figures
state.region (state)    US State Facts and Figures
state.x77 (state)       US State Facts and Figures
sunspot.month           Monthly Sunspot Data, from 1749 to "Present"
sunspot.year            Yearly Sunspot Data, 1700-1988
sunspots                Monthly Sunspot Numbers, 1749-1983
swiss                   Swiss Fertility and Socioeconomic Indicators
                        (1888) Data
treering                Yearly Treering Data, -6000-1979
trees                   Diameter, Height and Volume for Black Cherry
                        Trees
uspop                   Populations Recorded by the US Census
volcano                 Topographic Information on Auckland's Maunga
                        Whau Volcano
warpbreaks              The Number of Breaks in Yarn during Weaving
women                   Average Heights and Weights for American Women


Use ‘data(package = .packages(all.available = TRUE))’
to list the data sets in all *available* packages.

> try(data(package = "rpart"), silent = TRUE) # list the data sets in the rpart package
Data sets in package ‘rpart’:

car.test.frame          Automobile Data from 'Consumer Reports' 1990
car90                   Automobile Data from 'Consumer Reports' 1990
cu.summary              Automobile Data from 'Consumer Reports' 1990
kyphosis                Data on Children who have had Corrective Spinal
                        Surgery
solder                  Soldering of Components on Printed-Circuit
                        Boards
solder.balance (solder)
                        Soldering of Components on Printed-Circuit
                        Boards
stagec                  Stage C Prostate Cancer

> data(USArrests, "VADeaths")    # load the data sets 'USArrests' and 'VADeaths'
> ## Not run: 
> ##D ## Alternatively
> ##D ds <- c("USArrests", "VADeaths"); data(list = ds)
> ## End(Not run)
> help(USArrests)                # give information on data set 'USArrests'
USArrests               package:datasets               R Documentation

_V_i_o_l_e_n_t _C_r_i_m_e _R_a_t_e_s _b_y _U_S _S_t_a_t_e

_D_e_s_c_r_i_p_t_i_o_n:

     This data set contains statistics, in arrests per 100,000
     residents for assault, murder, and rape in each of the 50 US
     states in 1973.  Also given is the percent of the population
     living in urban areas.

_U_s_a_g_e:

     USArrests
     
_F_o_r_m_a_t:

     A data frame with 50 observations on 4 variables.

       [,1]  Murder    numeric  Murder arrests (per 100,000)  
       [,2]  Assault   numeric  Assault arrests (per 100,000) 
       [,3]  UrbanPop  numeric  Percent urban population      
       [,4]  Rape      numeric  Rape arrests (per 100,000)    
      
_N_o_t_e:

     ‘USArrests’ contains the data as in McNeil's monograph.  For the
     ‘UrbanPop’ percentages, a review of the table (No. 21) in the
     Statistical Abstracts 1975 reveals a transcription error for
     Maryland (and that McNeil used the same “round to even” rule that
     R's ‘round()’ uses), as found by Daniel S Coven (Arizona).

     See the example below on how to correct the error and improve
     accuracy for the ‘<n>.5’ percentages.

_S_o_u_r_c_e:

     World Almanac and Book of facts 1975.  (Crime rates).

     Statistical Abstracts of the United States 1975, p.20, (Urban
     rates), possibly available as
     <https://books.google.ch/books?id=zl9qAAAAMAAJ&pg=PA20>.

_R_e_f_e_r_e_n_c_e_s:

     McNeil, D. R. (1977) _Interactive Data Analysis_.  New York:
     Wiley.

_S_e_e _A_l_s_o:

     The ‘state’ data sets.

_E_x_a_m_p_l_e_s:

     summary(USArrests)
     
     require(graphics)
     pairs(USArrests, panel = panel.smooth, main = "USArrests data")
     
     ## Difference between 'USArrests' and its correction
     USArrests["Maryland", "UrbanPop"] # 67 -- the transcription error
     UA.C <- USArrests
     UA.C["Maryland", "UrbanPop"] <- 76.6
     
     ## also +/- 0.5 to restore the original  <n>.5  percentages
     s5u <- c("Colorado", "Florida", "Mississippi", "Wyoming")
     s5d <- c("Nebraska", "Pennsylvania")
     UA.C[s5u, "UrbanPop"] <- UA.C[s5u, "UrbanPop"] + 0.5
     UA.C[s5d, "UrbanPop"] <- UA.C[s5d, "UrbanPop"] - 0.5
     
     ## ==> UA.C  is now a *C*orrected version of  USArrests
     

> 
> 
> 
> cleanEx()
> nameEx("dataentry")
> ### * dataentry
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dataentry
> ### Title: Spreadsheet Interface for Entering Data
> ### Aliases: data.entry dataentry de
> ### Keywords: utilities file
> 
> ### ** Examples
> 
> # call data entry with variables x and y
> ## Not run: data.entry(x, y)
> 
> 
> 
> cleanEx()
> nameEx("debugcall")
> ### * debugcall
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: debugcall
> ### Title: Debug a Call
> ### Aliases: debugcall undebugcall
> ### Keywords: programming environment utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Evaluate call after setting debugging
> ##D ## 
> ##D f <- factor(1:10)
> ##D res <- eval(debugcall(summary(f))) 
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("debugger")
> ### * debugger
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: debugger
> ### Title: Post-Mortem Debugging
> ### Aliases: debugger dump.frames limitedLabels
> ### Keywords: utilities error
> 
> ### ** Examples
> 
> ## Not run: 
> ##D options(error = quote(dump.frames("testdump", TRUE)))
> ##D 
> ##D f <- function() {
> ##D     g <- function() stop("test dump.frames")
> ##D     g()
> ##D }
> ##D f()   # will generate a dump on file "testdump.rda"
> ##D options(error = NULL)
> ##D 
> ##D ## possibly in another R session
> ##D load("testdump.rda")
> ##D debugger(testdump)
> ##D Available environments had calls:
> ##D 1: f()
> ##D 2: g()
> ##D 3: stop("test dump.frames")
> ##D 
> ##D Enter an environment number, or 0 to exit
> ##D Selection: 1
> ##D Browsing in the environment with call:
> ##D f()
> ##D Called from: debugger.look(ind)
> ##D Browse[1]> ls()
> ##D [1] "g"
> ##D Browse[1]> g
> ##D function() stop("test dump.frames")
> ##D <environment: 759818>
> ##D Browse[1]>
> ##D Available environments had calls:
> ##D 1: f()
> ##D 2: g()
> ##D 3: stop("test dump.frames")
> ##D 
> ##D Enter an environment number, or 0 to exit
> ##D Selection: 0
> ##D 
> ##D ## A possible setting for non-interactive sessions
> ##D options(error = quote({dump.frames(to.file = TRUE); q(status = 1)}))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("demo")
> ### * demo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: demo
> ### Title: Demonstrations of R Functionality
> ### Aliases: demo
> ### Keywords: documentation utilities
> 
> ### ** Examples
> 
> demo() # for attached packages
Demos in package ‘base’:

error.catching          More examples on catching and handling errors
is.things               Explore some properties of R objects and
                        is.FOO() functions. Not for newbies!
recursion               Using recursion for adaptive integration
scoping                 An illustration of lexical scoping.

Demos in package ‘grDevices’:

colors                  A show of R's predefined colors()
hclColors               Exploration of hcl() space

Demos in package ‘graphics’:

Hershey                 Tables of the characters in the Hershey vector
                        fonts
Japanese                Tables of the Japanese characters in the
                        Hershey vector fonts
graphics                A show of some of R's graphics capabilities
image                   The image-like graphics builtins of R
persp                   Extended persp() examples
plotmath                Examples of the use of mathematics annotation

Demos in package ‘stats’:

glm.vr                  Some glm() examples from V&R with several
                        predictors
lm.glm                  Some linear and generalized linear modelling
                        examples from `An Introduction to Statistical
                        Modelling' by Annette Dobson
nlm                     Nonlinear least-squares using nlm()
smooth                  `Visualize' steps in Tukey's smoothers


Use ‘demo(package = .packages(all.available = TRUE))’
to list the demos in all *available* packages.

> 
> ## All available demos:
> demo(package = .packages(all.available = TRUE))
Demos in package ‘AER’:

Ch-Basics               Chapter 2: Basics
Ch-Intro                Chapter 1: Introduction
Ch-LinearRegression     Chapter 3: Linear Regression
Ch-Microeconometrics    Chapter 5: Models of Microeconometrics
Ch-Programming          Chapter 7: Programming Your Own Analysis
Ch-TimeSeries           Chapter 6: Time Series
Ch-Validation           Chapter 4: Diagnostics and Alternative Methods
                        of Regression

Demos in package ‘BB’:

multiStart              Examples using multiStart to start BBsolve at
                        different initial guesses
nlmin                   Examples of spg, sane, dfsane with optim
                        comparisons
nlsolve                 Simple examples to illustrate sane, dfsane

Demos in package ‘BiasedUrn’:

ApproxHypergeo          Compares different noncentral hypergeometric
                        distributions with same mean rather than same
                        odds
CompareHypergeo         Compares different noncentral hypergeometric
                        distributions
OddsPrecision           Measures precision of odds function
SampleWallenius         Makes random variates from Wallenius noncentral
                        hypergeometric distribution
UrnTheory               Vignette explaining the distributions of biased
                        sampling

Demos in package ‘DendSer’:

fib                     Fibroblast data
pottery                 Pottery data
sleep                   Sleep data
toy                     Toy data

Demos in package ‘HH’:

MMC.README              citation for MMC (Mean--mean Multiple
                        Comparisons plot)
MMC.WoodEnergy-aov      aov in both S-Plus and R. Block factor,
                        treatment factor, and covariate.
MMC.WoodEnergy          MMC plots in both S-Plus and R. Run
                        demo("MMC.WoodEnergy-aov") first.
MMC.WoodEnergy.s        MMC plots from article, only in S-Plus.
MMC.apple               interaction of treatment factor and covariate
MMC.catalystm           one factor with orthogonal contrasts.
                        Construction of MMC plot
MMC.cc176               three factors and covariate
MMC.pulmonary           one factor with orthogonal contrasts.
                        sufficient statistics
NTplot                  All 22 possibilities for the normal plot
                        (limited here to just the one-sided with
                        alternative="greater").
PoorChildren            Count of Poor Children, by Child's Poorness,
                        Number of Working Parents, Concentration of
                        Poor Households
ancova                  This demo produces a composite graph
                        illustrating four models with a factor and a
                        covariate.
appleAncova             A composite graph for a blocked analysis of
                        covariance illustrating six models with a
                        response, covariate, treatment factor, and
                        blocking factor.
arima.sim.XYZ           HH Exercises 18.1 18.2 18.3
betaWeightedAverage     Regression slope is weighted sum of
                        single-point slopes.
bwplot.examples         Examples controlling spacing and colors of
                        boxplots using the panel.bwplot.intermediate.hh
                        and position functions in the HH package.
likert-paper-noFormula
                        R code for all examples in Likert paper, not
                        using formula method
likert-paper            R code for all examples in Likert paper, using
                        formula method
likertMosaic-paper      R code for all examples in Likert paper, using
                        mosaic style plots
nottem                  HH Exercise 18.5. Nottingham temperatures from
                        MASS. In R, one of the models didn't complete.
regr2                   Graph showing the change in predicted y when x1
                        is changed one unit, holding all other x
                        variables constant.
tsamstat                All tables and graphs in the Heiberger and
                        Teles article, and some additional ones, are
                        here. For coordination with Chapter 18 of the
                        Second Edition of the HH book, use file
                        HHscriptnames(18) [scripts/hh2/tser.R].
tsq                     HH Exercise 18.7

Demos in package ‘INLA’:

Bym                     Disease mapping
Epil                    Repeated measures on Poisson counts
Graph                   Illustrating the use of graphs
Leuk                    Spatial survival with Cox proportial hazard
                        model
LeukPCprior             Spatial survival with Cox proportial hazard
                        model using PCpriors
SPDEhowto               A short introduction on how to fit a SPDE model
                        using INLA
Tokyo                   Binomial time-series
mesh2d                  Two dimensional mesh demostration shiny app
mesh2d_run_me           
rgeneric                Example of the rgeneric model

Demos in package ‘Lahman’:

batting-summstats       Calculate summary statistics for the Batting
                        data frame
lahman-dplyr            Some examples using dplyr with Lahman

Demos in package ‘LearnBayes’:

Chapter.1.2             Exploring a Student Dataset
Chapter.1.3             Exploring the Robustness of the t Statistic
Chapter.10.2            Robust Modeling
Chapter.10.3            Binary Response Regression with Probit Link
Chapter.10.4            Estimating Table of Means with Belief of Order
                        Restriction
Chapter.2.3             Learning About a Proportion - Using a Discrete
                        Prior
Chapter.2.4             Learning About a Proportion - Using a Beta
                        Prior
Chapter.2.5             Learning About a Proportion - Using a Histogram
                        Prior
Chapter.2.6             Learning About a Proportion - Prediction
Chapter.3.2             Normal Distribution with Known Mean, Unknown
                        Variance
Chapter.3.3             Estimating a Heart Transplant Mortality Rate
Chapter.3.4             Learning about a Normal Mean with Known
                        Variance
Chapter.3.5             Mixtures of Conjugate Priors
Chapter.3.6             A Bayesian Test of the Fairness of a Coin
Chapter.4.2             Normal Data with Both Parameters Unknown
Chapter.4.3             A Multinomial Model
Chapter.4.4             A Bioassay Experiment
Chapter.4.5             Comparing Two Proportions
Chapter.5.10            Sampling Importance Resampling
Chapter.5.4             A Beta-Binomial Model for Overdispersion
Chapter.5.6             Approximations Based on Posterior Modes for
                        Beta-Binomial Model
Chapter.5.7             Monte Carlo Method for Computing Integrals
Chapter.5.8             Rejection Sampling
Chapter.5.9             Importance Sampling
Chapter.6.10            Analysis of the Stanford Heart Transplant Data
Chapter.6.2             Discrete Markov Chains
Chapter.6.7             MCMC - Learning About a Normal Population Based
                        on Grouped Data
Chapter.6.8             MCMC Output Analysis
Chapter.6.9             Modeling Data with Cauchy Errors
Chapter.7.10            Posterior Predictive Model Checking
Chapter.7.2             Introduction to Career Trajectory Example
Chapter.7.3             Introduction to Heart Transplant Mortality Data
Chapter.7.4             Checking Assumption of Equal Mortality Rates
Chapter.7.5             Exchangeable Model for Mortality Rates
Chapter.7.7             Simulating from Posterior from Exchangeable
                        Model
Chapter.7.8             Illustration of Posterior Inferences
Chapter.7.9             Bayesian Sensitivity Analysis
Chapter.8.3             One-Sided Test of a Normal Mean
Chapter.8.4             Two-Sided Test of a Normal Mean
Chapter.8.6             Models for Soccer Goal Scoring
Chapter.8.7             Test if Baseball Player is Streaky
Chapter.8.8             Test of Independence in a Two-Way Contingency
                        Table
Chapter.9.2             Normal Linear Regression
Chapter.9.3             Model Selection Using Zellner's g Prior
Chapter.9.4             Survival Modeling

Demos in package ‘Matching’:

AbadieImbens            Replication of Guido Imbens
                        'lalonde_exper_04feb2.m' file
                        http://elsa.berkeley.edu/~imbens/estimators.shtml
DehejiaWahba            Replication of Dehejia and Wahba (1999)
GerberGreenImai         Matching model for estimating the causal effect
                        of get-out-the-vote telephone calls on turnout

Demos in package ‘MuMIn’:

dredge.distsamp         Model selection with 'distsamp' models from
                        'unmarked' package
dredge.subset           Generating a subset of a full model excluding
                        collinear variables
dredge.varying          Varying model formulations (other than
                        formulas). Using and subsetting the 'varying'
                        variables
gees                    Model selection with Generalized Estimating
                        Equations
pdredge.pcount          Model selection with 'pcount' models from
                        'unmarked' package and using parallel execution

Demos in package ‘OpenMx’:

AlternativeApproaches   Fitting a range of models using the matrix
                        style specification
BivariateCorrelation    Bivariate saturated model testing significance
                        of correlation using matrix specification and
                        raw data
BivariateHeterogeneity_MatrixRaw
                        Bivariate hetero/homogeneity model using matrix
                        specification and raw data
BivariateHeterogeneity_PathRaw
                        Bivariate hetero/homogeneity model using
                        path-centric specification and raw data
BivariateSaturated      Bivariate saturated model using
                        path-centric/matrix specification and
                        covariance/raw data
BivariateSaturated_MatrixCov
                        Bivariate saturated model using matrix
                        specification and covariance data
BivariateSaturated_MatrixCovCholesky
                        Bivariate saturated model using matrix
                        specification and covariance data with Cholesky
BivariateSaturated_MatrixRaw
                        Bivariate saturated model using matrix
                        specification and raw data
BivariateSaturated_MatrixRawCholesky
                        Bivariate saturated model using matrix
                        specification and raw data with Cholesky
BivariateSaturated_PathCov
                        Bivariate saturated model using path-centric
                        specification and covariance data
BivariateSaturated_PathRaw
                        Bivariate saturated model using path-centric
                        specification and raw data
DefinitionMeans_MatrixRaw
                        Definition variable model for mean differences
                        using matrix specification and raw data
DefinitionMeans_PathRaw
                        Definition variable model for mean differences
                        using path-centric specification and raw data
GrowthMixtureModel_MatrixRaw
                        Growth mixture model using matrix (RAM)
                        specification and raw data
GrowthMixtureModel_PathRaw
                        Growth mixture model using path specification
                        and raw data
LDE                     Latent Differential Equation (LDE) model
LISRELJointFactorModel
                        LISREL joint ordinal continuous factor model
LatentGrowthCurveModel_MatrixRaw
                        Latent growth curve model using matrix (RAM)
                        specification and raw data
LatentGrowthCurveModel_PathRaw
                        Latent growth curve model using path-centric
                        specification and raw data
LatentGrowthCurveModel_PathRaw_ModelRec
                        Latent Growth model to estimate means and
                        (co)variances of slope and intercept. Raw data,
                        Recursive
LatentGrowthCurveModel_PathRaw_ObjectAdd
                        Same as above, but with the build and assemble
                        style of model building.
MatrixAlgebra           Basic matrix algebra operations
MultipleRegression_MatrixCov
                        Multiple regression using matrix (RAM)
                        specification and covariance data
MultipleRegression_MatrixRaw
                        Multiple regression using matrix (RAM)
                        specification and raw data
MultipleRegression_PathCov
                        Multiple regression using path-centric
                        specification and covariance data
MultipleRegression_PathRaw
                        Multiple regression using path-centric
                        specification and raw data
MultivariateRegression_MatrixCov
                        Multivariate regression using matrix (RAM)
                        specification and covariance data
MultivariateRegression_MatrixRaw
                        Multivariate regression using matrix (RAM)
                        specification and raw data
MultivariateRegression_PathCov
                        Multivariate regression using path-centric
                        specification and covariance data
MultivariateRegression_PathRaw
                        Multivariate regression using path-centric
                        specification and raw data
OneFactorJoint_MatrixRawRAM
                        Common factor model of both ordinal and
                        continuous data with RAM specification
OneFactorJoint_PathRaw
                        Common factor model of both ordinal and
                        continuous data with Path specification
OneFactorMatrixDemo     One factor model from the matrix-style demo on
                        the front page of the website.
OneFactorModel_LikelihoodVector
                        Common factor model using path-centric
                        specification and likelihood vector
OneFactorModel_MatrixCov
                        Common factor model using matrix (RAM)
                        specification and covariance data
OneFactorModel_MatrixRaw
                        Common factor model using matrix (RAM)
                        specification and raw data
OneFactorModel_PathCov
                        Common factor model using path-centric
                        specification and covariance data
OneFactorModel_PathRaw
                        Common factor model using path-centric
                        specification and raw data
OneFactorOrdinal01_MatrixRaw
                        Common factor model with ordinal data and
                        matrix specification fixing two thresholds for
                        identification
OneFactorOrdinal_MatrixRaw
                        Common factor model with ordinal data and
                        matrix specification fixing mean and variance
                        for identification
OneFactorOrdinal_MatrixRawRAM
                        Common factor model with ordinal data and RAM
                        specification
OneFactorOrdinal_PathRaw
                        Common factor model with ordinal data and Path
                        specification
OneFactorPathDemo       One factor model from the path-style demo on
                        the front page of the website.
OneLocusLikelihood      One Locus Likelihood model to estimate allele
                        frequencies (ABO blood-groups)
RObjectiveLISRELFactorRegression
                        Implementing LISREL style model specification
                        with the MxRObjective function
RowObjectiveFIMLBivariateSaturated
                        Implementing Full Information Maximum
                        Likelihood using the MxRowObjective function
RowObjectiveSimpleExamples
                        Basic examples of using the row-wise objective
                        function (MxRowObjective)
SimpleCheckpoint        Saving optimizer state to a file
SimpleRegression_MatrixCov
                        Simple regression using matrix (RAM)
                        specification and covariance data
SimpleRegression_MatrixRaw
                        Simple regression using matrix (RAM)
                        specification and raw data
SimpleRegression_PathCov
                        Simple regression using path-centric
                        specification and covariance data
SimpleRegression_PathRaw
                        Simple regression using path-centric
                        specification and raw data.
TwoFactorModel_MatrixCov
                        Two factor model using matrix (RAM)
                        specification and covariance data
TwoFactorModel_MatrixRaw
                        Two factor model using matrix (RAM)
                        specification and raw data
TwoFactorModel_PathCov
                        Two factor model using path-centric
                        specification and covariance data
TwoFactorModel_PathRaw
                        Two factor model using path-centric
                        specification and raw data
TwoLocusLikelihood      Two Locus Likelihood model to estimate allele
                        frequencies (ABO blood-groups)
UnivariateSaturated     Univariate saturated model using
                        path-centric/matrix specification and
                        covariance/raw data
UnivariateSaturated_MatrixCov
                        Univariate saturated model using matrix
                        specification and covariance data
UnivariateSaturated_MatrixRaw
                        Univariate saturated model using matrix
                        specification and raw data
UnivariateSaturated_PathCov
                        Univariate saturated model using path-centric
                        specification and covariance data
UnivariateSaturated_PathRaw
                        Univariate saturated model using path-centric
                        specification and raw data
UnivariateTwinAnalysis
                        From fitting saturated models to testing model
                        assumptions to fitting the ACE model and a
                        submodel
UnivariateTwinAnalysis_MatrixRaw
                        Univariate ACE model using matrix specification
                        and raw data
UnivariateTwinAnalysis_PathRaw
                        Univariate ACE model using path-centric
                        specification and raw data
mxThreshold             Example of mxThreshold
omxConstrainMLThresholds
                        Example of omxConstrainMLThresholds

Demos in package ‘PMCMRplus’:

algae                   NOEC determination according to OECD based on
                        various methods
frdmcp                  Multiple comparison based on Friedman ranks
trout                   NOEC determination according to OECD and
                        comparison with other functions

Demos in package ‘R2BayesX’:

ForestHealth            A Space–Time Study on Forest Health
ZambiaNutrition         Determinants of Childhood Malnutrition in
                        Zambia

Demos in package ‘R2HTML’:

dataframe               Exports a data.frame using a CSS file
equations               Include LaTeX equations within a document
grids                   Using grids (ActiveWidget) within HTML
                        documents

Demos in package ‘RNetCDF’:

Rmpi_writeN_read1       RNetCDF Write NetCDF4 file with parallel
                        processes using Rmpi
pbdMPI_writeN_read1     RNetCDF Write NetCDF4 file with parallel
                        processes using pbdMPI

Demos in package ‘ROCR’:

ROCR                    demonstrates some of the graphical capabilities
                        of ROCR

Demos in package ‘RSNNS’:

art1_letters            the original SNNS art1 letters example, using
                        the RSNNS high-level api (rsnns)
art1_lettersSnnsR       the original art1 letters example, using the
                        RSNNS low-level api (SnnsR)
art2_tetra              the original SNNS art2 tetra example, using the
                        RSNNS high-level api (rsnns)
art2_tetraSnnsR         the original art2 tetra example, using the
                        RSNNS low-level api (SnnsR)
artmap_letters          the original SNNS artmap letters example, using
                        the RSNNS high-level api (rsnns)
artmap_lettersSnnsR     the original artmap letters example, using the
                        RSNNS low-level api (SnnsR)
assoz_letters           an associative memory example using the letters
                        data, RSNNS high-level api (rsnns)
assoz_lettersSnnsR      an associative memory example using the letters
                        data, RSNNS low-level api (SnnsR)
dlvq_ziff               the original SNNS dlvq ziff example, using the
                        RSNNS high-level api (rsnns)
dlvq_ziffSnnsR          the original SNNS dlvq ziff example, using the
                        RSNNS low-level api (SnnsR)
eight_elman             the original SNNS eight elman example, using
                        the RSNNS high-level api (rsnns)
eight_elmanSnnsR        the original SNNS eight elman example, using
                        the RSNNS low-level api (SnnsR)
encoderSnnsCLib         the original SNNS encoder example, using the
                        RSNNS low-level api (SnnsR), and only functions
                        directly mapped to SnnsCLib functions
iris                    classification example: the iris data, used
                        with various supervised methods present in the
                        RSNNS high-level api (rsnns)
laser                   regression example: the original SNNS laser
                        data, used with various supervised methods
                        present in the RSNNS high-level api (rsnns)
mlp_1dim_eval           mlp applied to 1 dimensional but multimodal
                        data
mlp_binary_eval         mlp applied to synthesized and perfectly
                        separable binary data
mlp_complex_eval        mlp_eval applied to complex but perfectly
                        separable classes
mlp_complex_plot        mlp_plot applied to complex but perfectly
                        separable classes
mlp_eval                mlp test on perfectly separable synthesized
                        data
mlp_eval6               mlp_eval applied to 2-dimensional data embedded
                        in a 6 dimensional space
mlp_irisSnnsR           a mlp for classification of the iris data,
                        using the RSNNS low-level api (SnnsR)
mlp_iris_tuning         training of an mlp for iris, with grid search
                        of the hyper-parameters (rsnns)
mlp_my_predict          this code is not stand alone but is sourced
                        into rsnss_plot_with_my_predict.R
mlp_plot                mlp plot on perfectly separable synthesized
                        data
mlp_plot_with_my_predict
                        rssns_plot with predict() emulator
                        demonstrating other features
pruning_iris            example with the iris dataset and mlp for how
                        to prune a network
pruning_irisSnnsR       example with the iris dataset and mlp for how
                        to prune a network, using the RSNNS low-level
                        api (SnnsR)
rbfDDA_spiralsSnnsR     the original SNNS rbf-dda example with the
                        spirals dataset, using the RSNNS low-level api
                        (SnnsR)
rbf_irisSnnsR           a rbf for classification of the iris data,
                        using the RSNNS low-level api (SnnsR)
rbf_sin                 a rbf network to approximante a a noisy sin
                        function, using the RSNNS high-level api
                        (rsnns)
rbf_sinSnnsR            a rbf network to approximante a a noisy sin
                        function, using the RSNNS low-level api (SnnsR)
som_cubeSnnsR           the original SNNS som cube example, and a som
                        with the iris data, using the RSNNS low-level
                        api (SnnsR)
som_iris                self-organizing map: a som for the iris data,
                        using the RSNNS high-level api (rsnns)

Demos in package ‘RcppZiggurat’:

benchmark               timing comparison of different ziggurat
                        implementations
chisqTest               chisq test for normal distribution of RNG draws
                        (cf JSS, 2005, paper)
normalTest              use the sum of normals to test RNG draws of
                        normal distribution
standardTest            use the sum of uniforms (inverted from normals)
                        to test RNG draws of normal

Demos in package ‘Rmpfr’:

hjkMpfr                 Hooke-Jeeves Minimization working for MPFR

Demos in package ‘Rmpi’:

cslavePI                R function to use external C program cslavePI.
                        Copy cslavePI.c in Rmpi library directory to
                        your working directory and compile as "mpicc -o
                        cslavePI cslavePI.c"
masterslavePI           R script to compute PI=4*\int_0^1 1/(1+x^2) dx.
simPI                   Use Monto Carlo simulation to compute PI (with
                        plot). Use simPI to run the program. Run
                        mpi.setup.rngstream to setup a parallel RNG.
simplePI                R function to compute PI using slavedaemon.R.
slave1PI                R functions to compute PI using slavedaemon.R
                        (load balancing with a server and workers). Use
                        master1PI to run the program.
slave2PI                R functions to compute PI using slavedaemon.R
                        (load balancing with workers only). Use
                        master2PI to run the program.

Demos in package ‘Ryacas’:

Ryacas-Expr             Expr is like Sym but uses expressions, not
                        strings.
Ryacas-Function         Differentiate R fn creating another R function.
Ryacas-PrettyPrinter    Example of PrettyPrinter output.
Ryacas-Sym              Similar to Ryacas demo but using the Sym
                        interface.
Ryacas-gui              Simple graphical user interface
Ryacas                  Examples of R and yacas working together.

Demos in package ‘SQUAREM’:

factoranalysis          Examples of EM acceleration for Factor Analysis
                        Maximum Likelihood Estimation.
intcensoring            Examples of Interval Censoring NPML Estimation.
mmlogistic              Examples of MM acceleration for Logistics
                        Regression Maximum Likelihood Estimation.
poissonmix              Examples of EM acceleration for Poisson mixture
                        estimation using Hasselblad 1969 data.
squarem                 Examples of EM acceleration and Power method

Demos in package ‘SparseM’:

Binding                 Binding and Indexing for Sparse Matrices
Coercion                Coercion of Matrices into Various New Classes
LeastSquares            Least Squares Linear Regression
LinearAlgebra           Basic Linear Algebra for Sparse Matrices
Solve                   Linear Equation Solving
Visualization           Visualization Tools for Sparse Matrices

Demos in package ‘TH.data’:

PROACT                  Conversion and cleanup of PROACT
                        (http://www.alsdatabase.org) database; code by
                        Torsten Hothorn, Jipcy Amador, and Heidi
                        Seibold

Demos in package ‘VGAM’:

binom2.or               Bivariate logistic model
cqo                     Constrained auadratic ordination
distributions           Maximum likelihood estimation of some
                        distributions
lmsqreg                 LMS quantile regression
vgam                    Vector generalized additive models
zipoisson               Zero inflated Poisson

Demos in package ‘VGAMdata’:

binom2.or               Bivariate logistic model
cqo                     Constrained auadratic ordination
distributions           Maximum likelihood estimation of some
                        distributions
lmsqreg                 LMS quantile regression
vgam                    Vector generalized additive models
zipoisson               Zero inflated Poisson

Demos in package ‘actuar’:

credibility             credibility theory
lossdist                loss distributions modeling
risk                    risk and ruin theory
simulation              simulation of compound hierarchical models

Demos in package ‘alabama’:

alabama                 constrained nonlinear optimization

Demos in package ‘amap’:

amap                    Amap demo file

Demos in package ‘animation’:

CLEvsLAL                The NBA game between CLE and LAL on 2009
                        Christmas
IBM                     IBM stock closing prices from 2000 to 2010
Mandelbrot              Demo of the Mandelbrot set
Sierpinski              Sierpinski triangle in R
Sweave_animation        A demo on how to insert animations into Sweave
                        documents
Xmas                    Characters rotating and shining (Merry
                        Christmas)
Xmas2                   Merry Christmas with snowflakes
Xmas_card               Christmas and New Year card by Yuan Huang
busybees                Brownian Motion inside a square
elephant                A winking pink elephant
fire                    Simulation of burning fire
fireworks               Set fireworks with R to celebrate the new year
flowers                 Download images from the Internet and create an
                        animation
game_of_life            Game of Life (e.g. Gosper's Glider Gun)
ggobi_animation         Record a GGobi tour as an animation in an HTML
                        page
hanoi                   Tower of Hanoi
jumpingHorse            A jumping horse on the chess board
lissajous               Animate a series of lissajous
pollen                  rgl 3D demo of the pollen data
recur.leaf              Generate leaves by recursion
recur.snow              Generate a snow flake by recursion
recur.tree              Generate a tree by recursion
rgl_animation           A demo on how to insert rgl 3D animations into
                        a LaTeX document
use_Cairo               Using the Cairo devices with the animation
                        package
wordrotation            A demonstration of the rotation of a word
                        'Animation'

Demos in package ‘base’:

error.catching          More examples on catching and handling errors
is.things               Explore some properties of R objects and
                        is.FOO() functions. Not for newbies!
recursion               Using recursion for adaptive integration
scoping                 An illustration of lexical scoping.

Demos in package ‘betareg’:

SmithsonVerkuilen2006   Replication Code for Smithson & Verkuilen
                        (2006)

Demos in package ‘brnn’:

Example_1               Fit a triangle wave model
Example_2               Fit a sine wave model
Example_3               Two input model
Example_4               Prediction of milk production with Additive
                        Genomic matrix
Example_5               Prediction of milk production with Additive and
                        Dominant matrices
Example_6               Prediction of ordinal response (GLS)

Demos in package ‘candisc’:

painters                HE plots and candisc HE plots for painters data

Demos in package ‘cccp’:

ACNT                    Analytic center with equality constraints
FPLN                    Floor Planning: linear objective with
                        non-linear constraints
GP                      Geometric Program
L1                      Solving L1-norm approximation by means of LP
LPCC                    Solving Linear Program with NNO, SOC and PSD
                        constraints
LPIC                    Solving Linear Program with linear inequality
                        constraints
QPEC                    Solving an equality constrained Quadratic
                        Program
QPIC                    Solving a Quadratic Program with equality and
                        inequality constraints
QPQC                    Solving a Quadratic Program with quadratic
                        (SOC) constraints
QPUC                    Solving an unconstrained Quadratic Program
SDP                     SDP with two positive semidefinite cone
                        constraints
SOCP                    SOCP with two second-order cone constraints

Demos in package ‘circlize’:

foo                     For demostrations, please go to
                        http://jokergoo.github.io/circlize

Demos in package ‘colorspace’:

brewer                  Compare HCL spectrum of RColorBrewer palettes
                        with colorspace approximations
carto                   Compare HCL spectrum of rcartocolor palettes
                        with colorspace approximations
scico                   Compare HCL spectrum of scico palettes with
                        colorspace approximations
viridis                 Compare HCL spectrum of viridis palettes with
                        colorspace approximations

Demos in package ‘copula’:

G_ak                    Coefficients a_k for Gumbel's density
                        derivatives, MLE, etc
dDiag-plots-part-2      Contiuation of above 'dDiag-plots'
dDiag-plots             Plotting dDiag() densities (over range of
                        families, theta, d)
estimation.gof          Estimation and goodness-of-fit capabilities
estimation_via_HAC      Estimation procedure from the HAC package
fitting-tests           Tests of fitCopula
gofCopula               Goodness-of-fit test for copula models
gof_graph               Graphical goodness-of-fit based on pairwise
                        Rosenblatt transforms
opC-demo                Outer power copula (Clayton only, for now)
polyGJ                  Investigating precision and run time of polyG
                        and polyJ
retstable               Computation of exponentially tilted stable
                        random variates
tail_compatibility      Demo accompanying the tail compatibility paper
timings                 Using timing() to measure speed of basic
                        Archimedean families

Demos in package ‘crs’:

cqrs                    R code for fitting and plotting quantile
                        regression splines
crsiv                   R code for testing crsiv with one endogenous
                        predictor, no exogenous predictors
crsiv_exog              R code for testing crsiv with one endogenous
                        and one exogenous predictor
crsiv_exog_persp        R code for testing crsiv with one endogenous
                        and one exogenous predictor then plotting
                        results in a perspective plot
ggplot_cos              R code for plotting a model with one numeric
                        and one factor predictor using ggplot2
glpreg_npRmpi           R code for running parallel npglpreg jobs
                        presuming npRmpi is installed on your system
nomad_factor            R code for testing NOMAD for factor regression
                        splines
nomad_kernel            R code for testing NOMAD for categorical
                        regression splines
radial_constrained_first_partial
                        R code for constrained radial function
                        estimation (constrain the first derivatives to
                        lie between -0.1 and 0.1)
radial_constrained_mean
                        R code for constrained radial function
                        estimation (constrain the mean to lie between 0
                        and 1/2)
radial_constrained_second_partial
                        R code for constrained radial function
                        estimation (constrain the second derivatives to
                        be non-negative)
radial_constrained_test
                        R code for testing constraint validity for
                        radial function estimation (constrain the mean
                        to lie between -0.217 and 1, which the true DGP
                        does though the noisy data does not)
radial_persp            R code for fitting and plotting a 3D
                        perspective plot for the `radial' function
radial_rgl              R code for fitting and generating a 3D
                        real-time rendering plot for the `radial'
                        function using OpenGL
sine_rgl                R code for fitting and generating a 3D
                        real-time rendering plot for a product sine
                        function using OpenGL
spline                  R code from the package with low-level
                        functions needed for constrained estimation

Demos in package ‘deSolve’:

CCL4model               Use gnls to estimate parameters for CCl4 PBPK
                        model
odedim                  Lotka-Volterra dynamics in 1-D and in 2-D,
                        using ode.1D and ode.2D

Demos in package ‘dendextend’:

dendextend              Demonstrates basic visualizations of dendrogram
                        manipulations

Demos in package ‘dfoptim’:

dfoptim                 derivative-free optimization

Demos in package ‘diagram’:

flowchart               Demonstrates the capabilities of drawingflow
                        charts
plotmat                 Demonstrates the capabilities of drawing graphs
                        based on a (transition) matrix
plotweb                 Demonstrates the capabilities of plotting
                        (food)webs

Demos in package ‘digest’:

vectorised              Timing comparison of approaches for vectorised
                        digest

Demos in package ‘dm’:

basel                   Demo for presentation at BaselR, December 2019
berlin                  Demo for presentation at the 16th Berlin R
                        meetup, July 2019
hamburg                 Demo for presentation at the Hamburg R user
                        group, January 2020
milano                  Demo for presentation at e-Rum Milano, June
                        2020
neuchatel               Demo for presentation at the satRday Neuchâtel,
                        March 2020
nyc                     Demo for presentation at the New York Open
                        Statistical Programming Meetup, February 2020
seattle                 Demo for presentation at the Seattle R user
                        group, February 2020
zurich                  Demo for presentation at the Zurich R meetup,
                        September 2019
zurich2                 Demo for presentation at Energie360, November
                        2019

Demos in package ‘doMC’:

sincMC                  computation of the sinc function

Demos in package ‘doMPI’:

sincMPI                 Compute and display the sinc function

Demos in package ‘doParallel’:

sincParallel            computation of the sinc function

Demos in package ‘doRNG’:

doRNG                   Some features of the %dorng% foreach operator

Demos in package ‘dtw’:

dtw                     Shows several examples of the Dynamic Time Warp
                        algorithm applied to a test case, including
                        various step patterns, local and global
                        constraints, etc.

Demos in package ‘expm’:

balanceTst              Exploring balance(), i.e., LAPACK's dgeBAL
                        matrix balancing
exact-fn                Functions for examples with exactly known
                        solution
expm                    matrix exponential

Demos in package ‘fda’:

ElectricDemand          functional regression of electricity demand on
                        temperature
canadian-weather        daily temperature and precipitation for 35
                        stations
gait                    knee and hip angle during 39 gait cycles
goodsindex              nondurable goods manufacturing index
growth                  heights of male and female children
growthreg               registration of growth curves
growthsetup             set up for growthreg and growthsmooth
growthsmooth            smoothing growth curves
handwrit                20 registered scripts "fda"
handwrit.pda            Principal differential analysis of scripts
                        "fda"
lip                     lower lip position while saying "bob"
pinch                   pinch force records
weatherANOVA            functional ANOVA using the Canadian Weather
                        data

Demos in package ‘fixest’:

femlm                   A simple illustration of the function femlm
                        using trade data.

Demos in package ‘foreach’:

sincSEQ                 computation of the sinc function

Demos in package ‘frbs’:

ANFIS.GasFur.PMML       ANFIS for regression problem using frbsPMML:
                        Gas Furnace
ANFIS.GasFur            ANFIS for regression problem: Gas Furnace
ANFIS.MG1000            ANFIS for regression problem: Mackey Glass
DENFIS.GasFur           DENFIS for regression problem: Gas Furnace
DENFIS.MG1000           DENFIS for regression problem: Mackey Glass
FH.GBML.Iris            FH.GBML for classification problem: Iris
                        dataset
FIR.DM.GasFur           FIR.DM for regression problem: Gas Furnace
FIR.DM.MG1000           FIR.DM for regression problem: Mackey Glass
FRBCS.CHI.Iris          Chi's technique for Iris
FRBCS.W.Iris            FRBCS.W for classification problem: Iris
FRBS.FRBCS.Manual       An example for generating fuzzy rule-based
                        classification systems model without learning
                        process
FRBS.Mamdani.Manual     An example for generating Mamdani model without
                        learning process
FRBS.Manual             An example for generating frbs model without
                        learning process and performing step by step
FRBS.TSK.Manual         An example for generating Takagi Sugeno Kang
                        model without learning process
FS.HGD.GasFur           FS.HGD for regression problem: Gas Furnace
FS.HGD.MG1000           FS.HGD for regression problem: Mackey Glass
GFS.FR.MOGUL.GasFur     Multi-stage genetic fuzzy system for regression
                        problem: Gas Furnace
GFS.FR.MOGUL.MG1000     Multi-stage genetic fuzzy system for Mackey
                        Glass
GFS.GCCL.Iris.PMML      GFS.GCCL for classification problem using
                        frbsPMML
GFS.GCCL.Iris           GFS.GCCL for classification problem: Iris
                        dataset
GFS.LT.RS.GasFur        GFS.LT.RS for regression problem: Gas Furnace
                        dataset
GFS.LT.RS.MG1000        GFS.LT.RS for regression problem: Mackey Glass
                        dataset
GFS.MEMETIC.GasFur      An example for regression problem: Gas Furnace
GFS.MEMETIC.MG1000      An example for regression problem: Mackey Glass
HyFIS.GasFur            HyFIS for regression problem: Gas Furnace
HyFIS.MG1000            HyFIS for regression problem: Mackey Glass
SBC.GasFur              SBC for regression problem: Gas Furnace
SBC.MG1000              SBC for regression problem: Mackey Glass
SLAVE.Iris              SLAVE for classification problem: Iris dataset
Thrift.GasFur           Thrift's technique for regression problem: Gas
                        Furnace dataset
Thrift.MG1000           Thrift's technique for regression problem:
                        Mackey Glass dataset
WM.GasFur.PMML          An example for using frbsPMML
WM.GasFur               WM for regression problem: Gas Furnace
WM.MG1000               WM for regression problem: Mackey Glass

Demos in package ‘future’:

fibonacci               Lazy definition of the first 100 Fibonacci
                        numbers
mandelbrot              Mandelbrot set images using futures

Demos in package ‘future.batchtools’:

mandelbrot              Mandelbrot set images using futures

Demos in package ‘gap’:

gap                     Genetics analysis package

Demos in package ‘gbm’:

OOB-reps                experiment testing the predictive performance
                        of the OOB estimator
bernoulli               example of boosting for logistic regression,
                        aka LogitBoost
coxph                   example of boosting the Cox propotional hazards
                        model
gaussian                example of boosting for least squares, aka
                        LSBoost
multinomial             example of multiclass prediction
pairwise                comparison of gaussian and pairwise
                        distributions (LambdaMART) for ranking
printExamples           simple examples used to test gbm updates
robustReg               comparison of gaussian and t-distribution

Demos in package ‘geometry’:

intersectn              Demonstration of intersection of 2D convex
                        hulls

Demos in package ‘gnm’:

gnm                     Fitting generalized nonlinear models with gnm

Demos in package ‘googleVis’:

EventListener           Examples of basic JavaScript event handlers
Roles                   Concept and use of roles with googleVis
Trendlines              Adding trendlines to Scatter Charts, Bar
                        Charts, Column Charts, and Line Charts
googleVis               Examples of various googleVis functions and
                        plots

Demos in package ‘grDevices’:

colors                  A show of R's predefined colors()
hclColors               Exploration of hcl() space

Demos in package ‘graphics’:

Hershey                 Tables of the characters in the Hershey vector
                        fonts
Japanese                Tables of the Japanese characters in the
                        Hershey vector fonts
graphics                A show of some of R's graphics capabilities
image                   The image-like graphics builtins of R
persp                   Extended persp() examples
plotmath                Examples of the use of mathematics annotation

Demos in package ‘gridBase’:

gridBase                Demo of integrating grid and base graphics

Demos in package ‘gstat’:

a2p                     area-to-point kriging with krige0
a2pinST                 area-to-point kriging in space-time with
                        krigeST
block                   block kriging -- effect of block size and
                        irregular blocks
blue                    how to get BLUE coefficients out of a
                        predict.gstat call
cc                      collocated cokriging example
circEmbeddingMeuse      simulation based in circular embedding allowing
                        fft
cokriging               fitting a linear model of coregionalization and
                        cokriging
comp_geoR               compare gstat kriging output with that obtained
                        from geoR
cosimulation            fitting a linear model of coregionalization and
                        cosimulation
depend                  check gstat package dependencies
examples                how to do the original gstat example files in S
fulmar                  analysis of Fulmaris glacialis data on Dutch
                        part of the North Sea
grass                   example grass/R/gstat run; requires grass meuse
                        data set installed
gstat3D                 example of 3D interpolation of random points
ikr                     example indicator kriging on zinc w. threshold
                        500 ppm
krige                   sample run of ordinary and universal kriging
lhs                     create latin hypercube sample of Gaussian
                        random field
line                    examples for lines support prediction
lnsim                   carry out log-normal kriging, based on
                        conditional simulation
localKrigeST            locally krige an irregular spatio-temporal data
                        set to a regular spatio-temporal grid
pcb                     pcb North Sea data analysis as used for
                        geoENV2004 paper; see ?pcb
rep                     10 x 10 matrix of fitted variograms from 100
                        simulated fields
sftime                  demo using package sftime, derived from
                        demo(stkrige)
sic2004                 part of sic2004 excercise; see ?sic2004
snow                    parallel kriging using package snow (not on
                        Windows)
stkrige-crossvalidation
                        crossvalidation as in Vignette spatio-temporal
                        kriging [!very time consuming!]
stkrige-prediction      prediction as in Vignette spatio-temporal
                        kriging [!time consuming!]
stkrige                 model estimation for Vignette spatio-temporal
                        kriging
ugsim                   unconditional Gaussian simulation
uisim                   unconditional indicator simulation, 2 and 3
                        category examples
weight                  compute (the expensive way) kriging weights for
                        a single prediction location
wind                    space-time kriging with the Irish wind data
                        sets
zonal                   approximate zonal anisotropy with geometrically
                        anistropic model

Demos in package ‘gsubfn’:

gsubfn-chron            read in zoo data with chron datetimes.
gsubfn-cut              Use strapply to extract endpoints from cut
                        labels.
gsubfn-gries            Stefan Gries' Linguistics code.
gsubfn-lower            Makes all letters in words lower case except
                        first.
gsubfn-si               Replace SI scale letter with number.
gsubfn-unitTests        Run gsubfn unit test suite.

Demos in package ‘h2o’:

h2o.anomaly             H2O anomaly using prostate cancer data
h2o.deeplearning        H2O deeplearning using prostate cancer data
h2o.gbm                 H2O generalized boosting machines using
                        prostate cancer data
h2o.glm                 H2O GLM using prostate cancer data
h2o.glrm                H2O GLRM using walking gait data
h2o.kmeans              H2O K-means using prostate cancer data
h2o.naiveBayes          H2O naive Bayes using iris and Congressional
                        voting data
h2o.prcomp              H2O PCA using Australia coast data
h2o.randomForest        H2O random forest classification using iris
                        data

Demos in package ‘heplots’:

Big5                    Analysis of scores on the 'Big 5' personality
                        traits for three groups
HE-other                Exploring other representations of HE plots
OBK                     HE plots for repeated measures designs,
                        OBrienKaiser data
bees.contrasts          Bees data, contrasts to resolve trtime to
                        treat, time, treat:time

Demos in package ‘httpuv’:

daemon-echo             Simple echo server demonstrating daemonized
                        mode
echo                    Simple echo server demonstrating WebSockets
json-server             JSON API endpoint server using WebSockets

Demos in package ‘httr’:

connection-sharing      Demonstration of how connection sharing saves
                        time
oauth1-nounproject      Using noun project api with OAuth 1.0
                        one-legged
oauth1-twitter          Using twitter api with OAuth 1.0
oauth1-withings         Using withings api with OAuth 1.0
oauth1-yahoo            Using yahoo api with OAuth 1.0
oauth2-azure            Using Azure apis with OAuth 2.0
oauth2-facebook         Using the facebook api with OAuth 2.0
oauth2-github           Using the github api with OAuth 2.0
oauth2-google           Using the google api with OAuth 2.0
oauth2-linkedin         Using linkedin api with OAuth 1.0
oauth2-reddit           Using the reddit api with OAuth 2.0
oauth2-vimeo            Using vimeo api with OAuth 2.0
oauth2-yahoo            Using yahoo api with OAuth 2.0 and custom OOB
                        redirect URI
oauth2-yelp             Using yelp api with OAuth 2.0 and Client
                        Credentials Grant
service-account         Using Google service account

Demos in package ‘igraph’:

centrality              Classic and other vertex centrality indices
cohesive                Cohesive blocking, the Moody & White method
community               Community structure detection
crashR                  A crash-course into R
hrg                     Hierarchical random graphs
smallworld              Small-world networks

Demos in package ‘ismev’:

exchange.rate           GPD Modelling of Exchange Rates
game-demo               Demo for generalized additive modeling for
                        extremes
order.stats             Modelling Order Statistics
rain.excess             Modelling Threshold Excesses
sealevel.max            Analysis of Annual Maximum Sea Levels
wooster.temps           Seasonal Model for Wooster Temperature Extremes

Demos in package ‘knitr’:

gwidgets                An R Notebook based on gWidgetsWWW2
notebook                An R Notebook based on Shiny

Demos in package ‘laGP’:

ALfhat                  2d "toy" AL problem augmented with unknown
                        objective
GSBP                    2d slack AL with unknown objective and mixed
                        constraints
LAH                     4d slack AL with mixed constraints
calib                   modularized calibration example from vignette

Demos in package ‘lattice’:

intervals               Confidence intervals
labels                  Labels in lattice displays
lattice                 Lattice Demos
panel                   Custom panel functions

Demos in package ‘lava’:

estimation              Estimation
inference               Inference
lava                    All demos
model                   Model specification
simulation              Simulation

Demos in package ‘lda’:

lda                     Fit an LDA model to the cora dataset and
                        visualize document-topic memberships.
mmsb                    Fit an MMSB model to the sampson data and
                        visualize the block interactions and the
                        position of each actor in the latent space.
nubbi                   Fit a NUBBI model to New York Times data and
                        visualize relationships between entities.
rtm                     Fit an RTM model and compare predictive link
                        accuracy to the LDA model.
slda                    Fit an sLDA model to the poliblog dataset and
                        visualize the relationship between topics and
                        political bent.
sldamc                  Fit a multi-class sLDA model to the newsgroup
                        dataset.

Demos in package ‘likert’:

GapAnalysis             This demo shows how to perform a gap analysis
                        where each item has two repsonses for
                        satisfaction and importance.
GroupedFactors          This demo shows how to group by factors (i.e.
                        group columns together).
PreSummarized           This demo shows how to use the likert package
                        with presummarized data.
RecodeFactors           This demo shows how to recode likert items.
                        This is useful if you wish to reverse the order
                        from left-to-right how the likert responses are
                        plotted or change the labels of responses (e.g.
                        from numeric values to character values).
UnusedLevels            This demo shows how to address the "All items
                        (columns) must have the same number of levels"
                        error that occurs when the items passed to
                        likert do not have the same number of levels.
likert                  This demo creates likert plots for the PISA
                        data.

Demos in package ‘lime’:

text_classification_explanation
                        Explanations of a sentence classification
                        model.

Demos in package ‘logger’:

colors                  Using a colored layout

Demos in package ‘lokern’:

glk-derivs              Function and Derivatives of \hat{g(x)} using
                        glkerns()

Demos in package ‘lsa’:

lsa_essayscoring        Demonstrates how student essays can be scored
                        with Latent Semantic Analysis (from a tutorial
                        given at the ProLearn Summer School 2006, Bled,
                        Slowenia).
lsa_landauer            Demonstrates the example from Landauer, T.,
                        Foltz, P., Laham, D. (1998): Introduction to
                        Latent Semantic Analysis, In: Discourse
                        Processes, 25, pp. 259-284
lsa_plot                Visualises a latent semantic space with two
                        singular values in a 2D scatter plot

Demos in package ‘mclogit’:

mclogit.test            Test run of mclogit with simulated data
test-mblogit-random-nonnested
                        Test run of mblogit with simulated data, model
                        with non-nested random effects

Demos in package ‘mediation’:

mediation-code          Example code in the package vignette

Demos in package ‘mets’:

mets                    All demos
models                  Models
tools                   Tools

Demos in package ‘microplot’:

AEdotplot               HH::AEdotplot displayed in both latex and
                        msWord.
Examples                Index to microplot/examples/ files showing
                        microplot with Sweave, knitr, markdown,
                        RMarkdown, noweb, org mode, Word, Excel.
HowToUseMicroplot       Simple to complex examples using lattice,
                        ggplot, and base graphics, with and without a
                        data matrix.
LegendrePolynomials     Matrix of multi-line plots with LaTeX math
                        annotation and also with MS Word.
NTplot                  A matrix of normal and t plots, showing
                        increase of power as the degrees of freedom
                        goes up and as the distance (mu_a - mu_0)
                        increases. This example uses HH::NTplot,
                        lattice, and Hmisc::latex.
boxplot-ggplot          A column of box plots, one for each row of
                        summary data. This demo uses ggplot2, latex and
                        MS Word.
bwplot-lattice          A column of box plots, one for each row of
                        summary data. This demo uses lattice, latex and
                        MS Word.
iris                    A matrix of boxplots for the measurements by
                        species of the iris data. This example uses
                        lattice and latex.
latex-ggplot            latex of 2D and 1D ggplot objects.
latex                   latex of 2D and 1D trellis objects.
msWord                  MS Word of 2D and 1D trellis objects.
regrcoef                Display of regression coefficients for a series
                        of models on the same set of independent
                        variables.
tablesPlusGraphicColumn
                        Latex and MS Word tables with a single column
                        of graphics. The example shows a HH::likert
                        plot of Toxicity data.
timeseries              Various rearrangements of a set of annual
                        plots. The demo illustrates arranging a vector
                        of panels into a matrix, and control of
                        placement of common axes in the LaTeX table
                        containing the individual panels.
xtable                  Simple example showing the xtable::xtable
                        function.

Demos in package ‘misc3d’:

lighting                Some examples of surfaces rendered with
                        lighting and shading
teapot                  Some examples using the Utah teapot.

Demos in package ‘mitools’:

mi                      Combining multiple imputations

Demos in package ‘mosaic’:

histogram               histogram examples
leastsquares            illustration of least squares principle for
                        simple regression
plotFun                 examples of plotting functions

Demos in package ‘multcomp’:

Ch_Appl                 Applications
Ch_GLM                  Multiple Comparisons in Parametric Models
Ch_Intro                Introduction
Ch_Misc                 Further Topics
Ch_Theory               General Concepts

Demos in package ‘nanotime’:

ggplot2Example          Plotting via ggplot2 from data.table objects
nanosecondDelayExample
                        Simulated example of network delay in
                        nanoseconds

Demos in package ‘np’:

Engel95                 R example for Engel 1995 data
constrained             R example of constrained estimation
npregiv                 R example for npregiv
tree                    R code for trees (some routines now support
                        trees for improved computational efficiency)

Demos in package ‘nullabor’:

lakers                  Where do the Lakers take basketball shots from?

Demos in package ‘optmatch’:

optmatch                some examples of the use of fullmatch() and
                        matched()

Demos in package ‘party’:

strucchange-perm        Reproduce Zeileis and Hothorn,
                        DOI:10.1007/s00362-013-0503-4

Demos in package ‘partykit’:

memory-speed            Some memory and speed comparisons for rpart,
                        J48, and constparty

Demos in package ‘pcse’:

pcse                    Panel-corrected standard error estimation.

Demos in package ‘pkgKitten’:

simpleDemo              Simple demo of using kitten()

Demos in package ‘plotly’:

animation-tour-USArrests
                        Linking a dendrogram to a tour
animation-tour-basic    A basic example of a grand tour
crosstalk-filter-dynamic-axis
                        Using crosstalk's filter_select() to
                        dynamically change the y-axis
crosstalk-filter-lines
                        Using crosstalk's filter_select() to filter
                        lines
crosstalk-highlight-binned-target-a
                        Dynamic 2-way ANOVA
crosstalk-highlight-binned-target-b
                        Dynamically re-rendering a boxplot, violin
                        plot, and bar-chart based on selections
crosstalk-highlight-binned-target-c
                        Dynamically re-rendering a histogram based on
                        selection
crosstalk-highlight-epl-2
                        A 'wormchart' version of the epl demo
crosstalk-highlight-epl
                        Exploring English Premier League performace
                        across seasons and teams
crosstalk-highlight-ggpairs
                        Brushing a scatterplot matrix via ggpairs
crosstalk-highlight-ggplotly
                        Linking ggplot2 plots
crosstalk-highlight-intro
                        An introduction to linked views
crosstalk-highlight-leaflet
                        Linking to leaflet
crosstalk-highlight-pipeline
                        Aggregating SharedData
crosstalk-highlight-subplot
                        Basic scatterplot brushing with subplot()
custom-javascript       Using htmlwidgets::onRender() to add custom
                        interactivity features (e.g google search on
                        click)
rotate                  Using htmlwidgets::onRender() to rotate the
                        camera of a 3D graph
sf-dt                   Linked querying of simple features with DT
                        (datatables)
sf-geo                  Mapping sf objects with scattergeo
sf-ggplot2              Mapping sf objects via ggplot2 and geom_sf()
sf-mapbox-data          Mapping sf objects with mapbox
sf-mapbox-layout        Mapping sf objects with mapbox (as a layer)
sf-mapbox-style         Including a dropdown for mapbox's basemap style
sf-plotly-3D-globe      Exploring storms paths by linking a 3D globe
                        with a 2D summary
sf-plotly-storms        Linking multiple 2D views of 3D storm paths
ternary                 A basic ternary plot

Demos in package ‘plotrix’:

plotrix                 Interactive demo of plotrix functions

Demos in package ‘pracma’:

pracma                  Some demos for the pracma package

Demos in package ‘progressr’:

mandelbrot              Produce Mandelbrot Set Images in Parallel with
                        Progress Updates

Demos in package ‘proto’:

proto-gWidgets          gWidget example - John Verzani
proto-vignette          code from proto vignette

Demos in package ‘psychotools’:

MathExam14W             Rasch Models and Math Test Data
VerbalAggression        Rasch Models and VerbalAggression Data
toolbox1                Simulate DIF Test of 2PL Type I Error
toolbox2                Simulate DIF Test of 2PL Power

Demos in package ‘qrng’:

basket_options          Estimate the price of basket call options
sobol_examples          Examples of sobol() calls
test_functions          Test functions for QRNGs

Demos in package ‘quantmod’:

chartSeries             The demo for chartSeries

Demos in package ‘quantreg’:

Frank                   Demo of nonlinear in parameters fitting of
                        Frank copula model
KMvCRQ                  Demo to compare Kaplan Meier and Portnoy's crq
                        estimation in one-sample case.
MCV                     Demo to illustrate multifold cross validation
                        lambda selection for rqss
Mammals                 Demo for rqss with running speed of mammals
                        data
Mel                     Demo of conditional density estimation using
                        Melbourne daily temperature.
Mel2                    Demo of Melbourne daily temperature.
Panel                   Demo to illustrate fixed effect estimation for
                        panel data
Polson                  Demo to compare rqss fit with Polson-Scott ADMM
                        fit
RB-r                    Demo for testing R beta = r using anova[.rq]
arqss                   Demo for automatic lambda selection
cobar                   Demo of the triogram fitting and rgl
                        perspective plot for Cobar Ore data
combos                  Demo of combos function: ordered combinations
cpoint                  Demo for a simple change point (broken-stick)
                        problem
crquis                  Demo for crq method using UIS data and Peng
                        Huang method.
engel1                  Demo of QR fitting of Engel curves
engel2                  Demo of estimated conditional quantile
                        functions for Engel data.
hinged                  Demo for a simple rqss bivariate fitting of
                        hinge function
panelfig                Demo for panel data example
predemo                 Demo for prediction and confidence intervals
rqsslasso               Demo for lasso penalized rqss
stack                   Demo with Stackloss data from Brownlee
subset                  Demo to test subset option for rqss

Demos in package ‘rbenchmark’:

benchmark               Demonstration of benchmark function

Demos in package ‘rgl’:

flag                    play3d() function that waves a flag
mouseCallbacks          Standard mouse handlers implemented in R, for a
                        stereo view
rgl                     RGL Interactive Demonstration
shinyDemo               rglwidget in Shiny: Nelder-Mead demonstration
shinyMouse              Mouse selection in Shiny
shinyTabs               Shiny with tabs
shinyToggle             Shiny with togglewidget
simpleShinyRgl          Shiny demo with checkbox
stereo                  Stereo views using a random dot stereogram & an
                        anaglyph

Demos in package ‘rms’:

all                     Comprehensive Demonstrations of Use of the rms
                        Package

Demos in package ‘robustbase’:

determinMCD             Compute (and compare) the deterministic MCD for
                        "standard datasets"

Demos in package ‘rootSolve’:

Jacobandroots           jacobians and roots
Steadystate             steady-state solutions

Demos in package ‘rpanel’:

rp.assign               Sends parameters into an rpanel (rp. functions)
rp.block                Blocks r until a control panel is closed (rp.
                        functions)
rp.button               An example of the use of the button (rp.
                        functions)
rp.checkbox             A checkbox example (rp. functions)
rp.combo                A drop-down list example (rp. functions)
rp.control              Creation of a rpanel control panel window (rp.
                        functions)
rp.doublebutton         A spinbutton for setting values (rp. functions)
rp.grid                 Demonstrates how to use the grid (rp.
                        functions)
rp.gulls                Demonstrates most features of the package
rp.image                Use of an image in a rpanel (rp. functions)
rp.listbox              A listbox example (rp. functions)
rp.menu                 Shows how to attach a menu to a rp.control (rp.
                        functions)
rp.messagebox           A messagebox example (rp. functions)
rp.notebook             Demonstrates how to use the notebook tabs (rp.
                        functions)
rp.pos                  Demonstrates the use of the pos parameter used
                        by most widgets
rp.radiogroup           A radiogroup example (rp. functions)
rp.slider               Use of a slider to set a value (rp. functions)
rp.text                 A text label (rp. functions)
rp.textentry            One or more text entry boxes (rp. functions)
rp.tkrplot              A plot which can be placed in a rpanel window
                        (rp. functions)

Demos in package ‘rstanarm’:

ARM_Ch03                Some stan_lm demos with data on kids IQ
ARM_Ch04                Some stan_lm demos with transformed data
ARM_Ch05                Some stan_glm demos with logit models
ARM_Ch07                More examples of posterior predictive
                        distributions
ARM_Ch08                More examples of posterior predictive
                        distributions
ARM_Ch09                Regression for causal inference
ARM_Ch12_13             Models with group-specific parameters
ARM_Ch14                More models with group-specific parameters
CLEANUP                 Removes objects created by our demos
SETUP                   Loads packages, creates objects, etc.

Demos in package ‘rvest’:

tripadvisor             Scrape review data from tripadvisor
united                  Scrape mileage details from united.com
zillow                  Scrape housing info from zillow

Demos in package ‘sampleSelection’:

treatReg                estimation of treatment effects

Demos in package ‘scdhlm’:

Schutte-application     Analysis of multiple baseline study conducted
                        by Schutte, Malouf, & Brown (2008), as reported
                        in Pustejovsky, Hedges, & Shadish (2013).
Simulation-MB1          Simulation study for model MB1 from
                        Pustejovsky, Hedges, & Shadish (2013).
Simulation-MB2          Simulation study for model MB2 from
                        Pustejovsky, Hedges, & Shadish (2013).
Simulation-MB4          Simulation study for model MB4 from
                        Pustejovsky, Hedges, & Shadish (2013).

Demos in package ‘seasonal’:

seas                    basic functionality of the seasonal package

Demos in package ‘sf’:

affine                  demo script for affine transformations
basic                   simple feature test script
bm_wkb                  benchmark for reading larg(ish)
                        well-known-binary data, comparing sf and wkb
ggplot                  shows use of geom_sf
meuse_sf                create meuse simple feature table from
                        data.frame
nc                      load (read) North Carolina sids data set from a
                        geopackage file
twitter                 twitter globe demo
webmap                  webmap demo from sp, modified to plot sf
                        objects

Demos in package ‘sfsmisc’:

hatmat-ex               hat matrix / smoother Matrix examples
pretty-lab              Pretty axis labels, including using tikz
prime-numbers           Prime numbers, factorization, etc: (Simple)
                        implementations

Demos in package ‘shape’:

colorshapes             Demonstration of colored shapes, color
                        palettes, in package shape...

Demos in package ‘sp’:

depend                  script that runs check on all R packages
                        depending on sp
fib                     demo script for Fibonacci sampling on the
                        sphere
gallery                 scripts to generate graph gallery on
                        http://r-spatial.sourceforge.net/
meuse                   script that loads the meuse data set, converts
                        the objects into sp classes, and sets
                        coordinate reference system
mp                      demonstrate use of SpatialMultiPoints and
                        SpatialMultiPointsDataFrame
polar                   polar plot showing gridlines and gridline
                        labels in epsg 3031
webmap                  OpenStreetMap or google map backgrounds in
                        sp::plot and sp::spplot, using ggmap or
                        RgoogleMaps maps

Demos in package ‘spacetime’:

CW                      demo doing some examples from the Cressie &
                        Wikle book (ch 3)
CressieWikle            demo that reads the data from the Cressie &
                        Wikle book.
aggregate               demo aggregating ST irregular points over an
                        STF
edc                     spacetime demo script for EDC workshop, Mar
                        17-18 2011
gvis                    some googleVis graphs using spacetime data
sos4R                   demo that builds onto a sos4R demo

Demos in package ‘spam’:

cholesky                Illustrates the decompostion of the Cholesky
                        factorization
jss10-example1          Code of example 1 of the JSS10 article
jss10-figures-table     Code to reproduce the figures and the table of
                        the JSS10 article
jss15-BYM               Code of BYM sampler in Section 2.2 of the JSS15
                        article
jss15-Leroux            Code of Leroux sampler in Section 3.1 of the
                        JSS15 article
spam                    Explore some properties of the sparse matrix
                        package
timing                  Compare times required to perform operations on
                        full and sparse matrices

Demos in package ‘spatstat’:

data                    Datasets in spatstat
diagnose                Demonstration of diagnostic capabilities for
                        models in spatstat
spatstat                Demonstration of spatstat library
sumfun                  Demonstration of nonparametric summary
                        functions in spatstat

Demos in package ‘stars’:

spacetime               examples from the spacetime package, redone
                        with stars
udf_demo                demo scripts for (possible) openEO udfs

Demos in package ‘stats’:

glm.vr                  Some glm() examples from V&R with several
                        predictors
lm.glm                  Some linear and generalized linear modelling
                        examples from `An Introduction to Statistical
                        Modelling' by Annette Dobson
nlm                     Nonlinear least-squares using nlm()
smooth                  `Visualize' steps in Tukey's smoothers

Demos in package ‘strucchange’:

tkmonitoring            Monitoring Structural Changes (Tcl/Tk based
                        demo)
tktesting               Testing For Structural Change (Tcl/Tk based
                        demo)

Demos in package ‘targeted’:

targeted                All demos

Demos in package ‘tcltk’:

tkcanvas                Creates a canvas widget showing a 2-D plot with
                        data points that can be dragged with the mouse.
tkdensity               Interactive density plots.
tkfaq                   Show long file, the R FAQ, using scrollbared
                        window.
tkttest                 t-test example of GUI interface to a function
                        call.

Demos in package ‘tgp’:

as                      adaptive sampling on exponential data from
                        vignette 1
cat                     using tgp with categorical (i.e.,
                        non-real-valued) inputs from vignette 2
exp                     Bayesian GP, treed GP, and treed GP LLM on
                        exponential data from vignette 1
fried                   Bayesian linear CART and GP LLM on first
                        Friedman data from vignette 1
it                      importance tempering improved mixing in the
                        RJ-MCMC for tgp from vignette 2
linear                  Bayesian LM and GP LLM on linear data from
                        vignette 1
moto                    Bayesian GP, treed GP, and treed GP LLM on
                        motorcycle accident data from vignette 1
optim                   sequential optimization of black-box functions
                        from vignette 2
pred                    example of a collaborative tgp with predict.tgp
                        from vignette 1
sens                    sensitivity analysis for inputs/covariates from
                        vignette 2
sin                     Bayesian linear CART, GP, treed GP on
                        sinusoidal data from vignette 1
traces                  demonstration, visualization and interpretation
                        of parameter traces from vignette 1

Demos in package ‘threejs’:

click_animation         An example of interactive vertex click
                        animation in graphjs visualizations.
click_animation2        Another example of interactive vertex click
                        animation in graphjs visualizations.
crosstalk               Cross-widget brushing selection using
                        crosstalk.

Demos in package ‘trajectories’:

A3                      demo script to load data from envirocar.org
Geolife                 read Geolife 1.3 data (not supplied)
citibikenyc             citibikenyc
enviroCaR               enviroCaR demo
google                  read google history track,
                        https://maps.google.com/locationhistory/
stcube                  stcube demo
storms                  storms

Demos in package ‘tram’:

SCI_ePolr               Proportional Odds Model for Spinal Cord Injury
                        Analysis
hcc                     Hepatocellular Carcinoma Diagnostic Test
mtram                   Marginally Interpretable Linear Transformation
                        Models
stram                   Location-Scale Transformation Models
survtram                Smooth Transformation Models for Survival
                        Analysis
undernutrition          Undernutrition Data Analysis with mmlt

Demos in package ‘trtf’:

BMI                     Body Mass Index Illustration from
                        `Transformation Forests', arXiv version v2
QRF                     Quantile Regression Forest Figure 1 from
                        `Transformation Forests', arXiv version v2
applications            Applications from `Transformation Forests',
                        arXiv version v1

Demos in package ‘unitizer’:

unitizer                Interactively step through a `unitizer`
                        development cycle

Demos in package ‘units’:

cf                      checks that the NetCDF-CF units are all udunits
                        compatible
ggplot2                 demonstrates automatic units in default axis
                        labels in ggplot2
year                    illustrate the year lenghts, for different
                        definitions of year

Demos in package ‘vcd’:

discrete                Fitting and Graphing Discrete Distributions
hcl                     Tcl/Tk-Demo for `hcl' colors
hls                     Tcl/Tk-Demo for `hls' colors
hsv                     Tcl/Tk-Demo for `hsv' colors
hullternary             Demo for adding data point hulls to a ternary
                        plot
mondrian                Demo for (re)producing modern art using
                        mosaic()
mosaic                  Mosaic displays
strucplot               Demo for new strucplot suite (assoc, mosaic,
                        doubledeckerplot)
twoway                  2-Way Contingency Tables

Demos in package ‘vcdExtra’:

Wong2-3                 Political views and support for women to work
                        (U, R, C, R+C and RC(1) models)
Wong3-1                 Political views, support for women to work and
                        national welfare spending (3-way, marginal, and
                        conditional independence models)
housing                 Visualize glm(), multinom() and polr() models
                        from example(housing, package="MASS")
mental-glm              Mental health data: mosaics for glm() and gnm()
                        models
mosaic3d-demo           proof-of-concept for exploring 3D mosaic plots
mosaic3d-hec            2D and 3D visualizations of HairEyeColor data
occStatus               Occupational status data: Compare mosaic using
                        expected= to mosaic.glm
ucb-glm                 UCBAdmissions data: Conditional independence
                        via loglm() and glm()
vision-quasi            VisualAcuity data: Quasi- and Symmetry models
yaish-unidiff           Yaish data: Unidiff model for 3-way table
yamaguchi-xie           Yamaguchi data with models from Xie(1992) for
                        homogeneous and log multiplicative layer effect
                        models

Demos in package ‘xgboost’:

basic_walkthrough       Basic feature walkthrough
boost_from_prediction   Boosting from existing prediction
caret_wrapper           Use xgboost to train in caret library
create_sparse_matrix    Create Sparse Matrix
cross_validation        Cross validation
custom_objective        Customize loss function, and evaluation metric
early_stopping          Early Stop in training
generalized_linear_model
                        Generalized Linear Model
gpu_accelerated         GPU-accelerated tree building algorithms
interaction_constraints
                        Interaction constraints among features
poisson_regression      Poisson regression on count data
predict_first_ntree     Predicting using first n trees
predict_leaf_indices    Predicting the corresponding leaves
tweedie_regression      Tweedie regression

Demos in package ‘zoo’:

zoo-overplot            Plot time series in black with certain regions
                        in red.

> 
> 
> ## Not run: 
> ##D  ch <- "scoping"
> ##D  demo(ch, character = TRUE)
> ## End(Not run)
> 
> ## Find the location of a demo
> system.file("demo", "lm.glm.R", package = "stats")
[1] "/usr/local/lib/R/library/stats/demo/lm.glm.R"
> 
> 
> 
> cleanEx()
> nameEx("edit")
> ### * edit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: edit
> ### Title: Invoke a Text Editor
> ### Aliases: edit edit.default vi emacs pico xemacs xedit
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # use xedit on the function mean and assign the changes
> ##D mean <- edit(mean, editor = "xedit")
> ##D 
> ##D # use vi on mean and write the result to file mean.out
> ##D vi(mean, file = "mean.out")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("edit.data.frame")
> ### * edit.data.frame
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: edit.data.frame
> ### Title: Edit Data Frames and Matrices
> ### Aliases: edit.data.frame edit.matrix
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D edit(InsectSprays)
> ##D edit(InsectSprays, factor.mode = "numeric")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("example")
> ### * example
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: example
> ### Title: Run an Examples Section from the Online Help
> ### Aliases: example
> ### Keywords: documentation utilities
> 
> ### ** Examples
> 
> example(InsectSprays)

InsctS> require(stats); require(graphics)

InsctS> boxplot(count ~ spray, data = InsectSprays,
InsctS+         xlab = "Type of spray", ylab = "Insect count",
InsctS+         main = "InsectSprays data", varwidth = TRUE, col = "lightgray")

InsctS> fm1 <- aov(count ~ spray, data = InsectSprays)

InsctS> summary(fm1)
            Df Sum Sq Mean Sq F value Pr(>F)    
spray        5   2669   533.8    34.7 <2e-16 ***
Residuals   66   1015    15.4                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

InsctS> opar <- par(mfrow = c(2, 2), oma = c(0, 0, 1.1, 0))

InsctS> plot(fm1)

InsctS> fm2 <- aov(sqrt(count) ~ spray, data = InsectSprays)

InsctS> summary(fm2)
            Df Sum Sq Mean Sq F value Pr(>F)    
spray        5  88.44  17.688    44.8 <2e-16 ***
Residuals   66  26.06   0.395                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

InsctS> plot(fm2)

InsctS> par(opar)
> ## force use of the standard package 'stats':
> example("smooth", package = "stats", lib.loc = .Library)

smooth> require(graphics)

smooth> ## see also   demo(smooth) !
smooth> 
smooth> x1 <- c(4, 1, 3, 6, 6, 4, 1, 6, 2, 4, 2) # very artificial

smooth> (x3R <- smooth(x1, "3R")) # 2 iterations of "3"
3R Tukey smoother resulting from  smooth(x = x1, kind = "3R") 
 used 2 iterations
 [1] 3 3 3 6 6 4 4 4 2 2 2

smooth> smooth(x3R, kind = "S")
S Tukey smoother resulting from  smooth(x = x3R, kind = "S") 
 changed
 [1] 3 3 3 3 4 4 4 4 2 2 2

smooth> sm.3RS <- function(x, ...)
smooth+    smooth(smooth(x, "3R", ...), "S", ...)

smooth> y <- c(1, 1, 19:1)

smooth> plot(y, main = "misbehaviour of \"3RSR\"", col.main = 3)

smooth> lines(sm.3RS(y))

smooth> lines(smooth(y))

smooth> lines(smooth(y, "3RSR"), col = 3, lwd = 2)  # the horror

smooth> x <- c(8:10, 10, 0, 0, 9, 9)

smooth> plot(x, main = "breakdown of  3R  and  S  and hence  3RSS")

smooth> matlines(cbind(smooth(x, "3R"), smooth(x, "S"), smooth(x, "3RSS"), smooth(x)))

smooth> presidents[is.na(presidents)] <- 0 # silly

smooth> summary(sm3 <- smooth(presidents, "3R"))
3R Tukey smoother resulting from
 smooth(x = presidents, kind = "3R") ;  n = 120 
 used 4 iterations
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    0.0    44.0    57.0    54.2    71.0    82.0 

smooth> summary(sm2 <- smooth(presidents,"3RSS"))
3RSS Tukey smoother resulting from
 smooth(x = presidents, kind = "3RSS") ;  n = 120 
 used 5 iterations
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.00   44.00   57.00   55.45   69.00   82.00 

smooth> summary(sm  <- smooth(presidents))
3RS3R Tukey smoother resulting from
 smooth(x = presidents) ;  n = 120 
 used 7 iterations
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  24.00   44.00   57.00   55.88   69.00   82.00 

smooth> all.equal(c(sm2), c(smooth(smooth(sm3, "S"), "S")))  # 3RSS  === 3R S S
[1] TRUE

smooth> all.equal(c(sm),  c(smooth(smooth(sm3, "S"), "3R"))) # 3RS3R === 3R S 3R
[1] TRUE

smooth> plot(presidents, main = "smooth(presidents0, *) :  3R and default 3RS3R")

smooth> lines(sm3, col = 3, lwd = 1.5)

smooth> lines(sm, col = 2, lwd = 1.25)
> 
> ## set RNG *before* example as when R CMD check is run:
> 
> r1 <- example(quantile, setRNG = TRUE)

quantl> quantile(x <- rnorm(1001)) # Extremes & Quartiles by default
         0%         25%         50%         75%        100% 
-3.00804860 -0.69731820 -0.03472603  0.68924373  3.81027668 

quantl> quantile(x,  probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100)
       0.1%        0.5%          1%          2%          5%         10% 
-2.99694930 -2.59232767 -2.42431731 -2.24515257 -1.72663060 -1.33880074 
        50%             
-0.03472603          NA 

quantl> ### Compare different types
quantl> quantAll <- function(x, prob, ...)
quantl+   t(vapply(1:9, function(typ) quantile(x, probs = prob, type = typ, ...),
quantl+            quantile(x, prob, type=1, ...)))

quantl> p <- c(0.1, 0.5, 1, 2, 5, 10, 50)/100

quantl> signif(quantAll(x, p), 4)
        0.1%   0.5%     1%     2%     5%    10%      50%
 [1,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [2,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [3,] -3.008 -2.596 -2.433 -2.265 -1.733 -1.344 -0.03592
 [4,] -3.008 -2.596 -2.433 -2.264 -1.733 -1.344 -0.03532
 [5,] -3.002 -2.594 -2.428 -2.255 -1.730 -1.341 -0.03473
 [6,] -3.008 -2.596 -2.432 -2.264 -1.733 -1.343 -0.03473
 [7,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [8,] -3.004 -2.595 -2.430 -2.258 -1.731 -1.342 -0.03473
 [9,] -3.004 -2.595 -2.429 -2.257 -1.730 -1.341 -0.03473

quantl> ## 0% and 100% are equal to min(), max() for all types:
quantl> stopifnot(t(quantAll(x, prob=0:1)) == range(x))

quantl> ## for complex numbers:
quantl> z <- complex(real = x, imaginary = -10*x)

quantl> signif(quantAll(z, p), 4)
              0.1%         0.5%           1%           2%           5%
 [1,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [2,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [3,] -3.01+30.08i -2.60+25.96i -2.43+24.33i -2.26+22.65i -1.73+17.33i
 [4,] -3.01+30.08i -2.60+25.96i -2.43+24.33i -2.26+22.64i -1.73+17.33i
 [5,] -3.00+30.02i -2.59+25.94i -2.43+24.28i -2.25+22.55i -1.73+17.30i
 [6,] -3.01+30.08i -2.60+25.96i -2.43+24.32i -2.26+22.64i -1.73+17.33i
 [7,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [8,] -3.00+30.04i -2.59+25.95i -2.43+24.30i -2.26+22.58i -1.73+17.31i
 [9,] -3.00+30.04i -2.59+25.95i -2.43+24.29i -2.26+22.57i -1.73+17.30i
               10%             50%
 [1,] -1.34+13.39i -0.0347+0.3473i
 [2,] -1.34+13.39i -0.0347+0.3473i
 [3,] -1.34+13.44i -0.0359+0.3592i
 [4,] -1.34+13.44i -0.0353+0.3532i
 [5,] -1.34+13.41i -0.0347+0.3473i
 [6,] -1.34+13.43i -0.0347+0.3473i
 [7,] -1.34+13.39i -0.0347+0.3473i
 [8,] -1.34+13.42i -0.0347+0.3473i
 [9,] -1.34+13.41i -0.0347+0.3473i
> x1 <- rnorm(1)
> u <- runif(1)
> ## identical random numbers
> r2 <- example(quantile, setRNG = TRUE)

quantl> quantile(x <- rnorm(1001)) # Extremes & Quartiles by default
         0%         25%         50%         75%        100% 
-3.00804860 -0.69731820 -0.03472603  0.68924373  3.81027668 

quantl> quantile(x,  probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100)
       0.1%        0.5%          1%          2%          5%         10% 
-2.99694930 -2.59232767 -2.42431731 -2.24515257 -1.72663060 -1.33880074 
        50%             
-0.03472603          NA 

quantl> ### Compare different types
quantl> quantAll <- function(x, prob, ...)
quantl+   t(vapply(1:9, function(typ) quantile(x, probs = prob, type = typ, ...),
quantl+            quantile(x, prob, type=1, ...)))

quantl> p <- c(0.1, 0.5, 1, 2, 5, 10, 50)/100

quantl> signif(quantAll(x, p), 4)
        0.1%   0.5%     1%     2%     5%    10%      50%
 [1,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [2,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [3,] -3.008 -2.596 -2.433 -2.265 -1.733 -1.344 -0.03592
 [4,] -3.008 -2.596 -2.433 -2.264 -1.733 -1.344 -0.03532
 [5,] -3.002 -2.594 -2.428 -2.255 -1.730 -1.341 -0.03473
 [6,] -3.008 -2.596 -2.432 -2.264 -1.733 -1.343 -0.03473
 [7,] -2.997 -2.592 -2.424 -2.245 -1.727 -1.339 -0.03473
 [8,] -3.004 -2.595 -2.430 -2.258 -1.731 -1.342 -0.03473
 [9,] -3.004 -2.595 -2.429 -2.257 -1.730 -1.341 -0.03473

quantl> ## 0% and 100% are equal to min(), max() for all types:
quantl> stopifnot(t(quantAll(x, prob=0:1)) == range(x))

quantl> ## for complex numbers:
quantl> z <- complex(real = x, imaginary = -10*x)

quantl> signif(quantAll(z, p), 4)
              0.1%         0.5%           1%           2%           5%
 [1,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [2,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [3,] -3.01+30.08i -2.60+25.96i -2.43+24.33i -2.26+22.65i -1.73+17.33i
 [4,] -3.01+30.08i -2.60+25.96i -2.43+24.33i -2.26+22.64i -1.73+17.33i
 [5,] -3.00+30.02i -2.59+25.94i -2.43+24.28i -2.25+22.55i -1.73+17.30i
 [6,] -3.01+30.08i -2.60+25.96i -2.43+24.32i -2.26+22.64i -1.73+17.33i
 [7,] -3.00+29.97i -2.59+25.92i -2.42+24.24i -2.25+22.45i -1.73+17.27i
 [8,] -3.00+30.04i -2.59+25.95i -2.43+24.30i -2.26+22.58i -1.73+17.31i
 [9,] -3.00+30.04i -2.59+25.95i -2.43+24.29i -2.26+22.57i -1.73+17.30i
               10%             50%
 [1,] -1.34+13.39i -0.0347+0.3473i
 [2,] -1.34+13.39i -0.0347+0.3473i
 [3,] -1.34+13.44i -0.0359+0.3592i
 [4,] -1.34+13.44i -0.0353+0.3532i
 [5,] -1.34+13.41i -0.0347+0.3473i
 [6,] -1.34+13.43i -0.0347+0.3473i
 [7,] -1.34+13.39i -0.0347+0.3473i
 [8,] -1.34+13.42i -0.0347+0.3473i
 [9,] -1.34+13.41i -0.0347+0.3473i
> x2 <- rnorm(1)
> stopifnot(identical(r1, r2))
> ## but x1 and x2 differ since the RNG state from before example()
> ## differs and is restored!
> x1; x2
[1] -0.6264538
[1] 1.329799
> 
> ## Exploring examples code:
> ## How large are the examples of "lm...()" functions?
> lmex <- sapply(apropos("^lm", mode = "function"),
+                example, character.only = TRUE, give.lines = TRUE)
> lengths(lmex)
          lm       lm.fit lm.influence      lm.wfit 
          33           37           18           37 
> 
> 
> 
> cleanEx()
> nameEx("file.edit")
> ### * file.edit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: file.edit
> ### Title: Edit One or More Files
> ### Aliases: file.edit
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # open two R scripts for editing
> ##D file.edit("script1.R", "script2.R")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("filetest")
> ### * filetest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: file_test
> ### Title: Shell-style Tests on Files
> ### Aliases: file_test
> ### Keywords: file
> 
> ### ** Examples
> 
> dir <- file.path(R.home(), "library", "stats")
> file_test("-d", dir)
[1] TRUE
> file_test("-nt", file.path(dir, "R"), file.path(dir, "demo"))
[1] FALSE
> 
> 
> 
> cleanEx()
> nameEx("findCRANmirror")
> ### * findCRANmirror
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: findCRANmirror
> ### Title: Find CRAN Mirror Preference
> ### Aliases: findCRANmirror
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Don't show: 
> old <- Sys.getenv("R_CRAN_WEB", NA_character_)
> ## End(Don't show)
> c(findCRANmirror("src"), findCRANmirror("web"))
[1] "https://CRAN.R-project.org" "https://CRAN.R-project.org"
> 
> Sys.setenv(R_CRAN_WEB = "https://cloud.r-project.org")
> c(findCRANmirror("src"), findCRANmirror("web"))
[1] "https://CRAN.R-project.org"  "https://cloud.r-project.org"
> ## Don't show: 
> if(is.na(old)) Sys.setenv(R_CRAN_WEB = old) else Sys.unsetenv("R_CRAN_WEB")
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("findLineNum")
> ### * findLineNum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: findLineNum
> ### Title: Find the Location of a Line of Source Code, or Set a Breakpoint
> ###   There
> ### Aliases: findLineNum setBreakpoint
> ### Keywords: debugging
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Find what function was defined in the file mysource.R at line 100:
> ##D findLineNum("mysource.R#100")
> ##D 
> ##D # Set a breakpoint in both copies of that function, assuming one is in the
> ##D # same namespace as myfunction and the other is on the search path
> ##D setBreakpoint("mysource.R#100", envir = myfunction)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("fix")
> ### * fix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fix
> ### Title: Fix an Object
> ### Aliases: fix
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D  ## Assume 'my.fun' is a user defined function :
> ##D  fix(my.fun)
> ##D  ## now my.fun is changed
> ##D  ## Also,
> ##D  fix(my.data.frame) # calls up data editor
> ##D  fix(my.data.frame, factor.mode="char") # use of ...
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("format")
> ### * format
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format
> ### Title: Format Unordered and Ordered Lists
> ### Aliases: formatUL formatOL
> ### Keywords: print
> 
> ### ** Examples
> 
> ## A simpler recipe.
> x <- c("Mix dry ingredients thoroughly.",
+        "Pour in wet ingredients.",
+        "Mix for 10 minutes.",
+        "Bake for one hour at 300 degrees.")
> ## Format and output as an unordered list.
> writeLines(formatUL(x))
* Mix dry ingredients thoroughly.
* Pour in wet ingredients.
* Mix for 10 minutes.
* Bake for one hour at 300 degrees.
> ## Format and output as an ordered list.
> writeLines(formatOL(x))
1. Mix dry ingredients thoroughly.
2. Pour in wet ingredients.
3. Mix for 10 minutes.
4. Bake for one hour at 300 degrees.
> ## Ordered list using lower case roman numerals.
> writeLines(formatOL(x, type = "i"))
  i. Mix dry ingredients thoroughly.
 ii. Pour in wet ingredients.
iii. Mix for 10 minutes.
 iv. Bake for one hour at 300 degrees.
> ## Ordered list using upper case letters and some offset.
> writeLines(formatOL(x, type = "A", offset = 5))
     A. Mix dry ingredients thoroughly.
     B. Pour in wet ingredients.
     C. Mix for 10 minutes.
     D. Bake for one hour at 300 degrees.
> 
> 
> 
> cleanEx()
> nameEx("getAnywhere")
> ### * getAnywhere
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getAnywhere
> ### Title: Retrieve an R Object, Including from a Namespace
> ### Aliases: getAnywhere argsAnywhere [.getAnywhere print.getAnywhere
> ### Keywords: data
> 
> ### ** Examples
> 
> getAnywhere("format.dist")
A single object matching ‘format.dist’ was found
It was found in the following places
  registered S3 method for format from namespace stats
  namespace:stats
with value

function (x, ...) 
format(as.vector(x), ...)
<bytecode: 0x556fbe971fb8>
<environment: namespace:stats>
> getAnywhere("simpleLoess") # not exported from stats
A single object matching ‘simpleLoess’ was found
It was found in the following places
  namespace:stats
with value

function (y, x, weights, span = 0.75, degree = 2L, parametric = FALSE, 
    drop.square = FALSE, normalize = TRUE, statistics = "approximate", 
    surface = "interpolate", cell, iterations, iterTrace, trace.hat) 
{
    D <- as.integer(NCOL(x))
    if (is.na(D)) 
        stop("invalid NCOL(X)")
    if (D > 4) 
        stop("only 1-4 predictors are allowed")
    N <- as.integer(NROW(x))
    if (is.na(N)) 
        stop("invalid NROW(X)")
    if (!N || !D) 
        stop("invalid 'x'")
    if (length(y) != N) 
        stop("invalid 'y'")
    x <- as.matrix(x)
    storage.mode(x) <- "double"
    storage.mode(y) <- "double"
    storage.mode(weights) <- "double"
    max.kd <- max(N, 200L)
    robust <- rep_len(1, N)
    if (normalize && D > 1L) {
        trim <- ceiling(0.1 * N)
        divisor <- sqrt(apply(apply(x, 2L, sort)[seq(trim + 1, 
            N - trim), , drop = FALSE], 2L, var))
        x <- x/rep(divisor, rep_len(N, D))
    }
    else divisor <- 1
    sum.drop.sqr <- sum(drop.square)
    sum.parametric <- sum(parametric)
    nonparametric <- sum(!parametric)
    order.parametric <- order(parametric)
    x <- x[, order.parametric]
    order.drop.sqr <- (2L - drop.square)[order.parametric]
    if (degree == 1L && sum.drop.sqr) 
        stop("specified the square of a factor predictor to be dropped when degree = 1")
    if (D == 1L && sum.drop.sqr) 
        stop("specified the square of a predictor to be dropped with only one numeric predictor")
    if (sum.parametric == D) 
        stop("specified parametric for all predictors")
    if (length(span) != 1L) 
        stop("invalid argument 'span'")
    if (length(cell) != 1L) 
        stop("invalid argument 'cell'")
    if (length(degree) != 1L) 
        stop("invalid argument 'degree'")
    if (surface == "interpolate" && statistics == "approximate") 
        statistics <- if (trace.hat == "exact") 
            "1.approx"
        else "2.approx"
    surf.stat <- paste(surface, statistics, sep = "/")
    do.rob <- (iterations > 1L)
    if (!do.rob && iterTrace) {
        warning(sprintf(gettext("iterTrace = %d is not obeyed since iterations = %d"), 
            iterTrace, iterations))
        iterTrace <- FALSE
    }
    no.st <- (statistics == "none")
    if (iterTrace) 
        wRSS <- NA
    for (j in seq_len(iterations)) {
        no.st <- (statistics == "none")
        z <- .C(C_loess_raw, y, x, if (no.st) 1 else weights, 
            if (no.st) weights * robust else 1, D, N, as.double(span), 
            as.integer(degree), as.integer(nonparametric), as.integer(order.drop.sqr), 
            as.integer(sum.drop.sqr), as.double(span * cell), 
            as.character(surf.stat), fitted.values = double(N), 
            parameter = integer(7L), a = integer(max.kd), xi = double(max.kd), 
            vert = double(2L * D), vval = double((D + 1L) * max.kd), 
            diagonal = double(N), trL = double(1L), delta1 = double(1L), 
            delta2 = double(1L), as.integer(surf.stat == "interpolate/exact"))
        fitted <- z$fitted.values
        fitted.residuals <- y - fitted
        if (j < iterations) {
            if (iterTrace) 
                old.rob <- robust
            robust <- .Fortran(C_lowesw, fitted.residuals, N, 
                robust = double(N), integer(N))$robust
        }
        if (j == 1) {
            trace.hat.out <- z$trL
            one.delta <- z$delta1
            two.delta <- z$delta2
            if (do.rob) {
                statistics <- "none"
                surf.stat <- paste(surface, statistics, sep = "/")
                no.st <- TRUE
            }
        }
        if (iterTrace) {
            oSS <- wRSS
            wRSS <- sum(weights * fitted.residuals^2)
            del.SS <- abs(oSS - wRSS)/(if (wRSS == 0) 
                1
            else wRSS)
            d.rob.w <- if (j < iterations) 
                sum(abs(old.rob - robust))/sum(robust)
            else NA
            cat(sprintf("iter.%2d: wRSS=%#14.9g, rel. changes: (SS=%#9.4g, rob.wgts=%#9.4g)\n", 
                j, wRSS, del.SS, d.rob.w))
            if (iterTrace >= 2 && j < iterations) {
                cat("robustness weights:\n")
                print(quantile(robust, probs = (0:8)/8), digits = 3)
            }
        }
    }
    if (surface == "interpolate") {
        pars <- setNames(z$parameter, c("d", "n", "vc", "nc", 
            "nv", "liv", "lv"))
        enough <- (D + 1L) * pars[["nv"]]
        fit.kd <- list(parameter = pars, a = z$a[1L:pars[4L]], 
            xi = z$xi[1L:pars[4L]], vert = z$vert, vval = z$vval[1L:enough])
    }
    if (do.rob) {
        pseudovalues <- .Fortran(C_lowesp, N, as.double(y), fitted, 
            as.double(weights), as.double(robust), integer(N), 
            pseudovalues = double(N))$pseudovalues
        zz <- .C(C_loess_raw, pseudovalues, x, weights, weights, 
            D, N, as.double(span), as.integer(degree), as.integer(nonparametric), 
            as.integer(order.drop.sqr), as.integer(sum.drop.sqr), 
            as.double(span * cell), as.character(surf.stat), 
            fitted = double(N), parameter = integer(7L), a = integer(max.kd), 
            xi = double(max.kd), vert = double(2L * D), vval = double((D + 
                1L) * max.kd), diagonal = double(N), trL = double(1L), 
            delta1 = double(1L), delta2 = double(1L), 0L)[["fitted"]]
        pseudo.resid <- pseudovalues - zz
    }
    sum.squares <- if (do.rob) 
        sum(weights * pseudo.resid^2)
    else sum(weights * fitted.residuals^2)
    enp <- one.delta + 2 * trace.hat.out - N
    s <- sqrt(sum.squares/one.delta)
    structure(class = "loess", list(n = N, fitted = fitted, residuals = fitted.residuals, 
        enp = enp, s = s, one.delta = one.delta, two.delta = two.delta, 
        trace.hat = trace.hat.out, divisor = divisor, robust = robust, 
        pars = list(span = span, degree = degree, normalize = normalize, 
            parametric = parametric, drop.square = drop.square, 
            surface = surface, cell = cell, family = if (iterations <= 
                1L) "gaussian" else "symmetric", trace.hat = trace.hat, 
            iterations = iterations), kd = if (surface == "interpolate") fit.kd))
}
<bytecode: 0x556fbe9936c0>
<environment: namespace:stats>
> argsAnywhere(format.dist)
function (x, ...) 
NULL
> 
> 
> 
> cleanEx()
> nameEx("getFromNamespace")
> ### * getFromNamespace
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getFromNamespace
> ### Title: Utility Functions for Developing Namespaces
> ### Aliases: assignInNamespace assignInMyNamespace getFromNamespace
> ###   fixInNamespace
> ### Keywords: data
> 
> ### ** Examples
> 
> getFromNamespace("findGeneric", "utils")
function (fname, envir, warnS4only = TRUE) 
{
    if (!exists(fname, mode = "function", envir = envir)) 
        return("")
    f <- get(fname, mode = "function", envir = envir)
    if (.isMethodsDispatchOn() && methods::is(f, "genericFunction")) {
        fMethsEnv <- methods::getMethodsForDispatch(f)
        meths <- as.list(fMethsEnv, all.names = TRUE)
        r <- meths[grep("^ANY\\b", names(meths))]
        if (any(ddm <- vapply(r, methods::is, logical(1L), "derivedDefaultMethod"))) 
            f <- r[ddm][[1]]@.Data
        else if (warnS4only) 
            warning(gettextf("'%s' is a formal generic function; S3 methods will not likely be found", 
                fname), domain = NA)
    }
    isUMEbrace <- function(e) {
        for (ee in as.list(e[-1L])) if (nzchar(res <- isUME(ee))) 
            return(res)
        ""
    }
    isUMEif <- function(e) {
        if (length(e) == 3L) 
            isUME(e[[3L]])
        else {
            if (nzchar(res <- isUME(e[[3L]]))) 
                res
            else if (nzchar(res <- isUME(e[[4L]]))) 
                res
            else ""
        }
    }
    isUME <- function(e) {
        if (is.call(e) && (is.name(e[[1L]]) || is.character(e[[1L]]))) {
            switch(as.character(e[[1L]]), UseMethod = as.character(e[[2L]]), 
                `{` = isUMEbrace(e), `if` = isUMEif(e), "")
        }
        else ""
    }
    isUME(body(f))
}
<bytecode: 0x556fba786aa8>
<environment: namespace:utils>
> ## Not run: 
> ##D fixInNamespace("predict.ppr", "stats")
> ##D stats:::predict.ppr
> ##D getS3method("predict", "ppr")
> ##D ## alternatively
> ##D fixInNamespace("predict.ppr", pos = 3)
> ##D fixInNamespace("predict.ppr", pos = "package:stats")
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("getParseData")
> ### * getParseData
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getParseData
> ### Title: Get Detailed Parse Information from Object
> ### Aliases: getParseData getParseText
> ### Keywords: utilities
> 
> ### ** Examples
> 
> fn <- function(x) {
+   x + 1 # A comment, kept as part of the source
+ }
> 
> d <- getParseData(fn)
> if (!is.null(d)) {
+   plus <- which(d$token == "'+'")
+   sum <- d$parent[plus]
+   print(d[as.character(sum),])
+   print(getParseText(d, sum))
+ }
> 
> 
> 
> cleanEx()
> nameEx("getS3method")
> ### * getS3method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getS3method
> ### Title: Get an S3 Method
> ### Aliases: getS3method
> ### Keywords: data methods
> 
> ### ** Examples
> 
> require(stats)
> exists("predict.ppr") # false
[1] FALSE
> getS3method("predict", "ppr")
function (object, newdata, ...) 
{
    if (missing(newdata)) 
        return(fitted(object))
    if (!is.null(object$terms)) {
        newdata <- as.data.frame(newdata)
        rn <- row.names(newdata)
        Terms <- delete.response(object$terms)
        m <- model.frame(Terms, newdata, na.action = na.omit, 
            xlev = object$xlevels)
        if (!is.null(cl <- attr(Terms, "dataClasses"))) 
            .checkMFClasses(cl, m)
        keep <- match(row.names(m), rn)
        x <- model.matrix(Terms, m, contrasts.arg = object$contrasts)
    }
    else {
        x <- as.matrix(newdata)
        keep <- seq_len(nrow(x))
        rn <- dimnames(x)[[1L]]
    }
    if (ncol(x) != object$p) 
        stop("wrong number of columns in 'x'")
    res <- matrix(NA, length(keep), object$q, dimnames = list(rn, 
        object$ynames))
    res[keep, ] <- matrix(.Fortran(C_pppred, as.integer(nrow(x)), 
        as.double(x), as.double(object$smod), y = double(nrow(x) * 
            object$q), double(2 * object$smod[4L]))$y, ncol = object$q)
    drop(res)
}
<bytecode: 0x556fbea18d78>
<environment: namespace:stats>
> 
> 
> 
> cleanEx()
> nameEx("getWindowsHandle")
> ### * getWindowsHandle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getWindowsHandle
> ### Title: Get a Windows Handle
> ### Aliases: getWindowsHandle
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows")
+   print( getWindowsHandle() )
> 
> 
> 
> cleanEx()
> nameEx("getWindowsHandles")
> ### * getWindowsHandles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getWindowsHandles
> ### Title: Get handles of Windows in the MS Windows RGui
> ### Aliases: getWindowsHandles
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("glob2rx")
> ### * glob2rx
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glob2rx
> ### Title: Change Wildcard or Globbing Pattern into Regular Expression
> ### Aliases: glob2rx
> ### Keywords: file character utilities
> 
> ### ** Examples
> 
> stopifnot(glob2rx("abc.*") == "^abc\\.",
+           glob2rx("a?b.*") == "^a.b\\.",
+           glob2rx("a?b.*", trim.tail = FALSE) == "^a.b\\..*$",
+           glob2rx("*.doc") == "^.*\\.doc$",
+           glob2rx("*.doc", trim.head = TRUE) == "\\.doc$",
+           glob2rx("*.t*")  == "^.*\\.t",
+           glob2rx("*.t??") == "^.*\\.t..$",
+           glob2rx("*[*")  == "^.*\\["
+ )
> 
> 
> 
> cleanEx()
> nameEx("globalVariables")
> ### * globalVariables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: globalVariables
> ### Title: Declarations Used in Checking a Package
> ### Aliases: globalVariables suppressForeignCheck
> ### Keywords: packages
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## assume your package has some code that assigns ".obj1" and ".obj2"
> ##D ## but not in a way that codetools can find.
> ##D ## In the same source file (to remind you that you did it) add:
> ##D if(getRversion() >= "2.15.1")  utils::globalVariables(c(".obj1", "obj2"))
> ##D 
> ##D ## To suppress messages about a run-time calculated native symbol, 
> ##D ## save it to a local variable.
> ##D 
> ##D ## At top level, put this:
> ##D if(getRversion() >= "3.1.0") utils::suppressForeignCheck("localvariable")
> ##D 
> ##D ## Within your function, do the call like this:
> ##D localvariable <- if (condition) entry1 else entry2
> ##D .Call(localvariable, 1, 2, 3)
> ##D 
> ##D ## HOWEVER, it is much better practice to write code
> ##D ## that can be checked thoroughly, e.g.
> ##D if(condition) .Call(entry1, 1, 2, 3) else .Call(entry2, 1, 2, 3)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("hasName")
> ### * hasName
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hasName
> ### Title: Check for Name
> ### Aliases: hasName
> ### Keywords: manip logic
> 
> ### ** Examples
> 
> x <- list(abc = 1, def = 2)
> !is.null(x$abc) # correct
[1] TRUE
> !is.null(x$a)   # this is the wrong test!
[1] TRUE
> hasName(x, "abc")
[1] TRUE
> hasName(x, "a")
[1] FALSE
> 
> 
> 
> cleanEx()
> nameEx("hashtab")
> ### * hashtab
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hashtab
> ### Title: Hash Tables (Experimental)
> ### Aliases: hashtab gethash sethash remhash numhash typhash maphash
> ###   clrhash is.hashtab [[.hashtab [[<-.hashtab print.hashtab
> ###   format.hashtab length.hashtab str.hashtab
> ### Keywords: data programming utilities
> 
> ### ** Examples
> 
> ## Create a new empty hash table.
> h1 <- hashtab()
> h1
<hashtable 0x556fbea7e5e0: count = 0, type = "identical">
> 
> ## Add some key/value pairs.
> sethash(h1, NULL, 1)
> sethash(h1, .GlobalEnv, 2)
> for (i in seq_along(LETTERS)) sethash(h1, LETTERS[i], i)
> 
> ## Look up values for some keys.
> gethash(h1, NULL)
[1] 1
> gethash(h1, .GlobalEnv)
[1] 2
> gethash(h1, "Q")
[1] 17
> 
> ## Remove an entry.
> (remhash(h1, NULL))
[1] TRUE
> gethash(h1, NULL)
NULL
> (remhash(h1, "XYZ"))
[1] FALSE
> 
> ## Using the element operator.
> h1[["ABC"]]
NULL
> h1[["ABC", nomatch = 77]]
[1] 77
> h1[["ABC"]] <- "DEF"
> h1[["ABC"]]
[1] "DEF"
> 
> ## Integers and real numbers that are equal are considered different
> ## (not identical) as keys:
> identical(3, 3L)
[1] FALSE
> sethash(h1, 3L, "DEF")
> gethash(h1, 3L)
[1] "DEF"
> gethash(h1, 3)
NULL
> 
> ## Two variables can refer to the same hash table.
> h2 <- h1
> identical(h1, h2)
[1] TRUE
> ## set in one, see in the "other"  <==> really one object with 2 names
> sethash(h2, NULL, 77)
> gethash(h1, NULL)
[1] 77
> str(h1)
class 'hashtab': 30 entries; type="identical", addr=<pointer: 0x556fbea7e5e0> 
> 
> ## An example of using  maphash():  get all hashkeys of a hash table:
> hashkeys <- function(h) {
+   val <- vector("list", numhash(h))
+   idx <- 0
+   maphash(h, function(k, v) { idx <<- idx + 1
+                               val[idx] <<- list(k) })
+   val
+ }
> 
> ## IGNORE_RDIFF_BEGIN
> kList <- hashkeys(h1)
> str(kList) # the *order* is "arbitrary" & cannot be "known"
List of 30
 $ : NULL
 $ : chr "W"
 $ : chr "Y"
 $ : chr "ABC"
 $ : chr "X"
 $ : chr "V"
 $ : chr "U"
 $ : chr "J"
 $ : chr "T"
 $ : chr "E"
 $ : chr "G"
 $ : chr "S"
 $ : chr "K"
 $ : int 3
 $ : chr "R"
 $ : chr "P"
 $ : chr "C"
 $ :<environment: R_GlobalEnv> 
 $ : chr "N"
 $ : chr "O"
 $ : chr "F"
 $ : chr "M"
 $ : chr "B"
 $ : chr "Z"
 $ : chr "A"
 $ : chr "L"
 $ : chr "D"
 $ : chr "H"
 $ : chr "Q"
 $ : chr "I"
> ## IGNORE_RDIFF_END
> 
> 
> 
> cleanEx()
> nameEx("head")
> ### * head
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: head
> ### Title: Return the First or Last Parts of an Object
> ### Aliases: head head.data.frame head.default head.function head.ftable
> ###   head.matrix tail tail.data.frame tail.default tail.function
> ###   tail.ftable tail.table tail.matrix tail.array
> ### Keywords: manip
> 
> ### ** Examples
> 
> head(letters)
[1] "a" "b" "c" "d" "e" "f"
> head(letters, n = -6L)
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t"
> 
> head(freeny.x, n = 10L)
      lag quarterly revenue price index income level market potential
 [1,]               8.79636     4.70997      5.82110          12.9699
 [2,]               8.79236     4.70217      5.82558          12.9733
 [3,]               8.79137     4.68944      5.83112          12.9774
 [4,]               8.81486     4.68558      5.84046          12.9806
 [5,]               8.81301     4.64019      5.85036          12.9831
 [6,]               8.90751     4.62553      5.86464          12.9854
 [7,]               8.93673     4.61991      5.87769          12.9900
 [8,]               8.96161     4.61654      5.89763          12.9943
 [9,]               8.96044     4.61407      5.92574          12.9992
[10,]               9.00868     4.60766      5.94232          13.0033
> head(freeny.y)
[1] 8.79236 8.79137 8.81486 8.81301 8.90751 8.93673
> 
> head(iris3)
, , Setosa

     Sepal L. Sepal W. Petal L. Petal W.
[1,]      5.1      3.5      1.4      0.2
[2,]      4.9      3.0      1.4      0.2
[3,]      4.7      3.2      1.3      0.2
[4,]      4.6      3.1      1.5      0.2
[5,]      5.0      3.6      1.4      0.2
[6,]      5.4      3.9      1.7      0.4

, , Versicolor

     Sepal L. Sepal W. Petal L. Petal W.
[1,]      7.0      3.2      4.7      1.4
[2,]      6.4      3.2      4.5      1.5
[3,]      6.9      3.1      4.9      1.5
[4,]      5.5      2.3      4.0      1.3
[5,]      6.5      2.8      4.6      1.5
[6,]      5.7      2.8      4.5      1.3

, , Virginica

     Sepal L. Sepal W. Petal L. Petal W.
[1,]      6.3      3.3      6.0      2.5
[2,]      5.8      2.7      5.1      1.9
[3,]      7.1      3.0      5.9      2.1
[4,]      6.3      2.9      5.6      1.8
[5,]      6.5      3.0      5.8      2.2
[6,]      7.6      3.0      6.6      2.1

> head(iris3, c(6L, 2L))
, , Setosa

     Sepal L. Sepal W.
[1,]      5.1      3.5
[2,]      4.9      3.0
[3,]      4.7      3.2
[4,]      4.6      3.1
[5,]      5.0      3.6
[6,]      5.4      3.9

, , Versicolor

     Sepal L. Sepal W.
[1,]      7.0      3.2
[2,]      6.4      3.2
[3,]      6.9      3.1
[4,]      5.5      2.3
[5,]      6.5      2.8
[6,]      5.7      2.8

, , Virginica

     Sepal L. Sepal W.
[1,]      6.3      3.3
[2,]      5.8      2.7
[3,]      7.1      3.0
[4,]      6.3      2.9
[5,]      6.5      3.0
[6,]      7.6      3.0

> head(iris3, c(6L, -1L, 2L))
, , Setosa

     Sepal L. Sepal W. Petal L.
[1,]      5.1      3.5      1.4
[2,]      4.9      3.0      1.4
[3,]      4.7      3.2      1.3
[4,]      4.6      3.1      1.5
[5,]      5.0      3.6      1.4
[6,]      5.4      3.9      1.7

, , Versicolor

     Sepal L. Sepal W. Petal L.
[1,]      7.0      3.2      4.7
[2,]      6.4      3.2      4.5
[3,]      6.9      3.1      4.9
[4,]      5.5      2.3      4.0
[5,]      6.5      2.8      4.6
[6,]      5.7      2.8      4.5

> 
> tail(letters)
[1] "u" "v" "w" "x" "y" "z"
> tail(letters, n = -6L)
 [1] "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y"
[20] "z"
> 
> tail(freeny.x)
      lag quarterly revenue price index income level market potential
[34,]               9.69405     4.30909      6.17369          13.1459
[35,]               9.69958     4.30909      6.16135          13.1520
[36,]               9.68683     4.30552      6.18231          13.1593
[37,]               9.71774     4.29627      6.18768          13.1579
[38,]               9.74924     4.27839      6.19377          13.1625
[39,]               9.77536     4.27789      6.20030          13.1664
> ## the bottom-right "corner" :
> tail(freeny.x, n = c(4, 2))
      income level market potential
[36,]      6.18231          13.1593
[37,]      6.18768          13.1579
[38,]      6.19377          13.1625
[39,]      6.20030          13.1664
> tail(freeny.y)
[1] 9.69958 9.68683 9.71774 9.74924 9.77536 9.79424
> 
> tail(iris3)
, , Setosa

      Sepal L. Sepal W. Petal L. Petal W.
[45,]      5.1      3.8      1.9      0.4
[46,]      4.8      3.0      1.4      0.3
[47,]      5.1      3.8      1.6      0.2
[48,]      4.6      3.2      1.4      0.2
[49,]      5.3      3.7      1.5      0.2
[50,]      5.0      3.3      1.4      0.2

, , Versicolor

      Sepal L. Sepal W. Petal L. Petal W.
[45,]      5.6      2.7      4.2      1.3
[46,]      5.7      3.0      4.2      1.2
[47,]      5.7      2.9      4.2      1.3
[48,]      6.2      2.9      4.3      1.3
[49,]      5.1      2.5      3.0      1.1
[50,]      5.7      2.8      4.1      1.3

, , Virginica

      Sepal L. Sepal W. Petal L. Petal W.
[45,]      6.7      3.3      5.7      2.5
[46,]      6.7      3.0      5.2      2.3
[47,]      6.3      2.5      5.0      1.9
[48,]      6.5      3.0      5.2      2.0
[49,]      6.2      3.4      5.4      2.3
[50,]      5.9      3.0      5.1      1.8

> tail(iris3, c(6L, 2L))
, , Setosa

      Petal L. Petal W.
[45,]      1.9      0.4
[46,]      1.4      0.3
[47,]      1.6      0.2
[48,]      1.4      0.2
[49,]      1.5      0.2
[50,]      1.4      0.2

, , Versicolor

      Petal L. Petal W.
[45,]      4.2      1.3
[46,]      4.2      1.2
[47,]      4.2      1.3
[48,]      4.3      1.3
[49,]      3.0      1.1
[50,]      4.1      1.3

, , Virginica

      Petal L. Petal W.
[45,]      5.7      2.5
[46,]      5.2      2.3
[47,]      5.0      1.9
[48,]      5.2      2.0
[49,]      5.4      2.3
[50,]      5.1      1.8

> tail(iris3, c(6L, -1L, 2L))
, , Versicolor

      Sepal W. Petal L. Petal W.
[45,]      2.7      4.2      1.3
[46,]      3.0      4.2      1.2
[47,]      2.9      4.2      1.3
[48,]      2.9      4.3      1.3
[49,]      2.5      3.0      1.1
[50,]      2.8      4.1      1.3

, , Virginica

      Sepal W. Petal L. Petal W.
[45,]      3.3      5.7      2.5
[46,]      3.0      5.2      2.3
[47,]      2.5      5.0      1.9
[48,]      3.0      5.2      2.0
[49,]      3.4      5.4      2.3
[50,]      3.0      5.1      1.8

> 
> ## iris with dimnames stripped
> a3d <- iris3 ; dimnames(a3d) <- NULL
> tail(a3d, c(6, -1, 2)) # keepnums = TRUE is default here!
, , 2

      [,2] [,3] [,4]
[45,]  2.7  4.2  1.3
[46,]  3.0  4.2  1.2
[47,]  2.9  4.2  1.3
[48,]  2.9  4.3  1.3
[49,]  2.5  3.0  1.1
[50,]  2.8  4.1  1.3

, , 3

      [,2] [,3] [,4]
[45,]  3.3  5.7  2.5
[46,]  3.0  5.2  2.3
[47,]  2.5  5.0  1.9
[48,]  3.0  5.2  2.0
[49,]  3.4  5.4  2.3
[50,]  3.0  5.1  1.8

> tail(a3d, c(6, -1, 2), keepnums = FALSE)
, , 1

     [,1] [,2] [,3]
[1,]  2.7  4.2  1.3
[2,]  3.0  4.2  1.2
[3,]  2.9  4.2  1.3
[4,]  2.9  4.3  1.3
[5,]  2.5  3.0  1.1
[6,]  2.8  4.1  1.3

, , 2

     [,1] [,2] [,3]
[1,]  3.3  5.7  2.5
[2,]  3.0  5.2  2.3
[3,]  2.5  5.0  1.9
[4,]  3.0  5.2  2.0
[5,]  3.4  5.4  2.3
[6,]  3.0  5.1  1.8

> 
> ## data frame w/ a (non-standard) attribute:
> treeS <- structure(trees, foo = "bar")
> (n <- nrow(treeS))
[1] 31
> stopifnot(exprs = { # attribute is kept
+     identical(htS <- head(treeS), treeS[1:6, ])
+     identical(attr(htS, "foo") , "bar")
+     identical(tlS <- tail(treeS), treeS[(n-5):n, ])
+     ## BUT if I use "useAttrib(.)", this is *not* ok, when n is of length 2:
+     ## --- because [i,j]-indexing of data frames *also* drops "other" attributes ..
+     identical(tail(treeS, 3:2), treeS[(n-2):n, 2:3] )
+ })
> 
> tail(library) # last lines of function
                                   
374         return(y)              
375     }                          
376     if (logical.return)        
377         TRUE                   
378     else invisible(.packages())
379 }                              
> 
> head(stats::ftable(Titanic))
                                               
                          "Survived" "No" "Yes"
 "Class" "Sex"    "Age"                        
 "1st"   "Male"   "Child"               0     5
                  "Adult"             118    57
         "Female" "Child"               0     1
                  "Adult"               4   140
 "2nd"   "Male"   "Child"               0    11
                  "Adult"             154    14
> 
> ## 1d-array (with named dim) :
> a1 <- array(1:7, 7); names(dim(a1)) <- "O2"
> stopifnot(exprs = {
+   identical( tail(a1, 10), a1)
+   identical( head(a1, 10), a1)
+   identical( head(a1, 1), a1 [1 , drop=FALSE] ) # was a1[1] in R <= 3.6.x
+   identical( tail(a1, 2), a1[6:7])
+   identical( tail(a1, 1), a1 [7 , drop=FALSE] ) # was a1[7] in R <= 3.6.x
+ })
> 
> 
> 
> cleanEx()
> nameEx("help")
> ### * help
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: help
> ### Title: Documentation
> ### Aliases: help
> ### Keywords: documentation
> 
> ### ** Examples
> 
> help()
help                   package:utils                   R Documentation

_D_o_c_u_m_e_n_t_a_t_i_o_n

_D_e_s_c_r_i_p_t_i_o_n:

     ‘help’ is the primary interface to the help systems.

_U_s_a_g_e:

     help(topic, package = NULL, lib.loc = NULL,
          verbose = getOption("verbose"),
          try.all.packages = getOption("help.try.all.packages"),
          help_type = getOption("help_type"))
     
_A_r_g_u_m_e_n_t_s:

   topic: usually, a name or character string specifying the topic for
          which help is sought.  A character string (enclosed in
          explicit single or double quotes) is always taken as naming a
          topic.

          If the value of ‘topic’ is a length-one character vector the
          topic is taken to be the value of the only element.
          Otherwise ‘topic’ must be a name or a reserved word (if
          syntactically valid) or character string.

          See ‘Details’ for what happens if this is omitted.

 package: a name or character vector giving the packages to look into
          for documentation, or ‘NULL’.  By default, all packages whose
          namespaces are loaded are used.  To avoid a name being
          deparsed use e.g.  ‘(pkg_ref)’ (see the examples).

 lib.loc: a character vector of directory names of R libraries, or
          ‘NULL’.  The default value of ‘NULL’ corresponds to all
          libraries currently known.  If the default is used, the
          loaded packages are searched before the libraries.  This is
          not used for HTML help (see ‘Details’).

 verbose: logical; if ‘TRUE’, the file name is reported.

try.all.packages: logical; see ‘Note’.

help_type: character string: the type of help required.  Possible
          values are ‘"text"’, ‘"html"’ and ‘"pdf"’.  Case is ignored,
          and partial matching is allowed.

_D_e_t_a_i_l_s:

     The following types of help are available:

        • Plain text help

        • HTML help pages with hyperlinks to other topics, shown in a
          browser by ‘browseURL’.

          (On Unix-alikes, where possible an existing browser window is
          re-used: the macOS GUI uses its own browser window.)

          If for some reason HTML help is unavailable (see
          ‘startDynamicHelp’), plain text help will be used instead.

        • For ‘help’ only, typeset as PDF - see the section on ‘Offline
          help’.

     On Unix-alikes: The ‘factory-fresh’ default is text help except
          from the macOS GUI, which uses HTML help displayed in its own
          browser window.

     On Windows: The default for the type of help is selected when R is
          installed - the ‘factory-fresh’ default is HTML help.

     The rendering of text help will use directional quotes in suitable
     locales (UTF-8 and single-byte Windows locales): sometimes the
     fonts used do not support these quotes so this can be turned off
     by setting ‘options(useFancyQuotes = FALSE)’.

     ‘topic’ is not optional: if it is omitted R will give

        • If a package is specified, (text or, in interactive use only,
          HTML) information on the package, including hints/links to
          suitable help topics.

        • If ‘lib.loc’ only is specified, a (text) list of available
          packages.

        • Help on ‘help’ itself if none of the first three arguments is
          specified.

     Some topics need to be quoted (by backticks) or given as a
     character string.  These include those which cannot syntactically
     appear on their own such as unary and binary operators, ‘function’
     and control-flow reserved words (including ‘if’, ‘else’ ‘for’,
     ‘in’, ‘repeat’, ‘while’, ‘break’ and ‘next’).  The other
     ‘reserved’ words can be used as if they were names, for example
     ‘TRUE’, ‘NA’ and ‘Inf’.

     If multiple help files matching ‘topic’ are found, in interactive
     use a menu is presented for the user to choose one: in batch use
     the first on the search path is used.  (For HTML help the menu
     will be an HTML page, otherwise a graphical menu if possible if
     ‘getOption("menu.graphics")’ is true, the default.)

     Note that HTML help does not make use of ‘lib.loc’: it will always
     look first in the loaded packages and then along ‘.libPaths()’.

_O_f_f_l_i_n_e _h_e_l_p:

     Typeset documentation is produced by running the LaTeX version of
     the help page through ‘pdflatex’: this will produce a PDF file.

     The appearance of the output can be customized through a file
     ‘Rhelp.cfg’ somewhere in your LaTeX search path: this will be
     input as a LaTeX style file after ‘Rd.sty’.  Some environment
     variables are consulted, notably ‘R_PAPERSIZE’ (_via_
     ‘getOption("papersize")’) and ‘R_RD4PDF’ (see ‘Making manuals’ in
     the ‘R Installation and Administration’ manual).

     If there is a function ‘offline_help_helper’ in the workspace or
     further down the search path it is used to do the typesetting,
     otherwise the function of that name in the ‘utils’ namespace (to
     which the first paragraph applies).  It should accept at least two
     arguments, the name of the LaTeX file to be typeset and the type
     (which is nowadays ignored).  It accepts a third argument,
     ‘texinputs’, which will give the graphics path when the help
     document contains figures, and will otherwise not be supplied.

_N_o_t_e:

     Unless ‘lib.loc’ is specified explicitly, the loaded packages are
     searched before those in the specified libraries.  This ensures
     that if a library is loaded from a library not in the known
     library trees, then the help from the loaded library is used.  If
     ‘lib.loc’ is specified explicitly, the loaded packages are _not_
     searched.

     If this search fails and argument ‘try.all.packages’ is ‘TRUE’ and
     neither ‘packages’ nor ‘lib.loc’ is specified, then all the
     packages in the known library trees are searched for help on
     ‘topic’ and a list of (any) packages where help may be found is
     displayed (with hyperlinks for ‘help_type = "html"’).  *NB:*
     searching all packages can be slow, especially the first time
     (caching of files by the OS can expedite subsequent searches
     dramatically).

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘?’ for shortcuts to help topics.

     ‘help.search()’ or ‘??’ for finding help pages on a vague topic;
     ‘help.start()’ which opens the HTML version of the R help pages;
     ‘library()’ for listing available packages and the help objects
     they contain; ‘data()’ for listing available data sets;
     ‘methods()’.

     Use ‘prompt()’ to get a prototype for writing ‘help’ pages of your
     own package.

_E_x_a_m_p_l_e_s:

     help()
     help(help)              # the same
     
     help(lapply)
     
     help("for")             # or ?"for", but quotes/backticks are needed
     
     try({# requires working TeX installation:
      help(dgamma, help_type = "pdf")
      ## -> nicely formatted pdf -- including math formula -- for help(dgamma):
      system2(getOption("pdfviewer"), "dgamma.pdf", wait = FALSE)
     })
     
     help(package = "splines") # get help even when package is not loaded
     
     topi <- "women"
     help(topi)
     
     try(help("bs", try.all.packages = FALSE)) # reports not found (an error)
     help("bs", try.all.packages = TRUE)       # reports can be found
                                               # in package 'splines'
     
     ## For programmatic use:
     topic <- "family"; pkg_ref <- "stats"
     help((topic), (pkg_ref))
     

> help(help)              # the same
help                   package:utils                   R Documentation

_D_o_c_u_m_e_n_t_a_t_i_o_n

_D_e_s_c_r_i_p_t_i_o_n:

     ‘help’ is the primary interface to the help systems.

_U_s_a_g_e:

     help(topic, package = NULL, lib.loc = NULL,
          verbose = getOption("verbose"),
          try.all.packages = getOption("help.try.all.packages"),
          help_type = getOption("help_type"))
     
_A_r_g_u_m_e_n_t_s:

   topic: usually, a name or character string specifying the topic for
          which help is sought.  A character string (enclosed in
          explicit single or double quotes) is always taken as naming a
          topic.

          If the value of ‘topic’ is a length-one character vector the
          topic is taken to be the value of the only element.
          Otherwise ‘topic’ must be a name or a reserved word (if
          syntactically valid) or character string.

          See ‘Details’ for what happens if this is omitted.

 package: a name or character vector giving the packages to look into
          for documentation, or ‘NULL’.  By default, all packages whose
          namespaces are loaded are used.  To avoid a name being
          deparsed use e.g.  ‘(pkg_ref)’ (see the examples).

 lib.loc: a character vector of directory names of R libraries, or
          ‘NULL’.  The default value of ‘NULL’ corresponds to all
          libraries currently known.  If the default is used, the
          loaded packages are searched before the libraries.  This is
          not used for HTML help (see ‘Details’).

 verbose: logical; if ‘TRUE’, the file name is reported.

try.all.packages: logical; see ‘Note’.

help_type: character string: the type of help required.  Possible
          values are ‘"text"’, ‘"html"’ and ‘"pdf"’.  Case is ignored,
          and partial matching is allowed.

_D_e_t_a_i_l_s:

     The following types of help are available:

        • Plain text help

        • HTML help pages with hyperlinks to other topics, shown in a
          browser by ‘browseURL’.

          (On Unix-alikes, where possible an existing browser window is
          re-used: the macOS GUI uses its own browser window.)

          If for some reason HTML help is unavailable (see
          ‘startDynamicHelp’), plain text help will be used instead.

        • For ‘help’ only, typeset as PDF - see the section on ‘Offline
          help’.

     On Unix-alikes: The ‘factory-fresh’ default is text help except
          from the macOS GUI, which uses HTML help displayed in its own
          browser window.

     On Windows: The default for the type of help is selected when R is
          installed - the ‘factory-fresh’ default is HTML help.

     The rendering of text help will use directional quotes in suitable
     locales (UTF-8 and single-byte Windows locales): sometimes the
     fonts used do not support these quotes so this can be turned off
     by setting ‘options(useFancyQuotes = FALSE)’.

     ‘topic’ is not optional: if it is omitted R will give

        • If a package is specified, (text or, in interactive use only,
          HTML) information on the package, including hints/links to
          suitable help topics.

        • If ‘lib.loc’ only is specified, a (text) list of available
          packages.

        • Help on ‘help’ itself if none of the first three arguments is
          specified.

     Some topics need to be quoted (by backticks) or given as a
     character string.  These include those which cannot syntactically
     appear on their own such as unary and binary operators, ‘function’
     and control-flow reserved words (including ‘if’, ‘else’ ‘for’,
     ‘in’, ‘repeat’, ‘while’, ‘break’ and ‘next’).  The other
     ‘reserved’ words can be used as if they were names, for example
     ‘TRUE’, ‘NA’ and ‘Inf’.

     If multiple help files matching ‘topic’ are found, in interactive
     use a menu is presented for the user to choose one: in batch use
     the first on the search path is used.  (For HTML help the menu
     will be an HTML page, otherwise a graphical menu if possible if
     ‘getOption("menu.graphics")’ is true, the default.)

     Note that HTML help does not make use of ‘lib.loc’: it will always
     look first in the loaded packages and then along ‘.libPaths()’.

_O_f_f_l_i_n_e _h_e_l_p:

     Typeset documentation is produced by running the LaTeX version of
     the help page through ‘pdflatex’: this will produce a PDF file.

     The appearance of the output can be customized through a file
     ‘Rhelp.cfg’ somewhere in your LaTeX search path: this will be
     input as a LaTeX style file after ‘Rd.sty’.  Some environment
     variables are consulted, notably ‘R_PAPERSIZE’ (_via_
     ‘getOption("papersize")’) and ‘R_RD4PDF’ (see ‘Making manuals’ in
     the ‘R Installation and Administration’ manual).

     If there is a function ‘offline_help_helper’ in the workspace or
     further down the search path it is used to do the typesetting,
     otherwise the function of that name in the ‘utils’ namespace (to
     which the first paragraph applies).  It should accept at least two
     arguments, the name of the LaTeX file to be typeset and the type
     (which is nowadays ignored).  It accepts a third argument,
     ‘texinputs’, which will give the graphics path when the help
     document contains figures, and will otherwise not be supplied.

_N_o_t_e:

     Unless ‘lib.loc’ is specified explicitly, the loaded packages are
     searched before those in the specified libraries.  This ensures
     that if a library is loaded from a library not in the known
     library trees, then the help from the loaded library is used.  If
     ‘lib.loc’ is specified explicitly, the loaded packages are _not_
     searched.

     If this search fails and argument ‘try.all.packages’ is ‘TRUE’ and
     neither ‘packages’ nor ‘lib.loc’ is specified, then all the
     packages in the known library trees are searched for help on
     ‘topic’ and a list of (any) packages where help may be found is
     displayed (with hyperlinks for ‘help_type = "html"’).  *NB:*
     searching all packages can be slow, especially the first time
     (caching of files by the OS can expedite subsequent searches
     dramatically).

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘?’ for shortcuts to help topics.

     ‘help.search()’ or ‘??’ for finding help pages on a vague topic;
     ‘help.start()’ which opens the HTML version of the R help pages;
     ‘library()’ for listing available packages and the help objects
     they contain; ‘data()’ for listing available data sets;
     ‘methods()’.

     Use ‘prompt()’ to get a prototype for writing ‘help’ pages of your
     own package.

_E_x_a_m_p_l_e_s:

     help()
     help(help)              # the same
     
     help(lapply)
     
     help("for")             # or ?"for", but quotes/backticks are needed
     
     try({# requires working TeX installation:
      help(dgamma, help_type = "pdf")
      ## -> nicely formatted pdf -- including math formula -- for help(dgamma):
      system2(getOption("pdfviewer"), "dgamma.pdf", wait = FALSE)
     })
     
     help(package = "splines") # get help even when package is not loaded
     
     topi <- "women"
     help(topi)
     
     try(help("bs", try.all.packages = FALSE)) # reports not found (an error)
     help("bs", try.all.packages = TRUE)       # reports can be found
                                               # in package 'splines'
     
     ## For programmatic use:
     topic <- "family"; pkg_ref <- "stats"
     help((topic), (pkg_ref))
     

> 
> help(lapply)
lapply                  package:base                   R Documentation

_A_p_p_l_y _a _F_u_n_c_t_i_o_n _o_v_e_r _a _L_i_s_t _o_r _V_e_c_t_o_r

_D_e_s_c_r_i_p_t_i_o_n:

     ‘lapply’ returns a list of the same length as ‘X’, each element of
     which is the result of applying ‘FUN’ to the corresponding element
     of ‘X’.

     ‘sapply’ is a user-friendly version and wrapper of ‘lapply’ by
     default returning a vector, matrix or, if ‘simplify = "array"’, an
     array if appropriate, by applying ‘simplify2array()’.  ‘sapply(x,
     f, simplify = FALSE, USE.NAMES = FALSE)’ is the same as ‘lapply(x,
     f)’.

     ‘vapply’ is similar to ‘sapply’, but has a pre-specified type of
     return value, so it can be safer (and sometimes faster) to use.

     ‘replicate’ is a wrapper for the common use of ‘sapply’ for
     repeated evaluation of an expression (which will usually involve
     random number generation).

     ‘simplify2array()’ is the utility called from ‘sapply()’ when
     ‘simplify’ is not false and is similarly called from ‘mapply()’.

_U_s_a_g_e:

     lapply(X, FUN, ...)
     
     sapply(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE)
     
     vapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE)
     
     replicate(n, expr, simplify = "array")
     
     simplify2array(x, higher = TRUE, except = c(0L, 1L))
     
_A_r_g_u_m_e_n_t_s:

       X: a vector (atomic or list) or an ‘expression’ object.  Other
          objects (including classed objects) will be coerced by
          ‘base::as.list’.

     FUN: the function to be applied to each element of ‘X’: see
          ‘Details’.  In the case of functions like ‘+’, ‘%*%’, the
          function name must be backquoted or quoted.

     ...: optional arguments to ‘FUN’.

simplify: logical or character string; should the result be simplified
          to a vector, matrix or higher dimensional array if possible?
          For ‘sapply’ it must be named and not abbreviated.  The
          default value, ‘TRUE’, returns a vector or matrix if
          appropriate, whereas if ‘simplify = "array"’ the result may
          be an ‘array’ of “rank” (=‘length(dim(.))’) one higher than
          the result of ‘FUN(X[[i]])’.

USE.NAMES: logical; if ‘TRUE’ and if ‘X’ is character, use ‘X’ as
          ‘names’ for the result unless it had names already.  Since
          this argument follows ‘...’ its name cannot be abbreviated.

FUN.VALUE: a (generalized) vector; a template for the return value from
          FUN.  See ‘Details’.

       n: integer: the number of replications.

    expr: the expression (a language object, usually a call) to
          evaluate repeatedly.

       x: a list, typically returned from ‘lapply()’.

  higher: logical; if true, ‘simplify2array()’ will produce a (“higher
          rank”) array when appropriate, whereas ‘higher = FALSE’ would
          return a matrix (or vector) only.  These two cases correspond
          to ‘sapply(*, simplify = "array")’ or ‘simplify = TRUE’,
          respectively.

  except: integer vector or ‘NULL’; the default ‘c(0L, 1L)’ corresponds
          to the exceptions used by ‘sapply’: a list with elements of
          common length 0 or 1 is not simplified to an array but is
          returned, respectively, as is or unlisted.  These exceptions
          can be disabled by specifying only a subset of ‘0:1’, or
          ‘NULL’ to always simplify to an array (if possible).

_D_e_t_a_i_l_s:

     ‘FUN’ is found by a call to ‘match.fun’ and typically is specified
     as a function or a symbol (e.g., a backquoted name) or a character
     string specifying a function to be searched for from the
     environment of the call to ‘lapply’.

     Function ‘FUN’ must be able to accept as input any of the elements
     of ‘X’.  If the latter is an atomic vector, ‘FUN’ will always be
     passed a length-one vector of the same type as ‘X’.

     Arguments in ‘...’ cannot have the same name as any of the other
     arguments, and care may be needed to avoid partial matching to
     ‘FUN’.  In general-purpose code it is good practice to name the
     first two arguments ‘X’ and ‘FUN’ if ‘...’ is passed through: this
     both avoids partial matching to ‘FUN’ and ensures that a sensible
     error message is given if arguments named ‘X’ or ‘FUN’ are passed
     through ‘...’.

     Simplification in ‘sapply’ is only attempted if ‘X’ has length
     greater than zero and if the return values from all elements of
     ‘X’ are all of the same (positive) length.  If the common length
     is one the result is a vector, and if greater than one is a matrix
     with a column corresponding to each element of ‘X’.

     Simplification is always done in ‘vapply’.  This function checks
     that all values of ‘FUN’ are compatible with the ‘FUN.VALUE’, in
     that they must have the same length and type.  (Types may be
     promoted to a higher type within the ordering logical < integer <
     double < complex, but not demoted.)

     Users of S4 classes should pass a list to ‘lapply’ and ‘vapply’:
     the internal coercion is done by the ‘as.list’ in the base
     namespace and not one defined by a user (e.g., by setting S4
     methods on the base function).

_V_a_l_u_e:

     For ‘lapply’, ‘sapply(simplify = FALSE)’ and ‘replicate(simplify =
     FALSE)’, a list.

     For ‘sapply(simplify = TRUE)’ and ‘replicate(simplify = TRUE)’: if
     ‘X’ has length zero or ‘n = 0’, an empty list.  Otherwise an
     atomic vector or matrix or list of the same length as ‘X’ (of
     length ‘n’ for ‘replicate’).  If simplification occurs, the output
     type is determined from the highest type of the return values in
     the hierarchy NULL < raw < logical < integer < double < complex <
     character < list < expression, after coercion of pairlists to
     lists.

     ‘vapply’ returns a vector or array of type matching the
     ‘FUN.VALUE’.  If ‘length(FUN.VALUE) == 1’ a vector of the same
     length as ‘X’ is returned, otherwise an array.  If ‘FUN.VALUE’ is
     not an ‘array’, the result is a matrix with ‘length(FUN.VALUE)’
     rows and ‘length(X)’ columns, otherwise an array ‘a’ with ‘dim(a)
     == c(dim(FUN.VALUE), length(X))’.

     The (Dim)names of the array value are taken from the ‘FUN.VALUE’
     if it is named, otherwise from the result of the first function
     call.  Column names of the matrix or more generally the names of
     the last dimension of the array value or names of the vector value
     are set from ‘X’ as in ‘sapply’.

_N_o_t_e:

     ‘sapply(*, simplify = FALSE, USE.NAMES = FALSE)’ is equivalent to
     ‘lapply(*)’.

     For historical reasons, the calls created by ‘lapply’ are
     unevaluated, and code has been written (e.g., ‘bquote’) that
     relies on this.  This means that the recorded call is always of
     the form ‘FUN(X[[i]], ...)’, with ‘i’ replaced by the current
     (integer or double) index.  This is not normally a problem, but it
     can be if ‘FUN’ uses ‘sys.call’ or ‘match.call’ or if it is a
     primitive function that makes use of the call.  This means that it
     is often safer to call primitive functions with a wrapper, so that
     e.g. ‘lapply(ll, function(x) is.numeric(x))’ is required to ensure
     that method dispatch for ‘is.numeric’ occurs correctly.

     If ‘expr’ is a function call, be aware of assumptions about where
     it is evaluated, and in particular what ‘...’ might refer to.  You
     can pass additional named arguments to a function call as
     additional named arguments to ‘replicate’: see ‘Examples’.

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘apply’, ‘tapply’, ‘mapply’ for applying a function to *m*ultiple
     arguments, and ‘rapply’ for a *r*ecursive version of ‘lapply()’,
     ‘eapply’ for applying a function to each entry in an
     ‘environment’.

_E_x_a_m_p_l_e_s:

     require(stats); require(graphics)
     
     x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
     # compute the list mean for each list element
     lapply(x, mean)
     # median and quartiles for each list element
     lapply(x, quantile, probs = 1:3/4)
     sapply(x, quantile)
     i39 <- sapply(3:9, seq) # list of vectors
     sapply(i39, fivenum)
     vapply(i39, fivenum,
            c(Min. = 0, "1st Qu." = 0, Median = 0, "3rd Qu." = 0, Max. = 0))
     
     ## sapply(*, "array") -- artificial example
     (v <- structure(10*(5:8), names = LETTERS[1:4]))
     f2 <- function(x, y) outer(rep(x, length.out = 3), y)
     (a2 <- sapply(v, f2, y = 2*(1:5), simplify = "array"))
     a.2 <- vapply(v, f2, outer(1:3, 1:5), y = 2*(1:5))
     stopifnot(dim(a2) == c(3,5,4), all.equal(a2, a.2),
               identical(dimnames(a2), list(NULL,NULL,LETTERS[1:4])))
     
     hist(replicate(100, mean(rexp(10))))
     
     ## use of replicate() with parameters:
     foo <- function(x = 1, y = 2) c(x, y)
     # does not work: bar <- function(n, ...) replicate(n, foo(...))
     bar <- function(n, x) replicate(n, foo(x = x))
     bar(5, x = 3)
     

> 
> help("for")             # or ?"for", but quotes/backticks are needed
Control                  package:base                  R Documentation

_C_o_n_t_r_o_l _F_l_o_w

_D_e_s_c_r_i_p_t_i_o_n:

     These are the basic control-flow constructs of the R language.
     They function in much the same way as control statements in any
     Algol-like language.  They are all reserved words.

_U_s_a_g_e:

     if(cond) expr
     if(cond) cons.expr  else  alt.expr
     
     for(var in seq) expr
     while(cond) expr
     repeat expr
     break
     next
     
_A_r_g_u_m_e_n_t_s:

    cond: A length-one logical vector that is not ‘NA’.  Other types
          are coerced to logical if possible, ignoring any class.
          (Conditions of length greater than one are an error.)

     var: A syntactical name for a variable.

     seq: An expression evaluating to a vector (including a list and an
          expression) or to a pairlist or ‘NULL’.  A factor value will
          be coerced to a character vector.  This can be a long vector.

expr, cons.expr, alt.expr: An _expression_ in a formal sense.  This is
          either a simple expression or a so-called _compound
          expression_, usually of the form ‘{ expr1 ; expr2 }’.

_D_e_t_a_i_l_s:

     ‘break’ breaks out of a ‘for’, ‘while’ or ‘repeat’ loop; control
     is transferred to the first statement outside the inner-most loop.
     ‘next’ halts the processing of the current iteration and advances
     the looping index.  Both ‘break’ and ‘next’ apply only to the
     innermost of nested loops.

     Note that it is a common mistake to forget to put braces (‘{ ..
     }’) around your statements, e.g., after ‘if(..)’ or ‘for(....)’.
     In particular, you should not have a newline between ‘}’ and
     ‘else’ to avoid a syntax error in entering a ‘if ... else’
     construct at the keyboard or via ‘source’.  For that reason, one
     (somewhat extreme) attitude of defensive programming is to always
     use braces, e.g., for ‘if’ clauses.

     The ‘seq’ in a ‘for’ loop is evaluated at the start of the loop;
     changing it subsequently does not affect the loop.  If ‘seq’ has
     length zero the body of the loop is skipped. Otherwise the
     variable ‘var’ is assigned in turn the value of each element of
     ‘seq’. You can assign to ‘var’ within the body of the loop, but
     this will not affect the next iteration.  When the loop
     terminates, ‘var’ remains as a variable containing its latest
     value.

_V_a_l_u_e:

     ‘if’ returns the value of the expression evaluated, or ‘NULL’
     invisibly if none was (which may happen if there is no ‘else’).

     ‘for’, ‘while’ and ‘repeat’ return ‘NULL’ invisibly.  ‘for’ sets
     ‘var’ to the last used element of ‘seq’, or to ‘NULL’ if it was of
     length zero.

     ‘break’ and ‘next’ do not return a value as they transfer control
     within the loop.

_R_e_f_e_r_e_n_c_e_s:

     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) _The New S
     Language_.  Wadsworth & Brooks/Cole.

_S_e_e _A_l_s_o:

     ‘Syntax’ for the basic R syntax and operators, ‘Paren’ for
     parentheses and braces.

     ‘ifelse’, ‘switch’ for other ways to control flow.

_E_x_a_m_p_l_e_s:

     for(i in 1:5) print(1:i)
     for(n in c(2,5,10,20,50)) {
        x <- stats::rnorm(n)
        cat(n, ": ", sum(x^2), "\n", sep = "")
     }
     f <- factor(sample(letters[1:5], 10, replace = TRUE))
     for(i in unique(f)) print(i)
     

> 
> 
> topi <- "women"
> help(topi)
women                 package:datasets                 R Documentation

_A_v_e_r_a_g_e _H_e_i_g_h_t_s _a_n_d _W_e_i_g_h_t_s _f_o_r _A_m_e_r_i_c_a_n _W_o_m_e_n

_D_e_s_c_r_i_p_t_i_o_n:

     This data set gives the average heights and weights for American
     women aged 30-39.

_U_s_a_g_e:

     women
     
_F_o_r_m_a_t:

     A data frame with 15 observations on 2 variables.

       ‘[,1]’  ‘height’  numeric  Height (in)  
       ‘[,2]’  ‘weight’  numeric  Weight (lbs) 
      
_D_e_t_a_i_l_s:

     The data set appears to have been taken from the American Society
     of Actuaries _Build and Blood Pressure Study_ for some (unknown to
     us) earlier year.

     The World Almanac notes: “The figures represent weights in
     ordinary indoor clothing and shoes, and heights with shoes”.

_S_o_u_r_c_e:

     The World Almanac and Book of Facts, 1975.

_R_e_f_e_r_e_n_c_e_s:

     McNeil, D. R. (1977) _Interactive Data Analysis_.  Wiley.

_E_x_a_m_p_l_e_s:

     require(graphics)
     plot(women, xlab = "Height (in)", ylab = "Weight (lb)",
          main = "women data: American women aged 30-39")
     

> 
> try(help("bs", try.all.packages = FALSE)) # reports not found (an error)
No documentation for ‘bs’ in specified packages and libraries:
you could try ‘??bs’
> help("bs", try.all.packages = TRUE)       # reports can be found
Help for topic ‘bs’ is not in any loaded package but can be found in
the following packages:

  Package               Library
  splines               /usr/local/lib/R/library
>                                           # in package 'splines'
> 
> 
> 
> cleanEx()
> nameEx("help.search")
> ### * help.search
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: help.search
> ### Title: Search the Help System
> ### Aliases: help.search ?? print.hsearch
> ### Keywords: documentation
> 
> ### ** Examples
> 
> help.search("linear models")    # In case you forgot how to fit linear
Vignettes with name or keyword or title matching ‘linear models’ using
fuzzy matching:


BradleyTerry2::BradleyTerry
                        Bradley-Terry models in R
  Concepts: generalized linear model
FME::FMEother           4. Sensitivity, Calibration, Identifiability,
                        Monte Carlo Analysis of a Nonlinear Model
HSAUR2::Ch_logistic_regression_glm
                        Chapter Logistic Regression and Generalised
                        Linear Models
HSAUR3::Ch_logistic_regression_glm
                        Chapter Logistic Regression and Generalized
                        Linear Models
brglm2::iteration       Bias reduction in generalized linear models
brms::brms_nonlinear    Estimating Non-Linear Models with brms
catdata::loglinear-birth
                        Birth Data - Loglinear Models
distributions3::poisson
                        The Poisson distribution: From basic
                        probability theory to regression models
  Concepts: generalized linear model
dlm::dlm                dlm: MLE and Bayesian analysis of Dynamic
                        Linear Models
flexmix::regression-examples
                        Applications of finite mixtures of regression
                        models
  Concepts: generalized linear model
glmmML::glmmML          Generalized linear models with clustering
gnm::gnmOverview        Generalized nonlinear models in R: An overview
                        of the gnm package
  Concepts: Generalized Nonlinear Models
inlabru::linearapprox   Nonlinear model approximation
mfx::mfxarticle         Marginal Effects for Generalized Linear Models:
                        The mfx Package for R
rstanarm::lm            stan_lm: Regularized Linear Models
vcdExtra::loglinear     Loglinear Models


Type 'vignette("FOO", package="PKG")' to inspect entries 'PKG::FOO'.



Demos with name or title matching ‘linear models’ using fuzzy matching:


gnm::gnm                Fitting generalized nonlinear models with gnm
gstat::cokriging        fitting a linear model of coregionalization and
                        cokriging
gstat::cosimulation     fitting a linear model of coregionalization and
                        cosimulation
stats::lm.glm           Some linear and generalized linear modelling
                        examples from `An Introduction to Statistical
                        Modelling' by Annette Dobson
xgboost::generalized_linear_model
                        Generalized Linear Model


Type 'demo(PKG::FOO)' to run demonstration 'PKG::FOO'.



Help files with alias or concept or title matching ‘linear models’
using fuzzy matching:


BayesFactor::BFmodel-class
                        General S4 classes for representing models for
                        comparison
  Aliases: BFlinearModel-class
BayesFactor::compare    Compare two models, with respect to some data
  Aliases: compare,BFlinearModel,BFlinearModel,data.frame-method,
    compare,BFlinearModel,missing,data.frame-method
BayesFactor::enumerateGeneralModels
                        Function for generation of nested linear models
BayesFactor::lmBF       Function to compute Bayes factors for specific
                        linear models
BayesFactor::model.matrix,BFBayesFactor-method
                        Design matrices for Bayes factor linear models
                        analyses.
BayesFactor::posterior
                        Sample from the posterior distribution of one
                        of several models.
  Aliases: posterior,BFlinearModel,missing,data.frame,numeric-method
Epi::ftrend             Fit a floating trend to a factor in generalized
                        linear model
FactoMineR::LinearModel
                        Linear Model with AIC or BIC selection, and
                        with the contrasts sum (the sum of the
                        coefficients is 0) if any categorical variables
  Aliases: LinearModel
FactoMineR::predict.LinearModel
                        Predict method for Linear Model Fits
  Aliases: predict.LinearModel
FactoMineR::print.LinearModel
                        Print the LinearModel results
  Aliases: print.LinearModel
GeneralizedHyperbolic::hyperblm
                        Fitting Linear Models with Hyperbolic Errors
HH::diagplot5new        Transpose of ECDF for centered fitted values
                        and residuals from a linear model.
HH::lmplot              Four types of residual plots for linear models.
HH::regrresidplot       Draw a plot of y vs x from a linear model
                        object, with residuals indicated by lines or
                        squares.
HH::residual.plots      Residual plots for a linear model.
Hmisc::abs.error.pred   Indexes of Absolute Prediction Error for Linear
                        Models
LiblineaR::predict.LiblineaR
                        Predictions with LiblineaR model
MASS::boxcox            Box-Cox Transformations for Linear Models
MASS::glm.nb            Fit a Negative Binomial Generalized Linear
                        Model
MASS::lm.gls            Fit Linear Models by Generalized Least Squares
MASS::loglm             Fit Log-Linear Models by Iterative Proportional
                        Scaling
MASS::loglm1            Fit Log-Linear Models by Iterative Proportional
                        Scaling - Internal function
MASS::rlm               Robust Fitting of Linear Models
MASS::stdres            Extract Standardized Residuals from a Linear
                        Model
MASS::studres           Extract Studentized Residuals from a Linear
                        Model
MASS::summary.rlm       Summary Method for Robust Linear Models
MatrixModels::glm4      Fitting Generalized Linear Models (using S4)
MatrixModels::lm.fit.sparse
                        Fitter Function for Sparse Linear Models
NSM3::mblm              Fitting Median-Based Linear Models (from 'mblm'
                        oackage)
NSM3::theil             Function to estimate and perform tests on the
                        slope and intercept of a simple linear model.
REndo::REndo            Fitting Linear Models with Endogenous
                        Regressors using Latent Instrumental Variables
REndo::copulaCorrection
                        Fitting Linear Models Endogenous Regressors
                        using Gaussian Copula
REndo::hetErrorsIV      Fitting Linear Models with Endogenous
                        Regressors using Heteroskedastic Covariance
                        Restrictions
REndo::higherMomentsIV
                        Fitting Linear Models with Endogenous
                        Regressors using Lewbel's Higher Moments
                        Approach
REndo::latentIV         Fitting Linear Models with one Endogenous
                        Regressor using Latent Instrumental Variables
Rcmdr::Rcmdr.Utilities
                        Rcmdr Utility Functions
  Aliases: listGeneralizedLinearModels, listLinearModels
Rcmdr::generalizedLinearModel
                        Rcmdr Generalized Linear Model Dialog
  Aliases: generalizedLinearModel
Rcmdr::linearModel      Rcmdr Linear Model Dialog
  Aliases: linearModel
RcppArmadillo::fastLm   Bare-bones linear model fitting function
RcppEigen::fastLm       Bare-bones linear model fitting function
Rfast::bic.fs.reg       BIC forward regression with generalised linear
                        models
Rfast::glm_logistic     Logistic and Poisson regression models
  Concepts: generalised linear models
Rfast::lmfit            Linear models for large scale data
  Concepts: Linear models
Rfast::logistic_only    Many univariate simple binary logistic
                        regressions
  Concepts: generalised linear models
Rfast::quasi.poisson_only
                        Many univariate simple poisson regressions
  Concepts: generalised linear models
SIS::SIS                (Iterative) Sure Independence Screening
                        ((I)SIS) and Fitting in Generalized Linear
                        Models and Cox's Proportional Hazards Models
SIS::tune.fit           Using the 'glmnet' and 'ncvreg' packages, fits
                        a Generalized Linear Model or Cox Proportional
                        Hazards Model using various methods for
                        choosing the regularization parameter lambda
VGAM::anova.vglm        Analysis of Deviance for Vector Generalized
                        Linear Model Fits
VGAM::loglinb2          Loglinear Model for Two Binary Responses
VGAM::loglinb3          Loglinear Model for Three Binary Responses
VGAM::rrvglm            Fitting Reduced-Rank Vector Generalized Linear
                        Models (RR-VGLMs) and Doubly Constrained
                        RR-VGLMs (DRR-VGLMs)
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm-class      Class "rrvglm"
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm.control    Control Function for rrvglm()
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm.optim.control
                        Control Function for rrvglm() Calling optim()
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::summary.drrvglm   Summarizing Reduced Rank Vector Generalized
                        Linear Model (RR-VGLM) and Doubly constrained
                        RR-VGLM Fits
VGAM::summaryvglm       Summarizing Vector Generalized Linear Model
                        Fits
VGAM::vglm              Fitting Vector Generalized Linear Models
  Concepts: Vector Generalized Linear Model
VGAM::vglm-class        Class "vglm"
  Concepts: Vector Generalized Linear Model
VGAM::vglm.control      Control Function for vglm()
  Concepts: Vector Generalized Linear Model
VGAM::vglmff-class      Class "vglmff"
  Concepts: Vector Generalized Linear Model
WeightIt::glm_weightit
                        Fitting Weighted Generalized Linear Models
WeightIt::method_glm    Propensity Score Weighting Using Generalized
                        Linear Models
agricolae::resampling.model
                        Resampling for linear models
agricolae::simulation.model
                        Simulation of the linear model under normality
arm::bayesglm-class     Bayesian generalized linear models.
bayesm::rhierLinearMixture
                        Gibbs Sampler for Hierarchical Linear Model
                        with Mixture-of-Normals Heterogeneity
  Concepts: linear model
bayesm::rhierLinearModel
                        Gibbs Sampler for Hierarchical Linear Model
                        with Normal Heterogeneity
  Aliases: rhierLinearModel
  Concepts: linear model
boot::cv.glm            Cross-validation for Generalized Linear Models
boot::glm.diag          Generalized Linear Model Diagnostics
boot::glm.diag.plots    Diagnostics plots for generalized linear models
brglm2::brglm2          brglm2: Bias Reduction in Generalized Linear
                        Models
brglm2::expo.brglmFit   Estimate the exponential of parameters of
                        generalized linear models using various methods
candisc::can_lm         Transform a Multivariate Linear model mlm to a
                        Canonical Representation
caper::pgls             Phylogenetic generalized linear models
car::mcPlots            Draw Linear Model Marginal and Conditional
                        Plots in Parallel or Overlaid
car::residualPlots      Residual Plots for Linear and Generalized
                        Linear Models
collapse::fFtest        Fast (Weighted) F-test for Linear Models (with
                        Factors)
collapse::flm           Fast (Weighted) Linear Model Fitting
cplm::bcplm             Bayesian Compound Poisson Linear Models
cplm::cpglm             Compound Poisson Generalized Linear Models
cplm::cplm-class        Classes and Methods for a Compound Poisson
                        Linear Model Object
cplm::cplm-package      Tweedie compound Poisson linear models
dlm::dlmSum             Outer sum of Dynamic Linear Models
drc::print.summary.drc
                        Printing summary of non-linear model fits
drc::summary.drc        Summarising non-linear model fits
dynlm::dynlm            Dynamic Linear Models and Time Series
                        Regression
ellipse::ellipse.lm     Outline a pairwise confidence region for a
                        linear model fit.
estimability::estimability-package
                        Estimability Tools for Linear Models
fastglm::fastglm        fast generalized linear model fitting
fastglm::fastglmPure    fast generalized linear model fitting
fastglm::predict.fastglm
                        Obtains predictions and optionally estimates
                        standard errors of those predictions from a
                        fitted generalized linear model object.
fda.usc::PCvM.statistic
                        PCvM statistic for the Functional Linear Model
                        with scalar response
fda.usc::classif.glm    Classification Fitting Functional Generalized
                        Linear Models
fda.usc::flm.Ftest      F-test for the Functional Linear Model with
                        scalar response
fda.usc::flm.test       Goodness-of-fit test for the Functional Linear
                        Model with scalar response
fda.usc::fregre.glm     Fitting Functional Generalized Linear Models
fda.usc::fregre.glm.vs
                        Variable Selection using Functional Linear
                        Models
fda.usc::fregre.gls     Fit Functional Linear Model Using Generalized
                        Least Squares
fda.usc::fregre.lm      Fitting Functional Linear Models
fda.usc::fregre.plm     Semi-functional partially linear model with
                        scalar response.
fda.usc::predict.fregre.fd
                        Predict method for functional linear model
                        (fregre.fd class)
fda.usc::predict.fregre.gkam
                        Predict method for functional linear model
fda.usc::rp.flm.statistic
                        Statistics for testing the functional linear
                        model using random projections
fda.usc::rp.flm.test    Goodness-of fit test for the functional linear
                        model using random projections
fda::linmod             Fit Fully Functional Linear Model
fit.models::plot.glmfm
                        Comparison Diagnostic Plots for Generalized
                        Linear Models
fit.models::summary.glmfm
                        Comparison Summaries for Generalized Linear
                        Models
flexmix::FLXMRglm       FlexMix Interface to Generalized Linear Models
flexmix::FLXMRrobglm    FlexMix Driver for Robust Estimation of
                        Generalized Linear Models
flexmix::FLXMRziglm     FlexMix Interface to Zero Inflated Generalized
                        Linear Models
forecast::forecast-package
                        forecast: Forecasting Functions for Time Series
                        and Linear Models
forecast::forecast.lm   Forecast a linear model with possible time
                        series components
forecast::forecast.mlm
                        Forecast a multiple linear model with possible
                        time series components
forecast::tslm          Fit a linear model with time series components
gamair::ch1             Code for Chapter 1: Linear Models
gamair::ch1.solutions   Solution code for Chapter 1: Linear Models
gamair::ch3             Code for Chapter 3: Generalized Linear Models
gamair::ch3.solutions   Solution code for Chapter 3: Generalized Linear
                        Models
ggplot2::fortify.lm     Supplement the data fitted to a linear model
                        with model fit statistics.
glm2::glm.fit2          Generalized Linear Models Fitting Method
glm2::glm2              Fitting Generalized Linear Models
glm2::glm2-package      Fitting Generalized Linear Models
glmmML::glmmML          Generalized Linear Models with random intercept
glmmML::glmmML.fit      Generalized Linear Model with random intercept
glmmML::glmmboot        Generalized Linear Models with fixed effects
                        grouping
glmmML::glmmbootFit     Generalized Linear Models with fixed effects
                        grouping
glmnet::glmnet-package
                        Elastic net model paths for some generalized
                        linear models
glmx::glmx              Generalized Linear Models with Extra Parameters
glmx::plinks            Parametric Links for Binomial Generalized
                        Linear Models
gnm::anova.gnm          Analysis of Deviance for Generalized Nonlinear
                        Models
gnm::asGnm              Coerce Linear Model to gnm Object
gnm::confint.gnm        Compute Confidence Intervals of Parameters in a
                        Generalized Nonlinear Model
gnm::gnm                Fitting Generalized Nonlinear Models
gnm::gnm-package        Generalized Nonlinear Models
gnm::model.matrix.gnm   Local Design Matrix for a Generalized Nonlinear
                        Model
gnm::ofInterest         Coefficients of Interest in a Generalized
                        Nonlinear Model
gnm::predict.gnm        Predict Method for Generalized Nonlinear Models
gnm::profile.gnm        Profile Deviance for Parameters in a
                        Generalized Nonlinear Model
gnm::summary.gnm        Summarize Generalized Nonlinear Model Fits
gnm::vcov.gnm           Variance-covariance Matrix for Parameters in a
                        Generalized Nonlinear Model
gplots::lmplot2         Plots to assess the goodness of fit for the
                        linear model objects
gstat::fit.lmc          Fit a Linear Model of Coregionalization to a
                        Multivariable Sample Variogram
h2o::h2o.glm            Fit a generalized linear model
hdi::clusterGroupBound
                        Hierarchical structure group tests in linear
                        model
hdi::glm.pval           Function to calculate p-values for a
                        generalized linear model.
hdi::hdi                Function to perform inference in
                        high-dimensional (generalized) linear models
heplots::coefplot       Coefficient plots for Multivariate Linear
                        Models
heplots::etasq          Measures of Partial Association (Eta-squared)
                        for Linear Models
heplots::heplots-package
                        Visualizing Hypothesis Tests in Multivariate
                        Linear Models
heplots::plot.robmlm    Plot observation weights from a robust
                        multivariate linear models
heplots::robmlm         Robust Fitting of Multivariate Linear Models
heplots::termMeans      Calculate Means for a Term in a Multivariate
                        Linear Model
ipred::mypredict.lm     Predictions Based on Linear Models
lava::nldata            Example data (nonlinear model)
lfe::..oldfelm          Fit a linear model with multiple group fixed
                        effects (old interface)
lfe::felm               Fit a linear model with multiple group fixed
                        effects
lm.beta::coef.lm.beta   Print Coefficients of Standardized
                        Linear-Model-Object
lm.beta::lm.beta        Add Standardized Regression Coefficients to
                        Linear-Model-Objects
lm.beta::print.lm.beta
                        Print Standardized Linear-Model-Object
lm.beta::summary.lm.beta
                        Summarize Standardized Linear-Model-Object
lm.beta::xtable.lm.beta
                        Coerce Coefficent Table of Standardized
                        Linear-Model-Object to LaTeX- and HTML-Tables
lme4::nlformula         Manipulate a Nonlinear Model Formula
logcondens::qloglin     Quantile Function In a Simple Log-Linear model
logmult::svygnm         Fitting Generalized Nonlinear Models With
                        Complex Survey Data
mboost::glmboost        Gradient Boosting with Component-wise Linear
                        Models
metadat::dat.collins1985a
                        Studies on the Treatment of Upper
                        Gastrointestinal Bleeding by a Histamine H2
                        Antagonist
  Concepts: generalized linear models
metadat::dat.nielweise2007
                        Studies on Anti-Infective-Treated Central
                        Venous Catheters for Prevention of
                        Catheter-Related Bloodstream Infections
  Concepts: generalized linear models
metadat::dat.nielweise2008
                        Studies on Anti-Infective-Treated Central
                        Venous Catheters for Prevention of
                        Catheter-Related Bloodstream Infections
  Concepts: generalized linear models
mgcv::bam               Generalized additive models for very large
                        datasets
  Concepts: Functional linear model
mgcv::bam.update        Update a strictly additive bam model for new
                        data.
  Concepts: Functional linear model
mgcv::gam               Generalized additive models with integrated
                        smoothness estimation
  Concepts: Functional linear model
mgcv::jagam             Just Another Gibbs Additive Modeller: JAGS
                        support for mgcv.
  Concepts: Functional linear model
mice::glm.mids          Generalized linear model for 'mids' object
miceadds::lm.cluster    Cluster Robust Standard Errors for Linear
                        Models and General Linear Models
miceadds::mice.impute.rlm
                        Imputation of a Linear Model by Bayesian
                        Bootstrap
mlr::makeRLearner.classif.fdausc.glm
                        Classification of functional data by
                        Generalized Linear Models.
modeltools::StatModel-class
                        Class "StatModel"
  Aliases: linearModel, predict.linearModel, fitted.linearModel,
    print.linearModel, weights.linearModel, model.matrix.linearModel,
    glinearModel, predict.glinearModel, fitted.glinearModel,
    print.glinearModel, model.matrix.glinearModel
mosaic::FunctionsFromData
                        Create function from data
  Aliases: linearModel
mosaic::relm            Resample a Linear Model
mvabund::anova.manyglm
                        Analysis of Deviance for Multivariate
                        Generalized Linear Model Fits for Abundance
                        Data
mvabund::anova.manylm   ANOVA for Linear Model Fits for Multivariate
                        Abundance Data
mvabund::cv.glm1path    Fits a path of Generalised Linear Models with
                        LASSO (or L1) penalties, and finds the best
                        model by corss-validation.
mvabund::glm1           Fits a Generalised Linear Models with a LASSO
                        (or L1) penalty, given a value of the penalty
                        parameter.
mvabund::glm1path       Fits a path of Generalised Linear Models with
                        LASSO (or L1) penalties, and finds the model
                        that minimises BIC.
mvabund::manyglm        Fitting Generalized Linear Models for
                        Multivariate Abundance Data
mvabund::manylm         Fitting Linear Models for Multivariate
                        Abundance Data
mvabund::manylm.fit     workhose functions for fitting multivariate
                        linear models
mvabund::predict.manylm
                        Model Predictions for Multivariate Linear
                        Models
mvabund::summary.manyglm
                        Summarizing Multivariate Generalized Linear
                        Model Fits for Abundance Data
mvabund::summary.manylm
                        Summarizing Linear Model Fits for Multivariate
                        Abundance Data
mvinfluence::infIndexPlot.mlm
                        Influence Index Plots for Multivariate Linear
                        Models
mvinfluence::influence.mlm
                        Regression Deletion Diagnostics for
                        Multivariate Linear Models
mvinfluence::influencePlot.mlm
                        Influence Plots for Multivariate Linear Models
mvinfluence::mlm.influence
                        Calculate Regression Deletion Diagnostics for
                        Multivariate Linear Models
mvinfluence::mvinfluence
                        Influence Measures and Diagnostic Plots for
                        Multivariate Linear Models
nlme::gls               Fit Linear Model Using Generalized Least
                        Squares
nlme::gnls              Fit Nonlinear Model Using Generalized Least
                        Squares
nlme::recalc            Recalculate Condensed Linear Model Object
nnet::multinom          Fit Multinomial Log-linear Models
orientlib::orientlm     Linear models for orientation data
parameters::model_parameters.default
                        Parameters from (General) Linear Models
parsnip::tidy._LiblineaR
                        tidy methods for LiblineaR models
party::reweight         Re-fitting Models with New Weights
  Aliases: reweight.linearModel, reweight.glinearModel
partykit::glmtree       Generalized Linear Model Trees
partykit::lmtree        Linear Model Trees
performance::performance_mse
                        Mean Square Error of Linear Models
performance::performance_rse
                        Residual Standard Error for Linear Models
pglm::pglm              Panel Estimators for Generalized Linear Models
phylolm::phyloglm       Phylogenetic Generalized Linear Model
phylolm::phyloglmstep   Stepwise model selection for Phylogenetic
                        Generalized Linear Model
phylolm::phylolm        Phylogenetic Linear Model
phylolm::phylostep      Stepwise model selection for Phylogenetic
                        Linear Model
picante::pblm           Phylogenetic Bipartite Linear Model
plm::plm-package        plm package: linear models for panel data
psych::sim.anova        Simulate a 3 way balanced ANOVA or linear
                        model, with or without repeated measures.
pwr::pwr.f2.test        Power calculations for the general linear model
quantreg::KhmaladzeTest
                        Tests of Location and Location Scale Shift
                        Hypotheses for Linear Models
quantreg::ParetoTest    Estimation and Inference on the Pareto Tail
                        Exponent for Linear Models
quantreg::predict.rqss
                        Predict from fitted nonparametric quantile
                        regression smoothing spline models
recipes::step_impute_linear
                        Impute numeric variables via a linear model
relaimpo::calc.relimp   Function to calculate relative importance
                        metrics for linear models
relaimpo::relaimpo-package
                        Package to calculate relative importance
                        metrics for linear models
report::report.lm       Reporting (General) Linear Models
rlme::LM_est            Linear Model Estimation using the nlme package.
rlme::wilonestep        Wilcoxon estimate for independent linear models
rms::Gls                Fit Linear Model Using Generalized Least
                        Squares
rms::ols                Linear Model Estimation Using Ordinary Least
                        Squares
rms::validate.ols       Validation of an Ordinary Linear Model
robust::anova.glmRob    ANOVA for Robust Generalized Linear Model Fits
robust::anova.lmRob     ANOVA for Robust Linear Model Fits
robust::glmRob          Fit a Robust Generalized Linear Model
robust::glmRob.object   Robust Generalized Linear Model Fit
robust::lmRob.fit       Robust Fitter Functions for Linear Models
robust::lmRob.fit.compute
                        Fit a Robust Linear Model
robust::lmRob.object    Robust Linear Model Objects
robust::predict.glmRob
                        Predict Method for Robust Generalized Linear
                        Model Fits
robust::summary.glmRob
                        Summarizing Robust Generalized Linear Model
                        Fits
robust::summary.lmRob   Summarizing Robust Linear Model Fits
robustbase::glmrob      Robust Fitting of Generalized Linear Models
robustbase::predict.lmrob
                        Predict method for Robust Linear Model
                        ("lmrob") Fits
robustbase::residuals.glmrob
                        Residuals of Robust Generalized Linear Model
                        Fits
robustbase::summary.glmrob
                        Summarizing Robust Fits of Generalized Linear
                        Models
roll::roll_lm           Rolling Linear Models
rsm::contour.lm         Surface plot(s) of a fitted linear model
rsm::model.data         Reconstruct data from a linear model
rstanarm::stan_aov      Bayesian regularized linear models via Stan
rstanarm::stan_glm      Bayesian generalized linear models via Stan
rstanarm::stan_glmer    Bayesian generalized linear models with
                        group-specific terms via Stan
rstanarm::stan_mvmer    Bayesian multivariate generalized linear models
                        with correlated group-specific terms via Stan
rstanarm::stan_nlmer    Bayesian nonlinear models with group-specific
                        terms via Stan
scam::scam              Shape constrained additive models (SCAM) and
                        integrated smoothness selection
  Concepts: Functional linear model
sfsmisc::TA.plot        Tukey-Anscombe Plot (Residual vs. Fitted) of a
                        Linear Model
sirt::latent.regression.em.raschtype
                        Latent Regression Model for the Generalized
                        Logistic Item Response Model and the Linear
                        Model for Normal Responses
sjstats::svyglm.nb      Survey-weighted negative binomial generalised
                        linear model
sn::selm                Fitting linear models with skew-elliptical
                        error term
sn::st.prelimFit        Compute preliminary estimates for a linear
                        model with ST-distributed error term
spaMM::spaMM_glm.fit    Fitting generalized linear models without
                        initial-value or divergence headaches
sparklyr::ml_glm_tidiers
                        Tidying methods for Spark ML linear models
spatialreg::predict.Sarlm
                        Prediction for spatial simultaneous
                        autoregressive linear model objects
spdep::lm.LMtests       Rao's score (a.k.a Lagrange Multiplier)
                        diagnostics for spatial dependence in linear
                        models
speedglm::speedglm-package
                        Fitting Linear and Generalized Linear Models to
                        Large Data Sets
speedglm::speedglm.wfit
                        Fitting Generalized Linear Models for Large
                        Data Sets
speedglm::speedlm       Fitting Linear Models to Large Data Sets
speedglm::summary.speedglm
                        Methods to summarize Generalized Linear Models
                        fits
speedglm::summary.speedlm
                        Methods to summarize Linear Models fits
statmod::Digamma        Digamma Generalized Linear Model Family
statmod::glmgam.fit     Fit Gamma Generalized Linear Model by Fisher
                        Scoring with Identity Link
statmod::glmnb.fit      Fit Negative Binomial Generalized Linear Model
                        with Log-Link
statmod::mixedModel2    Fit Mixed Linear Model with 2 Error Components
statmod::tweedie        Tweedie Generalized Linear Models
stats::anova.glm        Analysis of Deviance for Generalized Linear
                        Model Fits
stats::anova.lm         ANOVA for Linear Model Fits
stats::anova.mlm        Comparisons between Multivariate Linear Models
stats::family.glm       Accessing Generalized Linear Model Fits
stats::family.lm        Accessing Linear Model Fits
stats::glm              Fitting Generalized Linear Models
stats::lm               Fitting Linear Models
stats::lm.fit           Fitter Functions for Linear Models
stats::loglin           Fitting Log-Linear Models
stats::predict.lm       Predict method for Linear Model Fits
stats::selfStart        Construct Self-starting Nonlinear Models
stats::summary.glm      Summarizing Generalized Linear Model Fits
stats::summary.lm       Summarizing Linear Model Fits
subselect::glmHmat      Input matrices for subselect search routines in
                        generalized linear models
subselect::wald.coef    Wald statistic for variable selection in
                        generalized linear models
survey::svyglm          Survey-weighted generalised linear models.
survey::svyloglin       Loglinear models
synthpop::glm.synds     Fitting (generalized) linear models to
                        synthetic data
targeted::alean         Assumption Lean inference for generalized
                        linear model parameters
torch::nn_bilinear      Bilinear module
torch::nn_linear        Linear module
tram::Lm                Normal Linear Model
vcd::plot.loglm         Visualize Fitted Log-linear Models
vcdExtra::Abortion      Abortion Opinion Data
  Concepts: loglinear models
vcdExtra::Accident      Traffic Accident Victims in France in 1958
  Concepts: loglinear models, generalized linear models
vcdExtra::Alligator     Alligator Food Choice
  Concepts: loglinear models
vcdExtra::Bartlett      Bartlett Data on Plum Root Cuttings
  Concepts: loglinear models
vcdExtra::Caesar        Risk Factors for Infection in Caesarian Births
  Concepts: loglinear models
vcdExtra::Cancer        Survival of Breast Cancer Patients
  Concepts: loglinear models
vcdExtra::Cormorants    Advertising Behavior by Males Cormorants
  Concepts: generalized linear models
vcdExtra::DaytonSurvey
                        Dayton Student Survey on Substance Use
  Concepts: generalized linear models
vcdExtra::Detergent     Detergent preference data
  Concepts: loglinear models
vcdExtra::Donner        Survival in the Donner Party
  Concepts: generalized linear models
vcdExtra::Draft1970     USA 1970 Draft Lottery Data
  Concepts: linear models
vcdExtra::Draft1970table
                        USA 1970 Draft Lottery Table
  Concepts: generalized linear models
vcdExtra::Dyke          Sources of Knowledge of Cancer
  Concepts: loglinear models
vcdExtra::GSS           General Social Survey- Sex and Party
                        affiliation
  Concepts: generalized linear models
vcdExtra::Heckman       Labour Force Participation of Married Women
                        1967-1971
  Concepts: loglinear models
vcdExtra::Hoyt          Minnesota High School Graduates
  Concepts: loglinear models
vcdExtra::ICU           ICU data set
  Concepts: generalized linear models
vcdExtra::JobSat        Cross-classification of job satisfaction by
                        income
  Concepts: loglinear models
vcdExtra::Mice          Mice Depletion Data
  Concepts: loglinear models
vcdExtra::PhdPubs       Publications of PhD Candidates
  Concepts: generalized linear models
vcdExtra::TV            TV Viewing Data
  Concepts: loglinear models
vcdExtra::Titanicp      Passengers on the Titanic
  Concepts: loglinear models
vcdExtra::Toxaemia      Toxaemia Symptoms in Pregnancy
  Concepts: loglinear models
vcdExtra::Vietnam       Student Opinion about the Vietnam War
  Concepts: loglinear models
vcdExtra::Vote1980      Race and Politics in the 1980 Presidential Vote
  Concepts: loglinear models
vcdExtra::WorkerSat     Worker Satisfaction Data
  Concepts: loglinear models
vcdExtra::loglin-utilities
                        Loglinear Model Utilities
vcdExtra::mosaic.glm    Mosaic plots for fitted generalized linear and
                        generalized nonlinear models
vcdExtra::seq_loglm     Sequential Loglinear Models for an N-way Table
vegan::hatvalues.cca    Linear Model Diagnostics for Constrained
                        Ordination


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.




>                                 # models
> help.search("non-existent topic")
No vignettes or demos or help files found with alias or concept or
title matching ‘non-existent topic’ using fuzzy matching.
> 
> ??utils::help  # All the topics matching "help" in the utils package
Help files with alias or concept or title matching ‘help’ using regular
expression matching:


utils::example          Run an Examples Section from the Online Help
utils::help             Documentation
  Aliases: help
utils::help.request     Send a Post to R-help
  Aliases: help.request
utils::help.search      Search the Help System
  Aliases: help.search
utils::help.start       Hypertext Documentation
  Aliases: help.start
utils::hsearch_db       Help Search Utilities


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.




> 
> 
> 
> cleanEx()
> nameEx("help.start")
> ### * help.start
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: help.start
> ### Title: Hypertext Documentation
> ### Aliases: help.start
> ### Keywords: documentation
> 
> ### ** Examples
> 
> ## Not run: 
> ##D if(.Platform$OS.type == "unix") # includes Mac
> ##D   ## the 'remote' arg can be tested by
> ##D   help.start(remote = paste0("file://", R.home()))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("hsearch-utils")
> ### * hsearch-utils
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hsearch-utils
> ### Title: Help Search Utilities
> ### Aliases: hsearch_db hsearch_db_concepts hsearch_db_keywords
> ### Keywords: documentation
> 
> ### ** Examples
> 
> db <- hsearch_db()
> ## Total numbers of documentation objects, aliases, keywords and
> ## concepts (using the current format):
> sapply(db, NROW)
    Base  Aliases Keywords Concepts 
   64535   144059    41072    50627 
> ## Can also be obtained from print method:
> db
A help search database:
Objects: 64535, Aliases: 144059, Keywords: 41072, Concepts: 50627
> ## 10 most frequent concepts:
> head(hsearch_db_concepts(), 10)
                         Concept Frequency Packages
1   Datasets available by data()      5627      696
2             Statistical Models      2996      222
3             Spatial Statistics      2204       39
4                     Regression      1805      152
5  Methods and Generic Functions      1668      144
6                    Programming      1611       71
7               High-Level Plots      1330      204
8                      Utilities      1314      165
9        Multivariate Techniques      1313      115
10             Data Manipulation      1235      157
> ## 10 most frequent keywords:
> head(hsearch_db_keywords(), 10)
        Keyword                            Concept Frequency Packages
1      datasets       Datasets available by data()      5627      696
2      internal Internal Objects (not part of API)      5331      663
3        models                 Statistical Models      2995      221
4       spatial                 Spatial Statistics      2204       39
5    regression                         Regression      1805      152
6       methods      Methods and Generic Functions      1668      144
7   programming                        Programming      1610       71
8         hplot                   High-Level Plots      1330      204
9  multivariate            Multivariate Techniques      1313      115
10    utilities                          Utilities      1285      163
> 
> 
> 
> cleanEx()
> nameEx("install.packages")
> ### * install.packages
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: install.packages
> ### Title: Install Packages from Repositories or Local Files
> ### Aliases: install.packages
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## A Linux example for Fedora's layout of udunits2 headers.
> ##D install.packages(c("ncdf4", "RNetCDF"),
> ##D   configure.args = c(RNetCDF = "--with-netcdf-include=/usr/include/udunits2"))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("installed.packages")
> ### * installed.packages
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: installed.packages
> ### Title: Find Installed Packages
> ### Aliases: installed.packages
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## confine search to .Library for speed
> str(ip <- installed.packages(.Library, priority = "high"))
 chr [1:29, 1:16] "KernSmooth" "MASS" "Matrix" "base" "boot" "class" ...
 - attr(*, "dimnames")=List of 2
  ..$ : chr [1:29] "KernSmooth" "MASS" "Matrix" "base" ...
  ..$ : chr [1:16] "Package" "LibPath" "Version" "Priority" ...
> ip[, c(1,3:5)]
           Package      Version      Priority     
KernSmooth "KernSmooth" "2.23-22"    "recommended"
MASS       "MASS"       "7.3-60.0.1" "recommended"
Matrix     "Matrix"     "1.6-5"      "recommended"
base       "base"       "4.3.3"      "base"       
boot       "boot"       "1.3-29"     "recommended"
class      "class"      "7.3-22"     "recommended"
cluster    "cluster"    "2.1.6"      "recommended"
codetools  "codetools"  "0.2-19"     "recommended"
compiler   "compiler"   "4.3.3"      "base"       
datasets   "datasets"   "4.3.3"      "base"       
foreign    "foreign"    "0.8-86"     "recommended"
grDevices  "grDevices"  "4.3.3"      "base"       
graphics   "graphics"   "4.3.3"      "base"       
grid       "grid"       "4.3.3"      "base"       
lattice    "lattice"    "0.22-5"     "recommended"
methods    "methods"    "4.3.3"      "base"       
mgcv       "mgcv"       "1.9-1"      "recommended"
nlme       "nlme"       "3.1-164"    "recommended"
nnet       "nnet"       "7.3-19"     "recommended"
parallel   "parallel"   "4.3.3"      "base"       
rpart      "rpart"      "4.1.23"     "recommended"
spatial    "spatial"    "7.3-17"     "recommended"
splines    "splines"    "4.3.3"      "base"       
stats      "stats"      "4.3.3"      "base"       
stats4     "stats4"     "4.3.3"      "base"       
survival   "survival"   "3.5-8"      "recommended"
tcltk      "tcltk"      "4.3.3"      "base"       
tools      "tools"      "4.3.3"      "base"       
utils      "utils"      "4.3.3"      "base"       
           Depends                                        
KernSmooth "R (>= 2.5.0), stats"                          
MASS       "R (>= 4.0), grDevices, graphics, stats, utils"
Matrix     "R (>= 3.5.0), methods"                        
base       NA                                             
boot       "R (>= 3.0.0), graphics, stats"                
class      "R (>= 3.0.0), stats, utils"                   
cluster    "R (>= 3.5.0)"                                 
codetools  "R (>= 2.1)"                                   
compiler   NA                                             
datasets   NA                                             
foreign    "R (>= 4.0.0)"                                 
grDevices  NA                                             
graphics   NA                                             
grid       NA                                             
lattice    "R (>= 4.0.0)"                                 
methods    NA                                             
mgcv       "R (>= 3.6.0), nlme (>= 3.1-64)"               
nlme       "R (>= 3.5.0)"                                 
nnet       "R (>= 3.0.0), stats, utils"                   
parallel   NA                                             
rpart      "R (>= 2.15.0), graphics, stats, grDevices"    
spatial    "R (>= 3.0.0), graphics, stats, utils"         
splines    NA                                             
stats      NA                                             
stats4     NA                                             
survival   "R (>= 3.5.0)"                                 
tcltk      NA                                             
tools      NA                                             
utils      NA                                             
> plic <- installed.packages(.Library, priority = "high", fields = "License")
> ## what licenses are there:
> table( plic[, "License"] )

                      GPL                GPL (>= 2) GPL (>= 2) | file LICENCE 
                        1                         5                         1 
            GPL-2 | GPL-3               LGPL (>= 2)           Part of R 4.3.3 
                        5                         1                        14 
                Unlimited 
                        2 
> 
> ## Recommended setup (by many pros):
> ## Keep packages that come with R (priority="high") and all others separate!
> ## Consequently, .Library, R's "system" library, shouldn't have any
> ## non-"high"-priority packages :
> pSys <- installed.packages(.Library, priority = NA_character_)
> length(pSys) == 0 # TRUE under such a setup
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("isS3method")
> ### * isS3method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: isS3method
> ### Title: Is 'method' the Name of an S3 Method?
> ### Aliases: isS3method
> ### Keywords: methods
> 
> ### ** Examples
> 
> isS3method("t")           # FALSE - it is an S3 generic
[1] FALSE
> isS3method("t.default")   # TRUE
[1] TRUE
> isS3method("t.ts")        # TRUE
[1] TRUE
> isS3method("t.test")      # FALSE
[1] FALSE
> isS3method("t.data.frame")# TRUE
[1] TRUE
> isS3method("t.lm")        # FALSE - not existing
[1] FALSE
> isS3method("t.foo.bar")   # FALSE - not existing
[1] FALSE
> 
> ## S3 methods with "4 parts" in their name:
> ff <- c("as.list", "as.matrix", "is.na", "row.names", "row.names<-")
> for(m in ff) if(isS3method(m)) stop("wrongly declared an S3 method: ", m)
> (m4 <- paste(ff, "data.frame", sep="."))
[1] "as.list.data.frame"     "as.matrix.data.frame"   "is.na.data.frame"      
[4] "row.names.data.frame"   "row.names<-.data.frame"
> for(m in m4) if(!isS3method(m)) stop("not an S3 method: ", m)
> ## Don't show: 
> stopifnot(
+   !isS3method("t"), !isS3method("t.test"), !isS3method("qr.coef"), !isS3method("sort.list"),
+   isS3method("t.default"), isS3method("t.ts"), isS3method("t.data.frame"),
+   !isS3method("t.lm"), !isS3method("t.foo.bar"))
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("localeToCharset")
> ### * localeToCharset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: localeToCharset
> ### Title: Select a Suitable Encoding Name from a Locale Name
> ### Aliases: localeToCharset
> ### Keywords: utilities
> 
> ### ** Examples
> 
> localeToCharset()
[1] "UTF-8"     "ISO8859-1"
> 
> 
> 
> cleanEx()
> nameEx("ls_str")
> ### * ls_str
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ls.str
> ### Title: List Objects and their Structure
> ### Aliases: ls.str lsf.str print.ls_str
> ### Keywords: print utilities
> 
> ### ** Examples
> 
> require(stats)
> 
> lsf.str()  #- how do the functions look like which I am using?
> ls.str(mode = "list")   #- what are the structured objects I have defined?
> 
> ## create a few objects
> example(glm, echo = FALSE)
> ll <- as.list(LETTERS)
> print(ls.str(), max.level = 0)# don't show details
A0 :  num 56.8
A1 :  num 56.8
A2 :  num 56.8
clotting : 'data.frame':	9 obs. of  3 variables:
counts :  num [1:9] 18 17 15 20 10 20 25 13 12
fS : List of 30
glm.D93 : List of 30
ll : List of 26
outcome :  Factor w/ 3 levels "1","2","3": 1 2 3 1 2 3 1 2 3
treatment :  Factor w/ 3 levels "1","2","3": 1 1 1 2 2 2 3 3 3
> 
> ## which base functions have "file" in their name ?
> lsf.str(pos = length(search()), pattern = "file")
bzfile : function (description, open = "", encoding = getOption("encoding"), compression = 9)  
close.srcfile : function (con, ...)  
close.srcfilealias : function (con, ...)  
env.profile : function (env)  
file : function (description = "", open = "", blocking = TRUE, encoding = getOption("encoding"), 
    raw = FALSE, method = getOption("url.method", "default"))  
file.access : function (names, mode = 0)  
file.append : function (file1, file2)  
file.choose : function (new = FALSE)  
file.copy : function (from, to, overwrite = recursive, recursive = FALSE, copy.mode = TRUE, 
    copy.date = FALSE)  
file.create : function (..., showWarnings = TRUE)  
file.exists : function (...)  
file.info : function (..., extra_cols = TRUE)  
file.link : function (from, to)  
file.mode : function (...)  
file.mtime : function (...)  
file.path : function (..., fsep = .Platform$file.sep)  
file.remove : function (...)  
file.rename : function (from, to)  
file.show : function (..., header = rep("", nfiles), title = "R Information", delete.file = FALSE, 
    pager = getOption("pager"), encoding = "")  
file.size : function (...)  
file.symlink : function (from, to)  
gzfile : function (description, open = "", encoding = getOption("encoding"), compression = 6)  
list.files : function (path = ".", pattern = NULL, all.files = FALSE, full.names = FALSE, 
    recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)  
memory.profile : function ()  
nullfile : function ()  
open.srcfile : function (con, line, ...)  
open.srcfilealias : function (con, line, ...)  
open.srcfilecopy : function (con, line, ...)  
print.srcfile : function (x, ...)  
srcfile : function (filename, encoding = getOption("encoding"), Enc = "unknown")  
srcfilealias : function (filename, srcfile)  
srcfilecopy : function (filename, lines, timestamp = Sys.time(), isFile = FALSE)  
summary.srcfile : function (object, ...)  
system.file : function (..., package = "base", lib.loc = NULL, mustWork = FALSE)  
tempfile : function (pattern = "file", tmpdir = tempdir(), fileext = "")  
xzfile : function (description, open = "", encoding = getOption("encoding"), compression = 6)  
> 
> ## demonstrating that  ls.str() works inside functions
> ## ["browser/debug mode"]:
> tt <- function(x, y = 1) { aa <- 7; r <- x + y; ls.str() }
> (nms <- sapply(strsplit(capture.output(tt(2))," *: *"), `[`, 1))
[1] "aa" "r"  "x"  "y" 
> stopifnot(nms == c("aa", "r","x","y"))
> 
> 
> 
> cleanEx()
> nameEx("maintainer")
> ### * maintainer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: maintainer
> ### Title: Show Package Maintainer
> ### Aliases: maintainer
> ### Keywords: utilities
> 
> ### ** Examples
> 
> maintainer("MASS")
[1] "Brian Ripley <ripley@stats.ox.ac.uk>"
> 
> 
> 
> cleanEx()
> nameEx("make.packages.html")
> ### * make.packages.html
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make.packages.html
> ### Title: Update HTML Package List
> ### Aliases: make.packages.html
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D make.packages.html()
> ##D # this can be slow for large numbers of installed packages.
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("make.socket")
> ### * make.socket
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make.socket
> ### Title: Create a Socket Connection
> ### Aliases: make.socket print.socket
> ### Keywords: misc
> 
> ### ** Examples
> 
> daytime <- function(host = "localhost"){
+     a <- make.socket(host, 13)
+     on.exit(close.socket(a))
+     read.socket(a)
+ }
> ## Official time (UTC) from US Naval Observatory
> ## Not run: daytime("tick.usno.navy.mil")
> 
> 
> 
> cleanEx()
> nameEx("menu")
> ### * menu
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: menu
> ### Title: Menu Interaction Function
> ### Aliases: menu
> ### Keywords: utilities programming
> 
> ### ** Examples
> 
> ## Not run: 
> ##D switch(menu(c("List letters", "List LETTERS")) + 1,
> ##D        cat("Nothing done\n"), letters, LETTERS)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("methods")
> ### * methods
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: methods
> ### Title: List Methods for S3 Generic Functions or Classes
> ### Aliases: .S3methods methods format.MethodsFunction
> ###   print.MethodsFunction
> ### Keywords: methods
> 
> ### ** Examples
> 
> methods(class = "MethodsFunction") # format and print
[1] format print 
see '?methods' for accessing help and source code
> 
> require(stats)
> 
> methods(summary)
 [1] summary.Date                   summary.POSIXct               
 [3] summary.POSIXlt                summary.aov                   
 [5] summary.aovlist*               summary.aspell*               
 [7] summary.check_packages_in_dir* summary.connection            
 [9] summary.data.frame             summary.default               
[11] summary.ecdf*                  summary.factor                
[13] summary.glm                    summary.infl*                 
[15] summary.lm                     summary.loess*                
[17] summary.manova                 summary.matrix                
[19] summary.mlm*                   summary.nls*                  
[21] summary.packageStatus*         summary.ppr*                  
[23] summary.prcomp*                summary.princomp*             
[25] summary.proc_time              summary.srcfile               
[27] summary.srcref                 summary.stepfun               
[29] summary.stl*                   summary.table                 
[31] summary.tukeysmooth*           summary.warnings              
see '?methods' for accessing help and source code
> methods(class = "aov")    # S3 class
 [1] TukeyHSD     coef         coerce       extractAIC   initialize  
 [6] model.tables print        proj         se.contrast  show        
[11] slotsFromS3  summary      vcov        
see '?methods' for accessing help and source code
> ## The same, with more details and more difficult to read:
> print(methods(class = "aov"), byclass=FALSE)
 [1] TukeyHSD.aov*               coef.aov*                  
 [3] coerce,oldClass,S3-method   extractAIC.aov*            
 [5] initialize,oldClass-method  model.tables.aov*          
 [7] print.aov*                  proj.aov*                  
 [9] se.contrast.aov*            show,oldClass-method       
[11] slotsFromS3,oldClass-method summary.aov                
[13] vcov.aov*                  
see '?methods' for accessing help and source code
> methods("[[")             # uses C-internal dispatching
 [1] [[.Date            [[.POSIXct         [[.POSIXlt         [[.bibentry*      
 [5] [[.data.frame      [[.dendrogram*     [[.factor          [[.hashtab*       
 [9] [[.numeric_version [[.person*        
see '?methods' for accessing help and source code
> methods("$")
[1] $,envRefClass-method        $,refObjectGenerator-method
[3] $.DLLInfo                   $.bibentry*                
[5] $.package_version           $.person*                  
see '?methods' for accessing help and source code
> methods("$<-")            # replacement function
[1] $<-,data.frame-method         $<-,envRefClass-method       
[3] $<-,localRefClass-method      $<-,refObjectGenerator-method
[5] $<-.POSIXlt                   $<-.bibentry*                
[7] $<-.citation*                 $<-.data.frame               
[9] $<-.person*                  
see '?methods' for accessing help and source code
> methods("+")              # binary operator
[1] +.Date   +.POSIXt
see '?methods' for accessing help and source code
> methods("Math")           # group generic
[1] Math,nonStructure-method Math,structure-method    Math.Date               
[4] Math.POSIXt              Math.data.frame          Math.difftime           
[7] Math.factor             
see '?methods' for accessing help and source code
> require(graphics)
> methods(axis)             # looks like a generic, but is not
Warning in .S3methods(generic.function, class, envir, dropPath = dropPath) :
  function 'axis' appears not to be S3 generic; found functions that look like S3 methods
[1] axis.Date    axis.POSIXct
see '?methods' for accessing help and source code
> 
> mf <- methods(format)     # quite a few; ... the last few :
> tail(cbind(meth = format(mf)))
      meth                                 
[66,] "format.person*"                     
[67,] "format.roman*"                      
[68,] "format.subdir_tests*"               
[69,] "format.summarize_CRAN_check_status*"
[70,] "format.summaryDefault"              
[71,] "format.undoc*"                      
> 
> if(require(Matrix, quietly = TRUE)) {
+ print(methods(class = "Matrix"))  # S4 class
+ m <- methods(dim)         # S3 and S4 methods
+ print(m)
+ print(attr(m, "info"))    # more extensive information
+ 
+ ## --> help(showMethods) for related examples
+ }
 [1] !           %%          %&%         %*%         %/%         &          
 [7] *           +           -           /           Arith       Logic      
[13] Math2       Ops         [           [<-         ^           all.equal  
[19] as.array    as.complex  as.integer  as.logical  as.matrix   as.numeric 
[25] as.vector   cbind2      coerce      crossprod   determinant dim        
[31] dimnames    dimnames<-  drop        expm        head        image      
[37] initialize  kronecker   length      qr.coef     qr.fitted   qr.qty     
[43] qr.qy       qr.resid    rbind2      solve       tail        tcrossprod 
[49] unname      updown      zapsmall   
see '?methods' for accessing help and source code
[1] dim,Matrix-method              dim,MatrixFactorization-method
[3] dim.data.frame                 dim.layout*                   
[5] dim.trellis*                  
see '?methods' for accessing help and source code
                               visible                        from generic
dim,Matrix-method                 TRUE                      Matrix     dim
dim,MatrixFactorization-method    TRUE                      Matrix     dim
dim.data.frame                    TRUE                        base     dim
dim.layout                       FALSE registered S3method for dim     dim
dim.trellis                      FALSE registered S3method for dim     dim
                                isS4
dim,Matrix-method               TRUE
dim,MatrixFactorization-method  TRUE
dim.data.frame                 FALSE
dim.layout                     FALSE
dim.trellis                    FALSE
> 
> 
> 
> cleanEx()

detaching ‘package:Matrix’

> nameEx("modifyList")
> ### * modifyList
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: modifyList
> ### Title: Recursively Modify Elements of a List
> ### Aliases: modifyList
> ### Keywords: utilities
> 
> ### ** Examples
> 
> foo <- list(a = 1, b = list(c = "a", d = FALSE))
> bar <- modifyList(foo, list(e = 2, b = list(d = TRUE)))
> str(foo)
List of 2
 $ a: num 1
 $ b:List of 2
  ..$ c: chr "a"
  ..$ d: logi FALSE
> str(bar)
List of 3
 $ a: num 1
 $ b:List of 2
  ..$ c: chr "a"
  ..$ d: logi TRUE
 $ e: num 2
> 
> 
> 
> cleanEx()
> nameEx("news")
> ### * news
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: news
> ### Title: Build and Query R or Package News Information
> ### Aliases: news print.news_db
> 
> ### ** Examples
> 
> ## Build a db of all R news entries.
> db <- news()
> ## Don't show: 
>   vv <- capture.output(print(db, doBrowse=FALSE))  # without an error
>   stopifnot(is.character(vv), length(vv) >= 3) # was wrong (for weeks during devel.)
> ## End(Don't show)
> ## Bug fixes with PR number in 4.0.0.
> db4 <- news(Version == "4.0.0" & grepl("^BUG", Category) & grepl("PR#", Text),
+             db = db)
> nrow(db4)
[1] 25
> 
> ## print db4 to show in an HTML browser.
> 
> ## News from a date range ('Matrix' is there in a regular R installation):
> if(length(iM <- find.package("Matrix", quiet = TRUE)) && nzchar(iM)) {
+    dM <- news(package="Matrix")
+    stopifnot(identical(dM, news(db=dM)))
+    dM2014 <- news("2014-01-01" <= Date & Date <= "2014-12-31", db = dM)
+    stopifnot(paste0("1.1-", 2:4) %in% dM2014[,"Version"])
+ }
> 
> ## Which categories have been in use? % R-core maybe should standardize a bit more
> sort(table(db[, "Category"]), decreasing = TRUE)

                             BUG FIXES                           NEW FEATURES 
                                   338                                    235 
                             UTILITIES                     C-LEVEL FACILITIES 
                                    35                                     31 
          INSTALLATION on a UNIX-ALIKE                 DEPRECATED AND DEFUNCT 
                                    25                                     24 
                               WINDOWS                               GRAPHICS 
                                    18                                     15 
                       DATES and TIMES                   BUG FIXES on Windows 
                                    13                                     12 
                  PACKAGE INSTALLATION       SIGNIFICANT USER-VISIBLE CHANGES 
                                    12                                     11 
              ENCODING-RELATED CHANGES                    BUG FIXES (Windows) 
                                     8                                      7 
                               Windows LINK-TIME OPTIMIZATION on a UNIX-ALIKE 
                                     6                                      5 
                          INSTALLATION                     MIGRATION TO PCRE2 
                                     4                                      4 
                 BUILDING R on Windows                INSTALLATION on WINDOWS 
                                     3                                      3 
                         FORTRAN FLAGS                      FUTURE DIRECTIONS 
                                     1                                      1 
       PACKAGE INSTALLATION on Windows          PACKAGE INSTALLATION on macOS 
                                     1                                      1 
                    REFERENCE COUNTING 
                                     1 
> ## Entries with version >= 4.0.0
> table(news(Version >= "4.0.0", db = db)$Version)

4.0.0 4.0.1 4.0.2 4.0.3 4.0.4 4.0.5 4.1.0 4.1.1 4.1.2 4.1.3 4.2.0 4.2.1 4.2.2 
  156    11     6    26    18     2   127    19    17    20   143    21    25 
4.2.3 4.3.0 4.3.1 4.3.2 4.3.3 
   17   148    10    25    23 
> 
> 
> 
> 
> cleanEx()
> nameEx("nsl")
> ### * nsl
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nsl
> ### Title: Look up the IP Address by Hostname (on Unix-alikes)
> ### Aliases: nsl
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "unix") # includes Mac
+   print( nsl("www.r-project.org") )
[1] "137.208.57.37"
> 
> 
> 
> cleanEx()
> nameEx("object.size")
> ### * object.size
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: object.size
> ### Title: Report the Space Allocated for an Object
> ### Aliases: object.size format.object_size print.object_size
> ### Keywords: utilities
> 
> ### ** Examples
> 
> object.size(letters)
1712 bytes
> object.size(ls)
89880 bytes
> format(object.size(library), units = "auto")
[1] "1.8 Mb"
> 
> sl <- object.size(rep(letters, 1000))
> 
> print(sl)                                    ## 209288 bytes
209504 bytes
> print(sl, units = "auto")                    ## 204.4 Kb
204.6 Kb
> print(sl, units = "auto", standard = "IEC")  ## 204.4 KiB
204.6 KiB
> print(sl, units = "auto", standard = "SI")   ## 209.3 kB
209.5 kB
> 
> (fsl <- sapply(c("Kb", "KB", "KiB"),
+                function(u) format(sl, units = u)))
         Kb          KB         KiB 
 "204.6 Kb"  "204.6 Kb" "204.6 KiB" 
> stopifnot(identical( ## assert that all three are the same :
+              unique(substr(as.vector(fsl), 1,5)),
+              format(round(as.vector(sl)/1024, 1))))
> 
> ## find the 10 largest objects in the base package
> z <- sapply(ls("package:base"), function(x)
+             object.size(get(x, envir = baseenv())))
> if(interactive()) {
+ as.matrix(rev(sort(z))[1:10])
+ } else # (more constant over time):
+     names(rev(sort(z))[1:10])
 [1] "loadNamespace"      "library"            "[<-.data.frame"    
 [4] "parseNamespaceFile" "rbind.data.frame"   "seq.default"       
 [7] "source"             "merge.data.frame"   "registerS3methods" 
[10] "cut.POSIXt"        
> 
> 
> 
> cleanEx()
> nameEx("package.skeleton")
> ### * package.skeleton
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: package.skeleton
> ### Title: Create a Skeleton for a New Source Package
> ### Aliases: package.skeleton
> ### Keywords: file utilities
> 
> ### ** Examples
> 
> require(stats)
> ## two functions and two "data sets" :
> f <- function(x, y) x+y
> g <- function(x, y) x-y
> d <- data.frame(a = 1, b = 2)
> e <- rnorm(1000)
> ## Don't show: 
>   owd <- getwd()
>   setwd(tempdir())
> ## End(Don't show)
> package.skeleton(list = c("f","g","d","e"), name = "mypkg")
Creating directories ...
Creating DESCRIPTION ...
Creating NAMESPACE ...
Creating Read-and-delete-me ...
Saving functions and data ...
Making help files ...
Done.
Further steps are described in './mypkg/Read-and-delete-me'.
> ## Don't show: 
>  setwd(owd) 
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("packageDescription")
> ### * packageDescription
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: packageDescription
> ### Title: Package Description
> ### Aliases: packageDescription packageVersion packageDate asDateBuilt
> ###   print.packageDescription
> ### Keywords: utilities
> 
> ### ** Examples
> if(requireNamespace("MASS") && packageVersion("MASS") < "7.3.29")
+   message("you need to update 'MASS'")
Loading required namespace: MASS
> 
> pu <- packageDate("utils")
> stopifnot(identical(pu, packageDate(desc = packageDescription("utils"))),
+           identical(pu, packageDate("stats"))) # as "utils" and "stats" are
>                                    # both 'base R' and "Built" at same time
> 
> 
> 
> cleanEx()
> nameEx("packageName")
> ### * packageName
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: packageName
> ### Title: Find Package Associated with an Environment
> ### Aliases: packageName
> ### Keywords: utilities
> 
> ### ** Examples
> 
> packageName()
> packageName(environment(mean))
[1] "base"
> 
> 
> 
> cleanEx()
> nameEx("packageStatus")
> ### * packageStatus
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: packageStatus
> ### Title: Package Management Tools
> ### Aliases: packageStatus print.packageStatus summary.packageStatus
> ###   update.packageStatus upgrade.packageStatus
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D x <- packageStatus()
> ##D print(x)
> ##D summary(x)
> ##D upgrade(x)
> ##D x <- update(x)
> ##D print(x)
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("page")
> ### * page
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: page
> ### Title: Invoke a Pager on an R Object
> ### Aliases: page
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## four ways to look at the code of 'page'
> ##D page(page)             # as an object
> ##D page("page")           # a character string
> ##D v <- "page"; page(v)   # a length-one character vector
> ##D page(utils::page)      # a call
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("person")
> ### * person
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: person
> ### Title: Persons
> ### Aliases: person as.person as.person.default [.person $.person
> ###   as.character.person c.person format.person print.person
> ###   toBibtex.person
> ### Keywords: misc
> 
> ### ** Examples
> 
> ## Create a person object directly ...
> p1 <- person("Karl", "Pearson", email = "pearson@stats.heaven")
> 
> ## ... or convert a string.
> p2 <- as.person("Ronald Aylmer Fisher")
> 
> ## Combining and subsetting.
> p <- c(p1, p2)
> p[1]
[1] "Karl Pearson <pearson@stats.heaven>"
> p[-1]
[1] "Ronald Aylmer Fisher"
> 
> ## Extracting fields.
> p$family
[[1]]
[1] "Pearson"

[[2]]
[1] "Fisher"

> p$email
[[1]]
[1] "pearson@stats.heaven"

[[2]]
NULL

> p[1]$email
[1] "pearson@stats.heaven"
> 
> ## Specifying package authors, example from "boot":
> ## AC is the first author [aut] who wrote the S original.
> ## BR is the second author [aut], who translated the code to R [trl],
> ## and maintains the package [cre].
> b <- c(person("Angelo", "Canty", role = "aut", comment =
+          "S original, <http://statwww.epfl.ch/davison/BMA/library.html>"),
+        person(c("Brian", "D."), "Ripley", role = c("aut", "trl", "cre"),
+               comment = "R port", email = "ripley@stats.ox.ac.uk")
+      )
> b
[1] "Angelo Canty [aut] (S original, <http://statwww.epfl.ch/davison/BMA/library.html>)"
[2] "Brian D. Ripley <ripley@stats.ox.ac.uk> [aut, trl, cre] (R port)"                  
> 
> ## Formatting.
> format(b)
[1] "Angelo Canty [aut] (S original, <http://statwww.epfl.ch/davison/BMA/library.html>)"
[2] "Brian D. Ripley <ripley@stats.ox.ac.uk> [aut, trl, cre] (R port)"                  
> format(b, include = c("family", "given", "role"),
+    braces = list(family = c("", ","), role = c("(Role(s): ", ")")))
[1] "Canty, Angelo (Role(s): aut)"             
[2] "Ripley, Brian D. (Role(s): aut, trl, cre)"
> 
> ## Conversion to BibTeX author field.
> paste(format(b, include = c("given", "family")), collapse = " and ")
[1] "Angelo Canty and Brian D. Ripley"
> toBibtex(b)
[1] "Canty, Angelo and Ripley, Brian D."
> 
> ## ORCID identifiers.
> (p3 <- person("Achim", "Zeileis",
+               comment = c(ORCID = "0000-0003-0918-3766")))
[1] "Achim Zeileis (<https://orcid.org/0000-0003-0918-3766>)"
> 
> 
> 
> cleanEx()
> nameEx("prompt")
> ### * prompt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prompt
> ### Title: Produce Prototype of an R Documentation File
> ### Aliases: prompt prompt.default prompt.data.frame promptImport
> ### Keywords: documentation
> 
> ### ** Examples
> 
> require(graphics)
> ## Don't show: 
> oldwd <- setwd(tempdir())
> ## End(Don't show)
> prompt(plot.default)
Created file named ‘plot.default.Rd’.
Edit the file and move it to the appropriate directory.
> prompt(interactive, force.function = TRUE)
Created file named ‘interactive.Rd’.
Edit the file and move it to the appropriate directory.
> unlink("plot.default.Rd")
> unlink("interactive.Rd")
> 
> prompt(women) # data.frame
Created file named ‘women.Rd’.
Edit the file and move it to the appropriate directory.
> unlink("women.Rd")
> 
> prompt(sunspots) # non-data.frame data
Created file named ‘sunspots.Rd’.
Edit the file and move it to the appropriate directory.
> unlink("sunspots.Rd")
> 
> ## Don't show: 
> setwd(oldwd)
> ## End(Don't show)
> ## Not run: 
> ##D ## Create a help file for each function in the .GlobalEnv:
> ##D for(f in ls()) if(is.function(get(f))) prompt(name = f)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("promptData")
> ### * promptData
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: promptData
> ### Title: Generate Outline Documentation for a Data Set
> ### Aliases: promptData
> ### Keywords: documentation
> 
> ### ** Examples
> 
> ## Don't show: 
> oldwd <- setwd(tempdir())
> ## End(Don't show)
> promptData(sunspots)
Created file named ‘sunspots.Rd’.
Edit the file and move it to the appropriate directory.
> unlink("sunspots.Rd")
> ## Don't show: 
> setwd(oldwd)
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("promptPackage")
> ### * promptPackage
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: promptPackage
> ### Title: Generate a Shell for Documentation of a Package
> ### Aliases: promptPackage
> ### Keywords: documentation
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("read.DIF")
> ### * read.DIF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.DIF
> ### Title: Data Input from Spreadsheet
> ### Aliases: read.DIF
> ### Keywords: file connection
> 
> ### ** Examples
> 
> ## read.DIF() may need transpose = TRUE for a file exported from Excel
> udir <- system.file("misc", package = "utils")
> dd <- read.DIF(file.path(udir, "exDIF.dif"), header = TRUE, transpose = TRUE)
> dc <- read.csv(file.path(udir, "exDIF.csv"), header = TRUE)
> stopifnot(identical(dd, dc), dim(dd) == c(4,2))
> 
> 
> 
> cleanEx()
> nameEx("read.fortran")
> ### * read.fortran
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.fortran
> ### Title: Read Fixed-Format Data in a Fortran-like Style
> ### Aliases: read.fortran
> ### Keywords: file connection
> 
> ### ** Examples
> 
> ff <- tempfile()
> cat(file = ff, "123456", "987654", sep = "\n")
> read.fortran(ff, c("F2.1","F2.0","I2"))
   V1 V2 V3
1 1.2 34 56
2 9.8 76 54
> read.fortran(ff, c("2F1.0","2X","2A1"))
  V1 V2 V3 V4
1  1  2  5  6
2  9  8  5  4
> unlink(ff)
> cat(file = ff, "123456AB", "987654CD", sep = "\n")
> read.fortran(ff, list(c("2F3.1","A2"), c("3I2","2X")))
    V1   V2 V3 V4 V5 V6
1 12.3 45.6 AB 98 76 54
> unlink(ff)
> # Note that the first number is read differently than Fortran would
> # read it:
> cat(file = ff, "12.3456", "1234567", sep = "\n")
> read.fortran(ff, "F7.4")
            V1
1   0.00123456
2 123.45670000
> unlink(ff)
> 
> 
> 
> cleanEx()
> nameEx("read.fwf")
> ### * read.fwf
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.fwf
> ### Title: Read Fixed Width Format Files
> ### Aliases: read.fwf
> ### Keywords: file connection
> 
> ### ** Examples
> 
> ff <- tempfile()
> cat(file = ff, "123456", "987654", sep = "\n")
> read.fwf(ff, widths = c(1,2,3))    #> 1 23 456 \ 9 87 654
  V1 V2  V3
1  1 23 456
2  9 87 654
> read.fwf(ff, widths = c(1,-2,3))   #> 1 456 \ 9 654
  V1  V2
1  1 456
2  9 654
> unlink(ff)
> cat(file = ff, "123", "987654", sep = "\n")
> read.fwf(ff, widths = c(1,0, 2,3))    #> 1 NA 23 NA \ 9 NA 87 654
  V1 V2 V3  V4
1  1 NA 23  NA
2  9 NA 87 654
> unlink(ff)
> cat(file = ff, "123456", "987654", sep = "\n")
> read.fwf(ff, widths = list(c(1,0, 2,3), c(2,2,2))) #> 1 NA 23 456 98 76 54
  V1 V2 V3  V4 V5 V6 V7
1  1 NA 23 456 98 76 54
> unlink(ff)
> 
> 
> 
> cleanEx()
> nameEx("read.socket")
> ### * read.socket
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.socket
> ### Title: Read from or Write to a Socket
> ### Aliases: read.socket write.socket
> ### Keywords: misc
> 
> ### ** Examples
> 
> finger <- function(user, host = "localhost", port = 79, print = TRUE)
+ {
+     if (!is.character(user))
+         stop("user name must be a string")
+     user <- paste(user,"\r\n")
+     socket <- make.socket(host, port)
+     on.exit(close.socket(socket))
+     write.socket(socket, user)
+     output <- character(0)
+     repeat{
+         ss <- read.socket(socket)
+         if (ss == "") break
+         output <- paste(output, ss)
+     }
+     close.socket(socket)
+     if (print) cat(output)
+     invisible(output)
+ }
> ## Not run: 
> ##D finger("root")  ## only works if your site provides a finger daemon
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("read.table")
> ### * read.table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.table
> ### Title: Data Input
> ### Aliases: read.table read.csv read.csv2 read.delim read.delim2
> ### Keywords: file connection
> 
> ### ** Examples
> 
> ## using count.fields to handle unknown maximum number of fields
> ## when fill = TRUE
> test1 <- c(1:5, "6,7", "8,9,10")
> tf <- tempfile()
> writeLines(test1, tf)
> 
> read.csv(tf, fill = TRUE) # 1 column
  X1
1  2
2  3
3  4
4  5
5  6
6  7
7  8
8  9
9 10
> ncol <- max(count.fields(tf, sep = ","))
> read.csv(tf, fill = TRUE, header = FALSE,
+          col.names = paste0("V", seq_len(ncol)))
  V1 V2 V3
1  1 NA NA
2  2 NA NA
3  3 NA NA
4  4 NA NA
5  5 NA NA
6  6  7 NA
7  8  9 10
> unlink(tf)
> 
> ## "Inline" data set, using text=
> ## Notice that leading and trailing empty lines are auto-trimmed
> 
> read.table(header = TRUE, text = "
+ a b
+ 1 2
+ 3 4
+ ")
  a b
1 1 2
2 3 4
> 
> 
> 
> cleanEx()
> nameEx("readRegistry")
> ### * readRegistry
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readRegistry
> ### Title: Read a Windows Registry Hive
> ### Aliases: readRegistry
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## on a 64-bit R need this to find 32-bit JAGS
> ##D readRegistry("SOFTWARE\\JAGS", maxdepth = 3, view = "32")
> ##D 
> ##D ## See if there is a 64-bit user install
> ##D readRegistry("SOFTWARE\\R-core\\R64", "HCU", maxdepth = 2)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("recover")
> ### * recover
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recover
> ### Title: Browsing after an Error
> ### Aliases: recover
> ### Keywords: programming debugging
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D options(error = recover) # setting the error option
> ##D 
> ##D ### Example of interaction
> ##D 
> ##D > myFit <- lm(y ~ x, data = xy, weights = w)
> ##D Error in lm.wfit(x, y, w, offset = offset, ...) :
> ##D         missing or negative weights not allowed
> ##D 
> ##D Enter a frame number, or 0 to exit
> ##D 1:lm(y ~ x, data = xy, weights = w)
> ##D 2:lm.wfit(x, y, w, offset = offset, ...)
> ##D Selection: 2
> ##D Called from: eval(expr, envir, enclos)
> ##D Browse[1]> objects() # all the objects in this frame
> ##D [1] "method" "n"      "ny"     "offset" "tol"    "w"
> ##D [7] "x"      "y"
> ##D Browse[1]> w
> ##D [1] -0.5013844  1.3112515  0.2939348 -0.8983705 -0.1538642
> ##D [6] -0.9772989  0.7888790 -0.1919154 -0.3026882
> ##D Browse[1]> dump.frames() # save for offline debugging
> ##D Browse[1]> c # exit the browser
> ##D 
> ##D Enter a frame number, or 0 to exit
> ##D 1:lm(y ~ x, data = xy, weights = w)
> ##D 2:lm.wfit(x, y, w, offset = offset, ...)
> ##D Selection: 0 # exit recover
> ##D >
> ##D 
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("relist")
> ### * relist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: relist
> ### Title: Allow Re-Listing an unlist()ed Object
> ### Aliases: relist relist.default relist.list relist.factor relist.matrix
> ###   as.relistable is.relistable unlist.relistable
> ### Keywords: list manip
> 
> ### ** Examples
> 
>  ipar <- list(mean = c(0, 1), vcov = cbind(c(1, 1), c(1, 0)))
>  initial.param <- as.relistable(ipar)
>  ul <- unlist(initial.param)
>  relist(ul)
$mean
[1] 0 1

$vcov
     [,1] [,2]
[1,]    1    1
[2,]    1    0

attr(,"class")
[1] "relistable" "list"      
>  stopifnot(identical(relist(ul), initial.param))
> 
> 
> 
> cleanEx()
> nameEx("removeSource")
> ### * removeSource
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: removeSource
> ### Title: Remove Stored Source from a Function or Language Object
> ### Aliases: removeSource
> ### Keywords: utility
> 
> ### ** Examples
> 
> ## to make this act independently of the global 'options()' setting:
> op <- options(keep.source = TRUE)
> fn <- function(x) {
+   x + 1 # A comment, kept as part of the source
+ }
> fn
function(x) {
  x + 1 # A comment, kept as part of the source
}
> names(attributes(fn))       # "srcref" (only)
[1] "srcref"
> names(attributes(body(fn))) # "srcref" "srcfile" "wholeSrcref"
[1] "srcref"      "srcfile"     "wholeSrcref"
> f2 <- removeSource(fn)
> f2
function (x) 
{
    x + 1
}
> stopifnot(length(attributes(fn)) > 0,
+           is.null(attributes(f2)),
+           is.null(attributes(body(f2))))
> 
> ## Source attribute of parse()d expressions,
> ##	  have {"srcref", "srcfile", "wholeSrcref"} :
> E  <- parse(text ="a <- x^y  # power")  ; names(attributes(E ))
[1] "srcref"      "srcfile"     "wholeSrcref"
> E. <- removeSource(E)                   ; names(attributes(E.))
NULL
> stopifnot(length(attributes(E ))  > 0,
+           is.null(attributes(E.)))
> options(op) # reset to previous state
> 
> 
> 
> cleanEx()
> nameEx("roman")
> ### * roman
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: roman
> ### Title: Roman Numerals
> ### Aliases: as.roman .romans Ops.roman Summary.roman
> ### Keywords: arith
> 
> ### ** Examples
> 
> ## First five roman 'numbers'.
> (y <- as.roman(1 : 5))
[1] I   II  III IV  V  
> ## Middle one.
> y[3]
[1] III
> ## Current year as a roman number.
> (y <- as.roman(format(Sys.Date(), "%Y")))
[1] MMXXV
> ## Today, and  10, 20, 30, and 100 years ago ...
> y - 10*c(0:3,10)
[1] MMXXV  MMXV   MMV    MCMXCV MCMXXV
> ## Don't show: 
> stopifnot(identical(as.character(as.roman("2016") - 10*c(0:3,10)),
+              c("MMXVI", "MMVI", "MCMXCVI", "MCMLXXXVI", "MCMXVI"))) 
> ## End(Don't show)
> ## mixture of arabic and roman numbers :
> as.roman(c(NA, 1:3, "", strrep("I", 1:6))) # + NA with a warning for "IIIIII"
Warning in .roman2numeric(x[!dig.x]) : invalid roman numeral: IIIIII
 [1] <NA> I    II   III  <NA> I    II   III  IV   V    <NA>
> cc <- c(NA, 1:3, strrep("I", 0:5))
> (rc <- as.roman(cc)) # two NAs: 0 is not "roman"
 [1] <NA> I    II   III  <NA> I    II   III  IV   V   
> (ic <- as.integer(rc)) # works automatically [without an explicit method]
 [1] NA  1  2  3 NA  1  2  3  4  5
> rNA <- as.roman(NA)
> ## simple consistency checks -- arithmetic when result is in  {1,2,..,3899} :
> stopifnot(identical(rc, as.roman(rc)), # as.roman(.) is "idempotent"
+           identical(rc + rc + (3*rc), rc*5),
+           identical(ic, c(NA, 1:3, NA, 1:5)),
+           identical(as.integer(5*rc), 5L*ic),
+           identical(as.numeric(rc), as.numeric(ic)),
+           identical(rc[1], rNA),
+           identical(as.roman(0), rNA),
+           identical(as.roman(NA_character_), rNA),
+           identical(as.list(rc), as.list(ic)))
> ## Non-Arithmetic 'Ops' :
> stopifnot(exprs = {
+         # Comparisons :
+         identical(ic < 1:5, rc < 1:5)
+         identical(ic < 1:5, rc < as.roman(1:5))
+         # Logic  [integers |-> logical] :
+         identical(rc & TRUE , ic & TRUE)
+         identical(rc & FALSE, ic & FALSE)
+         identical(rc | FALSE, ic | FALSE)
+         identical(rc | NA   , ic | NA)
+ })
> ## 'Summary' group functions (and comparison):
> (rc. <- rc[!is.na(rc)])
[1] I   II  III I   II  III IV  V  
> stopifnot(exprs = {
+         identical(min(rc), as.roman(NA))
+         identical(min(rc, na.rm=TRUE),
+          as.roman(min(ic, na.rm=TRUE)))
+         identical(range(rc.),
+          as.roman(range(as.integer(rc.))))
+         identical(sum (rc, na.rm=TRUE), as.roman("XXI"))
+         identical(format(prod(rc, na.rm=TRUE)), "DCCXX")
+         format(prod(rc.)) == "DCCXX"
+ })
> 
> 
> 
> cleanEx()
> nameEx("rtags")
> ### * rtags
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rtags
> ### Title: An Etags-like Tagging Utility for R
> ### Aliases: rtags
> ### Keywords: programming utilities
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D rtags("/path/to/src/repository",
> ##D       pattern = "[.]*\\.[RrSs]$",
> ##D       keep.re = "/R/",
> ##D       verbose = TRUE,
> ##D       ofile = "TAGS",
> ##D       append = FALSE,
> ##D       recursive = TRUE)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("savehistory")
> ### * savehistory
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: savehistory
> ### Title: Load or Save or Display the Commands History
> ### Aliases: loadhistory savehistory history timestamp
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D ## Save the history in the home directory: note that it is not
> ##D ## (by default) read from there but from the current directory
> ##D .Last <- function()
> ##D     if(interactive()) try(savehistory("~/.Rhistory"))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("select.list")
> ### * select.list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: select.list
> ### Title: Select Items from a List
> ### Aliases: select.list
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D select.list(sort(.packages(all.available = TRUE)))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("sessionInfo")
> ### * sessionInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sessionInfo
> ### Title: Collect Information About the Current R Session
> ### Aliases: sessionInfo osVersion toLatex.sessionInfo print.sessionInfo
> ### Keywords: misc
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("setRepositories")
> ### * setRepositories
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: setRepositories
> ### Title: Select Package Repositories
> ### Aliases: setRepositories R_REPOSITORIES R_BIOC_VERSION
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D setRepositories(addURLs =
> ##D                 c(CRANxtras = "https://www.stats.ox.ac.uk/pub/RWin"))
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("setWindowTitle")
> ### * setWindowTitle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: setWindowTitle
> ### Title: Set the Window Title or the Statusbar of the RGui in Windows
> ### Aliases: setWindowTitle getWindowTitle getIdentification setStatusBar
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows") withAutoprint({
+ ## show the current working directory in the title, saving the old one
+ oldtitle <- setWindowTitle(getwd())
+ Sys.sleep(0.5)
+ ## reset the title
+ setWindowTitle("")
+ Sys.sleep(0.5)
+ ## restore the original title
+ setWindowTitle(title = oldtitle)
+ })
> 
> 
> 
> cleanEx()
> nameEx("shortPathName")
> ### * shortPathName
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shortPathName
> ### Title: Express File Paths in Short Form on Windows
> ### Aliases: shortPathName
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows") withAutoprint({
+ 
+ ## Don't show: 
+   cat(shortPathName(R.home()), sep = "\n")
+ ## End(Don't show)
+ })
> 
> 
> 
> cleanEx()
> nameEx("sourceutils")
> ### * sourceutils
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sourceutils
> ### Title: Source Reference Utilities
> ### Aliases: getSrcFilename getSrcDirectory getSrcref getSrcLocation
> ### Keywords: utilities
> 
> ### ** Examples
> 
> fn <- function(x) {
+   x + 1 # A comment, kept as part of the source
+ }			
> 
> # Show the temporary file directory
> # where the example was saved
> 
> getSrcDirectory(fn)
character(0)
> getSrcLocation(fn, "line")
NULL
> 
> 
> 
> cleanEx()
> nameEx("stack")
> ### * stack
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stack
> ### Title: Stack or Unstack Vectors from a Data Frame or List
> ### Aliases: stack stack.default stack.data.frame unstack unstack.default
> ###   unstack.data.frame
> ### Keywords: manip
> 
> ### ** Examples
> 
> require(stats)
> formula(PlantGrowth)         # check the default formula
weight ~ group
> pg <- unstack(PlantGrowth)   # unstack according to this formula
> pg
   ctrl trt1 trt2
1  4.17 4.81 6.31
2  5.58 4.17 5.12
3  5.18 4.41 5.54
4  6.11 3.59 5.50
5  4.50 5.87 5.37
6  4.61 3.83 5.29
7  5.17 6.03 4.92
8  4.53 4.89 6.15
9  5.33 4.32 5.80
10 5.14 4.69 5.26
> stack(pg)                    # now put it back together
   values  ind
1    4.17 ctrl
2    5.58 ctrl
3    5.18 ctrl
4    6.11 ctrl
5    4.50 ctrl
6    4.61 ctrl
7    5.17 ctrl
8    4.53 ctrl
9    5.33 ctrl
10   5.14 ctrl
11   4.81 trt1
12   4.17 trt1
13   4.41 trt1
14   3.59 trt1
15   5.87 trt1
16   3.83 trt1
17   6.03 trt1
18   4.89 trt1
19   4.32 trt1
20   4.69 trt1
21   6.31 trt2
22   5.12 trt2
23   5.54 trt2
24   5.50 trt2
25   5.37 trt2
26   5.29 trt2
27   4.92 trt2
28   6.15 trt2
29   5.80 trt2
30   5.26 trt2
> stack(pg, select = -ctrl)    # omitting one vector
   values  ind
1    4.81 trt1
2    4.17 trt1
3    4.41 trt1
4    3.59 trt1
5    5.87 trt1
6    3.83 trt1
7    6.03 trt1
8    4.89 trt1
9    4.32 trt1
10   4.69 trt1
11   6.31 trt2
12   5.12 trt2
13   5.54 trt2
14   5.50 trt2
15   5.37 trt2
16   5.29 trt2
17   4.92 trt2
18   6.15 trt2
19   5.80 trt2
20   5.26 trt2
> 
> 
> 
> cleanEx()
> nameEx("str")
> ### * str
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: str
> ### Title: Compactly Display the Structure of an Arbitrary R Object
> ### Aliases: str str.default str.data.frame strOptions
> ### Keywords: print documentation utilities
> 
> ### ** Examples
> 
> require(stats); require(grDevices); require(graphics)
> ## The following examples show some of 'str' capabilities
> str(1:12)
 int [1:12] 1 2 3 4 5 6 7 8 9 10 ...
> str(ls)
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE, 
    pattern, sorted = TRUE)  
> str(args) #- more useful than  args(args) !
function (name)  
> str(freeny)
'data.frame':	39 obs. of  5 variables:
 $ y                    : Time-Series  from 1962 to 1972: 8.79 8.79 8.81 8.81 8.91 ...
 $ lag.quarterly.revenue: num  8.8 8.79 8.79 8.81 8.81 ...
 $ price.index          : num  4.71 4.7 4.69 4.69 4.64 ...
 $ income.level         : num  5.82 5.83 5.83 5.84 5.85 ...
 $ market.potential     : num  13 13 13 13 13 ...
> str(str)
function (object, ...)  
> str(.Machine, digits.d = 20) # extra digits for identification of binary numbers
List of 29
 $ double.eps               : num 2.2204460492503130808e-16
 $ double.neg.eps           : num 1.1102230246251565404e-16
 $ double.xmin              : num 2.2250738585072013831e-308
 $ double.xmax              : num 1.7976931348623157081e+308
 $ double.base              : int 2
 $ double.digits            : int 53
 $ double.rounding          : int 5
 $ double.guard             : int 0
 $ double.ulp.digits        : int -52
 $ double.neg.ulp.digits    : int -53
 $ double.exponent          : int 11
 $ double.min.exp           : int -1022
 $ double.max.exp           : int 1024
 $ integer.max              : int 2147483647
 $ sizeof.long              : int 8
 $ sizeof.longlong          : int 8
 $ sizeof.longdouble        : int 16
 $ sizeof.pointer           : int 8
 $ sizeof.time_t            : int 8
 $ longdouble.eps           : num 1.084202172485504434e-19
 $ longdouble.neg.eps       : num 5.42101086242752217e-20
 $ longdouble.digits        : int 64
 $ longdouble.rounding      : int 5
 $ longdouble.guard         : int 0
 $ longdouble.ulp.digits    : int -63
 $ longdouble.neg.ulp.digits: int -64
 $ longdouble.exponent      : int 15
 $ longdouble.min.exp       : int -16382
 $ longdouble.max.exp       : int 16384
> str( lsfit(1:9, 1:9))
List of 4
 $ coefficients: Named num [1:2] 1.18e-15 1.00
  ..- attr(*, "names")= chr [1:2] "Intercept" "X"
 $ residuals   : num [1:9] -9.01e-16 1.72e-15 -2.47e-16 -2.25e-16 -2.03e-16 ...
 $ intercept   : logi TRUE
 $ qr          :List of 6
  ..$ qt   : num [1:9] -1.50e+01 7.75 -2.22e-16 0.00 2.22e-16 ...
  ..$ qr   : num [1:9, 1:2] -3 0.333 0.333 0.333 0.333 ...
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : NULL
  .. .. ..$ : chr [1:2] "Intercept" "X"
  ..$ qraux: num [1:2] 1.33 1.26
  ..$ rank : int 2
  ..$ pivot: int [1:2] 1 2
  ..$ tol  : num 1e-07
  ..- attr(*, "class")= chr "qr"
> str( lsfit(1:9, 1:9), max.level = 1)
List of 4
 $ coefficients: Named num [1:2] 1.18e-15 1.00
  ..- attr(*, "names")= chr [1:2] "Intercept" "X"
 $ residuals   : num [1:9] -9.01e-16 1.72e-15 -2.47e-16 -2.25e-16 -2.03e-16 ...
 $ intercept   : logi TRUE
 $ qr          :List of 6
  ..- attr(*, "class")= chr "qr"
> str( lsfit(1:9, 1:9), width = 60, strict.width = "cut")
List of 4
 $ coefficients: Named num [1:2] 1.18e-15 1.00
  ..- attr(*, "names")= chr [1:2] "Intercept" "X"
 $ residuals   : num [1:9] -9.01e-16 1.72e-15 -2.47e-16 -2..
 $ intercept   : logi TRUE
 $ qr          :List of 6
  ..$ qt   : num [1:9] -1.50e+01 7.75 -2.22e-16 0.00 2.22e..
  ..$ qr   : num [1:9, 1:2] -3 0.333 0.333 0.333 0.333 ...
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : NULL
  .. .. ..$ : chr [1:2] "Intercept" "X"
  ..$ qraux: num [1:2] 1.33 1.26
  ..$ rank : int 2
  ..$ pivot: int [1:2] 1 2
  ..$ tol  : num 1e-07
  ..- attr(*, "class")= chr "qr"
> str( lsfit(1:9, 1:9), width = 60, strict.width = "wrap")
List of 4
$ coefficients: Named num [1:2] 1.18e-15 1.00
..- attr(*, "names")= chr [1:2] "Intercept" "X"
$ residuals : num [1:9] -9.01e-16 1.72e-15 -2.47e-16
   -2.25e-16 -2.03e-16 ...
$ intercept : logi TRUE
$ qr :List of 6
..$ qt : num [1:9] -1.50e+01 7.75 -2.22e-16 0.00 2.22e-16
   ...
..$ qr : num [1:9, 1:2] -3 0.333 0.333 0.333 0.333 ...
.. ..- attr(*, "dimnames")=List of 2
.. .. ..$ : NULL
.. .. ..$ : chr [1:2] "Intercept" "X"
..$ qraux: num [1:2] 1.33 1.26
..$ rank : int 2
..$ pivot: int [1:2] 1 2
..$ tol : num 1e-07
..- attr(*, "class")= chr "qr"
> op <- options(); str(op)   # save first;
List of 72
 $ CBoundsCheck            : logi FALSE
 $ HTTPUserAgent           : chr "R (4.3.3 x86_64-pc-linux-gnu x86_64 linux-gnu)"
 $ OutDec                  : chr "."
 $ PCRE_limit_recursion    : logi NA
 $ PCRE_study              : logi FALSE
 $ PCRE_use_JIT            : logi TRUE
 $ add.smooth              : logi TRUE
 $ ambiguousMethodSelection:function (cond)  
 $ bitmapType              : chr "cairo"
 $ browser                 : chr "xdg-open"
 $ browserNLdisabled       : logi FALSE
 $ check.bounds            : logi FALSE
 $ citation.bibtex.max     : int 1
 $ continue                : chr "+ "
 $ contrasts               : Named chr [1:2] "contr.treatment" "contr.poly"
  ..- attr(*, "names")= chr [1:2] "unordered" "ordered"
 $ defaultPackages         : chr [1:6] "datasets" "utils" "grDevices" "graphics" ...
 $ demo.ask                : chr "default"
 $ deparse.cutoff          : int 60
 $ device                  :function (file = if (onefile) "Rplots.pdf" else "Rplot%03d.pdf", width, 
    height, onefile, family, title, fonts, version, paper, encoding, bg, 
    fg, pointsize, pagecentre, colormodel, useDingbats, useKerning, fillOddEven, 
    compress)  
 $ device.ask.default      : logi FALSE
 $ digits                  : int 7
 $ dvipscmd                : chr "dvips"
 $ echo                    : logi TRUE
 $ editor                  : chr "vi"
 $ encoding                : chr "native.enc"
 $ example.ask             : chr "default"
 $ expressions             : int 5000
 $ help.search.types       : chr [1:3] "vignette" "demo" "help"
 $ help.try.all.packages   : logi FALSE
 $ internet.info           : int 2
 $ keep.parse.data         : logi TRUE
 $ keep.parse.data.pkgs    : logi FALSE
 $ keep.source             : logi FALSE
 $ keep.source.pkgs        : logi FALSE
 $ locatorBell             : logi TRUE
 $ mailer                  : chr "mailto"
 $ matprod                 : chr "default"
 $ max.contour.segments    : int 25000
 $ max.print               : int 99999
 $ menu.graphics           : logi TRUE
 $ na.action               : chr "na.omit"
 $ nwarnings               : int 50
 $ pager                   : chr "/usr/local/lib/R/bin/pager"
 $ papersize               : chr "letter"
 $ pdfviewer               : chr "/usr/bin/xdg-open"
 $ pkgType                 : chr "source"
 $ printcmd                : chr "/usr/bin/lpr"
 $ prompt                  : chr "> "
 $ repos                   : Named chr "@CRAN@"
  ..- attr(*, "names")= chr "CRAN"
 $ rl_word_breaks          : chr " \t\n\"\\'`><=%;,|&{()}"
 $ scipen                  : num 0
 $ show.coef.Pvalues       : logi TRUE
 $ show.error.messages     : logi TRUE
 $ show.signif.stars       : logi TRUE
 $ showErrorCalls          : logi TRUE
 $ showNCalls              : int 50
 $ showWarnCalls           : logi FALSE
 $ str                     :List of 7
  ..$ strict.width     : chr "no"
  ..$ digits.d         : int 3
  ..$ vec.len          : int 4
  ..$ list.len         : int 99
  ..$ deparse.lines    : NULL
  ..$ drop.deparse.attr: logi TRUE
  ..$ formatNum        :function (x, ...)  
 $ str.dendrogram.last     : chr "`"
 $ texi2dvi                : chr "/usr/bin/texi2dvi"
 $ timeout                 : int 60
 $ ts.S.compat             : logi FALSE
 $ ts.eps                  : num 1e-05
 $ unzip                   : chr "/usr/bin/unzip"
 $ useFancyQuotes          : logi TRUE
 $ verbose                 : logi FALSE
 $ warn                    : int 1
 $ warnPartialMatchArgs    : logi FALSE
 $ warnPartialMatchAttr    : logi FALSE
 $ warnPartialMatchDollar  : logi FALSE
 $ warning.length          : int 1000
 $ width                   : int 80
>                            # otherwise internal options() is used.
> need.dev <-
+   !exists(".Device") || is.null(.Device) || .Device == "null device"
> { if(need.dev) postscript()
+   str(par())
+   if(need.dev) graphics.off()
+ }
List of 72
 $ xlog     : logi FALSE
 $ ylog     : logi FALSE
 $ adj      : num 0.5
 $ ann      : logi TRUE
 $ ask      : logi FALSE
 $ bg       : chr "transparent"
 $ bty      : chr "o"
 $ cex      : num 1
 $ cex.axis : num 1
 $ cex.lab  : num 1
 $ cex.main : num 1.2
 $ cex.sub  : num 1
 $ cin      : num [1:2] 0.15 0.2
 $ col      : chr "black"
 $ col.axis : chr "black"
 $ col.lab  : chr "black"
 $ col.main : chr "black"
 $ col.sub  : chr "black"
 $ cra      : num [1:2] 10.8 14.4
 $ crt      : num 0
 $ csi      : num 0.2
 $ cxy      : num [1:2] 0.837 3.642
 $ din      : num [1:2] 7 7
 $ err      : int 0
 $ family   : chr ""
 $ fg       : chr "black"
 $ fig      : num [1:4] 0 1 0 1
 $ fin      : num [1:2] 7 7
 $ font     : int 1
 $ font.axis: int 1
 $ font.lab : int 1
 $ font.main: int 2
 $ font.sub : int 1
 $ lab      : int [1:3] 5 5 7
 $ las      : int 0
 $ lend     : chr "round"
 $ lheight  : num 1
 $ ljoin    : chr "round"
 $ lmitre   : num 10
 $ lty      : chr "solid"
 $ lwd      : num 1
 $ mai      : num [1:4] 1.02 0.82 0.82 0.42
 $ mar      : num [1:4] 5.1 4.1 4.1 2.1
 $ mex      : num 1
 $ mfcol    : int [1:2] 1 1
 $ mfg      : int [1:4] 1 1 1 1
 $ mfrow    : int [1:2] 1 1
 $ mgp      : num [1:3] 3 1 0
 $ mkh      : num 0.001
 $ new      : logi FALSE
 $ oma      : num [1:4] 0 0 0 0
 $ omd      : num [1:4] 0 1 0 1
 $ omi      : num [1:4] 0 0 0 0
 $ page     : logi TRUE
 $ pch      : int 1
 $ pin      : num [1:2] 5.76 5.16
 $ plt      : num [1:4] 0.117 0.94 0.146 0.883
 $ ps       : int 12
 $ pty      : chr "m"
 $ smo      : num 1
 $ srt      : num 0
 $ tck      : num NA
 $ tcl      : num -0.5
 $ usr      : num [1:4] 1943.81 1975.94 -3.48 90.48
 $ xaxp     : num [1:3] 1945 1975 6
 $ xaxs     : chr "r"
 $ xaxt     : chr "s"
 $ xpd      : logi FALSE
 $ yaxp     : num [1:3] 0 80 4
 $ yaxs     : chr "r"
 $ yaxt     : chr "s"
 $ ylbias   : num 0.2
> ch <- letters[1:12]; is.na(ch) <- 3:5
> str(ch) # character NA's
 chr [1:12] "a" "b" NA NA NA "f" "g" "h" "i" "j" "k" "l"
> 
> str(list(a = "A", L = as.list(1:100)), list.len = 9)
List of 2
 $ a: chr "A"
 $ L:List of 100
  ..$ : int 1
  ..$ : int 2
  ..$ : int 3
  ..$ : int 4
  ..$ : int 5
  ..$ : int 6
  ..$ : int 7
  ..$ : int 8
  ..$ : int 9
  .. [list output truncated]
> ##                                     ------------
> ## " .. [list output truncated] "
> 
> ## Long strings,   'nchar.max'; 'strict.width' :
> nchar(longch <- paste(rep(letters,100), collapse = ""))
[1] 2600
> str(longch)
 chr "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefg"| __truncated__
> str(longch, nchar.max = 52)
 chr "abcdefghijklmnopqrstuvwxyzabcdefghi"| __truncated__
> str(longch, strict.width = "wrap")
chr
   "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu"..
   __truncated__
> 
> ## Multibyte characters in strings:
> ## Truncation behavior (<-> correct width measurement) for "long" non-ASCII:
> idx <- c(65313:65338, 65345:65350)
> fwch <- intToUtf8(idx) # full width character string: each has width 2
> ch <- strtrim(paste(LETTERS, collapse="._"), 64)
> (ncc <- c(c.ch = nchar(ch),   w.ch = nchar(ch,   "w"),
+           c.fw = nchar(fwch), w.fw = nchar(fwch, "w")))
c.ch w.ch c.fw w.fw 
  64   64   32   64 
> stopifnot(unname(ncc) == c(64,64, 32, 64))
> ## nchar.max: 1st line needs an increase of  2  in order to see  1  (in UTF-8!):
> invisible(lapply(60:66, function(N) str(fwch, nchar.max = N)))
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸ"| __truncated__
 chr "ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺａｂｃｄｅｆ"
> invisible(lapply(60:66, function(N) str( ch , nchar.max = N))) # "1 is 1" here
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O"| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O."| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O._"| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O._P"| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O._P."| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O._P._"| __truncated__
 chr "A._B._C._D._E._F._G._H._I._J._K._L._M._N._O._P._Q._R._S._T._U._V"
> 
> 
> ## Settings for narrow transcript :
> op <- options(width = 60,
+               str = strOptions(strict.width = "wrap"))
> str(lsfit(1:9,1:9))
List of 4
$ coefficients: Named num [1:2] 1.18e-15 1.00
..- attr(*, "names")= chr [1:2] "Intercept" "X"
$ residuals : num [1:9] -9.01e-16 1.72e-15 -2.47e-16
   -2.25e-16 -2.03e-16 ...
$ intercept : logi TRUE
$ qr :List of 6
..$ qt : num [1:9] -1.50e+01 7.75 -2.22e-16 0.00 2.22e-16
   ...
..$ qr : num [1:9, 1:2] -3 0.333 0.333 0.333 0.333 ...
.. ..- attr(*, "dimnames")=List of 2
.. .. ..$ : NULL
.. .. ..$ : chr [1:2] "Intercept" "X"
..$ qraux: num [1:2] 1.33 1.26
..$ rank : int 2
..$ pivot: int [1:2] 1 2
..$ tol : num 1e-07
..- attr(*, "class")= chr "qr"
> str(options())
List of 72
$ CBoundsCheck : logi FALSE
$ HTTPUserAgent : chr "R (4.3.3 x86_64-pc-linux-gnu x86_64
   linux-gnu)"
$ OutDec : chr "."
$ PCRE_limit_recursion : logi NA
$ PCRE_study : logi FALSE
$ PCRE_use_JIT : logi TRUE
$ add.smooth : logi TRUE
$ ambiguousMethodSelection:function (cond)
$ bitmapType : chr "cairo"
$ browser : chr "xdg-open"
$ browserNLdisabled : logi FALSE
$ check.bounds : logi FALSE
$ citation.bibtex.max : int 1
$ continue : chr "+ "
$ contrasts : Named chr [1:2] "contr.treatment"
   "contr.poly"
..- attr(*, "names")= chr [1:2] "unordered" "ordered"
$ defaultPackages : chr [1:6] "datasets" "utils"
   "grDevices" "graphics" ...
$ demo.ask : chr "default"
$ deparse.cutoff : int 60
$ device :function (file = if (onefile) "Rplots.pdf" else
   "Rplot%03d.pdf",
width, height, onefile, family, title, fonts, version,
paper, encoding, bg, fg, pointsize, pagecentre,
colormodel, useDingbats, useKerning, fillOddEven,
compress)
$ device.ask.default : logi FALSE
$ digits : int 7
$ dvipscmd : chr "dvips"
$ echo : logi TRUE
$ editor : chr "vi"
$ encoding : chr "native.enc"
$ example.ask : chr "default"
$ expressions : int 5000
$ help.search.types : chr [1:3] "vignette" "demo" "help"
$ help.try.all.packages : logi FALSE
$ internet.info : int 2
$ keep.parse.data : logi TRUE
$ keep.parse.data.pkgs : logi FALSE
$ keep.source : logi FALSE
$ keep.source.pkgs : logi FALSE
$ locatorBell : logi TRUE
$ mailer : chr "mailto"
$ matprod : chr "default"
$ max.contour.segments : int 25000
$ max.print : int 99999
$ menu.graphics : logi TRUE
$ na.action : chr "na.omit"
$ nwarnings : int 50
$ pager : chr "/usr/local/lib/R/bin/pager"
$ papersize : chr "letter"
$ pdfviewer : chr "/usr/bin/xdg-open"
$ pkgType : chr "source"
$ printcmd : chr "/usr/bin/lpr"
$ prompt : chr "> "
$ repos : Named chr "@CRAN@"
..- attr(*, "names")= chr "CRAN"
$ rl_word_breaks : chr " \t\n\"\\'`><=%;,|&{()}"
$ scipen : num 0
$ show.coef.Pvalues : logi TRUE
$ show.error.messages : logi TRUE
$ show.signif.stars : logi TRUE
$ showErrorCalls : logi TRUE
$ showNCalls : int 50
$ showWarnCalls : logi FALSE
$ str :List of 7
..$ strict.width : chr "wrap"
..$ digits.d : int 3
..$ vec.len : int 4
..$ list.len : int 99
..$ deparse.lines : NULL
..$ drop.deparse.attr: logi TRUE
..$ formatNum :function (x, ...)
$ str.dendrogram.last : chr "`"
$ texi2dvi : chr "/usr/bin/texi2dvi"
$ timeout : int 60
$ ts.S.compat : logi FALSE
$ ts.eps : num 1e-05
$ unzip : chr "/usr/bin/unzip"
$ useFancyQuotes : logi TRUE
$ verbose : logi FALSE
$ warn : int 1
$ warnPartialMatchArgs : logi FALSE
$ warnPartialMatchAttr : logi FALSE
$ warnPartialMatchDollar : logi FALSE
$ warning.length : int 1000
$ width : int 60
> ## reset to previous:
> options(op)
> 
> 
> ## Don't show: 
>  ##-- Some "crazy" objects
>  str(array(1:5, dim = 20))
 int [1:20(1d)] 1 2 3 4 5 1 2 3 4 5 ...
>  str(factor(character(0)))
 Factor w/ 0 levels: 
>  str(as.data.frame(NULL))
'data.frame':	0 obs. of  0 variables
> ## End(Don't show)
> str(quote( { A+B; list(C, D) } ))
 language {  A + B; list(C, D) }
> 
> ## Don't show: 
> had.stats4 <- "package:stats4" %in% search()
> if(!had.stats4)
+    rs <- 
+ ## End(Don't show)
+ ## S4 classes :
+ require(stats4)
Loading required package: stats4
> x <- 0:10; y <- c(26, 17, 13, 12, 20, 5, 9, 8, 5, 4, 8)
> ll <- function(ymax = 15, xh = 6)
+       -sum(dpois(y, lambda=ymax/(1+x/xh), log=TRUE))
> fit <- mle(ll)
Warning in dpois(y, lambda = ymax/(1 + x/xh), log = TRUE) :
  NaNs produced
> str(fit)
Formal class 'mle' [package "stats4"] with 10 slots
  ..@ call     : language mle(minuslogl = ll)
  ..@ coef     : Named num [1:2] 24.99 3.06
  .. ..- attr(*, "names")= chr [1:2] "ymax" "xh"
  ..@ fullcoef : Named num [1:2] 24.99 3.06
  .. ..- attr(*, "names")= chr [1:2] "ymax" "xh"
  ..@ fixed    : Named num [1:2] NA NA
  .. ..- attr(*, "names")= chr [1:2] "ymax" "xh"
  ..@ vcov     : num [1:2, 1:2] 17.85 -3.72 -3.72 1.07
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:2] "ymax" "xh"
  .. .. ..$ : chr [1:2] "ymax" "xh"
  ..@ min      : num 28.6
  ..@ details  :List of 6
  .. ..$ par        : Named num [1:2] 24.99 3.06
  .. .. ..- attr(*, "names")= chr [1:2] "ymax" "xh"
  .. ..$ value      : num 28.6
  .. ..$ counts     : Named int [1:2] 25 18
  .. .. ..- attr(*, "names")= chr [1:2] "function" "gradient"
  .. ..$ convergence: int 0
  .. ..$ message    : NULL
  .. ..$ hessian    : num [1:2, 1:2] 0.203 0.706 0.706 3.388
  .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. ..$ : chr [1:2] "ymax" "xh"
  .. .. .. ..$ : chr [1:2] "ymax" "xh"
  ..@ minuslogl:function (ymax = 15, xh = 6)  
  ..@ nobs     : int NA
  ..@ method   : chr "BFGS"
> ## Don't show: 
> if(!had.stats4 && rs) detach("package:stats4")
> ## End(Don't show)
> 
> 
> 
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("strcapture")
> ### * strcapture
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: strcapture
> ### Title: Capture String Tokens into a data.frame
> ### Aliases: strcapture
> ### Keywords: utilities
> 
> ### ** Examples
> 
> x <- "chr1:1-1000"
> pattern <- "(.*?):([[:digit:]]+)-([[:digit:]]+)"
> proto <- data.frame(chr=character(), start=integer(), end=integer())
> strcapture(pattern, x, proto)
   chr start  end
1 chr1     1 1000
> 
> 
> 
> cleanEx()
> nameEx("summaryRprof")
> ### * summaryRprof
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summaryRprof
> ### Title: Summarise Output of R Sampling Profiler
> ### Aliases: summaryRprof
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Rprof() is not available on all platforms
> ##D Rprof(tmp <- tempfile())
> ##D example(glm)
> ##D Rprof()
> ##D summaryRprof(tmp)
> ##D unlink(tmp)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("txtProgressBar")
> ### * txtProgressBar
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: txtProgressBar
> ### Title: Text Progress Bar
> ### Aliases: txtProgressBar getTxtProgressBar setTxtProgressBar
> ###   close.txtProgressBar
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("type.convert")
> ### * type.convert
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: type.convert
> ### Title: Convert Data to Appropriate Type
> ### Aliases: type.convert type.convert.default type.convert.list
> ###   type.convert.data.frame
> ### Keywords: manip
> 
> ### ** Examples
> 
> ## Numeric to integer
> class(rivers)
[1] "numeric"
> x <- type.convert(rivers, as.is = TRUE)
> class(x)
[1] "integer"
> 
> ## Convert many columns
> auto <- type.convert(mtcars, as.is = TRUE)
> str(mtcars)
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...
> str(auto)
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : int  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : int  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : int  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : int  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: int  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: int  4 4 1 1 2 1 4 2 2 4 ...
> 
> ## Convert matrix
> phones <- type.convert(WorldPhones, as.is = TRUE)
> storage.mode(WorldPhones)
[1] "double"
> storage.mode(phones)
[1] "integer"
> 
> ## Factor or character
> chr <- c("A", "B", "B", "A")
> ch2 <- c("F", "F", "NA", "F")
> (fac <- factor(chr))
[1] A B B A
Levels: A B
> type.convert(chr, as.is = FALSE) # -> factor
[1] A B B A
Levels: A B
> type.convert(fac, as.is = FALSE) # -> factor
[1] A B B A
Levels: A B
> type.convert(chr, as.is = TRUE)  # -> character
[1] "A" "B" "B" "A"
> type.convert(fac, as.is = TRUE)  # -> character
[1] "A" "B" "B" "A"
> type.convert(ch2, as.is = TRUE)                   #-> logical
[1] FALSE FALSE    NA FALSE
> type.convert(ch2, as.is = TRUE, tryLogical=FALSE) #-> character
[1] "F" "F" NA  "F"
> 
> 
> 
> cleanEx()
> nameEx("url.show")
> ### * url.show
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: url.show
> ### Title: Display a Text URL
> ### Aliases: url.show
> ### Keywords: file misc
> 
> ### ** Examples
> 
> ## Not run: url.show("https://www.stats.ox.ac.uk/pub/datasets/csb/ch3a.txt")
> 
> 
> 
> cleanEx()
> nameEx("vignette")
> ### * vignette
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: vignette
> ### Title: View, List or Get R Source of Package Vignettes
> ### Aliases: vignette edit.vignette print.vignette vignettes
> ### Keywords: documentation
> 
> ### ** Examples
> 
> ## List vignettes from all *attached* packages
> vignette(all = FALSE)
Vignettes in package ‘stats’:

reshape                 Using the reshape function (source, pdf)

Vignettes in package ‘utils’:

Sweave                  Sweave User Manual (source, pdf)


Use ‘vignette(all = TRUE)’
to list the vignettes in all *available* packages.

> 
> ## List vignettes from all *installed* packages (can take a long time!):
> vignette(all = TRUE)
Vignettes in package ‘AER’:

AER                     Applied Econometrics with R: Package Vignette
                        and Errata (source, pdf)
Sweave-journals         Sweave Example: Linear Regression for Economics
                        Journals Data (source, pdf)

Vignettes in package ‘AICcmodavg’:

AICcmodavg              Overview of AICcmodavg (source, pdf)
AICcmodavg-unmarked     Using AICcmodavg with unmarked objects (source,
                        pdf)

Vignettes in package ‘ALEPlot’:

AccumulatedLocalEffectPlot
                        AccumulatedLocalEffectPlot (source, pdf)

Vignettes in package ‘Amelia’:

ameliaview              AmeliaView GUI Guide (source, html)
intro-mi                Introduction to Multiple Imputation (source,
                        html)
diagnostics             Multiple Imputation Diagnostics (source, html)
using-amelia            Using Amelia (source, html)

Vignettes in package ‘BB’:

BB                      BB Tutorial (source, pdf)
BBvignetteJSS           BB: An R Package for Solving a Large System of
                        Nonlinear Equations and for Optimizing a
                        High-Dimensional Nonlinear Objective Function
                        (source, pdf)

Vignettes in package ‘BayesFactor’:

compare_lme4            Demos and comparisons (source, html)
odds_probs              Odds and probabilities (source, html)
priors                  Prior checks (source, html)
manual                  User's manual (source, html)
index                   Vignette menu (source, html)

Vignettes in package ‘Bessel’:

other-Bessels           Bessel Functions in other CRAN Packages
                        (source, pdf)

Vignettes in package ‘BiasedUrn’:

UrnTheory               Biased Urn Theory (source, pdf)

Vignettes in package ‘BiocManager’:

BiocManager             Installing and Managing Bioconductor Packages
                        (source, html)

Vignettes in package ‘BradleyTerry2’:

BradleyTerry            Bradley-Terry models in R (source, pdf)

Vignettes in package ‘Brobdingnag’:

S4_brob                 Brobdingnag: a ``hello world'' package using S4
                        methods (source, pdf)
Brobdingnag             The Brobdingnag: package (source, pdf)

Vignettes in package ‘BsMD’:

BsMD                    Rnw script for \emph{BsMD} package (source,
                        pdf)

Vignettes in package ‘C50’:

C5.0                    C5.0 Classification Models (source, html)
Class_Probability_Calcs
                        Class Probability Calculations (source, html)

Vignettes in package ‘Ckmeans.1d.dp’:

Weights                 Note: Weight scaling in cluster analysis
                        (source, html)
ahist                   Tutorial: Adaptive versus regular histograms
                        (source, html)
Ckmeans.1d.dp           Tutorial: Optimal univariate clustering
                        (source, html)

Vignettes in package ‘ClusterR’:

the_clusterR_package    Functionality of the ClusterR package (source,
                        html)

Vignettes in package ‘Cubist’:

cubist                  Cubist Regresion Models (source, html)

Vignettes in package ‘DBI’:

DBI-1                   A Common Database Interface (DBI) (source,
                        html)
DBI-proposal            A Common Interface to Relational Databases from
                        R and S -- A Proposal (source, html)
DBI-advanced            Advanced DBI Usage (source, html)
spec                    DBI specification (source, html)
DBI-history             History of DBI (source, html)
backend                 Implementing a new backend (source, html)
DBI                     Introduction to DBI (source, html)
DBI-arrow               Using DBI with Arrow (source, html)

Vignettes in package ‘DBItest’:

DBItest                 Testing DBI backends (source, html)

Vignettes in package ‘DHARMa’:

DHARMaForBayesians      DHARMa for Bayesians (source, html)
DHARMa                  Vignette for the DHARMa package (source, html)

Vignettes in package ‘DRR’:

comparePCA              Compare DRR and PCA (source, html)

Vignettes in package ‘DT’:

DT                      An Introduction to the DT Package (source,
                        html)

Vignettes in package ‘Epi’:

flup                    Analysis of follow-up data using the Lexis
                        functions in Epi (source, pdf)
crisk                   Competing risks with Lexis, parametric rates
                        and simulation based confidence intervals
                        (source, pdf)
simLexis                Simulation of multistate models with multiple
                        timescales: simLexis (source, pdf)
addLexis                Time dependent covariates in Lexis objects:
                        addCov & addDrug (source, pdf)
yll                     Years of life lost (YLL) (source, pdf)

Vignettes in package ‘FDboost’:

FLAM_canada             FDboost FLAM Canada (source, pdf)
FLAM_fuel               FDboost FLAM fuel (source, pdf)
FLAM_viscosity          FDboost FLAM viscosity (source, pdf)
density-on-scalar_birth
                        FDboost density-on-scalar births (source, pdf)

Vignettes in package ‘FME’:

FME                     1. Inverse Modelling, Sensitivity and Monte
                        Carlo Analysis in R Using Package FME (source,
                        pdf)
FMEdyna                 2. Sensitivity, Calibration, Identifiability,
                        Monte Carlo Analysis of a Dynamic Simulation
                        Model (source, pdf)
FMEmcmc                 3. Tests of the Markov Chain Monte Carlo
                        Implementation (source, pdf)
FMEother                4. Sensitivity, Calibration, Identifiability,
                        Monte Carlo Analysis of a Nonlinear Model
                        (source, pdf)
FMEsteady               5. Sensitivity, Calibration, Identifiability,
                        Monte Carlo Analysis of a Steady-State Model
                        (source, pdf)

Vignettes in package ‘FSelectorRcpp’:

get_started             Get started: Motivation, Installation and Quick
                        Workflow (source, html)
integer-variables       Integer variables (source, html)
benchmarks_discretize   Microbenchmarks of FSelectoRcpp and FSelector -
                        discretization (source, html)

Vignettes in package ‘FactoMineR’:

FactoMineR              FactoMineR (source, pdf)
clustering              clustering (source, html)

Vignettes in package ‘Formula’:

Formula                 Extended Model Formulas in R: Multiple Parts
                        and Multiple Responses (source, pdf)

Vignettes in package ‘GA’:

GA                      A quick tour of GA (source, html)

Vignettes in package ‘GLMMadaptive’:

GLMMadaptive            GLMMadaptive Basics (source, html)

Vignettes in package ‘GPArotation’:

GPArotateDF             Derivative-Free Gradient Projection: the
                        GPArotateDF package (source, pdf)
GPAguide                Gradient Projection Factor Rotation (source,
                        pdf)

Vignettes in package ‘GPareto’:

GPareto_vignette        a guide to the GPareto package (source, pdf)

Vignettes in package ‘HSAUR2’:

Ch_introduction_to_R    Chapter An Introduction to R (source, pdf)
Ch_analysing_longitudinal_dataI
                        Chapter Analysing Longitudinal Data I (source,
                        pdf)
Ch_analysing_longitudinal_dataII
                        Chapter Analysing Longitudinal Data II (source,
                        pdf)
Ch_analysis_of_variance
                        Chapter Analysis of Variance (source, pdf)
Ch_cluster_analysis     Chapter Cluster Analysis (source, pdf)
Ch_conditional_inference
                        Chapter Conditional Inference (source, pdf)
Ch_graphical_display    Chapter Data Analysis using Graphical Displays
                        (source, pdf)
Ch_density_estimation   Chapter Density Estimation (source, pdf)
Ch_logistic_regression_glm
                        Chapter Logistic Regression and Generalised
                        Linear Models (source, pdf)
Ch_meta_analysis        Chapter Meta-Analysis (source, pdf)
Ch_multidimensional_scaling
                        Chapter Multidimensional Scaling (source, pdf)
Ch_principal_components_analysis
                        Chapter Principal Component Analysis (source,
                        pdf)
Ch_recursive_partitioning
                        Chapter Recursive Partitioning (source, pdf)
Ch_simple_inference     Chapter Simple Inference (source, pdf)
Ch_simultaneous_inference
                        Chapter Simultaneous Inference and Multiple
                        Comparisons (source, pdf)
Ch_survival_analysis    Chapter Survival Analysis (source, pdf)
Ch_errata               Errata (source, pdf)
Ch_gam                  Generalised Additive Models (source, pdf)
Ch_multiple_linear_regression
                        Multiple Linear Regression (source, pdf)

Vignettes in package ‘HSAUR3’:

Ch_introduction_to_R    An Introduction to R (source, pdf)
Ch_analysis_of_variance
                        Chapter Analysis of Variance (source, pdf)
Ch_analysing_longitudinal_dataI
                        Chapter Analyzing Longitudinal Data I (source,
                        pdf)
Ch_analysing_longitudinal_dataII
                        Chapter Analyzing Longitudinal Data II (source,
                        pdf)
Ch_bayesian_inference   Chapter Bayesian Inference (source, pdf)
Ch_cluster_analysis     Chapter Cluster Analysis (source, pdf)
Ch_conditional_inference
                        Chapter Conditional Inference (source, pdf)
Ch_graphical_display    Chapter Data Analysis using Graphical Displays
                        (source, pdf)
Ch_density_estimation   Chapter Density Estimation (source, pdf)
Ch_gam                  Chapter Generalized Additive Models (source,
                        pdf)
Ch_logistic_regression_glm
                        Chapter Logistic Regression and Generalized
                        Linear Models (source, pdf)
Ch_meta_analysis        Chapter Meta-Analysis (source, pdf)
Ch_missing_values       Chapter Missing Values (source, pdf)
Ch_multidimensional_scaling
                        Chapter Multidimensional Scaling (source, pdf)
Ch_principal_components_analysis
                        Chapter Principal Component Analysis (source,
                        pdf)
Ch_quantile_regression
                        Chapter Quantile Regression (source, pdf)
Ch_recursive_partitioning
                        Chapter Recursive Partitioning (source, pdf)
Ch_simple_inference     Chapter Simple Inference (source, pdf)
Ch_simultaneous_inference
                        Chapter Simultaneous Inference and Multiple
                        Comparisons (source, pdf)
Ch_survival_analysis    Chapter Survival Analysis (source, pdf)
Ch_errata               Errata (source, pdf)
Ch_multiple_linear_regression
                        Multiple Linear Regression (source, pdf)

Vignettes in package ‘ICS’:

ICS                     Tools for Exploring Multivariate Data: The
                        Package ICS (source, pdf)

Vignettes in package ‘INLA’:

jmarginal               Approximating joint marginals (source, pdf)
stack-with-factors      Avoiding trouble with factors in inla.stack
                        (source, pdf)
bGEVtutorial1-2         Blended GEV: a tutorial using R-INLA (source,
                        pdf)
conditional_logit       Conditional Logistic Regression Model (source,
                        pdf)
conditional-sampling    Conditional sampling from a fitted model
                        (source, pdf)
AA-group-cv             Cross-validation and group-cross-validation in
                        INLA (source, pdf)
rgeneric                Defining a latent model in R or C (source, pdf)
Dirichlet-CoDa          Fitting CoDa using the Logistic Gaussian
                        distribution with Dirichlet covariance
                        structure (source, pdf)
Tutorial_barrier_global
                        Global oceanic barrier model on the sphere
                        (source, pdf)
Apptainer               Installation of INLA and inlabru with Apptainer
                        on HPC (source, pdf)
multinomial             Multinomial logit models with INLA (source,
                        pdf)
SPDE2mdatasurv          SPDE example with multiple kind of outcomes
                        (source, pdf)
scale-model             Scaling IGMRF-models in R-INLA (source, pdf)
old-faq                 Short tutorials from old www-page (source, pdf)
svc                     Spatially Varying Coefficient Models with
                        R-INLA (source, pdf)
sample-eval             The inla.posterior.sample.eval-function
                        (source, pdf)
int-design              User defined integration points (source, pdf)

Vignettes in package ‘INLAspacetime’:

website_examples        Vignettes on the INLAspacetime website (source,
                        html)

Vignettes in package ‘JuliaCall’:

Julia_in_RMarkdown      Julia in RMarkdown (source, html)
JuliaCall_in_Jupyter_R_Notebook
                        JuliaCall in Jupyter R Notebook (source, html)

Vignettes in package ‘KFAS’:

KFAS                    KFAS: Exponential Family State Space Models in
                        R (source, pdf)

Vignettes in package ‘KernelKnn’:

image_classification_using_MNIST_CIFAR_data
                        Image classification of the MNIST and CIFAR-10
                        data using KernelKnn and HOG (histogram of
                        oriented gradients) (source, html)
regression_using_the_housing_data
                        Regression using the Housing data (source,
                        html)
binary_classification_using_the_ionosphere_data
                        binary classification using the ionosphere data
                        (source, html)

Vignettes in package ‘Lahman’:

hits-by-type            Graphs of Hits By Type in MLB (source, html)
strikeoutsandhr         Relationship Between Strikeouts and Home Runs
                        (source, html)
run-scoring-trends      Run Scoring Trends (source, html)
payroll                 Team Payroll and the World Series (source,
                        html)
vignette-intro          Vignette Introduction (source, html)

Vignettes in package ‘LaplacesDemon’:

BayesianInference       Bayesian Inference (source, pdf)
Examples                LaplacesDemon Examples (source, pdf)
LaplacesDemonTutorial   LaplacesDemon Tutorial (source, pdf)

Vignettes in package ‘LearnBayes’:

BayesFactors            Introduction to Bayes Factors (source, pdf)
DiscreteBayes           Introduction to Bayes using Discrete Priors
                        (source, pdf)
MCMCintro               Introduction to Markov Chain Monte Carlo
                        (source, pdf)
MultilevelModeling      Introduction to Multilevel Modeling (source,
                        pdf)
BinomialInference       Learning About a Binomial Proportion (source,
                        pdf)

Vignettes in package ‘MNP’:

MNP                     MNP (source, pdf)

Vignettes in package ‘MSwM’:

examples                example (source, pdf)

Vignettes in package ‘MatchIt’:

assessing-balance       Assessing Balance (source, html)
estimating-effects      Estimating Effects After Matching (source,
                        html)
MatchIt                 MatchIt: Getting Started (source, html)
matching-methods        Matching Methods (source, html)
sampling-weights        Matching with Sampling Weights (source, html)

Vignettes in package ‘MatchThem’:

cheatsheet              MatchThem:: Cheat Sheet (source, pdf)
vignette                MatchThem:: Matching and Weighting after
                        Multiple Imputation (source, pdf)

Vignettes in package ‘Matrix’:

Intro2Matrix            2nd Introduction to the Matrix Package (source,
                        pdf)
Comparisons             Comparisons of Least Squares calculation speeds
                        (source, pdf)
Design-issues           Design Issues in Matrix package Development
                        (source, pdf)
Introduction            Introduction to the Matrix Package (source,
                        pdf)
sparseModels            Sparse Model Matrices (source, pdf)

Vignettes in package ‘MplusAutomation’:

vignette                MplusAutomation Examples (source, html)

Vignettes in package ‘NeuralNetTools’:

Overview                Overview (source, html)

Vignettes in package ‘OAIHarvester’:

oaih                    Metadata Harvesting with R and OAI-PMH (source,
                        pdf)

Vignettes in package ‘OpenImageR’:

The_OpenImageR_package
                        Functionality of the OpenImageR package
                        (source, html)
Gabor_Feature_Extraction
                        Gabor Feature extraction (source, html)
Image_segmentation_superpixels_clustering
                        Image segmentation based on Superpixels and
                        Clustering (source, html)
Warp_Affine             Warp Affine using R (source, html)

Vignettes in package ‘OpenMx’:

factor_analysis         Model Specification for Confirmatory Factor
                        Analysis (source, html)
regularization          Regularization (source, html)
reg_mimic               Regularized MIMIC (source, html)
deriv                   Testing Derivatives (source, html)

Vignettes in package ‘PMCMRplus’:

QuickReferenceGuide     PMCMR Quick Reference Guide (source, html)

Vignettes in package ‘PerformanceAnalytics’:

EstimationComoments     Estimation of Higher Order Moments (source,
                        pdf)
textplotPresentation-CRUG-2011
                        How to Present Tables in Plot Devices (source,
                        pdf)
PA-Bacon                Performance Attribution from Bacon (source,
                        pdf)
PerformanceAnalyticsChartsPresentation-Meielisalp-2007
                        PerformanceAnalytics Charts and Tables
                        Presentation - Meielisalp - 2007 (source, pdf)
PA-charts               PerformanceAnalytics Charts and Tables
                        Reference (source, pdf)
PerformanceAnalyticsPresentation-UseR-2007
                        PerformanceAnalytics Data Mining Presentation -
                        UseR - 2007 (source, pdf)
portfolio_returns       Portfolio Returns (source, pdf)
PA_StandardErrors       Standard Errors for Risk and Performance
                        Estimators (source, pdf)

Vignettes in package ‘R.devices’:

R.devices-overview      R.devices overview (source, pdf)

Vignettes in package ‘R.rsp’:

Dynamic_document_creation_using_RSP
                        Dynamic document creation using RSP (source,
                        pdf)
R_packages-LaTeX_vignettes
                        R packages: LaTeX vignettes (source, pdf)
R_packages-RSP_vignettes
                        R packages: RSP vignettes (source, html)
R_packages-Static_PDF_and_HTML_vignettes
                        R packages: Static PDF and HTML vignettes
                        (source, pdf)
RSP_refcard             RSP Markup Language - Reference Card (source,
                        pdf)
RSP_intro               RSP: A Brief Introduction (source, html)

Vignettes in package ‘R2OpenBUGS’:

R2OpenBUGS              R2OpenBUGS (source, pdf)

Vignettes in package ‘R2WinBUGS’:

R2WinBUGS               R2WinBUGS (source, pdf)

Vignettes in package ‘R2admb’:

R2admb                  Basic examples of R2admb/AD Model Builder use
                        (source, pdf)

Vignettes in package ‘REndo’:

REndo-introduction      REndo-introduction (source, pdf)

Vignettes in package ‘ROCR’:

ROCR                    ROCR (source, html)

Vignettes in package ‘RODBC’:

RODBC                   ODBC Connectivity (source, pdf)

Vignettes in package ‘ROI.plugin.neos’:

ROI.plugin.neos_Introduction
                        ROI Plug-in NEOS (source, pdf)

Vignettes in package ‘RPESE’:

RPESEVignette           Risk and Performance Estimators Standared
                        Errors (RPESE) (source, pdf)

Vignettes in package ‘RPostgres’:

work-queue              Implementing a Work Queue using RPostgres
                        (source, html)

Vignettes in package ‘RSQLite’:

RSQLite                 RSQLite (source, html)

Vignettes in package ‘RSpectra’:

introduction            Large-Scale Eigenvalue Decomposition and SVD
                        with RSpectra (source, html)

Vignettes in package ‘RUnit’:

RUnit                   RUnit primer (source, pdf)

Vignettes in package ‘RWeka’:

RWeka                   RWeka Odds and Ends (source, pdf)

Vignettes in package ‘Rcmdr’:

Getting-Started-with-the-Rcmdr
                        Getting Started with the R Commander (source,
                        pdf)
Empezando-con-Rcmdr-es
                        Iniciación a R Commander (es) (source, pdf)

Vignettes in package ‘Rcpp’:

Rcpp-FAQ                Rcpp-FAQ (source, pdf)
Rcpp-jss-2011           Rcpp-JSS-2011 (source, pdf)
Rcpp-attributes         Rcpp-attributes (source, pdf)
Rcpp-extending          Rcpp-extending (source, pdf)
Rcpp-introduction       Rcpp-introduction (source, pdf)
Rcpp-libraries          Rcpp-libraries (source, pdf)
Rcpp-modules            Rcpp-modules (source, pdf)
Rcpp-package            Rcpp-package (source, pdf)
Rcpp-quickref           Rcpp-quickref (source, pdf)
Rcpp-sugar              Rcpp-sugar (source, pdf)

Vignettes in package ‘RcppArmadillo’:

RcppArmadillo-intro     RcppArmadillo-introduction (source, pdf)
RcppArmadillo-sparseMatrix
                        RcppArmadillo-sparseMatrix (source, pdf)

Vignettes in package ‘RcppEigen’:

RcppEigen-Introduction
                        RcppEigen-intro (source, pdf)

Vignettes in package ‘RcppHungarian’:

Introduction-to-RcppHungarian
                        Introduction-to-RcppHungarian (source, html)

Vignettes in package ‘RcppZiggurat’:

RcppZiggurat            RcppZiggurat-Intro (source, pdf)

Vignettes in package ‘Rdpack’:

Inserting_figures_and_evaluated_examples
                        Inserting figures and evaluated examples
                        (source, pdf)
Inserting_bibtex_references
                        Inserting references in Rd and roxygen2
                        documentation (source, pdf)

Vignettes in package ‘Rmpfr’:

log1mexp-note           Accurately Computing log(1 - exp(.)) --
                        Assessed by Rmpfr (source, pdf)
Rmpfr-pkg               Arbitrarily Accurate Computation with R Package
                        Rmpfr (source, pdf)
Maechler_useR_2011-abstr
                        useR-2011-abstract (source, pdf)

Vignettes in package ‘RobStatTM’:

OptimalBiasRobustRegressionPsiandRho
                        Optimal Bias Robust Regression Psi and Rho
                        (source, pdf)
PolynomialOptandmOptRhoFunctions
                        Polynomial Opt and mOpt Rho Functions in
                        RobStatTM (source, pdf)
VignetteRobStatTM       RobStatTM Package Vignette (source, pdf)
fitmodelsusingRobStatTM
                        Using the fit.models Package with RobStatTM
                        (source, pdf)

Vignettes in package ‘Runuran’:

Runuran                 Using Runuran (source, pdf)

Vignettes in package ‘Ryacas’:

arbitrary-precision     Arbitrary-precision arithmetic (source, html)
getting-started         Getting started (source, html)
high-level              The high-level (symbol) interface (source,
                        html)
low-level               The low-level interface (source, html)
latent-variable-model   The structure of the concentration and
                        covariance matrix in a naive Bayes model
                        (source, html)
ssm-matrix              The structure of the concentration and
                        covariance matrix in a simple state-space model
                        (source, html)
yacas-rules             User-defined yacas rules (source, html)

Vignettes in package ‘SGP’:

SGP_Data_Preparation    Data Preparation (source, html)
SGP                     Getting started with SGP (source, html)
SGP_Data_Analysis       SGP Data Analysis (source, html)

Vignettes in package ‘SGPdata’:

SGPdata                 Getting started with SGPdata (source, html)

Vignettes in package ‘SQUAREM’:

SQUAREM                 SQUAREM Tutorial (source, pdf)

Vignettes in package ‘SUMMER’:

u5mr-dhs-vignette       Case Study: Estimating Subnational U5MR using
                        DHS data (source, html)
u5mr-vignette           Estimating Subnational U5MR using Simulated
                        Data (source, html)
small-area-estimation   Generic small area estimation (source, html)

Vignettes in package ‘Sleuth2’:

chapter01-HortonMosaic
                        Chapter 01, Horton et al. using mosaic (source,
                        pdf)
chapter02-HortonMosaic
                        Chapter 02, Horton et al. using mosaic (source,
                        pdf)
chapter03-HortonMosaic
                        Chapter 03, Horton et al. using mosaic (source,
                        pdf)
chapter04-HortonMosaic
                        Chapter 04, Horton et al. using mosaic (source,
                        pdf)
chapter05-HortonMosaic
                        Chapter 05, Horton et al. using mosaic (source,
                        pdf)
chapter06-HortonMosaic
                        Chapter 06, Horton et al. using mosaic (source,
                        pdf)
chapter07-HortonMosaic
                        Chapter 07, Horton et al. using mosaic (source,
                        pdf)
chapter08-HortonMosaic
                        Chapter 08, Horton et al. using mosaic (source,
                        pdf)
chapter09-HortonMosaic
                        Chapter 09, Horton et al. using mosaic (source,
                        pdf)
chapter10-HortonMosaic
                        Chapter 10, Horton et al. using mosaic (source,
                        pdf)
chapter11-HortonMosaic
                        Chapter 11, Horton et al. using mosaic (source,
                        pdf)
chapter12-HortonMosaic
                        Chapter 12, Horton et al. using mosaic (source,
                        pdf)
chapter13-HortonMosaic
                        Chapter 13, Horton et al. using mosaic (source,
                        pdf)

Vignettes in package ‘SparseGrid’:

SparseGrid              Introduction to SparseGrid (source, pdf)

Vignettes in package ‘SparseM’:

SparseM                 An Introduction to the SparseM Package for
                        Sparse Linear Algebra (source, pdf)

Vignettes in package ‘StanHeaders’:

stanmath                Using the Stan Math C++ Library (source, html)

Vignettes in package ‘SuperLearner’:

Guide-to-SuperLearner   Guide to SuperLearner (source, html)

Vignettes in package ‘SurvMetrics’:

SurvMetrics-vignette    SurvMetrics-vignette (source, html)

Vignettes in package ‘TH.data’:

blood_loss_report       bloodloss (source, pdf)

Vignettes in package ‘TSP’:

TSP                     Introduction to TSP (source, pdf)

Vignettes in package ‘V8’:

v8_intro                Introduction to V8 for R (source, html)
npm                     Using NPM packages in V8 (source, html)

Vignettes in package ‘WRS2’:

WRS2                    WRS2 (source, pdf)

Vignettes in package ‘WeightIt’:

estimating-effects      Estimating Effects After Weighting (source,
                        html)
installing-packages     Installing Supporting Packages (source, html)
WeightIt                Using WeightIt to Estimate Balancing Weights
                        (source, html)

Vignettes in package ‘actuar’:

distributions           Additional continuous and discrete
                        distributions (source, pdf)
coverage                Complete formulas used by coverage (source,
                        pdf)
credibility             Credibility theory (source, pdf)
actuar                  Introduction to actuar (source, pdf)
modeling                Loss distributions modeling (source, pdf)
risk                    Risk and ruin theory (source, pdf)
simulation              Simulation of insurance data (source, pdf)

Vignettes in package ‘adegraphics’:

adegraphics             The `adegraphics` package (source, html)

Vignettes in package ‘adehabitatLT’:

adehabitatLT            adehabitatLT: Analysis of Animal Movements
                        (source, pdf)

Vignettes in package ‘adephylo’:

adephylo                adephylo: exploratory analyses for the
                        phylogenetic comparative method (source, pdf)

Vignettes in package ‘afex’:

afex_anova_example      ANOVA and Post-Hoc Contrasts: Reanalysis of
                        Singmann and Klauer (2011) (source, html)
introduction-mixed-models
                        An Introduction to Mixed Models for
                        Experimental Psychology (source, pdf)
afex_analysing_accuracy_data
                        Analysis of Accuracy Data using ANOVA and
                        binomial GLMMs (source, html)
afex_mixed_example      Mixed Model Example Analysis: Reanalysis of
                        Freeman et al. (2010) (source, html)
assumptions_of_ANOVAs   Testing the Assumptions of ANOVAs (source,
                        html)
afex_plot_introduction
                        afex_plot: Publication Ready Plots for
                        Experimental Designs (source, html)
afex_plot_supported_models
                        afex_plot: Supported Models (source, html)

Vignettes in package ‘agricolae’:

tutorial                agricolae tutorial (source, pdf)

Vignettes in package ‘agridat’:

agridat_data            Additional sources of agricultural data
                        (source, html)
agridat_graphical_gems
                        Graphical Gems in the agridat Package (source,
                        html)
agridat_intro           Introduction to agridat (source, html)
agridat_uniformity_data
                        Notes on uniformity data (source, html)

Vignettes in package ‘alluvial’:

alluvial                Creating Alluvial Diagrams (source, html)

Vignettes in package ‘alpaca’:

trade                   Estimating the intensive and extensive margin
                        of trade (source, html)
howto                   How to use alpaca (source, html)

Vignettes in package ‘alphahull’:

alphahull               Generalizing the Convex Hull of a Sample: The R
                        Package alphahull (source, pdf)

Vignettes in package ‘altdoc’:

get-started             Get started (source, html)

Vignettes in package ‘amap’:

amap                    Introduction to amap (source, pdf)

Vignettes in package ‘anytime’:

anytime-introduction    Introduction to anytime (source, pdf)

Vignettes in package ‘aorsf’:

aorsf                   Introduction to aorsf (source, html)
oobag                   Out-of-bag predictions and evaluation (source,
                        html)
pd                      PD and ICE curves with ORSF (source, html)
fast                    Tips to speed up computation (source, html)

Vignettes in package ‘ape’:

DrawingPhylogenies      Drawing Phylogenies (source, pdf)
MoranI                  Moran's I (source, pdf)
RandomTopologies        Random Topology (source, pdf)

Vignettes in package ‘aplpack’:

sliderfns               Working with Slider Functions (source, pdf)

Vignettes in package ‘apollo’:

apollofirstexample      Model file examples (source, html)

Vignettes in package ‘arules’:

arules                  Introduction to arules (source, pdf)

Vignettes in package ‘arulesViz’:

arulesViz               Visualizing Association Rules: Introduction to
                        arulesViz (source, pdf)

Vignettes in package ‘attachment’:

a-fill-pkg-description
                        a-Help during package development (source,
                        html)
b-bookdown-and-scripts
                        b-bookdown and other scripts dependencies
                        (source, html)
create-dependencies-file
                        create-dependencies-file (source, html)
use_renv                use_renv (source, html)

Vignettes in package ‘auditor’:

model_evaluation_audit
                        Model evaluation audit (source, html)
model_fit_audit         Model fit audit (source, html)
model_performance_audit
                        Model performance audit (source, html)
model_residuals_audit   Model residuals audit (source, html)
observation_influence_audit
                        Observation influence audit (source, html)

Vignettes in package ‘bain’:

Introduction_to_bain    Introduction to bain (source, html)

Vignettes in package ‘bartMachine’:

bartMachine             bartMachine (source, pdf)

Vignettes in package ‘base64url’:

Benchmarks              Benchmark (source, html)

Vignettes in package ‘batchtools’:

batchtools              batchtools (source, html)

Vignettes in package ‘bayesm’:

Constrained_MNL_Vignette
                        Hierarchical Multinomial Logit with Sign
                        Constraints (source, html)
bayesm_Overview_Vignette
                        bayesm Overview (source, html)

Vignettes in package ‘bayesplot’:

graphical-ppcs          Graphical posterior predictive checks (source,
                        html)
plotting-mcmc-draws     Plotting MCMC draws (source, html)
visual-mcmc-diagnostics
                        Visual MCMC diagnostics (source, html)

Vignettes in package ‘bayestestR’:

overview_of_vignettes   Overview of Vignettes (source, html)

Vignettes in package ‘bbmle’:

mle2                    Examples for enhanced mle code (source, pdf)
quasi                   quasi: notes on quasi-likelihood/qAIC analysis
                        inR (source, pdf)

Vignettes in package ‘beanplot’:

beanplot                Beanplot: A Boxplot Alternative for Visual
                        Comparison of Distributions (source, pdf)

Vignettes in package ‘betareg’:

betareg                 Beta Regression in R (source, pdf)
betareg-ext             Extended Beta Regression in R: Shaken, Stirred,
                        Mixed, and Partitioned (source, pdf)

Vignettes in package ‘bife’:

howto                   How to use bife (source, html)

Vignettes in package ‘biglasso’:

biglasso                biglasso (source, html)

Vignettes in package ‘bit’:

bit-demo                Demo of the bit package (source, pdf)
bit-performance         Performance of the bit package (source, pdf)
bit-usage               Usage of the bit package (source, pdf)

Vignettes in package ‘bookdown’:

bookdown                Learn bookdown (source, html)

Vignettes in package ‘brglm2’:

adjacent                Adjacent category logit models using **brglm2**
                        (source, html)
iteration               Bias reduction in generalized linear models
                        (source, html)
expo                    Estimating the exponential of regression
                        parameters using **brglm2** (source, html)
multinomial             Multinomial logistic regression using
                        **brglm2** (source, html)
negativeBinomial        Negative binomial regression using **brglm2**
                        (source, html)

Vignettes in package ‘bridgesampling’:

bridgesampling_tutorial
                        A Tutorial on Bridge Sampling (source, pdf)
bridgesampling_stan_ttest
                        Bayesian One-Sample T-Test Stan (source, html)
bridgesampling_example_jags
                        Hierarchical Normal Example JAGS (source, html)
bridgesampling_example_nimble
                        Hierarchical Normal Example Nimble (source,
                        html)
bridgesampling_example_stan
                        Hierarchical Normal Example Stan (source, html)
bridgesampling_paper_extended
                        bridgesampling: An R Package for Estimating
                        Normalizing Constants (Extended) (source, pdf)
bridgesampling_paper    bridgesampling: An R Package for Estimating
                        Normalizing Constants (JSS version) (source,
                        pdf)

Vignettes in package ‘brms’:

brms_customfamilies     Define Custom Response Distributions with brms
                        (source, html)
brms_distreg            Estimating Distributional Models with brms
                        (source, html)
brms_monotonic          Estimating Monotonic Effects with brms (source,
                        html)
brms_multivariate       Estimating Multivariate Models with brms
                        (source, html)
brms_nonlinear          Estimating Non-Linear Models with brms (source,
                        html)
brms_phylogenetics      Estimating Phylogenetic Multilevel Models with
                        brms (source, html)
brms_missings           Handle Missing Values with brms (source, html)
brms_multilevel         Multilevel Models with brms (source, pdf)
brms_overview           Overview of the brms Package (source, pdf)
brms_families           Parameterization of Response Distributions in
                        brms (source, html)
brms_threading          Running brms models with within-chain
                        parallelization (source, html)

Vignettes in package ‘broom’:

available-methods       Available methods (source, html)
broom                   Introduction to broom (source, html)
bootstrapping           Tidy bootstrapping (source, html)
adding-tidiers          Writing new tidier methods (source, html)
broom_and_dplyr         broom and dplyr (source, html)
kmeans                  kmeans with dplyr and broom (source, html)

Vignettes in package ‘broom.helpers’:

tidy                    Getting Started with broom.helpers (source,
                        html)

Vignettes in package ‘broom.mixed’:

broom_mixed_intro       introduction to broom.mixed (source, html)

Vignettes in package ‘brotli’:

brotli-2015-09-22       Comparison of Brotli, Deflate, Zopfli, LZMA,
                        LZHAM and Bzip2 Compression Algorithms (source,
                        pdf)
benchmarks              Text Compression in R: brotli, gzip, xz and bz2
                        (source, html)

Vignettes in package ‘bs4Dash’:

css-preloader           CSS preloaders (source, html)
extra-elements          Extra Elements (source, html)
step-by-step            How to start? (source, html)
more-skins              Improved Skins (source, html)
improved-boxes          Improved boxes (source, html)
bs4Dash                 bs4Dash (source, html)

Vignettes in package ‘bst’:

pros                    Cancer Classification Using Mass
                        Spectrometry-based Proteomics Data (source,
                        pdf)
static_cancer           Classification of Breast Cancer Clinical Stage
                        with Gene Expression Data (with Results)
                        (source, pdf)
cancer                  Classification of Breast Cancer Clinical Stage
                        with Gene Expression Data (without Results)
                        (source, pdf)
static_khan             Classification of Cancer Types Using Gene
                        Expression Data (with Results) (source, pdf)
khan                    Classification of Cancer Types Using Gene
                        Expression Data (without Results) (source, pdf)
static_mcl              Classification of UCI Machine Learning Datasets
                        (with Results) (source, pdf)
mcl                     Classification of UCI Machine Learning Datasets
                        (without Results) (source, pdf)

Vignettes in package ‘butcher’:

adding-models-to-butcher
                        Adding models to butcher (source, html)
available-axe-methods   Available axe methods (source, html)
butcher                 butcher (source, html)

Vignettes in package ‘calibrate’:

CalibrationGuide        A R package for calibration of biplot and
                        scatterplot axis. (source, pdf)

Vignettes in package ‘candisc’:

diabetes                Diabetes data: heplots and candisc examples
                        (source, html)

Vignettes in package ‘caper’:

caper                   Comparative analysis of phylogenetics and
                        evolution in R (source, pdf)

Vignettes in package ‘car’:

embedding               Using car functions inside user functions
                        (source, pdf)

Vignettes in package ‘caret’:

caret                   A Short Introduction to the caret Package
                        (source, html)

Vignettes in package ‘casebase’:

competingRisk           Competing risk analysis (source, html)
customizingpopTime      Customizing Population Time Plots (source,
                        html)
smoothHazard            Introduction to casebase sampling (source,
                        html)
plotabsRisk             Plot Cumulative Incidence and Survival Curves
                        (source, html)
plotsmoothHazard        Plot Hazards and Hazard Ratios (source, html)
popTime                 Population Time Plots (source, html)
time-varying-covariates
                        Time-Varying Covariates (source, pdf)

Vignettes in package ‘catdata’:

random-aids             AIDS - Semiparametric Mixed Model (source, pdf)
semiparametric-addiction
                        Addiction - Additive Multinomial Logit Models
                        (source, pdf)
multinomial-addiction1
                        Addiction - Multinomial Model (source, pdf)
multinomial-addiction2
                        Addiction - Multinomial Model with
                        Hierarchically Structured Response (source,
                        pdf)
ordinal-arthritis       Arthritis - Cumulative Logit Model (source,
                        pdf)
random-betablocker      Beta-blockers - Discrete Mixture Models
                        (source, pdf)
multivariate-birth2     Birth Data - Bivariate Binary GEE (source, pdf)
multivariate-birth1     Birth Data - Bivariate Binary Regression
                        (source, pdf)
loglinear-birth         Birth Data - Loglinear Models (source, pdf)
modbin-unemployment2    Duration of Unemployment - Analysis of Deviance
                        Table for Nested Models (source, pdf)
semiparametric-unemployment
                        Duration of Unemployment - Cubic B-Splines
                        (source, pdf)
binary-unemployment     Duration of Unemployment - Different Codings of
                        Covariables (source, pdf)
modbin-unemployment1    Duration of Unemployment - Logit Model (source,
                        pdf)
tree-unemployment       Duration of Unemployment - Trees (source, pdf)
count-encephalitis      Encephalitis - Loglinear Poisson Model and
                        Normal Distribution Model (source, pdf)
semiparametric-dust     Exposure to Dust - Generalized Additive Models
                        (source, pdf)
modbin-dust             Exposure to Dust - Logistic Regression and
                        Search for Outliers (source, pdf)
tree-dust               Exposure to Dust - Trees (source, pdf)
modbin-foodstamp        Foodstamp - Residuals of Logistic Regression
                        (source, pdf)
count-insolvency        Insolvency - (Quasi-)Poisson Model and Negative
                        Binomial Model (source, pdf)
random-knee3            Knee Data - Discrete Mixture Model (source,
                        pdf)
random-knee1            Knee Data - Random Effects Logit Models
                        (source, pdf)
random-knee2            Knee Data - Sequential/Cumulative Random
                        Effects Logit Models (source, pdf)
ordinal-knee2           Knee Injuries - Comparison of Link Functions
                        (source, pdf)
multivariate-knee       Knee Injuries - Marginal Models (source, pdf)
ordinal-knee1           Knee Injuries - Proportional Odds Models
                        (source, pdf)
loglinear-leukoplakia   Leukoplakia - Mosaic Plots (source, pdf)
prediction-medcare      Medical Care - Comparison of different count
                        data models (source, pdf)
count-medcare           Medical Care - Zero-Inflated and
                        Zero-Hurdle-Model (source, pdf)
semiparametric-children
                        Number of Children - Partially Additive Model
                        (source, pdf)
count-children          Number of Children - Poisson Models with
                        Polynomial Terms (source, pdf)
multinomial-party2      Party Preference - Star Plots (source, pdf)
multinomial-party1      Preference for Political Parties - Multinomial
                        Logit Model (source, pdf)
ordinal-retinopathy2    Retinopathy - Sequential Logit Models (source,
                        pdf)
ordinal-retinopathy1    Retinopathy - Testing Proportional Odds
                        Assumption (source, pdf)
altbin-teratology       Teratology - Alternative Binary Models (source,
                        pdf)
multinomial-travel      Travel Mode - Multinomial Logit Model (source,
                        pdf)
binary-vaso             Vaso Constriction - Logistic Regression
                        (source, pdf)

Vignettes in package ‘cctu’:

analysis-template       Analysis Template (source, html)
code_tree_doc           Code Tree Document (source, html)
code_tree_doc_pdf       Code Tree Document PDF format (source, pdf)
using-cttab             Use cttab in the Analysis (source, html)
rmarkdown_report        Vignette Report HTML (source, html)

Vignettes in package ‘cellranger’:

cell-references         Classes and methods to deal with cell
                        references (source, html)

Vignettes in package ‘cem’:

cem                     Coarsened Exact Matching (source, pdf)

Vignettes in package ‘censReg’:

censReg                 Censored Regression Models (source, pdf)

Vignettes in package ‘checkmate’:

tinytest                Setup tinytest (source, html)
checkmate               checkmate (source, html)

Vignettes in package ‘chemometrics’:

chemometrics-vignette   Multivariate Statistical Analysis using
                        'chemometrics' (source, pdf)

Vignettes in package ‘circlize’:

circlize                circlize vignette (source, html)

Vignettes in package ‘clarify’:

Zelig                   Translating Zelig to clarify (source, html)
clarify                 clarify (source, html)

Vignettes in package ‘classInt’:

headtailsR              "Head/Tails breaks" (source, html)

Vignettes in package ‘clipr’:

developing-with-clipr   Developing with clipr (source, html)

Vignettes in package ‘clock’:

recipes                 Examples and Recipes (source, html)
faq                     Frequently Asked Questions (source, html)
clock                   Getting Started (source, html)

Vignettes in package ‘clubSandwich’:

panel-data-CRVE         Cluster-robust standard errors and hypothesis
                        tests in panel data models (source, html)
meta-analysis-with-CRVE
                        Meta-analysis with cluster-robust variance
                        estimation (source, html)
Wald-tests-in-clubSandwich
                        Wald tests of multiple-constraint null
                        hypotheses (source, html)

Vignettes in package ‘clue’:

clue                    CLUster Ensembles (source, pdf)

Vignettes in package ‘clustermq’:

faq                     FAQ (source, html)
technicaldocs           Technical Documentation (source, html)
userguide               User Guide (source, html)

Vignettes in package ‘coRanking’:

coranking               Interpretation (source, html)

Vignettes in package ‘cobalt’:

cobalt                  Covariate Balance Tables and Plots: A Guide to
                        the `cobalt` Package (source, html)
faq                     Frequently Asked Questions (source, html)
optimizing-balance      Optimizing Tuning Parameters for Balance
                        (source, html)
segmented-data          Using `cobalt` with Clustered, Multiply
                        Imputed, and Other Segmented Data (source,
                        html)
longitudinal-treat      Using `cobalt` with Longitudinal Treatments
                        (source, html)
other-packages          Using `cobalt` with Other Preprocessing
                        Packages (source, html)
love.plot               Using `love.plot()` To Generate Love Plots
                        (source, html)

Vignettes in package ‘coin’:

LegoCondInf             A Lego System for Conditional Inference
                        (source, pdf)
Implementation          Implementing a Class of Permutation Tests: The
                        coin Package (source, pdf)
MAXtest                 Order-restricted Scores Test (source, pdf)
coin                    coin: A Computational Framework for Conditional
                        Inference (source, pdf)

Vignettes in package ‘collapse’:

collapse_documentation
                        collapse Documentation and Resources (source,
                        html)
collapse_for_tidyverse_users
                        collapse for tidyverse Users (source, html)
collapse_object_handling
                        collapse's Handling of R Objects (source, html)

Vignettes in package ‘colorspace’:

hcl-colors              HCL-Based Color Palettes in R (source, pdf)
colorspace              colorspace: A Toolbox for Manipulating and
                        Assessing Colors and Palettes (source, html)

Vignettes in package ‘consort’:

consort_diagram         Self-generating CONSORT diagram (source, html)

Vignettes in package ‘constructive’:

User-defined-methods-and-constructors
                        Extending constructive (source, html)

Vignettes in package ‘coop’:

algos                   Algorithms and Benchmarks for the coop Package
                        (source, pdf)
coop                    Introducing coop: Fast Covariance, Correlation,
                        and Cosine Operations (source, pdf)

Vignettes in package ‘copula’:

AC_Liouville            Archimedean Liouville Copulas (source, html)
rhoAMH-dilog            Beautiful Spearman's Rho for AMH Copula
                        (source, pdf)
dNAC                    Densities of Two-Level Nested Archimedean
                        Copulas (source, html)
empiricial_copulas      Exploring Empirical Copulas (source, html)
GIG                     Generalized Inverse Gaussian Archimedean
                        Copulas (source, html)
HAXC                    Hierarchical Archimax Copulas (source, html)
logL_visualization      Log-Likelihood Visualization for Archimedean
                        Copulas (source, html)
AR_Clayton              MLE and Quantile Evaluation for a Clayton AR(1)
                        Model with Student Marginals (source, html)
nacopula-pkg            Nested Archimedean Copulas Meet R (source, pdf)
NALC                    Nested Archimedean Lévy Copulas (source, html)
Frank-Rmpfr             Numerically stable Frank Copulas via
                        Multiprecision (Rmpfr) (source, pdf)
qrng                    Quasi-Random Numbers for Copula Models (source,
                        html)
copula_GARCH            The Copula GARCH Model (source, html)
wild_animals            Wild Animals: Examples of Nonstandard Copulas
                        (source, html)

Vignettes in package ‘coro’:

generator               Generators (source, html)

Vignettes in package ‘correlation’:

types                   Correlation Types (source, html)
multilevel              Multilevel Correlations (source, html)

Vignettes in package ‘corrgram’:

corrgram_examples       Examples for the corrgram package (source,
                        html)
corrgram_cov2cor        Finding the nearest proper correlation matrix
                        (source, html)

Vignettes in package ‘corrplot’:

corrplot-intro          An Introduction to corrplot Package (source,
                        html)

Vignettes in package ‘covr’:

how_it_works            How does covr work anyway (source, html)

Vignettes in package ‘cowplot’:

introduction            Introduction to cowplot (source, html)

Vignettes in package ‘coxme’:

laplace                 Coxme and the Laplace Approximation (source,
                        pdf)
coxme                   Mixed Effects Cox Models (source, pdf)
variance                Special Variance Structures (source, pdf)
lmekin                  The lmekin function (source, pdf)

Vignettes in package ‘cplm’:

cplm                    cplm (source, pdf)

Vignettes in package ‘cpp11’:

converting              Converting from Rcpp (source, html)
FAQ                     FAQ (source, html)
cpp11                   Get started with cpp11 (source, html)
motivations             Motivations for cpp11 (source, html)
internals               cpp11 internals (source, html)

Vignettes in package ‘crch’:

crch                    Heteroscedastic Censored and Truncated
                        Regression with crch (source, pdf)

Vignettes in package ‘credentials’:

intro                   Managing SSH and Git Credentials in R (source,
                        html)

Vignettes in package ‘crew’:

shiny                   Asynchronous Shiny apps (source, html)
groups                  Controller groups (source, html)
promises                Integration with promises (source, html)
introduction            Introduction to crew (source, html)
risks                   Known risks of crew (source, html)
plugins                 Launcher plugins (source, html)

Vignettes in package ‘crs’:

spline_primer           A Primer on Spline Regression (source, pdf)
crs_faq                 Frequently Asked Questions (crs) (source, pdf)
crs                     The crs Package (source, pdf)

Vignettes in package ‘crul’:

crul                    1. crul introduction (source, html)
how-to-use-crul         2. crul workflows (source, html)
async                   3. async with crul (source, html)
curl-options            4. curl options (source, html)
best-practices-api-packages
                        5. API package best practices (source, html)
choosing-a-client       6. Choosing a HTTP request class (source, html)

Vignettes in package ‘cubature’:

cubature                Cubature Vectorization Efficiency (source,
                        html)
version2                Version 2.0 Notes (source, html)

Vignettes in package ‘cubble’:

cb2create               2. create (source, html)
cb4glyph                4. glyph (source, html)
cb5match                5matching (source, html)
cb3tsibblesf            cb3tsibblesf (source, html)
cb1class                class (source, html)
cb6interactive          interactive-vis (source, html)

Vignettes in package ‘curl’:

windows                 Proxies and Certificates on Windows Networks
                        (source, html)
intro                   The curl package: a modern R interface to
                        libcurl (source, html)

Vignettes in package ‘dagitty’:

dagitty4semusers        A SEM user's guide to dagitty for R (source,
                        html)

Vignettes in package ‘data.table’:

datatable-benchmarking
                        Benchmarking data.table (source, html)
datatable-reshape       Efficient reshaping using data.tables (source,
                        html)
datatable-faq           Frequently Asked Questions about data.table
                        (source, html)
datatable-importing     Importing data.table (source, html)
datatable-intro         Introduction to data.table (source, html)
datatable-keys-fast-subset
                        Keys and fast binary search based subset
                        (source, html)
datatable-programming   Programming on data.table (source, html)
datatable-reference-semantics
                        Reference semantics (source, html)
datatable-secondary-indices-and-auto-indexing
                        Secondary indices and auto indexing (source,
                        html)
datatable-sd-usage      Using .SD for Data Analysis (source, html)

Vignettes in package ‘data.tree’:

applications            Example applications of data.tree (source,
                        html)
data.tree               Quick introduction to data.tree (source, html)

Vignettes in package ‘datawizard’:

selection_syntax        A quick summary of selection syntax in
                        `{datawizard}` (source, html)
tidyverse_translation   Coming from 'tidyverse' (source, html)
standardize_data        Data Standardization (source, html)

Vignettes in package ‘dbarts’:

gibbs_sampler_mixture_model
                        Building a Gibbs Sampler with dbarts (source,
                        pdf)
working_with_saved_trees
                        Working with dbarts Saved Trees (source, pdf)

Vignettes in package ‘dbplyr’:

new-backend             Adding a new DBI backend (source, html)
translation-function    Function translation (source, html)
dbplyr                  Introduction to dbplyr (source, html)
reprex                  Reprexes for dbplyr (source, html)
translation-verb        Verb translation (source, html)
sql                     Writing SQL with dbplyr (source, html)
backend-2               dbplyr 2.0.0 backend API (source, html)

Vignettes in package ‘dbscan’:

dbscan                  Fast Density-based Clustering (DBSCAN and
                        OPTICS) (source, pdf)
hdbscan                 Hierarchical DBSCAN (HDBSCAN) with the dbscan
                        package (source, html)

Vignettes in package ‘deSolve’:

deSolve                 R Package deSolve: Solving Initial Value
                        Differential Equations in R (source, pdf)
compiledCode            R Package deSolve: Writing Code in Compiled
                        Languages (source, pdf)

Vignettes in package ‘dendextend’:

Quick_Introduction      A quick introduction to dendextend (start here)
                        (source, html)
FAQ                     Frequently asked questions (source, html)
Cluster_Analysis        Hierarchical cluster analysis on famous data
                        sets - enhanced with the _dendextend_ package
                        (source, html)
dendextend              Introduction to dendextend (source, html)

Vignettes in package ‘desplot’:

desplot_examples        Plotting field maps with the desplot package
                        (source, html)

Vignettes in package ‘detectseparation’:

infinite_estimates      Detecting separation and infinite estimates in
                        log binomial regression (source, html)
separation              Detecting separation and infinite estimates in
                        logistic regression (source, html)

Vignettes in package ‘devtools’:

dependencies            Devtools dependencies (source, html)

Vignettes in package ‘dfidx’:

dfidx                   dfidx: an R package for indexed data (source,
                        html)

Vignettes in package ‘diagram’:

diagram                 diagram: visualising simple graphs, flowcharts
                        and webs (source, pdf)

Vignettes in package ‘dials’:

dials                   Working with Tuning Parameters (source, html)

Vignettes in package ‘did’:

did-basics              Getting Started with the did Package (source,
                        html)
multi-period-did        Introduction to DiD with Multiple Time Periods
                        (source, html)
pre-testing             Pre-Testing in a DiD Setup using the did
                        Package (source, html)
TWFE                    Problems with two-way fixed-effects event-study
                        regressions (source, html)
extensions              Writing Extensions to the did Package (source,
                        html)

Vignettes in package ‘diffobj’:

embed                   Embed Diffs in R Markdown Or Shiny (source,
                        html)
diffobj                 Introduction to Diffobj (source, html)

Vignettes in package ‘digest’:

sha1                    sha1() versus digest() (source, html)

Vignettes in package ‘dimRed’:

dimensionality-reduction
                        Dimensionality Reduction (source, pdf)

Vignettes in package ‘diptest’:

diptest-issues          Dip Test Distributions, P-values, and other
                        Explorations (source, pdf)

Vignettes in package ‘directlabels’:

examples                examples (source, html)

Vignettes in package ‘dismo’:

sdm                     SDM (source, pdf)

Vignettes in package ‘distributions3’:

intro-to-hypothesis-testing
                        Intro to hypothesis testing (source, html)
one-sample-t-test       One sample T-tests (source, html)
one-sample-z-test       One sample Z-tests (source, html)
one-sample-z-test-for-proportion
                        One sample Z-tests for a proportion (source,
                        html)
one-sample-sign-tests   One sample sign tests (source, html)
paired-tests            Paired tests (source, html)
poisson                 The Poisson distribution: From basic
                        probability theory to regression models
                        (source, html)
two-sample-z-test       Two sample Z-tests (source, html)
one-sample-z-confidence-interval
                        Z confidence interval for a mean (source, html)
one-sample-t-confidence-interval
                        one-sample-t-confidence-interval (source, html)

Vignettes in package ‘dlm’:

dlm                     dlm: MLE and Bayesian analysis of Dynamic
                        Linear Models (source, pdf)

Vignettes in package ‘dm’:

dm                      First read: Getting started with dm (source,
                        html)
howto-dm-copy           How to: Copy data to and from a database
                        (source, html)
howto-dm-db             How to: Create a dm object from a database
                        (source, html)
howto-dm-df             How to: Create a dm object from data frames
                        (source, html)
howto-dm-rows           How to: Insert, update or remove rows in a
                        database (source, html)
howto-dm-theory         How to: Understand relational data models
                        (source, html)
tech-dm-draw            Techincal: Visualizing dm objects (source,
                        html)
tech-dm-class           Technical: Class dm and basic operations
                        (source, html)
tech-dm-filter          Technical: Filtering in relational data models
                        (source, html)
tech-dm-naming          Technical: Function naming logic (source, html)
tech-dm-join            Technical: Joining in relational data models
                        (source, html)
tech-dm-keyed           Technical: Manipulating individual tables
                        (source, html)
tech-dm-cdm             Technical: Migration guide: 'cdm' -> 'dm'
                        (source, html)
tech-dm-low-level       Technical: Model verification - keys,
                        constraints and normalization (source, html)
tech-dm-zoom            Technical: Zooming and manipulating tables
                        (source, html)

Vignettes in package ‘doBy’:

linest_lsmeans          doBy: Linear estimates and LSmeans (source,
                        pdf)
section_fun             doBy: Section functions to a smaller domain
                        (source, pdf)
doby                    doby: Groupwise computations and miscellaneous
                        utilities (source, pdf)

Vignettes in package ‘doFuture’:

doFuture-3-dofuture     Foreach Iteration using Futures via %dofuture%
                        (source, html)
doFuture-2-dopar        Foreach Iteration using Futures via %dopar%
                        (source, html)
doFuture-1-overview     doFuture: An Overview on using Foreach to
                        Parallelize via the Future Framework (source,
                        html)

Vignettes in package ‘doMC’:

gettingstartedMC        Getting Started with doMC and foreach (source,
                        pdf)

Vignettes in package ‘doMPI’:

doMPI                   Introduction to doMPI (source, pdf)

Vignettes in package ‘doParallel’:

gettingstartedParallel
                        Getting Started with doParallel and foreach
                        (source, pdf)

Vignettes in package ‘doRNG’:

doRNG                   Using the package doRNG (source, pdf)

Vignettes in package ‘dockerfiler’:

dockerfile-from-renv-lock
                        dockerfile-from-renv-lock (source, html)
dockerfiler             getting_started (source, html)

Vignettes in package ‘domir’:

domir_basics            Conceptual Introduction to Dominance Analysis
                        (source, html)

Vignettes in package ‘dplyr’:

colwise                 Column-wise operations (source, html)
grouping                Grouped data (source, html)
dplyr                   Introduction to dplyr (source, html)
programming             Programming with dplyr (source, html)
rowwise                 Row-wise operations (source, html)
two-table               Two-table verbs (source, html)
in-packages             Using dplyr in packages (source, html)
window-functions        Window functions (source, html)
base                    dplyr <-> base R (source, html)

Vignettes in package ‘dreamerr’:

dreamerr_introduction   dreamerr introduction (source, html)

Vignettes in package ‘dtplyr’:

translation             translation (source, html)

Vignettes in package ‘dtw’:

dtw                     Computing and Visualizing Dynamic Time Warping
                        Alignments in R: The dtw Package (source, pdf)

Vignettes in package ‘e1071’:

svmdoc                  Support Vector Machines---the Interface to
                        libsvm in package e1071 (source, pdf)
svminternals            svm() internals (source, pdf)

Vignettes in package ‘effects’:

partial-residuals       Effect Displays with Partial Residuals (source,
                        pdf)
predictor-effects-gallery
                        Predictor Effects Graphics Gallery (source,
                        pdf)
functions-supported-by-effects
                        Regression Models Supported by the effects
                        Package (source, pdf)

Vignettes in package ‘effectsize’:

interpret               Automated Interpretation of Indices of Effect
                        Size (source, html)
convert_p_OR_RR         Converting Between Probabilities, Odds
                        (Ratios), and Risk Ratios (source, html)
convert_r_d_OR          Converting Between r, d, and Odds Ratios
                        (source, html)
from_test_statistics    Effect Size from Test Statistics (source, html)
anovaES                 Effect Sizes for ANOVAs (source, html)
xtabs                   Effect Sizes for Contingency Tables (source,
                        html)
effectsize              Effect Sizes: Getting Started (source, html)
standardized_differences
                        Standardized Differences (source, html)
statistical_power       Statistical Power (source, html)
effectsize_API          Support Functions for Model Extensions (source,
                        html)

Vignettes in package ‘egg’:

Ecosystem               Laying out multiple plots on a page (source,
                        html)
Overview                Overview of the egg package (source, html)

Vignettes in package ‘eha’:

eha                     Event History and Survival Analysis (source,
                        html)
parametric1             Parametric duration models (source, pdf)
parametric              Parametric survival models (source, html)
tpchreg                 Proportional hazards regression with tabular
                        data (source, html)
gompertz                The Gompertz distribution (source, html)

Vignettes in package ‘elevatr’:

introduction_to_elevatr
                        Introduction to elevatr (source, html)

Vignettes in package ‘emmeans’:

AQuickStart             A quick-start guide for emmeans (source, html)
basics                  Basics of EMMs (source, html)
comparisons             Comparisons and contrasts (source, html)
confidence-intervals    Confidence intervals and tests (source, html)
xplanations             Explanations supplement (source, html)
FAQs                    FAQs for emmeans (source, html)
xtending                For developers: Extending emmeans (source,
                        html)
vignette-topics         Index of vignette topics (source, html)
interactions            Interaction analysis in emmeans (source, html)
models                  Models supported by emmeans (source, html)
predictions             Prediction in emmeans (source, html)
re-engineering-clds     Re-engineering CLDs (source, html)
sophisticated           Sophisticated models in emmeans (source, html)
transformations         Transformations and link functions (source,
                        html)
utilities               Utilities and options (source, html)
messy-data              Working with messy data (source, html)

Vignettes in package ‘epiR’:

epiR_descriptive        Descriptive epidemiology (source, html)
epiR_surveillance       Disease surveillance (source, html)
epiR_measures_of_association
                        Measures of association (source, html)
epiR_sample_size        Sample size calculations (source, html)

Vignettes in package ‘ergm’:

Network-Callback-API    API for Callback Functions for Network and
                        WtNetwork Structures (source, html)
Proposal-Lookup-API     API for MCMC Proposal Selection (source, html)
Terms-API               API for ergm Terms (source, html)
ergm-term-crossRef      ERGM terms cross-reference (source, html)
ergm                    Introduction to Exponential-family Random Graph
                        Models with ergm (source, pdf)
nodal_attributes        Nodal Attribute Specification in ERGM Terms
                        (source, html)

Vignettes in package ‘ergm.count’:

valued                  ERGMs for Valued Networks with Applications to
                        Count Data (source, html)

Vignettes in package ‘estimability’:

add-est-check           Adding estimability checking to to your predict
                        method (source, html)

Vignettes in package ‘eudract’:

eudract                 Eudract and CT.gov Safety XML (source, html)
standard_reporting      standard_reporting (source, html)

Vignettes in package ‘eurostat’:

vignette                Vignette for the eurostat R package (source,
                        html)

Vignettes in package ‘evd’:

Multivariate_Extremes   Statistics Of Extremes: Chapter 9 (source, pdf)

Vignettes in package ‘evtree’:

evtree                  Evolutionary Learning of Globally Optimal
                        Classification and Regression Trees in R
                        (source, pdf)

Vignettes in package ‘exactextractr’:

vig1_population         1. Summarizing gridded population data (source,
                        html)
vig2_categorical        2. Summarizing categorical data (source, html)

Vignettes in package ‘exams’:

exams                   Automatic Generation of Exams in R (source,
                        pdf)
exams2                  Flexible Generation of E-Learning Exams in R:
                        Moodle Quizzes, OLAT Assessments, and Beyond
                        (source, pdf)

Vignettes in package ‘expint’:

expint                  expint user manual (source, pdf)

Vignettes in package ‘expm’:

expm                    Using expm in packages (source, pdf)

Vignettes in package ‘fansi’:

sgr-in-rmd              ANSI CSI SGR Sequences in Rmarkdown (source,
                        html)

Vignettes in package ‘fastDummies’:

making-dummy-rows       Making dummy rows with dummy_rows() (source,
                        html)
making-dummy-variables
                        Making dummy variables with dummy_cols()
                        (source, html)

Vignettes in package ‘fastglm’:

quick-usage-guide-to-the-fastglm-package
                        Quick Usage Guide (source, html)

Vignettes in package ‘fastshap’:

fastshap                fastshap (source, html)

Vignettes in package ‘fastverse’:

fastverse_intro         Introduction to the *fastverse* (source, html)

Vignettes in package ‘fauxpas’:

fauxpas-vignette        Introduction to the fauxpas package (source,
                        html)

Vignettes in package ‘fda’:

BasisBasics             BasisBasics (source, html)
splineFunctions         SplineFunctions (source, html)
monotoneFunctions       monotoneFunctions (source, html)

Vignettes in package ‘feisr’:

feisr-vignette          Fixed Effects Individual Slopes using feisr
                        (source, html)

Vignettes in package ‘fftwtools’:

testTimeAndSimpleUse    ffttools example and simple use example
                        (source, pdf)

Vignettes in package ‘filehash’:

filehash                The filehash Package (source, pdf)

Vignettes in package ‘fitdistrplus’:

FAQ                     Frequently Asked Questions (source, html)
fitdistrplus_vignette   Overview of the fitdistrplus package (source,
                        html)
Optimalgo               Which optimization algorithm to choose?
                        (source, html)

Vignettes in package ‘fixest’:

exporting_tables        Exporting estimation tables (source, html)
multiple_estimations    Multiple estimations (source, html)
standard_errors         On standard-errors (source, html)
fixest_walkthrough      fixest introduction (source, html)

Vignettes in package ‘flexmix’:

regression-examples     Applications of finite mixtures of regression
                        models (source, pdf)
bootstrapping           Finite Mixture Model Diagnostics Using
                        Resampling Methods (source, pdf)
mixture-regressions     FlexMix Version 2: Finite Mixtures with
                        Concomitant Variables and Varying and Constant
                        Parameters (source, pdf)
flexmix-intro           FlexMix: A General Framework for Finite Mixture
                        Models and Latent Class Regression in R
                        (source, pdf)

Vignettes in package ‘flexsurv’:

standsurv               Calculating standardized survival measures in
                        flexsurv (source, html)
distributions           Distributions reference (source, pdf)
multistate              Multi-state modelling with flexsurv (source,
                        pdf)
flexsurv-examples       Supplementary examples of using flexsurv
                        (source, pdf)
flexsurv                flexsurv user guide (source, pdf)

Vignettes in package ‘flexsurvcure’:

flexsurvcure            Parametric Cure Models (source, html)

Vignettes in package ‘flextable’:

overview                Using flextable (source, html)

Vignettes in package ‘float’:

float                   Introducing the float package: 32-Bit Floats
                        for R (source, pdf)

Vignettes in package ‘fmeffects’:

fmeffects               Get started (source, html)
fme_theory              Why FMEs? (source, html)

Vignettes in package ‘fmesher’:

basic_use               Basic fmesher use (source, html)
inla_conversion         Converting legacy INLA mesh code to fmesher
                        (source, html)
fmesher_library         The fmesher C++ library (source, html)

Vignettes in package ‘foghorn’:

foghorn                 Get started (source, html)

Vignettes in package ‘forcats’:

forcats                 Introduction to forcats (source, html)

Vignettes in package ‘foreach’:

foreach                 foreach (source, html)
nested                  nested (source, html)

Vignettes in package ‘forecast’:

JSS2008                 Automatic Time Series Forecasting: the forecast
                        Package for R (Hyndman & Khandakar, JSS 2008)
                        (source, pdf)

Vignettes in package ‘formatR’:

formatR                 An Introduction to formatR (source, html)

Vignettes in package ‘formattable’:

formattable-data-frame
                        Formattable data frame (source, html)
introduction            Introduction to formattable package (source,
                        html)

Vignettes in package ‘formatters’:

formatters              Introduction to the formatters package (source,
                        html)

Vignettes in package ‘fortunes’:

fortunes                R Fortunes: Collected Wisdom (source, pdf)

Vignettes in package ‘frbs’:

lala2015frbs            frbs: Fuzzy Rule-based Systems for
                        Classification and Regression in R (source,
                        pdf)
lala2015pmml            frbsPMML: A Universal Representation Framework
                        for Fuzzy Rule-Based Systems Based on PMML
                        (source, pdf)

Vignettes in package ‘fs’:

function-comparisons    base vs fs (source, html)

Vignettes in package ‘ftExtra’:

transform-headers       Create multi level headers (source, html)
format_columns          Format columns as markdown (source, html)
group-rows              Group rows (source, html)

Vignettes in package ‘fungible’:

simulate-model-error    Simulating Population Correlation Matrices with
                        Model Error (source, html)

Vignettes in package ‘future’:

future-1-overview       A Future for R: A Comprehensive Overview
                        (source, html)
future-7-for-package-developers
                        A Future for R: Best Practices for Package
                        Developers (source, html)
future-4-issues         A Future for R: Common Issues with Solutions
                        (source, html)
future-5-startup        A Future for R: Controlling Default Future
                        Strategy (source, html)
future-6-future-api-backend-specification
                        A Future for R: Future API Backend
                        Specification (source, html)
future-3-topologies     A Future for R: Future Topologies (source,
                        html)
future-8-how-future-is-validated
                        A Future for R: How the Future Framework is
                        Validated (source, html)
future-4-non-exportable-objects
                        A Future for R: Non-Exportable Objects (source,
                        html)
future-2-output         A Future for R: Text and Message Output
                        (source, html)

Vignettes in package ‘future.apply’:

future.apply-1-overview
                        A Future for R: Apply Function to Elements in
                        Parallel (source, html)

Vignettes in package ‘future.batchtools’:

future.batchtools       A Future for batchtools (source, html)

Vignettes in package ‘future.callr’:

future.callr            A Future for callr (source, html)

Vignettes in package ‘gamboostLSS’:

gamboostLSS_Tutorial    gamboostLSS Tutorial (source, pdf)

Vignettes in package ‘gap’:

shinygap                Shiny for Genetic Analysis Package (gap)
                        Designs (source, html)
gap                     gap (source, html)
jss                     gap: genetic analysis package (source, pdf)

Vignettes in package ‘gapminder’:

gapminder               gapminder (source, html)

Vignettes in package ‘gargle’:

auth-from-web           Auth when using R from the browser (source,
                        html)
how-gargle-gets-tokens
                        How gargle gets tokens (source, html)
get-api-credentials     How to get your own API credentials (source,
                        html)
gargle-auth-in-client-package
                        How to use gargle for auth in a client package
                        (source, html)
non-interactive-auth    Non-interactive auth (source, html)
request-helper-functions
                        Request helper functions (source, html)
oauth-client-not-app    Transition from OAuth app to OAuth client
                        (source, html)
troubleshooting         Troubleshooting gargle auth (source, html)

Vignettes in package ‘gbm’:

gbm                     Generalized Boosted Models: A guide to the gbm
                        package (source, pdf)

Vignettes in package ‘gclus’:

gclus                   Clustering Graphics (source, html)

Vignettes in package ‘gdata’:

mapLevels               Mapping levels of a factor (source, pdf)
unknown                 Working with Unknown Values (source, pdf)

Vignettes in package ‘geepack’:

geepack-manual          Users guide to geepack (source, pdf)

Vignettes in package ‘geojsonsf’:

geojson-sf-conversions
                        Converting between GeoJSON and sf (source,
                        html)

Vignettes in package ‘geometry’:

qhull-eg                Qhull examples (source, pdf)

Vignettes in package ‘geomtextpath’:

aesthetics              Aesthetics (source, html)
curved_polar            Curved Text in Polar Co-ordinates (source,
                        html)
geomtextpath            Introduction to geomtextpath (source, html)

Vignettes in package ‘geosphere’:

geosphere               Introduction to the geosphere package (source,
                        pdf)

Vignettes in package ‘gert’:

gert                    gert (source, html)

Vignettes in package ‘getPass’:

getPass                 Guide to the getPass Package (source, pdf)

Vignettes in package ‘gfonts’:

gfonts                  gfonts (source, html)

Vignettes in package ‘ggExtra’:

ggExtra                 Package ggExtra (source, html)

Vignettes in package ‘ggResidpanel’:

introduction            An Introduction to ggResidpanel (source, html)

Vignettes in package ‘ggalluvial’:

ggalluvial              alluvial plots in ggplot2 (source, html)
shiny                   ggalluvial in Shiny apps (source, html)
labels                  labeling small strata (source, html)
order-rectangles        order of rectangles (source, html)

Vignettes in package ‘gganimate’:

gganimate               Getting Started (source, html)

Vignettes in package ‘ggbeeswarm’:

usageExamples           ggbeeswarm package usage examples (source, pdf)

Vignettes in package ‘ggdendro’:

modify_output           Modifying ggdendogram output (source, html)
ggdendro                Using 'ggdendro' to plot dendrograms (source,
                        html)

Vignettes in package ‘ggdist’:

dotsinterval            Dots + interval stats and geoms (source, html)
freq-uncertainty-vis    Frequentist uncertainty visualization (source,
                        html)
lineribbon              Lineribbon stats and geoms (source, html)
slabinterval            Slab + interval stats and geoms (source, html)

Vignettes in package ‘gge’:

gge_examples            Genotype plus Genotype-By-Block-of-Environments
                        Biplots (source, html)

Vignettes in package ‘ggeffects’:

content                 Documentation of the ggeffects package (source,
                        html)

Vignettes in package ‘ggfittext’:

introduction-to-ggfittext
                        Introduction to 'ggfittext' (source, html)

Vignettes in package ‘ggfortify’:

basics                  Introduction to ggfortify package (source,
                        html)
plot_lm                 Plotting Diagnostics for LM and GLM (source,
                        html)
plot_map                Plotting Geospatial Data (source, html)
plot_pca                Plotting PCA, clustering, LFDA and MDS results
                        (source, html)
plot_dist               Plotting Probability Distributions (source,
                        html)
plot_surv               Plotting Survival Curves (source, html)
plot_ts                 Plotting Time Series (source, html)

Vignettes in package ‘ggh4x’:

Facets                  Facets (source, html)
ggh4x                   Introduction to ggh4x (source, html)
Miscellaneous           Miscellaneous (source, html)
PositionGuides          Position Guides (source, html)
Statistics              Statistics (source, html)

Vignettes in package ‘gginnards’:

user-guide-1            User Guide: 1 Debugging ggplots (source, html)
user-guide-2            User Guide: 2 Manipulating ggplots (source,
                        html)

Vignettes in package ‘ggiraph’:

overview                Overview (source, html)

Vignettes in package ‘ggplot2’:

ggplot2-specs           Aesthetic specifications (source, html)
extending-ggplot2       Extending ggplot2 (source, html)
ggplot2                 Introduction to ggplot2 (source, html)
ggplot2-in-packages     Using ggplot2 in packages (source, html)

Vignettes in package ‘ggpolypath’:

ggpolypath              ggpolypath (source, html)

Vignettes in package ‘ggpp’:

nudge-examples          Combining repulsion and nudging (source, html)
grammar-extensions      Extensions to the Grammar of Graphics (source,
                        html)

Vignettes in package ‘ggraph’:

Edges                   Edges (source, html)
Layouts                 Layouts (source, html)
Nodes                   Nodes (source, html)
tidygraph               tidygraph and ggraph (source, html)

Vignettes in package ‘ggrepel’:

ggrepel                 ggrepel examples (source, html)

Vignettes in package ‘ggridges’:

gallery                 Gallery of ggridges examples (source, html)
introduction            Introduction to ggridges (source, html)

Vignettes in package ‘ggside’:

ggside_aes_mapping      Global Aesthetics Mappings and Side Geometries
                        (source, html)
ggside_basic_usage      ggside walkthrough (source, html)

Vignettes in package ‘ggsignif’:

intro                   Introduction to 'ggsignif' package (source,
                        html)

Vignettes in package ‘ggstats’:

stat_cross              Compute cross-tabulation statistics with
                        `stat_cross()` (source, html)
stat_prop               Compute custom proportions with `stat_prop()`
                        (source, html)
stat_weighted_mean      Compute weighted mean with
                        `stat_weighted_mean()` (source, html)
gglikert                Plot Likert-type items with `gglikert()`
                        (source, html)
ggcoef_model            Plot model coefficients with `ggcoef_model()`
                        (source, html)

Vignettes in package ‘ggsurvfit’:

themes                  Themes (source, html)

Vignettes in package ‘gh’:

managing-personal-access-tokens
                        Managing Personal Access Tokens (source, html)

Vignettes in package ‘giscoR’:

giscoR                  Get started with giscoR (source, html)

Vignettes in package ‘gistr’:

gistr                   gistr introduction (source, html)

Vignettes in package ‘gitcreds’:

helper-survey           git credential helpers (source, html)
package                 gitcreds for package authors (source, html)

Vignettes in package ‘glmmML’:

glmmML                  Generalized linear models with clustering
                        (source, pdf)

Vignettes in package ‘glmmTMB’:

covstruct               Covariance structures with glmmTMB (source,
                        html)
hacking                 Hacking glmmTMB (source, html)
miscEx                  Miscellaneous examples (source, html)
model_evaluation        Model evaluation (source, pdf)
parallel                Parallel optimization using glmmTMB (source,
                        html)
mcmc                    Post-hoc MCMC with glmmTMB (source, html)
priors                  Priors in glmmTMB (source, html)
sim                     Simulate from a fitted glmmTMB model or a
                        formula (source, html)
troubleshooting         Troubleshooting with glmmTMB (source, html)
glmmTMB                 basic examples of glmmTMB usage (source, pdf)

Vignettes in package ‘glmnet’:

glmnet                  An Introduction to glmnet (source, pdf)
Coxnet                  Regularized Cox Regression (source, pdf)
relax                   The Relaxed Lasso (source, pdf)
glmnetFamily            The family Argument for glmnet (source, pdf)

Vignettes in package ‘glmnetUtils’:

intro                   Introduction (source, html)

Vignettes in package ‘glue’:

engines                 Custom knitr language engines (source, html)
wrappers                How to write a function that wraps glue
                        (source, html)
glue                    Introduction to glue (source, html)
transformers            Transformers (source, html)

Vignettes in package ‘gmailr’:

deploy-a-token          Deploy a token (source, html)
sending_messages        Sending Messages With Gmailr (source, html)
gmailr                  gmailr (source, html)

Vignettes in package ‘gmm’:

gmm_with_R              Computing Generalized Empirical Likelihood and
                        Generalized Method of Moments with R (source,
                        pdf)

Vignettes in package ‘gnm’:

gnmOverview             Generalized nonlinear models in R: An overview
                        of the gnm package (source, pdf)

Vignettes in package ‘golem’:

a_start                 a_start (source, html)
b_dev                   b_dev (source, html)
c_deploy                c_deploy (source, html)
e_config                config (source, html)
d_js                    d_js (source, html)
z_golem_cheatsheet      e_golem_cheatsheet (source, html)
f_extending_golem       f_extending_golem (source, html)

Vignettes in package ‘googleAuthR’:

advanced-building       Advanced Google API building techniques
                        (source, html)
building                Building your own Google R library (source,
                        html)
setup                   Google API Setup (source, html)
google-authentication-types
                        Google authentication types for R (source,
                        html)
troubleshooting         Troubleshooting Authentication (source, html)

Vignettes in package ‘googleCloudStorageR’:

googleCloudStorageR     googleCloudStorageR (source, html)

Vignettes in package ‘googleComputeEngineR’:

creating-vms            Creating Virtual Machines (VM) (source, html)
docker                  Docker (source, html)
example-workflows       Example Workflows - Introduction (source, html)
gpu                     GPU Enabled VMs (source, html)
installation-and-authentication
                        Installation and Authentication (source, html)
massive-parallel        Massively parallel processing (source, html)
opencpu-api-server      OpenCPU Server (source, html)
persistent-rstudio      Persistent RStudio Server (source, html)
rstudio-team            RStudio Server for a team (source, html)
docker-ssh-futures      SSH, Docker, Container Registry and Futures
                        (source, html)
scheduled-rscripts      Scheduled R scripts on Master and Slave Google
                        Compute Engine VMs (source, html)
single-scheduler        Scheduled RStudio (source, html)
shiny-app               Shiny App (source, html)
troubleshooting         troubleshooting (source, html)

Vignettes in package ‘googleVis’:

googleVis_examples      Demonstration of googleVis (source, html)
googleVis_intro         Introduction to googleVis (source, html)

Vignettes in package ‘googledrive’:

googledrive             googledrive (source, html)

Vignettes in package ‘googleway’:

googleway-vignette      Googleway Vignette (source, html)

Vignettes in package ‘gower’:

intro                   Introduction to the gower package (source, pdf)

Vignettes in package ‘gplots’:

venn                    Venn Diagrams with gplots (source, pdf)

Vignettes in package ‘graphlayouts’:

graphlayouts            graphlayouts (source, html)

Vignettes in package ‘grid’:

moveline                Demonstrating move-to and line-to (source, pdf)
displaylist             Display Lists in grid (source, pdf)
interactive             Editing grid Graphics (source, pdf)
frame                   Frames and packing grobs (source, pdf)
grid                    Introduction to grid (source, pdf)
locndimn                Locations versus Dimensions (source, pdf)
sharing                 Modifying multiple grobs simultaneously
                        (source, pdf)
nonfinite               Non-finite values (source, pdf)
saveload                Persistent representations (source, pdf)
rotated                 Rotated Viewports (source, pdf)
grobs                   Working with grid grobs (source, pdf)
viewports               Working with viewports (source, pdf)
plotexample             Writing grid Code (source, pdf)

Vignettes in package ‘gridBase’:

gridBase                gridBase (source, pdf)

Vignettes in package ‘gridExtra’:

gtable                  (Unofficial) overview of gtable (source, html)
arrangeGrob             arrangeGrob: arranging multiple grobs on a page
                        (source, html)
ngonGrob                ngonGrob: regular polygons and ellipses in grid
                        graphics (source, html)
tableGrob               tableGrob: displaying tables as grid graphics
                        (source, html)

Vignettes in package ‘gridSVG’:

animation               animation (source, pdf)
extensibility           extensibility (source, pdf)
gridSVG                 gridSVG (source, pdf)

Vignettes in package ‘grpreg’:

getting-started         Getting started (source, html)

Vignettes in package ‘gsignal’:

gsignal                 Signal Processing in R (source, html)

Vignettes in package ‘gsl’:

gsl                     A vignette for the gsl package (source, pdf)

Vignettes in package ‘gstat’:

st                      Introduction to Spatio-Temporal Variography
                        (source, pdf)
spatio-temporal-kriging
                        Spatio-Temporal Geostatistics using gstat
                        (source, pdf)
gstat                   The meuse data set: a tutorial for the gstat R
                        package (source, pdf)
prs                     The pairwise relative semivariogram (source,
                        pdf)

Vignettes in package ‘gsubfn’:

gsubfn                  gsubfn: Utilities for Strings and for Function
                        Arguments. (source, pdf)

Vignettes in package ‘gtable’:

profiling               Profiling Performance (source, html)

Vignettes in package ‘gtsummary’:

gtsummary_definition    Definition of a gtsummary Object (source, html)
gallery                 FAQ + Gallery (source, html)
inline_text             Tutorial: inline_text (source, html)
tbl_regression          Tutorial: tbl_regression (source, html)
tbl_summary             Tutorial: tbl_summary (source, html)
rmarkdown               gtsummary + Quarto/R Markdown (source, html)
themes                  gtsummary themes (source, html)

Vignettes in package ‘hal9001’:

intro_hal9001           Fitting the Highly Adaptive Lasso with hal9001
                        (source, html)

Vignettes in package ‘haplo.stats’:

haplostats              haplostats (source, pdf)

Vignettes in package ‘hardhat’:

package                 Creating Modeling Packages With hardhat
                        (source, html)
forge                   Forging data for predictions (source, html)
mold                    Molding data for modeling (source, html)

Vignettes in package ‘haven’:

semantics               Conversion semantics (source, html)
datetimes               Dates and times (source, html)

Vignettes in package ‘heatmaply’:

heatmaply               Introduction to heatmaply (source, html)

Vignettes in package ‘heplots’:

HE_manova               HE plot MANOVA Examples (source, html)
HE_mmra                 HE plot MMRA Examples (source, html)

Vignettes in package ‘here’:

rmarkdown               Using here with rmarkdown (source, html)
here                    here (source, html)

Vignettes in package ‘hexbin’:

hexagon_binning         Hexagon Binning (source, pdf)

Vignettes in package ‘highr’:

highr-custom            Customization of the highr package (source,
                        html)
highr-internals         Internals of the highr package (source, html)

Vignettes in package ‘htmlTable’:

complex_tables          Building a complex table (source, html)
general                 How-to use htmlTable (source, html)
text_formatters         Text formatters (source, html)
tidyHtmlTable           Using tidyHtmlTable (source, html)

Vignettes in package ‘htmlwidgets’:

develop_advanced        Advanced (source, html)
develop_intro           Introduction (source, html)
develop_sizing          Sizing (source, html)

Vignettes in package ‘httptest2’:

faq                     Frequently Asked Questions (source, html)
redacting               Redacting and Modifying Recorded Requests
                        (source, html)
vignettes               Writing Vignettes with APIs (source, html)
httptest2               httptest: A Test Environment for HTTP Requests
                        in R (source, html)

Vignettes in package ‘httr’:

api-packages            Best practices for API packages (source, html)
quickstart              Getting started with httr (source, html)
secrets                 Managing secrets (source, html)

Vignettes in package ‘httr2’:

httr2                   httr2 (source, html)

Vignettes in package ‘hunspell’:

intro                   The hunspell package: High-Performance Stemmer,
                        Tokenizer, and Spell Checker for R (source,
                        html)

Vignettes in package ‘huxtable’:

design-principles       Design Principles, Comparisons and Limitations
                        (source, html)
themes                  Huxtable themes (source, html)
huxtable                Introduction to huxtable (source, pdf)
huxreg                  Regression Tables with huxreg (source, html)

Vignettes in package ‘icenReg’:

icenReg                 Using icenReg (source, pdf)

Vignettes in package ‘ids’:

ids                     ids (source, html)

Vignettes in package ‘ifaTools’:

pritikin-schmidt        Model Builder for Item Factor Analysis with
                        OpenMx (source, pdf)

Vignettes in package ‘igraph’:

igraph                  igraph (R interface) (source, html)
igraph_ES               igraph (interfaz R) (source, html)

Vignettes in package ‘iml’:

intro                   Introduction to iml: Interpretable Machine
                        Learning in R (source, html)
parallel                Parallel computation of interpretation methods
                        (source, html)

Vignettes in package ‘ingredients’:

vignette_describe       Explanations in natural language (source, html)
vignette_titanic        General introduction: Survival on the RMS
                        Titanic (source, html)
vignette_simulated      Simulated data, real problem (source, html)

Vignettes in package ‘inlabru’:

articles                Articles list (source, html)
component               Defining model components (source, html)
bru_mapper              Devel: Customised model components with the
                        bru_mapper system (source, html)
method                  Iterative linearised INLA method (source, html)
linearapprox            Nonlinear model approximation (source, html)
prediction_scores       Prediction scores (source, html)

Vignettes in package ‘insight’:

export                  Exporting tables with captions and footers
                        (source, html)
display                 Formatting, printing and exporting tables
                        (source, html)
insight                 Getting Started with Accessing Model
                        Information (source, html)

Vignettes in package ‘interactions’:

interactions            Exploring interactions with continuous
                        predictors in regression models (source, html)
categorical             Plotting interactions among categorical
                        variables in regression models (source, html)

Vignettes in package ‘intergraph’:

howto                   Short intergraph tutorial (source, html)

Vignettes in package ‘interp’:

interp                  Interpolation (source, pdf)
partDeriv               Local polynomial regression in two variables
                        applied to estimating partial derivatives
                        (source, pdf)
tri                     Triangulation of irregular spaced data (source,
                        pdf)

Vignettes in package ‘intervals’:

intervals_overview      Overview of the intervals package. (source,
                        pdf)

Vignettes in package ‘ipred’:

ipred-examples          Some more or less useful examples for
                        illustration. (source, pdf)

Vignettes in package ‘irace’:

irace-package           irace package: User Guide (source, pdf)

Vignettes in package ‘irlba’:

irlba                   irlba Manual (source, pdf)

Vignettes in package ‘isoband’:

isoband1                Generating isolines and isobands (source, html)
isoband3                Labeled isolines (source, html)

Vignettes in package ‘iterators’:

writing                 Writing Custom Iterators (source, pdf)
iterators               iterators Manual (source, pdf)

Vignettes in package ‘itsadug’:

acf                     ACF: checking & handling autocorrelation
                        (source, html)
overview                Quick overview of plot functions (source, html)
test                    Testing for significance (source, html)
inspect                 Visual inspection of GAMM models (source, html)

Vignettes in package ‘ivreg’:

Diagnostics-for-2SLS-Regression
                        Diagnostics for 2SLS Regression (source, html)
ivreg                   ivreg: Two-Stage Least-Squares Regression with
                        Diagnostics (source, html)

Vignettes in package ‘jagsUI’:

jagsUI                  Introduction to jagsUI (source, html)

Vignettes in package ‘janitor’:

janitor                 janitor (source, html)
tabyls                  tabyls (source, html)

Vignettes in package ‘joineR’:

competing-risks         Competing risks (source, html)
joineR                  joineR (source, html)

Vignettes in package ‘joineRML’:

technical               Technical details of joineRML (source, pdf)
joineRML                joineRML (source, html)
joineRML-tidy           joineRML and the broom package (source, html)

Vignettes in package ‘jose’:

jwt                     Encoding/Decoding JSON Web Tokens (JWT) in R
                        (source, html)
jwk                     Reading/Writing JSON Web Keys (JWK) in R
                        (source, html)

Vignettes in package ‘js’:

intro                   Working with JavaScript Syntax in R (source,
                        html)

Vignettes in package ‘jsonify’:

jsonify                 Jsonify (source, html)

Vignettes in package ‘jsonlite’:

json-mapping            A mapping between JSON data and R objects
                        (source, pdf)
json-paging             Combining pages of JSON data with jsonlite
                        (source, html)
json-apis               Fetching JSON data from REST APIs (source,
                        html)
json-aaquickstart       Getting started with JSON and jsonlite (source,
                        html)
json-opencpu            Simple JSON RPC with OpenCPU (source, pdf)

Vignettes in package ‘jtools’:

svycor                  Calculate correlations and correlation tables
                        with complex survey data (source, html)
summ                    Tools for summarizing and visualizing
                        regression models (source, html)
effect_plot             Visualizing regression model predictions
                        (source, html)

Vignettes in package ‘kableExtra’:

best_practice_for_newline_in_latex_table
                        Best Practice for newline in LaTeX table
                        (source, pdf)
awesome_table_in_html   Create Awesome HTML Table with knitr::kable and
                        kableExtra (source, html)
awesome_table_in_pdf    Create Awesome PDF Table with knitr::kable and
                        kableExtra (source, pdf)
legacy_features         Legacy or Unrecommended Features (source, html)
use_kable_in_shiny      Use kable in Shiny (source, html)

Vignettes in package ‘katex’:

katex-tests             Rending math to HTML in R using katex (source,
                        html)

Vignettes in package ‘kdecopula’:

kdecopula               kdecopula (source, pdf)

Vignettes in package ‘keras’:

faq                     Frequently Asked Questions (source, html)
index                   Getting Started with Keras (source, html)
guide_keras             Guide to Keras Basics (source, html)
functional_api          Guide to the Functional API (source, html)
sequential_model        Guide to the Sequential Model (source, html)
saving_serializing      Saving and serializing models (source, html)
training_callbacks      Training Callbacks (source, html)
training_visualization
                        Training Visualization (source, html)
applications            Using Pre-Trained Models (source, html)
custom_layers           Writing Custom Keras Layers (source, html)
custom_models           Writing Custom Keras Models (source, html)

Vignettes in package ‘keras3’:

custom_train_step_in_tensorflow
                        Customizing what happens in `fit()` with
                        TensorFlow (source, html)
distribution            Distributed training with Keras 3 (source,
                        html)
getting_started         Getting Started with Keras (source, html)
intro_to_keras_for_researchers
                        Introduction to Keras for Researchers (source,
                        html)
intro_to_keras_for_engineers
                        Introduction to Keras for engineers (source,
                        html)
making_new_layers_and_models_via_subclassing
                        Making new layers and models via subclassing
                        (source, html)
distributed_training_with_tensorflow
                        Multi-GPU distributed training with TensorFlow
                        (source, html)
serialization_and_saving
                        Save, serialize, and export models (source,
                        html)
functional_api          The Functional API (source, html)
sequential_model        The Sequential model (source, html)
training_with_built_in_methods
                        Training & evaluation with the built-in methods
                        (source, html)
transfer_learning       Transfer learning & fine-tuning (source, html)
understanding_masking_and_padding
                        Understanding masking & padding (source, html)
writing_a_custom_training_loop_in_tensorflow
                        Writing a training loop from scratch in
                        TensorFlow (source, html)
writing_your_own_callbacks
                        Writing your own callbacks (source, html)

Vignettes in package ‘kernlab’:

kernlab                 kernlab - An S4 Package for Kernel Methods in R
                        (source, pdf)

Vignettes in package ‘kinship2’:

kinship_code_details    Kinship_Matrix_Code_Details (source, html)
pedigree                Pedigree_Examples (source, html)
plot_code_details       Pedigree_Plot_Details (source, html)
pedigree_code_details   Pedigree_constructor_details (source, html)
align_code_details      Pedigree_plot_alignment_details (source, html)

Vignettes in package ‘knitr’:

knitr-html              An R HTML Vignette with knitr (source, html)
knitr-markdown          An R Markdown Vignette with knitr (source,
                        html)
knit_print              Custom Print Methods (source, html)
datatables              Display Tables with the JavaScript Library
                        DataTables (source, html)
knitr-intro             Not an Introduction to knitr (source, html)
docco-classic           R Markdown with the Docco Classic Style
                        (source, html)
docco-linear            R Markdown with the Docco Linear Style (source,
                        html)
knit_expand             Templating with knit_expand() (source, html)
knitr-refcard           knitr Reference Card (source, html)

Vignettes in package ‘ks’:

kde                     kde (source, pdf)

Vignettes in package ‘laGP’:

laGP                    a guide to the laGP package (source, pdf)

Vignettes in package ‘labelled’:

missing_values          About missing values: regular NAs, tagged NAs
                        and user NAs (source, html)
look_for                Generate a data dictionnary and search for
                        variables with `look_for()` (source, html)
intro_labelled          Introduction to labelled (source, html)
packed_columns          Variables labels and packed columns (source,
                        html)

Vignettes in package ‘later’:

later-cpp               Using later from C++ (source, html)

Vignettes in package ‘latex2exp’:

supported-commands      Supported LaTeX commands (source, html)
using-latex2exp         Using latex2exp (source, html)

Vignettes in package ‘lattice’:

grid                    Integation with grid (source, pdf)

Vignettes in package ‘lava’:

correlation             Estimating partial correlations with lava
                        (source, html)
nonlinear               Non-linear latent variable models and
                        error-in-variable models (source, html)
influencefunction       The Art of Influence (source, html)

Vignettes in package ‘lavaSearch2’:

overview                lavaSearch2: overview (source, pdf)

Vignettes in package ‘lazyeval’:

lazyeval-old            Lazyeval: a new approach to NSE (source, html)
lazyeval                Non-standard evaluation (source, html)

Vignettes in package ‘lbfgs’:

Vignette                An R Package for Limited-memory BFGS
                        Optimization (source, pdf)

Vignettes in package ‘lbfgsb3c’:

lbfgsb3c                lbfgsb3c-nocompile (source, html)

Vignettes in package ‘lemon’:

capped-axes             Capping axis lines (source, html)
geoms                   Geoms in lemon (source, html)
lemon_print             Lemon print -- pretty printing data frames and
                        tables (source, html)
facet-rep-labels        Repeat axis lines on facet panels (source,
                        html)
gtable_show_lemonade    Show gtable names and grill (source, html)
legends                 Working with legends (source, html)

Vignettes in package ‘lfe’:

speed                   Convergence rate with examples (source, pdf)
lfehow                  How lfe works (source, pdf)
biascorrection          Limited mobility bias correction (source, pdf)
identification          Multicollinearity, identification, and
                        estimable functions (source, pdf)

Vignettes in package ‘lhs’:

augment_lhs             An Example of Augmenting a Latin Hypercube
                        (source, html)
lhs_basics              Basic Latin hypercube samples and designs with
                        package lhs (source, html)
lhs_faq                 Latin Hypercube Samples - Questions (source,
                        html)

Vignettes in package ‘libcoin’:

libcoin                 Implementing Permutation Tests (source, pdf)

Vignettes in package ‘lifecycle’:

communicate             Communicate lifecycle changes in your functions
                        (source, html)
stages                  Lifecycle stages (source, html)
manage                  Manage lifecycle changes in functions you use
                        (source, html)

Vignettes in package ‘likert’:

likert-xtable           Examples of likert Tables (source, pdf)

Vignettes in package ‘lime’:

Understanding_lime      Understanding lime (source, html)

Vignettes in package ‘lintr’:

continuous-integration
                        Continuous integration (source, html)
creating_linters        Creating new linters (source, html)
editors                 Editor setup (source, html)
lintr                   Using lintr (source, html)

Vignettes in package ‘listenv’:

listenv                 List Environments (source, html)

Vignettes in package ‘littler’:

littler-examples        Littler Examples (source, html)
littler-faq             Littler FAQ (source, html)

Vignettes in package ‘lm.beta’:

comparison              Comparison between lm.beta and scale (source,
                        pdf)
implementation          Implementation of lm.beta (source, pdf)

Vignettes in package ‘lme4’:

Theory                  Computational Methods (source, pdf)
lmer                    Fitting Linear Mixed-Effects Models using lme4
                        (source, pdf)
PLSvGLS                 PLS vs GLS for LMMs (source, pdf)
lmerperf                lme4 performance tips (source, html)

Vignettes in package ‘lmeInfo’:

Information-matrices-for-fitted-LME-models
                        Information-matrices-for-fitted-lme-models
                        (source, html)

Vignettes in package ‘lmodel2’:

mod2user                Model II Regression User Guide (source, pdf)

Vignettes in package ‘lmtest’:

lmtest-intro            Diagnostic Checking in Regression Relationships
                        (source, pdf)

Vignettes in package ‘localModel’:

classification_example
                        Explaining classification models with
                        localModel package (source, html)
regression_example      Introduction to localModel package (source,
                        html)
localModel_methodology
                        Methodology behind localModel package (source,
                        html)

Vignettes in package ‘logcondens’:

logcondens              logcondens: Computations Related to Univariate
                        Log-Concave Density Estimation (Duembgen and
                        Rufibach, 2011, Journal of Statistical
                        Software, 39(6), 1-28.) (source, pdf)

Vignettes in package ‘logger’:

customize_logger        Customizing the Format and the Destination of a
                        Log Record (source, html)
Intro                   Introduction to logger (source, html)
r_packages              Logging from R Packages (source, html)
migration               Migration Guide (source, html)
performance             Simple Benchmarks on logger Performance
                        (source, html)
anatomy                 The Anatomy of a Log Request (source, html)
write_custom_extensions
                        Writing Custom Logger Extensions (source, html)

Vignettes in package ‘logitr’:

basic_usage             Basic Usage (source, html)
benchmark               Benchmarking estimation speed against other
                        packages (source, html)
data_formatting         Data Formatting and Encoding (source, html)
mxl_models              Estimating Mixed Logit Models (source, html)
interactions            Estimating Models with Interactions (source,
                        html)
mnl_models              Estimating Multinomial Logit Models (source,
                        html)
mnl_models_weighted     Estimating Weighted Logit Models (source, html)
predict                 Predicting Probabilities and Outcomes with
                        Estimated Models (source, html)
summarizing_results     Summarizing Results (source, html)
utility_models          Utility Models in the Preference & WTP Space
                        (source, html)
convergence             WTP space convergence issues in other packages
                        (source, html)

Vignettes in package ‘logmult’:

logmult                 Short Reference for logmult (source, html)

Vignettes in package ‘longmemo’:

BspecFGN                fast-specFGN (source, pdf)

Vignettes in package ‘loo’:

loo2-lfo                Approximate leave-future-out cross-validation
                        for Bayesian time series models (source, html)
loo2-moment-matching    Avoiding model refits in leave-one-out
                        cross-validation with moment matching (source,
                        html)
loo2-weights            Bayesian Stacking and Pseudo-BMA weights
                        (source, html)
loo2-elpd               Holdout validation and K-fold cross-validation
                        of Stan programs with the loo package (source,
                        html)
loo2-non-factorized     Leave-one-out cross-validation for
                        non-factorized models (source, html)
loo2-mixis              Mixture IS leave-one-out cross-validation for
                        high-dimensional Bayesian models (source, html)
loo2-large-data         Using Leave-one-out cross-validation for large
                        data (source, html)
loo2-example            Using the loo package (source, html)
loo2-with-rstan         Writing Stan programs for use with the loo
                        package (source, html)

Vignettes in package ‘lubridate’:

lubridate               Do more with dates and times in R (source,
                        html)

Vignettes in package ‘lucid’:

lucid_examples          Lucid printing of floating-point vectors
                        (source, html)

Vignettes in package ‘mRMRe’:

mRMRe                   mRMRe: an R package for parallelized mRMR
                        ensemble feature selection (source, pdf)

Vignettes in package ‘magic’:

magic                   A vignette for the magic package (source, pdf)

Vignettes in package ‘magick’:

intro                   The magick package: Advanced Image-Processing
                        in R (source, html)

Vignettes in package ‘magrittr’:

tradeoffs               Design tradeoffs (source, html)
magrittr                Introducing magrittr (source, html)

Vignettes in package ‘manhattanly’:

manhattanly             Interactive Manhattan, Q-Q, and Volcano Plots
                        Using Plotly.js (source, html)

Vignettes in package ‘manipulateWidget’:

manipulateWidgets       Getting started with manipulateWidget (source,
                        html)

Vignettes in package ‘mapdeck’:

mapdeck                 mapdeck (source, html)

Vignettes in package ‘markdown’:

intro                   An Introduction to the markdown Package
                        (source, html)
article                 Authoring HTML Articles with the markdown
                        Package (source, html)
markdown-output         HTML Output from Markdown Examples (source,
                        html)
slides                  Making HTML Slides with the markdown Package
                        (source, html)
markdown-examples       Some Markdown Examples (source, html)

Vignettes in package ‘marqLevAlg’:

mla                     MLA (source, html)

Vignettes in package ‘matrixStats’:

matrixStats-methods     matrixStats: Summary of functions (source,
                        html)

Vignettes in package ‘maxLik’:

intro-to-maximum-likelihood
                        Introduction: what is maximum likelihood
                        (source, pdf)
using-maxlik            Maximum likelihood estimation with maxLik
                        (source, pdf)
stochastic-gradient-maxLik
                        SGA introduction: the basic usage of maxSGA
                        (source, pdf)

Vignettes in package ‘mbend’:

demo                    Introduction to mbend (source, html)

Vignettes in package ‘mboost’:

SurvivalEnsembles       Survival Ensembles (source, pdf)
mboost                  mboost (source, pdf)
mboost_illustrations    mboost Illustrations (source, pdf)
mboost_tutorial         mboost Tutorial (source, pdf)

Vignettes in package ‘mc2d’:

docmcEnglish            A Manual for mc2d: Tools for Two-Dimensional
                        Monte-Carlo Simulations (source, pdf)
mc2dLmEnglish           Case study: L. monocytogenes in cold-smoked
                        salmon (source, pdf)

Vignettes in package ‘mclust’:

mclust                  A quick tour of mclust (source, html)

Vignettes in package ‘mediation’:

mediation               mediation (source, pdf)
mediation-old           mediation-old (source, pdf)

Vignettes in package ‘memisc’:

mtable-html             "mtable" results in HTML format (source, html)
anes48                  Analysing the American National Election Study
                        of 1948 with "memisc" (source, html)
ftable-matrix           Combining flattened contingency tables (and
                        other tables) (source, html)
items                   Handling questionnaire items with "memisc"
                        (source, html)

Vignettes in package ‘memuse’:

memuse-guide            memuse-guide (source, pdf)

Vignettes in package ‘merTools’:

merToolsIntro           An Introduction to merTools (source, html)
imputation              Imputation (source, html)
marginal_effects        Marginalizing Random Effect Levels (source,
                        html)
Using_predictInterval   Prediction Intervals from merMod Objects
                        (source, html)

Vignettes in package ‘metR’:

Visualization-tools     Visualization tools (source, html)
Working-with-data       Working with data (source, html)

Vignettes in package ‘meta’:

meta-workflow           meta: General Package for Meta-Analysis -
                        Workflow (source, pdf)
meta-tutorial           meta: How to perform a meta-analysis with R: a
                        practical tutorial (source, pdf)

Vignettes in package ‘metaBMA’:

metaBMA                 metaBMA: Meta-Analysis with Bayesian Model
                        Averaging (source, html)

Vignettes in package ‘metafor’:

metafor                 Conducting Meta-Analyses in R with the metafor
                        Package (source, pdf)
diagram                 Diagram of Functions in the metafor Package
                        (source, pdf)

Vignettes in package ‘metaplus’:

metaplus-package        metaplus: An R Package for the Analysis of
                        Robust Meta-Analysis and Meta-Regression
                        (source, pdf)

Vignettes in package ‘mets’:

time-to-event-family-studies-arev
                        A practical guide to Human Genetics with
                        Lifetime Data (source, html)
binomial-twin           Analysis of bivariate binomial data: Twin
                        analysis (source, html)
binomial-family         Analysis of multivariate binomial data: family
                        analysis (source, html)
twostage-survival       Analysis of multivariate survival data (source,
                        html)
survival-ate            Average treatment effect (ATE) based on the Cox
                        and Fine-Gray model (source, html)
binreg-ate              Average treatment effect (ATE) for Competing
                        risks and binary outcomes (source, html)
rmst-ate                Average treatment effect (ATE) for Restricted
                        mean survival and years lost of Competing risks
                        (source, html)
binreg                  Binomial Regression for Survival and Competing
                        Risks Data (source, html)
cifreg                  Cumulative Incidence Regression (source, html)
interval-discrete-survival
                        Discrete Interval Censored Survival Models
                        (source, html)
glm-utility             GEE cluster standard errors and predictions for
                        glm objects (source, html)
haplo-discrete-ttp      Haplotype Discrete Survival Models (source,
                        html)
marginal-cox            Marginal modelling of clustered survival data
                        (source, html)
mediation-survival      Mediation Analysis for survival data (source,
                        html)
recurrent-events        Recurrent events (source, html)
quantitative-twin       Twin models (source, html)
binreg-TRS              Two-Stage Randomization for for Competing risks
                        and Survival outcomes (source, html)
basic-dutils            dUtility data-frame manipulations (source,
                        html)

Vignettes in package ‘mfx’:

mfxarticle              Marginal Effects for Generalized Linear Models:
                        The mfx Package for R (source, pdf)

Vignettes in package ‘mgcViz’:

mgcviz                  mgcViz_vignette (source, html)

Vignettes in package ‘mi’:

mi_vignette             An Example of mi Usage (source, pdf)

Vignettes in package ‘microplot’:

rmhPoster               Microplots in LaTeX tables, useR2016 poster
                        (source, pdf)

Vignettes in package ‘mirt’:

mirt-vignettes          Online Vignettes (source, html)

Vignettes in package ‘mirtCAT’:

mirtCAT-vignettes       Online Vignettes (source, html)

Vignettes in package ‘misaem’:

misaem                  Linear regression and logistic regression with
                        missing covariates (source, html)

Vignettes in package ‘missForest’:

missForest_1.5          missForest_1.5 (source, pdf)

Vignettes in package ‘missMDA’:

MultipleImputation      MulitpleImputation (source, html)
missMDA                 missMDA (source, html)

Vignettes in package ‘missRanger’:

working_with_censoring
                        Censored Variables (source, html)
multiple_imputation     Multiple Imputation (source, html)
missRanger              Using missRanger (source, html)

Vignettes in package ‘mitml’:

Analysis                Analysis of Multiply Imputed Data Sets (source,
                        html)
Level2                  Imputation of Missing Data at Level 2 (source,
                        html)
Introduction            Introduction (source, html)

Vignettes in package ‘mitools’:

smi                     smi (source, pdf)

Vignettes in package ‘mixl’:

user-guide              Mixl User Guide (source, html)

Vignettes in package ‘mlmRev’:

StarData                Creating an R data set from STAR (source, pdf)
MlmSoftRev              Examples from Multilevel Software Reviews
                        (source, pdf)

Vignettes in package ‘mlogit’:

c2.formula.data         2. Data management, model description and
                        testing (source, html)
c3.rum                  3. Random utility model and the multinomial
                        logit model (source, html)
c4.relaxiid             4. Logit models relaxing the iid hypothesis
                        (source, html)
c5.mxl                  5. The random parameters (or mixed) logit model
                        (source, html)
c6.mprobit              6. The multinomial probit model (source, html)
c7.miscmodels           7. Miscellaneous models (source, html)
e1mlogit                Exercise 1: Multinomial logit model (source,
                        html)
e2nlogit                Exercise 2: Nested logit model (source, html)
e3mxlogit               Exercise 3: Mixed logit model (source, html)
e4mprobit               Exercise 4: Multinomial probit (source, html)
mlogit                  mlogit (source, html)

Vignettes in package ‘mlr’:

mlr                     mlr (source, html)

Vignettes in package ‘mlrMBO’:

mlrMBO                  Quick introduction (source, html)

Vignettes in package ‘mlt.docreg’:

mlt                     mlt (source, pdf)

Vignettes in package ‘mmpf’:

mmpf                    Monte-Carlo Methods for Prediction Functions
                        (source, html)

Vignettes in package ‘mmrm’:

between_within          Between-Within (source, html)
coef_vcov               Coefficients Covariance Matrix Adjustment
                        (source, html)
mmrm_review_methods     Comparison with other software (source, html)
covariance              Covariance Structures (source, html)
hypothesis_testing      Details of Hypothesis Testing (source, html)
empirical_wls           Details of Weighted Least Square Empirical
                        Covariance (source, html)
kenward                 Kenward-Roger (source, html)
methodological_introduction
                        Mixed Models for Repeated Measures (source,
                        html)
algorithm               Model Fitting Algorithm (source, html)
introduction            Package Introduction (source, html)
package_structure       Package Structure (source, html)
predict                 Prediction and Simulation (source, html)
satterthwaite           Satterthwaite (source, html)

Vignettes in package ‘mockery’:

mocks-and-testthat      Mocks: Integrating with testthat (source, html)

Vignettes in package ‘mockr’:

mockr                   Mocking with mockr (source, html)

Vignettes in package ‘modelbased’:

overview_of_vignettes   Overview of Vignettes (source, html)

Vignettes in package ‘mosaic’:

MinimalRgg              Minimal R (ggformula version) (source, pdf)
mosaic-resources        Resources Related to the mosaic Package
                        (source, html)
Resampling              Simulation-based inference with mosaic (source,
                        html)

Vignettes in package ‘msm’:

msm-manual              User guide to msm with worked examples (source,
                        pdf)

Vignettes in package ‘mstate’:

Tutorial                Using mstate for the analyses of Putter et al.
                        (Stat Med 2007) (source, pdf)
visuals_demo            Visualising multi-state models using mstate
                        (source, html)

Vignettes in package ‘multcomp’:

multcomp-examples       Additional Examples (source, pdf)
generalsiminf           Simultaneous Inference in General Parametric
                        Models (source, pdf)
chfls1                  Supplementary Material for "A re-evaluation of
                        the model selection procedure in Pollet \&
                        Nettle (2009)" (source, pdf)

Vignettes in package ‘multgee’:

multgee_vignette        GEE for Multinomial Responses (source, pdf)

Vignettes in package ‘mvinfluence’:

uni-vs-multi            Univariate versus Multivariate Influence
                        (source, html)

Vignettes in package ‘mvnfast’:

mvnfast                 mvnfast_vignette (source, html)

Vignettes in package ‘mvtnorm’:

lmvnorm_src             Multivariate Normal Log-likelihoods (source,
                        pdf)
MVT_Rnews               Using mvtnorm (source, pdf)

Vignettes in package ‘naivebayes’:

intro_naivebayes        An Introduction to Naivebayes (source, pdf)

Vignettes in package ‘nanonext’:

nanonext                nanonext - NNG Lightweight Messaging Library
                        (source, html)

Vignettes in package ‘nanotime’:

nanotime-introduction   Introduction to nanotime (source, pdf)

Vignettes in package ‘ncdfgeom’:

ncdfgeom                NetCDF-CF Geometry and Timeseries Tools for R
                        (source, html)
geometry                Reading and Writing NetCDF-CF Geometry (source,
                        html)
timeseries              Reading and Writing Timeseries (source, html)

Vignettes in package ‘neighbr’:

neighbr-help            Neighbr Help (source, html)

Vignettes in package ‘nestedLogit’:

nestedLogit             Nested-dichotomies logistic regression models
                        (source, html)
plotting-ggplot         Plotting nestedLogit models with ggplot2
                        (source, html)
standard-errors         Standard Errors of Fitted Category
                        Probabilities by the Delta Method for the
                        Nested Logit Model (source, html)

Vignettes in package ‘nestedmodels’:

nestedmodels            Getting started with nestedmodels (source,
                        html)
nestedmodels-limitations
                        Nestedmodels Limitations (source, html)

Vignettes in package ‘netmeta’:

netmeta                 netmeta: An R package for Network Meta-Analysis
                        using Frequentist Methods (source, pdf)

Vignettes in package ‘netrankr’:

neighborhood_inclusion
                        01 neighborhood-inclusion and centrality
                        (source, html)
threshold_graph         02 uniquely ranked graphs (source, html)
positional_dominance    03 positional dominance in networks (source,
                        html)
indirect_relations      04 indirect relations in networks (source,
                        html)
centrality_indices      05 centrality indices (source, html)
partial_centrality      06 partial centrality (source, html)
probabilistic_cent      07 probabilistic centrality (source, html)
use_case                08 use case (source, html)
benchmarks              09 benchmarks (source, html)

Vignettes in package ‘network’:

networkVignette         network Vignette (source, pdf)

Vignettes in package ‘nloptr’:

nloptr                  nloptr (source, html)

Vignettes in package ‘nonnest2’:

nonnest2                Getting Started with nonnest2 (source, pdf)

Vignettes in package ‘np’:

entropy_np              Entropy-based Inference Using the np Package
                        (source, pdf)
np_faq                  Frequently Asked Questions (np) (source, pdf)
np                      The np Package (source, pdf)

Vignettes in package ‘nullabor’:

nullabor                An Introduction to the nullabor package
                        (source, html)
distances               Distances between null and data plots (source,
                        html)
nullabor-examples       Example lineups in nullabor (source, html)

Vignettes in package ‘numDeriv’:

Guide                   numDeriv Guide (source, pdf)

Vignettes in package ‘oaqc’:

oaqc                    oaqc (source, html)

Vignettes in package ‘odbc’:

benchmarks              Benchmarks (source, html)
develop                 Developing odbc (source, html)
setup                   Installing and Configuring Drivers (source,
                        html)

Vignettes in package ‘officedown’:

overview                Using officedown (source, html)

Vignettes in package ‘oompaBase’:

oompa                   OOMPA (source, pdf)

Vignettes in package ‘openssl’:

crypto_hashing          Cryptographic Hashing in R (source, html)
bignum                  Fun with bignum: how RSA encryption works
                        (source, html)
secure_rng              Generating Secure Random Numbers in R (source,
                        html)
keys                    Importing and exporting RSA/DSA/EC keys
                        (source, html)

Vignettes in package ‘openxlsx’:

Formatting              Formating with xlsx (source, html)
Introduction            Introduction (source, html)

Vignettes in package ‘openxlsx2’:

openxlsx2_charts_manual
                        Add charts to a workbook (source, html)
conditional-formatting
                        Add conditional formatting to a workbook
                        (source, html)
openxlsx2_formulas_manual
                        Add formulas to a workbook (source, html)
openxlsx2_style_manual
                        Add styling to a workbook (source, html)
Update-from-openxlsx    Upgrade from openxlsx (source, html)
openxlsx2               openxlsx2 basic manual (source, html)

Vignettes in package ‘optimParallel’:

optimParallel           A Parallel Version of the L-BFGS-B Optimization
                        Method (source, pdf)

Vignettes in package ‘optimx’:

ExplainGradMinR         Explaining Gradient Minimizers in R (source,
                        pdf)
Intro-to-optimx         Intro to optimx (source, pdf)
Rvmmin                  Rvmmin - an R implementation of the
                        Fletcher(1970) variable metric method with
                        bounds and masks (source, pdf)
SNewton                 SNewton: safeguarded Newton methods for
                        function minimization (source, pdf)
Extend-optimx           Using and extending the optimx package (source,
                        pdf)

Vignettes in package ‘optmatch’:

fullmatch-vignette      Matching with Optmatch (source, html)
matching-within-subgroups
                        Matching within subgroups (source, html)
matching-from-foreign-software
                        Using Optmatch with Foreign Software (source,
                        html)

Vignettes in package ‘ordinal’:

clm_article             Cumulative Link Models for Ordinal Regression
                        (source, pdf)
clmm2_tutorial          clmm2 tutorial (source, pdf)

Vignettes in package ‘osmdata’:

osmdata                 1. osmdata (source, html)
osmdata-sc              2. osmdata_sc (source, html)
osm-sf-translation      3. OSM to Simple Features (source, html)
query-split             4. query-split (source, html)

Vignettes in package ‘ozmaps’:

ozmaps                  ozmaps (source, html)

Vignettes in package ‘palr’:

palr                    Colour palettes (source, html)
nasa_chla               NASA ocean colour (source, html)

Vignettes in package ‘pals’:

bivariate_choropleths   Bivariate choropleth maps (source, html)
pals_examples           Overview of the 'pals' package (source, html)

Vignettes in package ‘pan’:

pan-tr                  Imputation of missing covariates under a
                        multivariate linear mixed model (source, pdf)

Vignettes in package ‘pander’:

evals                   Capturing evaluation information with evals
                        (source, html)
pander                  Rendering markdown with pander (source, html)
pandoc_table            Rendering tables with pandoc.table (source,
                        html)
knitr                   Using pander with knitr (source, html)

Vignettes in package ‘panelr’:

wbm                     Introduction to the `panelr` package (source,
                        html)
reshape                 Reshaping panel data with `long_panel()` and
                        `widen_panel()` (source, html)

Vignettes in package ‘parallel’:

parallel                Package 'parallel' (source, pdf)

Vignettes in package ‘parameters’:

overview_of_vignettes   Overview of Vignettes (source, html)

Vignettes in package ‘parsnip’:

parsnip                 Introduction to parsnip (source, html)

Vignettes in package ‘partitions’:

partitionspaper         Additive Integer Partitions (source, pdf)
setpartitions           Set partitions in R (source, pdf)
scrabble                Urn sampling without replacement (source, pdf)

Vignettes in package ‘party’:

MOB                     party with the mob (source, pdf)
party                   party: A Laboratory for Recursive Partytioning
                        (source, pdf)

Vignettes in package ‘partykit’:

constparty              Constant Partying: Growing and Handling Trees
                        with Constant Fits (source, pdf)
mob                     Parties, Models, Mobsters: A New Implementation
                        of Model-Based Recursive Partitioning in R
                        (source, pdf)
ctree                   ctree: Conditional Inference Trees (source,
                        pdf)
partykit                partykit: A Toolkit for Recursive Partytioning
                        (source, pdf)

Vignettes in package ‘patchwork’:

patchwork               Getting Started (source, html)

Vignettes in package ‘pbkrtest’:

a01-pbkrtest            01 - Introduction to 'pbkrtest' (source, html)
a02-coercion            02 - Coercion between model objects and
                        restriction matrices in 'pbkrtest' (source,
                        html)

Vignettes in package ‘pcaPP’:

matlab                  Compiling pcaPP for Matlab (source, pdf)

Vignettes in package ‘pcse’:

pcse                    Implementing Panel-Corrected Standard Errors in
                        R: The pcse Package (source, pdf)

Vignettes in package ‘pdp’:

pdp-approximate         pdp-approximate (source, pdf)
pdp-intro               pdp-introduction (source, pdf)
pdp-link-function       pdp-link-function (source, pdf)

Vignettes in package ‘penalized’:

penalized               Penalized user guide (source, pdf)

Vignettes in package ‘permute’:

permutations            Restricted permutations; using the permute
                        package (source, html)

Vignettes in package ‘pez’:

pez-intro               pez-intro (source, pdf)
pez-pglmm-overview      pez-pglmm-overview (source, pdf)

Vignettes in package ‘phangorn’:

Ancestral               Ancestral Sequence Reconstruction (source,
                        html)
Trees                   Estimating phylogenetic trees with phangorn
                        (source, html)
IntertwiningTreesAndNetworks
                        Intertwining phylogenetic trees and networks: R
                        Example Script (source, html)
AdvancedFeatures        Markov models and transition rate matrices
                        (source, html)
MLbyHand                Maximum likelihood by hand (source, html)
Morphological           Phylogenetic trees from morphological data
                        (source, html)
Networx                 Splits and Networx (source, html)

Vignettes in package ‘philentropy’:

Many_Distances          Comparing many probability density functions
                        (source, html)
Distances               Distances (source, html)
Information_Theory      Information Theory (source, html)
Introduction            Introduction (source, html)

Vignettes in package ‘phyr’:

benchmarks              Performance benchmark (source, html)
plot-re                 Plot random terms of communityPGLMM (source,
                        html)
pglmm                   Usage of pglmm() (source, html)

Vignettes in package ‘picante’:

picante-intro           Data and analysis in picante (source, pdf)

Vignettes in package ‘piecewiseSEM’:

piecewiseSEM            piecewiseSEM (source, html)

Vignettes in package ‘pillar’:

digits                  Comparison with data frames (source, html)
numbers                 Controlling display of numbers (source, html)
extending               Custom formatting (source, html)
printing                Printing a tibble: Control and data flow
                        (source, html)
debugme                 Printing a tibble: Tracking control flow
                        (source, html)

Vignettes in package ‘pimeta’:

pimeta                  Introduction to the `pimeta` package (source,
                        html)

Vignettes in package ‘pinp’:

pinp                    Introduction to pinp (source, pdf)

Vignettes in package ‘pixarfilms’:

pixar_film_ratings      pixar_film_ratings (source, html)

Vignettes in package ‘pkgdown’:

linking                 Auto-linking (source, html)
customise               Customise your site (source, html)
how-to-update-released-site
                        How to update a released site (source, html)
pkgdown                 Introduction to pkgdown (source, html)
metadata                Metadata (source, html)
search                  Search (source, html)

Vignettes in package ‘plink’:

plink-UD                plink: An R Package for Linking Mixed-Format
                        Tests Using IRT-Based Methods (source, pdf)

Vignettes in package ‘plm’:

B_plmFunction           Estimation of error components models with the
                        plm function (source, html)
C_plmModelComponents    Model components for fitted models with plm
                        (source, html)
A_plmPackage            Panel data econometrics in R: the plm package
                        (source, html)

Vignettes in package ‘plot3D’:

volcano                 Fifty ways to draw a volcano (source, pdf)
plot3D                  plot3D: functions for plotting 3-D and 2-D data
                        (source, pdf)

Vignettes in package ‘plotMCMC’:

gallery                 Gallery (source, pdf)

Vignettes in package ‘pls’:

pls-manual              Intruction to the pls Package (source, pdf)

Vignettes in package ‘pmml’:

xform_function          Introduction to xform_function (source, html)
packages_and_functions
                        Supported Packages and Additional Functions
                        (source, html)

Vignettes in package ‘polynom’:

polynomials             Univariate Polynomial Manipulation (source,
                        html)

Vignettes in package ‘pool’:

why-pool                Why pool? (source, html)

Vignettes in package ‘poorman’:

faq                     poorman: faq (source, html)

Vignettes in package ‘popEpi’:

sir                     Standardised incidence and mortality ratios
                        (source, html)
survtab_examples        survtab examples (source, html)

Vignettes in package ‘posterior’:

posterior               The posterior R package (source, html)
rvar                    rvar: The Random Variable Datatype (source,
                        html)

Vignettes in package ‘prettydoc’:

architect               Creating Pretty Documents from R Markdown - The
                        Architect Theme (source, html)
cayman                  Creating Pretty Documents from R Markdown - The
                        Cayman Theme (source, html)
hpstr                   Creating Pretty Documents from R Markdown - The
                        HPSTR Theme (source, html)
leonids                 Creating Pretty Documents from R Markdown - The
                        Leonids Theme (source, html)
tactile                 Creating Pretty Documents from R Markdown - The
                        Tactile Theme (source, html)

Vignettes in package ‘probably’:

equivocal-zones         Equivocal zones (source, html)
where-to-use            Where does probably fit in? (source, html)

Vignettes in package ‘profmem’:

profmem                 Simple Memory Profiling for R (source, html)

Vignettes in package ‘progressr’:

progressr-intro         progressr: An Introduction (source, html)

Vignettes in package ‘projpred’:

latent                  Latent projection predictive feature selection
                        (source, html)
projpred                projpred: Projection predictive feature
                        selection (source, html)

Vignettes in package ‘promises’:

promises_05_future_promise
                        Advanced future and promises usage (source,
                        html)
promises_02_intro       An informal introduction to async programming
                        (source, html)
promises_08_casestudy   Case study: converting a Shiny app to async
                        (source, html)
promises_07_combining   Combining promises (source, html)
promises_04_futures     Launching tasks with future (source, html)
promises_06_shiny       Using promises with Shiny (source, html)
promises_01_motivation
                        Why use promises? (source, html)
promises_03_overview    Working with promises in R (source, html)

Vignettes in package ‘proto’:

proto                   proto: An R Package for Prototype Programming
                        (source, pdf)
protoref                protoref: proto Reference Card (source, pdf)

Vignettes in package ‘proxy’:

overview                Proximity measures in the proxy package for R
                        (source, pdf)

Vignettes in package ‘pscl’:

countreg                Regression Models for Count Data in R (source,
                        pdf)

Vignettes in package ‘psych’:

scoring                 Scoring scales with psych (source, pdf)

Vignettes in package ‘psychTools’:

omega                   How to find Omega (source, pdf)
intro                   Introduction to the psych package (source, pdf)
mediation               Overview of the psych package (source, pdf)
overview                Overview of the psych package for psychometrics
                        (source, pdf)

Vignettes in package ‘psychotools’:

toolbox-simulation      Using psychotools for Evaluating the
                        Performance of Score-Based Measurement
                        Invariance Tests in IRT Models (source, pdf)

Vignettes in package ‘psychotree’:

raschtree               Using the raschtree Function for Detecting
                        Differential Item Functioning in the Rasch
                        Model (source, pdf)

Vignettes in package ‘purrr’:

other-langs             Functional programming in other languages
                        (source, html)
base                    purrr <-> base R (source, html)

Vignettes in package ‘pwr’:

pwr-vignette            Getting started with the pwr package (source,
                        html)

Vignettes in package ‘pzfx’:

pzfx                    Reading Prism GraphPad files into R (source,
                        html)

Vignettes in package ‘qgam’:

qgam                    quantile_mgcViz (source, html)

Vignettes in package ‘qicharts’:

controlcharts           controlharts (source, html)
runcharts               runcharts (source, html)

Vignettes in package ‘qqplotr’:

introduction            An Introduction to qqplotr (source, html)

Vignettes in package ‘qs’:

vignette                Using qs (source, html)

Vignettes in package ‘qtl’:

bcsft                   Users Guide for New BCsFt Tools for R/qtl
                        (source, pdf)

Vignettes in package ‘quanteda’:

quickstart              Quick Start Guide (source, html)

Vignettes in package ‘quantreg’:

crq                     quantreg: crq (source, pdf)
rq                      quantreg: rq (source, pdf)

Vignettes in package ‘quarto’:

publishing              Publishing (source, html)
hello                   Quarto HTML Vignettes (source, html)
hello-pdf               Quarto PDF Vignettes (source, pdf)

Vignettes in package ‘questionr’:

recoding_addins         Recoding addins (source, html)

Vignettes in package ‘r2d3’:

advanced_rendering      Advanced Rendering with Callbacks (source,
                        html)
dependencies            CSS & JavaScript Dependencies (source, html)
visualization_options   D3 Visualization Options (source, html)
learning_d3             Learning D3 (source, html)
package_development     Package Development (source, html)
data_conversion         R to D3 Data Conversion (source, html)

Vignettes in package ‘r2rtf’:

r2rtf-cran              An Introduction to the r2rtf Package (source,
                        html)

Vignettes in package ‘randomizr’:

randomizr_vignette      Design and Analysis of Experiments with
                        randomizr (source, html)

Vignettes in package ‘randtoolbox’:

fullpres                A note on random number generation (source,
                        pdf)
shortintro              Quick introduction of randtoolbox (source, pdf)

Vignettes in package ‘rattle’:

rattle                  Rattle Quick Start Guide (source, pdf)

Vignettes in package ‘rcdd’:

vinny                   Using RCDD (source, pdf)

Vignettes in package ‘rdhs’:

anemia                  Anemia prevalence among women: an `rdhs`
                        example (source, html)
country_codes           Country Codes (source, html)
boundaries              Downloading shape files for DHS surveys
                        (source, html)
introduction            How to use rdhs? (source, html)
geojson                 Interacting with geojson API results (source,
                        html)
testing                 Testing (source, html)
toolkit                 Toolkit (source, html)
client                  Using the rdhs client (source, html)

Vignettes in package ‘reactR’:

intro_reactR            Intro to reactR (source, html)
intro_inputs            Shiny inputs with reactR (source, html)
intro_htmlwidgets       htmlwidgets with reactR (source, html)

Vignettes in package ‘reactlog’:

reactlog                Shiny Reactlog (source, html)

Vignettes in package ‘readODS’:

overview                An Overview of readODS (source, html)

Vignettes in package ‘readr’:

column-types            Column type (source, html)
readr                   Introduction to readr (source, html)
locales                 Locales (source, html)

Vignettes in package ‘readxl’:

cell-and-column-types   Cell and Column Types (source, html)
sheet-geometry          Sheet Geometry (source, html)

Vignettes in package ‘recipes’:

Dummies                 Handling categorical predictors (source, html)
recipes                 Introduction to recipes (source, html)
Skipping                On skipping steps (source, html)
Ordering                Ordering of steps (source, html)
Roles                   Roles in recipes (source, html)
Selecting_Variables     Selecting variables (source, html)

Vignettes in package ‘redland’:

redland_overview        redland RDF (source, html)

Vignettes in package ‘relations’:

relations               Relations (source, pdf)

Vignettes in package ‘remotes’:

dependencies            Dependency resolution for R package development
                        (source, html)

Vignettes in package ‘rempsyc’:

randomize               Easy randomization in R (source, html)
circles                 Interpolating the Inclusion of the Other in the
                        Self Scale (source, html)
contrasts               Planned Contrasts Analyses (Group Comparisons)
                        (source, html)
table                   Publication-ready APA tables: from R to Word in
                        2 min (source, html)
moderation              Publication-ready moderations with simple
                        slopes in R (source, html)
scatter                 Publication-ready scatter plots in R (source,
                        html)
t-test                  Publication-ready t-tests in R (source, html)
violin                  Publication-ready violin plots in R (source,
                        html)
assumptions             Quickly test linear regression assumptions
                        (source, html)

Vignettes in package ‘renv’:

faq                     Frequently asked questions (source, html)
package-install         Installing packages (source, html)
renv                    Introduction to renv (source, html)
packages                Package development (source, html)
package-sources         Package sources (source, html)
profiles                Project profiles (source, html)
python                  Using Python with renv (source, html)
docker                  Using renv with Docker (source, html)
rsconnect               Using renv with Posit Connect (source, html)
ci                      Using renv with continuous integration (source,
                        html)
packrat                 packrat vs. renv (source, html)

Vignettes in package ‘report’:

report                  Automated Reporting: Getting Started (source,
                        html)
report_table            Publication-ready Tables (source, html)
cite_packages           Report and Cite Packages (source, html)
new_models              Supporting New Models (source, html)

Vignettes in package ‘reprex’:

reprex-dos-and-donts    Reprex do's and don'ts (source, html)

Vignettes in package ‘reticulate’:

arrays                  Arrays in R and Python (source, html)
calling_python          Calling Python from R (source, html)
python_packages         Installing Python Packages (source, html)
python_dependencies     Managing an R Package's Python Dependencies
                        (source, html)
python_primer           Primer on Python for R Users (source, html)
versions                Python Version Configuration (source, html)
r_markdown              R Markdown Python Engine (source, html)
package                 Using reticulate in an R Package (source, html)

Vignettes in package ‘rex’:

log_parsing             Server Log Parsing (source, html)
url_parsing             URL Validation (source, html)

Vignettes in package ‘rgenoud’:

rgenoud                 Using genoud (source, pdf)

Vignettes in package ‘rgl’:

transparency            A Note on Transparency (source, html)
deprecation             Deprecating the `rgl.*` interface (source,
                        html)
WebGL                   User Interaction in WebGL (updated) (source,
                        html)
pkgdown                 Using RGL in pkgdown web sites (source, html)
demos                   rgl Demos (source, html)
rgl                     rgl Overview (source, html)

Vignettes in package ‘rio’:

extension               Extending rio (source, html)
rio                     Introduction to 'rio' (source, html)
philosophy              Package Philosophy (source, html)
remap                   Remapping and Ellipsis (source, html)
labelled                Working with labelled data (source, html)

Vignettes in package ‘riskRegression’:

IPA                     IPA: Index of Prediction Accuracy (source,
                        html)

Vignettes in package ‘rjson’:

json_rpc_server         JSON RPC server for R (source, pdf)

Vignettes in package ‘rmapshaper’:

rmapshaper              rmapshaper Basics (source, html)

Vignettes in package ‘rmarkdown’:

rmarkdown               Learn R Markdown (source, html)
lua-filters             Lua filters in R Markdown (source, html)

Vignettes in package ‘rmcorr’:

repro_bootstrapping     Bootstrapping Example (source, html)
compcor                 Comparing Correlations (source, html)
CI_fix                  Confidence Interval Fix (source, html)
rmcorr_mat              Correlation Matrix using rmcorr_mat (source,
                        html)
model_diag              Diagnostic Plots (source, html)
FAQ_and_limitations     Frequently Asked Questions and Limitations
                        (source, html)
New_rmcorr_paper_analyses_figures
                        Reproduce Paper Results (source, html)
estimates_w_NaN         rmcorr Estimates with NaN (source, html)

Vignettes in package ‘rnaturalearth’:

finding-data            Finding data (source, html)
rnaturalearth           Introduction to rnaturalearth. (source, html)
language-support        Language support in rnaturalearth (source,
                        html)
what-is-a-country       What is a country ? (source, html)

Vignettes in package ‘rnndescent’:

brute-force             Brute Force Search (source, html)
hubness                 Hubness (source, html)
metrics                 Metrics (source, html)
nearest-neighbor-descent
                        Nearest Neighbor Descent (source, html)
querying-data           Querying Data (source, html)
random-partition-forests
                        Random Partition Forests (source, html)
rnndescent              rnndescent (source, html)

Vignettes in package ‘robumeta’:

robumetaVignette        robumeta Vignette (source, pdf)

Vignettes in package ‘robustbase’:

psi_functions           Definitions of Psi-Functions Available in
                        Robustbase (source, pdf)
lmrob_simulation        Simulations for Robust Regression Inference in
                        Small Samples (source, pdf)
fastMcd-kmini           covMcd() -- Generalizing the FastMCD (source,
                        pdf)

Vignettes in package ‘robustlmm’:

simulationStudies       Replication Code For Simulation Studies
                        (source, pdf)
rlmer                   robustlmm: An R Package for Robust Estimation
                        of Linear Mixed-Effects Models (source, pdf)

Vignettes in package ‘robvis’:

Introduction_to_robvis
                        Introduction to robvis (source, html)

Vignettes in package ‘rootSolve’:

rootSolve               roots, gradients and steady-states in R
                        (source, pdf)

Vignettes in package ‘round’:

rationalRound           Exact Decimal Rounding via Rationals (source,
                        html)
Rounding                Rounding to Decimal Digits in Binary (source,
                        html)

Vignettes in package ‘roxygen2’:

rd-formatting           (R)Markdown support (source, html)
rd                      Documenting functions (source, html)
rd-other                Documenting other objects (source, html)
extending               Extending roxygen2 (source, html)
roxygen2                Get started with roxygen2 (source, html)
index-crossref          Indexing and cross-references (source, html)
namespace               Managing imports and exports (source, html)
reuse                   Reusing documentation (source, html)

Vignettes in package ‘rpart’:

longintro               Introduction to Rpart (source, pdf)
usercode                User Written Split Functions (source, pdf)

Vignettes in package ‘rpf’:

flexmirt-plots          Basic 1 dimensional plots (HTML) (source, html)
customitem              Custom Item Models (HTML) (source, html)
diagnostics             Item Factor Analysis diagnostics (HTML)
                        (source, html)

Vignettes in package ‘rprojroot’:

rprojroot               Finding files in project subdirectories
                        (source, html)

Vignettes in package ‘rrcov’:

rrcov                   An Object-Oriented Framework for Robust
                        Multivariate Analysis (source, pdf)

Vignettes in package ‘rsae’:

rsae                    Robust Estimation and Prediction Under the
                        Unit-Level SAE Model (source, html)

Vignettes in package ‘rsample’:

Common_Patterns         Common Resampling Patterns (source, html)
rsample                 Introduction to rsample (source, html)
Working_with_rsets      Working with resampling sets (source, html)

Vignettes in package ‘rsconnect’:

custom-http             Customising HTTP requests (source, html)

Vignettes in package ‘rsm’:

rs-illus                Response-Surface Illustration (source, pdf)
rsm                     Response-Surface Methods in R, Using rsm
                        (source, pdf)
rsm-plots               Surface Plots in the rsm Package (source, pdf)

Vignettes in package ‘rstan’:

external                Interfacing with External C++ Code (source,
                        html)
rstan                   RStan (source, html)
SBC                     Simulation Based Calibration (source, html)
stanfit-objects         stanfit objects (source, html)

Vignettes in package ‘rstanarm’:

pooling                 Hierarchical Partial Pooling (source, html)
rstanarm                How to Use the rstanarm Package (source, html)
mrp                     MRP with rstanarm (source, html)
priors                  Prior Distributions (source, html)
ab-testing              Probabilistic A/B Testing with rstanarm
                        (source, html)
aov                     stan_aov: ANOVA Models (source, html)
betareg                 stan_betareg: Models for Rate/Proportion Data
                        (source, html)
binomial                stan_glm: GLMs for Binary and Binomial Data
                        (source, html)
continuous              stan_glm: GLMs for Continuous Data (source,
                        html)
count                   stan_glm: GLMs for Count Data (source, html)
glmer                   stan_glmer: GLMs with Group-Specific Terms
                        (source, html)
jm                      stan_jm: Joint Models for Longitudinal and
                        Time-to-Event Data (source, html)
lm                      stan_lm: Regularized Linear Models (source,
                        html)
polr                    stan_polr: Ordinal Models (source, html)

Vignettes in package ‘rstantools’:

developer-guidelines    Guidelines for Developers of R Packages
                        Interfacing with Stan (source, html)
minimal-rstan-package   Step by step guide (source, html)

Vignettes in package ‘rstudioapi’:

document-manipulation   Document Manipulation (source, html)
dialogs                 File Dialogs (source, html)
r-session               Interact with the R Session (source, html)
projects                Interacting with RStudio Projects (source,
                        html)
terminal                Interacting with Terminals (source, html)
visual-mode             Interfacing with RStudio in Visual Mode
                        (source, html)
introduction            Introduction to rstudioapi (source, html)

Vignettes in package ‘rsvg’:

svg-css                 Rendering SVG with CSS in R (source, html)

Vignettes in package ‘rtdists’:

reanalysis_rr98         Reanalysis of Ratcliff and Rouder (1998) with
                        Diffusion Model and LBA (source, html)

Vignettes in package ‘rucrdtw’:

using_rucrdtw           Using rucrdtw (source, html)

Vignettes in package ‘rugarch’:

Introduction_to_the_rugarch_package
                        Introduction to the rugarch package (source,
                        pdf)

Vignettes in package ‘runjags’:

quickjags               A quick-start guide to running models in JAGS
                        (source, html)
UserGuide               Using the runjags package (source, pdf)

Vignettes in package ‘rvest’:

starwars                Star Wars films (source, html)
rvest                   Web scraping 101 (source, html)

Vignettes in package ‘sae’:

sae_basicdirect         Basic direct and indirect estimators (source,
                        pdf)
sae_methodology         Methodology (source, pdf)

Vignettes in package ‘sampleSelection’:

intReg                  Interval Regression with Sample Selection
                        (source, pdf)
selection               Sample Selection Models (source, pdf)
treatReg                Using treatReg (source, pdf)

Vignettes in package ‘sandwich’:

sandwich                Econometric Computing with HC and HAC
                        Covariance Matrix Estimators (source, pdf)
sandwich-OOP            Object-Oriented Computation of Sandwich
                        Estimators (source, pdf)
sandwich-CL             Various Versatile Variances: An Object-Oriented
                        Implementation of Clustered Covariances in R
                        (source, pdf)

Vignettes in package ‘sasr’:

introduction            Introduction to `sasr` (source, html)

Vignettes in package ‘sass’:

sass                    Overview of the sass R package (source, html)

Vignettes in package ‘scatterplot3d’:

s3d                     Scatterplot3d - an R Package for Visualizing
                        Multivariate Data (source, pdf)

Vignettes in package ‘scdhlm’:

Estimating-effect-sizes
                        "Estimating design-comparable standardized mean
                        differences with scdhlm" (source, html)

Vignettes in package ‘sdmTMB’:

model-description       sdmTMB model description (source, html)

Vignettes in package ‘seasonal’:

multiple                Adjusting Multiple Series (source, html)
seas                    Seasonal Adjustment by X-13ARIMA-SEATS (source,
                        pdf)

Vignettes in package ‘semEff’:

predicting-effects      Predicting Effects (source, html)
semEff                  semEff (source, html)

Vignettes in package ‘semTools’:

partialInvariance       Partial Invariance (source, pdf)

Vignettes in package ‘seriation’:

seriation               An Introduction to the R package seriation
                        (source, pdf)

Vignettes in package ‘setRNG’:

setRNG                  setRNG Guide (source, pdf)

Vignettes in package ‘sets’:

sets                    Generalized and Customizable Sets in R (source,
                        pdf)

Vignettes in package ‘sf’:

sf1                     1. Simple Features for R (source, html)
sf2                     2. Reading, Writing and Converting Simple
                        Features (source, html)
sf3                     3. Manipulating Simple Feature Geometries
                        (source, html)
sf4                     4. Manipulating Simple Features (source, html)
sf5                     5. Plotting Simple Features (source, html)
sf6                     6. Miscellaneous (source, html)
sf7                     7. Spherical geometry in sf using s2geometry
                        (source, html)

Vignettes in package ‘sfnetworks’:

sfn01_structure         1. The sfnetwork data structure (source, html)
sfn02_preprocess_clean
                        2. Network pre-processing and cleaning (source,
                        html)
sfn03_join_filter       3. Spatial joins and filters (source, html)
sfn04_routing           4. Routing (source, html)
sfn05_morphers          5. Spatial morphers (source, html)

Vignettes in package ‘sftime’:

sftime                  Introduction to sftime (source, html)

Vignettes in package ‘shape’:

shape                   shape: functions for plotting graphical shapes
                        (source, pdf)

Vignettes in package ‘shapviz’:

geographic              Geographic Components (source, html)
multiple_output         Multiple 'shapviz' objects (source, html)
basic_use               Using 'shapviz' (source, html)

Vignettes in package ‘shinybusy’:

shinybusy               shinybusy-usage (source, html)
spinners                spinners (source, html)

Vignettes in package ‘shinydashboardPlus’:

box-elements            Box Elements (source, html)
css-preloader           CSS preloaders (source, html)
enhanced-header         Enhanced Header Elements (source, html)
extra-elements          Extra Elements (source, html)
controlbar              Extra Skeleton Elements (source, html)
more-skins              Improved Skins (source, html)
improved-boxes          Improved boxes (source, html)
shinydashboardPlus      shinydashboardPlus (source, html)

Vignettes in package ‘shinyjqui’:

introduction            Introduction to shinyjqui (source, html)
save-and-restore        Save and restore (source, html)
orderInput              The orderInput (source, html)

Vignettes in package ‘shinyjs’:

shinyjs-usage           Including shinyjs in different types of apps
                        (source, html)
shinyjs                 Package shinyjs (source, html)
shinyjs-extend          extendShinyjs - Calling your own JavaScript
                        functions from R (source, html)
shinyjs-example         shinyjs example app walk-through (source, html)

Vignettes in package ‘shinystan’:

shinystan-package       Getting Started (source, html)
deploy_shinystan        ShinyStan: Deploying to shinyapps.io (source,
                        html)

Vignettes in package ‘shinytest2’:

use-application-audit   Auditing Shiny apps (source, html)
zzz-faq                 Frequently Asked Questions (source, html)
shinytest2              Getting started with shinytest2 (source, html)
z-migration             Migrating from shinytest (source, html)
using-monkey-testing    Monkey testing (source, html)
robust                  Robust testing (source, html)
in-depth                Testing in depth (source, html)
use-package             Using shinytest2 with R packages (source, html)
use-ci                  Using shinytest2 with continuous integration
                        (source, html)

Vignettes in package ‘showtext’:

introduction            showtext: Using Fonts More Easily in R Graphs
                        (source, html)

Vignettes in package ‘simplermarkdown’:

intro                   Introduction to simplermarkdown (source, html)

Vignettes in package ‘sjPlot’:

blackwhitefigures       Black & White Figures for Print Journals
                        (source, html)
custplot                Customize Plot Appearance (source, html)
table_css               Customizing HTML tables (source, html)
sjtitemanalysis         Item Analysis of a Scale or an Index (source,
                        html)
plot_model_estimates    Plotting Estimates (Fixed Effects) of
                        Regression Models (source, html)
plot_interactions       Plotting Interaction Effects of Regression
                        Models (source, html)
plot_likert_scales      Plotting Likert Scales (source, html)
plot_marginal_effects   Plotting Marginal Effects of Regression Models
                        (source, html)
tab_model_robust        Robust Estimation of Standard Errors (source,
                        html)
tab_bayes               Summary of Bayesian Models as HTML Table
                        (source, html)
tab_mixed               Summary of Mixed Models as HTML Table (source,
                        html)
tab_model_estimates     Summary of Regression Models as HTML Table
                        (source, html)

Vignettes in package ‘sjlabelled’:

intro_sjlabelled        Labelled Data and the sjlabelled-Package
                        (source, html)
quasiquotation          Using quasiquotation to add variable and value
                        labels (source, html)
labelleddata            Working with Labelled Data (source, html)

Vignettes in package ‘sjmisc’:

exploringdatasets       Exploring Data Sets (source, html)
recodingvariables       Recoding Variables (source, html)
design_philosophy       The Design Philosophy of Functions in sjmisc
                        (source, html)

Vignettes in package ‘skellam’:

skellam                 The Skellam Distribution (source, pdf)

Vignettes in package ‘skimr’:

extending_skimr         Extending skimr (source, html)
Skimr_defaults          Skimr defaults (source, html)
Using_fonts             Using Fonts (source, html)
skimr                   Using Skimr (source, html)

Vignettes in package ‘slackr’:

scoped-bot-setup        Multi-Functional Bot Setup (source, html)
using-slackr            Onexit Usage in slackr (source, html)
webhook-setup           Webhook Bot Setup (source, html)

Vignettes in package ‘slider’:

tsibble                 Converting from tsibble (source, html)
slider                  Getting started with slider (source, html)
rowwise                 Row-wise iteration with slider (source, html)

Vignettes in package ‘smacof’:

mdsnutshell             MDS in a Nutshell (source, html)
smacof                  SMACOF2 Package Vignette (source, pdf)
unfoldingnutshell       Unfolding in a Nutshell (source, html)

Vignettes in package ‘smcfcs’:

smcfcs-vignette         smcfcs (source, html)
smcfcs_coverror-vignette
                        smcfcs_measerror (source, html)

Vignettes in package ‘smd’:

smd_usage               Using smd (source, html)

Vignettes in package ‘sn’:

pkg-overview            A brief overview of the package 'sn' (source,
                        html)
pkg_sn-intro            An introduction to the package 'sn' (source,
                        pdf)
how_to_sample           How to sample from the SN and related
                        distributions (source, pdf)

Vignettes in package ‘snakecase’:

caseconverters          Caseconverters (source, html)
introducing-the-snakecase-package
                        Introducing the snakecase package (source,
                        html)

Vignettes in package ‘snowfall’:

snowfall                An R Package for easier cluster programming
                        based on snow (source, pdf)

Vignettes in package ‘sodium’:

crypto101               How does cryptography work (source, html)
intro                   Introduction to Sodium for R (source, html)

Vignettes in package ‘sommer’:

v4.sommer.gxe           GxE models in sommer (source, pdf)
v2.sommer.changes.and.faqs
                        Moving to newer versions of sommer (source,
                        pdf)
v3.sommer.qg            Quantitative genetics using the sommer package
                        (source, pdf)
v1.sommer.quick.start   Quick start for the sommer package (source,
                        pdf)
v6.sommer.spatial       Spatial modeling using the sommer package
                        (source, pdf)
v5.sommer.vs.lme4       translate lme4 to sommer (source, pdf)

Vignettes in package ‘sp’:

csdacm                  Customising spatial data classes and methods
                        (source, pdf)
CRS_warnings            Testing packages using CRS objects (source,
                        html)
retiring_rgdal_geos_1   sp evolution status: examples of migration from
                        retiring packages (source, html)
intro_sp                sp: classes and methods for spatial data
                        (source, pdf)

Vignettes in package ‘spacetime’:

stpg                    Spatio-temporal objects to proxy a PostgreSQL
                        table (source, pdf)
sto                     Spatio-temporal overlay and aggregation
                        (source, pdf)
stsubs                  Subsetting of spacetime objects (source, pdf)
jss816                  spacetime: Spatio-Temporal Data in R (source,
                        pdf)

Vignettes in package ‘spam’:

jss15                   JSS - Areal count data (source, pdf)
spam                    `spam`, a SPArse Matrix package (source, pdf)

Vignettes in package ‘sparkline’:

intro_sparkline         Introduction to Sparkline (source, html)

Vignettes in package ‘spatialreg’:

sids_models             Introduction to the North Carolina SIDS data
                        set (re-revised) (source, html)
SpatialFiltering        Moran Eigenvectors (source, html)
nb_igraph               Spatial weights objects as sparse matrices and
                        graphs (source, html)

Vignettes in package ‘spatialwidget’:

spatialwidget           spatialwidget (source, html)

Vignettes in package ‘spatstat’:

replicated              Analysing Replicated Point Patterns in Spatstat
                        (source, pdf)
bugfixes                Bugs Fixed in Spatstat (source, pdf)
datasets                Datasets Provided for the Spatstat Package
                        (source, pdf)
getstart                Getting Started with Spatstat (source, pdf)
fv                      Guide to Function Objects in Spatstat (source,
                        pdf)
shapefiles              Handling shapefiles in the spatstat package
                        (source, pdf)
updates                 Summary of Recent Updates to the Spatstat
                        Family (source, pdf)

Vignettes in package ‘spdep’:

CO69                    "The Problem of Spatial Autocorrelation:” forty
                        years on (source, html)
nb                      Creating Neighbours (source, html)
nb_sf                   Creating Neighbours using sf objects (source,
                        html)
sids                    Introduction to the North Carolina SIDS data
                        set (re-revised) (source, html)

Vignettes in package ‘splines2’:

splines2-intro          A Short Introduction to splines2 (source, html)
splines2-wi-rcpp        Using splines2 with Rcpp (source, html)

Vignettes in package ‘spls’:

spls-example            Sparse PLS (source, pdf)

Vignettes in package ‘stablelearner’:

forests                 Variable Selection and Cutpoint Analysis of
                        Random Forests (source, html)

Vignettes in package ‘stabs’:

Using_stabs             Stability selection - Using stabs (source,
                        html)

Vignettes in package ‘stacks’:

classification          Classification Models With stacks (source,
                        html)
basics                  Getting Started With stacks (source, html)

Vignettes in package ‘stargazer’:

stargazer               stargazer (source, pdf)

Vignettes in package ‘stars’:

stars1                  1. introduction (source, html)
stars2                  2. stars proxy objects (source, html)
stars3                  3. stars tidyverse methods (source, html)
stars4                  4. stars data model (source, html)
stars5                  5. vector-raster conversions, reprojection,
                        warping (source, html)
stars6                  6. How raster functions map to stars functions
                        (source, html)
stars7                  7. Statistical modelling with stars objects
                        (source, html)
stars8                  8. NetCDF Proxy Workflows (source, html)

Vignettes in package ‘stats’:

reshape                 Using the reshape function (source, pdf)

Vignettes in package ‘stringdist’:

RJournal_6_111-122-2014
                        RJournal 6 111-122 (2014) (source, pdf)
stringdist_C-Cpp_api    stringdist C/C++ API (source, pdf)

Vignettes in package ‘stringfish’:

vignette                stringfish (source, html)

Vignettes in package ‘stringmagic’:

guide_customization     guide_customization (source, html)
ref_operations          operations_reference (source, html)
ref_regex_flags         ref_regex_flags (source, html)
ref_regex_logic         ref_regex_logic (source, html)
ref_string_magic_special_operations
                        ref_string_magic_special_ops (source, html)
guide_string_magic      string_magic_guide (source, html)
guide_string_tools      string_tools (source, html)

Vignettes in package ‘stringr’:

from-base               From base R (source, html)
stringr                 Introduction to stringr (source, html)
regular-expressions     Regular expressions (source, html)

Vignettes in package ‘strucchange’:

strucchange-intro       strucchange: An R Package for Testing for
                        Structural Change in Linear Regression Models
                        (source, pdf)

Vignettes in package ‘styler’:

detect-alignment        Alignment detection (source, html)
caching                 Caching (source, html)
customizing_styler      Customizing styler (source, html)
distribute_custom_style_guides
                        Distribute custom style guides (source, html)
styler                  Get started (source, html)
remove_rules            Remove rules (source, html)
strict                  The effect of `strict = FALSE` (source, html)
third-party-integrations
                        Third-party integrations (source, html)

Vignettes in package ‘subselect’:

subselect               subselect (source, pdf)

Vignettes in package ‘survey’:

survey                  A survey analysis example (source, pdf)
pps                     Analysing PPS designs (source, pdf)
domain                  Estimates in subpopulations (source, pdf)
precalibrated           Pre-calibrated weights (source, pdf)
qrule                   Quantile rules (source, pdf)
survey-sae              Small area estimation (source, html)
epi                     Two-phase designs in epidemiology (source, pdf)

Vignettes in package ‘survival’:

adjcurve                Adjusted Survival Curves (source, pdf)
approximate             Approximating a Cox Model (source, pdf)
redistribute            Brier scores and the redistribute-to-the-right
                        algorithm (source, pdf)
concordance             Concordance (source, pdf)
discrim                 Discrimination and Calibration (source, pdf)
matrix                  Matrix exponentials (source, pdf)
compete                 Multi-state models and competing risks (source,
                        pdf)
multi                   Multi-state survival curves (source, pdf)
other                   Other vignettes (source, pdf)
population              Population contrasts (source, pdf)
tiedtimes               Roundoff error and tied times (source, pdf)
splines                 Splines, plots, and interactions (source, pdf)
survival                The survival package (source, pdf)
timedep                 Using Time Dependent Covariates (source, pdf)
validate                Validation (source, pdf)

Vignettes in package ‘survminer’:

Playing_with_fonts_and_texts
                        Playing with fonts and texts (source, html)
Specifiying_weights_in_log-rank_comparisons
                        Specifiyng weights in Log-rank comparisons
                        (source, html)
Informative_Survival_Plots
                        Survival plots have never been so informative
                        (source, html)
ggforest-show-interactions-hazard-ratio
                        ggforest-show-interactions-hazard-ratio
                        (source, html)

Vignettes in package ‘svGUI’:

svGUI                   svGUI - Manage R GUIs in a central place
                        (source, html)

Vignettes in package ‘svUnit’:

svUnit                  svUnit - A framework for unit testing in R
                        (source, html)

Vignettes in package ‘svglite’:

scaling                 Scaling Issues (source, html)
fonts                   Specifying fonts (source, html)

Vignettes in package ‘sylly’:

sylly_vignette          Using the sylly Package for Hyphenation and
                        Syllable Count (source, html)

Vignettes in package ‘synthpop’:

inference               Inference in synthpop (source, pdf)
synthpop                Using synthpop (source, pdf)
utility                 Utility (source, pdf)

Vignettes in package ‘systemfit’:

systemfit               Systemfit (source, pdf)

Vignettes in package ‘systemfonts’:

c_interface             systemfonts C interface (source, html)

Vignettes in package ‘tableone’:

introduction            Introduction to tableone (source, html)
smd                     Using standardized mean differences (source,
                        html)

Vignettes in package ‘tables’:

tables                  About the tables package (source, pdf)
HTML                    HTML Tables (source, html)
knitrTables             Tables in R Markdown (source, pdf)

Vignettes in package ‘targeted’:

ate                     Average Treatment Effects (source, html)
riskregression          Estimating a relative risk or risk difference
                        with a binary exposure (source, html)
ode                     targeted::ode_solve: Solving Ordinary
                        Differential Equations (source, html)

Vignettes in package ‘targets’:

overview                An overview of targets (source, html)

Vignettes in package ‘tclust’:

tclust                  A Trimming Approach to Cluster Analysis
                        (source, pdf)

Vignettes in package ‘tesseract’:

intro                   Using the Tesseract OCR engine in R (source,
                        html)

Vignettes in package ‘testthat’:

custom-expectation      Custom expectations (source, html)
parallel                Running tests in parallel (source, html)
skipping                Skipping tests (source, html)
snapshotting            Snapshot tests (source, html)
special-files           Special files (source, html)
test-fixtures           Test fixtures (source, html)
third-edition           testthat 3e (source, html)

Vignettes in package ‘texPreview’:

tex_packages            Building usepackage TeX commands (source, html)
tests_and_coverage      Tests and Coverage (source, html)
engine                  Using texPreview Built-in Knitr Engine (source,
                        html)
rmarkdown               Using texPreview in Rmarkdown HTML Documents
                        (source, html)
kable                   Using texPreview to Convert TeX lines to Kable
                        Objects (source, html)
classes                 Using texPreview with other Packages (source,
                        html)
tikz                    Using texPreview with tikz (source, html)

Vignettes in package ‘texreg’:

texreg                  texreg: Conversion of Statistical Model Output
                        in R to LaTeX and HTML tables (source, pdf)

Vignettes in package ‘text2vec’:

text-vectorization      Analyzing Texts with the text2vec Package
                        (source, html)
glove                   GloVe Word Embeddings (source, html)

Vignettes in package ‘textshaping’:

c_interface             textshaping C interface (source, html)

Vignettes in package ‘tfdatasets’:

feature_spec            Feature Spec Interface (source, html)
feature_columns         Feature columns (source, html)
introduction            Introduction (source, html)

Vignettes in package ‘tfestimators’:

creating_estimators     Custom Estimators (source, html)
dataset_api             Dataset API (source, html)
estimator_basics        Estimators Basics (source, html)
feature_columns         Feature Columns (source, html)
input_functions         Input Functions (source, html)
parsing_spec            Parsing Utilities (source, html)
run_hooks               Run Hooks (source, html)
tensorboard             TensorBoard Visualization (source, html)
tensorflow_layers       Using Estimators (source, html)

Vignettes in package ‘tgp’:

tgp                     a guide to the tgp package (source, pdf)
tgp2                    new features in tgp version 2.x (source, pdf)

Vignettes in package ‘tibble’:

formats                 Column formats (source, html)
types                   Column types (source, html)
digits                  Comparing display with data frames (source,
                        html)
numbers                 Controlling display of numbers (source, html)
extending               Extending tibble (source, html)
invariants              Invariants: Comparing behavior with data frames
                        (source, html)
tibble                  Tibbles (source, html)

Vignettes in package ‘tidyLPA’:

benchmarking-mclust-and-mplus
                        Benchmarking mclust and MPlus (source, html)
Introduction_to_tidyLPA
                        Introduction to tidyLPA (source, html)

Vignettes in package ‘tidySEM’:

lca_confirmatory        Confirmatory LPA for the Caregiver Compass
                        (source, html)
lca_exploratory         Exploratory LPA for Ocean Microplastics
                        (source, html)
Generating_syntax       Generating syntax for structural equation
                        models (source, html)
lca_ordinal             Latent Class Analysis for Ordinal Indicators
                        (source, html)
lca_lcga                Latent Class Growth Analysis (source, html)
Plotting_graphs         Plotting graphs for structural equation models
                        (source, html)
sem_graph               SEM graphing conventions (source, html)
SMART_LCA_checklist     SMART-LCA Checklist (source, html)
Tabulating_results      Tabulating results from structural equation
                        models (source, html)

Vignettes in package ‘tidymodels’:

Tags                    Using tags (source, html)

Vignettes in package ‘tidyr’:

in-packages             In packages (source, html)
nest                    Nested data (source, html)
pivot                   Pivoting (source, html)
programming             Programming with tidyr (source, html)
rectangle               Rectangling (source, html)
tidy-data               Tidy data (source, html)

Vignettes in package ‘tidyrules’:

tidyrules_vignette      Using tidyrules (source, html)

Vignettes in package ‘tidyselect’:

tidyselect              Implementing tidyselect interfaces (source,
                        html)
syntax                  Technical description of tidyselect (source,
                        html)

Vignettes in package ‘tidyterra’:

tidyterra               Using the tidyverse with terra objects: the
                        tidyterra package (source, html)
welcome                 Welcome to tidyterra (source, html)

Vignettes in package ‘tidyverse’:

manifesto               The tidy tools manifesto (source, html)
paper                   Welcome to the Tidyverse (source, html)

Vignettes in package ‘tikzDevice’:

tikzDevice              The tikzDevice Package (source, pdf)

Vignettes in package ‘timeSeries’:

timeSeriesPlot          Plotting 'timeSeries' Objects (source, pdf)

Vignettes in package ‘tinytest’:

using_tinytest          Using tinytest (source, pdf)
tinytest_examples       tinytest by example (source, pdf)

Vignettes in package ‘tm’:

extensions              Extensions (source, pdf)
tm                      Introduction to the tm Package (source, pdf)

Vignettes in package ‘tmap’:

tmap-JSS-code           tmap: JSS article reproduction code (source,
                        html)
tmap-getstarted         tmap: get started! (source, html)
tmap-changes            tmap: version changes (source, html)

Vignettes in package ‘topicmodels’:

topicmodels             topicmodels: An R Package for Fitting Topic
                        Models (source, pdf)

Vignettes in package ‘torch’:

tensor-creation         Creating tensors (source, html)
distributions           Distributions (source, html)
extending-autograd      Extending Autograd (source, html)
indexing                Indexing tensors (source, html)
installation            Installation (source, html)
loading-data            Loading data (source, html)
python-to-r             Python to R (source, html)
serialization           Serialization (source, html)
torchscript             TorchScript (source, html)
using-autograd          Using autograd (source, html)

Vignettes in package ‘tourr’:

edges                   Edges in scatterplot displays (source, html)
tourr                   Introduction to tourr (source, html)

Vignettes in package ‘trajectories’:

article                 trajectories: Classes and Methods for
                        Trajectory Data (source, pdf)

Vignettes in package ‘tram’:

mtram                   mtram (source, pdf)
tram                    tram (source, pdf)

Vignettes in package ‘treemap’:

treemap-color_mapping   treemap: mapping to color palettes (source,
                        html)

Vignettes in package ‘triangle’:

triangledistributionmath
                        Triangle Distribution Math (source, html)

Vignettes in package ‘triebeard’:

r_radix                 Radix trees in R (source, html)
rcpp_radix              Radix trees in Rcpp (source, html)

Vignettes in package ‘trust’:

trust                   Trust Regions Design Document (source, pdf)

Vignettes in package ‘tsfeatures’:

tsfeatures              Introduction to the tsfeatures package (source,
                        html)

Vignettes in package ‘tsibble’:

faq                     FAQ (source, html)
implicit-na             Handle implicit missingness with tsibble
                        (source, html)
intro-tsibble           Introduction to tsibble (source, html)

Vignettes in package ‘twang’:

mnps                    Propensity scores for multiple treatments: A
                        tutorial for the mnps function (source, pdf)
iptw                    Propensity scores for time-varying treatments:
                        A tutorial for the iptw function (source, pdf)
twang                   Toolkit for Weighting and Analysis of
                        Nonequivalent Groups: A guide to the twang
                        package (source, pdf)

Vignettes in package ‘twangContinuous’:

briefTutorial           Brief Tutorial for twangContinuous (source,
                        html)

Vignettes in package ‘udpipe’:

udpipe-annotation       UDPipe Natural Language Processing - Annotating
                        text (source, html)
udpipe-usecase-postagging-lemmatisation
                        UDPipe Natural Language Processing - Basic
                        Analytical Use Cases (source, html)
udpipe-train            UDPipe Natural Language Processing - Model
                        Building (source, html)
udpipe-parallel         UDPipe Natural Language Processing - Parallel
                        (source, html)
udpipe-usecase-topicmodelling
                        UDPipe Natural Language Processing - Topic
                        Modelling Use Cases (source, html)
udpipe-tryitout         UDPipe Natural Language Processing - Try it out
                        (source, html)
udpipe-universe         UDPipe Natural Language Processing - Universe
                        (source, html)

Vignettes in package ‘umap’:

umap_learn              Interfacing with 'umap-learn' (source, html)
umap                    Uniform Manifold Approximation and Projection
                        in R (source, html)

Vignettes in package ‘unitizer’:

u0_unitizer_index       0 - Contents (source, html)
u1_intro                1 - Introduction (source, html)
u2_tests                2 - Test Details (source, html)
u3_interactive-env      3 - Interactive Environment (source, html)
u4_reproducible-tests   4 - Reproducible Tests (source, html)
u5_miscellaneous        5 - Miscellaneous Topics (source, html)

Vignettes in package ‘units’:

measurement_units_in_R
                        Measurement units in R (source, html)
units                   Units of Measurement for R Vectors: an
                        Introduction (source, html)

Vignettes in package ‘urltools’:

urltools                urltools (source, html)

Vignettes in package ‘uroot’:

uroot-intro             uroot-intro (source, pdf)

Vignettes in package ‘utf8’:

utf8                    Unicode: Emoji, accents, and international text
                        (source, html)

Vignettes in package ‘utils’:

Sweave                  Sweave User Manual (source, pdf)

Vignettes in package ‘uwot’:

uwot                    uwot (source, html)

Vignettes in package ‘vcd’:

residual-shadings       Residual-Based Shadings in vcd (source, pdf)
strucplot               The Strucplot Framework: Visualizing Multi-way
                        Contingency Tables with vcd (source, pdf)

Vignettes in package ‘vcdExtra’:

continuous              Continuous predictors (source, html)
creating                Creating and manipulating frequency tables
                        (source, html)
datasets                Datasets for categorical data analysis (source,
                        html)
demo-housing            Demo - Housing Data (source, html)
loglinear               Loglinear Models (source, html)
mobility                Mobility tables (source, html)
mosaics                 Mosaic plots (source, html)
tests                   Tests of Independence (source, html)

Vignettes in package ‘vcr’:

vcr                     1. vcr introduction (source, html)
configuration           2. vcr configuration (source, html)
request_matching        3. request matching (source, html)
debugging               4. vcr tests debugging (source, html)
cassette-manual-editing
                        5. cassette manual editing (source, html)
design                  Design of vcr (source, html)
lightswitch             Turning vcr on and off (source, html)
write-to-disk           Writing to disk (source, html)
internals               internals (source, html)
record-modes            vcr record modes (source, html)

Vignettes in package ‘vctrs’:

pillar                  Printing vectors nicely in tibbles (source,
                        html)
type-size               Prototypes and sizes (source, html)
s3-vector               S3 vectors (source, html)
stability               Type and size stability (source, html)

Vignettes in package ‘vegan’:

decision-vegan          Design decisions and implementation (source,
                        pdf)
diversity-vegan         Diversity analysis in vegan (source, pdf)
intro-vegan             Introduction to ordination in vegan (source,
                        pdf)
partitioning            Partition of Variation (source, pdf)
FAQ-vegan               vegan FAQ (source, html)

Vignettes in package ‘vembedr’:

embed                   Embed video (source, html)
modify                  Modify embedding (source, html)
vembedr                 vembedr (source, html)

Vignettes in package ‘vioplot’:

histogram_formulae      histoplot: Customising Histogram Plots with
                        Formula Input (source, html)
violin_area             vioplot: Controlling Violin Plot Area (source,
                        html)
violin_ylog             vioplot: Controlling y-axis Plotting (source,
                        html)
violin_customisation    vioplot: Customising Violin Plots (source,
                        html)
violin_formulae         vioplot: Customising Violin Plots with Formula
                        Input (source, html)
histogram_customisation
                        vioplot: Customising Violin Plots with
                        Histograms (source, html)
overlaying_annotations
                        vioplot: Overlaying base R graphics (source,
                        html)
violin_split            vioplot: Split Violin Plots (source, html)

Vignettes in package ‘vip’:

vip                     vip (source, html)

Vignettes in package ‘vipor’:

methodComparison        Grouped one-dimensional data method comparison
                        (source, pdf)
usageExamples           vipor package usage examples (source, pdf)

Vignettes in package ‘viridis’:

intro-to-viridis        Introduction to the viridis color maps (source,
                        html)

Vignettes in package ‘visNetwork’:

Introduction-to-visNetwork
                        Introduction to visNetwork (source, html)

Vignettes in package ‘visreg’:

quick-start             Quick start guide (source, html)

Vignettes in package ‘vroom’:

vroom                   Get started with vroom (source, html)
benchmarks              Vroom Benchmarks (source, html)

Vignettes in package ‘warp’:

hour                    Hour Distances and Daylight Savings (source,
                        html)

Vignettes in package ‘websocket’:

overview                Overview (source, html)

Vignettes in package ‘wildmeta’:

cwbmeta                 Cluster Wild Bootstrapping for Meta-Analysis
                        (source, html)

Vignettes in package ‘withr’:

withr                   Changing and restoring state (source, html)

Vignettes in package ‘wooldridge’:

Introductory-Econometrics-Examples
                        Introductory Econometrics Examples (source,
                        html)

Vignettes in package ‘wordcloud2’:

wordcloud               Introduction (source, html)

Vignettes in package ‘workflows’:

stages                  Workflow Stages (source, html)

Vignettes in package ‘workflowsets’:

evaluating-different-predictor-sets
                        Evaluating different predictor sets (source,
                        html)

Vignettes in package ‘xaringan’:

intro-en_US             An Introduction to xaringan (source, html)
intro-zh_CN             xaringan 中文简介 (source, html)

Vignettes in package ‘xfun’:

xfun                    An Introduction to xfun (source, html)

Vignettes in package ‘xgboost’:

discoverYourData        Discover your data (source, html)
xgboostfromJSON         XGBoost from JSON (source, html)
xgboostPresentation     XGBoost presentation (source, html)
xgboost                 xgboost: eXtreme Gradient Boosting (source,
                        pdf)

Vignettes in package ‘xml2’:

modification            Node Modification (source, html)

Vignettes in package ‘xtable’:

xtableGallery           xtable Gallery (source, pdf)
listOfTablesGallery     xtable List of Tables Gallery (source, pdf)
OtherPackagesGallery    xtable Other Packages Gallery (source, pdf)
margintable             xtable margintable (source, pdf)

Vignettes in package ‘xts’:

xts-faq                 xts FAQ (source, pdf)
xts                     xts: Extensible Time Series (source, pdf)

Vignettes in package ‘yardstick’:

grouping                Grouping behavior in yardstick (source, html)
metric-types            Metric types (source, html)
multiclass              Multiclass averaging (source, html)

Vignettes in package ‘zeallot’:

unpacking-assignment    Unpacking Assignment (source, html)

Vignettes in package ‘zipfR’:

zipfr-tutorial          zipfR Tutorial (source, pdf)

Vignettes in package ‘zoo’:

zoo-read                Reading Data in zoo (source, pdf)
zoo-design              zoo Design (source, pdf)
zoo-faq                 zoo FAQ (source, pdf)
zoo-quickref            zoo Quick Reference (source, pdf)
zoo                     zoo: An S3 Class and Methods for Indexed
                        Totally Ordered Observations (source, pdf)

> 
> ## The grid intro vignette -- open it
> ## Not run: vignette("grid") # calling print()
> ## The same (conditional on existence of the vignettte).
> ## Note that 'package = *' is much faster in the case of many installed packages:
> if(!is.null(v1 <- vignette("grid", package="grid"))) {
+ ## Not run: v1 # calling print(.)
+   str(v1)
+   ## Now let us have a closer look at the code
+   
+   
+   
+   
+ ## Not run: edit(v1) # e.g., to send lines ...
+ }# if( has vignette "installed")
List of 7
 $ Package: chr "grid"
 $ Dir    : chr "/usr/local/lib/R/library/grid"
 $ Topic  : chr "grid"
 $ File   : chr "grid.Rnw"
 $ Title  : chr "Introduction to grid"
 $ R      : chr "grid.R"
 $ PDF    : chr "grid.pdf"
 - attr(*, "class")= chr "vignette"
> ## A package can have more than one vignette (package grid has several):
> vignette(package = "grid")
Vignettes in package ‘grid’:

moveline                Demonstrating move-to and line-to (source, pdf)
displaylist             Display Lists in grid (source, pdf)
interactive             Editing grid Graphics (source, pdf)
frame                   Frames and packing grobs (source, pdf)
grid                    Introduction to grid (source, pdf)
locndimn                Locations versus Dimensions (source, pdf)
sharing                 Modifying multiple grobs simultaneously
                        (source, pdf)
nonfinite               Non-finite values (source, pdf)
saveload                Persistent representations (source, pdf)
rotated                 Rotated Viewports (source, pdf)
grobs                   Working with grid grobs (source, pdf)
viewports               Working with viewports (source, pdf)
plotexample             Writing grid Code (source, pdf)

> if(interactive()) {
+    ## vignette("rotated")
+    ## The same, but without searching for it:
+    vignette("rotated", package = "grid")
+ }
> 
> 
> 
> cleanEx()
> nameEx("warnErrList")
> ### * warnErrList
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: warnErrList
> ### Title: Collect and Summarize Errors From List
> ### Aliases: warnErrList
> ### Keywords: error utilities
> 
> ### ** Examples
> 
> ## Regression for each Chick:
> ChWtgrps <- split(ChickWeight, ChickWeight[,"Chick"])
> sapply(ChWtgrps, nrow)# typically 12 obs.
18 16 15 13  9 20 10  8 17 19  4  6 11  3  1 12  2  5 14  7 24 30 22 23 27 28 
 2  7  8 12 12 12 12 11 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 
26 25 29 21 33 37 36 31 39 38 32 40 34 35 44 45 43 41 47 49 46 50 42 48 
12 12 12 12 12 12 12 12 12 12 12 12 12 12 10 12 12 12 12 12 12 12 12 12 
> nlis1 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
+                       lm(weight ~ (Time + I(Time^2)) * Diet, data = DAT)))
> nl1 <- warnErrList(nlis1) #-> warning :
Warning: 50 times caught the same error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]): contrasts can be applied only to factors with 2 or more levels
> ## 50 times the same error (as Diet has only one level in each group)
> stopifnot(sapply(nl1, is.null)) ## all errors --> all replaced by NULL
> nlis2 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
+                       lm(weight ~ Time + I(Time^2), data = DAT)))
> nl2 <- warnErrList(nlis2)
> stopifnot(identical(nl2, nlis2)) # because there was *no* error at all
> nlis3 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
+                       lm(weight ~ poly(Time, 3), data = DAT)))
> nl3 <- warnErrList(nlis3) # 1 error caught:
Warning: 1 error caught in poly(Time, 3): 'degree' must be less than number of unique points
> stopifnot(inherits(nlis3[[1]], "error")
+         , identical(nl3[-1], nlis3[-1])
+         , is.null(nl3[[1]])
+ )
> 
> ## With different error messages
> if(requireNamespace("nlme")) { # almost always, as it is recommended
+  data(Soybean, package="nlme")
+  attr(Soybean, "formula") #-> weight ~ Time | Plot  => split by "Plot":
+  L <- lapply(split(Soybean, Soybean[,"Plot"]),
+              function(DD) tryCatch(error = identity,
+                  nls(weight ~ SSlogis(Time, Asym, xmid, scal), data = DD)))
+  Lw <- warnErrList(L)
+ } # if <nlme>
Loading required namespace: nlme
Warning: 2 errors caught in nls(y ~ 1/(1 + exp((xmid - x)/scal)), data = xy, start = list(xmid = aux[[1L]], scal = aux[[2L]]), algorithm = "plinear", ...).  The error messages and their frequencies are

                     number of iterations exceeded maximum of 50 
                                                               1 
step factor 0.000488281 reduced below 'minFactor' of 0.000976562 
                                                               1 
> 
> 
> 
> cleanEx()
> nameEx("winDialog")
> ### * winDialog
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: winDialog
> ### Title: Dialog Boxes under Windows
> ### Aliases: winDialog winDialogString
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: winDialog("yesno", "Is it OK to delete file blah")
> 
> 
> 
> cleanEx()
> nameEx("winMenus")
> ### * winMenus
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: winMenus
> ### Title: User Menus under MS Windows (Rgui)
> ### Aliases: winMenuAdd winMenuAddItem winMenuDel winMenuDelItem
> ###   winMenuNames winMenuItems
> ### Keywords: utilities
> 
> ### ** Examples
> ## Not run: 
> ##D winMenuAdd("Testit")
> ##D winMenuAddItem("Testit", "one", "aaaa")
> ##D winMenuAddItem("Testit", "two", "bbbb")
> ##D winMenuAdd("Testit/extras")
> ##D winMenuAddItem("Testit", "-", "")
> ##D winMenuAddItem("Testit", "two", "disable")
> ##D winMenuAddItem("Testit", "three", "cccc")
> ##D winMenuAddItem("Testit/extras", "one more", "ddd")
> ##D winMenuAddItem("Testit/extras", "and another", "eee")
> ##D winMenuAdd("$ConsolePopup/Testit")
> ##D winMenuAddItem("$ConsolePopup/Testit", "six", "fff")
> ##D winMenuNames()
> ##D winMenuItems("Testit")
> ## End(Not run)
> 
> 
> cleanEx()
> nameEx("winextras")
> ### * winextras
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: winextras
> ### Title: Get Windows Version
> ### Aliases: win.version
> ### Keywords: utilities
> 
> ### ** Examples
> 
> if(.Platform$OS.type == "windows")
+    print(win.version())
> 
> 
> 
> cleanEx()
> nameEx("write.table")
> ### * write.table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write.table
> ### Title: Data Output
> ### Aliases: write.table write.csv write.csv2
> ### Keywords: print file
> 
> ### ** Examples
> 
> x <- data.frame(a = I("a \" quote"), b = pi)
> tf <- tempfile(fileext = ".csv")
> 
> ## To write a CSV file for input to Excel one might use
> write.table(x, file = tf, sep = ",", col.names = NA,
+             qmethod = "double")
> file.show(tf)
"","a","b"
"1","a "" quote",3.14159265358979

> ## and to read this file back into R one needs
> read.table(tf, header = TRUE, sep = ",", row.names = 1)
          a        b
1 a " quote 3.141593
> ## NB: you do need to specify a separator if qmethod = "double".
> 
> ### Alternatively
> write.csv(x, file = tf)
> read.csv(tf, row.names = 1)
          a        b
1 a " quote 3.141593
> ## or without row names
> write.csv(x, file = tf, row.names = FALSE)
> read.csv(tf)
          a        b
1 a " quote 3.141593
> 
> ## Not run: 
> ##D ## To write a file in Mac Roman for simple use in Mac Excel 2004/8
> ##D write.csv(x, file = "foo.csv", fileEncoding = "macroman")
> ##D ## or for Windows Excel 2007/10
> ##D write.csv(x, file = "foo.csv", fileEncoding = "UTF-16LE")
> ## End(Not run)
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  9.964 1.067 11.582 0.04 0.034 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
