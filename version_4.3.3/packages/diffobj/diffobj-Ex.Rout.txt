
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "diffobj"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('diffobj')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("AlignThreshold-class")
> ### * AlignThreshold-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AlignThreshold-class
> ### Title: Controls How Lines Within a Diff Hunk Are Aligned
> ### Aliases: AlignThreshold-class AlignThreshold
> 
> ### ** Examples
> 
> a1 <- AlignThreshold(threshold=0)
> a2 <- AlignThreshold(threshold=1)
> a3 <- AlignThreshold(threshold=0, min.chars=2)
> ## Note how "e f g" is aligned
> diffChr(c("a b c e", "d e f g"), "D e f g", align=a1, pager="off")
< c("a b ..  > "D e f g"
@@ 1,2 @@    @@ 1 @@    
< a b c e    ~          
< d e f g    > D e f g  
> ## But now it is not
> diffChr(c("a b c e", "d e f g"), "D e f g", align=a2, pager="off")
< c("a b ..  > "D e f g"
@@ 1,2 @@    @@ 1 @@    
< a b c e    > D e f g  
< d e f g    ~          
> ## "e f" are not enough chars to align
> diffChr(c("a b c", "d e f"), "D e f", align=a1, pager="off")
< c("a b ..  > "D e f"  
@@ 1,2 @@    @@ 1 @@    
< a b c      > D e f    
< d e f      ~          
> ## Override with min.chars, so now they align
> diffChr(c("a b c", "d e f"), "D e f", align=a3, pager="off")
< c("a b ..  > "D e f"  
@@ 1,2 @@    @@ 1 @@    
< a b c      ~          
< d e f      > D e f    
> 
> 
> 
> cleanEx()
> nameEx("Extract_PaletteOfStyles")
> ### * Extract_PaletteOfStyles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: [<-,PaletteOfStyles-method
> ### Title: Extract/Replace a Style Class or Object from PaletteOfStyles
> ### Aliases: [<-,PaletteOfStyles-method
> ###   [,PaletteOfStyles,ANY,ANY,ANY-method [[,PaletteOfStyles-method
> 
> ### ** Examples
> 
> pal <- PaletteOfStyles()
> pal[["ansi256", "light", "rgb"]]
Class "StyleAnsi256LightRgb" [package "diffobj"]

Slots:
                                                                       
Name:          funs         text      summary    nchar.fun         wrap
Class:    StyleFuns    StyleText StyleSummary          ANY      logical
                                                                       
Name:           pad    finalizer        pager       na.sub    blank.sub
Class:      logical     function        Pager    character    character
                   
Name:    disp.width
Class:      integer

Extends: 
Class "StyleAnsi", directly
Class "Light", directly
Class "Rgb", directly
Class "StyleRaw", by class "StyleAnsi", distance 2
Class "Ansi", by class "StyleAnsi", distance 2
Class "Style", by class "StyleAnsi", distance 3
Class "Raw", by class "StyleAnsi", distance 3
> pal["ansi256", "light", ]

format: ansi256, brightness: light, color.mode: rgb

  Object of class `StyleAnsi256LightRgb`:
  
  [48;5;255m[30m[38;5;124m<[30m [48;5;224m[48;5;174mdiffobj:::.mx1[48;5;224m [48;5;255m  [38;5;34m>[30m [48;5;194m[48;5;114mdiffobj:::.mx2[48;5;194m [48;5;255m[39m[49m
  [48;5;255m[30m[38;5;37m@@ 6,4 @@        [30m  [38;5;37m@@ 6,3 @@        [30m[39m[49m
  [48;5;255m[30m[90m[90m~[90m [90m[90m      [,1] [,2][90m[90m[30m  [90m[90m~[90m [90m[90m      [,1] [,2][90m[90m[30m[39m[49m
  [48;5;255m[30m  [90m [5,] [30m   5   30[90m[30m    [90m [5,] [30m   5   30[90m[30m[39m[49m
  [48;5;255m[30m[38;5;124m<[30m [48;5;224m[90m [6,] [30m   [48;5;174m6[48;5;224m   31[90m[30m[48;5;255m  [38;5;34m>[30m [48;5;194m[90m [6,] [30m  [48;5;114m99[48;5;194m   31[90m[30m[48;5;255m[39m[49m
  [48;5;255m[30m[38;5;124m<[30m [48;5;224m[90m [7,] [30m   [48;5;174m7[48;5;224m   [48;5;174m32[48;5;224m[90m[30m[48;5;255m  [90m~[30m [48;5;252m               [48;5;255m[39m[49m
  [48;5;255m[30m  [90m [8,] [30m   8   33[90m[30m    [90m [7,] [30m   8   33[90m[30m[39m[49m
  [48;5;255m[30m[90m... omitted 4/10 lines, 1/2 hunks[30m   [39m[49m
  
  Default bg and fg colors forced to appropriate colors
  for scheme; this does not happen in actual use.

format: ansi256, brightness: light, color.mode: yb

  Object of class `StyleAnsi256LightYb`:
  
  [48;5;255m[30m[38;5;94m<[30m [48;5;186m[48;5;143mdiffobj:::.mx1[48;5;186m [48;5;255m  [38;5;19m>[30m [48;5;147m[48;5;104mdiffobj:::.mx2[48;5;147m [48;5;255m[39m[49m
  [48;5;255m[30m[38;5;37m@@ 6,4 @@        [30m  [38;5;37m@@ 6,3 @@        [30m[39m[49m
  [48;5;255m[30m[90m[90m~[90m [90m[90m      [,1] [,2][90m[90m[30m  [90m[90m~[90m [90m[90m      [,1] [,2][90m[90m[30m[39m[49m
  [48;5;255m[30m  [90m [5,] [30m   5   30[90m[30m    [90m [5,] [30m   5   30[90m[30m[39m[49m
  [48;5;255m[30m[38;5;94m<[30m [48;5;186m[90m [6,] [30m   [48;5;143m6[48;5;186m   31[90m[30m[48;5;255m  [38;5;19m>[30m [48;5;147m[90m [6,] [30m  [48;5;104m99[48;5;147m   31[90m[30m[48;5;255m[39m[49m
  [48;5;255m[30m[38;5;94m<[30m [48;5;186m[90m [7,] [30m   [48;5;143m7[48;5;186m   [48;5;143m32[48;5;186m[90m[30m[48;5;255m  [90m~[30m [48;5;252m               [48;5;255m[39m[49m
  [48;5;255m[30m  [90m [8,] [30m   8   33[90m[30m    [90m [7,] [30m   8   33[90m[30m[39m[49m
  [48;5;255m[30m[90m... omitted 4/10 lines, 1/2 hunks[30m   [39m[49m
  
  Default bg and fg colors forced to appropriate colors
  for scheme; this does not happen in actual use.
> pal["ansi256", "light", "rgb"] <- list(StyleAnsi8NeutralRgb())
> 
> 
> 
> cleanEx()
> nameEx("Pager")
> ### * Pager
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Pager
> ### Title: Objects for Specifying Pager Settings
> ### Aliases: Pager PagerOff, PagerSystem, PagerSystemLess, PagerBrowser
> ###   PagerOff-class PagerOff PagerSystem-class PagerSystem
> ###   PagerSystemLess-class PagerSystemLess
> 
> ### ** Examples
> 
> ## We `dontrun` these examples as they involve pagers that should only be run
> ## in interactive mode
> ## Not run: 
> ##D ## Specify Pager parameters via list; this lets the `diff*` functions pick
> ##D ## their preferred pager based on format and other output parameters, but
> ##D ## allows you to modify the pager behavior.
> ##D 
> ##D f <- tempfile()
> ##D diffChr(1:200, 180:300, format='html', pager=list(file.path=f))
> ##D head(readLines(f))  # html output
> ##D unlink(f)
> ##D 
> ##D ## Assuming system pager is `less` and terminal supports ANSI ESC sequences
> ##D ## Equivalent to running `less -RFX`
> ##D 
> ##D diffChr(1:200, 180:300, pager=PagerSystemLess(flags="RFX"))
> ##D 
> ##D ## If the auto-selected pager would be the system pager, we could
> ##D ## equivalently use:
> ##D 
> ##D diffChr(1:200, 180:300, pager=list(flags="RFX"))
> ##D 
> ##D ## System pager is not less, but it supports ANSI escape sequences
> ##D 
> ##D diffChr(1:200, 180:300, pager=PagerSystem(ansi=TRUE))
> ##D 
> ##D ## Use a custom pager, in this case we make up a trivial one and configure it
> ##D ## always page (`threshold=0L`)
> ##D 
> ##D page.fun <- function(x) cat(paste0("| ", readLines(x)), sep="\n")
> ##D page.conf <- PagerSystem(pager=page.fun, threshold=0L)
> ##D diffChr(1:200, 180:300, pager=page.conf, disp.width=getOption("width") - 2)
> ##D 
> ##D ## Set-up the custom pager as the default pager
> ##D 
> ##D options(diffobj.pager=page.conf)
> ##D diffChr(1:200, 180:300)
> ##D 
> ##D ## A blocking pager (this is effectively very similar to what `PagerBrowser`
> ##D ## does); need to block b/c otherwise temp file with diff could be deleted
> ##D ## before the device has a chance to read it since `browseURL` is not
> ##D ## blocking itself.  On OS X we need to specify the extension so the correct
> ##D ## program opens it (in this case `TextEdit`):
> ##D 
> ##D page.conf <- Pager(pager=browseURL, file.ext="txt", make.blocking=TRUE)
> ##D diffChr(1:200, 180:300, pager=page.conf, format='raw')
> ##D 
> ##D ## An alternative to a blocking pager is to disable the
> ##D ## auto-file deletion; here we also specify a file location
> ##D ## explicitly so we can recover the diff text.
> ##D 
> ##D f <- paste0(tempfile(), ".html")  # must specify .html
> ##D diffChr(1:5, 2:6, format='html', pager=list(file.path=f))
> ##D tail(readLines(f))
> ##D unlink(f)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("PaletteOfStyles-class")
> ### * PaletteOfStyles-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: PaletteOfStyles-class
> ### Title: Class for Tracking Default Styles by Style Type
> ### Aliases: PaletteOfStyles-class PaletteOfStyles
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Look at all "ansi256" styles (assumes compatible terminal)
> ##D PaletteOfStyles()["ansi256",,]
> ## End(Not run)
> ## Generate the default style object palette, and replace
> ## the ansi256 / light / rgb style with our modified one
> ## which for illustrative purposes is the raw style
> my.pal <- PaletteOfStyles()
> my.style <- StyleRaw()   # See `?Style` for custom styles
> my.style@funs@word.delete <- function(x) sprintf("--%s--", x)
> my.pal["ansi256", "light", "rgb"] <- list(my.style) # note `list()`
> ## Output has no format now for format/color.mode/brightness
> ## we modified ...
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffPrint(
+    1:3, 2:5, format="ansi256", color.mode="rgb", brightness="light",
+    palette.of.styles=my.pal, pager="off", disp.width=80
+ )
< --1:3--      > 2:5        
@@ 1 @@        @@ 1 @@      
< [1] --1-- 2  > [1] 2 3 4 5
:  3           ~            
> ## If so desired, set our new style palette as the default
> ## one; could also pass directly as argument to `diff*` funs
> ## Not run: 
> ##D options(diffobj.palette=defs)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("Style")
> ### * Style
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Style-class
> ### Title: Customize Appearance of Diff
> ### Aliases: Style-class Style StyleRaw-class StyleRaw StyleAnsi-class
> ###   StyleAnsi StyleAnsi8NeutralRgb-class StyleAnsi8NeutralRgb
> ###   StyleAnsi8NeutralYb-class StyleAnsi8NeutralYb
> ###   StyleAnsi256LightRgb-class StyleAnsi256LightRgb
> ###   StyleAnsi256LightYb-class StyleAnsi256LightYb
> ###   StyleAnsi256DarkRgb-class StyleAnsi256DarkRgb
> ###   StyleAnsi256DarkYb-class StyleAnsi256DarkYb StyleHtml-class StyleHtml
> ###   StyleHtmlLightRgb-class StyleHtmlLightRgb StyleHtmlLightYb-class
> ###   StyleHtmlLightYb
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Create a new style based on existing style by changing
> ##D ## gutter symbols and guide color; see `?StyleFuns` and
> ##D ## `?StyleText` for a full list of adjustable elements
> ##D my.style <- StyleAnsi8NeutralYb()
> ##D my.style   ## `show` method gives you a preview of the style
> ##D my.style@text@gutter.insert <- "+++"
> ##D my.style@text@gutter.delete <- "---"
> ##D my.style@funs@text.guide <- crayon::green
> ##D my.style   ## Notice gutters and guide color
> ##D 
> ##D ## Provide a custom style sheet; here we assume there is a style sheet at
> ##D ## `HOME/web/mycss.css`
> ##D my.css <- file.path(path.expand("~"), "web", "mycss.css")
> ##D diffPrint(1:5, 2:6, style=StyleHtmlLightYb(css=my.css))
> ##D 
> ##D ## Turn of scaling; notice how we pass a list to `style`
> ##D ## and we do not need to specify a specific style
> ##D diffPrint(letters, letters[-5], format="html", style=list(scale=FALSE))
> ##D 
> ##D ## Alternatively we can do the same by specifying a style, but we must
> ##D ## give an exact html style instead of relying on preferences to pick
> ##D ## one for us
> ##D my.style <- StyleHtmlLightYb(scale=FALSE)
> ##D diffPrint(letters, letters[-5], style=my.style)
> ## End(Not run)
> ## Return only the raw HTML without any of the headers
> as.character(
+   diffPrint(1:5, 2:6, format="html", style=list(html.output="diff.only"))
+ )
[1] "<div class='diffobj-container light yb'><pre class='diffobj-content'><div class='diffobj-row'><div class='diffobj-line banner'><div class='delete'><div class='diffobj-gutter'><div class='delete'>&lt;</div><div class='pad'> </div></div><div class='diffobj-text'><div class='delete'><span class='diffobj-word delete'>1:5</span></div></div></div></div><div class='diffobj-line banner'><div class='insert'><div class='diffobj-gutter'><div class='insert'>&gt;</div><div class='pad'> </div></div><div class='diffobj-text'><div class='insert'><span class='diffobj-word insert'>2:6</span></div></div></div></div></div><div class='diffobj-row'><div class='diffobj-line'><div class='diffobj-header'>@@ 1 @@</div></div><div class='diffobj-line'><div class='diffobj-header'>@@ 1 @@</div></div></div><div class='diffobj-row'><div class='diffobj-line'><div class='delete'><div class='diffobj-gutter'><div class='delete'>&lt;</div><div class='pad'> </div></div><div class='diffobj-text'><div class='delete'><span class='diffobj-trim'>[1] </span><span class='diffobj-word delete'>1</span> 2 3 4 5<span class='diffobj-trim'></span></div></div></div></div><div class='diffobj-line'><div class='insert'><div class='diffobj-gutter'><div class='insert'>&gt;</div><div class='pad'> </div></div><div class='diffobj-text'><div class='insert'><span class='diffobj-trim'>[1] </span>2 3 4 5 <span class='diffobj-word insert'>6</span><span class='diffobj-trim'></span></div></div></div></div></div></pre></div>"
attr(,"len")
[1] 3
> 
> 
> 
> cleanEx()
> nameEx("any-Diff-method")
> ### * any-Diff-method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: any,Diff-method
> ### Title: Determine if Diff Object Has Differences
> ### Aliases: any,Diff-method
> 
> ### ** Examples
> 
> any(diffChr(letters, letters))
[1] FALSE
> any(diffChr(letters, letters[-c(1, 5, 8)]))
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("as.character-DiffSummary-method")
> ### * as.character-DiffSummary-method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.character,DiffSummary-method
> ### Title: Generate Character Representation of DiffSummary Object
> ### Aliases: as.character,DiffSummary-method
> 
> ### ** Examples
> 
> as.character(
+   summary(diffChr(letters, letters[-c(5, 15)], format="raw", pager="off"))
+ )
[1] "\nFound differences in 2 hunks:\n  0 insertions, 2 deletions, 24 matches (lines)\n\nDiff map (line:char scale is 1:1 for single chars, 1:1 for char seqs):\n  ....D.........D...........\n"
attr(,"len")
[1] 7
> 
> 
> 
> cleanEx()
> nameEx("auto_context")
> ### * auto_context
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: auto_context
> ### Title: Configure Automatic Context Calculation
> ### Aliases: auto_context
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffChr(letters, letters[-13], context=auto_context(0, 3), pager="off")
< letters     > letters[..
@@ 10,7 @@    @@ 10,6 @@  
  j             j         
  k             k         
  l             l         
< m           ~           
  n             n         
  o             o         
  p             p         
> diffChr(letters, letters[-13], context=auto_context(0, 10), pager="off")
< letters     > letters[..
@@ 3,21 @@    @@ 3,20 @@  
  c             c         
  d             d         
  e             e         
  f             f         
  g             g         
  h             h         
  i             i         
  j             j         
  k             k         
  l             l         
< m           ~           
  n             n         
  o             o         
  p             p         
  q             q         
  r             r         
  s             s         
  t             t         
  u             u         
  v             v         
  w             w         
> diffChr(
+   letters, letters[-13], context=auto_context(0, 10), line.limit=3L,
+   pager="off"
+ )
< letters   > letter..
@@ 13 @@    @@ 0 @@   
< m         ~         
> 
> 
> 
> cleanEx()
> nameEx("console_lines")
> ### * console_lines
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: console_lines
> ### Title: Attempt to Compute Console Height in Text Lines
> ### Aliases: console_lines
> 
> ### ** Examples
> 
> console_lines()
[1] 48
> 
> 
> 
> cleanEx()
> nameEx("diffChr")
> ### * diffChr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffChr
> ### Title: Diff Character Vectors Element By Element
> ### Aliases: diffChr diffChr,ANY-method
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffChr(LETTERS[1:5], LETTERS[2:6], pager="off")
< LETTERS..  > LETTERS..
@@ 1,5 @@    @@ 1,5 @@  
< A          ~          
  B            B        
  C            C        
  D            D        
  E            E        
~            > F        
> 
> 
> 
> cleanEx()
> nameEx("diffCsv")
> ### * diffCsv
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffCsv
> ### Title: Diff CSV Files
> ### Aliases: diffCsv diffCsv,ANY-method
> 
> ### ** Examples
> 
> iris.2 <- iris
> iris.2$Sepal.Length[5] <- 99
> f1 <- tempfile()
> f2 <- tempfile()
> write.csv(iris, f1, row.names=FALSE)
> write.csv(iris.2, f2, row.names=FALSE)
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffCsv(f1, f2, pager="off")
< f1                                                              
> f2                                                              
@@ 4,5 / 4,5 @@                                                   
~     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
  3            4.7         3.2          1.3         0.2     setosa
  4            4.6         3.1          1.5         0.2     setosa
< 5            5.0         3.6          1.4         0.2     setosa
> 5           99.0         3.6          1.4         0.2     setosa
  6            5.4         3.9          1.7         0.4     setosa
  7            4.6         3.4          1.4         0.3     setosa
> unlink(c(f1, f2))
> 
> 
> 
> cleanEx()
> nameEx("diffDeparse")
> ### * diffDeparse
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffDeparse
> ### Title: Diff Deparsed Objects
> ### Aliases: diffDeparse diffDeparse,ANY-method
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffDeparse(matrix(1:9, 3), 1:9, pager="off")
< matrix(1:9, 3)                   > 1:9                            
@@ 1 @@                            @@ 1 @@                          
< structure(1:9, dim = c(3L, 3L))  > 1:9                            
> 
> 
> 
> cleanEx()
> nameEx("diffFile")
> ### * diffFile
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffFile
> ### Title: Diff Files
> ### Aliases: diffFile diffFile,ANY-method
> 
> ### ** Examples
> 
> ## Not run: 
> ##D url.base <- "https://raw.githubusercontent.com/wch/r-source"
> ##D f1 <- file.path(url.base, "29f013d1570e1df5dc047fb7ee304ff57c99ea68/README")
> ##D f2 <- file.path(url.base, "daf0b5f6c728bd3dbcd0a3c976a7be9beee731d9/README")
> ##D diffFile(f1, f2)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("diffObj")
> ### * diffObj
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffObj
> ### Title: Diff Objects
> ### Aliases: diffObj
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffObj(letters, c(letters[1:10], LETTERS[11:26]), pager="off")
< letters                               > c(letters[1:10], LETTERS[11:26])    
@@ 1,4 @@                               @@ 1,4 @@                             
   [1] "a" "b" "c" "d" "e" "f" "g" "h"     [1] "a" "b" "c" "d" "e" "f" "g" "h"
<  [9] "i" "j" "k" "l" "m" "n" "o" "p"  >  [9] "i" "j" "K" "L" "M" "N" "O" "P"
< [17] "q" "r" "s" "t" "u" "v" "w" "x"  > [17] "Q" "R" "S" "T" "U" "V" "W" "X"
< [25] "y" "z"                          > [25] "Y" "Z"                        
> with(mtcars, diffObj(lm(mpg ~ hp)$qr, lm(mpg ~ disp)$qr, pager="off"))
< str(lm(mpg ~ hp)$qr)                   > str(lm(mpg ~ disp)$qr)               
@@ 3,7 @@                                @@ 3,7 @@                              
~  $ qr   : num [1:32, 1:2] -5.657 0.17  ~  $ qr   : num [1:32, 1:2] -5.657 0.17
~ 7 0.177 0.177 0.177 ...                ~ 7 0.177 0.177 0.177 ...              
    ..- attr(*, "dimnames")=List of 2        ..- attr(*, "dimnames")=List of 2  
    .. ..$ : chr [1:32] "1" "2" "3" "4"      .. ..$ : chr [1:32] "1" "2" "3" "4"
   ...                                      ...                                 
<   .. ..$ : chr [1:2] "(Intercept)" "h  >   .. ..$ : chr [1:2] "(Intercept)" "d
: p"                                     : isp"                                 
    ..- attr(*, "assign")= int [1:2] 0       ..- attr(*, "assign")= int [1:2] 0 
  1                                        1                                    
<  $ qraux: num [1:2] 1.18 1.08          >  $ qraux: num [1:2] 1.18 1.09        
   $ pivot: int [1:2] 1 2                   $ pivot: int [1:2] 1 2              
   $ tol  : num 1e-07                       $ tol  : num 1e-07                  
> 
> 
> 
> cleanEx()
> nameEx("diffPrint")
> ### * diffPrint
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffPrint
> ### Title: Diff 'print'ed Objects
> ### Aliases: diffPrint diffPrint,ANY-method
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> diffPrint(letters, letters[-5], pager="off")
< letters                               > letters[-5]                         
@@ 1,3 @@                               @@ 1,3 @@                             
<  [1] "a" "b" "c" "d" "e" "f" "g" "h"  >  [1] "a" "b" "c" "d" "f" "g" "h" "i"
   [9] "i" "j" "k" "l" "m" "n" "o" "p"     [9] "j" "k" "l" "m" "n" "o" "p" "q"
  [17] "q" "r" "s" "t" "u" "v" "w" "x"    [17] "r" "s" "t" "u" "v" "w" "x" "y"
> 
> 
> 
> cleanEx()
> nameEx("diffStr")
> ### * diffStr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffStr
> ### Title: Diff Object Structures
> ### Aliases: diffStr diffStr,ANY-method
> 
> ### ** Examples
> 
> ## `pager="off"` for CRAN compliance; you may omit in normal use
> with(mtcars, diffStr(lm(mpg ~ hp)$qr, lm(mpg ~ disp)$qr, pager="off"))
< str(lm(mpg ~ hp)$qr)                   > str(lm(mpg ~ disp)$qr)               
@@ 3,7 @@                                @@ 3,7 @@                              
~  $ qr   : num [1:32, 1:2] -5.657 0.17  ~  $ qr   : num [1:32, 1:2] -5.657 0.17
~ 7 0.177 0.177 0.177 ...                ~ 7 0.177 0.177 0.177 ...              
    ..- attr(*, "dimnames")=List of 2        ..- attr(*, "dimnames")=List of 2  
    .. ..$ : chr [1:32] "1" "2" "3" "4"      .. ..$ : chr [1:32] "1" "2" "3" "4"
   ...                                      ...                                 
<   .. ..$ : chr [1:2] "(Intercept)" "h  >   .. ..$ : chr [1:2] "(Intercept)" "d
: p"                                     : isp"                                 
    ..- attr(*, "assign")= int [1:2] 0       ..- attr(*, "assign")= int [1:2] 0 
  1                                        1                                    
<  $ qraux: num [1:2] 1.18 1.08          >  $ qraux: num [1:2] 1.18 1.09        
   $ pivot: int [1:2] 1 2                   $ pivot: int [1:2] 1 2              
   $ tol  : num 1e-07                       $ tol  : num 1e-07                  
> 
> 
> 
> cleanEx()
> nameEx("diffobj_set_def_opts")
> ### * diffobj_set_def_opts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diffobj_set_def_opts
> ### Title: Set All diffobj Options to Defaults
> ### Aliases: diffobj_set_def_opts
> 
> ### ** Examples
> 
> ## Not run: 
> ##D   diffobj_set_def_opts()
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("gdo")
> ### * gdo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gdo
> ### Title: Shorthand Function for Accessing diffobj Options
> ### Aliases: gdo
> 
> ### ** Examples
> 
> gdo("format")
[1] "auto"
> 
> 
> 
> cleanEx()
> nameEx("guides")
> ### * guides
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: guides
> ### Title: Generic Methods to Implement Flexible Guide Line Computations
> ### Aliases: guides guidesPrint, guidesStr, guidesChr, guidesDeparse
> ###   guidesPrint guidesPrint,ANY,character-method guidesStr
> ###   guidesStr,ANY,character-method guidesChr
> ###   guidesChr,ANY,character-method guidesDeparse,ANY,character-method
> ###   guidesFile guidesFile,ANY,character-method
> 
> ### ** Examples
> 
> ## Roundabout way of suppressing guides for matrices
> setMethod("guidesPrint", c("matrix", "character"),
+   function(obj, obj.as.chr) integer(0L)
+ )
> ## Special guides for "zulu" S3 objects that match lines
> ## starting in "zulu###" where ### is a nuber
> setOldClass("zulu")
> setMethod("guidesPrint", c("zulu", "character"),
+   function(obj, obj.as.chr) {
+     if(length(obj) > 20) grep("^zulu[0-9]*", obj.as.chr)
+     else integer(0L)
+ } )
> 
> 
> 
> cleanEx()
> nameEx("has_Rdiff")
> ### * has_Rdiff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: has_Rdiff
> ### Title: Attempt to Detect Whether diff Utility is Available
> ### Aliases: has_Rdiff
> 
> ### ** Examples
> 
> has_Rdiff()
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("make_blocking")
> ### * make_blocking
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make_blocking
> ### Title: Create a Blocking Version of a Function
> ### Aliases: make_blocking
> 
> ### ** Examples
> 
> make_blocking(sum, invisible.res=FALSE)(1:10)
[1] 55
> 
> 
> 
> cleanEx()
> nameEx("nchar_html")
> ### * nchar_html
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nchar_html
> ### Title: Count Text Characters in HTML
> ### Aliases: nchar_html
> 
> ### ** Examples
> 
> nchar_html("<a href='http:www.domain.com'>hello</a>")
[1] 5
> 
> 
> 
> cleanEx()
> nameEx("pager_is_less")
> ### * pager_is_less
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pager_is_less
> ### Title: Check Whether System Has less as Pager
> ### Aliases: pager_is_less
> 
> ### ** Examples
> 
> pager_is_less()
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("ses")
> ### * ses
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ses
> ### Title: Shortest Edit Script
> ### Aliases: ses ses_dat
> 
> ### ** Examples
> 
> a <- letters[1:6]
> b <- c('b', 'CC', 'DD', 'd', 'f')
> ses(a, b)
[1] "1d0"   "3c2,3" "5d4"  
> (dat <- ses_dat(a, b))
"ses_dat" object (Match: 3, Delete: 3, Insert: 2):
                    
D: a   c         e  
M:   b         d   f
I:       CC DD      
> 
> ## use `ses_dat` output to construct a minimal diff
> ## color with ANSI CSI SGR
> diff <- dat[['val']]
> del <- dat[['op']] == 'Delete'
> ins <- dat[['op']] == 'Insert'
> if(any(del))
+   diff[del] <- paste0("\033[33m- ", diff[del], "\033[m")
> if(any(ins))
+   diff[ins] <- paste0("\033[34m+ ", diff[ins], "\033[m")
> if(any(!ins & !del))
+   diff[!ins & !del] <- paste0("  ", diff[!ins & !del])
> writeLines(diff)
[33m- a[m
  b
[33m- c[m
[34m+ CC[m
[34m+ DD[m
  d
[33m- e[m
  f
> 
> ## We can recover `a` and `b` from the data
> identical(subset(dat, op != 'Insert', val)[[1]], a)
[1] TRUE
> identical(subset(dat, op != 'Delete', val)[[1]], b)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("show-Style-method")
> ### * show-Style-method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: show,Style-method
> ### Title: Show Method for Style Objects
> ### Aliases: show,Style-method show,StyleHtml-method
> 
> ### ** Examples
> 
> show(StyleAnsi256LightYb())  # assumes ANSI colors supported
Object of class `StyleAnsi256LightYb`:

[48;5;255m[30m[38;5;94m<[30m [48;5;186m[48;5;143mdiffobj:::.mx1[48;5;186m [48;5;255m  [38;5;19m>[30m [48;5;147m[48;5;104mdiffobj:::.mx2[48;5;147m [48;5;255m[39m[49m
[48;5;255m[30m[38;5;37m@@ 6,4 @@        [30m  [38;5;37m@@ 6,3 @@        [30m[39m[49m
[48;5;255m[30m  [90m [5,] [30m   5   30[90m[30m    [90m [5,] [30m   5   30[90m[30m[39m[49m
[48;5;255m[30m[38;5;94m<[30m [48;5;186m[90m [6,] [30m   [48;5;143m6[48;5;186m   31[90m[30m[48;5;255m  [38;5;19m>[30m [48;5;147m[90m [6,] [30m  [48;5;104m99[48;5;147m   31[90m[30m[48;5;255m[39m[49m
[48;5;255m[30m[38;5;94m<[30m [48;5;186m[90m [7,] [30m   [48;5;143m7[48;5;186m   [48;5;143m32[48;5;186m[90m[30m[48;5;255m  [90m~[30m [48;5;252m               [48;5;255m[39m[49m
[48;5;255m[30m  [90m [8,] [30m   8   33[90m[30m    [90m [7,] [30m   8   33[90m[30m[39m[49m
[48;5;255m[30m[90m... omitted 4/9 lines, 1/2 hunks[30m    [39m[49m

Default bg and fg colors forced to appropriate colors
for scheme; this does not happen in actual use.
> 
> 
> 
> cleanEx()
> nameEx("tag_f")
> ### * tag_f
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tag_f
> ### Title: Make Functions That Wrap Text in HTML Tags
> ### Aliases: tag_f div_f, span_f, cont_f div_f span_f
> 
> ### ** Examples
> 
> ## Assuming class 'ex1' has CSS styles defined elsewhere
> tag_f("div", "ex1")(LETTERS[1:5])
[1] "<div class='ex1'>A</div>" "<div class='ex1'>B</div>"
[3] "<div class='ex1'>C</div>" "<div class='ex1'>D</div>"
[5] "<div class='ex1'>E</div>"
> ## Use convenience function, and add some inline styles
> div_f("ex2", c(color="green", `font-family`="arial"))(LETTERS[1:5])
[1] "<div class='ex2' style='color: green; font-family: arial;'>A</div>"
[2] "<div class='ex2' style='color: green; font-family: arial;'>B</div>"
[3] "<div class='ex2' style='color: green; font-family: arial;'>C</div>"
[4] "<div class='ex2' style='color: green; font-family: arial;'>D</div>"
[5] "<div class='ex2' style='color: green; font-family: arial;'>E</div>"
> ## Notice how this is a div with pre-specifed class,
> ## and only one div is created around the entire data
> cont_f()(LETTERS[1:5])
[1] "<div class='diffobj-container'><pre class='diffobj-content'>ABCDE</pre></div>"
> 
> 
> 
> cleanEx()
> nameEx("webfiles")
> ### * webfiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: webfiles
> ### Title: Return Location of Default HTML Support Files
> ### Aliases: webfiles diffobj_js diffobj_css
> 
> ### ** Examples
> 
> diffobj_css()
[1] "/usr/local/lib/R/site-library/diffobj/css/diffobj.css"
> diffobj_js()
[1] "/usr/local/lib/R/site-library/diffobj/script/diffobj.js"
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.75 0.059 0.859 0.039 0.012 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
