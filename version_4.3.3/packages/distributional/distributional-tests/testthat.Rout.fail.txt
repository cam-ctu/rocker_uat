
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(distributional)
> 
> test_check("distributional")
[ FAIL 41 | WARN 0 | SKIP 0 | PASS 357 ]

== Failed tests ================================================================
-- Error ('test-apply.R:1:1'): (code run outside of `test_that()`) -------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-apply.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist_categorical.R:7:3'): Categorical distribution -------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::expect_true(all(is.na(quantile(dist, 0.5)))) at test-dist_categorical.R:7:3
  2. | \-testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. |   \-testthat:::waldo_compare(...)
  4. \-base::loadNamespace(x)
  5.   +-base::namespaceImportFrom(...)
  6.   | \-base::asNamespace(ns)
  7.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     \-base::registerS3methods(nsInfo$S3methods, package, env)
  9.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           \-base::get(genname, envir = envir)
-- Error ('test-dist_categorical.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist_categorical.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist_lognormal.R:1:1'): (code run outside of `test_that()`) ----
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist_lognormal.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-bernoulli.R:1:1'): (code run outside of `test_that()`) ----
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-bernoulli.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-beta.R:1:1'): (code run outside of `test_that()`) ---------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-beta.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-burr.R:1:1'): (code run outside of `test_that()`) ---------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-burr.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-cauchy.R:1:1'): (code run outside of `test_that()`) -------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-cauchy.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-chisq.R:1:1'): (code run outside of `test_that()`) --------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-chisq.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-degenerate.R:1:1'): (code run outside of `test_that()`) ---
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-degenerate.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-exponential.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-exponential.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-f.R:1:1'): (code run outside of `test_that()`) ------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-f.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-gamma.R:1:1'): (code run outside of `test_that()`) --------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-gamma.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-geometric.R:1:1'): (code run outside of `test_that()`) ----
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-geometric.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-gumbel.R:1:1'): (code run outside of `test_that()`) -------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-gumbel.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-hypergeometric.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-hypergeometric.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-inverse-exponential.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-inverse-exponential.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-inverse-gamma.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-inverse-gamma.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-inverse-gaussian.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-inverse-gaussian.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-logarithmic.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-logarithmic.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-logistic.R:1:1'): (code run outside of `test_that()`) -----
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-logistic.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-multinomial.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-multinomial.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-multivariate-normal.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-multivariate-normal.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-negative-binomial.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-negative-binomial.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-normal.R:1:1'): (code run outside of `test_that()`) -------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-normal.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-pareto.R:1:1'): (code run outside of `test_that()`) -------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-pareto.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-percentile.R:1:1'): (code run outside of `test_that()`) ---
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-percentile.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-poisson-inverse-gaussian.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-poisson-inverse-gaussian.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-sample.R:1:1'): (code run outside of `test_that()`) -------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-sample.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-student-t.R:1:1'): (code run outside of `test_that()`) ----
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-student-t.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-studentised-range.R:1:1'): (code run outside of `test_that()`) --
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-studentised-range.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-uniform.R:1:1'): (code run outside of `test_that()`) ------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-uniform.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-dist-weibull.R:1:1'): (code run outside of `test_that()`) ------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-dist-weibull.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-distribution.R:2:3'): is_distribution --------------------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::expect_false(is_distribution(iris)) at test-distribution.R:2:3
  2. | \-testthat:::expect_waldo_constant(act, FALSE, info = info)
  3. |   \-testthat:::waldo_compare(...)
  4. \-base::loadNamespace(x)
  5.   +-base::namespaceImportFrom(...)
  6.   | \-base::asNamespace(ns)
  7.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     \-base::registerS3methods(nsInfo$S3methods, package, env)
  9.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           \-base::get(genname, envir = envir)
-- Error ('test-distribution.R:1:1'): (code run outside of `test_that()`) ------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-distribution.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-hilo.R:1:1'): (code run outside of `test_that()`) --------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-hilo.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-inflated.R:1:1'): (code run outside of `test_that()`) ----------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-inflated.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-issues.R:1:1'): (code run outside of `test_that()`) ------------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-issues.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-mixture.R:1:1'): (code run outside of `test_that()`) -----------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-mixture.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-transformations.R:1:1'): (code run outside of `test_that()`) ---
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-transformations.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)
-- Error ('test-truncated.R:1:1'): (code run outside of `test_that()`) ---------
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     x
  1. +-testthat::test_check("distributional")
  2. | \-testthat::test_dir(...)
  3. |   \-testthat:::test_files(...)
  4. |     \-testthat:::test_files_serial(...)
  5. |       +-testthat::with_reporter(...)
  6. |       | \-base::tryCatch(...)
  7. |       |   \-base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. |       |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. |       |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. |       \-base::lapply(...)
 11. |         \-testthat (local) FUN(X[[i]], ...)
 12. |           \-testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. |             \-testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. |               +-base::tryCatch(...)
 15. |               | \-base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. |               |   +-base (local) tryCatchOne(...)
 17. |               |   | \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. |               |   \-base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. |               |     \-base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. |               |       \-base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. |               +-base::withCallingHandlers(...)
 22. |               \-base::eval(code, test_env)
 23. |                 \-base::eval(code, test_env)
 24. |                   \-testthat::test_that(...) at test-truncated.R:1:1
 25. |                     \-testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. |                       \-testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. |                         \-testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. \-base::loadNamespace(x)
 29.   +-base::namespaceImportFrom(...)
 30.   | \-base::asNamespace(ns)
 31.   \-base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     \-base::registerS3methods(nsInfo$S3methods, package, env)
 33.       \-base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         \-base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           \-base::get(genname, envir = envir)

[ FAIL 41 | WARN 0 | SKIP 0 | PASS 357 ]
Error: Test failures
Execution halted
