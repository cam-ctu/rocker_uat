
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## unit tests will not be done if RUnit is not available
> if(require("RUnit", quietly=TRUE)) {
+  
+   ## --- Setup ---
+  
+   pkg <- "iterators" # <-- Change to package name!
+   
+   if(Sys.getenv("RCMDCHECK") == "FALSE") {
+     ## Path to unit tests for standalone running under Makefile (not R CMD check)
+     ## PKG/tests/../inst/unitTests
+     path <- file.path(getwd(), "..", "inst", "unitTests")
+   } else {
+     ## Path to unit tests for R CMD check
+     ## PKG.Rcheck/tests/../PKG/unitTests
+     path <- system.file(package=pkg, "unitTests")
+   }
+   cat("\nRunning unit tests\n")
+   print(list(pkg=pkg, getwd=getwd(), pathToUnitTests=path))
+  
+   library(package=pkg, character.only=TRUE)
+   ################################################################
+   ## BEGIN PACKAGE SPECIFIC CONFIGURATION                        #
+   ################################################################
+   
+  
+   ################################################################
+   ## END PACKAGE SPECIFIC CONFIGURATION                          #
+   ################################################################
+  
+   ## If desired, load the name space to allow testing of private functions
+   ## if (is.element(pkg, loadedNamespaces()))
+   ##     attach(loadNamespace(pkg), name=paste("namespace", pkg, sep=":"), pos=3)
+   ##
+   ## or simply call PKG:::myPrivateFunction() in tests
+ 
+  
+  
+   ## --- Testing ---
+  
+   ## Define tests
+   testSuite <- defineTestSuite(name=paste(pkg, "unit testing"),
+                                           dirs=path, testFileRegexp = "^.+Test\\.R$")
+   ## Run
+   tests <- runTestSuite(testSuite)
+  
+   ## Default report name
+   pathReport <- file.path(tempdir(), "report")
+  
+   ## Report to stdout and text files
+   cat("------------------- UNIT TEST SUMMARY ---------------------\n\n")
+   printTextProtocol(tests, showDetails=FALSE)
+   printTextProtocol(tests, showDetails=FALSE,
+                     fileName=paste(pathReport, "Summary.txt", sep=""))
+   printTextProtocol(tests, showDetails=TRUE,
+                     fileName=paste(pathReport, ".txt", sep=""))
+  
+   ## Report to HTML file
+   printHTMLProtocol(tests, fileName=paste(pathReport, ".html", sep=""))
+ #  printHTMLProtocol(tests, fileName=file.path(dirname(dirname(getwd())),pkg,"gsDesign-RUnit-Test-Summary.html")) #paste(pathReport, ".html", sep=""))  
+  
+   ## Return stop() to cause R CMD check stop in case of
+   ##  - failures i.e. FALSE to unit tests or
+   ##  - errors i.e. R errors
+   tmp <- getErrors(tests)
+   if(tmp$nFail > 0 | tmp$nErr > 0) {
+     stop(paste("\n\nunit testing failed (#test failures: ", tmp$nFail,
+                ", #R errors: ",  tmp$nErr, ")\n\n", sep=""))
+   }
+ } else {
+   warning("cannot run unit tests -- package RUnit is not available")
+ }

Running unit tests
$pkg
[1] "iterators"

$getwd
[1] "/__w/rocker_uat/rocker_uat/packages/iterators/iterators-tests"

$pathToUnitTests
[1] "/usr/local/lib/R/site-library/iterators/unitTests"



Executing test function test00  ...  done successfully.



Executing test function test01  ...  done successfully.



Executing test function test02  ... Error : StopIteration
In addition: Warning messages:
1: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
2: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
 done successfully.



Executing test function test03  ... Error : StopIteration
 done successfully.



Executing test function test04  ...  done successfully.



Executing test function test05  ... Error : StopIteration
Error : StopIteration
Error : StopIteration
 done successfully.



Executing test function test06  ... Error : StopIteration
Error : StopIteration
Error : StopIteration
 done successfully.



Executing test function test07  ...  done successfully.



Executing test function test08  ... Error : StopIteration
Error : StopIteration
 done successfully.



Executing test function test09  ... Error : StopIteration
Error : StopIteration
 done successfully.



Executing test function test10  ...  done successfully.



Executing test function test11  ... Error : too high
 done successfully.



Executing test function test12  ... Error : too high
 done successfully.



Executing test function test01  ...  done successfully.



Executing test function test01  ...  done successfully.



Executing test function test02  ...  done successfully.



Executing test function test01  ...  done successfully.



Executing test function test01  ...  done successfully.



Executing test function test02  ...  done successfully.



Executing test function test01  ...  done successfully.

------------------- UNIT TEST SUMMARY ---------------------

RUNIT TEST PROTOCOL -- Mon Jan  6 16:30:33 2025 
*********************************************** 
Number of test functions: 20 
Number of errors: 0 
Number of failures: 0 

 
1 Test Suite : 
iterators unit testing - 20 test functions, 0 errors, 0 failures
Warning messages:
1: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
2: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
3: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
4: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
5: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
6: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
7: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
8: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
9: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: Marsaglia-Multicarry has poor statistical properties
10: In RNGkind(kind = testSuite$rngKind, normal.kind = testSuite$rngNormalKind) :
  RNGkind: severe deviations from normality for Kinderman-Ramage + Marsaglia-Multicarry
> 
