
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(profvis)
> 
> test_check("profvis")
[ FAIL 1 | WARN 1 | SKIP 2 | PASS 16 ]

══ Skipped tests (2) ═══════════════════════════════════════════════════════════
• On CRAN (2): 'test-rprof.R:8:3', 'test-rprof.R:38:3'

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-rprof.R:20:3'): `filter.callframes` filters out intervening frames ──
Error in `expect_snapshot0(cat_rprof(f(), filter.callframes = TRUE))`: Quosures can only be unquoted within a quasiquotation context.

# Bad: list(!!myquosure)

# Good: dplyr::mutate(data, !!myquosure)
Backtrace:
     ▆
  1. └─profvis:::expect_snapshot0(cat_rprof(f(), filter.callframes = TRUE)) at test-rprof.R:20:3
  2.   ├─testthat::expect_snapshot(!!quo, cran = cran) at profvis-tests/testthat/helper-profvis.R:18:3
  3.   │ ├─testthat:::with_is_snapshotting(...)
  4.   │ └─testthat:::verify_exec(quo_get_expr(x), quo_get_env(x), replay)
  5.   │   └─evaluate::evaluate(source, envir = env, new_device = FALSE, output_handler = handler)
  6.   │     ├─base::withRestarts(...)
  7.   │     │ └─base (local) withRestartList(expr, restarts)
  8.   │     │   ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]])
  9.   │     │   │ └─base (local) doWithOneRestart(return(expr), restart)
 10.   │     │   └─base (local) withRestartList(expr, restarts[-nr])
 11.   │     │     ├─base (local) withOneRestart(withRestartList(expr, restarts[-nr]), restarts[[nr]])
 12.   │     │     │ └─base (local) doWithOneRestart(return(expr), restart)
 13.   │     │     └─base (local) withRestartList(expr, restarts[-nr])
 14.   │     │       └─base (local) withOneRestart(expr, restarts[[1L]])
 15.   │     │         └─base (local) doWithOneRestart(return(expr), restart)
 16.   │     ├─evaluate:::with_handlers(...)
 17.   │     │ ├─base::eval(call)
 18.   │     │ │ └─base::eval(call)
 19.   │     │ └─base::withCallingHandlers(...)
 20.   │     ├─base::withVisible(eval(expr, envir))
 21.   │     └─base::eval(expr, envir)
 22.   │       └─base::eval(expr, envir)
 23.   └─rlang:::Ops.quosure(quo)
 24.     └─rlang::abort(...)

[ FAIL 1 | WARN 1 | SKIP 2 | PASS 16 ]
Error: Test failures
Execution halted
