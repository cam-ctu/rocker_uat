
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "phyr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('phyr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cor_phylo")
> ### * cor_phylo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_phylo
> ### Title: Correlations among multiple variates with phylogenetic signal
> ### Aliases: cor_phylo boot_ci.cor_phylo print.cor_phylo
> ### Keywords: regression
> 
> ### ** Examples
> 
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("pcd")
> ### * pcd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pcd
> ### Title: pairwise site phylogenetic community dissimilarity (PCD) within
> ###   a community
> ### Aliases: pcd
> 
> ### ** Examples
> 
> x1 = pcd_pred(comm_1 = comm_a, comm_2 = comm_b, tree = phylotree, reps = 100)
> pcd(comm = comm_a, tree = phylotree, expectation = x1)
Dropping tips from the phylogeny that are not in the community data
1 2 3 4 5 6 7 8 9 10 11 12 13 14 $PCD
          s3293     s3294     s3295     s3296     s3297     s3299     s3300
s3294 0.9901094                                                            
s3295 1.1771325 0.6903862                                                  
s3296 1.1640103 1.3083772 1.2869905                                        
s3297 1.1689790 1.1755757 1.1266102 0.7183385                              
s3299 1.0065760 0.3387168 0.7101839 1.4175699 1.4071950                    
s3300 1.1823897 0.5644534 0.5040270 1.3568025 0.8322244 0.4839101          
s3301 0.7365178 0.9629026 1.2558382 1.2288591 1.2357072 0.9749459 1.2623602
s3302 0.9102127 0.3828373 1.0662506 1.1273824 1.0939013 0.5514530 0.8720152
s3303 0.6839339 0.7214397 1.0526653 0.8621859 0.8215183 0.8808650 1.1045640
s3304 0.8878507 0.8843240 1.1931610 0.6485284 0.5765385 1.0343542 1.2482697
s3307 0.9840188 0.3439446 0.6489373 1.3769702 1.3861499 0.3696258 0.7972858
s3308 0.9753118 0.6160715 1.2254771 0.8266045 0.6370524 0.9454636 1.0963269
s3309 1.1762751 0.7787740 0.7688364 1.3087285 1.2972521 0.3956803 0.5234221
s3311 1.1774406 0.6538959 0.6459981 1.1409270 0.6291657 0.9335780 0.4589154
          s3301     s3302     s3303     s3304     s3307     s3308     s3309
s3294                                                                      
s3295                                                                      
s3296                                                                      
s3297                                                                      
s3299                                                                      
s3300                                                                      
s3301                                                                      
s3302 0.8926671                                                            
s3303 0.7090712 0.4211899                                                  
s3304 0.8458934 0.6333908 0.2762002                                        
s3307 0.9653107 0.5527647 0.8679973 1.0168589                              
s3308 0.9480737 0.4959949 0.4902050 0.2744660 0.9333110                    
s3309 1.2285518 0.6825743 1.1728592 1.2714993 0.7788593 1.1003918          
s3311 1.2519738 0.8552798 0.8950419 1.0237025 0.9207090 1.0897773 1.0577064

$PCDc
          s3293     s3294     s3295     s3296     s3297     s3299     s3300
s3294 0.7346939                                                            
s3295 1.1052632 0.6521739                                                  
s3296 1.0975610 1.3278689 1.3636364                                        
s3297 1.0975610 1.3278689 1.0909091 0.6428571                              
s3299 0.7346939 0.2769231 0.6521739 1.3278689 1.3278689                    
s3300 1.1052632 0.6521739 0.5000000 1.3636364 0.8181818 0.3913043          
s3301 0.3600000 0.8490566 1.2000000 1.1739130 1.1739130 0.8490566 1.2000000
s3302 0.6585366 0.4426230 1.0909091 0.9642857 0.9642857 0.4426230 0.8181818
s3303 0.3600000 0.8490566 1.2000000 0.7826087 0.7826087 0.8490566 1.2000000
s3304 0.5454545 0.9473684 1.2857143 0.5294118 0.5294118 0.9473684 1.2857143
s3307 0.7346939 0.2769231 0.6521739 1.3278689 1.3278689 0.2769231 0.6521739
s3308 0.7346939 0.5538462 1.1739130 0.7377049 0.7377049 0.8307692 1.1739130
s3309 1.0909091 0.6315789 0.7142857 1.2352941 1.2352941 0.3157895 0.4285714
s3311 1.1020408 0.8307692 0.6521739 1.0327869 0.7377049 0.8307692 0.6521739
          s3301     s3302     s3303     s3304     s3307     s3308     s3309
s3294                                                                      
s3295                                                                      
s3296                                                                      
s3297                                                                      
s3299                                                                      
s3300                                                                      
s3301                                                                      
s3302 0.7826087                                                            
s3303 0.5625000 0.3913043                                                  
s3304 0.6923077 0.5294118 0.2307692                                        
s3307 0.8490566 0.4426230 0.8490566 0.9473684                              
s3308 0.8490566 0.4426230 0.5094340 0.3157895 0.8307692                    
s3309 1.1538462 0.5294118 1.1538462 1.2000000 0.6315789 0.9473684          
s3311 1.1886792 0.7377049 0.8490566 0.9473684 0.8307692 1.1076923 0.9473684

$PCDp
          s3293     s3294     s3295     s3296     s3297     s3299     s3300
s3294 1.3476490                                                            
s3295 1.0650246 1.0585922                                                  
s3296 1.0605428 0.9853211 0.9437930                                        
s3297 1.0650698 0.8853101 1.0327260 1.1174155                              
s3299 1.3700617 1.2231441 1.0889487 1.0675526 1.0597394                    
s3300 1.0697812 0.8654952 1.0080540 0.9949885 1.0171632 1.2366592          
s3301 2.0458828 1.1340852 1.0465318 1.0468059 1.0526395 1.1482697 1.0519669
s3302 1.3821748 0.8649288 0.9773964 1.1691373 1.1344162 1.2458752 1.0657964
s3303 1.8998164 0.8496957 0.8772211 1.1016819 1.0497178 1.0374632 0.9204700
s3304 1.6277264 0.9334532 0.9280141 1.2249982 1.0890171 1.0918183 0.9708765
s3307 1.3393590 1.2420222 0.9950372 1.0369775 1.0438907 1.3347598 1.2225048
s3308 1.3275077 1.1123514 1.0439249 1.1205083 0.8635599 1.1380581 0.9339081
s3309 1.0782522 1.2330588 1.0763709 1.0594469 1.0501564 1.2529876 1.2213183
s3311 1.0684183 0.7870969 0.9905304 1.1047071 0.8528690 1.1237513 0.7036703
          s3301     s3302     s3303     s3304     s3307     s3308     s3309
s3294                                                                      
s3295                                                                      
s3296                                                                      
s3297                                                                      
s3299                                                                      
s3300                                                                      
s3301                                                                      
s3302 1.1406302                                                            
s3303 1.2605711 1.0763742                                                  
s3304 1.2218460 1.1964049 1.1968677                                        
s3307 1.1369215 1.2488387 1.0223080 1.0733510                              
s3308 1.1166201 1.1205810 0.9622543 0.8691423 1.1234299                    
s3309 1.0647449 1.2893071 1.0164780 1.0595828 1.2331938 1.1615246          
s3311 1.0532478 1.1593793 1.0541605 1.0805748 1.1082608 0.9838267 1.1164679

$D_pairwise
          s3293     s3294     s3295     s3296     s3297     s3299     s3300
s3294 0.8306670                                                            
s3295 0.9857201 0.4186715                                                  
s3296 0.9798550 0.8653963 0.8273000                                        
s3297 0.9840376 0.7775577 0.7242047 0.4929596                              
s3299 0.8444818 0.2135267 0.4306774 0.9376193 0.9307570                    
s3300 0.9901225 0.3423020 0.2911608 0.8721764 0.5349684 0.2934580          
s3301 0.6416168 0.7594899 0.9839312 0.9791681 0.9846247 0.7689891 0.9890411
s3302 0.7662101 0.2532190 0.6854045 0.7736659 0.7506895 0.3647460 0.5605466
s3303 0.5958084 0.5690360 0.8247482 0.6869989 0.6545945 0.6947827 0.8654100
s3304 0.7538969 0.6260509 0.8298862 0.4703337 0.4181243 0.7322636 0.8682163
s3307 0.8255572 0.2168223 0.3935356 0.9107655 0.9168372 0.2330117 0.4834987
s3308 0.8182523 0.3883709 0.7431671 0.5467387 0.4213638 0.5960193 0.6648464
s3309 0.9988055 0.5513274 0.5347532 0.9491321 0.9408090 0.2801190 0.3640588
s3311 0.9878312 0.4122153 0.3917532 0.7546401 0.4161473 0.5885266 0.2783005
          s3301     s3302     s3303     s3304     s3307     s3308     s3309
s3294                                                                      
s3295                                                                      
s3296                                                                      
s3297                                                                      
s3299                                                                      
s3300                                                                      
s3301                                                                      
s3302 0.7112867                                                            
s3303 0.6041933 0.3356086                                                  
s3304 0.6877471 0.4593554 0.2245625                                        
s3307 0.7613893 0.3656136 0.6846334 0.7198779                              
s3308 0.7477936 0.3280645 0.3866495 0.1943062 0.5883583                    
s3309 0.9988646 0.4950249 0.9535842 0.9593070 0.5513878 0.7790144          
s3311 0.9874950 0.5657053 0.7059648 0.7247228 0.5804140 0.6869945 0.7487957

$dsor_pairwise
          s3293     s3294     s3295     s3296     s3297     s3299     s3300
s3294 0.6666667                                                            
s3295 1.0000000 0.4545455                                                  
s3296 1.0000000 1.0000000 1.0000000                                        
s3297 1.0000000 1.0000000 0.8000000 0.5000000                              
s3299 0.6666667 0.2000000 0.4545455 1.0000000 1.0000000                    
s3300 1.0000000 0.4545455 0.3333333 1.0000000 0.6000000 0.2727273          
s3301 0.3333333 0.7142857 1.0000000 1.0000000 1.0000000 0.7142857 1.0000000
s3302 0.6000000 0.3333333 0.8000000 0.7500000 0.7500000 0.3333333 0.6000000
s3303 0.3333333 0.7142857 1.0000000 0.6666667 0.6666667 0.7142857 1.0000000
s3304 0.5000000 0.7500000 1.0000000 0.4285714 0.4285714 0.7500000 1.0000000
s3307 0.6666667 0.2000000 0.4545455 1.0000000 1.0000000 0.2000000 0.4545455
s3308 0.6666667 0.4000000 0.8181818 0.5555556 0.5555556 0.6000000 0.8181818
s3309 1.0000000 0.5000000 0.5555556 1.0000000 1.0000000 0.2500000 0.3333333
s3311 1.0000000 0.6000000 0.4545455 0.7777778 0.5555556 0.6000000 0.4545455
          s3301     s3302     s3303     s3304     s3307     s3308     s3309
s3294                                                                      
s3295                                                                      
s3296                                                                      
s3297                                                                      
s3299                                                                      
s3300                                                                      
s3301                                                                      
s3302 0.6666667                                                            
s3303 0.5000000 0.3333333                                                  
s3304 0.6000000 0.4285714 0.2000000                                        
s3307 0.7142857 0.3333333 0.7142857 0.7500000                              
s3308 0.7142857 0.3333333 0.4285714 0.2500000 0.6000000                    
s3309 1.0000000 0.4285714 1.0000000 1.0000000 0.5000000 0.7500000          
s3311 1.0000000 0.5555556 0.7142857 0.7500000 0.6000000 0.8000000 0.7500000

> 
> 
> 
> cleanEx()
> nameEx("pglmm")
> ### * pglmm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pglmm
> ### Title: Phylogenetic Generalized Linear Mixed Model for Community Data
> ### Aliases: pglmm communityPGLMM
> 
> ### ** Examples
> 
> ## Structure of examples:
> # First, a (brief) description of model types, and how they are specified
> # - these are *not* to be run 'as-is'; they show how models should be organised
> # Second, a run-through of how to simulate, and then analyse, data
> # - these *are* to be run 'as-is'; they show how to format and work with data
> 
> 
> 
> 
> cleanEx()
> nameEx("pglmm_compare")
> ### * pglmm_compare
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pglmm_compare
> ### Title: Phylogenetic Generalized Linear Mixed Model for Comparative Data
> ### Aliases: pglmm_compare
> ### Keywords: regression
> 
> ### ** Examples
> 
> 
> ## Illustration of `pglmm_compare` with simulated data
> 
> # Generate random phylogeny
> 
> library(ape)
> 
> n <- 100
> phy <- compute.brlen(rtree(n=n), method = "Grafen", power = 1)
> 
> # Generate random data and standardize to have mean 0 and variance 1
> X1 <- rTraitCont(phy, model = "BM", sigma = 1)
> X1 <- (X1 - mean(X1))/var(X1)
> 
> # Simulate binary Y
> sim.dat <- data.frame(Y = array(0, dim = n), X1 = X1, row.names = phy$tip.label)
> sim.dat$Y <- ape::binaryPGLMM.sim(Y ~ X1, phy = phy, data=sim.dat, s2 = 1,
+                              B = matrix(c(0, .25), nrow = 2, ncol = 1), 
+                              nrep = 1)$Y
> 
> # Fit model
> pglmm_compare(Y ~ X1, family = "binomial", phy = phy, data = sim.dat)
'as(<matrix>, "dgTMatrix")' is deprecated.
Use 'as(as(as(., "dMatrix"), "generalMatrix"), "TsparseMatrix")' instead.
See help("Deprecated") and help("Matrix-deprecated").
Generalized linear mixed model for binomial data fit by restricted maximum likelihood

Call:Y ~ X1

logLik    AIC    BIC 
-57.59 123.19 129.03 

Phylogenetic random effects variance (s2):
   Variance Std.Dev
s2  0.04959  0.2227

Fixed effects:
              Value Std.Error Zscore    Pvalue    
(Intercept) 1.00446   0.26263 3.8247 0.0001309 ***
X1          0.26145   0.27044 0.9667 0.3336768    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

> 
> # Compare with `binaryPGLMM`
> ape::binaryPGLMM(Y ~ X1, phy = phy, data = sim.dat)


Call:Y ~ X1

Random effect (phylogenetic signal s2):
       s2     Pr
1 0.04448 0.4384

Fixed effects:
              Value Std.Error Zscore    Pvalue    
(Intercept) 1.00516   0.25935 3.8757 0.0001063 ***
X1          0.26456   0.26826 0.9862 0.3240275    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

> 
> # Compare with `phyloglm`
> summary(phylolm::phyloglm(Y ~ X1, phy = phy, data = sim.dat))

Call:
phylolm::phyloglm(formula = Y ~ X1, data = sim.dat, phy = phy)
       AIC     logLik Pen.logLik 
    150.11     -72.06     -71.57 

Method: logistic_MPLE
Mean tip height: 1
Parameter estimate(s):
alpha: 0.8193869 

Coefficients:
            Estimate  StdErr z.value p.value  
(Intercept)  2.25302 1.25590  1.7939 0.07282 .
X1           1.78038 0.77642  2.2931 0.02184 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Note: Wald-type p-values for coefficients, conditional on alpha=0.8193869

> 
> # Compare with `glm` that does not account for phylogeny
> summary(glm(Y ~ X1, data = sim.dat, family = "binomial"))

Call:
glm(formula = Y ~ X1, family = "binomial", data = sim.dat)

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)   1.0119     0.2287   4.424 9.67e-06 ***
X1            0.2945     0.2469   1.192    0.233    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 116.65  on 99  degrees of freedom
Residual deviance: 115.20  on 98  degrees of freedom
AIC: 119.2

Number of Fisher Scoring iterations: 4

> 
> # Compare with logistf() that does not account
> # for phylogeny but is less biased than glm()
> logistf::logistf(Y ~ X1, data = sim.dat)
logistf::logistf(formula = Y ~ X1, data = sim.dat)
Model fitted by Penalized ML
Confidence intervals and p-values by Profile Likelihood 

Coefficients:
(Intercept)          X1 
  0.9879665   0.2832956 

Likelihood ratio test=1.393686 on 1 df, p=0.2377836, n=100

> 
> ## Fit model with bayes = TRUE
> # pglmm_compare(Y ~ X1, family = "binomial", phy = phy, data = sim.dat, 
> #               bayes = TRUE, calc.DIC = TRUE)
> 
> # Compare with `MCMCglmm`
> 
> V <- vcv(phy)
> V <- V/max(V)
> detV <- exp(determinant(V)$modulus[1])
> V <- V/detV^(1/n)
> 
> invV <- Matrix::Matrix(solve(V),sparse = TRUE)
> sim.dat$species <- phy$tip.label
> rownames(invV) <- sim.dat$species
> 
> nitt <- 43000
> thin <- 10
> burnin <- 3000
> 
> prior <- list(R=list(V=1, fix=1), G=list(G1=list(V=1, nu=1000, alpha.mu=0, alpha.V=1)))
> # commented out to save time
> # summary(MCMCglmm::MCMCglmm(Y ~ X1, random = ~species, ginvers = list(species = invV),
> #     data = sim.dat, slice = TRUE, nitt = nitt, thin = thin, burnin = burnin,
> #    family = "categorical", prior = prior, verbose = FALSE))
> 
> 
> 
> 
> cleanEx()

detaching ‘package:ape’

> nameEx("psd")
> ### * psd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: psv
> ### Title: Phylogenetic Species Diversity Metrics
> ### Aliases: psv psr pse psc psv.spp psd
> 
> ### ** Examples
> 
> psv(comm = comm_a, tree = phylotree) 
           PSVs SR        vars
s3293        NA  1          NA
s3294 0.7294797  5 0.002882626
s3295 0.7937525  6 0.001787660
s3296 0.8998803  4 0.005107335
s3297 0.7831887  4 0.005107335
s3299 0.7664551  5 0.002882626
s3300 0.8085234  6 0.001787660
s3301 0.7167665  2 0.033698666
s3302 0.6987934  4 0.005107335
s3303 0.8083833  2 0.033698666
s3304 0.7645509  3 0.010756048
s3307 0.8534491  5 0.002882626
s3308 0.6796509  5 0.002882626
s3309 0.7469461  3 0.010756048
s3311 0.7706318  5 0.002882626
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  3.964 2.883 3.5 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
