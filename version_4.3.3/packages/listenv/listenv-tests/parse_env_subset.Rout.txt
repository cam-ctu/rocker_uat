
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("listenv")
> 
> ovars <- ls(envir = globalenv())
> if (exists("x")) rm(list = "x")
> if (exists("y")) rm(list = "y")
> 
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## Variable in global/parent environment
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> message("*** parse_env_subset() on parent environment ...")
*** parse_env_subset() on parent environment ...
> 
> target <- parse_env_subset(x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "x"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "x"
> stopifnot(identical(target$envir, environment()),
+           target$name == "x", is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset("x", substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "x"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "\"x\""
> stopifnot(identical(target$envir, environment()),
+           target$name == "x", is.na(target$idx), !target$exists)
> 
> x <- NULL
> target <- parse_env_subset(x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "x"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi TRUE
 $ code  : chr "x"
> stopifnot(identical(target$envir, environment()),
+           target$name == "x", is.na(target$idx), target$exists)
> 
> target <- parse_env_subset(y, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "y"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "y"
> stopifnot(identical(target$envir, environment()),
+           target$name == "y", is.na(target$idx), !target$exists)
> 
> message("*** parse_env_subset() on parent environment ... DONE")
*** parse_env_subset() on parent environment ... DONE
> 
> 
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## Environment
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> message("parse_env_subset() on environment ...")
parse_env_subset() on environment ...
> x <- new.env()
> 
> target <- parse_env_subset(x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "x"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi TRUE
 $ code  : chr "x"
> stopifnot(identical(target$envir, environment()),
+           target$name == "x", is.na(target$idx), target$exists)
> 
> target <- parse_env_subset(x$a, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: 0x55ad959ebe68> 
 $ name  : chr "a"
 $ op    : chr "$"
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "x$a"
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset("a", envir = x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: 0x55ad959ebe68> 
 $ name  : chr "a"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "\"a\""
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset(x[["a"]], substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: 0x55ad959ebe68> 
 $ name  : chr "a"
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "x[[\"a\"]]"
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset("a", envir = x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: 0x55ad959ebe68> 
 $ name  : chr "a"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "\"a\""
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> res <- try(target <- parse_env_subset(1, substitute = FALSE), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> res <- try(target <- parse_env_subset(x[[1]], substitute = TRUE), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> x$a <- 1
> target <- parse_env_subset(x$a, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: 0x55ad959ebe68> 
 $ name  : chr "a"
 $ op    : chr "$"
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int NA
 $ exists: logi TRUE
 $ code  : chr "x$a"
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), target$exists)
> 
> message("parse_env_subset() on environment ... DONE")
parse_env_subset() on environment ... DONE
> 
> 
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## List environment
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> message("*** parse_env_subset() on listenv ...")
*** parse_env_subset() on listenv ...
> 
> x <- listenv()
> 
> target <- parse_env_subset(x, substitute = TRUE)
> str(target)
List of 7
 $ envir :<environment: R_GlobalEnv> 
 $ name  : chr "x"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi TRUE
 $ code  : chr "x"
> stopifnot(identical(target$envir, environment()),
+           target$name == "x", is.na(target$idx), target$exists)
> 
> target <- parse_env_subset(x$a, substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : chr "$"
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "x$a"
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset(x[["a"]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "x[[\"a\"]]"
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset("a", envir = x, substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int NA
 $ exists: logi FALSE
 $ code  : chr "\"a\""
> stopifnot(identical(target$envir, x), target$name == "a",
+           is.na(target$idx), !target$exists)
> 
> target <- parse_env_subset(x[[1]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 1
 $ idx   : num 1
 $ exists: logi FALSE
 $ code  : chr "x[[1]]"
 $ name  : chr ""
> stopifnot(identical(target$envir, x), target$name == "", target$idx == 1,
+           !target$exists)
> 
> target <- parse_env_subset(x[[2]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 2
 $ idx   : num 2
 $ exists: logi FALSE
 $ code  : chr "x[[2]]"
 $ name  : chr ""
> stopifnot(identical(target$envir, x), target$name == "", target$idx == 2,
+           !target$exists)
> 
> target <- parse_env_subset(x[], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr ""
 $ op    : chr "["
 $ subset:List of 1
  ..$ : NULL
 $ idx   : int(0) 
 $ exists: logi(0) 
 $ code  : chr "x[]"
> stopifnot(identical(target$envir, x),
+           target$name == "",
+ 	  length(target$idx) == 0L, is.numeric(target$idx),
+ 	  length(target$exists) == 0L, is.logical(target$exists))
> 
> x$a <- 1
> target <- parse_env_subset(x$a, substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : chr "$"
 $ subset:List of 1
  ..$ : chr "a"
 $ idx   : int 1
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr "a"
 $ code  : chr "x$a"
> stopifnot(identical(target$envir, x), target$name == "a", target$idx  == 1,
+           target$exists)
> 
> target <- parse_env_subset("a", envir = x, substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : NULL
 $ subset: NULL
 $ idx   : int 1
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr "a"
 $ code  : chr "\"a\""
> stopifnot(identical(target$envir, x), target$name == "a", target$idx  == 1,
+           target$exists)
> 
> stopifnot(x$a == 1)
> stopifnot(x[[1]] == 1)
> 
> target <- parse_env_subset(x[[c("a", "a")]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr [1:2] "a" "a"
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : chr [1:2] "a" "a"
 $ idx   : int [1:2] 1 1
 $ exists: Named logi [1:2] TRUE TRUE
  ..- attr(*, "names")= chr [1:2] "a" "a"
 $ code  : chr "x[[c(\"a\", \"a\")]]"
> stopifnot(identical(target$envir, x),
+           length(target$name) == 2L, all(target$name == "a"),
+ 	  length(target$idx) == 2L, all(target$idx  == 1),
+           length(target$exists) == 2L, all(target$exists))
> 
> target <- parse_env_subset(x[[1]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 1
 $ idx   : num 1
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr "a"
 $ code  : chr "x[[1]]"
> stopifnot(identical(target$envir, x), target$name == "a", target$idx  == 1,
+           target$exists)
> 
> target <- parse_env_subset(x[], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr ""
 $ op    : chr "["
 $ subset:List of 1
  ..$ : NULL
 $ idx   : int 1
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr "a"
 $ code  : chr "x[]"
> stopifnot(identical(target$envir, x),
+           target$name == "",
+ 	  length(target$idx) == 1L, target$idx == 1,
+ 	  length(target$exists) == 1L, target$exists)
> 
> x[[3]] <- 3
> target <- parse_env_subset(x[[3]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr ""
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 3
 $ idx   : num 3
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr ""
 $ code  : chr "x[[3]]"
> stopifnot(identical(target$envir, x), target$name == "", target$idx  == 3,
+           target$exists)
> stopifnot(x[[3]] == 3)
> print(names(x))
[1] "a" ""  "" 
> stopifnot(identical(names(x), c("a", "", "")))
> 
> target <- parse_env_subset(x[], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr ""
 $ op    : chr "["
 $ subset:List of 1
  ..$ : NULL
 $ idx   : int [1:3] 1 2 3
 $ exists: Named logi [1:3] TRUE FALSE TRUE
  ..- attr(*, "names")= chr [1:3] "a" "" ""
 $ code  : chr "x[]"
> stopifnot(identical(target$envir, x),
+           target$name == "",
+ 	  length(target$idx) == 3L, all(target$idx == 1:3),
+ 	  length(target$exists) == 3L,
+ 	  all(target$exists == c(TRUE, FALSE, TRUE)))
> 
> b <- 1
> target <- parse_env_subset(x[[b]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad94119120> 
 $ name  : chr "a"
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 1
 $ idx   : num 1
 $ exists: Named logi TRUE
  ..- attr(*, "names")= chr "a"
 $ code  : chr "x[[b]]"
> stopifnot(identical(target$envir, x), target$name == "a", target$idx  == 1,
+           target$exists)
> 
> 
> x <- listenv()
> length(x) <- 2
> 
> target <- parse_env_subset(x[[1]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 1
 $ idx   : num 1
 $ exists: logi FALSE
 $ code  : chr "x[[1]]"
 $ name  : chr ""
> stopifnot(!target$exists)
> 
> target <- parse_env_subset(x[[2]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 2
 $ idx   : num 2
 $ exists: logi FALSE
 $ code  : chr "x[[2]]"
 $ name  : chr ""
> stopifnot(!target$exists)
> 
> target <- parse_env_subset(x[[3]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 3
 $ idx   : num 3
 $ exists: logi FALSE
 $ code  : chr "x[[3]]"
 $ name  : chr ""
> stopifnot(!target$exists)
> stopifnot(length(x) == 2)
> 
> x[[2]] <- 2
> target <- parse_env_subset(x[[2]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 2
 $ idx   : num 2
 $ exists: logi TRUE
 $ code  : chr "x[[2]]"
 $ name  : chr ""
> stopifnot(target$exists)
> 
> x[[4]] <- 4
> stopifnot(length(x) == 4)
> 
> target <- parse_env_subset(x[[3]], substitute = TRUE)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : num 3
 $ idx   : num 3
 $ exists: logi FALSE
 $ code  : chr "x[[3]]"
 $ name  : chr ""
> stopifnot(!target$exists)
> 
> target <- parse_env_subset(x[1:5], substitute = TRUE)
> stopifnot(length(target$idx) == 5, all(target$idx == 1:5))
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "["
 $ subset:List of 1
  ..$ : int [1:5] 1 2 3 4 5
 $ idx   : int [1:5] 1 2 3 4 5
 $ exists: logi [1:5] FALSE TRUE FALSE TRUE FALSE
 $ code  : chr "x[1:5]"
 $ name  : chr ""
> 
> target <- parse_env_subset(x[integer(0L)], substitute = TRUE)
> stopifnot(length(target$idx) == 0)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "["
 $ subset:List of 1
  ..$ : int(0) 
 $ idx   : int(0) 
 $ exists: logi(0) 
 $ code  : chr "x[integer(0L)]"
 $ name  : chr ""
> 
> target <- parse_env_subset(x[[integer(0L)]], substitute = TRUE)
> stopifnot(length(target$idx) == 0)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "[["
 $ subset:List of 1
  ..$ : int(0) 
 $ idx   : int(0) 
 $ exists: logi(0) 
 $ code  : chr "x[[integer(0L)]]"
 $ name  : chr ""
> 
> target <- parse_env_subset(x[0], substitute = TRUE)
> stopifnot(length(target$idx) == 0)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "["
 $ subset:List of 1
  ..$ : num 0
 $ idx   : num(0) 
 $ exists: logi(0) 
 $ code  : chr "x[0]"
 $ name  : chr ""
> 
> target <- parse_env_subset(x[-1], substitute = TRUE)
> stopifnot(length(target$idx) == length(x) - 1)
> str(target)
List of 7
 $ envir :Classes 'listenv', 'environment' <environment: 0x55ad95eee5a8> 
 $ op    : chr "["
 $ subset:List of 1
  ..$ : num -1
 $ idx   : int [1:3] 2 3 4
 $ exists: logi [1:3] TRUE FALSE TRUE
 $ code  : chr "x[-1]"
 $ name  : chr ""
> 
> ## Odds and ends
> #target <- parse_env_subset(x[[""]], substitute = TRUE)
> #str(target)
> #stopifnot(length(target$idx) == 1L, !target$exists)
> 
> message("*** parse_env_subset() on listenv ... DONE")
*** parse_env_subset() on listenv ... DONE
> 
> 
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> ## Exception handling
> ## - - - - - - - - - - - - - - - - - - - - - - - - - -
> message("*** parse_env_subset() - exceptions ...")
*** parse_env_subset() - exceptions ...
> 
> x <- new.env()
> x$a <- 1
> 
> res <- tryCatch({
+   parse_env_subset(x[], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[""], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[""]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[1]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[TRUE]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[c("a", "a")]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> 
> x <- listenv()
> 
> res <- tryCatch({
+   parse_env_subset(x[""], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   parse_env_subset(x[[""]], substitute = TRUE)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> res <- try(target <- parse_env_subset(x[[0]], substitute = TRUE), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> ## Invalid variable name
> res <- try(target <- parse_env_subset("_a", substitute = TRUE), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> ## Don't check variable name
> target <- parse_env_subset("_a", substitute = TRUE, is_variable = FALSE)
> stopifnot(is.list(target))
> 
> res <- try(target <- parse_env_subset(1:10, envir = x, substitute = FALSE),
+            silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> res <- try(
+   target <- parse_env_subset(c("a", "b"), envir = x, substitute = FALSE),
+   silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> res <- try(target <- parse_env_subset(x@a, substitute = TRUE), silent = TRUE)
> stopifnot(inherits(res, "try-error"))
> 
> message("*** parse_env_subset() - exceptions ... DONE")
*** parse_env_subset() - exceptions ... DONE
> 
> 
> ## Cleanup
> rm(list = setdiff(ls(envir = globalenv()), ovars), envir = globalenv())
> 
