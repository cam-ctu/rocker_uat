
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[10:29:59.228] plan(): Setting new future strategy stack:
[10:29:59.228] List of future strategies:
[10:29:59.228] 1. sequential:
[10:29:59.228]    - args: function (..., envir = parent.frame())
[10:29:59.228]    - tweaked: FALSE
[10:29:59.228]    - call: future::plan("sequential")
[10:29:59.243] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[10:29:59.801] future_lapply() ...
[10:29:59.806] Number of chunks: 1
[10:29:59.806] getGlobalsAndPackagesXApply() ...
[10:29:59.807]  - future.globals: FALSE
[10:29:59.809]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:29:59.810]  - needed namespaces: [n=0] 
[10:29:59.810] Finding globals ... DONE
[10:29:59.810]  - use_args: TRUE
[10:29:59.810]  - Getting '...' globals ...
[10:29:59.811]    - '...' content: [n=0] 
[10:29:59.811] List of 1
[10:29:59.811]  $ ...: list()
[10:29:59.811]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.811]  - attr(*, "where")=List of 1
[10:29:59.811]   ..$ ...:<environment: 0x557e0723e638> 
[10:29:59.811]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:29:59.811]  - attr(*, "resolved")= logi TRUE
[10:29:59.811]  - attr(*, "total_size")= num NA
[10:29:59.814]  - Getting '...' globals ... DONE
[10:29:59.814] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:29:59.814] List of 3
[10:29:59.814]  $ ...future.FUN        :function (x)  
[10:29:59.814]  $ future.call.arguments: list()
[10:29:59.814]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.814]  $ ...                  : list()
[10:29:59.814]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.814]  - attr(*, "where")=List of 3
[10:29:59.814]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:29:59.814]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:29:59.814]   ..$ ...                  :<environment: 0x557e0723e638> 
[10:29:59.814]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:29:59.814]  - attr(*, "resolved")= logi FALSE
[10:29:59.814]  - attr(*, "total_size")= num 3824
[10:29:59.818] Packages to be attached in all futures: [n=1] ‘utils’
[10:29:59.819] getGlobalsAndPackagesXApply() ... DONE
[10:29:59.819] Number of futures (= number of chunks): 1
[10:29:59.819] Launching 1 futures (chunks) ...
[10:29:59.819] Chunk #1 of 1 ...
[10:29:59.820]  - seeds: <none>
[10:29:59.820]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:29:59.830] Created future:
[10:29:59.830] ClusterFuture:
[10:29:59.830] Label: ‘future_lapply-1’
[10:29:59.830] Expression:
[10:29:59.830] {
[10:29:59.830]     do.call(function(...) {
[10:29:59.830]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:29:59.830]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:29:59.830]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:29:59.830]             on.exit(options(oopts), add = TRUE)
[10:29:59.830]         }
[10:29:59.830]         {
[10:29:59.830]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:29:59.830]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:29:59.830]                 ...future.FUN(...future.X_jj, ...)
[10:29:59.830]             })
[10:29:59.830]         }
[10:29:59.830]     }, args = future.call.arguments)
[10:29:59.830] }
[10:29:59.830] Lazy evaluation: FALSE
[10:29:59.830] Asynchronous evaluation: TRUE
[10:29:59.830] Local evaluation: TRUE
[10:29:59.830] Environment: R_GlobalEnv
[10:29:59.830] Capture standard output: TRUE
[10:29:59.830] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:29:59.830] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:29:59.830] Packages: 1 packages (‘utils’)
[10:29:59.830] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:29:59.830] Resolved: FALSE
[10:29:59.830] Value: <not collected>
[10:29:59.830] Conditions captured: <none>
[10:29:59.830] Early signaling: FALSE
[10:29:59.830] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:29:59.830] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:29:59.843] Chunk #1 of 1 ... DONE
[10:29:59.843] Launching 1 futures (chunks) ... DONE
[10:29:59.843] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[10:29:59.887] future_lapply() ...
[10:29:59.888] Number of chunks: 1
[10:29:59.888] getGlobalsAndPackagesXApply() ...
[10:29:59.888]  - future.globals: TRUE
[10:29:59.892]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[10:29:59.892]  - needed namespaces: [n=1] ‘stats’
[10:29:59.892] Finding globals ... DONE
[10:29:59.892]  - use_args: TRUE
[10:29:59.892]  - Getting '...' globals ...
[10:29:59.893]    - '...' content: [n=0] 
[10:29:59.893] List of 1
[10:29:59.893]  $ ...: list()
[10:29:59.893]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.893]  - attr(*, "where")=List of 1
[10:29:59.893]   ..$ ...:<environment: 0x557e0a81b7a0> 
[10:29:59.893]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:29:59.893]  - attr(*, "resolved")= logi TRUE
[10:29:59.893]  - attr(*, "total_size")= num NA
[10:29:59.896]  - Getting '...' globals ... DONE
[10:29:59.896] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[10:29:59.896] List of 4
[10:29:59.896]  $ ...future.FUN:function (x)  
[10:29:59.896]  $ a            : num 1
[10:29:59.896]  $ b            : num 2
[10:29:59.896]  $ ...          : list()
[10:29:59.896]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.896]  - attr(*, "where")=List of 4
[10:29:59.896]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:29:59.896]   ..$ a            :<environment: R_EmptyEnv> 
[10:29:59.896]   ..$ b            :<environment: R_EmptyEnv> 
[10:29:59.896]   ..$ ...          :<environment: 0x557e0a81b7a0> 
[10:29:59.896]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:29:59.896]  - attr(*, "resolved")= logi FALSE
[10:29:59.896]  - attr(*, "total_size")= num 3936
[10:29:59.904] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[10:29:59.905] getGlobalsAndPackagesXApply() ... DONE
[10:29:59.905] Number of futures (= number of chunks): 1
[10:29:59.905] Launching 1 futures (chunks) ...
[10:29:59.905] Chunk #1 of 1 ...
[10:29:59.905]  - Finding globals in 'X' for chunk #1 ...
[10:29:59.906]    + additional globals found: [n=0] 
[10:29:59.906]    + additional namespaces needed: [n=0] 
[10:29:59.906]  - Finding globals in 'X' for chunk #1 ... DONE
[10:29:59.906]  - seeds: <none>
[10:29:59.906]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:29:59.915] Created future:
[10:29:59.916] ClusterFuture:
[10:29:59.916] Label: ‘future_lapply-1’
[10:29:59.916] Expression:
[10:29:59.916] {
[10:29:59.916]     do.call(function(...) {
[10:29:59.916]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:29:59.916]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:29:59.916]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:29:59.916]             on.exit(options(oopts), add = TRUE)
[10:29:59.916]         }
[10:29:59.916]         {
[10:29:59.916]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:29:59.916]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:29:59.916]                 ...future.FUN(...future.X_jj, ...)
[10:29:59.916]             })
[10:29:59.916]         }
[10:29:59.916]     }, args = future.call.arguments)
[10:29:59.916] }
[10:29:59.916] Lazy evaluation: FALSE
[10:29:59.916] Asynchronous evaluation: TRUE
[10:29:59.916] Local evaluation: TRUE
[10:29:59.916] Environment: R_GlobalEnv
[10:29:59.916] Capture standard output: TRUE
[10:29:59.916] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:29:59.916] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:29:59.916] Packages: 2 packages (‘stats’, ‘utils’)
[10:29:59.916] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:29:59.916] Resolved: FALSE
[10:29:59.916] Value: <not collected>
[10:29:59.916] Conditions captured: <none>
[10:29:59.916] Early signaling: FALSE
[10:29:59.916] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:29:59.916] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:29:59.927] Chunk #1 of 1 ... DONE
[10:29:59.927] Launching 1 futures (chunks) ... DONE
[10:29:59.927] Resolving 1 futures (chunks) ...
[10:29:59.970]  - Number of value chunks collected: 1
[10:29:59.970] Resolving 1 futures (chunks) ... DONE
[10:29:59.970] Reducing values from 1 chunks ...
[10:29:59.970]  - Number of values collected after concatenation: 1
[10:29:59.970]  - Number of values expected: 1
[10:29:59.970] Reducing values from 1 chunks ... DONE
[10:29:59.970] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[10:29:59.971] future_lapply() ...
[10:29:59.972] Number of chunks: 1
[10:29:59.972] getGlobalsAndPackagesXApply() ...
[10:29:59.972]  - future.globals: ‘a’, ‘b’
[10:29:59.972]  - use_args: TRUE
[10:29:59.972] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[10:29:59.972] List of 4
[10:29:59.972]  $ a            : num 1
[10:29:59.972]  $ b            : num 2
[10:29:59.972]  $ ...future.FUN:function (x)  
[10:29:59.972]  $ ...          : list()
[10:29:59.972]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:29:59.972]  - attr(*, "where")=List of 4
[10:29:59.972]   ..$ a            :<environment: R_GlobalEnv> 
[10:29:59.972]   ..$ b            :<environment: R_GlobalEnv> 
[10:29:59.972]   ..$ ...future.FUN:<environment: 0x557e097a4740> 
[10:29:59.972]   ..$ ...          :<environment: 0x557e097a4740> 
[10:29:59.972]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:29:59.972]  - attr(*, "resolved")= logi FALSE
[10:29:59.972]  - attr(*, "total_size")= num NA
[10:29:59.976] Packages to be attached in all futures: [n=1] ‘utils’
[10:29:59.976] getGlobalsAndPackagesXApply() ... DONE
[10:29:59.977] Number of futures (= number of chunks): 1
[10:29:59.977] Launching 1 futures (chunks) ...
[10:29:59.977] Chunk #1 of 1 ...
[10:29:59.977]  - seeds: <none>
[10:29:59.977]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:29:59.987] Created future:
[10:29:59.987] ClusterFuture:
[10:29:59.987] Label: ‘future_lapply-1’
[10:29:59.987] Expression:
[10:29:59.987] {
[10:29:59.987]     do.call(function(...) {
[10:29:59.987]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:29:59.987]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:29:59.987]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:29:59.987]             on.exit(options(oopts), add = TRUE)
[10:29:59.987]         }
[10:29:59.987]         {
[10:29:59.987]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:29:59.987]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:29:59.987]                 ...future.FUN(...future.X_jj, ...)
[10:29:59.987]             })
[10:29:59.987]         }
[10:29:59.987]     }, args = future.call.arguments)
[10:29:59.987] }
[10:29:59.987] Lazy evaluation: FALSE
[10:29:59.987] Asynchronous evaluation: TRUE
[10:29:59.987] Local evaluation: TRUE
[10:29:59.987] Environment: R_GlobalEnv
[10:29:59.987] Capture standard output: TRUE
[10:29:59.987] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:29:59.987] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:29:59.987] Packages: 1 packages (‘utils’)
[10:29:59.987] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:29:59.987] Resolved: FALSE
[10:29:59.987] Value: <not collected>
[10:29:59.987] Conditions captured: <none>
[10:29:59.987] Early signaling: FALSE
[10:29:59.987] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:29:59.987] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:29:59.999] Chunk #1 of 1 ... DONE
[10:29:59.999] Launching 1 futures (chunks) ... DONE
[10:29:59.999] Resolving 1 futures (chunks) ...
[10:30:00.042]  - Number of value chunks collected: 1
[10:30:00.042] Resolving 1 futures (chunks) ... DONE
[10:30:00.042] Reducing values from 1 chunks ...
[10:30:00.042]  - Number of values collected after concatenation: 1
[10:30:00.043]  - Number of values expected: 1
[10:30:00.043] Reducing values from 1 chunks ... DONE
[10:30:00.043] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[10:30:00.043] future_lapply() ...
[10:30:00.044] Number of chunks: 1
[10:30:00.044] getGlobalsAndPackagesXApply() ...
[10:30:00.044]  - future.globals: <name-value list> with names ‘2’, ‘3’
[10:30:00.044]  - use_args: TRUE
[10:30:00.044]  - Getting '...' globals ...
[10:30:00.045]    - '...' content: [n=0] 
[10:30:00.045] List of 1
[10:30:00.045]  $ ...: list()
[10:30:00.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.045]  - attr(*, "where")=List of 1
[10:30:00.045]   ..$ ...:<environment: 0x557e073e5288> 
[10:30:00.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.045]  - attr(*, "resolved")= logi TRUE
[10:30:00.045]  - attr(*, "total_size")= num NA
[10:30:00.048]  - Getting '...' globals ... DONE
[10:30:00.048] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[10:30:00.048] List of 4
[10:30:00.048]  $ a            : num 2
[10:30:00.048]  $ b            : num 3
[10:30:00.048]  $ ...future.FUN:function (x)  
[10:30:00.048]  $ ...          : list()
[10:30:00.048]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.048]  - attr(*, "where")=List of 4
[10:30:00.048]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:00.048]   ..$ b            :<environment: R_EmptyEnv> 
[10:30:00.048]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:30:00.048]   ..$ ...          :<environment: 0x557e073e5288> 
[10:30:00.048]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.048]  - attr(*, "resolved")= logi FALSE
[10:30:00.048]  - attr(*, "total_size")= num NA
[10:30:00.052] Packages to be attached in all futures: [n=1] ‘utils’
[10:30:00.052] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.052] Number of futures (= number of chunks): 1
[10:30:00.052] Launching 1 futures (chunks) ...
[10:30:00.053] Chunk #1 of 1 ...
[10:30:00.053]  - seeds: <none>
[10:30:00.053]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.064] Created future:
[10:30:00.064] ClusterFuture:
[10:30:00.064] Label: ‘future_lapply-1’
[10:30:00.064] Expression:
[10:30:00.064] {
[10:30:00.064]     do.call(function(...) {
[10:30:00.064]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.064]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.064]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.064]             on.exit(options(oopts), add = TRUE)
[10:30:00.064]         }
[10:30:00.064]         {
[10:30:00.064]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.064]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.064]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.064]             })
[10:30:00.064]         }
[10:30:00.064]     }, args = future.call.arguments)
[10:30:00.064] }
[10:30:00.064] Lazy evaluation: FALSE
[10:30:00.064] Asynchronous evaluation: TRUE
[10:30:00.064] Local evaluation: TRUE
[10:30:00.064] Environment: R_GlobalEnv
[10:30:00.064] Capture standard output: TRUE
[10:30:00.064] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.064] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:30:00.064] Packages: 1 packages (‘utils’)
[10:30:00.064] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.064] Resolved: FALSE
[10:30:00.064] Value: <not collected>
[10:30:00.064] Conditions captured: <none>
[10:30:00.064] Early signaling: FALSE
[10:30:00.064] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.064] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.076] Chunk #1 of 1 ... DONE
[10:30:00.076] Launching 1 futures (chunks) ... DONE
[10:30:00.076] Resolving 1 futures (chunks) ...
[10:30:00.107]  - Number of value chunks collected: 1
[10:30:00.108] Resolving 1 futures (chunks) ... DONE
[10:30:00.108] Reducing values from 1 chunks ...
[10:30:00.108]  - Number of values collected after concatenation: 1
[10:30:00.108]  - Number of values expected: 1
[10:30:00.108] Reducing values from 1 chunks ... DONE
[10:30:00.108] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[10:30:00.108] future_lapply() ...
[10:30:00.109] Number of chunks: 1
[10:30:00.109] getGlobalsAndPackagesXApply() ...
[10:30:00.110]  - future.globals: FALSE
[10:30:00.111]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[10:30:00.111]  - needed namespaces: [n=0] 
[10:30:00.111] Finding globals ... DONE
[10:30:00.111]  - use_args: TRUE
[10:30:00.111]  - Getting '...' globals ...
[10:30:00.111]    - '...' content: [n=0] 
[10:30:00.112] List of 1
[10:30:00.112]  $ ...: list()
[10:30:00.112]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.112]  - attr(*, "where")=List of 1
[10:30:00.112]   ..$ ...:<environment: 0x557e0a81fe78> 
[10:30:00.112]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.112]  - attr(*, "resolved")= logi TRUE
[10:30:00.112]  - attr(*, "total_size")= num NA
[10:30:00.114]  - Getting '...' globals ... DONE
[10:30:00.114] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:30:00.115] List of 4
[10:30:00.115]  $ d                    : num 42
[10:30:00.115]  $ ...future.FUN        :function (x)  
[10:30:00.115]  $ future.call.arguments: list()
[10:30:00.115]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.115]  $ ...                  : list()
[10:30:00.115]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.115]  - attr(*, "where")=List of 4
[10:30:00.115]   ..$ d                    :<environment: R_EmptyEnv> 
[10:30:00.115]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:30:00.115]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:30:00.115]   ..$ ...                  :<environment: 0x557e0a81fe78> 
[10:30:00.115]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.115]  - attr(*, "resolved")= logi FALSE
[10:30:00.115]  - attr(*, "total_size")= num 784
[10:30:00.119] Packages to be attached in all futures: [n=0] 
[10:30:00.119] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.119] Number of futures (= number of chunks): 1
[10:30:00.119] Launching 1 futures (chunks) ...
[10:30:00.119] Chunk #1 of 1 ...
[10:30:00.119]  - seeds: <none>
[10:30:00.119]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.131] Created future:
[10:30:00.131] ClusterFuture:
[10:30:00.131] Label: ‘future_lapply-1’
[10:30:00.131] Expression:
[10:30:00.131] {
[10:30:00.131]     do.call(function(...) {
[10:30:00.131]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.131]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.131]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.131]             on.exit(options(oopts), add = TRUE)
[10:30:00.131]         }
[10:30:00.131]         {
[10:30:00.131]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.131]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.131]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.131]             })
[10:30:00.131]         }
[10:30:00.131]     }, args = future.call.arguments)
[10:30:00.131] }
[10:30:00.131] Lazy evaluation: FALSE
[10:30:00.131] Asynchronous evaluation: TRUE
[10:30:00.131] Local evaluation: TRUE
[10:30:00.131] Environment: R_GlobalEnv
[10:30:00.131] Capture standard output: TRUE
[10:30:00.131] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.131] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:00.131] Packages: <none>
[10:30:00.131] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.131] Resolved: FALSE
[10:30:00.131] Value: <not collected>
[10:30:00.131] Conditions captured: <none>
[10:30:00.131] Early signaling: FALSE
[10:30:00.131] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.131] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.143] Chunk #1 of 1 ... DONE
[10:30:00.143] Launching 1 futures (chunks) ... DONE
[10:30:00.143] Resolving 1 futures (chunks) ...
[10:30:00.185]  - Number of value chunks collected: 1
[10:30:00.185] Resolving 1 futures (chunks) ... DONE
[10:30:00.185] Reducing values from 1 chunks ...
[10:30:00.186]  - Number of values collected after concatenation: 2
[10:30:00.186]  - Number of values expected: 2
[10:30:00.186] Reducing values from 1 chunks ... DONE
[10:30:00.186] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[10:30:00.186] future_lapply() ...
[10:30:00.187] Number of chunks: 1
[10:30:00.187] getGlobalsAndPackagesXApply() ...
[10:30:00.187]  - future.globals: TRUE
[10:30:00.189]  - globals found/used: [n=1] ‘FUN’
[10:30:00.189]  - needed namespaces: [n=0] 
[10:30:00.189] Finding globals ... DONE
[10:30:00.189]  - use_args: TRUE
[10:30:00.189]  - Getting '...' globals ...
[10:30:00.190]    - '...' content: [n=0] 
[10:30:00.190] List of 1
[10:30:00.190]  $ ...: list()
[10:30:00.190]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.190]  - attr(*, "where")=List of 1
[10:30:00.190]   ..$ ...:<environment: 0x557e0993f708> 
[10:30:00.190]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.190]  - attr(*, "resolved")= logi TRUE
[10:30:00.190]  - attr(*, "total_size")= num NA
[10:30:00.192]  - Getting '...' globals ... DONE
[10:30:00.192] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.193] List of 2
[10:30:00.193]  $ ...future.FUN:function (x)  
[10:30:00.193]  $ ...          : list()
[10:30:00.193]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.193]  - attr(*, "where")=List of 2
[10:30:00.193]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.193]   ..$ ...          :<environment: 0x557e0993f708> 
[10:30:00.193]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.193]  - attr(*, "resolved")= logi FALSE
[10:30:00.193]  - attr(*, "total_size")= num 728
[10:30:00.195] Packages to be attached in all futures: [n=0] 
[10:30:00.195] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.196] Number of futures (= number of chunks): 1
[10:30:00.196] Launching 1 futures (chunks) ...
[10:30:00.196] Chunk #1 of 1 ...
[10:30:00.196]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.196]    + additional globals found: [n=0] 
[10:30:00.196]    + additional namespaces needed: [n=0] 
[10:30:00.196]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.196]  - seeds: <none>
[10:30:00.197]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.206] Created future:
[10:30:00.206] ClusterFuture:
[10:30:00.206] Label: ‘future_lapply-1’
[10:30:00.206] Expression:
[10:30:00.206] {
[10:30:00.206]     do.call(function(...) {
[10:30:00.206]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.206]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.206]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.206]             on.exit(options(oopts), add = TRUE)
[10:30:00.206]         }
[10:30:00.206]         {
[10:30:00.206]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.206]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.206]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.206]             })
[10:30:00.206]         }
[10:30:00.206]     }, args = future.call.arguments)
[10:30:00.206] }
[10:30:00.206] Lazy evaluation: FALSE
[10:30:00.206] Asynchronous evaluation: TRUE
[10:30:00.206] Local evaluation: TRUE
[10:30:00.206] Environment: R_GlobalEnv
[10:30:00.206] Capture standard output: TRUE
[10:30:00.206] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.206] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.206] Packages: <none>
[10:30:00.206] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.206] Resolved: FALSE
[10:30:00.206] Value: <not collected>
[10:30:00.206] Conditions captured: <none>
[10:30:00.206] Early signaling: FALSE
[10:30:00.206] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.206] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.217] Chunk #1 of 1 ... DONE
[10:30:00.217] Launching 1 futures (chunks) ... DONE
[10:30:00.218] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[10:30:00.312] future_lapply() ...
[10:30:00.313] Number of chunks: 1
[10:30:00.314] getGlobalsAndPackagesXApply() ...
[10:30:00.314]  - future.globals: TRUE
[10:30:00.319]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:30:00.319]  - needed namespaces: [n=0] 
[10:30:00.319] Finding globals ... DONE
[10:30:00.319]  - use_args: TRUE
[10:30:00.320]  - Getting '...' globals ...
[10:30:00.320]    - '...' content: [n=0] 
[10:30:00.320] List of 1
[10:30:00.320]  $ ...: list()
[10:30:00.320]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.320]  - attr(*, "where")=List of 1
[10:30:00.320]   ..$ ...:<environment: 0x557e0a8645e0> 
[10:30:00.320]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.320]  - attr(*, "resolved")= logi TRUE
[10:30:00.320]  - attr(*, "total_size")= num NA
[10:30:00.323]  - Getting '...' globals ... DONE
[10:30:00.323] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:30:00.323] List of 6
[10:30:00.323]  $ ...future.FUN:function (i)  
[10:30:00.323]  $ caller       :function (a, b, FUN = call_my_add)  
[10:30:00.323]  $ args         :List of 1
[10:30:00.323]   ..$ FUN:function (a, b)  
[10:30:00.323]  $ call_my_add  :function (a, b)  
[10:30:00.323]  $ my_add       :function (a, b)  
[10:30:00.323]  $ ...          : list()
[10:30:00.323]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.323]  - attr(*, "where")=List of 6
[10:30:00.323]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.323]   ..$ caller       :<environment: R_EmptyEnv> 
[10:30:00.323]   ..$ args         :<environment: R_EmptyEnv> 
[10:30:00.323]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:30:00.323]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:30:00.323]   ..$ ...          :<environment: 0x557e0a8645e0> 
[10:30:00.323]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.323]  - attr(*, "resolved")= logi FALSE
[10:30:00.323]  - attr(*, "total_size")= num 6664
[10:30:00.330] Packages to be attached in all futures: [n=0] 
[10:30:00.330] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.330] Number of futures (= number of chunks): 1
[10:30:00.330] Launching 1 futures (chunks) ...
[10:30:00.330] Chunk #1 of 1 ...
[10:30:00.330]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.331]    + additional globals found: [n=0] 
[10:30:00.331]    + additional namespaces needed: [n=0] 
[10:30:00.331]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.331]  - seeds: <none>
[10:30:00.331]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.337] Created future:
[10:30:00.337] SequentialFuture:
[10:30:00.337] Label: ‘future_lapply-1’
[10:30:00.337] Expression:
[10:30:00.337] {
[10:30:00.337]     do.call(function(...) {
[10:30:00.337]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.337]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.337]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.337]             on.exit(options(oopts), add = TRUE)
[10:30:00.337]         }
[10:30:00.337]         {
[10:30:00.337]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.337]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.337]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.337]             })
[10:30:00.337]         }
[10:30:00.337]     }, args = future.call.arguments)
[10:30:00.337] }
[10:30:00.337] Lazy evaluation: FALSE
[10:30:00.337] Asynchronous evaluation: FALSE
[10:30:00.337] Local evaluation: TRUE
[10:30:00.337] Environment: 0x557e0a864a40
[10:30:00.337] Capture standard output: TRUE
[10:30:00.337] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.337] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:30:00.337] Packages: <none>
[10:30:00.337] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.337] Resolved: TRUE
[10:30:00.337] Value: 168 bytes of class ‘list’
[10:30:00.337] Early signaling: FALSE
[10:30:00.337] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.337] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.338] Chunk #1 of 1 ... DONE
[10:30:00.338] Launching 1 futures (chunks) ... DONE
[10:30:00.338] Resolving 1 futures (chunks) ...
[10:30:00.339]  - Number of value chunks collected: 1
[10:30:00.339] Resolving 1 futures (chunks) ... DONE
[10:30:00.339] Reducing values from 1 chunks ...
[10:30:00.339]  - Number of values collected after concatenation: 3
[10:30:00.339]  - Number of values expected: 3
[10:30:00.339] Reducing values from 1 chunks ... DONE
[10:30:00.340] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:30:00.340] future_lapply() ...
[10:30:00.343] Number of chunks: 1
[10:30:00.344] getGlobalsAndPackagesXApply() ...
[10:30:00.344]  - future.globals: TRUE
[10:30:00.346]  - globals found/used: [n=1] ‘FUN’
[10:30:00.346]  - needed namespaces: [n=0] 
[10:30:00.347] Finding globals ... DONE
[10:30:00.347]  - use_args: TRUE
[10:30:00.347]  - Getting '...' globals ...
[10:30:00.347]    - '...' content: [n=1] ‘what’
[10:30:00.347] List of 1
[10:30:00.347]  $ ...:List of 1
[10:30:00.347]   ..$ what:function (x)  
[10:30:00.347]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.347]  - attr(*, "where")=List of 1
[10:30:00.347]   ..$ ...:<environment: 0x557e09352b20> 
[10:30:00.347]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.347]  - attr(*, "resolved")= logi TRUE
[10:30:00.347]  - attr(*, "total_size")= num NA
[10:30:00.350]  - Getting '...' globals ... DONE
[10:30:00.350] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.350] List of 2
[10:30:00.350]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:00.350]  $ ...          :List of 1
[10:30:00.350]   ..$ what:function (x)  
[10:30:00.350]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.350]  - attr(*, "where")=List of 2
[10:30:00.350]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.350]   ..$ ...          :<environment: 0x557e09352b20> 
[10:30:00.350]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.350]  - attr(*, "resolved")= logi FALSE
[10:30:00.350]  - attr(*, "total_size")= num 12192
[10:30:00.354] Packages to be attached in all futures: [n=0] 
[10:30:00.354] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.354] Number of futures (= number of chunks): 1
[10:30:00.354] Launching 1 futures (chunks) ...
[10:30:00.354] Chunk #1 of 1 ...
[10:30:00.354]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.355]    + additional globals found: [n=0] 
[10:30:00.355]    + additional namespaces needed: [n=0] 
[10:30:00.355]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.355]  - seeds: <none>
[10:30:00.355]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.357] Created future:
[10:30:00.357] SequentialFuture:
[10:30:00.357] Label: ‘future_lapply-1’
[10:30:00.357] Expression:
[10:30:00.357] {
[10:30:00.357]     do.call(function(...) {
[10:30:00.357]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.357]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.357]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.357]             on.exit(options(oopts), add = TRUE)
[10:30:00.357]         }
[10:30:00.357]         {
[10:30:00.357]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.357]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.357]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.357]             })
[10:30:00.357]         }
[10:30:00.357]     }, args = future.call.arguments)
[10:30:00.357] }
[10:30:00.357] Lazy evaluation: FALSE
[10:30:00.357] Asynchronous evaluation: FALSE
[10:30:00.357] Local evaluation: TRUE
[10:30:00.357] Environment: R_GlobalEnv
[10:30:00.357] Capture standard output: TRUE
[10:30:00.357] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.357] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.357] Packages: <none>
[10:30:00.357] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.357] Resolved: TRUE
[10:30:00.357] Value: 56 bytes of class ‘list’
[10:30:00.357] Early signaling: FALSE
[10:30:00.357] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.357] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.358] Chunk #1 of 1 ... DONE
[10:30:00.359] Launching 1 futures (chunks) ... DONE
[10:30:00.359] Resolving 1 futures (chunks) ...
[10:30:00.359]  - Number of value chunks collected: 1
[10:30:00.359] Resolving 1 futures (chunks) ... DONE
[10:30:00.359] Reducing values from 1 chunks ...
[10:30:00.359]  - Number of values collected after concatenation: 1
[10:30:00.359]  - Number of values expected: 1
[10:30:00.360] Reducing values from 1 chunks ... DONE
[10:30:00.360] future_lapply() ... DONE
[10:30:00.360] future_lapply() ...
[10:30:00.361] Number of chunks: 1
[10:30:00.361] getGlobalsAndPackagesXApply() ...
[10:30:00.361]  - future.globals: TRUE
[10:30:00.364]  - globals found/used: [n=1] ‘FUN’
[10:30:00.364]  - needed namespaces: [n=0] 
[10:30:00.364] Finding globals ... DONE
[10:30:00.364]  - use_args: TRUE
[10:30:00.364]  - Getting '...' globals ...
[10:30:00.365]    - '...' content: [n=1] ‘what’
[10:30:00.365] List of 1
[10:30:00.365]  $ ...:List of 1
[10:30:00.365]   ..$ what:function (...)  
[10:30:00.365]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.365]  - attr(*, "where")=List of 1
[10:30:00.365]   ..$ ...:<environment: 0x557e0a5e9560> 
[10:30:00.365]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.365]  - attr(*, "resolved")= logi TRUE
[10:30:00.365]  - attr(*, "total_size")= num NA
[10:30:00.368]  - Getting '...' globals ... DONE
[10:30:00.368] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.368] List of 2
[10:30:00.368]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:00.368]  $ ...          :List of 1
[10:30:00.368]   ..$ what:function (...)  
[10:30:00.368]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.368]  - attr(*, "where")=List of 2
[10:30:00.368]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.368]   ..$ ...          :<environment: 0x557e0a5e9560> 
[10:30:00.368]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.368]  - attr(*, "resolved")= logi FALSE
[10:30:00.368]  - attr(*, "total_size")= num 12584
[10:30:00.371] Packages to be attached in all futures: [n=0] 
[10:30:00.371] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.371] Number of futures (= number of chunks): 1
[10:30:00.371] Launching 1 futures (chunks) ...
[10:30:00.371] Chunk #1 of 1 ...
[10:30:00.371]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.372]    + additional globals found: [n=0] 
[10:30:00.372]    + additional namespaces needed: [n=0] 
[10:30:00.372]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.372]  - seeds: <none>
[10:30:00.372]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.377] Created future:
[10:30:00.377] SequentialFuture:
[10:30:00.377] Label: ‘future_lapply-1’
[10:30:00.377] Expression:
[10:30:00.377] {
[10:30:00.377]     do.call(function(...) {
[10:30:00.377]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.377]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.377]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.377]             on.exit(options(oopts), add = TRUE)
[10:30:00.377]         }
[10:30:00.377]         {
[10:30:00.377]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.377]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.377]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.377]             })
[10:30:00.377]         }
[10:30:00.377]     }, args = future.call.arguments)
[10:30:00.377] }
[10:30:00.377] Lazy evaluation: FALSE
[10:30:00.377] Asynchronous evaluation: FALSE
[10:30:00.377] Local evaluation: TRUE
[10:30:00.377] Environment: R_GlobalEnv
[10:30:00.377] Capture standard output: TRUE
[10:30:00.377] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.377] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.377] Packages: <none>
[10:30:00.377] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.377] Resolved: TRUE
[10:30:00.377] Value: 56 bytes of class ‘list’
[10:30:00.377] Early signaling: FALSE
[10:30:00.377] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.377] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.378] Chunk #1 of 1 ... DONE
[10:30:00.379] Launching 1 futures (chunks) ... DONE
[10:30:00.379] Resolving 1 futures (chunks) ...
[10:30:00.379]  - Number of value chunks collected: 1
[10:30:00.379] Resolving 1 futures (chunks) ... DONE
[10:30:00.379] Reducing values from 1 chunks ...
[10:30:00.379]  - Number of values collected after concatenation: 1
[10:30:00.379]  - Number of values expected: 1
[10:30:00.380] Reducing values from 1 chunks ... DONE
[10:30:00.380] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:30:00.380] future_lapply() ...
[10:30:00.381] Number of chunks: 1
[10:30:00.381] getGlobalsAndPackagesXApply() ...
[10:30:00.381]  - future.globals: TRUE
[10:30:00.382]  - globals found/used: [n=1] ‘FUN’
[10:30:00.382]  - needed namespaces: [n=0] 
[10:30:00.383] Finding globals ... DONE
[10:30:00.383]  - use_args: TRUE
[10:30:00.383]  - Getting '...' globals ...
[10:30:00.383]    - '...' content: [n=1] ‘b’
[10:30:00.383] List of 1
[10:30:00.383]  $ ...:List of 1
[10:30:00.383]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:00.383]   .. ..$ a: int [1:2] 1 2
[10:30:00.383]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.383]  - attr(*, "where")=List of 1
[10:30:00.383]   ..$ ...:<environment: 0x557e09a0f238> 
[10:30:00.383]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.383]  - attr(*, "resolved")= logi TRUE
[10:30:00.383]  - attr(*, "total_size")= num NA
[10:30:00.387]  - Getting '...' globals ... DONE
[10:30:00.387] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.387] List of 2
[10:30:00.387]  $ ...future.FUN:function (a, b)  
[10:30:00.387]  $ ...          :List of 1
[10:30:00.387]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:00.387]   .. ..$ a: int [1:2] 1 2
[10:30:00.387]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.387]  - attr(*, "where")=List of 2
[10:30:00.387]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.387]   ..$ ...          :<environment: 0x557e09a0f238> 
[10:30:00.387]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.387]  - attr(*, "resolved")= logi FALSE
[10:30:00.387]  - attr(*, "total_size")= num 1440
[10:30:00.390] Packages to be attached in all futures: [n=0] 
[10:30:00.390] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.391] Number of futures (= number of chunks): 1
[10:30:00.391] Launching 1 futures (chunks) ...
[10:30:00.391] Chunk #1 of 1 ...
[10:30:00.391]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.391]    + additional globals found: [n=0] 
[10:30:00.391]    + additional namespaces needed: [n=0] 
[10:30:00.391]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.391]  - seeds: <none>
[10:30:00.392]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.394] Created future:
[10:30:00.394] SequentialFuture:
[10:30:00.394] Label: ‘future_lapply-1’
[10:30:00.394] Expression:
[10:30:00.394] {
[10:30:00.394]     do.call(function(...) {
[10:30:00.394]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.394]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.394]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.394]             on.exit(options(oopts), add = TRUE)
[10:30:00.394]         }
[10:30:00.394]         {
[10:30:00.394]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.394]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.394]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.394]             })
[10:30:00.394]         }
[10:30:00.394]     }, args = future.call.arguments)
[10:30:00.394] }
[10:30:00.394] Lazy evaluation: FALSE
[10:30:00.394] Asynchronous evaluation: FALSE
[10:30:00.394] Local evaluation: TRUE
[10:30:00.394] Environment: R_GlobalEnv
[10:30:00.394] Capture standard output: TRUE
[10:30:00.394] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.394] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.394] Packages: <none>
[10:30:00.394] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.394] Resolved: TRUE
[10:30:00.394] Value: 112 bytes of class ‘list’
[10:30:00.394] Early signaling: FALSE
[10:30:00.394] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.394] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.395] Chunk #1 of 1 ... DONE
[10:30:00.395] Launching 1 futures (chunks) ... DONE
[10:30:00.396] Resolving 1 futures (chunks) ...
[10:30:00.396]  - Number of value chunks collected: 1
[10:30:00.396] Resolving 1 futures (chunks) ... DONE
[10:30:00.396] Reducing values from 1 chunks ...
[10:30:00.396]  - Number of values collected after concatenation: 1
[10:30:00.396]  - Number of values expected: 1
[10:30:00.396] Reducing values from 1 chunks ... DONE
[10:30:00.396] future_lapply() ... DONE
[10:30:00.397] future_lapply() ...
[10:30:00.397] Number of chunks: 1
[10:30:00.397] getGlobalsAndPackagesXApply() ...
[10:30:00.397]  - future.globals: TRUE
[10:30:00.399]  - globals found/used: [n=1] ‘FUN’
[10:30:00.399]  - needed namespaces: [n=0] 
[10:30:00.399] Finding globals ... DONE
[10:30:00.399]  - use_args: TRUE
[10:30:00.399]  - Getting '...' globals ...
[10:30:00.400]    - '...' content: [n=1] ‘b’
[10:30:00.400] List of 1
[10:30:00.400]  $ ...:List of 1
[10:30:00.400]   ..$ b:<environment: 0x557e075fc970> 
[10:30:00.400]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.400]  - attr(*, "where")=List of 1
[10:30:00.400]   ..$ ...:<environment: 0x557e075fd428> 
[10:30:00.400]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.400]  - attr(*, "resolved")= logi TRUE
[10:30:00.400]  - attr(*, "total_size")= num NA
[10:30:00.403]  - Getting '...' globals ... DONE
[10:30:00.403] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.403] List of 2
[10:30:00.403]  $ ...future.FUN:function (a, b)  
[10:30:00.403]  $ ...          :List of 1
[10:30:00.403]   ..$ b:<environment: 0x557e075fc970> 
[10:30:00.403]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.403]  - attr(*, "where")=List of 2
[10:30:00.403]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.403]   ..$ ...          :<environment: 0x557e075fd428> 
[10:30:00.403]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.403]  - attr(*, "resolved")= logi FALSE
[10:30:00.403]  - attr(*, "total_size")= num 1440
[10:30:00.406] Packages to be attached in all futures: [n=0] 
[10:30:00.406] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.406] Number of futures (= number of chunks): 1
[10:30:00.406] Launching 1 futures (chunks) ...
[10:30:00.407] Chunk #1 of 1 ...
[10:30:00.407]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.407]    + additional globals found: [n=0] 
[10:30:00.407]    + additional namespaces needed: [n=0] 
[10:30:00.407]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.407]  - seeds: <none>
[10:30:00.407]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.410] Created future:
[10:30:00.410] SequentialFuture:
[10:30:00.410] Label: ‘future_lapply-1’
[10:30:00.410] Expression:
[10:30:00.410] {
[10:30:00.410]     do.call(function(...) {
[10:30:00.410]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.410]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.410]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.410]             on.exit(options(oopts), add = TRUE)
[10:30:00.410]         }
[10:30:00.410]         {
[10:30:00.410]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.410]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.410]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.410]             })
[10:30:00.410]         }
[10:30:00.410]     }, args = future.call.arguments)
[10:30:00.410] }
[10:30:00.410] Lazy evaluation: FALSE
[10:30:00.410] Asynchronous evaluation: FALSE
[10:30:00.410] Local evaluation: TRUE
[10:30:00.410] Environment: R_GlobalEnv
[10:30:00.410] Capture standard output: TRUE
[10:30:00.410] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.410] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.410] Packages: <none>
[10:30:00.410] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.410] Resolved: TRUE
[10:30:00.410] Value: 120 bytes of class ‘list’
[10:30:00.410] Early signaling: FALSE
[10:30:00.410] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.410] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.411] Chunk #1 of 1 ... DONE
[10:30:00.411] Launching 1 futures (chunks) ... DONE
[10:30:00.411] Resolving 1 futures (chunks) ...
[10:30:00.411]  - Number of value chunks collected: 1
[10:30:00.412] Resolving 1 futures (chunks) ... DONE
[10:30:00.412] Reducing values from 1 chunks ...
[10:30:00.412]  - Number of values collected after concatenation: 1
[10:30:00.412]  - Number of values expected: 1
[10:30:00.412] Reducing values from 1 chunks ... DONE
[10:30:00.412] future_lapply() ... DONE
[10:30:00.412] future_lapply() ...
[10:30:00.413] Number of chunks: 1
[10:30:00.413] getGlobalsAndPackagesXApply() ...
[10:30:00.413]  - future.globals: TRUE
[10:30:00.415]  - globals found/used: [n=1] ‘FUN’
[10:30:00.415]  - needed namespaces: [n=0] 
[10:30:00.415] Finding globals ... DONE
[10:30:00.415]  - use_args: TRUE
[10:30:00.415]  - Getting '...' globals ...
[10:30:00.416]    - '...' content: [n=1] ‘b’
[10:30:00.416] List of 1
[10:30:00.416]  $ ...:List of 1
[10:30:00.416]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:00.416]   .. .. ..@ slots     :List of 4
[10:30:00.416]   .. .. .. ..$ .Data  : chr "function"
[10:30:00.416]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. ..$ target : chr "signature"
[10:30:00.416]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. ..$ defined: chr "signature"
[10:30:00.416]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. ..$ generic: chr "character"
[10:30:00.416]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. ..@ contains  :List of 3
[10:30:00.416]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.416]   .. .. ..@ virtual   : logi FALSE
[10:30:00.416]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:00.416]  list()
[10:30:00.416]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.416]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.416]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.416]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.416]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.416]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.416]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.416]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.416]   .. .. .. .. ..$ generic: chr(0) 
[10:30:00.416]   .. .. ..@ validity  : NULL
[10:30:00.416]   .. .. ..@ access    : list()
[10:30:00.416]   .. .. ..@ className : chr "MethodDefinition"
[10:30:00.416]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. ..@ subclasses:List of 7
[10:30:00.416]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.416]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.416]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.416]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.416]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.416]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.416]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.416]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.416]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.416]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.416]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.416]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.416]   .. .. ..@ versionKey:<externalptr> 
[10:30:00.416]   .. .. ..@ sealed    : logi TRUE
[10:30:00.416]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.416]  - attr(*, "where")=List of 1
[10:30:00.416]   ..$ ...:<environment: 0x557e0a802f98> 
[10:30:00.416]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.416]  - attr(*, "resolved")= logi TRUE
[10:30:00.416]  - attr(*, "total_size")= num NA
[10:30:00.466]  - Getting '...' globals ... DONE
[10:30:00.467] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.467] List of 2
[10:30:00.467]  $ ...future.FUN:function (a, b)  
[10:30:00.467]  $ ...          :List of 1
[10:30:00.467]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:00.467]   .. .. ..@ slots     :List of 4
[10:30:00.467]   .. .. .. ..$ .Data  : chr "function"
[10:30:00.467]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. ..$ target : chr "signature"
[10:30:00.467]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. ..$ defined: chr "signature"
[10:30:00.467]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. ..$ generic: chr "character"
[10:30:00.467]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. ..@ contains  :List of 3
[10:30:00.467]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.467]   .. .. ..@ virtual   : logi FALSE
[10:30:00.467]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:00.467]  list()
[10:30:00.467]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.467]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.467]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.467]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.467]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.467]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.467]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.467]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.467]   .. .. .. .. ..$ generic: chr(0) 
[10:30:00.467]   .. .. ..@ validity  : NULL
[10:30:00.467]   .. .. ..@ access    : list()
[10:30:00.467]   .. .. ..@ className : chr "MethodDefinition"
[10:30:00.467]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. ..@ subclasses:List of 7
[10:30:00.467]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.467]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.467]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.467]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.467]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.467]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.467]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.467]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.467]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.467]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.467]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.467]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.467]   .. .. ..@ versionKey:<externalptr> 
[10:30:00.467]   .. .. ..@ sealed    : logi TRUE
[10:30:00.467]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.467]  - attr(*, "where")=List of 2
[10:30:00.467]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.467]   ..$ ...          :<environment: 0x557e0a802f98> 
[10:30:00.467]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.467]  - attr(*, "resolved")= logi FALSE
[10:30:00.467]  - attr(*, "total_size")= num 312512
[10:30:00.515] Packages to be attached in all futures: [n=0] 
[10:30:00.515] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.515] Number of futures (= number of chunks): 1
[10:30:00.515] Launching 1 futures (chunks) ...
[10:30:00.515] Chunk #1 of 1 ...
[10:30:00.516]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.516]    + additional globals found: [n=0] 
[10:30:00.516]    + additional namespaces needed: [n=0] 
[10:30:00.516]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.516]  - seeds: <none>
[10:30:00.516]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.519] Created future:
[10:30:00.519] SequentialFuture:
[10:30:00.519] Label: ‘future_lapply-1’
[10:30:00.519] Expression:
[10:30:00.519] {
[10:30:00.519]     do.call(function(...) {
[10:30:00.519]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.519]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.519]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.519]             on.exit(options(oopts), add = TRUE)
[10:30:00.519]         }
[10:30:00.519]         {
[10:30:00.519]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.519]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.519]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.519]             })
[10:30:00.519]         }
[10:30:00.519]     }, args = future.call.arguments)
[10:30:00.519] }
[10:30:00.519] Lazy evaluation: FALSE
[10:30:00.519] Asynchronous evaluation: FALSE
[10:30:00.519] Local evaluation: TRUE
[10:30:00.519] Environment: R_GlobalEnv
[10:30:00.519] Capture standard output: TRUE
[10:30:00.519] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.519] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.519] Packages: <none>
[10:30:00.519] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.519] Resolved: TRUE
[10:30:00.519] Value: 112 bytes of class ‘list’
[10:30:00.519] Early signaling: FALSE
[10:30:00.519] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.519] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.520] Chunk #1 of 1 ... DONE
[10:30:00.520] Launching 1 futures (chunks) ... DONE
[10:30:00.520] Resolving 1 futures (chunks) ...
[10:30:00.521]  - Number of value chunks collected: 1
[10:30:00.521] Resolving 1 futures (chunks) ... DONE
[10:30:00.521] Reducing values from 1 chunks ...
[10:30:00.521]  - Number of values collected after concatenation: 1
[10:30:00.521]  - Number of values expected: 1
[10:30:00.521] Reducing values from 1 chunks ... DONE
[10:30:00.521] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:30:00.523] future_lapply() ...
[10:30:00.524] Number of chunks: 1
[10:30:00.524] getGlobalsAndPackagesXApply() ...
[10:30:00.524]  - future.globals: TRUE
[10:30:00.525]  - globals found/used: [n=1] ‘FUN’
[10:30:00.525]  - needed namespaces: [n=0] 
[10:30:00.525] Finding globals ... DONE
[10:30:00.526]  - use_args: TRUE
[10:30:00.526]  - Getting '...' globals ...
[10:30:00.526]    - '...' content: [n=0] 
[10:30:00.526] List of 1
[10:30:00.526]  $ ...: list()
[10:30:00.526]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.526]  - attr(*, "where")=List of 1
[10:30:00.526]   ..$ ...:<environment: 0x557e08cd3fe8> 
[10:30:00.526]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.526]  - attr(*, "resolved")= logi TRUE
[10:30:00.526]  - attr(*, "total_size")= num NA
[10:30:00.529]  - Getting '...' globals ... DONE
[10:30:00.529] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.529] List of 2
[10:30:00.529]  $ ...future.FUN:function (f)  
[10:30:00.529]  $ ...          : list()
[10:30:00.529]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.529]  - attr(*, "where")=List of 2
[10:30:00.529]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.529]   ..$ ...          :<environment: 0x557e08cd3fe8> 
[10:30:00.529]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.529]  - attr(*, "resolved")= logi FALSE
[10:30:00.529]  - attr(*, "total_size")= num 1008
[10:30:00.531] Packages to be attached in all futures: [n=0] 
[10:30:00.532] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.532] Number of futures (= number of chunks): 1
[10:30:00.532] Launching 1 futures (chunks) ...
[10:30:00.532] Chunk #1 of 1 ...
[10:30:00.532]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.534]    + additional globals found: [n=2] ‘a’, ‘b’
[10:30:00.535]    + additional namespaces needed: [n=1] ‘tools’
[10:30:00.535]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.535]  - seeds: <none>
[10:30:00.535]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:30:00.538] Created future:
[10:30:00.538] SequentialFuture:
[10:30:00.538] Label: ‘future_lapply-1’
[10:30:00.538] Expression:
[10:30:00.538] {
[10:30:00.538]     do.call(function(...) {
[10:30:00.538]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.538]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.538]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.538]             on.exit(options(oopts), add = TRUE)
[10:30:00.538]         }
[10:30:00.538]         {
[10:30:00.538]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.538]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.538]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.538]             })
[10:30:00.538]         }
[10:30:00.538]     }, args = future.call.arguments)
[10:30:00.538] }
[10:30:00.538] Lazy evaluation: FALSE
[10:30:00.538] Asynchronous evaluation: FALSE
[10:30:00.538] Local evaluation: TRUE
[10:30:00.538] Environment: R_GlobalEnv
[10:30:00.538] Capture standard output: TRUE
[10:30:00.538] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.538] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:30:00.538] Packages: 1 packages (‘tools’)
[10:30:00.538] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.538] Resolved: TRUE
[10:30:00.538] Value: 224 bytes of class ‘list’
[10:30:00.538] Early signaling: FALSE
[10:30:00.538] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.538] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.539] Chunk #1 of 1 ... DONE
[10:30:00.539] Launching 1 futures (chunks) ... DONE
[10:30:00.539] Resolving 1 futures (chunks) ...
[10:30:00.540]  - Number of value chunks collected: 1
[10:30:00.540] Resolving 1 futures (chunks) ... DONE
[10:30:00.540] Reducing values from 1 chunks ...
[10:30:00.540]  - Number of values collected after concatenation: 4
[10:30:00.540]  - Number of values expected: 4
[10:30:00.540] Reducing values from 1 chunks ... DONE
[10:30:00.540] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:30:00.543] future_lapply() ...
[10:30:00.544] Number of chunks: 1
[10:30:00.544] getGlobalsAndPackagesXApply() ...
[10:30:00.544]  - future.globals: TRUE
[10:30:00.546]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:30:00.546]  - needed namespaces: [n=0] 
[10:30:00.546] Finding globals ... DONE
[10:30:00.546]  - use_args: TRUE
[10:30:00.546]  - Getting '...' globals ...
[10:30:00.547]    - '...' content: [n=0] 
[10:30:00.547] List of 1
[10:30:00.547]  $ ...: list()
[10:30:00.547]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.547]  - attr(*, "where")=List of 1
[10:30:00.547]   ..$ ...:<environment: 0x557e0a872fb8> 
[10:30:00.547]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.547]  - attr(*, "resolved")= logi TRUE
[10:30:00.547]  - attr(*, "total_size")= num NA
[10:30:00.549]  - Getting '...' globals ... DONE
[10:30:00.550] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:30:00.550] List of 3
[10:30:00.550]  $ ...future.FUN        :function (x)  
[10:30:00.550]  $ future.call.arguments:List of 1
[10:30:00.550]   ..$ a: num 1
[10:30:00.550]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.550]  $ ...                  : list()
[10:30:00.550]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.550]  - attr(*, "where")=List of 3
[10:30:00.550]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:30:00.550]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:30:00.550]   ..$ ...                  :<environment: 0x557e0a872fb8> 
[10:30:00.550]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.550]  - attr(*, "resolved")= logi FALSE
[10:30:00.550]  - attr(*, "total_size")= num 1272
[10:30:00.555] Packages to be attached in all futures: [n=0] 
[10:30:00.555] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.556] Number of futures (= number of chunks): 1
[10:30:00.556] Launching 1 futures (chunks) ...
[10:30:00.556] Chunk #1 of 1 ...
[10:30:00.556]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.556]    + additional globals found: [n=0] 
[10:30:00.556]    + additional namespaces needed: [n=0] 
[10:30:00.556]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.556]  - seeds: <none>
[10:30:00.556]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.559] Created future:
[10:30:00.559] SequentialFuture:
[10:30:00.559] Label: ‘future_lapply-1’
[10:30:00.559] Expression:
[10:30:00.559] {
[10:30:00.559]     do.call(function(...) {
[10:30:00.559]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.559]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.559]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.559]             on.exit(options(oopts), add = TRUE)
[10:30:00.559]         }
[10:30:00.559]         {
[10:30:00.559]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.559]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.559]                 ...future.FUN(...future.X_jj)
[10:30:00.559]             })
[10:30:00.559]         }
[10:30:00.559]     }, args = future.call.arguments)
[10:30:00.559] }
[10:30:00.559] Lazy evaluation: FALSE
[10:30:00.559] Asynchronous evaluation: FALSE
[10:30:00.559] Local evaluation: TRUE
[10:30:00.559] Environment: 0x557e0a873338
[10:30:00.559] Capture standard output: TRUE
[10:30:00.559] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.559] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.559] Packages: <none>
[10:30:00.559] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.559] Resolved: TRUE
[10:30:00.559] Value: 56 bytes of class ‘list’
[10:30:00.559] Early signaling: FALSE
[10:30:00.559] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.559] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.560] Chunk #1 of 1 ... DONE
[10:30:00.560] Launching 1 futures (chunks) ... DONE
[10:30:00.560] Resolving 1 futures (chunks) ...
[10:30:00.561]  - Number of value chunks collected: 1
[10:30:00.561] Resolving 1 futures (chunks) ... DONE
[10:30:00.561] Reducing values from 1 chunks ...
[10:30:00.561]  - Number of values collected after concatenation: 1
[10:30:00.561]  - Number of values expected: 1
[10:30:00.561] Reducing values from 1 chunks ... DONE
[10:30:00.561] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:30:00.562] future_lapply() ...
[10:30:00.563] Number of chunks: 1
[10:30:00.563] getGlobalsAndPackagesXApply() ...
[10:30:00.563]  - future.globals: TRUE
[10:30:00.565]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:00.566]  - needed namespaces: [n=0] 
[10:30:00.566] Finding globals ... DONE
[10:30:00.566]  - use_args: TRUE
[10:30:00.566]  - Getting '...' globals ...
[10:30:00.566]    - '...' content: [n=0] 
[10:30:00.566] List of 1
[10:30:00.566]  $ ...: list()
[10:30:00.566]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.566]  - attr(*, "where")=List of 1
[10:30:00.566]   ..$ ...:<environment: 0x557e09670758> 
[10:30:00.566]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.566]  - attr(*, "resolved")= logi TRUE
[10:30:00.566]  - attr(*, "total_size")= num NA
[10:30:00.569]  - Getting '...' globals ... DONE
[10:30:00.569] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:00.569] List of 3
[10:30:00.569]  $ ...future.FUN:function (ii)  
[10:30:00.569]  $ a            : num 1
[10:30:00.569]  $ ...          : list()
[10:30:00.569]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.569]  - attr(*, "where")=List of 3
[10:30:00.569]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.569]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:00.569]   ..$ ...          :<environment: 0x557e09670758> 
[10:30:00.569]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.569]  - attr(*, "resolved")= logi FALSE
[10:30:00.569]  - attr(*, "total_size")= num 2984
[10:30:00.572] Packages to be attached in all futures: [n=0] 
[10:30:00.572] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.572] Number of futures (= number of chunks): 1
[10:30:00.572] Launching 1 futures (chunks) ...
[10:30:00.573] Chunk #1 of 1 ...
[10:30:00.573]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.573]    + additional globals found: [n=0] 
[10:30:00.573]    + additional namespaces needed: [n=0] 
[10:30:00.573]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.573]  - seeds: <none>
[10:30:00.573]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.576] Created future:
[10:30:00.576] SequentialFuture:
[10:30:00.576] Label: ‘future_lapply-1’
[10:30:00.576] Expression:
[10:30:00.576] {
[10:30:00.576]     do.call(function(...) {
[10:30:00.576]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.576]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.576]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.576]             on.exit(options(oopts), add = TRUE)
[10:30:00.576]         }
[10:30:00.576]         {
[10:30:00.576]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.576]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.576]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.576]             })
[10:30:00.576]         }
[10:30:00.576]     }, args = future.call.arguments)
[10:30:00.576] }
[10:30:00.576] Lazy evaluation: FALSE
[10:30:00.576] Asynchronous evaluation: FALSE
[10:30:00.576] Local evaluation: TRUE
[10:30:00.576] Environment: R_GlobalEnv
[10:30:00.576] Capture standard output: TRUE
[10:30:00.576] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.576] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:00.576] Packages: <none>
[10:30:00.576] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.576] Resolved: TRUE
[10:30:00.576] Value: 56 bytes of class ‘list’
[10:30:00.576] Early signaling: FALSE
[10:30:00.576] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.576] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.577] Chunk #1 of 1 ... DONE
[10:30:00.577] Launching 1 futures (chunks) ... DONE
[10:30:00.577] Resolving 1 futures (chunks) ...
[10:30:00.577]  - Number of value chunks collected: 1
[10:30:00.578] Resolving 1 futures (chunks) ... DONE
[10:30:00.578] Reducing values from 1 chunks ...
[10:30:00.578]  - Number of values collected after concatenation: 1
[10:30:00.578]  - Number of values expected: 1
[10:30:00.578] Reducing values from 1 chunks ... DONE
[10:30:00.578] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:30:00.578] future_lapply() ...
[10:30:00.579] Number of chunks: 1
[10:30:00.579] getGlobalsAndPackagesXApply() ...
[10:30:00.579]  - future.globals: TRUE
[10:30:00.581]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:00.581]  - needed namespaces: [n=0] 
[10:30:00.581] Finding globals ... DONE
[10:30:00.581]  - use_args: TRUE
[10:30:00.582]  - Getting '...' globals ...
[10:30:00.582]    - '...' content: [n=0] 
[10:30:00.582] List of 1
[10:30:00.582]  $ ...: list()
[10:30:00.582]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.582]  - attr(*, "where")=List of 1
[10:30:00.582]   ..$ ...:<environment: 0x557e076f0710> 
[10:30:00.582]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.582]  - attr(*, "resolved")= logi TRUE
[10:30:00.582]  - attr(*, "total_size")= num NA
[10:30:00.584]  - Getting '...' globals ... DONE
[10:30:00.585] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:00.585] List of 3
[10:30:00.585]  $ ...future.FUN:function (ii)  
[10:30:00.585]  $ a            : num 1
[10:30:00.585]  $ ...          : list()
[10:30:00.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.585]  - attr(*, "where")=List of 3
[10:30:00.585]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.585]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:00.585]   ..$ ...          :<environment: 0x557e076f0710> 
[10:30:00.585]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.585]  - attr(*, "resolved")= logi FALSE
[10:30:00.585]  - attr(*, "total_size")= num 2984
[10:30:00.588] Packages to be attached in all futures: [n=0] 
[10:30:00.588] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.588] Number of futures (= number of chunks): 1
[10:30:00.588] Launching 1 futures (chunks) ...
[10:30:00.588] Chunk #1 of 1 ...
[10:30:00.588]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.589]    + additional globals found: [n=0] 
[10:30:00.589]    + additional namespaces needed: [n=0] 
[10:30:00.589]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.589]  - seeds: <none>
[10:30:00.589]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.591] Created future:
[10:30:00.591] SequentialFuture:
[10:30:00.591] Label: ‘future_lapply-1’
[10:30:00.591] Expression:
[10:30:00.591] {
[10:30:00.591]     do.call(function(...) {
[10:30:00.591]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.591]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.591]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.591]             on.exit(options(oopts), add = TRUE)
[10:30:00.591]         }
[10:30:00.591]         {
[10:30:00.591]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.591]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.591]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.591]             })
[10:30:00.591]         }
[10:30:00.591]     }, args = future.call.arguments)
[10:30:00.591] }
[10:30:00.591] Lazy evaluation: FALSE
[10:30:00.591] Asynchronous evaluation: FALSE
[10:30:00.591] Local evaluation: TRUE
[10:30:00.591] Environment: R_GlobalEnv
[10:30:00.591] Capture standard output: TRUE
[10:30:00.591] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.591] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:00.591] Packages: <none>
[10:30:00.591] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.591] Resolved: TRUE
[10:30:00.591] Value: 56 bytes of class ‘list’
[10:30:00.591] Early signaling: FALSE
[10:30:00.591] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.591] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.592] Chunk #1 of 1 ... DONE
[10:30:00.592] Launching 1 futures (chunks) ... DONE
[10:30:00.593] Resolving 1 futures (chunks) ...
[10:30:00.593]  - Number of value chunks collected: 1
[10:30:00.593] Resolving 1 futures (chunks) ... DONE
[10:30:00.593] Reducing values from 1 chunks ...
[10:30:00.593]  - Number of values collected after concatenation: 1
[10:30:00.593]  - Number of values expected: 1
[10:30:00.593] Reducing values from 1 chunks ... DONE
[10:30:00.594] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:30:00.594] future_lapply() ...
[10:30:00.594] Number of chunks: 1
[10:30:00.594] getGlobalsAndPackagesXApply() ...
[10:30:00.594]  - future.globals: <name-value list> with names ‘42’
[10:30:00.594]  - use_args: TRUE
[10:30:00.595]  - Getting '...' globals ...
[10:30:00.595]    - '...' content: [n=0] 
[10:30:00.595] List of 1
[10:30:00.595]  $ ...: list()
[10:30:00.595]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.595]  - attr(*, "where")=List of 1
[10:30:00.595]   ..$ ...:<environment: 0x557e0ab03448> 
[10:30:00.595]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.595]  - attr(*, "resolved")= logi TRUE
[10:30:00.595]  - attr(*, "total_size")= num NA
[10:30:00.597]  - Getting '...' globals ... DONE
[10:30:00.598] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:30:00.598] List of 3
[10:30:00.598]  $ a            : num 42
[10:30:00.598]  $ ...future.FUN:function (x)  
[10:30:00.598]  $ ...          : list()
[10:30:00.598]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.598]  - attr(*, "where")=List of 3
[10:30:00.598]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:00.598]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:30:00.598]   ..$ ...          :<environment: 0x557e0ab03448> 
[10:30:00.598]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.598]  - attr(*, "resolved")= logi FALSE
[10:30:00.598]  - attr(*, "total_size")= num NA
[10:30:00.603] Packages to be attached in all futures: [n=0] 
[10:30:00.603] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.603] Number of futures (= number of chunks): 1
[10:30:00.603] Launching 1 futures (chunks) ...
[10:30:00.603] Chunk #1 of 1 ...
[10:30:00.603]  - seeds: <none>
[10:30:00.603]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.606] Created future:
[10:30:00.606] SequentialFuture:
[10:30:00.606] Label: ‘future_lapply-1’
[10:30:00.606] Expression:
[10:30:00.606] {
[10:30:00.606]     do.call(function(...) {
[10:30:00.606]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.606]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.606]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.606]             on.exit(options(oopts), add = TRUE)
[10:30:00.606]         }
[10:30:00.606]         {
[10:30:00.606]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.606]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.606]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.606]             })
[10:30:00.606]         }
[10:30:00.606]     }, args = future.call.arguments)
[10:30:00.606] }
[10:30:00.606] Lazy evaluation: FALSE
[10:30:00.606] Asynchronous evaluation: FALSE
[10:30:00.606] Local evaluation: TRUE
[10:30:00.606] Environment: R_GlobalEnv
[10:30:00.606] Capture standard output: TRUE
[10:30:00.606] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.606] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:00.606] Packages: <none>
[10:30:00.606] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.606] Resolved: TRUE
[10:30:00.606] Value: 56 bytes of class ‘list’
[10:30:00.606] Early signaling: FALSE
[10:30:00.606] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.606] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:30:00.607] Chunk #1 of 1 ... DONE
[10:30:00.607] Launching 1 futures (chunks) ... DONE
[10:30:00.608] Resolving 1 futures (chunks) ...
[10:30:00.608]  - Number of value chunks collected: 1
[10:30:00.608] Resolving 1 futures (chunks) ... DONE
[10:30:00.608] Reducing values from 1 chunks ...
[10:30:00.608]  - Number of values collected after concatenation: 1
[10:30:00.608]  - Number of values expected: 1
[10:30:00.608] Reducing values from 1 chunks ... DONE
[10:30:00.608] future_lapply() ... DONE
List of 1
 $ : num 42
[10:30:00.616] future_lapply() ...
[10:30:00.621] Number of chunks: 2
[10:30:00.621] getGlobalsAndPackagesXApply() ...
[10:30:00.621]  - future.globals: TRUE
[10:30:00.626]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:30:00.626]  - needed namespaces: [n=0] 
[10:30:00.626] Finding globals ... DONE
[10:30:00.626]  - use_args: TRUE
[10:30:00.626]  - Getting '...' globals ...
[10:30:00.627]    - '...' content: [n=0] 
[10:30:00.627] List of 1
[10:30:00.627]  $ ...: list()
[10:30:00.627]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.627]  - attr(*, "where")=List of 1
[10:30:00.627]   ..$ ...:<environment: 0x557e09264108> 
[10:30:00.627]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.627]  - attr(*, "resolved")= logi TRUE
[10:30:00.627]  - attr(*, "total_size")= num NA
[10:30:00.629]  - Getting '...' globals ... DONE
[10:30:00.630] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:30:00.630] List of 6
[10:30:00.630]  $ ...future.FUN:function (i)  
[10:30:00.630]  $ caller       :function (a, b, FUN = call_my_add)  
[10:30:00.630]  $ args         :List of 1
[10:30:00.630]   ..$ FUN:function (a, b)  
[10:30:00.630]  $ call_my_add  :function (a, b)  
[10:30:00.630]  $ my_add       :function (a, b)  
[10:30:00.630]  $ ...          : list()
[10:30:00.630]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.630]  - attr(*, "where")=List of 6
[10:30:00.630]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.630]   ..$ caller       :<environment: R_EmptyEnv> 
[10:30:00.630]   ..$ args         :<environment: R_EmptyEnv> 
[10:30:00.630]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:30:00.630]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:30:00.630]   ..$ ...          :<environment: 0x557e09264108> 
[10:30:00.630]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.630]  - attr(*, "resolved")= logi FALSE
[10:30:00.630]  - attr(*, "total_size")= num 24120
[10:30:00.634] Packages to be attached in all futures: [n=0] 
[10:30:00.634] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.635] Number of futures (= number of chunks): 2
[10:30:00.635] Launching 2 futures (chunks) ...
[10:30:00.635] Chunk #1 of 2 ...
[10:30:00.635]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.635]    + additional globals found: [n=0] 
[10:30:00.635]    + additional namespaces needed: [n=0] 
[10:30:00.635]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.636]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:00.636]  - seeds: <none>
[10:30:00.636]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.645] Created future:
[10:30:00.645] MulticoreFuture:
[10:30:00.645] Label: ‘future_lapply-1’
[10:30:00.645] Expression:
[10:30:00.645] {
[10:30:00.645]     do.call(function(...) {
[10:30:00.645]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.645]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.645]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.645]             on.exit(options(oopts), add = TRUE)
[10:30:00.645]         }
[10:30:00.645]         {
[10:30:00.645]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.645]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.645]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.645]             })
[10:30:00.645]         }
[10:30:00.645]     }, args = future.call.arguments)
[10:30:00.645] }
[10:30:00.645] Lazy evaluation: FALSE
[10:30:00.645] Asynchronous evaluation: TRUE
[10:30:00.645] Local evaluation: TRUE
[10:30:00.645] Environment: 0x557e094f5278
[10:30:00.645] Capture standard output: TRUE
[10:30:00.645] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.645] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:30:00.645] Packages: <none>
[10:30:00.645] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.645] Resolved: TRUE
[10:30:00.645] Value: <not collected>
[10:30:00.645] Conditions captured: <none>
[10:30:00.645] Early signaling: FALSE
[10:30:00.645] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.645] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.654] Chunk #1 of 2 ... DONE
[10:30:00.654] Chunk #2 of 2 ...
[10:30:00.655]  - Finding globals in 'X' for chunk #2 ...
[10:30:00.655]    + additional globals found: [n=0] 
[10:30:00.655]    + additional namespaces needed: [n=0] 
[10:30:00.656]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:00.656]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:00.656]  - seeds: <none>
[10:30:00.656]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.665] Created future:
[10:30:00.666] MulticoreFuture:
[10:30:00.666] Label: ‘future_lapply-2’
[10:30:00.666] Expression:
[10:30:00.666] {
[10:30:00.666]     do.call(function(...) {
[10:30:00.666]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.666]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.666]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.666]             on.exit(options(oopts), add = TRUE)
[10:30:00.666]         }
[10:30:00.666]         {
[10:30:00.666]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.666]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.666]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.666]             })
[10:30:00.666]         }
[10:30:00.666]     }, args = future.call.arguments)
[10:30:00.666] }
[10:30:00.666] Lazy evaluation: FALSE
[10:30:00.666] Asynchronous evaluation: TRUE
[10:30:00.666] Local evaluation: TRUE
[10:30:00.666] Environment: 0x557e094f5278
[10:30:00.666] Capture standard output: TRUE
[10:30:00.666] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.666] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:30:00.666] Packages: <none>
[10:30:00.666] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.666] Resolved: TRUE
[10:30:00.666] Value: <not collected>
[10:30:00.666] Conditions captured: <none>
[10:30:00.666] Early signaling: FALSE
[10:30:00.666] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.666] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.674] Chunk #2 of 2 ... DONE
[10:30:00.674] Launching 2 futures (chunks) ... DONE
[10:30:00.675] Resolving 2 futures (chunks) ...
[10:30:00.679]  - Number of value chunks collected: 2
[10:30:00.679] Resolving 2 futures (chunks) ... DONE
[10:30:00.679] Reducing values from 2 chunks ...
[10:30:00.679]  - Number of values collected after concatenation: 3
[10:30:00.680]  - Number of values expected: 3
[10:30:00.680] Reducing values from 2 chunks ... DONE
[10:30:00.680] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:30:00.680] future_lapply() ...
[10:30:00.689] Number of chunks: 1
[10:30:00.689] getGlobalsAndPackagesXApply() ...
[10:30:00.689]  - future.globals: TRUE
[10:30:00.693]  - globals found/used: [n=1] ‘FUN’
[10:30:00.693]  - needed namespaces: [n=0] 
[10:30:00.693] Finding globals ... DONE
[10:30:00.693]  - use_args: TRUE
[10:30:00.693]  - Getting '...' globals ...
[10:30:00.694]    - '...' content: [n=1] ‘what’
[10:30:00.694] List of 1
[10:30:00.694]  $ ...:List of 1
[10:30:00.694]   ..$ what:function (x)  
[10:30:00.694]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.694]  - attr(*, "where")=List of 1
[10:30:00.694]   ..$ ...:<environment: 0x557e0acdcbf8> 
[10:30:00.694]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.694]  - attr(*, "resolved")= logi TRUE
[10:30:00.694]  - attr(*, "total_size")= num NA
[10:30:00.698]  - Getting '...' globals ... DONE
[10:30:00.698] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.698] List of 2
[10:30:00.698]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:00.698]  $ ...          :List of 1
[10:30:00.698]   ..$ what:function (x)  
[10:30:00.698]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.698]  - attr(*, "where")=List of 2
[10:30:00.698]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.698]   ..$ ...          :<environment: 0x557e0acdcbf8> 
[10:30:00.698]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.698]  - attr(*, "resolved")= logi FALSE
[10:30:00.698]  - attr(*, "total_size")= num 12192
[10:30:00.701] Packages to be attached in all futures: [n=0] 
[10:30:00.702] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.702] Number of futures (= number of chunks): 1
[10:30:00.702] Launching 1 futures (chunks) ...
[10:30:00.702] Chunk #1 of 1 ...
[10:30:00.702]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.703]    + additional globals found: [n=0] 
[10:30:00.703]    + additional namespaces needed: [n=0] 
[10:30:00.703]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.703]  - seeds: <none>
[10:30:00.703]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.711] Created future:
[10:30:00.712] MulticoreFuture:
[10:30:00.712] Label: ‘future_lapply-1’
[10:30:00.712] Expression:
[10:30:00.712] {
[10:30:00.712]     do.call(function(...) {
[10:30:00.712]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.712]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.712]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.712]             on.exit(options(oopts), add = TRUE)
[10:30:00.712]         }
[10:30:00.712]         {
[10:30:00.712]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.712]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.712]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.712]             })
[10:30:00.712]         }
[10:30:00.712]     }, args = future.call.arguments)
[10:30:00.712] }
[10:30:00.712] Lazy evaluation: FALSE
[10:30:00.712] Asynchronous evaluation: TRUE
[10:30:00.712] Local evaluation: TRUE
[10:30:00.712] Environment: R_GlobalEnv
[10:30:00.712] Capture standard output: TRUE
[10:30:00.712] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.712] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.712] Packages: <none>
[10:30:00.712] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.712] Resolved: TRUE
[10:30:00.712] Value: <not collected>
[10:30:00.712] Conditions captured: <none>
[10:30:00.712] Early signaling: FALSE
[10:30:00.712] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.712] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.721] Chunk #1 of 1 ... DONE
[10:30:00.721] Launching 1 futures (chunks) ... DONE
[10:30:00.721] Resolving 1 futures (chunks) ...
[10:30:00.723]  - Number of value chunks collected: 1
[10:30:00.723] Resolving 1 futures (chunks) ... DONE
[10:30:00.723] Reducing values from 1 chunks ...
[10:30:00.723]  - Number of values collected after concatenation: 1
[10:30:00.723]  - Number of values expected: 1
[10:30:00.724] Reducing values from 1 chunks ... DONE
[10:30:00.724] future_lapply() ... DONE
[10:30:00.724] future_lapply() ...
[10:30:00.729] Number of chunks: 1
[10:30:00.730] getGlobalsAndPackagesXApply() ...
[10:30:00.730]  - future.globals: TRUE
[10:30:00.733]  - globals found/used: [n=1] ‘FUN’
[10:30:00.734]  - needed namespaces: [n=0] 
[10:30:00.734] Finding globals ... DONE
[10:30:00.734]  - use_args: TRUE
[10:30:00.734]  - Getting '...' globals ...
[10:30:00.734]    - '...' content: [n=1] ‘what’
[10:30:00.734] List of 1
[10:30:00.734]  $ ...:List of 1
[10:30:00.734]   ..$ what:function (...)  
[10:30:00.734]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.734]  - attr(*, "where")=List of 1
[10:30:00.734]   ..$ ...:<environment: 0x557e07815b98> 
[10:30:00.734]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.734]  - attr(*, "resolved")= logi TRUE
[10:30:00.734]  - attr(*, "total_size")= num NA
[10:30:00.738]  - Getting '...' globals ... DONE
[10:30:00.739] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.739] List of 2
[10:30:00.739]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:00.739]  $ ...          :List of 1
[10:30:00.739]   ..$ what:function (...)  
[10:30:00.739]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.739]  - attr(*, "where")=List of 2
[10:30:00.739]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.739]   ..$ ...          :<environment: 0x557e07815b98> 
[10:30:00.739]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.739]  - attr(*, "resolved")= logi FALSE
[10:30:00.739]  - attr(*, "total_size")= num 13352
[10:30:00.745] Packages to be attached in all futures: [n=0] 
[10:30:00.745] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.745] Number of futures (= number of chunks): 1
[10:30:00.746] Launching 1 futures (chunks) ...
[10:30:00.746] Chunk #1 of 1 ...
[10:30:00.746]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.746]    + additional globals found: [n=0] 
[10:30:00.746]    + additional namespaces needed: [n=0] 
[10:30:00.747]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.747]  - seeds: <none>
[10:30:00.747]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.757] Created future:
[10:30:00.757] MulticoreFuture:
[10:30:00.757] Label: ‘future_lapply-1’
[10:30:00.757] Expression:
[10:30:00.757] {
[10:30:00.757]     do.call(function(...) {
[10:30:00.757]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.757]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.757]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.757]             on.exit(options(oopts), add = TRUE)
[10:30:00.757]         }
[10:30:00.757]         {
[10:30:00.757]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.757]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.757]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.757]             })
[10:30:00.757]         }
[10:30:00.757]     }, args = future.call.arguments)
[10:30:00.757] }
[10:30:00.757] Lazy evaluation: FALSE
[10:30:00.757] Asynchronous evaluation: TRUE
[10:30:00.757] Local evaluation: TRUE
[10:30:00.757] Environment: R_GlobalEnv
[10:30:00.757] Capture standard output: TRUE
[10:30:00.757] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.757] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.757] Packages: <none>
[10:30:00.757] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.757] Resolved: TRUE
[10:30:00.757] Value: <not collected>
[10:30:00.757] Conditions captured: <none>
[10:30:00.757] Early signaling: FALSE
[10:30:00.757] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.757] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.767] Chunk #1 of 1 ... DONE
[10:30:00.768] Launching 1 futures (chunks) ... DONE
[10:30:00.768] Resolving 1 futures (chunks) ...
[10:30:00.770]  - Number of value chunks collected: 1
[10:30:00.770] Resolving 1 futures (chunks) ... DONE
[10:30:00.770] Reducing values from 1 chunks ...
[10:30:00.770]  - Number of values collected after concatenation: 1
[10:30:00.770]  - Number of values expected: 1
[10:30:00.770] Reducing values from 1 chunks ... DONE
[10:30:00.771] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:30:00.771] future_lapply() ...
[10:30:00.776] Number of chunks: 1
[10:30:00.776] getGlobalsAndPackagesXApply() ...
[10:30:00.776]  - future.globals: TRUE
[10:30:00.778]  - globals found/used: [n=1] ‘FUN’
[10:30:00.779]  - needed namespaces: [n=0] 
[10:30:00.779] Finding globals ... DONE
[10:30:00.779]  - use_args: TRUE
[10:30:00.779]  - Getting '...' globals ...
[10:30:00.779]    - '...' content: [n=1] ‘b’
[10:30:00.780] List of 1
[10:30:00.780]  $ ...:List of 1
[10:30:00.780]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:00.780]   .. ..$ a: int [1:2] 1 2
[10:30:00.780]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.780]  - attr(*, "where")=List of 1
[10:30:00.780]   ..$ ...:<environment: 0x557e0aa29de8> 
[10:30:00.780]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.780]  - attr(*, "resolved")= logi TRUE
[10:30:00.780]  - attr(*, "total_size")= num NA
[10:30:00.786]  - Getting '...' globals ... DONE
[10:30:00.787] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.787] List of 2
[10:30:00.787]  $ ...future.FUN:function (a, b)  
[10:30:00.787]  $ ...          :List of 1
[10:30:00.787]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:00.787]   .. ..$ a: int [1:2] 1 2
[10:30:00.787]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.787]  - attr(*, "where")=List of 2
[10:30:00.787]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.787]   ..$ ...          :<environment: 0x557e0aa29de8> 
[10:30:00.787]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.787]  - attr(*, "resolved")= logi FALSE
[10:30:00.787]  - attr(*, "total_size")= num 1440
[10:30:00.791] Packages to be attached in all futures: [n=0] 
[10:30:00.791] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.791] Number of futures (= number of chunks): 1
[10:30:00.792] Launching 1 futures (chunks) ...
[10:30:00.792] Chunk #1 of 1 ...
[10:30:00.792]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.792]    + additional globals found: [n=0] 
[10:30:00.792]    + additional namespaces needed: [n=0] 
[10:30:00.792]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.793]  - seeds: <none>
[10:30:00.793]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.801] Created future:
[10:30:00.801] MulticoreFuture:
[10:30:00.801] Label: ‘future_lapply-1’
[10:30:00.801] Expression:
[10:30:00.801] {
[10:30:00.801]     do.call(function(...) {
[10:30:00.801]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.801]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.801]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.801]             on.exit(options(oopts), add = TRUE)
[10:30:00.801]         }
[10:30:00.801]         {
[10:30:00.801]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.801]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.801]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.801]             })
[10:30:00.801]         }
[10:30:00.801]     }, args = future.call.arguments)
[10:30:00.801] }
[10:30:00.801] Lazy evaluation: FALSE
[10:30:00.801] Asynchronous evaluation: TRUE
[10:30:00.801] Local evaluation: TRUE
[10:30:00.801] Environment: R_GlobalEnv
[10:30:00.801] Capture standard output: TRUE
[10:30:00.801] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.801] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.801] Packages: <none>
[10:30:00.801] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.801] Resolved: TRUE
[10:30:00.801] Value: <not collected>
[10:30:00.801] Conditions captured: <none>
[10:30:00.801] Early signaling: FALSE
[10:30:00.801] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.801] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.810] Chunk #1 of 1 ... DONE
[10:30:00.810] Launching 1 futures (chunks) ... DONE
[10:30:00.810] Resolving 1 futures (chunks) ...
[10:30:00.812]  - Number of value chunks collected: 1
[10:30:00.812] Resolving 1 futures (chunks) ... DONE
[10:30:00.812] Reducing values from 1 chunks ...
[10:30:00.812]  - Number of values collected after concatenation: 1
[10:30:00.812]  - Number of values expected: 1
[10:30:00.813] Reducing values from 1 chunks ... DONE
[10:30:00.813] future_lapply() ... DONE
[10:30:00.813] future_lapply() ...
[10:30:00.818] Number of chunks: 1
[10:30:00.818] getGlobalsAndPackagesXApply() ...
[10:30:00.818]  - future.globals: TRUE
[10:30:00.820]  - globals found/used: [n=1] ‘FUN’
[10:30:00.821]  - needed namespaces: [n=0] 
[10:30:00.821] Finding globals ... DONE
[10:30:00.821]  - use_args: TRUE
[10:30:00.821]  - Getting '...' globals ...
[10:30:00.821]    - '...' content: [n=1] ‘b’
[10:30:00.822] List of 1
[10:30:00.822]  $ ...:List of 1
[10:30:00.822]   ..$ b:<environment: 0x557e0939e108> 
[10:30:00.822]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.822]  - attr(*, "where")=List of 1
[10:30:00.822]   ..$ ...:<environment: 0x557e0939ebf8> 
[10:30:00.822]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.822]  - attr(*, "resolved")= logi TRUE
[10:30:00.822]  - attr(*, "total_size")= num NA
[10:30:00.825]  - Getting '...' globals ... DONE
[10:30:00.826] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.826] List of 2
[10:30:00.826]  $ ...future.FUN:function (a, b)  
[10:30:00.826]  $ ...          :List of 1
[10:30:00.826]   ..$ b:<environment: 0x557e0939e108> 
[10:30:00.826]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.826]  - attr(*, "where")=List of 2
[10:30:00.826]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.826]   ..$ ...          :<environment: 0x557e0939ebf8> 
[10:30:00.826]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.826]  - attr(*, "resolved")= logi FALSE
[10:30:00.826]  - attr(*, "total_size")= num 1440
[10:30:00.830] Packages to be attached in all futures: [n=0] 
[10:30:00.830] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.830] Number of futures (= number of chunks): 1
[10:30:00.830] Launching 1 futures (chunks) ...
[10:30:00.830] Chunk #1 of 1 ...
[10:30:00.830]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.831]    + additional globals found: [n=0] 
[10:30:00.831]    + additional namespaces needed: [n=0] 
[10:30:00.831]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.831]  - seeds: <none>
[10:30:00.831]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.840] Created future:
[10:30:00.840] MulticoreFuture:
[10:30:00.840] Label: ‘future_lapply-1’
[10:30:00.840] Expression:
[10:30:00.840] {
[10:30:00.840]     do.call(function(...) {
[10:30:00.840]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.840]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.840]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.840]             on.exit(options(oopts), add = TRUE)
[10:30:00.840]         }
[10:30:00.840]         {
[10:30:00.840]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.840]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.840]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.840]             })
[10:30:00.840]         }
[10:30:00.840]     }, args = future.call.arguments)
[10:30:00.840] }
[10:30:00.840] Lazy evaluation: FALSE
[10:30:00.840] Asynchronous evaluation: TRUE
[10:30:00.840] Local evaluation: TRUE
[10:30:00.840] Environment: R_GlobalEnv
[10:30:00.840] Capture standard output: TRUE
[10:30:00.840] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.840] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.840] Packages: <none>
[10:30:00.840] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.840] Resolved: TRUE
[10:30:00.840] Value: <not collected>
[10:30:00.840] Conditions captured: <none>
[10:30:00.840] Early signaling: FALSE
[10:30:00.840] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.840] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.849] Chunk #1 of 1 ... DONE
[10:30:00.849] Launching 1 futures (chunks) ... DONE
[10:30:00.849] Resolving 1 futures (chunks) ...
[10:30:00.851]  - Number of value chunks collected: 1
[10:30:00.851] Resolving 1 futures (chunks) ... DONE
[10:30:00.851] Reducing values from 1 chunks ...
[10:30:00.851]  - Number of values collected after concatenation: 1
[10:30:00.851]  - Number of values expected: 1
[10:30:00.851] Reducing values from 1 chunks ... DONE
[10:30:00.852] future_lapply() ... DONE
[10:30:00.852] future_lapply() ...
[10:30:00.856] Number of chunks: 1
[10:30:00.856] getGlobalsAndPackagesXApply() ...
[10:30:00.857]  - future.globals: TRUE
[10:30:00.859]  - globals found/used: [n=1] ‘FUN’
[10:30:00.859]  - needed namespaces: [n=0] 
[10:30:00.860] Finding globals ... DONE
[10:30:00.860]  - use_args: TRUE
[10:30:00.860]  - Getting '...' globals ...
[10:30:00.860]    - '...' content: [n=1] ‘b’
[10:30:00.860] List of 1
[10:30:00.860]  $ ...:List of 1
[10:30:00.860]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:00.860]   .. .. ..@ slots     :List of 4
[10:30:00.860]   .. .. .. ..$ .Data  : chr "function"
[10:30:00.860]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. ..$ target : chr "signature"
[10:30:00.860]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. ..$ defined: chr "signature"
[10:30:00.860]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. ..$ generic: chr "character"
[10:30:00.860]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. ..@ contains  :List of 3
[10:30:00.860]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.860]   .. .. ..@ virtual   : logi FALSE
[10:30:00.860]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:00.860]  list()
[10:30:00.860]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.860]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.860]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.860]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.860]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.860]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.860]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.860]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.860]   .. .. .. .. ..$ generic: chr(0) 
[10:30:00.860]   .. .. ..@ validity  : NULL
[10:30:00.860]   .. .. ..@ access    : list()
[10:30:00.860]   .. .. ..@ className : chr "MethodDefinition"
[10:30:00.860]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. ..@ subclasses:List of 7
[10:30:00.860]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.860]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.860]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.860]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.860]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.860]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.860]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.860]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.860]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.860]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.860]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.860]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.860]   .. .. ..@ versionKey:<externalptr> 
[10:30:00.860]   .. .. ..@ sealed    : logi TRUE
[10:30:00.860]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.860]  - attr(*, "where")=List of 1
[10:30:00.860]   ..$ ...:<environment: 0x557e0a413a38> 
[10:30:00.860]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.860]  - attr(*, "resolved")= logi TRUE
[10:30:00.860]  - attr(*, "total_size")= num NA
[10:30:00.919]  - Getting '...' globals ... DONE
[10:30:00.919] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:00.919] List of 2
[10:30:00.919]  $ ...future.FUN:function (a, b)  
[10:30:00.919]  $ ...          :List of 1
[10:30:00.919]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:00.919]   .. .. ..@ slots     :List of 4
[10:30:00.919]   .. .. .. ..$ .Data  : chr "function"
[10:30:00.919]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. ..$ target : chr "signature"
[10:30:00.919]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. ..$ defined: chr "signature"
[10:30:00.919]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. ..$ generic: chr "character"
[10:30:00.919]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. ..@ contains  :List of 3
[10:30:00.919]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.919]   .. .. ..@ virtual   : logi FALSE
[10:30:00.919]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:00.919]  list()
[10:30:00.919]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.919]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.919]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.919]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.919]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:00.919]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:00.919]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:00.919]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:00.919]   .. .. .. .. ..$ generic: chr(0) 
[10:30:00.919]   .. .. ..@ validity  : NULL
[10:30:00.919]   .. .. ..@ access    : list()
[10:30:00.919]   .. .. ..@ className : chr "MethodDefinition"
[10:30:00.919]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. ..@ subclasses:List of 7
[10:30:00.919]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 1
[10:30:00.919]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.919]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.919]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:00.919]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:00.919]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:00.919]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:00.919]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:00.919]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:00.919]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:00.919]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:00.919]   .. .. .. .. .. ..@ distance  : num 2
[10:30:00.919]   .. .. ..@ versionKey:<externalptr> 
[10:30:00.919]   .. .. ..@ sealed    : logi TRUE
[10:30:00.919]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.919]  - attr(*, "where")=List of 2
[10:30:00.919]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:00.919]   ..$ ...          :<environment: 0x557e0a413a38> 
[10:30:00.919]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.919]  - attr(*, "resolved")= logi FALSE
[10:30:00.919]  - attr(*, "total_size")= num 312512
[10:30:00.967] Packages to be attached in all futures: [n=0] 
[10:30:00.967] getGlobalsAndPackagesXApply() ... DONE
[10:30:00.968] Number of futures (= number of chunks): 1
[10:30:00.968] Launching 1 futures (chunks) ...
[10:30:00.968] Chunk #1 of 1 ...
[10:30:00.968]  - Finding globals in 'X' for chunk #1 ...
[10:30:00.968]    + additional globals found: [n=0] 
[10:30:00.968]    + additional namespaces needed: [n=0] 
[10:30:00.968]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:00.968]  - seeds: <none>
[10:30:00.969]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:00.976] Created future:
[10:30:00.976] MulticoreFuture:
[10:30:00.976] Label: ‘future_lapply-1’
[10:30:00.976] Expression:
[10:30:00.976] {
[10:30:00.976]     do.call(function(...) {
[10:30:00.976]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:00.976]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:00.976]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:00.976]             on.exit(options(oopts), add = TRUE)
[10:30:00.976]         }
[10:30:00.976]         {
[10:30:00.976]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:00.976]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:00.976]                 ...future.FUN(...future.X_jj, ...)
[10:30:00.976]             })
[10:30:00.976]         }
[10:30:00.976]     }, args = future.call.arguments)
[10:30:00.976] }
[10:30:00.976] Lazy evaluation: FALSE
[10:30:00.976] Asynchronous evaluation: TRUE
[10:30:00.976] Local evaluation: TRUE
[10:30:00.976] Environment: R_GlobalEnv
[10:30:00.976] Capture standard output: TRUE
[10:30:00.976] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:00.976] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:00.976] Packages: <none>
[10:30:00.976] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:00.976] Resolved: TRUE
[10:30:00.976] Value: <not collected>
[10:30:00.976] Conditions captured: <none>
[10:30:00.976] Early signaling: FALSE
[10:30:00.976] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:00.976] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:00.985] Chunk #1 of 1 ... DONE
[10:30:00.985] Launching 1 futures (chunks) ... DONE
[10:30:00.985] Resolving 1 futures (chunks) ...
[10:30:00.987]  - Number of value chunks collected: 1
[10:30:00.987] Resolving 1 futures (chunks) ... DONE
[10:30:00.987] Reducing values from 1 chunks ...
[10:30:00.987]  - Number of values collected after concatenation: 1
[10:30:00.987]  - Number of values expected: 1
[10:30:00.987] Reducing values from 1 chunks ... DONE
[10:30:00.987] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:30:00.990] future_lapply() ...
[10:30:00.995] Number of chunks: 2
[10:30:00.995] getGlobalsAndPackagesXApply() ...
[10:30:00.995]  - future.globals: TRUE
[10:30:00.997]  - globals found/used: [n=1] ‘FUN’
[10:30:00.997]  - needed namespaces: [n=0] 
[10:30:00.997] Finding globals ... DONE
[10:30:00.997]  - use_args: TRUE
[10:30:00.997]  - Getting '...' globals ...
[10:30:00.998]    - '...' content: [n=0] 
[10:30:00.998] List of 1
[10:30:00.998]  $ ...: list()
[10:30:00.998]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:00.998]  - attr(*, "where")=List of 1
[10:30:00.998]   ..$ ...:<environment: 0x557e07c222a8> 
[10:30:00.998]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:00.998]  - attr(*, "resolved")= logi TRUE
[10:30:00.998]  - attr(*, "total_size")= num NA
[10:30:01.001]  - Getting '...' globals ... DONE
[10:30:01.001] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:01.001] List of 2
[10:30:01.001]  $ ...future.FUN:function (f)  
[10:30:01.001]  $ ...          : list()
[10:30:01.001]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.001]  - attr(*, "where")=List of 2
[10:30:01.001]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.001]   ..$ ...          :<environment: 0x557e07c222a8> 
[10:30:01.001]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.001]  - attr(*, "resolved")= logi FALSE
[10:30:01.001]  - attr(*, "total_size")= num 1008
[10:30:01.005] Packages to be attached in all futures: [n=0] 
[10:30:01.005] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.005] Number of futures (= number of chunks): 2
[10:30:01.005] Launching 2 futures (chunks) ...
[10:30:01.005] Chunk #1 of 2 ...
[10:30:01.005]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.007]    + additional globals found: [n=2] ‘a’, ‘b’
[10:30:01.007]    + additional namespaces needed: [n=0] 
[10:30:01.008]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.008]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:01.008]  - seeds: <none>
[10:30:01.008]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:30:01.015] Created future:
[10:30:01.015] MulticoreFuture:
[10:30:01.015] Label: ‘future_lapply-1’
[10:30:01.015] Expression:
[10:30:01.015] {
[10:30:01.015]     do.call(function(...) {
[10:30:01.015]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.015]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.015]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.015]             on.exit(options(oopts), add = TRUE)
[10:30:01.015]         }
[10:30:01.015]         {
[10:30:01.015]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.015]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.015]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.015]             })
[10:30:01.015]         }
[10:30:01.015]     }, args = future.call.arguments)
[10:30:01.015] }
[10:30:01.015] Lazy evaluation: FALSE
[10:30:01.015] Asynchronous evaluation: TRUE
[10:30:01.015] Local evaluation: TRUE
[10:30:01.015] Environment: R_GlobalEnv
[10:30:01.015] Capture standard output: TRUE
[10:30:01.015] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.015] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:30:01.015] Packages: <none>
[10:30:01.015] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.015] Resolved: TRUE
[10:30:01.015] Value: <not collected>
[10:30:01.015] Conditions captured: <none>
[10:30:01.015] Early signaling: FALSE
[10:30:01.015] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.015] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.024] Chunk #1 of 2 ... DONE
[10:30:01.024] Chunk #2 of 2 ...
[10:30:01.024]  - Finding globals in 'X' for chunk #2 ...
[10:30:01.027]    + additional globals found: [n=2] ‘a’, ‘b’
[10:30:01.027]    + additional namespaces needed: [n=1] ‘tools’
[10:30:01.028]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:01.028]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:01.028]  - seeds: <none>
[10:30:01.028]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:30:01.037] Created future:
[10:30:01.037] MulticoreFuture:
[10:30:01.037] Label: ‘future_lapply-2’
[10:30:01.037] Expression:
[10:30:01.037] {
[10:30:01.037]     do.call(function(...) {
[10:30:01.037]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.037]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.037]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.037]             on.exit(options(oopts), add = TRUE)
[10:30:01.037]         }
[10:30:01.037]         {
[10:30:01.037]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.037]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.037]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.037]             })
[10:30:01.037]         }
[10:30:01.037]     }, args = future.call.arguments)
[10:30:01.037] }
[10:30:01.037] Lazy evaluation: FALSE
[10:30:01.037] Asynchronous evaluation: TRUE
[10:30:01.037] Local evaluation: TRUE
[10:30:01.037] Environment: R_GlobalEnv
[10:30:01.037] Capture standard output: TRUE
[10:30:01.037] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.037] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:30:01.037] Packages: 1 packages (‘tools’)
[10:30:01.037] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.037] Resolved: TRUE
[10:30:01.037] Value: <not collected>
[10:30:01.037] Conditions captured: <none>
[10:30:01.037] Early signaling: FALSE
[10:30:01.037] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.037] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.049] Chunk #2 of 2 ... DONE
[10:30:01.050] Launching 2 futures (chunks) ... DONE
[10:30:01.050] Resolving 2 futures (chunks) ...
[10:30:01.055]  - Number of value chunks collected: 2
[10:30:01.055] Resolving 2 futures (chunks) ... DONE
[10:30:01.055] Reducing values from 2 chunks ...
[10:30:01.055]  - Number of values collected after concatenation: 4
[10:30:01.055]  - Number of values expected: 4
[10:30:01.055] Reducing values from 2 chunks ... DONE
[10:30:01.055] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:30:01.059] future_lapply() ...
[10:30:01.063] Number of chunks: 1
[10:30:01.064] getGlobalsAndPackagesXApply() ...
[10:30:01.064]  - future.globals: TRUE
[10:30:01.066]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:30:01.067]  - needed namespaces: [n=0] 
[10:30:01.067] Finding globals ... DONE
[10:30:01.067]  - use_args: TRUE
[10:30:01.067]  - Getting '...' globals ...
[10:30:01.067]    - '...' content: [n=0] 
[10:30:01.068] List of 1
[10:30:01.068]  $ ...: list()
[10:30:01.068]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.068]  - attr(*, "where")=List of 1
[10:30:01.068]   ..$ ...:<environment: 0x557e09a97db8> 
[10:30:01.068]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.068]  - attr(*, "resolved")= logi TRUE
[10:30:01.068]  - attr(*, "total_size")= num NA
[10:30:01.070]  - Getting '...' globals ... DONE
[10:30:01.071] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:30:01.071] List of 3
[10:30:01.071]  $ ...future.FUN        :function (x)  
[10:30:01.071]  $ future.call.arguments:List of 1
[10:30:01.071]   ..$ a: num 1
[10:30:01.071]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.071]  $ ...                  : list()
[10:30:01.071]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.071]  - attr(*, "where")=List of 3
[10:30:01.071]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:30:01.071]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:30:01.071]   ..$ ...                  :<environment: 0x557e09a97db8> 
[10:30:01.071]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.071]  - attr(*, "resolved")= logi FALSE
[10:30:01.071]  - attr(*, "total_size")= num 1272
[10:30:01.075] Packages to be attached in all futures: [n=0] 
[10:30:01.075] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.076] Number of futures (= number of chunks): 1
[10:30:01.076] Launching 1 futures (chunks) ...
[10:30:01.076] Chunk #1 of 1 ...
[10:30:01.076]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.076]    + additional globals found: [n=0] 
[10:30:01.076]    + additional namespaces needed: [n=0] 
[10:30:01.077]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.077]  - seeds: <none>
[10:30:01.077]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.084] Created future:
[10:30:01.085] MulticoreFuture:
[10:30:01.085] Label: ‘future_lapply-1’
[10:30:01.085] Expression:
[10:30:01.085] {
[10:30:01.085]     do.call(function(...) {
[10:30:01.085]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.085]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.085]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.085]             on.exit(options(oopts), add = TRUE)
[10:30:01.085]         }
[10:30:01.085]         {
[10:30:01.085]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.085]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.085]                 ...future.FUN(...future.X_jj)
[10:30:01.085]             })
[10:30:01.085]         }
[10:30:01.085]     }, args = future.call.arguments)
[10:30:01.085] }
[10:30:01.085] Lazy evaluation: FALSE
[10:30:01.085] Asynchronous evaluation: TRUE
[10:30:01.085] Local evaluation: TRUE
[10:30:01.085] Environment: 0x557e09a97a38
[10:30:01.085] Capture standard output: TRUE
[10:30:01.085] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.085] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:01.085] Packages: <none>
[10:30:01.085] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.085] Resolved: TRUE
[10:30:01.085] Value: <not collected>
[10:30:01.085] Conditions captured: <none>
[10:30:01.085] Early signaling: FALSE
[10:30:01.085] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.085] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.093] Chunk #1 of 1 ... DONE
[10:30:01.094] Launching 1 futures (chunks) ... DONE
[10:30:01.094] Resolving 1 futures (chunks) ...
[10:30:01.095]  - Number of value chunks collected: 1
[10:30:01.096] Resolving 1 futures (chunks) ... DONE
[10:30:01.096] Reducing values from 1 chunks ...
[10:30:01.096]  - Number of values collected after concatenation: 1
[10:30:01.096]  - Number of values expected: 1
[10:30:01.096] Reducing values from 1 chunks ... DONE
[10:30:01.096] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:30:01.098] future_lapply() ...
[10:30:01.103] Number of chunks: 1
[10:30:01.103] getGlobalsAndPackagesXApply() ...
[10:30:01.104]  - future.globals: TRUE
[10:30:01.106]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:01.106]  - needed namespaces: [n=0] 
[10:30:01.107] Finding globals ... DONE
[10:30:01.107]  - use_args: TRUE
[10:30:01.107]  - Getting '...' globals ...
[10:30:01.107]    - '...' content: [n=0] 
[10:30:01.107] List of 1
[10:30:01.107]  $ ...: list()
[10:30:01.107]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.107]  - attr(*, "where")=List of 1
[10:30:01.107]   ..$ ...:<environment: 0x557e07b2dc48> 
[10:30:01.107]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.107]  - attr(*, "resolved")= logi TRUE
[10:30:01.107]  - attr(*, "total_size")= num NA
[10:30:01.110]  - Getting '...' globals ... DONE
[10:30:01.111] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:01.111] List of 3
[10:30:01.111]  $ ...future.FUN:function (ii)  
[10:30:01.111]  $ a            : num 1
[10:30:01.111]  $ ...          : list()
[10:30:01.111]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.111]  - attr(*, "where")=List of 3
[10:30:01.111]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.111]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:01.111]   ..$ ...          :<environment: 0x557e07b2dc48> 
[10:30:01.111]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.111]  - attr(*, "resolved")= logi FALSE
[10:30:01.111]  - attr(*, "total_size")= num 2984
[10:30:01.115] Packages to be attached in all futures: [n=0] 
[10:30:01.115] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.115] Number of futures (= number of chunks): 1
[10:30:01.115] Launching 1 futures (chunks) ...
[10:30:01.115] Chunk #1 of 1 ...
[10:30:01.115]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.116]    + additional globals found: [n=0] 
[10:30:01.116]    + additional namespaces needed: [n=0] 
[10:30:01.116]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.116]  - seeds: <none>
[10:30:01.116]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.124] Created future:
[10:30:01.124] MulticoreFuture:
[10:30:01.124] Label: ‘future_lapply-1’
[10:30:01.124] Expression:
[10:30:01.124] {
[10:30:01.124]     do.call(function(...) {
[10:30:01.124]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.124]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.124]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.124]             on.exit(options(oopts), add = TRUE)
[10:30:01.124]         }
[10:30:01.124]         {
[10:30:01.124]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.124]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.124]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.124]             })
[10:30:01.124]         }
[10:30:01.124]     }, args = future.call.arguments)
[10:30:01.124] }
[10:30:01.124] Lazy evaluation: FALSE
[10:30:01.124] Asynchronous evaluation: TRUE
[10:30:01.124] Local evaluation: TRUE
[10:30:01.124] Environment: R_GlobalEnv
[10:30:01.124] Capture standard output: TRUE
[10:30:01.124] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.124] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:01.124] Packages: <none>
[10:30:01.124] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.124] Resolved: TRUE
[10:30:01.124] Value: <not collected>
[10:30:01.124] Conditions captured: <none>
[10:30:01.124] Early signaling: FALSE
[10:30:01.124] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.124] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.133] Chunk #1 of 1 ... DONE
[10:30:01.133] Launching 1 futures (chunks) ... DONE
[10:30:01.133] Resolving 1 futures (chunks) ...
[10:30:01.134]  - Number of value chunks collected: 1
[10:30:01.135] Resolving 1 futures (chunks) ... DONE
[10:30:01.135] Reducing values from 1 chunks ...
[10:30:01.135]  - Number of values collected after concatenation: 1
[10:30:01.135]  - Number of values expected: 1
[10:30:01.135] Reducing values from 1 chunks ... DONE
[10:30:01.135] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:30:01.136] future_lapply() ...
[10:30:01.143] Number of chunks: 1
[10:30:01.143] getGlobalsAndPackagesXApply() ...
[10:30:01.143]  - future.globals: TRUE
[10:30:01.146]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:01.146]  - needed namespaces: [n=0] 
[10:30:01.147] Finding globals ... DONE
[10:30:01.147]  - use_args: TRUE
[10:30:01.147]  - Getting '...' globals ...
[10:30:01.147]    - '...' content: [n=0] 
[10:30:01.147] List of 1
[10:30:01.147]  $ ...: list()
[10:30:01.147]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.147]  - attr(*, "where")=List of 1
[10:30:01.147]   ..$ ...:<environment: 0x557e0abfcf90> 
[10:30:01.147]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.147]  - attr(*, "resolved")= logi TRUE
[10:30:01.147]  - attr(*, "total_size")= num NA
[10:30:01.151]  - Getting '...' globals ... DONE
[10:30:01.151] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:01.151] List of 3
[10:30:01.151]  $ ...future.FUN:function (ii)  
[10:30:01.151]  $ a            : num 1
[10:30:01.151]  $ ...          : list()
[10:30:01.151]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.151]  - attr(*, "where")=List of 3
[10:30:01.151]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.151]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:01.151]   ..$ ...          :<environment: 0x557e0abfcf90> 
[10:30:01.151]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.151]  - attr(*, "resolved")= logi FALSE
[10:30:01.151]  - attr(*, "total_size")= num 2984
[10:30:01.155] Packages to be attached in all futures: [n=0] 
[10:30:01.155] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.155] Number of futures (= number of chunks): 1
[10:30:01.155] Launching 1 futures (chunks) ...
[10:30:01.156] Chunk #1 of 1 ...
[10:30:01.156]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.156]    + additional globals found: [n=0] 
[10:30:01.156]    + additional namespaces needed: [n=0] 
[10:30:01.156]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.156]  - seeds: <none>
[10:30:01.157]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.165] Created future:
[10:30:01.166] MulticoreFuture:
[10:30:01.166] Label: ‘future_lapply-1’
[10:30:01.166] Expression:
[10:30:01.166] {
[10:30:01.166]     do.call(function(...) {
[10:30:01.166]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.166]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.166]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.166]             on.exit(options(oopts), add = TRUE)
[10:30:01.166]         }
[10:30:01.166]         {
[10:30:01.166]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.166]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.166]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.166]             })
[10:30:01.166]         }
[10:30:01.166]     }, args = future.call.arguments)
[10:30:01.166] }
[10:30:01.166] Lazy evaluation: FALSE
[10:30:01.166] Asynchronous evaluation: TRUE
[10:30:01.166] Local evaluation: TRUE
[10:30:01.166] Environment: R_GlobalEnv
[10:30:01.166] Capture standard output: TRUE
[10:30:01.166] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.166] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:01.166] Packages: <none>
[10:30:01.166] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.166] Resolved: TRUE
[10:30:01.166] Value: <not collected>
[10:30:01.166] Conditions captured: <none>
[10:30:01.166] Early signaling: FALSE
[10:30:01.166] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.166] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.174] Chunk #1 of 1 ... DONE
[10:30:01.174] Launching 1 futures (chunks) ... DONE
[10:30:01.174] Resolving 1 futures (chunks) ...
[10:30:01.176]  - Number of value chunks collected: 1
[10:30:01.176] Resolving 1 futures (chunks) ... DONE
[10:30:01.176] Reducing values from 1 chunks ...
[10:30:01.176]  - Number of values collected after concatenation: 1
[10:30:01.176]  - Number of values expected: 1
[10:30:01.177] Reducing values from 1 chunks ... DONE
[10:30:01.177] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:30:01.177] future_lapply() ...
[10:30:01.181] Number of chunks: 1
[10:30:01.182] getGlobalsAndPackagesXApply() ...
[10:30:01.182]  - future.globals: <name-value list> with names ‘42’
[10:30:01.182]  - use_args: TRUE
[10:30:01.182]  - Getting '...' globals ...
[10:30:01.183]    - '...' content: [n=0] 
[10:30:01.183] List of 1
[10:30:01.183]  $ ...: list()
[10:30:01.183]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.183]  - attr(*, "where")=List of 1
[10:30:01.183]   ..$ ...:<environment: 0x557e08cb5c90> 
[10:30:01.183]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.183]  - attr(*, "resolved")= logi TRUE
[10:30:01.183]  - attr(*, "total_size")= num NA
[10:30:01.187]  - Getting '...' globals ... DONE
[10:30:01.187] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:30:01.187] List of 3
[10:30:01.187]  $ a            : num 42
[10:30:01.187]  $ ...future.FUN:function (x)  
[10:30:01.187]  $ ...          : list()
[10:30:01.187]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.187]  - attr(*, "where")=List of 3
[10:30:01.187]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:01.187]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:30:01.187]   ..$ ...          :<environment: 0x557e08cb5c90> 
[10:30:01.187]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.187]  - attr(*, "resolved")= logi FALSE
[10:30:01.187]  - attr(*, "total_size")= num NA
[10:30:01.193] Packages to be attached in all futures: [n=0] 
[10:30:01.193] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.193] Number of futures (= number of chunks): 1
[10:30:01.193] Launching 1 futures (chunks) ...
[10:30:01.193] Chunk #1 of 1 ...
[10:30:01.194]  - seeds: <none>
[10:30:01.194]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.204] Created future:
[10:30:01.204] MulticoreFuture:
[10:30:01.204] Label: ‘future_lapply-1’
[10:30:01.204] Expression:
[10:30:01.204] {
[10:30:01.204]     do.call(function(...) {
[10:30:01.204]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.204]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.204]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.204]             on.exit(options(oopts), add = TRUE)
[10:30:01.204]         }
[10:30:01.204]         {
[10:30:01.204]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.204]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.204]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.204]             })
[10:30:01.204]         }
[10:30:01.204]     }, args = future.call.arguments)
[10:30:01.204] }
[10:30:01.204] Lazy evaluation: FALSE
[10:30:01.204] Asynchronous evaluation: TRUE
[10:30:01.204] Local evaluation: TRUE
[10:30:01.204] Environment: R_GlobalEnv
[10:30:01.204] Capture standard output: TRUE
[10:30:01.204] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.204] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:01.204] Packages: <none>
[10:30:01.204] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.204] Resolved: TRUE
[10:30:01.204] Value: <not collected>
[10:30:01.204] Conditions captured: <none>
[10:30:01.204] Early signaling: FALSE
[10:30:01.204] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.204] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.213] Chunk #1 of 1 ... DONE
[10:30:01.213] Launching 1 futures (chunks) ... DONE
[10:30:01.213] Resolving 1 futures (chunks) ...
[10:30:01.215]  - Number of value chunks collected: 1
[10:30:01.215] Resolving 1 futures (chunks) ... DONE
[10:30:01.215] Reducing values from 1 chunks ...
[10:30:01.215]  - Number of values collected after concatenation: 1
[10:30:01.216]  - Number of values expected: 1
[10:30:01.216] Reducing values from 1 chunks ... DONE
[10:30:01.216] future_lapply() ... DONE
List of 1
 $ : num 42
[10:30:01.609] future_lapply() ...
[10:30:01.613] Number of chunks: 2
[10:30:01.614] getGlobalsAndPackagesXApply() ...
[10:30:01.614]  - future.globals: TRUE
[10:30:01.621]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:30:01.622]  - needed namespaces: [n=0] 
[10:30:01.622] Finding globals ... DONE
[10:30:01.622]  - use_args: TRUE
[10:30:01.622]  - Getting '...' globals ...
[10:30:01.622]    - '...' content: [n=0] 
[10:30:01.623] List of 1
[10:30:01.623]  $ ...: list()
[10:30:01.623]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.623]  - attr(*, "where")=List of 1
[10:30:01.623]   ..$ ...:<environment: 0x557e0aaff7c8> 
[10:30:01.623]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.623]  - attr(*, "resolved")= logi TRUE
[10:30:01.623]  - attr(*, "total_size")= num NA
[10:30:01.626]  - Getting '...' globals ... DONE
[10:30:01.626] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:30:01.626] List of 6
[10:30:01.626]  $ ...future.FUN:function (i)  
[10:30:01.626]  $ caller       :function (a, b, FUN = call_my_add)  
[10:30:01.626]  $ args         :List of 1
[10:30:01.626]   ..$ FUN:function (a, b)  
[10:30:01.626]  $ call_my_add  :function (a, b)  
[10:30:01.626]  $ my_add       :function (a, b)  
[10:30:01.626]  $ ...          : list()
[10:30:01.626]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.626]  - attr(*, "where")=List of 6
[10:30:01.626]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.626]   ..$ caller       :<environment: R_EmptyEnv> 
[10:30:01.626]   ..$ args         :<environment: R_EmptyEnv> 
[10:30:01.626]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:30:01.626]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:30:01.626]   ..$ ...          :<environment: 0x557e0aaff7c8> 
[10:30:01.626]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.626]  - attr(*, "resolved")= logi FALSE
[10:30:01.626]  - attr(*, "total_size")= num 24120
[10:30:01.631] Packages to be attached in all futures: [n=0] 
[10:30:01.631] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.632] Number of futures (= number of chunks): 2
[10:30:01.632] Launching 2 futures (chunks) ...
[10:30:01.632] Chunk #1 of 2 ...
[10:30:01.632]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.632]    + additional globals found: [n=0] 
[10:30:01.632]    + additional namespaces needed: [n=0] 
[10:30:01.633]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.633]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:01.633]  - seeds: <none>
[10:30:01.633]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.695] Created future:
[10:30:01.696] MultisessionFuture:
[10:30:01.696] Label: ‘future_lapply-1’
[10:30:01.696] Expression:
[10:30:01.696] {
[10:30:01.696]     do.call(function(...) {
[10:30:01.696]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.696]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.696]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.696]             on.exit(options(oopts), add = TRUE)
[10:30:01.696]         }
[10:30:01.696]         {
[10:30:01.696]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.696]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.696]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.696]             })
[10:30:01.696]         }
[10:30:01.696]     }, args = future.call.arguments)
[10:30:01.696] }
[10:30:01.696] Lazy evaluation: FALSE
[10:30:01.696] Asynchronous evaluation: TRUE
[10:30:01.696] Local evaluation: TRUE
[10:30:01.696] Environment: 0x557e0aaffc98
[10:30:01.696] Capture standard output: TRUE
[10:30:01.696] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.696] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:30:01.696] Packages: <none>
[10:30:01.696] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.696] Resolved: FALSE
[10:30:01.696] Value: <not collected>
[10:30:01.696] Conditions captured: <none>
[10:30:01.696] Early signaling: FALSE
[10:30:01.696] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.696] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.708] Chunk #1 of 2 ... DONE
[10:30:01.708] Chunk #2 of 2 ...
[10:30:01.708]  - Finding globals in 'X' for chunk #2 ...
[10:30:01.709]    + additional globals found: [n=0] 
[10:30:01.709]    + additional namespaces needed: [n=0] 
[10:30:01.709]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:01.709]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:01.709]  - seeds: <none>
[10:30:01.709]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.779] Created future:
[10:30:01.780] MultisessionFuture:
[10:30:01.780] Label: ‘future_lapply-2’
[10:30:01.780] Expression:
[10:30:01.780] {
[10:30:01.780]     do.call(function(...) {
[10:30:01.780]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.780]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.780]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.780]             on.exit(options(oopts), add = TRUE)
[10:30:01.780]         }
[10:30:01.780]         {
[10:30:01.780]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.780]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.780]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.780]             })
[10:30:01.780]         }
[10:30:01.780]     }, args = future.call.arguments)
[10:30:01.780] }
[10:30:01.780] Lazy evaluation: FALSE
[10:30:01.780] Asynchronous evaluation: TRUE
[10:30:01.780] Local evaluation: TRUE
[10:30:01.780] Environment: 0x557e0aaffc98
[10:30:01.780] Capture standard output: TRUE
[10:30:01.780] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.780] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:30:01.780] Packages: <none>
[10:30:01.780] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.780] Resolved: FALSE
[10:30:01.780] Value: <not collected>
[10:30:01.780] Conditions captured: <none>
[10:30:01.780] Early signaling: FALSE
[10:30:01.780] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.780] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.792] Chunk #2 of 2 ... DONE
[10:30:01.792] Launching 2 futures (chunks) ... DONE
[10:30:01.792] Resolving 2 futures (chunks) ...
[10:30:01.861]  - Number of value chunks collected: 2
[10:30:01.861] Resolving 2 futures (chunks) ... DONE
[10:30:01.861] Reducing values from 2 chunks ...
[10:30:01.861]  - Number of values collected after concatenation: 3
[10:30:01.861]  - Number of values expected: 3
[10:30:01.861] Reducing values from 2 chunks ... DONE
[10:30:01.861] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:30:01.862] future_lapply() ...
[10:30:01.866] Number of chunks: 1
[10:30:01.867] getGlobalsAndPackagesXApply() ...
[10:30:01.867]  - future.globals: TRUE
[10:30:01.869]  - globals found/used: [n=1] ‘FUN’
[10:30:01.870]  - needed namespaces: [n=0] 
[10:30:01.870] Finding globals ... DONE
[10:30:01.870]  - use_args: TRUE
[10:30:01.870]  - Getting '...' globals ...
[10:30:01.870]    - '...' content: [n=1] ‘what’
[10:30:01.870] List of 1
[10:30:01.870]  $ ...:List of 1
[10:30:01.870]   ..$ what:function (x)  
[10:30:01.870]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.870]  - attr(*, "where")=List of 1
[10:30:01.870]   ..$ ...:<environment: 0x557e0a56a980> 
[10:30:01.870]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.870]  - attr(*, "resolved")= logi TRUE
[10:30:01.870]  - attr(*, "total_size")= num NA
[10:30:01.873]  - Getting '...' globals ... DONE
[10:30:01.873] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:01.874] List of 2
[10:30:01.874]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:01.874]  $ ...          :List of 1
[10:30:01.874]   ..$ what:function (x)  
[10:30:01.874]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.874]  - attr(*, "where")=List of 2
[10:30:01.874]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.874]   ..$ ...          :<environment: 0x557e0a56a980> 
[10:30:01.874]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.874]  - attr(*, "resolved")= logi FALSE
[10:30:01.874]  - attr(*, "total_size")= num 12192
[10:30:01.887] Packages to be attached in all futures: [n=0] 
[10:30:01.887] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.887] Number of futures (= number of chunks): 1
[10:30:01.887] Launching 1 futures (chunks) ...
[10:30:01.887] Chunk #1 of 1 ...
[10:30:01.887]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.888]    + additional globals found: [n=0] 
[10:30:01.888]    + additional namespaces needed: [n=0] 
[10:30:01.888]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.888]  - seeds: <none>
[10:30:01.888]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.906] Created future:
[10:30:01.906] MultisessionFuture:
[10:30:01.906] Label: ‘future_lapply-1’
[10:30:01.906] Expression:
[10:30:01.906] {
[10:30:01.906]     do.call(function(...) {
[10:30:01.906]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.906]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.906]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.906]             on.exit(options(oopts), add = TRUE)
[10:30:01.906]         }
[10:30:01.906]         {
[10:30:01.906]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.906]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.906]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.906]             })
[10:30:01.906]         }
[10:30:01.906]     }, args = future.call.arguments)
[10:30:01.906] }
[10:30:01.906] Lazy evaluation: FALSE
[10:30:01.906] Asynchronous evaluation: TRUE
[10:30:01.906] Local evaluation: TRUE
[10:30:01.906] Environment: R_GlobalEnv
[10:30:01.906] Capture standard output: TRUE
[10:30:01.906] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.906] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:01.906] Packages: <none>
[10:30:01.906] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.906] Resolved: FALSE
[10:30:01.906] Value: <not collected>
[10:30:01.906] Conditions captured: <none>
[10:30:01.906] Early signaling: FALSE
[10:30:01.906] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.906] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:01.917] Chunk #1 of 1 ... DONE
[10:30:01.918] Launching 1 futures (chunks) ... DONE
[10:30:01.918] Resolving 1 futures (chunks) ...
[10:30:01.960]  - Number of value chunks collected: 1
[10:30:01.960] Resolving 1 futures (chunks) ... DONE
[10:30:01.960] Reducing values from 1 chunks ...
[10:30:01.960]  - Number of values collected after concatenation: 1
[10:30:01.960]  - Number of values expected: 1
[10:30:01.961] Reducing values from 1 chunks ... DONE
[10:30:01.961] future_lapply() ... DONE
[10:30:01.961] future_lapply() ...
[10:30:01.966] Number of chunks: 1
[10:30:01.966] getGlobalsAndPackagesXApply() ...
[10:30:01.966]  - future.globals: TRUE
[10:30:01.969]  - globals found/used: [n=1] ‘FUN’
[10:30:01.969]  - needed namespaces: [n=0] 
[10:30:01.969] Finding globals ... DONE
[10:30:01.969]  - use_args: TRUE
[10:30:01.969]  - Getting '...' globals ...
[10:30:01.970]    - '...' content: [n=1] ‘what’
[10:30:01.970] List of 1
[10:30:01.970]  $ ...:List of 1
[10:30:01.970]   ..$ what:function (...)  
[10:30:01.970]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.970]  - attr(*, "where")=List of 1
[10:30:01.970]   ..$ ...:<environment: 0x557e093047e8> 
[10:30:01.970]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.970]  - attr(*, "resolved")= logi TRUE
[10:30:01.970]  - attr(*, "total_size")= num NA
[10:30:01.973]  - Getting '...' globals ... DONE
[10:30:01.973] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:01.973] List of 2
[10:30:01.973]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:30:01.973]  $ ...          :List of 1
[10:30:01.973]   ..$ what:function (...)  
[10:30:01.973]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:01.973]  - attr(*, "where")=List of 2
[10:30:01.973]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:01.973]   ..$ ...          :<environment: 0x557e093047e8> 
[10:30:01.973]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:01.973]  - attr(*, "resolved")= logi FALSE
[10:30:01.973]  - attr(*, "total_size")= num 13352
[10:30:01.976] Packages to be attached in all futures: [n=0] 
[10:30:01.976] getGlobalsAndPackagesXApply() ... DONE
[10:30:01.976] Number of futures (= number of chunks): 1
[10:30:01.977] Launching 1 futures (chunks) ...
[10:30:01.977] Chunk #1 of 1 ...
[10:30:01.977]  - Finding globals in 'X' for chunk #1 ...
[10:30:01.977]    + additional globals found: [n=0] 
[10:30:01.977]    + additional namespaces needed: [n=0] 
[10:30:01.977]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:01.977]  - seeds: <none>
[10:30:01.978]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:01.995] Created future:
[10:30:01.995] MultisessionFuture:
[10:30:01.995] Label: ‘future_lapply-1’
[10:30:01.995] Expression:
[10:30:01.995] {
[10:30:01.995]     do.call(function(...) {
[10:30:01.995]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:01.995]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:01.995]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:01.995]             on.exit(options(oopts), add = TRUE)
[10:30:01.995]         }
[10:30:01.995]         {
[10:30:01.995]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:01.995]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:01.995]                 ...future.FUN(...future.X_jj, ...)
[10:30:01.995]             })
[10:30:01.995]         }
[10:30:01.995]     }, args = future.call.arguments)
[10:30:01.995] }
[10:30:01.995] Lazy evaluation: FALSE
[10:30:01.995] Asynchronous evaluation: TRUE
[10:30:01.995] Local evaluation: TRUE
[10:30:01.995] Environment: R_GlobalEnv
[10:30:01.995] Capture standard output: TRUE
[10:30:01.995] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:01.995] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:01.995] Packages: <none>
[10:30:01.995] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:01.995] Resolved: FALSE
[10:30:01.995] Value: <not collected>
[10:30:01.995] Conditions captured: <none>
[10:30:01.995] Early signaling: FALSE
[10:30:01.995] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:01.995] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.007] Chunk #1 of 1 ... DONE
[10:30:02.007] Launching 1 futures (chunks) ... DONE
[10:30:02.007] Resolving 1 futures (chunks) ...
[10:30:02.039]  - Number of value chunks collected: 1
[10:30:02.039] Resolving 1 futures (chunks) ... DONE
[10:30:02.039] Reducing values from 1 chunks ...
[10:30:02.039]  - Number of values collected after concatenation: 1
[10:30:02.039]  - Number of values expected: 1
[10:30:02.040] Reducing values from 1 chunks ... DONE
[10:30:02.040] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:30:02.040] future_lapply() ...
[10:30:02.044] Number of chunks: 1
[10:30:02.044] getGlobalsAndPackagesXApply() ...
[10:30:02.044]  - future.globals: TRUE
[10:30:02.046]  - globals found/used: [n=1] ‘FUN’
[10:30:02.046]  - needed namespaces: [n=0] 
[10:30:02.046] Finding globals ... DONE
[10:30:02.046]  - use_args: TRUE
[10:30:02.046]  - Getting '...' globals ...
[10:30:02.047]    - '...' content: [n=1] ‘b’
[10:30:02.047] List of 1
[10:30:02.047]  $ ...:List of 1
[10:30:02.047]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:02.047]   .. ..$ a: int [1:2] 1 2
[10:30:02.047]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.047]  - attr(*, "where")=List of 1
[10:30:02.047]   ..$ ...:<environment: 0x557e0a7642f8> 
[10:30:02.047]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.047]  - attr(*, "resolved")= logi TRUE
[10:30:02.047]  - attr(*, "total_size")= num NA
[10:30:02.050]  - Getting '...' globals ... DONE
[10:30:02.051] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.051] List of 2
[10:30:02.051]  $ ...future.FUN:function (a, b)  
[10:30:02.051]  $ ...          :List of 1
[10:30:02.051]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:30:02.051]   .. ..$ a: int [1:2] 1 2
[10:30:02.051]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.051]  - attr(*, "where")=List of 2
[10:30:02.051]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.051]   ..$ ...          :<environment: 0x557e0a7642f8> 
[10:30:02.051]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.051]  - attr(*, "resolved")= logi FALSE
[10:30:02.051]  - attr(*, "total_size")= num 1440
[10:30:02.054] Packages to be attached in all futures: [n=0] 
[10:30:02.054] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.054] Number of futures (= number of chunks): 1
[10:30:02.055] Launching 1 futures (chunks) ...
[10:30:02.055] Chunk #1 of 1 ...
[10:30:02.055]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.055]    + additional globals found: [n=0] 
[10:30:02.055]    + additional namespaces needed: [n=0] 
[10:30:02.055]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.057]  - seeds: <none>
[10:30:02.057]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.075] Created future:
[10:30:02.076] MultisessionFuture:
[10:30:02.076] Label: ‘future_lapply-1’
[10:30:02.076] Expression:
[10:30:02.076] {
[10:30:02.076]     do.call(function(...) {
[10:30:02.076]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.076]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.076]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.076]             on.exit(options(oopts), add = TRUE)
[10:30:02.076]         }
[10:30:02.076]         {
[10:30:02.076]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.076]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.076]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.076]             })
[10:30:02.076]         }
[10:30:02.076]     }, args = future.call.arguments)
[10:30:02.076] }
[10:30:02.076] Lazy evaluation: FALSE
[10:30:02.076] Asynchronous evaluation: TRUE
[10:30:02.076] Local evaluation: TRUE
[10:30:02.076] Environment: R_GlobalEnv
[10:30:02.076] Capture standard output: TRUE
[10:30:02.076] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.076] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.076] Packages: <none>
[10:30:02.076] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.076] Resolved: FALSE
[10:30:02.076] Value: <not collected>
[10:30:02.076] Conditions captured: <none>
[10:30:02.076] Early signaling: FALSE
[10:30:02.076] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.076] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.087] Chunk #1 of 1 ... DONE
[10:30:02.088] Launching 1 futures (chunks) ... DONE
[10:30:02.088] Resolving 1 futures (chunks) ...
[10:30:02.119]  - Number of value chunks collected: 1
[10:30:02.119] Resolving 1 futures (chunks) ... DONE
[10:30:02.119] Reducing values from 1 chunks ...
[10:30:02.119]  - Number of values collected after concatenation: 1
[10:30:02.119]  - Number of values expected: 1
[10:30:02.120] Reducing values from 1 chunks ... DONE
[10:30:02.120] future_lapply() ... DONE
[10:30:02.120] future_lapply() ...
[10:30:02.124] Number of chunks: 1
[10:30:02.124] getGlobalsAndPackagesXApply() ...
[10:30:02.124]  - future.globals: TRUE
[10:30:02.126]  - globals found/used: [n=1] ‘FUN’
[10:30:02.126]  - needed namespaces: [n=0] 
[10:30:02.127] Finding globals ... DONE
[10:30:02.127]  - use_args: TRUE
[10:30:02.127]  - Getting '...' globals ...
[10:30:02.127]    - '...' content: [n=1] ‘b’
[10:30:02.127] List of 1
[10:30:02.127]  $ ...:List of 1
[10:30:02.127]   ..$ b:<environment: 0x557e0963ed98> 
[10:30:02.127]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.127]  - attr(*, "where")=List of 1
[10:30:02.127]   ..$ ...:<environment: 0x557e0963fa48> 
[10:30:02.127]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.127]  - attr(*, "resolved")= logi TRUE
[10:30:02.127]  - attr(*, "total_size")= num NA
[10:30:02.130]  - Getting '...' globals ... DONE
[10:30:02.130] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.131] List of 2
[10:30:02.131]  $ ...future.FUN:function (a, b)  
[10:30:02.131]  $ ...          :List of 1
[10:30:02.131]   ..$ b:<environment: 0x557e0963ed98> 
[10:30:02.131]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.131]  - attr(*, "where")=List of 2
[10:30:02.131]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.131]   ..$ ...          :<environment: 0x557e0963fa48> 
[10:30:02.131]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.131]  - attr(*, "resolved")= logi FALSE
[10:30:02.131]  - attr(*, "total_size")= num 1440
[10:30:02.134] Packages to be attached in all futures: [n=0] 
[10:30:02.134] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.134] Number of futures (= number of chunks): 1
[10:30:02.134] Launching 1 futures (chunks) ...
[10:30:02.134] Chunk #1 of 1 ...
[10:30:02.134]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.134]    + additional globals found: [n=0] 
[10:30:02.135]    + additional namespaces needed: [n=0] 
[10:30:02.135]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.135]  - seeds: <none>
[10:30:02.135]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.154] Created future:
[10:30:02.154] MultisessionFuture:
[10:30:02.154] Label: ‘future_lapply-1’
[10:30:02.154] Expression:
[10:30:02.154] {
[10:30:02.154]     do.call(function(...) {
[10:30:02.154]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.154]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.154]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.154]             on.exit(options(oopts), add = TRUE)
[10:30:02.154]         }
[10:30:02.154]         {
[10:30:02.154]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.154]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.154]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.154]             })
[10:30:02.154]         }
[10:30:02.154]     }, args = future.call.arguments)
[10:30:02.154] }
[10:30:02.154] Lazy evaluation: FALSE
[10:30:02.154] Asynchronous evaluation: TRUE
[10:30:02.154] Local evaluation: TRUE
[10:30:02.154] Environment: R_GlobalEnv
[10:30:02.154] Capture standard output: TRUE
[10:30:02.154] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.154] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.154] Packages: <none>
[10:30:02.154] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.154] Resolved: FALSE
[10:30:02.154] Value: <not collected>
[10:30:02.154] Conditions captured: <none>
[10:30:02.154] Early signaling: FALSE
[10:30:02.154] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.154] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.166] Chunk #1 of 1 ... DONE
[10:30:02.166] Launching 1 futures (chunks) ... DONE
[10:30:02.166] Resolving 1 futures (chunks) ...
[10:30:02.209]  - Number of value chunks collected: 1
[10:30:02.209] Resolving 1 futures (chunks) ... DONE
[10:30:02.209] Reducing values from 1 chunks ...
[10:30:02.209]  - Number of values collected after concatenation: 1
[10:30:02.209]  - Number of values expected: 1
[10:30:02.209] Reducing values from 1 chunks ... DONE
[10:30:02.209] future_lapply() ... DONE
[10:30:02.209] future_lapply() ...
[10:30:02.214] Number of chunks: 1
[10:30:02.214] getGlobalsAndPackagesXApply() ...
[10:30:02.214]  - future.globals: TRUE
[10:30:02.216]  - globals found/used: [n=1] ‘FUN’
[10:30:02.216]  - needed namespaces: [n=0] 
[10:30:02.216] Finding globals ... DONE
[10:30:02.216]  - use_args: TRUE
[10:30:02.216]  - Getting '...' globals ...
[10:30:02.217]    - '...' content: [n=1] ‘b’
[10:30:02.217] List of 1
[10:30:02.217]  $ ...:List of 1
[10:30:02.217]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:02.217]   .. .. ..@ slots     :List of 4
[10:30:02.217]   .. .. .. ..$ .Data  : chr "function"
[10:30:02.217]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. ..$ target : chr "signature"
[10:30:02.217]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. ..$ defined: chr "signature"
[10:30:02.217]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. ..$ generic: chr "character"
[10:30:02.217]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. ..@ contains  :List of 3
[10:30:02.217]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.217]   .. .. ..@ virtual   : logi FALSE
[10:30:02.217]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:02.217]  list()
[10:30:02.217]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:02.217]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:02.217]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:02.217]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:02.217]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:02.217]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:02.217]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:02.217]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:02.217]   .. .. .. .. ..$ generic: chr(0) 
[10:30:02.217]   .. .. ..@ validity  : NULL
[10:30:02.217]   .. .. ..@ access    : list()
[10:30:02.217]   .. .. ..@ className : chr "MethodDefinition"
[10:30:02.217]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. ..@ subclasses:List of 7
[10:30:02.217]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.217]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.217]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.217]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.217]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.217]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.217]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.217]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.217]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:02.217]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.217]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.217]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.217]   .. .. ..@ versionKey:<externalptr> 
[10:30:02.217]   .. .. ..@ sealed    : logi TRUE
[10:30:02.217]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.217]  - attr(*, "where")=List of 1
[10:30:02.217]   ..$ ...:<environment: 0x557e09456380> 
[10:30:02.217]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.217]  - attr(*, "resolved")= logi TRUE
[10:30:02.217]  - attr(*, "total_size")= num NA
[10:30:02.266]  - Getting '...' globals ... DONE
[10:30:02.266] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.266] List of 2
[10:30:02.266]  $ ...future.FUN:function (a, b)  
[10:30:02.266]  $ ...          :List of 1
[10:30:02.266]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:30:02.266]   .. .. ..@ slots     :List of 4
[10:30:02.266]   .. .. .. ..$ .Data  : chr "function"
[10:30:02.266]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. ..$ target : chr "signature"
[10:30:02.266]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. ..$ defined: chr "signature"
[10:30:02.266]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. ..$ generic: chr "character"
[10:30:02.266]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. ..@ contains  :List of 3
[10:30:02.266]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "function"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr "function"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.266]   .. .. ..@ virtual   : logi FALSE
[10:30:02.266]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:30:02.266]  list()
[10:30:02.266]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:30:02.266]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:02.266]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:02.266]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:02.266]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:30:02.266]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:30:02.266]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:30:02.266]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:30:02.266]   .. .. .. .. ..$ generic: chr(0) 
[10:30:02.266]   .. .. ..@ validity  : NULL
[10:30:02.266]   .. .. ..@ access    : list()
[10:30:02.266]   .. .. ..@ className : chr "MethodDefinition"
[10:30:02.266]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. ..@ subclasses:List of 7
[10:30:02.266]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr(0) 
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 1
[10:30:02.266]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.266]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.266]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:30:02.266]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ package   : chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:30:02.266]   .. .. .. .. .. ..@ test      :function (object)  
[10:30:02.266]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:30:02.266]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:30:02.266]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:30:02.266]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:30:02.266]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:30:02.266]   .. .. .. .. .. ..@ distance  : num 2
[10:30:02.266]   .. .. ..@ versionKey:<externalptr> 
[10:30:02.266]   .. .. ..@ sealed    : logi TRUE
[10:30:02.266]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.266]  - attr(*, "where")=List of 2
[10:30:02.266]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.266]   ..$ ...          :<environment: 0x557e09456380> 
[10:30:02.266]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.266]  - attr(*, "resolved")= logi FALSE
[10:30:02.266]  - attr(*, "total_size")= num 312512
[10:30:02.317] Packages to be attached in all futures: [n=0] 
[10:30:02.317] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.317] Number of futures (= number of chunks): 1
[10:30:02.317] Launching 1 futures (chunks) ...
[10:30:02.317] Chunk #1 of 1 ...
[10:30:02.318]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.318]    + additional globals found: [n=0] 
[10:30:02.318]    + additional namespaces needed: [n=0] 
[10:30:02.318]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.318]  - seeds: <none>
[10:30:02.318]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.337] Created future:
[10:30:02.337] MultisessionFuture:
[10:30:02.337] Label: ‘future_lapply-1’
[10:30:02.337] Expression:
[10:30:02.337] {
[10:30:02.337]     do.call(function(...) {
[10:30:02.337]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.337]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.337]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.337]             on.exit(options(oopts), add = TRUE)
[10:30:02.337]         }
[10:30:02.337]         {
[10:30:02.337]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.337]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.337]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.337]             })
[10:30:02.337]         }
[10:30:02.337]     }, args = future.call.arguments)
[10:30:02.337] }
[10:30:02.337] Lazy evaluation: FALSE
[10:30:02.337] Asynchronous evaluation: TRUE
[10:30:02.337] Local evaluation: TRUE
[10:30:02.337] Environment: R_GlobalEnv
[10:30:02.337] Capture standard output: TRUE
[10:30:02.337] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.337] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.337] Packages: <none>
[10:30:02.337] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.337] Resolved: FALSE
[10:30:02.337] Value: <not collected>
[10:30:02.337] Conditions captured: <none>
[10:30:02.337] Early signaling: FALSE
[10:30:02.337] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.337] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.349] Chunk #1 of 1 ... DONE
[10:30:02.349] Launching 1 futures (chunks) ... DONE
[10:30:02.349] Resolving 1 futures (chunks) ...
[10:30:02.379]  - Number of value chunks collected: 1
[10:30:02.379] Resolving 1 futures (chunks) ... DONE
[10:30:02.379] Reducing values from 1 chunks ...
[10:30:02.379]  - Number of values collected after concatenation: 1
[10:30:02.379]  - Number of values expected: 1
[10:30:02.380] Reducing values from 1 chunks ... DONE
[10:30:02.380] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:30:02.382] future_lapply() ...
[10:30:02.386] Number of chunks: 2
[10:30:02.386] getGlobalsAndPackagesXApply() ...
[10:30:02.386]  - future.globals: TRUE
[10:30:02.388]  - globals found/used: [n=1] ‘FUN’
[10:30:02.388]  - needed namespaces: [n=0] 
[10:30:02.388] Finding globals ... DONE
[10:30:02.389]  - use_args: TRUE
[10:30:02.389]  - Getting '...' globals ...
[10:30:02.389]    - '...' content: [n=0] 
[10:30:02.389] List of 1
[10:30:02.389]  $ ...: list()
[10:30:02.389]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.389]  - attr(*, "where")=List of 1
[10:30:02.389]   ..$ ...:<environment: 0x557e07c3f2d0> 
[10:30:02.389]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.389]  - attr(*, "resolved")= logi TRUE
[10:30:02.389]  - attr(*, "total_size")= num NA
[10:30:02.392]  - Getting '...' globals ... DONE
[10:30:02.392] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.392] List of 2
[10:30:02.392]  $ ...future.FUN:function (f)  
[10:30:02.392]  $ ...          : list()
[10:30:02.392]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.392]  - attr(*, "where")=List of 2
[10:30:02.392]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.392]   ..$ ...          :<environment: 0x557e07c3f2d0> 
[10:30:02.392]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.392]  - attr(*, "resolved")= logi FALSE
[10:30:02.392]  - attr(*, "total_size")= num 1008
[10:30:02.395] Packages to be attached in all futures: [n=0] 
[10:30:02.395] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.395] Number of futures (= number of chunks): 2
[10:30:02.395] Launching 2 futures (chunks) ...
[10:30:02.395] Chunk #1 of 2 ...
[10:30:02.395]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.397]    + additional globals found: [n=2] ‘a’, ‘b’
[10:30:02.397]    + additional namespaces needed: [n=0] 
[10:30:02.397]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.398]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.398]  - seeds: <none>
[10:30:02.398]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:30:02.416] Created future:
[10:30:02.416] MultisessionFuture:
[10:30:02.416] Label: ‘future_lapply-1’
[10:30:02.416] Expression:
[10:30:02.416] {
[10:30:02.416]     do.call(function(...) {
[10:30:02.416]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.416]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.416]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.416]             on.exit(options(oopts), add = TRUE)
[10:30:02.416]         }
[10:30:02.416]         {
[10:30:02.416]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.416]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.416]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.416]             })
[10:30:02.416]         }
[10:30:02.416]     }, args = future.call.arguments)
[10:30:02.416] }
[10:30:02.416] Lazy evaluation: FALSE
[10:30:02.416] Asynchronous evaluation: TRUE
[10:30:02.416] Local evaluation: TRUE
[10:30:02.416] Environment: R_GlobalEnv
[10:30:02.416] Capture standard output: TRUE
[10:30:02.416] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.416] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:30:02.416] Packages: <none>
[10:30:02.416] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.416] Resolved: FALSE
[10:30:02.416] Value: <not collected>
[10:30:02.416] Conditions captured: <none>
[10:30:02.416] Early signaling: FALSE
[10:30:02.416] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.416] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.428] Chunk #1 of 2 ... DONE
[10:30:02.428] Chunk #2 of 2 ...
[10:30:02.428]  - Finding globals in 'X' for chunk #2 ...
[10:30:02.430]    + additional globals found: [n=2] ‘a’, ‘b’
[10:30:02.430]    + additional namespaces needed: [n=1] ‘tools’
[10:30:02.431]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:02.431]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.431]  - seeds: <none>
[10:30:02.431]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:30:02.449] Created future:
[10:30:02.449] MultisessionFuture:
[10:30:02.449] Label: ‘future_lapply-2’
[10:30:02.449] Expression:
[10:30:02.449] {
[10:30:02.449]     do.call(function(...) {
[10:30:02.449]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.449]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.449]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.449]             on.exit(options(oopts), add = TRUE)
[10:30:02.449]         }
[10:30:02.449]         {
[10:30:02.449]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.449]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.449]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.449]             })
[10:30:02.449]         }
[10:30:02.449]     }, args = future.call.arguments)
[10:30:02.449] }
[10:30:02.449] Lazy evaluation: FALSE
[10:30:02.449] Asynchronous evaluation: TRUE
[10:30:02.449] Local evaluation: TRUE
[10:30:02.449] Environment: R_GlobalEnv
[10:30:02.449] Capture standard output: TRUE
[10:30:02.449] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.449] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:30:02.449] Packages: 1 packages (‘tools’)
[10:30:02.449] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.449] Resolved: FALSE
[10:30:02.449] Value: <not collected>
[10:30:02.449] Conditions captured: <none>
[10:30:02.449] Early signaling: FALSE
[10:30:02.449] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.449] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.461] Chunk #2 of 2 ... DONE
[10:30:02.461] Launching 2 futures (chunks) ... DONE
[10:30:02.461] Resolving 2 futures (chunks) ...
[10:30:02.494]  - Number of value chunks collected: 2
[10:30:02.494] Resolving 2 futures (chunks) ... DONE
[10:30:02.494] Reducing values from 2 chunks ...
[10:30:02.495]  - Number of values collected after concatenation: 4
[10:30:02.495]  - Number of values expected: 4
[10:30:02.495] Reducing values from 2 chunks ... DONE
[10:30:02.495] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:30:02.498] future_lapply() ...
[10:30:02.502] Number of chunks: 1
[10:30:02.502] getGlobalsAndPackagesXApply() ...
[10:30:02.502]  - future.globals: TRUE
[10:30:02.505]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:30:02.505]  - needed namespaces: [n=0] 
[10:30:02.505] Finding globals ... DONE
[10:30:02.505]  - use_args: TRUE
[10:30:02.505]  - Getting '...' globals ...
[10:30:02.505]    - '...' content: [n=0] 
[10:30:02.505] List of 1
[10:30:02.505]  $ ...: list()
[10:30:02.505]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.505]  - attr(*, "where")=List of 1
[10:30:02.505]   ..$ ...:<environment: 0x557e0996da70> 
[10:30:02.505]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.505]  - attr(*, "resolved")= logi TRUE
[10:30:02.505]  - attr(*, "total_size")= num NA
[10:30:02.508]  - Getting '...' globals ... DONE
[10:30:02.508] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:30:02.508] List of 3
[10:30:02.508]  $ ...future.FUN        :function (x)  
[10:30:02.508]  $ future.call.arguments:List of 1
[10:30:02.508]   ..$ a: num 1
[10:30:02.508]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.508]  $ ...                  : list()
[10:30:02.508]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.508]  - attr(*, "where")=List of 3
[10:30:02.508]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:30:02.508]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:30:02.508]   ..$ ...                  :<environment: 0x557e0996da70> 
[10:30:02.508]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.508]  - attr(*, "resolved")= logi FALSE
[10:30:02.508]  - attr(*, "total_size")= num 1272
[10:30:02.512] Packages to be attached in all futures: [n=0] 
[10:30:02.512] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.512] Number of futures (= number of chunks): 1
[10:30:02.512] Launching 1 futures (chunks) ...
[10:30:02.512] Chunk #1 of 1 ...
[10:30:02.512]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.513]    + additional globals found: [n=0] 
[10:30:02.513]    + additional namespaces needed: [n=0] 
[10:30:02.513]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.513]  - seeds: <none>
[10:30:02.513]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.531] Created future:
[10:30:02.531] MultisessionFuture:
[10:30:02.531] Label: ‘future_lapply-1’
[10:30:02.531] Expression:
[10:30:02.531] {
[10:30:02.531]     do.call(function(...) {
[10:30:02.531]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.531]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.531]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.531]             on.exit(options(oopts), add = TRUE)
[10:30:02.531]         }
[10:30:02.531]         {
[10:30:02.531]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.531]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.531]                 ...future.FUN(...future.X_jj)
[10:30:02.531]             })
[10:30:02.531]         }
[10:30:02.531]     }, args = future.call.arguments)
[10:30:02.531] }
[10:30:02.531] Lazy evaluation: FALSE
[10:30:02.531] Asynchronous evaluation: TRUE
[10:30:02.531] Local evaluation: TRUE
[10:30:02.531] Environment: 0x557e0996d648
[10:30:02.531] Capture standard output: TRUE
[10:30:02.531] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.531] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.531] Packages: <none>
[10:30:02.531] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.531] Resolved: FALSE
[10:30:02.531] Value: <not collected>
[10:30:02.531] Conditions captured: <none>
[10:30:02.531] Early signaling: FALSE
[10:30:02.531] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.531] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.543] Chunk #1 of 1 ... DONE
[10:30:02.543] Launching 1 futures (chunks) ... DONE
[10:30:02.543] Resolving 1 futures (chunks) ...
[10:30:02.575]  - Number of value chunks collected: 1
[10:30:02.575] Resolving 1 futures (chunks) ... DONE
[10:30:02.575] Reducing values from 1 chunks ...
[10:30:02.575]  - Number of values collected after concatenation: 1
[10:30:02.575]  - Number of values expected: 1
[10:30:02.576] Reducing values from 1 chunks ... DONE
[10:30:02.576] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:30:02.577] future_lapply() ...
[10:30:02.581] Number of chunks: 1
[10:30:02.581] getGlobalsAndPackagesXApply() ...
[10:30:02.581]  - future.globals: TRUE
[10:30:02.584]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:02.584]  - needed namespaces: [n=0] 
[10:30:02.584] Finding globals ... DONE
[10:30:02.584]  - use_args: TRUE
[10:30:02.584]  - Getting '...' globals ...
[10:30:02.584]    - '...' content: [n=0] 
[10:30:02.584] List of 1
[10:30:02.584]  $ ...: list()
[10:30:02.584]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.584]  - attr(*, "where")=List of 1
[10:30:02.584]   ..$ ...:<environment: 0x557e0ac3cf70> 
[10:30:02.584]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.584]  - attr(*, "resolved")= logi TRUE
[10:30:02.584]  - attr(*, "total_size")= num NA
[10:30:02.587]  - Getting '...' globals ... DONE
[10:30:02.587] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:02.587] List of 3
[10:30:02.587]  $ ...future.FUN:function (ii)  
[10:30:02.587]  $ a            : num 1
[10:30:02.587]  $ ...          : list()
[10:30:02.587]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.587]  - attr(*, "where")=List of 3
[10:30:02.587]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.587]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:02.587]   ..$ ...          :<environment: 0x557e0ac3cf70> 
[10:30:02.587]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.587]  - attr(*, "resolved")= logi FALSE
[10:30:02.587]  - attr(*, "total_size")= num 2984
[10:30:02.590] Packages to be attached in all futures: [n=0] 
[10:30:02.591] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.591] Number of futures (= number of chunks): 1
[10:30:02.591] Launching 1 futures (chunks) ...
[10:30:02.591] Chunk #1 of 1 ...
[10:30:02.591]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.591]    + additional globals found: [n=0] 
[10:30:02.591]    + additional namespaces needed: [n=0] 
[10:30:02.592]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.592]  - seeds: <none>
[10:30:02.592]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.609] Created future:
[10:30:02.609] MultisessionFuture:
[10:30:02.609] Label: ‘future_lapply-1’
[10:30:02.609] Expression:
[10:30:02.609] {
[10:30:02.609]     do.call(function(...) {
[10:30:02.609]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.609]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.609]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.609]             on.exit(options(oopts), add = TRUE)
[10:30:02.609]         }
[10:30:02.609]         {
[10:30:02.609]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.609]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.609]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.609]             })
[10:30:02.609]         }
[10:30:02.609]     }, args = future.call.arguments)
[10:30:02.609] }
[10:30:02.609] Lazy evaluation: FALSE
[10:30:02.609] Asynchronous evaluation: TRUE
[10:30:02.609] Local evaluation: TRUE
[10:30:02.609] Environment: R_GlobalEnv
[10:30:02.609] Capture standard output: TRUE
[10:30:02.609] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.609] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:02.609] Packages: <none>
[10:30:02.609] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.609] Resolved: FALSE
[10:30:02.609] Value: <not collected>
[10:30:02.609] Conditions captured: <none>
[10:30:02.609] Early signaling: FALSE
[10:30:02.609] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.609] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.623] Chunk #1 of 1 ... DONE
[10:30:02.623] Launching 1 futures (chunks) ... DONE
[10:30:02.623] Resolving 1 futures (chunks) ...
[10:30:02.655]  - Number of value chunks collected: 1
[10:30:02.655] Resolving 1 futures (chunks) ... DONE
[10:30:02.655] Reducing values from 1 chunks ...
[10:30:02.655]  - Number of values collected after concatenation: 1
[10:30:02.655]  - Number of values expected: 1
[10:30:02.655] Reducing values from 1 chunks ... DONE
[10:30:02.656] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:30:02.656] future_lapply() ...
[10:30:02.660] Number of chunks: 1
[10:30:02.660] getGlobalsAndPackagesXApply() ...
[10:30:02.660]  - future.globals: TRUE
[10:30:02.662]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:30:02.662]  - needed namespaces: [n=0] 
[10:30:02.663] Finding globals ... DONE
[10:30:02.663]  - use_args: TRUE
[10:30:02.663]  - Getting '...' globals ...
[10:30:02.663]    - '...' content: [n=0] 
[10:30:02.663] List of 1
[10:30:02.663]  $ ...: list()
[10:30:02.663]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.663]  - attr(*, "where")=List of 1
[10:30:02.663]   ..$ ...:<environment: 0x557e09b4aa78> 
[10:30:02.663]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.663]  - attr(*, "resolved")= logi TRUE
[10:30:02.663]  - attr(*, "total_size")= num NA
[10:30:02.666]  - Getting '...' globals ... DONE
[10:30:02.666] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:30:02.666] List of 3
[10:30:02.666]  $ ...future.FUN:function (ii)  
[10:30:02.666]  $ a            : num 1
[10:30:02.666]  $ ...          : list()
[10:30:02.666]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.666]  - attr(*, "where")=List of 3
[10:30:02.666]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.666]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:02.666]   ..$ ...          :<environment: 0x557e09b4aa78> 
[10:30:02.666]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.666]  - attr(*, "resolved")= logi FALSE
[10:30:02.666]  - attr(*, "total_size")= num 2984
[10:30:02.669] Packages to be attached in all futures: [n=0] 
[10:30:02.669] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.670] Number of futures (= number of chunks): 1
[10:30:02.670] Launching 1 futures (chunks) ...
[10:30:02.670] Chunk #1 of 1 ...
[10:30:02.670]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.670]    + additional globals found: [n=0] 
[10:30:02.670]    + additional namespaces needed: [n=0] 
[10:30:02.670]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.670]  - seeds: <none>
[10:30:02.671]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.689] Created future:
[10:30:02.689] MultisessionFuture:
[10:30:02.689] Label: ‘future_lapply-1’
[10:30:02.689] Expression:
[10:30:02.689] {
[10:30:02.689]     do.call(function(...) {
[10:30:02.689]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.689]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.689]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.689]             on.exit(options(oopts), add = TRUE)
[10:30:02.689]         }
[10:30:02.689]         {
[10:30:02.689]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.689]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.689]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.689]             })
[10:30:02.689]         }
[10:30:02.689]     }, args = future.call.arguments)
[10:30:02.689] }
[10:30:02.689] Lazy evaluation: FALSE
[10:30:02.689] Asynchronous evaluation: TRUE
[10:30:02.689] Local evaluation: TRUE
[10:30:02.689] Environment: R_GlobalEnv
[10:30:02.689] Capture standard output: TRUE
[10:30:02.689] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.689] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:02.689] Packages: <none>
[10:30:02.689] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.689] Resolved: FALSE
[10:30:02.689] Value: <not collected>
[10:30:02.689] Conditions captured: <none>
[10:30:02.689] Early signaling: FALSE
[10:30:02.689] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.689] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.700] Chunk #1 of 1 ... DONE
[10:30:02.701] Launching 1 futures (chunks) ... DONE
[10:30:02.701] Resolving 1 futures (chunks) ...
[10:30:02.731]  - Number of value chunks collected: 1
[10:30:02.731] Resolving 1 futures (chunks) ... DONE
[10:30:02.731] Reducing values from 1 chunks ...
[10:30:02.731]  - Number of values collected after concatenation: 1
[10:30:02.731]  - Number of values expected: 1
[10:30:02.731] Reducing values from 1 chunks ... DONE
[10:30:02.731] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:30:02.732] future_lapply() ...
[10:30:02.736] Number of chunks: 1
[10:30:02.736] getGlobalsAndPackagesXApply() ...
[10:30:02.736]  - future.globals: <name-value list> with names ‘42’
[10:30:02.736]  - use_args: TRUE
[10:30:02.737]  - Getting '...' globals ...
[10:30:02.737]    - '...' content: [n=0] 
[10:30:02.737] List of 1
[10:30:02.737]  $ ...: list()
[10:30:02.737]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.737]  - attr(*, "where")=List of 1
[10:30:02.737]   ..$ ...:<environment: 0x557e0a4d47d0> 
[10:30:02.737]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.737]  - attr(*, "resolved")= logi TRUE
[10:30:02.737]  - attr(*, "total_size")= num NA
[10:30:02.740]  - Getting '...' globals ... DONE
[10:30:02.740] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:30:02.740] List of 3
[10:30:02.740]  $ a            : num 42
[10:30:02.740]  $ ...future.FUN:function (x)  
[10:30:02.740]  $ ...          : list()
[10:30:02.740]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.740]  - attr(*, "where")=List of 3
[10:30:02.740]   ..$ a            :<environment: R_EmptyEnv> 
[10:30:02.740]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:30:02.740]   ..$ ...          :<environment: 0x557e0a4d47d0> 
[10:30:02.740]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.740]  - attr(*, "resolved")= logi FALSE
[10:30:02.740]  - attr(*, "total_size")= num NA
[10:30:02.743] Packages to be attached in all futures: [n=0] 
[10:30:02.743] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.744] Number of futures (= number of chunks): 1
[10:30:02.744] Launching 1 futures (chunks) ...
[10:30:02.744] Chunk #1 of 1 ...
[10:30:02.744]  - seeds: <none>
[10:30:02.744]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.762] Created future:
[10:30:02.763] MultisessionFuture:
[10:30:02.763] Label: ‘future_lapply-1’
[10:30:02.763] Expression:
[10:30:02.763] {
[10:30:02.763]     do.call(function(...) {
[10:30:02.763]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.763]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.763]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.763]             on.exit(options(oopts), add = TRUE)
[10:30:02.763]         }
[10:30:02.763]         {
[10:30:02.763]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.763]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.763]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.763]             })
[10:30:02.763]         }
[10:30:02.763]     }, args = future.call.arguments)
[10:30:02.763] }
[10:30:02.763] Lazy evaluation: FALSE
[10:30:02.763] Asynchronous evaluation: TRUE
[10:30:02.763] Local evaluation: TRUE
[10:30:02.763] Environment: R_GlobalEnv
[10:30:02.763] Capture standard output: TRUE
[10:30:02.763] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.763] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:30:02.763] Packages: <none>
[10:30:02.763] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.763] Resolved: FALSE
[10:30:02.763] Value: <not collected>
[10:30:02.763] Conditions captured: <none>
[10:30:02.763] Early signaling: FALSE
[10:30:02.763] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.763] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.775] Chunk #1 of 1 ... DONE
[10:30:02.775] Launching 1 futures (chunks) ... DONE
[10:30:02.775] Resolving 1 futures (chunks) ...
[10:30:02.817]  - Number of value chunks collected: 1
[10:30:02.817] Resolving 1 futures (chunks) ... DONE
[10:30:02.817] Reducing values from 1 chunks ...
[10:30:02.817]  - Number of values collected after concatenation: 1
[10:30:02.818]  - Number of values expected: 1
[10:30:02.818] Reducing values from 1 chunks ... DONE
[10:30:02.818] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[10:30:02.819] future_lapply() ...
[10:30:02.823] Number of chunks: 2
[10:30:02.823] getGlobalsAndPackagesXApply() ...
[10:30:02.823]  - future.globals: TRUE
[10:30:02.826]  - globals found/used: [n=1] ‘FUN’
[10:30:02.826]  - needed namespaces: [n=0] 
[10:30:02.827] Finding globals ... DONE
[10:30:02.827]  - use_args: TRUE
[10:30:02.827]  - Getting '...' globals ...
[10:30:02.827]    - '...' content: [n=0] 
[10:30:02.827] List of 1
[10:30:02.827]  $ ...: list()
[10:30:02.827]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.827]  - attr(*, "where")=List of 1
[10:30:02.827]   ..$ ...:<environment: 0x557e0ab42900> 
[10:30:02.827]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.827]  - attr(*, "resolved")= logi TRUE
[10:30:02.827]  - attr(*, "total_size")= num NA
[10:30:02.830]  - Getting '...' globals ... DONE
[10:30:02.830] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.830] List of 2
[10:30:02.830]  $ ...future.FUN:function (y)  
[10:30:02.830]  $ ...          : list()
[10:30:02.830]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.830]  - attr(*, "where")=List of 2
[10:30:02.830]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.830]   ..$ ...          :<environment: 0x557e0ab42900> 
[10:30:02.830]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.830]  - attr(*, "resolved")= logi FALSE
[10:30:02.830]  - attr(*, "total_size")= num 280
[10:30:02.833] Packages to be attached in all futures: [n=0] 
[10:30:02.833] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.833] Number of futures (= number of chunks): 2
[10:30:02.833] Launching 2 futures (chunks) ...
[10:30:02.833] Chunk #1 of 2 ...
[10:30:02.833]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.834]    + additional globals found: [n=0] 
[10:30:02.834]    + additional namespaces needed: [n=0] 
[10:30:02.834]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.834]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.834]  - seeds: <none>
[10:30:02.834]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.851] Created future:
[10:30:02.851] MultisessionFuture:
[10:30:02.851] Label: ‘future_lapply-1’
[10:30:02.851] Expression:
[10:30:02.851] {
[10:30:02.851]     do.call(function(...) {
[10:30:02.851]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.851]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.851]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.851]             on.exit(options(oopts), add = TRUE)
[10:30:02.851]         }
[10:30:02.851]         {
[10:30:02.851]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.851]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.851]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.851]             })
[10:30:02.851]         }
[10:30:02.851]     }, args = future.call.arguments)
[10:30:02.851] }
[10:30:02.851] Lazy evaluation: FALSE
[10:30:02.851] Asynchronous evaluation: TRUE
[10:30:02.851] Local evaluation: TRUE
[10:30:02.851] Environment: 0x557e0ab3eec0
[10:30:02.851] Capture standard output: TRUE
[10:30:02.851] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.851] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.851] Packages: <none>
[10:30:02.851] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.851] Resolved: FALSE
[10:30:02.851] Value: <not collected>
[10:30:02.851] Conditions captured: <none>
[10:30:02.851] Early signaling: FALSE
[10:30:02.851] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.851] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.863] Chunk #1 of 2 ... DONE
[10:30:02.863] Chunk #2 of 2 ...
[10:30:02.863]  - Finding globals in 'X' for chunk #2 ...
[10:30:02.863]    + additional globals found: [n=0] 
[10:30:02.863]    + additional namespaces needed: [n=0] 
[10:30:02.863]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:02.863]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.863]  - seeds: <none>
[10:30:02.864]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.883] Created future:
[10:30:02.883] MultisessionFuture:
[10:30:02.883] Label: ‘future_lapply-2’
[10:30:02.883] Expression:
[10:30:02.883] {
[10:30:02.883]     do.call(function(...) {
[10:30:02.883]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.883]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.883]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.883]             on.exit(options(oopts), add = TRUE)
[10:30:02.883]         }
[10:30:02.883]         {
[10:30:02.883]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.883]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.883]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.883]             })
[10:30:02.883]         }
[10:30:02.883]     }, args = future.call.arguments)
[10:30:02.883] }
[10:30:02.883] Lazy evaluation: FALSE
[10:30:02.883] Asynchronous evaluation: TRUE
[10:30:02.883] Local evaluation: TRUE
[10:30:02.883] Environment: 0x557e0ab3eec0
[10:30:02.883] Capture standard output: TRUE
[10:30:02.883] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.883] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.883] Packages: <none>
[10:30:02.883] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.883] Resolved: FALSE
[10:30:02.883] Value: <not collected>
[10:30:02.883] Conditions captured: <none>
[10:30:02.883] Early signaling: FALSE
[10:30:02.883] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.883] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.895] Chunk #2 of 2 ... DONE
[10:30:02.895] Launching 2 futures (chunks) ... DONE
[10:30:02.895] Resolving 2 futures (chunks) ...
[10:30:02.927]  - Number of value chunks collected: 2
[10:30:02.927] Resolving 2 futures (chunks) ... DONE
[10:30:02.927] Reducing values from 2 chunks ...
[10:30:02.927]  - Number of values collected after concatenation: 2
[10:30:02.927]  - Number of values expected: 2
[10:30:02.927] Reducing values from 2 chunks ... DONE
[10:30:02.928] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[10:30:02.928] future_lapply() ...
[10:30:02.932] Number of chunks: 2
[10:30:02.932] getGlobalsAndPackagesXApply() ...
[10:30:02.932]  - future.globals: TRUE
[10:30:02.934]  - globals found/used: [n=1] ‘FUN’
[10:30:02.934]  - needed namespaces: [n=0] 
[10:30:02.934] Finding globals ... DONE
[10:30:02.934]  - use_args: TRUE
[10:30:02.934]  - Getting '...' globals ...
[10:30:02.935]    - '...' content: [n=0] 
[10:30:02.935] List of 1
[10:30:02.935]  $ ...: list()
[10:30:02.935]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.935]  - attr(*, "where")=List of 1
[10:30:02.935]   ..$ ...:<environment: 0x557e0a44cd70> 
[10:30:02.935]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.935]  - attr(*, "resolved")= logi TRUE
[10:30:02.935]  - attr(*, "total_size")= num NA
[10:30:02.937]  - Getting '...' globals ... DONE
[10:30:02.937] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:02.938] List of 2
[10:30:02.938]  $ ...future.FUN:function (y)  
[10:30:02.938]  $ ...          : list()
[10:30:02.938]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:02.938]  - attr(*, "where")=List of 2
[10:30:02.938]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:02.938]   ..$ ...          :<environment: 0x557e0a44cd70> 
[10:30:02.938]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:02.938]  - attr(*, "resolved")= logi FALSE
[10:30:02.938]  - attr(*, "total_size")= num 280
[10:30:02.940] Packages to be attached in all futures: [n=0] 
[10:30:02.940] getGlobalsAndPackagesXApply() ... DONE
[10:30:02.940] Number of futures (= number of chunks): 2
[10:30:02.941] Launching 2 futures (chunks) ...
[10:30:02.941] Chunk #1 of 2 ...
[10:30:02.941]  - Finding globals in 'X' for chunk #1 ...
[10:30:02.941]    + additional globals found: [n=0] 
[10:30:02.941]    + additional namespaces needed: [n=0] 
[10:30:02.941]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:02.941]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.942]  - seeds: <none>
[10:30:02.942]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.958] Created future:
[10:30:02.958] MultisessionFuture:
[10:30:02.958] Label: ‘future_lapply-1’
[10:30:02.958] Expression:
[10:30:02.958] {
[10:30:02.958]     do.call(function(...) {
[10:30:02.958]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.958]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.958]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.958]             on.exit(options(oopts), add = TRUE)
[10:30:02.958]         }
[10:30:02.958]         {
[10:30:02.958]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.958]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.958]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.958]             })
[10:30:02.958]         }
[10:30:02.958]     }, args = future.call.arguments)
[10:30:02.958] }
[10:30:02.958] Lazy evaluation: FALSE
[10:30:02.958] Asynchronous evaluation: TRUE
[10:30:02.958] Local evaluation: TRUE
[10:30:02.958] Environment: 0x557e0a44d160
[10:30:02.958] Capture standard output: TRUE
[10:30:02.958] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.958] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.958] Packages: <none>
[10:30:02.958] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.958] Resolved: FALSE
[10:30:02.958] Value: <not collected>
[10:30:02.958] Conditions captured: <none>
[10:30:02.958] Early signaling: FALSE
[10:30:02.958] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.958] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:02.970] Chunk #1 of 2 ... DONE
[10:30:02.970] Chunk #2 of 2 ...
[10:30:02.970]  - Finding globals in 'X' for chunk #2 ...
[10:30:02.971]    + additional globals found: [n=0] 
[10:30:02.971]    + additional namespaces needed: [n=0] 
[10:30:02.971]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:02.971]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:02.971]  - seeds: <none>
[10:30:02.971]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:02.991] Created future:
[10:30:02.991] MultisessionFuture:
[10:30:02.991] Label: ‘future_lapply-2’
[10:30:02.991] Expression:
[10:30:02.991] {
[10:30:02.991]     do.call(function(...) {
[10:30:02.991]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:02.991]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:02.991]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:02.991]             on.exit(options(oopts), add = TRUE)
[10:30:02.991]         }
[10:30:02.991]         {
[10:30:02.991]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:02.991]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:02.991]                 ...future.FUN(...future.X_jj, ...)
[10:30:02.991]             })
[10:30:02.991]         }
[10:30:02.991]     }, args = future.call.arguments)
[10:30:02.991] }
[10:30:02.991] Lazy evaluation: FALSE
[10:30:02.991] Asynchronous evaluation: TRUE
[10:30:02.991] Local evaluation: TRUE
[10:30:02.991] Environment: 0x557e0a44d160
[10:30:02.991] Capture standard output: TRUE
[10:30:02.991] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:02.991] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:02.991] Packages: <none>
[10:30:02.991] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:02.991] Resolved: FALSE
[10:30:02.991] Value: <not collected>
[10:30:02.991] Conditions captured: <none>
[10:30:02.991] Early signaling: FALSE
[10:30:02.991] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:02.991] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.002] Chunk #2 of 2 ... DONE
[10:30:03.003] Launching 2 futures (chunks) ... DONE
[10:30:03.003] Resolving 2 futures (chunks) ...
[10:30:03.035]  - Number of value chunks collected: 2
[10:30:03.035] Resolving 2 futures (chunks) ... DONE
[10:30:03.035] Reducing values from 2 chunks ...
[10:30:03.035]  - Number of values collected after concatenation: 2
[10:30:03.035]  - Number of values expected: 2
[10:30:03.035] Reducing values from 2 chunks ... DONE
[10:30:03.035] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[10:30:03.038] future_lapply() ...
[10:30:03.042] Number of chunks: 2
[10:30:03.042] getGlobalsAndPackagesXApply() ...
[10:30:03.042]  - future.globals: TRUE
[10:30:03.044] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[10:30:03.044] future_lapply() ...
[10:30:03.048] Number of chunks: 2
[10:30:03.048] getGlobalsAndPackagesXApply() ...
[10:30:03.048]  - future.globals: TRUE
[10:30:03.050]  - globals found/used: [n=1] ‘FUN’
[10:30:03.050]  - needed namespaces: [n=0] 
[10:30:03.050] Finding globals ... DONE
[10:30:03.050]  - use_args: TRUE
[10:30:03.050]  - Getting '...' globals ...
[10:30:03.051]    - '...' content: [n=0] 
[10:30:03.051] List of 1
[10:30:03.051]  $ ...: list()
[10:30:03.051]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.051]  - attr(*, "where")=List of 1
[10:30:03.051]   ..$ ...:<environment: 0x557e092651b8> 
[10:30:03.051]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.051]  - attr(*, "resolved")= logi TRUE
[10:30:03.051]  - attr(*, "total_size")= num NA
[10:30:03.053]  - Getting '...' globals ... DONE
[10:30:03.053] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:03.053] List of 2
[10:30:03.053]  $ ...future.FUN:function (x)  
[10:30:03.053]  $ ...          : list()
[10:30:03.053]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.053]  - attr(*, "where")=List of 2
[10:30:03.053]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:03.053]   ..$ ...          :<environment: 0x557e092651b8> 
[10:30:03.053]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.053]  - attr(*, "resolved")= logi FALSE
[10:30:03.053]  - attr(*, "total_size")= num 1840
[10:30:03.056] Packages to be attached in all futures: [n=0] 
[10:30:03.056] getGlobalsAndPackagesXApply() ... DONE
[10:30:03.056] Number of futures (= number of chunks): 2
[10:30:03.057] Launching 2 futures (chunks) ...
[10:30:03.057] Chunk #1 of 2 ...
[10:30:03.057]  - Finding globals in 'X' for chunk #1 ...
[10:30:03.057]    + additional globals found: [n=0] 
[10:30:03.057]    + additional namespaces needed: [n=0] 
[10:30:03.057]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:03.057]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:03.057]  - seeds: <none>
[10:30:03.058]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.075] Created future:
[10:30:03.075] MultisessionFuture:
[10:30:03.075] Label: ‘future_lapply-1’
[10:30:03.075] Expression:
[10:30:03.075] {
[10:30:03.075]     do.call(function(...) {
[10:30:03.075]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.075]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.075]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.075]             on.exit(options(oopts), add = TRUE)
[10:30:03.075]         }
[10:30:03.075]         {
[10:30:03.075]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.075]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.075]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.075]             })
[10:30:03.075]         }
[10:30:03.075]     }, args = future.call.arguments)
[10:30:03.075] }
[10:30:03.075] Lazy evaluation: FALSE
[10:30:03.075] Asynchronous evaluation: TRUE
[10:30:03.075] Local evaluation: TRUE
[10:30:03.075] Environment: R_GlobalEnv
[10:30:03.075] Capture standard output: TRUE
[10:30:03.075] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.075] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:03.075] Packages: <none>
[10:30:03.075] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.075] Resolved: FALSE
[10:30:03.075] Value: <not collected>
[10:30:03.075] Conditions captured: <none>
[10:30:03.075] Early signaling: FALSE
[10:30:03.075] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.075] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.087] Chunk #1 of 2 ... DONE
[10:30:03.087] Chunk #2 of 2 ...
[10:30:03.088]  - Finding globals in 'X' for chunk #2 ...
[10:30:03.088]    + additional globals found: [n=0] 
[10:30:03.088]    + additional namespaces needed: [n=0] 
[10:30:03.088]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:03.088]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:30:03.088]  - seeds: <none>
[10:30:03.088]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.107] Created future:
[10:30:03.107] MultisessionFuture:
[10:30:03.107] Label: ‘future_lapply-2’
[10:30:03.107] Expression:
[10:30:03.107] {
[10:30:03.107]     do.call(function(...) {
[10:30:03.107]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.107]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.107]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.107]             on.exit(options(oopts), add = TRUE)
[10:30:03.107]         }
[10:30:03.107]         {
[10:30:03.107]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.107]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.107]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.107]             })
[10:30:03.107]         }
[10:30:03.107]     }, args = future.call.arguments)
[10:30:03.107] }
[10:30:03.107] Lazy evaluation: FALSE
[10:30:03.107] Asynchronous evaluation: TRUE
[10:30:03.107] Local evaluation: TRUE
[10:30:03.107] Environment: R_GlobalEnv
[10:30:03.107] Capture standard output: TRUE
[10:30:03.107] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.107] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:30:03.107] Packages: <none>
[10:30:03.107] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.107] Resolved: FALSE
[10:30:03.107] Value: <not collected>
[10:30:03.107] Conditions captured: <none>
[10:30:03.107] Early signaling: FALSE
[10:30:03.107] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.107] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.119] Chunk #2 of 2 ... DONE
[10:30:03.119] Launching 2 futures (chunks) ... DONE
[10:30:03.119] Resolving 2 futures (chunks) ...
[10:30:03.151]  - Number of value chunks collected: 2
[10:30:03.151] Resolving 2 futures (chunks) ... DONE
[10:30:03.151] Reducing values from 2 chunks ...
[10:30:03.151]  - Number of values collected after concatenation: 10
[10:30:03.151]  - Number of values expected: 10
[10:30:03.152] Reducing values from 2 chunks ... DONE
[10:30:03.152] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[10:30:03.161] future_lapply() ...
[10:30:03.166] Number of chunks: 10
[10:30:03.166] getGlobalsAndPackagesXApply() ...
[10:30:03.166]  - future.globals: TRUE
[10:30:03.168]  - globals found/used: [n=1] ‘FUN’
[10:30:03.168]  - needed namespaces: [n=0] 
[10:30:03.168] Finding globals ... DONE
[10:30:03.168]  - use_args: TRUE
[10:30:03.168]  - Getting '...' globals ...
[10:30:03.168]    - '...' content: [n=0] 
[10:30:03.168] List of 1
[10:30:03.168]  $ ...: list()
[10:30:03.168]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.168]  - attr(*, "where")=List of 1
[10:30:03.168]   ..$ ...:<environment: 0x557e09b3eda8> 
[10:30:03.168]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.168]  - attr(*, "resolved")= logi TRUE
[10:30:03.168]  - attr(*, "total_size")= num NA
[10:30:03.171]  - Getting '...' globals ... DONE
[10:30:03.171] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:03.171] List of 2
[10:30:03.171]  $ ...future.FUN:function (x)  
[10:30:03.171]  $ ...          : list()
[10:30:03.171]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.171]  - attr(*, "where")=List of 2
[10:30:03.171]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:03.171]   ..$ ...          :<environment: 0x557e09b3eda8> 
[10:30:03.171]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.171]  - attr(*, "resolved")= logi FALSE
[10:30:03.171]  - attr(*, "total_size")= num 1840
[10:30:03.174] Packages to be attached in all futures: [n=0] 
[10:30:03.174] getGlobalsAndPackagesXApply() ... DONE
[10:30:03.174] Number of futures (= number of chunks): 10
[10:30:03.174] Launching 10 futures (chunks) ...
[10:30:03.174] Chunk #1 of 10 ...
[10:30:03.174]  - Finding globals in 'X' for chunk #1 ...
[10:30:03.175]    + additional globals found: [n=0] 
[10:30:03.175]    + additional namespaces needed: [n=0] 
[10:30:03.175]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:03.175]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.175]  - seeds: <none>
[10:30:03.175]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.195] Created future:
[10:30:03.195] MultisessionFuture:
[10:30:03.195] Label: ‘future_lapply-1’
[10:30:03.195] Expression:
[10:30:03.195] {
[10:30:03.195]     do.call(function(...) {
[10:30:03.195]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.195]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.195]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.195]             on.exit(options(oopts), add = TRUE)
[10:30:03.195]         }
[10:30:03.195]         {
[10:30:03.195]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.195]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.195]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.195]             })
[10:30:03.195]         }
[10:30:03.195]     }, args = future.call.arguments)
[10:30:03.195] }
[10:30:03.195] Lazy evaluation: FALSE
[10:30:03.195] Asynchronous evaluation: TRUE
[10:30:03.195] Local evaluation: TRUE
[10:30:03.195] Environment: R_GlobalEnv
[10:30:03.195] Capture standard output: TRUE
[10:30:03.195] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.195] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.195] Packages: <none>
[10:30:03.195] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.195] Resolved: FALSE
[10:30:03.195] Value: <not collected>
[10:30:03.195] Conditions captured: <none>
[10:30:03.195] Early signaling: FALSE
[10:30:03.195] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.195] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.207] Chunk #1 of 10 ... DONE
[10:30:03.207] Chunk #2 of 10 ...
[10:30:03.207]  - Finding globals in 'X' for chunk #2 ...
[10:30:03.208]    + additional globals found: [n=0] 
[10:30:03.208]    + additional namespaces needed: [n=0] 
[10:30:03.208]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:03.208]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.208]  - seeds: <none>
[10:30:03.208]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.226] Created future:
[10:30:03.226] MultisessionFuture:
[10:30:03.226] Label: ‘future_lapply-2’
[10:30:03.226] Expression:
[10:30:03.226] {
[10:30:03.226]     do.call(function(...) {
[10:30:03.226]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.226]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.226]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.226]             on.exit(options(oopts), add = TRUE)
[10:30:03.226]         }
[10:30:03.226]         {
[10:30:03.226]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.226]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.226]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.226]             })
[10:30:03.226]         }
[10:30:03.226]     }, args = future.call.arguments)
[10:30:03.226] }
[10:30:03.226] Lazy evaluation: FALSE
[10:30:03.226] Asynchronous evaluation: TRUE
[10:30:03.226] Local evaluation: TRUE
[10:30:03.226] Environment: R_GlobalEnv
[10:30:03.226] Capture standard output: TRUE
[10:30:03.226] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.226] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.226] Packages: <none>
[10:30:03.226] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.226] Resolved: FALSE
[10:30:03.226] Value: <not collected>
[10:30:03.226] Conditions captured: <none>
[10:30:03.226] Early signaling: FALSE
[10:30:03.226] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.226] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.238] Chunk #2 of 10 ... DONE
[10:30:03.238] Chunk #3 of 10 ...
[10:30:03.238]  - Finding globals in 'X' for chunk #3 ...
[10:30:03.238]    + additional globals found: [n=0] 
[10:30:03.238]    + additional namespaces needed: [n=0] 
[10:30:03.239]  - Finding globals in 'X' for chunk #3 ... DONE
[10:30:03.239]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.239]  - seeds: <none>
[10:30:03.239]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.267] Created future:
[10:30:03.267] MultisessionFuture:
[10:30:03.267] Label: ‘future_lapply-3’
[10:30:03.267] Expression:
[10:30:03.267] {
[10:30:03.267]     do.call(function(...) {
[10:30:03.267]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.267]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.267]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.267]             on.exit(options(oopts), add = TRUE)
[10:30:03.267]         }
[10:30:03.267]         {
[10:30:03.267]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.267]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.267]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.267]             })
[10:30:03.267]         }
[10:30:03.267]     }, args = future.call.arguments)
[10:30:03.267] }
[10:30:03.267] Lazy evaluation: FALSE
[10:30:03.267] Asynchronous evaluation: TRUE
[10:30:03.267] Local evaluation: TRUE
[10:30:03.267] Environment: R_GlobalEnv
[10:30:03.267] Capture standard output: TRUE
[10:30:03.267] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.267] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.267] Packages: <none>
[10:30:03.267] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.267] Resolved: FALSE
[10:30:03.267] Value: <not collected>
[10:30:03.267] Conditions captured: <none>
[10:30:03.267] Early signaling: FALSE
[10:30:03.267] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.267] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.278] Chunk #3 of 10 ... DONE
[10:30:03.279] Chunk #4 of 10 ...
[10:30:03.279]  - Finding globals in 'X' for chunk #4 ...
[10:30:03.279]    + additional globals found: [n=0] 
[10:30:03.279]    + additional namespaces needed: [n=0] 
[10:30:03.279]  - Finding globals in 'X' for chunk #4 ... DONE
[10:30:03.279]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.279]  - seeds: <none>
[10:30:03.280]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.319] Created future:
[10:30:03.319] MultisessionFuture:
[10:30:03.319] Label: ‘future_lapply-4’
[10:30:03.319] Expression:
[10:30:03.319] {
[10:30:03.319]     do.call(function(...) {
[10:30:03.319]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.319]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.319]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.319]             on.exit(options(oopts), add = TRUE)
[10:30:03.319]         }
[10:30:03.319]         {
[10:30:03.319]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.319]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.319]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.319]             })
[10:30:03.319]         }
[10:30:03.319]     }, args = future.call.arguments)
[10:30:03.319] }
[10:30:03.319] Lazy evaluation: FALSE
[10:30:03.319] Asynchronous evaluation: TRUE
[10:30:03.319] Local evaluation: TRUE
[10:30:03.319] Environment: R_GlobalEnv
[10:30:03.319] Capture standard output: TRUE
[10:30:03.319] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.319] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.319] Packages: <none>
[10:30:03.319] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.319] Resolved: FALSE
[10:30:03.319] Value: <not collected>
[10:30:03.319] Conditions captured: <none>
[10:30:03.319] Early signaling: FALSE
[10:30:03.319] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.319] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.331] Chunk #4 of 10 ... DONE
[10:30:03.331] Chunk #5 of 10 ...
[10:30:03.331]  - Finding globals in 'X' for chunk #5 ...
[10:30:03.331]    + additional globals found: [n=0] 
[10:30:03.332]    + additional namespaces needed: [n=0] 
[10:30:03.332]  - Finding globals in 'X' for chunk #5 ... DONE
[10:30:03.332]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.332]  - seeds: <none>
[10:30:03.332]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.360] Created future:
[10:30:03.360] MultisessionFuture:
[10:30:03.360] Label: ‘future_lapply-5’
[10:30:03.360] Expression:
[10:30:03.360] {
[10:30:03.360]     do.call(function(...) {
[10:30:03.360]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.360]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.360]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.360]             on.exit(options(oopts), add = TRUE)
[10:30:03.360]         }
[10:30:03.360]         {
[10:30:03.360]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.360]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.360]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.360]             })
[10:30:03.360]         }
[10:30:03.360]     }, args = future.call.arguments)
[10:30:03.360] }
[10:30:03.360] Lazy evaluation: FALSE
[10:30:03.360] Asynchronous evaluation: TRUE
[10:30:03.360] Local evaluation: TRUE
[10:30:03.360] Environment: R_GlobalEnv
[10:30:03.360] Capture standard output: TRUE
[10:30:03.360] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.360] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.360] Packages: <none>
[10:30:03.360] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.360] Resolved: FALSE
[10:30:03.360] Value: <not collected>
[10:30:03.360] Conditions captured: <none>
[10:30:03.360] Early signaling: FALSE
[10:30:03.360] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.360] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.372] Chunk #5 of 10 ... DONE
[10:30:03.372] Chunk #6 of 10 ...
[10:30:03.372]  - Finding globals in 'X' for chunk #6 ...
[10:30:03.372]    + additional globals found: [n=0] 
[10:30:03.372]    + additional namespaces needed: [n=0] 
[10:30:03.373]  - Finding globals in 'X' for chunk #6 ... DONE
[10:30:03.373]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.373]  - seeds: <none>
[10:30:03.373]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.402] Created future:
[10:30:03.402] MultisessionFuture:
[10:30:03.402] Label: ‘future_lapply-6’
[10:30:03.402] Expression:
[10:30:03.402] {
[10:30:03.402]     do.call(function(...) {
[10:30:03.402]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.402]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.402]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.402]             on.exit(options(oopts), add = TRUE)
[10:30:03.402]         }
[10:30:03.402]         {
[10:30:03.402]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.402]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.402]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.402]             })
[10:30:03.402]         }
[10:30:03.402]     }, args = future.call.arguments)
[10:30:03.402] }
[10:30:03.402] Lazy evaluation: FALSE
[10:30:03.402] Asynchronous evaluation: TRUE
[10:30:03.402] Local evaluation: TRUE
[10:30:03.402] Environment: R_GlobalEnv
[10:30:03.402] Capture standard output: TRUE
[10:30:03.402] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.402] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.402] Packages: <none>
[10:30:03.402] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.402] Resolved: TRUE
[10:30:03.402] Value: <not collected>
[10:30:03.402] Conditions captured: <none>
[10:30:03.402] Early signaling: FALSE
[10:30:03.402] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.402] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.404] Chunk #6 of 10 ... DONE
[10:30:03.404] Chunk #7 of 10 ...
[10:30:03.404]  - Finding globals in 'X' for chunk #7 ...
[10:30:03.405]    + additional globals found: [n=0] 
[10:30:03.405]    + additional namespaces needed: [n=0] 
[10:30:03.405]  - Finding globals in 'X' for chunk #7 ... DONE
[10:30:03.405]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.405]  - seeds: <none>
[10:30:03.405]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.422] Created future:
[10:30:03.422] MultisessionFuture:
[10:30:03.422] Label: ‘future_lapply-7’
[10:30:03.422] Expression:
[10:30:03.422] {
[10:30:03.422]     do.call(function(...) {
[10:30:03.422]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.422]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.422]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.422]             on.exit(options(oopts), add = TRUE)
[10:30:03.422]         }
[10:30:03.422]         {
[10:30:03.422]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.422]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.422]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.422]             })
[10:30:03.422]         }
[10:30:03.422]     }, args = future.call.arguments)
[10:30:03.422] }
[10:30:03.422] Lazy evaluation: FALSE
[10:30:03.422] Asynchronous evaluation: TRUE
[10:30:03.422] Local evaluation: TRUE
[10:30:03.422] Environment: R_GlobalEnv
[10:30:03.422] Capture standard output: TRUE
[10:30:03.422] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.422] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.422] Packages: <none>
[10:30:03.422] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.422] Resolved: FALSE
[10:30:03.422] Value: <not collected>
[10:30:03.422] Conditions captured: <none>
[10:30:03.422] Early signaling: FALSE
[10:30:03.422] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.422] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.434] Chunk #7 of 10 ... DONE
[10:30:03.434] Chunk #8 of 10 ...
[10:30:03.434]  - Finding globals in 'X' for chunk #8 ...
[10:30:03.434]    + additional globals found: [n=0] 
[10:30:03.435]    + additional namespaces needed: [n=0] 
[10:30:03.435]  - Finding globals in 'X' for chunk #8 ... DONE
[10:30:03.435]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.435]  - seeds: <none>
[10:30:03.435]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.464] Created future:
[10:30:03.464] MultisessionFuture:
[10:30:03.464] Label: ‘future_lapply-8’
[10:30:03.464] Expression:
[10:30:03.464] {
[10:30:03.464]     do.call(function(...) {
[10:30:03.464]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.464]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.464]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.464]             on.exit(options(oopts), add = TRUE)
[10:30:03.464]         }
[10:30:03.464]         {
[10:30:03.464]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.464]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.464]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.464]             })
[10:30:03.464]         }
[10:30:03.464]     }, args = future.call.arguments)
[10:30:03.464] }
[10:30:03.464] Lazy evaluation: FALSE
[10:30:03.464] Asynchronous evaluation: TRUE
[10:30:03.464] Local evaluation: TRUE
[10:30:03.464] Environment: R_GlobalEnv
[10:30:03.464] Capture standard output: TRUE
[10:30:03.464] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.464] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.464] Packages: <none>
[10:30:03.464] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.464] Resolved: FALSE
[10:30:03.464] Value: <not collected>
[10:30:03.464] Conditions captured: <none>
[10:30:03.464] Early signaling: FALSE
[10:30:03.464] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.464] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.476] Chunk #8 of 10 ... DONE
[10:30:03.476] Chunk #9 of 10 ...
[10:30:03.476]  - Finding globals in 'X' for chunk #9 ...
[10:30:03.476]    + additional globals found: [n=0] 
[10:30:03.476]    + additional namespaces needed: [n=0] 
[10:30:03.477]  - Finding globals in 'X' for chunk #9 ... DONE
[10:30:03.477]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.477]  - seeds: <none>
[10:30:03.477]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.505] Created future:
[10:30:03.505] MultisessionFuture:
[10:30:03.505] Label: ‘future_lapply-9’
[10:30:03.505] Expression:
[10:30:03.505] {
[10:30:03.505]     do.call(function(...) {
[10:30:03.505]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.505]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.505]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.505]             on.exit(options(oopts), add = TRUE)
[10:30:03.505]         }
[10:30:03.505]         {
[10:30:03.505]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.505]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.505]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.505]             })
[10:30:03.505]         }
[10:30:03.505]     }, args = future.call.arguments)
[10:30:03.505] }
[10:30:03.505] Lazy evaluation: FALSE
[10:30:03.505] Asynchronous evaluation: TRUE
[10:30:03.505] Local evaluation: TRUE
[10:30:03.505] Environment: R_GlobalEnv
[10:30:03.505] Capture standard output: TRUE
[10:30:03.505] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.505] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.505] Packages: <none>
[10:30:03.505] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.505] Resolved: FALSE
[10:30:03.505] Value: <not collected>
[10:30:03.505] Conditions captured: <none>
[10:30:03.505] Early signaling: FALSE
[10:30:03.505] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.505] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.517] Chunk #9 of 10 ... DONE
[10:30:03.517] Chunk #10 of 10 ...
[10:30:03.517]  - Finding globals in 'X' for chunk #10 ...
[10:30:03.517]    + additional globals found: [n=0] 
[10:30:03.518]    + additional namespaces needed: [n=0] 
[10:30:03.518]  - Finding globals in 'X' for chunk #10 ... DONE
[10:30:03.518]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:30:03.518]  - seeds: <none>
[10:30:03.518]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.549] Created future:
[10:30:03.549] MultisessionFuture:
[10:30:03.549] Label: ‘future_lapply-10’
[10:30:03.549] Expression:
[10:30:03.549] {
[10:30:03.549]     do.call(function(...) {
[10:30:03.549]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.549]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.549]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.549]             on.exit(options(oopts), add = TRUE)
[10:30:03.549]         }
[10:30:03.549]         {
[10:30:03.549]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.549]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.549]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.549]             })
[10:30:03.549]         }
[10:30:03.549]     }, args = future.call.arguments)
[10:30:03.549] }
[10:30:03.549] Lazy evaluation: FALSE
[10:30:03.549] Asynchronous evaluation: TRUE
[10:30:03.549] Local evaluation: TRUE
[10:30:03.549] Environment: R_GlobalEnv
[10:30:03.549] Capture standard output: TRUE
[10:30:03.549] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.549] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.549] Packages: <none>
[10:30:03.549] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.549] Resolved: FALSE
[10:30:03.549] Value: <not collected>
[10:30:03.549] Conditions captured: <none>
[10:30:03.549] Early signaling: FALSE
[10:30:03.549] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.549] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.561] Chunk #10 of 10 ... DONE
[10:30:03.561] Launching 10 futures (chunks) ... DONE
[10:30:03.561] Resolving 10 futures (chunks) ...
[10:30:03.595]  - Number of value chunks collected: 10
[10:30:03.595] Resolving 10 futures (chunks) ... DONE
[10:30:03.595] Reducing values from 10 chunks ...
[10:30:03.595]  - Number of values collected after concatenation: 10
[10:30:03.596]  - Number of values expected: 10
[10:30:03.596] Reducing values from 10 chunks ... DONE
[10:30:03.596] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:30:03.599] future_lapply() ...
[10:30:03.604] Number of chunks: 5
[10:30:03.604] getGlobalsAndPackagesXApply() ...
[10:30:03.604]  - future.globals: TRUE
[10:30:03.606]  - globals found/used: [n=1] ‘FUN’
[10:30:03.606]  - needed namespaces: [n=0] 
[10:30:03.606] Finding globals ... DONE
[10:30:03.606]  - use_args: TRUE
[10:30:03.606]  - Getting '...' globals ...
[10:30:03.607]    - '...' content: [n=0] 
[10:30:03.607] List of 1
[10:30:03.607]  $ ...: list()
[10:30:03.607]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.607]  - attr(*, "where")=List of 1
[10:30:03.607]   ..$ ...:<environment: 0x557e08cb58a0> 
[10:30:03.607]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.607]  - attr(*, "resolved")= logi TRUE
[10:30:03.607]  - attr(*, "total_size")= num NA
[10:30:03.609]  - Getting '...' globals ... DONE
[10:30:03.610] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:03.610] List of 2
[10:30:03.610]  $ ...future.FUN:function (x)  
[10:30:03.610]  $ ...          : list()
[10:30:03.610]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.610]  - attr(*, "where")=List of 2
[10:30:03.610]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:03.610]   ..$ ...          :<environment: 0x557e08cb58a0> 
[10:30:03.610]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.610]  - attr(*, "resolved")= logi FALSE
[10:30:03.610]  - attr(*, "total_size")= num 1840
[10:30:03.612] Packages to be attached in all futures: [n=0] 
[10:30:03.613] getGlobalsAndPackagesXApply() ... DONE
[10:30:03.613] Number of futures (= number of chunks): 5
[10:30:03.613] Launching 5 futures (chunks) ...
[10:30:03.613] Chunk #1 of 5 ...
[10:30:03.613]  - Finding globals in 'X' for chunk #1 ...
[10:30:03.613]    + additional globals found: [n=0] 
[10:30:03.614]    + additional namespaces needed: [n=0] 
[10:30:03.614]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:03.614]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:30:03.614]  - seeds: <none>
[10:30:03.614]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.631] Created future:
[10:30:03.631] MultisessionFuture:
[10:30:03.631] Label: ‘future_lapply-1’
[10:30:03.631] Expression:
[10:30:03.631] {
[10:30:03.631]     do.call(function(...) {
[10:30:03.631]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.631]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.631]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.631]             on.exit(options(oopts), add = TRUE)
[10:30:03.631]         }
[10:30:03.631]         {
[10:30:03.631]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.631]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.631]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.631]             })
[10:30:03.631]         }
[10:30:03.631]     }, args = future.call.arguments)
[10:30:03.631] }
[10:30:03.631] Lazy evaluation: FALSE
[10:30:03.631] Asynchronous evaluation: TRUE
[10:30:03.631] Local evaluation: TRUE
[10:30:03.631] Environment: R_GlobalEnv
[10:30:03.631] Capture standard output: TRUE
[10:30:03.631] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.631] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.631] Packages: <none>
[10:30:03.631] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.631] Resolved: FALSE
[10:30:03.631] Value: <not collected>
[10:30:03.631] Conditions captured: <none>
[10:30:03.631] Early signaling: FALSE
[10:30:03.631] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.631] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.643] Chunk #1 of 5 ... DONE
[10:30:03.643] Chunk #2 of 5 ...
[10:30:03.643]  - Finding globals in 'X' for chunk #2 ...
[10:30:03.644]    + additional globals found: [n=0] 
[10:30:03.644]    + additional namespaces needed: [n=0] 
[10:30:03.644]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:03.644]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:30:03.644]  - seeds: <none>
[10:30:03.644]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.661] Created future:
[10:30:03.661] MultisessionFuture:
[10:30:03.661] Label: ‘future_lapply-2’
[10:30:03.661] Expression:
[10:30:03.661] {
[10:30:03.661]     do.call(function(...) {
[10:30:03.661]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.661]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.661]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.661]             on.exit(options(oopts), add = TRUE)
[10:30:03.661]         }
[10:30:03.661]         {
[10:30:03.661]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.661]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.661]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.661]             })
[10:30:03.661]         }
[10:30:03.661]     }, args = future.call.arguments)
[10:30:03.661] }
[10:30:03.661] Lazy evaluation: FALSE
[10:30:03.661] Asynchronous evaluation: TRUE
[10:30:03.661] Local evaluation: TRUE
[10:30:03.661] Environment: R_GlobalEnv
[10:30:03.661] Capture standard output: TRUE
[10:30:03.661] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.661] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.661] Packages: <none>
[10:30:03.661] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.661] Resolved: FALSE
[10:30:03.661] Value: <not collected>
[10:30:03.661] Conditions captured: <none>
[10:30:03.661] Early signaling: FALSE
[10:30:03.661] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.661] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.673] Chunk #2 of 5 ... DONE
[10:30:03.673] Chunk #3 of 5 ...
[10:30:03.673]  - Finding globals in 'X' for chunk #3 ...
[10:30:03.674]    + additional globals found: [n=0] 
[10:30:03.674]    + additional namespaces needed: [n=0] 
[10:30:03.674]  - Finding globals in 'X' for chunk #3 ... DONE
[10:30:03.674]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:30:03.675]  - seeds: <none>
[10:30:03.675]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.706] Created future:
[10:30:03.706] MultisessionFuture:
[10:30:03.706] Label: ‘future_lapply-3’
[10:30:03.706] Expression:
[10:30:03.706] {
[10:30:03.706]     do.call(function(...) {
[10:30:03.706]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.706]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.706]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.706]             on.exit(options(oopts), add = TRUE)
[10:30:03.706]         }
[10:30:03.706]         {
[10:30:03.706]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.706]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.706]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.706]             })
[10:30:03.706]         }
[10:30:03.706]     }, args = future.call.arguments)
[10:30:03.706] }
[10:30:03.706] Lazy evaluation: FALSE
[10:30:03.706] Asynchronous evaluation: TRUE
[10:30:03.706] Local evaluation: TRUE
[10:30:03.706] Environment: R_GlobalEnv
[10:30:03.706] Capture standard output: TRUE
[10:30:03.706] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.706] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.706] Packages: <none>
[10:30:03.706] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.706] Resolved: FALSE
[10:30:03.706] Value: <not collected>
[10:30:03.706] Conditions captured: <none>
[10:30:03.706] Early signaling: FALSE
[10:30:03.706] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.706] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.718] Chunk #3 of 5 ... DONE
[10:30:03.718] Chunk #4 of 5 ...
[10:30:03.718]  - Finding globals in 'X' for chunk #4 ...
[10:30:03.718]    + additional globals found: [n=0] 
[10:30:03.718]    + additional namespaces needed: [n=0] 
[10:30:03.718]  - Finding globals in 'X' for chunk #4 ... DONE
[10:30:03.718]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:30:03.719]  - seeds: <none>
[10:30:03.719]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.747] Created future:
[10:30:03.747] MultisessionFuture:
[10:30:03.747] Label: ‘future_lapply-4’
[10:30:03.747] Expression:
[10:30:03.747] {
[10:30:03.747]     do.call(function(...) {
[10:30:03.747]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.747]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.747]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.747]             on.exit(options(oopts), add = TRUE)
[10:30:03.747]         }
[10:30:03.747]         {
[10:30:03.747]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.747]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.747]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.747]             })
[10:30:03.747]         }
[10:30:03.747]     }, args = future.call.arguments)
[10:30:03.747] }
[10:30:03.747] Lazy evaluation: FALSE
[10:30:03.747] Asynchronous evaluation: TRUE
[10:30:03.747] Local evaluation: TRUE
[10:30:03.747] Environment: R_GlobalEnv
[10:30:03.747] Capture standard output: TRUE
[10:30:03.747] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.747] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.747] Packages: <none>
[10:30:03.747] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.747] Resolved: FALSE
[10:30:03.747] Value: <not collected>
[10:30:03.747] Conditions captured: <none>
[10:30:03.747] Early signaling: FALSE
[10:30:03.747] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.747] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.759] Chunk #4 of 5 ... DONE
[10:30:03.759] Chunk #5 of 5 ...
[10:30:03.759]  - Finding globals in 'X' for chunk #5 ...
[10:30:03.759]    + additional globals found: [n=0] 
[10:30:03.760]    + additional namespaces needed: [n=0] 
[10:30:03.760]  - Finding globals in 'X' for chunk #5 ... DONE
[10:30:03.760]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:30:03.760]  - seeds: <none>
[10:30:03.760]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.788] Created future:
[10:30:03.789] MultisessionFuture:
[10:30:03.789] Label: ‘future_lapply-5’
[10:30:03.789] Expression:
[10:30:03.789] {
[10:30:03.789]     do.call(function(...) {
[10:30:03.789]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.789]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.789]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.789]             on.exit(options(oopts), add = TRUE)
[10:30:03.789]         }
[10:30:03.789]         {
[10:30:03.789]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.789]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.789]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.789]             })
[10:30:03.789]         }
[10:30:03.789]     }, args = future.call.arguments)
[10:30:03.789] }
[10:30:03.789] Lazy evaluation: FALSE
[10:30:03.789] Asynchronous evaluation: TRUE
[10:30:03.789] Local evaluation: TRUE
[10:30:03.789] Environment: R_GlobalEnv
[10:30:03.789] Capture standard output: TRUE
[10:30:03.789] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.789] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.789] Packages: <none>
[10:30:03.789] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.789] Resolved: FALSE
[10:30:03.789] Value: <not collected>
[10:30:03.789] Conditions captured: <none>
[10:30:03.789] Early signaling: FALSE
[10:30:03.789] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.789] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.800] Chunk #5 of 5 ... DONE
[10:30:03.800] Launching 5 futures (chunks) ... DONE
[10:30:03.801] Resolving 5 futures (chunks) ...
[10:30:03.831]  - Number of value chunks collected: 5
[10:30:03.831] Resolving 5 futures (chunks) ... DONE
[10:30:03.831] Reducing values from 5 chunks ...
[10:30:03.831]  - Number of values collected after concatenation: 10
[10:30:03.831]  - Number of values expected: 10
[10:30:03.832] Reducing values from 5 chunks ... DONE
[10:30:03.832] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:30:03.835] future_lapply() ...
[10:30:03.840] Number of chunks: 2
[10:30:03.840] getGlobalsAndPackagesXApply() ...
[10:30:03.840]  - future.globals: TRUE
[10:30:03.842]  - globals found/used: [n=1] ‘FUN’
[10:30:03.842]  - needed namespaces: [n=0] 
[10:30:03.842] Finding globals ... DONE
[10:30:03.842]  - use_args: TRUE
[10:30:03.843]  - Getting '...' globals ...
[10:30:03.843]    - '...' content: [n=0] 
[10:30:03.843] List of 1
[10:30:03.843]  $ ...: list()
[10:30:03.843]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.843]  - attr(*, "where")=List of 1
[10:30:03.843]   ..$ ...:<environment: 0x557e0720d770> 
[10:30:03.843]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.843]  - attr(*, "resolved")= logi TRUE
[10:30:03.843]  - attr(*, "total_size")= num NA
[10:30:03.846]  - Getting '...' globals ... DONE
[10:30:03.846] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:03.846] List of 2
[10:30:03.846]  $ ...future.FUN:function (x)  
[10:30:03.846]  $ ...          : list()
[10:30:03.846]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.846]  - attr(*, "where")=List of 2
[10:30:03.846]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:03.846]   ..$ ...          :<environment: 0x557e0720d770> 
[10:30:03.846]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.846]  - attr(*, "resolved")= logi FALSE
[10:30:03.846]  - attr(*, "total_size")= num 1840
[10:30:03.848] Packages to be attached in all futures: [n=0] 
[10:30:03.849] getGlobalsAndPackagesXApply() ... DONE
[10:30:03.849] Number of futures (= number of chunks): 2
[10:30:03.849] Launching 2 futures (chunks) ...
[10:30:03.849] Chunk #1 of 2 ...
[10:30:03.849]  - Finding globals in 'X' for chunk #1 ...
[10:30:03.849]    + additional globals found: [n=0] 
[10:30:03.850]    + additional namespaces needed: [n=0] 
[10:30:03.850]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:03.850]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[10:30:03.850]  - seeds: <none>
[10:30:03.850]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.867] Created future:
[10:30:03.867] MultisessionFuture:
[10:30:03.867] Label: ‘future_lapply-1’
[10:30:03.867] Expression:
[10:30:03.867] {
[10:30:03.867]     do.call(function(...) {
[10:30:03.867]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.867]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.867]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.867]             on.exit(options(oopts), add = TRUE)
[10:30:03.867]         }
[10:30:03.867]         {
[10:30:03.867]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.867]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.867]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.867]             })
[10:30:03.867]         }
[10:30:03.867]     }, args = future.call.arguments)
[10:30:03.867] }
[10:30:03.867] Lazy evaluation: FALSE
[10:30:03.867] Asynchronous evaluation: TRUE
[10:30:03.867] Local evaluation: TRUE
[10:30:03.867] Environment: R_GlobalEnv
[10:30:03.867] Capture standard output: TRUE
[10:30:03.867] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.867] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.867] Packages: <none>
[10:30:03.867] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.867] Resolved: FALSE
[10:30:03.867] Value: <not collected>
[10:30:03.867] Conditions captured: <none>
[10:30:03.867] Early signaling: FALSE
[10:30:03.867] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.867] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.879] Chunk #1 of 2 ... DONE
[10:30:03.879] Chunk #2 of 2 ...
[10:30:03.879]  - Finding globals in 'X' for chunk #2 ...
[10:30:03.880]    + additional globals found: [n=0] 
[10:30:03.880]    + additional namespaces needed: [n=0] 
[10:30:03.880]  - Finding globals in 'X' for chunk #2 ... DONE
[10:30:03.880]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[10:30:03.880]  - seeds: <none>
[10:30:03.880]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.904] Created future:
[10:30:03.904] MultisessionFuture:
[10:30:03.904] Label: ‘future_lapply-2’
[10:30:03.904] Expression:
[10:30:03.904] {
[10:30:03.904]     do.call(function(...) {
[10:30:03.904]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.904]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.904]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.904]             on.exit(options(oopts), add = TRUE)
[10:30:03.904]         }
[10:30:03.904]         {
[10:30:03.904]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.904]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.904]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.904]             })
[10:30:03.904]         }
[10:30:03.904]     }, args = future.call.arguments)
[10:30:03.904] }
[10:30:03.904] Lazy evaluation: FALSE
[10:30:03.904] Asynchronous evaluation: TRUE
[10:30:03.904] Local evaluation: TRUE
[10:30:03.904] Environment: R_GlobalEnv
[10:30:03.904] Capture standard output: TRUE
[10:30:03.904] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.904] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.904] Packages: <none>
[10:30:03.904] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.904] Resolved: FALSE
[10:30:03.904] Value: <not collected>
[10:30:03.904] Conditions captured: <none>
[10:30:03.904] Early signaling: FALSE
[10:30:03.904] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.904] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.916] Chunk #2 of 2 ... DONE
[10:30:03.916] Launching 2 futures (chunks) ... DONE
[10:30:03.916] Resolving 2 futures (chunks) ...
[10:30:03.947]  - Number of value chunks collected: 2
[10:30:03.947] Resolving 2 futures (chunks) ... DONE
[10:30:03.947] Reducing values from 2 chunks ...
[10:30:03.947]  - Number of values collected after concatenation: 10
[10:30:03.947]  - Number of values expected: 10
[10:30:03.948] Reducing values from 2 chunks ... DONE
[10:30:03.948] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:30:03.952] future_lapply() ...
[10:30:03.955] Number of chunks: 1
[10:30:03.956] getGlobalsAndPackagesXApply() ...
[10:30:03.956]  - future.globals: TRUE
[10:30:03.958]  - globals found/used: [n=1] ‘FUN’
[10:30:03.958]  - needed namespaces: [n=0] 
[10:30:03.958] Finding globals ... DONE
[10:30:03.958]  - use_args: TRUE
[10:30:03.958]  - Getting '...' globals ...
[10:30:03.958]    - '...' content: [n=0] 
[10:30:03.958] List of 1
[10:30:03.958]  $ ...: list()
[10:30:03.958]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.958]  - attr(*, "where")=List of 1
[10:30:03.958]   ..$ ...:<environment: 0x557e093c0fd8> 
[10:30:03.958]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.958]  - attr(*, "resolved")= logi TRUE
[10:30:03.958]  - attr(*, "total_size")= num NA
[10:30:03.961]  - Getting '...' globals ... DONE
[10:30:03.961] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:03.961] List of 2
[10:30:03.961]  $ ...future.FUN:function (x)  
[10:30:03.961]  $ ...          : list()
[10:30:03.961]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:03.961]  - attr(*, "where")=List of 2
[10:30:03.961]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:03.961]   ..$ ...          :<environment: 0x557e093c0fd8> 
[10:30:03.961]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:03.961]  - attr(*, "resolved")= logi FALSE
[10:30:03.961]  - attr(*, "total_size")= num 1840
[10:30:03.964] Packages to be attached in all futures: [n=0] 
[10:30:03.964] getGlobalsAndPackagesXApply() ... DONE
[10:30:03.964] Number of futures (= number of chunks): 1
[10:30:03.964] Launching 1 futures (chunks) ...
[10:30:03.964] Chunk #1 of 1 ...
[10:30:03.964]  - Finding globals in 'X' for chunk #1 ...
[10:30:03.965]    + additional globals found: [n=0] 
[10:30:03.965]    + additional namespaces needed: [n=0] 
[10:30:03.965]  - Finding globals in 'X' for chunk #1 ... DONE
[10:30:03.965]  - seeds: <none>
[10:30:03.965]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:30:03.983] Created future:
[10:30:03.983] MultisessionFuture:
[10:30:03.983] Label: ‘future_lapply-1’
[10:30:03.983] Expression:
[10:30:03.983] {
[10:30:03.983]     do.call(function(...) {
[10:30:03.983]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:30:03.983]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:30:03.983]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:30:03.983]             on.exit(options(oopts), add = TRUE)
[10:30:03.983]         }
[10:30:03.983]         {
[10:30:03.983]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:30:03.983]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:30:03.983]                 ...future.FUN(...future.X_jj, ...)
[10:30:03.983]             })
[10:30:03.983]         }
[10:30:03.983]     }, args = future.call.arguments)
[10:30:03.983] }
[10:30:03.983] Lazy evaluation: FALSE
[10:30:03.983] Asynchronous evaluation: TRUE
[10:30:03.983] Local evaluation: TRUE
[10:30:03.983] Environment: R_GlobalEnv
[10:30:03.983] Capture standard output: TRUE
[10:30:03.983] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:30:03.983] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:30:03.983] Packages: <none>
[10:30:03.983] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:30:03.983] Resolved: FALSE
[10:30:03.983] Value: <not collected>
[10:30:03.983] Conditions captured: <none>
[10:30:03.983] Early signaling: FALSE
[10:30:03.983] Owner process: 6c0cd566-51b9-84e8-f13e-75bca52ce970
[10:30:03.983] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:30:03.994] Chunk #1 of 1 ... DONE
[10:30:03.995] Launching 1 futures (chunks) ... DONE
[10:30:03.995] Resolving 1 futures (chunks) ...
[10:30:04.037]  - Number of value chunks collected: 1
[10:30:04.037] Resolving 1 futures (chunks) ... DONE
[10:30:04.038] Reducing values from 1 chunks ...
[10:30:04.038]  - Number of values collected after concatenation: 10
[10:30:04.038]  - Number of values expected: 10
[10:30:04.038] Reducing values from 1 chunks ... DONE
[10:30:04.038] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[10:30:04.042] future_lapply() ...
[10:30:04.046] Number of chunks: 1
[10:30:04.046] getGlobalsAndPackagesXApply() ...
[10:30:04.046] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[10:30:04.046] future_lapply() ...
[10:30:04.050] Number of chunks: 1
[10:30:04.050] getGlobalsAndPackagesXApply() ...
[10:30:04.050]  - future.globals: <name-value list> with names ‘1’
[10:30:04.050] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[10:30:04.050] future_lapply() ...
[10:30:04.054] Number of chunks: 1
[10:30:04.054] getGlobalsAndPackagesXApply() ...
[10:30:04.054]  - future.globals: ‘...future.FUN’
[10:30:04.054]  - use_args: TRUE
[10:30:04.054] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[10:30:04.055] future_lapply() ...
[10:30:04.058] Number of chunks: 1
[10:30:04.058] getGlobalsAndPackagesXApply() ...
[10:30:04.058]  - future.globals: ‘...future.FUN’
[10:30:04.058]  - use_args: TRUE
[10:30:04.059] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[10:30:04.059] future_lapply() ...
[10:30:04.062] Number of chunks: 1
[10:30:04.062] getGlobalsAndPackagesXApply() ...
[10:30:04.062]  - future.globals: TRUE
[10:30:04.066]  - globals found/used: [n=1] ‘FUN’
[10:30:04.066]  - needed namespaces: [n=0] 
[10:30:04.066] Finding globals ... DONE
[10:30:04.066]  - use_args: TRUE
[10:30:04.066]  - Getting '...' globals ...
[10:30:04.067]    - '...' content: [n=0] 
[10:30:04.067] List of 1
[10:30:04.067]  $ ...: list()
[10:30:04.067]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:04.067]  - attr(*, "where")=List of 1
[10:30:04.067]   ..$ ...:<environment: 0x557e0a2206c0> 
[10:30:04.067]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:04.067]  - attr(*, "resolved")= logi TRUE
[10:30:04.067]  - attr(*, "total_size")= num NA
[10:30:04.070]  - Getting '...' globals ... DONE
[10:30:04.070] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:30:04.070] List of 2
[10:30:04.070]  $ ...future.FUN:function (f)  
[10:30:04.070]  $ ...          : list()
[10:30:04.070]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:30:04.070]  - attr(*, "where")=List of 2
[10:30:04.070]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:30:04.070]   ..$ ...          :<environment: 0x557e0a2206c0> 
[10:30:04.070]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:30:04.070]  - attr(*, "resolved")= logi FALSE
[10:30:04.070]  - attr(*, "total_size")= num 336
[10:30:04.072] Packages to be attached in all futures: [n=0] 
[10:30:04.073] getGlobalsAndPackagesXApply() ... DONE
[10:30:04.073] Number of futures (= number of chunks): 1
[10:30:04.073] Launching 1 futures (chunks) ...
[10:30:04.073] Chunk #1 of 1 ...
[10:30:04.073]  - Finding globals in 'X' for chunk #1 ...
[10:30:04.074]    + additional globals found: [n=1] ‘...future.elements_ii’
[10:30:04.074]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
