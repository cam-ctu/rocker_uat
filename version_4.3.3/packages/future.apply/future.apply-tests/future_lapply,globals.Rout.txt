
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[13:33:46.538] plan(): Setting new future strategy stack:
[13:33:46.538] List of future strategies:
[13:33:46.538] 1. sequential:
[13:33:46.538]    - args: function (..., envir = parent.frame())
[13:33:46.538]    - tweaked: FALSE
[13:33:46.538]    - call: future::plan("sequential")
[13:33:46.551] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[13:33:47.112] future_lapply() ...
[13:33:47.118] Number of chunks: 1
[13:33:47.119] getGlobalsAndPackagesXApply() ...
[13:33:47.119]  - future.globals: FALSE
[13:33:47.123]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:33:47.123]  - needed namespaces: [n=0] 
[13:33:47.124] Finding globals ... DONE
[13:33:47.124]  - use_args: TRUE
[13:33:47.124]  - Getting '...' globals ...
[13:33:47.125]    - '...' content: [n=0] 
[13:33:47.125] List of 1
[13:33:47.125]  $ ...: list()
[13:33:47.125]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.125]  - attr(*, "where")=List of 1
[13:33:47.125]   ..$ ...:<environment: 0x5620cee8b638> 
[13:33:47.125]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.125]  - attr(*, "resolved")= logi TRUE
[13:33:47.125]  - attr(*, "total_size")= num NA
[13:33:47.129]  - Getting '...' globals ... DONE
[13:33:47.129] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:33:47.129] List of 3
[13:33:47.129]  $ ...future.FUN        :function (x)  
[13:33:47.129]  $ future.call.arguments: list()
[13:33:47.129]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.129]  $ ...                  : list()
[13:33:47.129]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.129]  - attr(*, "where")=List of 3
[13:33:47.129]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:33:47.129]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:33:47.129]   ..$ ...                  :<environment: 0x5620cee8b638> 
[13:33:47.129]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.129]  - attr(*, "resolved")= logi FALSE
[13:33:47.129]  - attr(*, "total_size")= num 3824
[13:33:47.134] Packages to be attached in all futures: [n=1] ‘utils’
[13:33:47.134] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.134] Number of futures (= number of chunks): 1
[13:33:47.135] Launching 1 futures (chunks) ...
[13:33:47.135] Chunk #1 of 1 ...
[13:33:47.135]  - seeds: <none>
[13:33:47.135]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.145] Created future:
[13:33:47.145] ClusterFuture:
[13:33:47.145] Label: ‘future_lapply-1’
[13:33:47.145] Expression:
[13:33:47.145] {
[13:33:47.145]     do.call(function(...) {
[13:33:47.145]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.145]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.145]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.145]             on.exit(options(oopts), add = TRUE)
[13:33:47.145]         }
[13:33:47.145]         {
[13:33:47.145]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.145]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.145]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.145]             })
[13:33:47.145]         }
[13:33:47.145]     }, args = future.call.arguments)
[13:33:47.145] }
[13:33:47.145] Lazy evaluation: FALSE
[13:33:47.145] Asynchronous evaluation: TRUE
[13:33:47.145] Local evaluation: TRUE
[13:33:47.145] Environment: R_GlobalEnv
[13:33:47.145] Capture standard output: TRUE
[13:33:47.145] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.145] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.145] Packages: 1 packages (‘utils’)
[13:33:47.145] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.145] Resolved: FALSE
[13:33:47.145] Value: <not collected>
[13:33:47.145] Conditions captured: <none>
[13:33:47.145] Early signaling: FALSE
[13:33:47.145] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.145] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.158] Chunk #1 of 1 ... DONE
[13:33:47.158] Launching 1 futures (chunks) ... DONE
[13:33:47.158] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[13:33:47.202] future_lapply() ...
[13:33:47.203] Number of chunks: 1
[13:33:47.203] getGlobalsAndPackagesXApply() ...
[13:33:47.203]  - future.globals: TRUE
[13:33:47.206]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[13:33:47.206]  - needed namespaces: [n=1] ‘stats’
[13:33:47.207] Finding globals ... DONE
[13:33:47.207]  - use_args: TRUE
[13:33:47.207]  - Getting '...' globals ...
[13:33:47.207]    - '...' content: [n=0] 
[13:33:47.207] List of 1
[13:33:47.207]  $ ...: list()
[13:33:47.207]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.207]  - attr(*, "where")=List of 1
[13:33:47.207]   ..$ ...:<environment: 0x5620d24687a0> 
[13:33:47.207]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.207]  - attr(*, "resolved")= logi TRUE
[13:33:47.207]  - attr(*, "total_size")= num NA
[13:33:47.210]  - Getting '...' globals ... DONE
[13:33:47.211] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[13:33:47.211] List of 4
[13:33:47.211]  $ ...future.FUN:function (x)  
[13:33:47.211]  $ a            : num 1
[13:33:47.211]  $ b            : num 2
[13:33:47.211]  $ ...          : list()
[13:33:47.211]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.211]  - attr(*, "where")=List of 4
[13:33:47.211]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.211]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:47.211]   ..$ b            :<environment: R_EmptyEnv> 
[13:33:47.211]   ..$ ...          :<environment: 0x5620d24687a0> 
[13:33:47.211]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.211]  - attr(*, "resolved")= logi FALSE
[13:33:47.211]  - attr(*, "total_size")= num 3936
[13:33:47.219] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[13:33:47.219] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.219] Number of futures (= number of chunks): 1
[13:33:47.219] Launching 1 futures (chunks) ...
[13:33:47.219] Chunk #1 of 1 ...
[13:33:47.219]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.220]    + additional globals found: [n=0] 
[13:33:47.220]    + additional namespaces needed: [n=0] 
[13:33:47.220]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.220]  - seeds: <none>
[13:33:47.220]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.229] Created future:
[13:33:47.229] ClusterFuture:
[13:33:47.229] Label: ‘future_lapply-1’
[13:33:47.229] Expression:
[13:33:47.229] {
[13:33:47.229]     do.call(function(...) {
[13:33:47.229]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.229]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.229]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.229]             on.exit(options(oopts), add = TRUE)
[13:33:47.229]         }
[13:33:47.229]         {
[13:33:47.229]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.229]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.229]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.229]             })
[13:33:47.229]         }
[13:33:47.229]     }, args = future.call.arguments)
[13:33:47.229] }
[13:33:47.229] Lazy evaluation: FALSE
[13:33:47.229] Asynchronous evaluation: TRUE
[13:33:47.229] Local evaluation: TRUE
[13:33:47.229] Environment: R_GlobalEnv
[13:33:47.229] Capture standard output: TRUE
[13:33:47.229] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.229] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:33:47.229] Packages: 2 packages (‘stats’, ‘utils’)
[13:33:47.229] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.229] Resolved: FALSE
[13:33:47.229] Value: <not collected>
[13:33:47.229] Conditions captured: <none>
[13:33:47.229] Early signaling: FALSE
[13:33:47.229] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.229] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.240] Chunk #1 of 1 ... DONE
[13:33:47.240] Launching 1 futures (chunks) ... DONE
[13:33:47.240] Resolving 1 futures (chunks) ...
[13:33:47.283]  - Number of value chunks collected: 1
[13:33:47.283] Resolving 1 futures (chunks) ... DONE
[13:33:47.283] Reducing values from 1 chunks ...
[13:33:47.283]  - Number of values collected after concatenation: 1
[13:33:47.283]  - Number of values expected: 1
[13:33:47.284] Reducing values from 1 chunks ... DONE
[13:33:47.284] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[13:33:47.284] future_lapply() ...
[13:33:47.284] Number of chunks: 1
[13:33:47.285] getGlobalsAndPackagesXApply() ...
[13:33:47.285]  - future.globals: ‘a’, ‘b’
[13:33:47.285]  - use_args: TRUE
[13:33:47.285] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:33:47.285] List of 4
[13:33:47.285]  $ a            : num 1
[13:33:47.285]  $ b            : num 2
[13:33:47.285]  $ ...future.FUN:function (x)  
[13:33:47.285]  $ ...          : list()
[13:33:47.285]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.285]  - attr(*, "where")=List of 4
[13:33:47.285]   ..$ a            :<environment: R_GlobalEnv> 
[13:33:47.285]   ..$ b            :<environment: R_GlobalEnv> 
[13:33:47.285]   ..$ ...future.FUN:<environment: 0x5620d13f1708> 
[13:33:47.285]   ..$ ...          :<environment: 0x5620d13f1708> 
[13:33:47.285]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.285]  - attr(*, "resolved")= logi FALSE
[13:33:47.285]  - attr(*, "total_size")= num NA
[13:33:47.289] Packages to be attached in all futures: [n=1] ‘utils’
[13:33:47.289] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.289] Number of futures (= number of chunks): 1
[13:33:47.289] Launching 1 futures (chunks) ...
[13:33:47.289] Chunk #1 of 1 ...
[13:33:47.289]  - seeds: <none>
[13:33:47.289]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.299] Created future:
[13:33:47.299] ClusterFuture:
[13:33:47.299] Label: ‘future_lapply-1’
[13:33:47.299] Expression:
[13:33:47.299] {
[13:33:47.299]     do.call(function(...) {
[13:33:47.299]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.299]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.299]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.299]             on.exit(options(oopts), add = TRUE)
[13:33:47.299]         }
[13:33:47.299]         {
[13:33:47.299]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.299]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.299]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.299]             })
[13:33:47.299]         }
[13:33:47.299]     }, args = future.call.arguments)
[13:33:47.299] }
[13:33:47.299] Lazy evaluation: FALSE
[13:33:47.299] Asynchronous evaluation: TRUE
[13:33:47.299] Local evaluation: TRUE
[13:33:47.299] Environment: R_GlobalEnv
[13:33:47.299] Capture standard output: TRUE
[13:33:47.299] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.299] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:33:47.299] Packages: 1 packages (‘utils’)
[13:33:47.299] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.299] Resolved: FALSE
[13:33:47.299] Value: <not collected>
[13:33:47.299] Conditions captured: <none>
[13:33:47.299] Early signaling: FALSE
[13:33:47.299] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.299] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.310] Chunk #1 of 1 ... DONE
[13:33:47.310] Launching 1 futures (chunks) ... DONE
[13:33:47.311] Resolving 1 futures (chunks) ...
[13:33:47.353]  - Number of value chunks collected: 1
[13:33:47.353] Resolving 1 futures (chunks) ... DONE
[13:33:47.353] Reducing values from 1 chunks ...
[13:33:47.353]  - Number of values collected after concatenation: 1
[13:33:47.353]  - Number of values expected: 1
[13:33:47.353] Reducing values from 1 chunks ... DONE
[13:33:47.353] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[13:33:47.353] future_lapply() ...
[13:33:47.354] Number of chunks: 1
[13:33:47.354] getGlobalsAndPackagesXApply() ...
[13:33:47.354]  - future.globals: <name-value list> with names ‘2’, ‘3’
[13:33:47.354]  - use_args: TRUE
[13:33:47.355]  - Getting '...' globals ...
[13:33:47.355]    - '...' content: [n=0] 
[13:33:47.355] List of 1
[13:33:47.355]  $ ...: list()
[13:33:47.355]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.355]  - attr(*, "where")=List of 1
[13:33:47.355]   ..$ ...:<environment: 0x5620cf032250> 
[13:33:47.355]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.355]  - attr(*, "resolved")= logi TRUE
[13:33:47.355]  - attr(*, "total_size")= num NA
[13:33:47.357]  - Getting '...' globals ... DONE
[13:33:47.358] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:33:47.358] List of 4
[13:33:47.358]  $ a            : num 2
[13:33:47.358]  $ b            : num 3
[13:33:47.358]  $ ...future.FUN:function (x)  
[13:33:47.358]  $ ...          : list()
[13:33:47.358]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.358]  - attr(*, "where")=List of 4
[13:33:47.358]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:47.358]   ..$ b            :<environment: R_EmptyEnv> 
[13:33:47.358]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:33:47.358]   ..$ ...          :<environment: 0x5620cf032250> 
[13:33:47.358]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.358]  - attr(*, "resolved")= logi FALSE
[13:33:47.358]  - attr(*, "total_size")= num NA
[13:33:47.361] Packages to be attached in all futures: [n=1] ‘utils’
[13:33:47.361] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.362] Number of futures (= number of chunks): 1
[13:33:47.362] Launching 1 futures (chunks) ...
[13:33:47.362] Chunk #1 of 1 ...
[13:33:47.362]  - seeds: <none>
[13:33:47.362]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.371] Created future:
[13:33:47.371] ClusterFuture:
[13:33:47.371] Label: ‘future_lapply-1’
[13:33:47.371] Expression:
[13:33:47.371] {
[13:33:47.371]     do.call(function(...) {
[13:33:47.371]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.371]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.371]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.371]             on.exit(options(oopts), add = TRUE)
[13:33:47.371]         }
[13:33:47.371]         {
[13:33:47.371]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.371]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.371]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.371]             })
[13:33:47.371]         }
[13:33:47.371]     }, args = future.call.arguments)
[13:33:47.371] }
[13:33:47.371] Lazy evaluation: FALSE
[13:33:47.371] Asynchronous evaluation: TRUE
[13:33:47.371] Local evaluation: TRUE
[13:33:47.371] Environment: R_GlobalEnv
[13:33:47.371] Capture standard output: TRUE
[13:33:47.371] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.371] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:33:47.371] Packages: 1 packages (‘utils’)
[13:33:47.371] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.371] Resolved: FALSE
[13:33:47.371] Value: <not collected>
[13:33:47.371] Conditions captured: <none>
[13:33:47.371] Early signaling: FALSE
[13:33:47.371] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.371] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.383] Chunk #1 of 1 ... DONE
[13:33:47.383] Launching 1 futures (chunks) ... DONE
[13:33:47.383] Resolving 1 futures (chunks) ...
[13:33:47.425]  - Number of value chunks collected: 1
[13:33:47.425] Resolving 1 futures (chunks) ... DONE
[13:33:47.425] Reducing values from 1 chunks ...
[13:33:47.425]  - Number of values collected after concatenation: 1
[13:33:47.426]  - Number of values expected: 1
[13:33:47.426] Reducing values from 1 chunks ... DONE
[13:33:47.426] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[13:33:47.426] future_lapply() ...
[13:33:47.427] Number of chunks: 1
[13:33:47.427] getGlobalsAndPackagesXApply() ...
[13:33:47.427]  - future.globals: FALSE
[13:33:47.428]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[13:33:47.428]  - needed namespaces: [n=0] 
[13:33:47.428] Finding globals ... DONE
[13:33:47.428]  - use_args: TRUE
[13:33:47.428]  - Getting '...' globals ...
[13:33:47.428]    - '...' content: [n=0] 
[13:33:47.429] List of 1
[13:33:47.429]  $ ...: list()
[13:33:47.429]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.429]  - attr(*, "where")=List of 1
[13:33:47.429]   ..$ ...:<environment: 0x5620d24866e8> 
[13:33:47.429]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.429]  - attr(*, "resolved")= logi TRUE
[13:33:47.429]  - attr(*, "total_size")= num NA
[13:33:47.431]  - Getting '...' globals ... DONE
[13:33:47.431] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:33:47.431] List of 4
[13:33:47.431]  $ d                    : num 42
[13:33:47.431]  $ ...future.FUN        :function (x)  
[13:33:47.431]  $ future.call.arguments: list()
[13:33:47.431]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.431]  $ ...                  : list()
[13:33:47.431]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.431]  - attr(*, "where")=List of 4
[13:33:47.431]   ..$ d                    :<environment: R_EmptyEnv> 
[13:33:47.431]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:33:47.431]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:33:47.431]   ..$ ...                  :<environment: 0x5620d24866e8> 
[13:33:47.431]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.431]  - attr(*, "resolved")= logi FALSE
[13:33:47.431]  - attr(*, "total_size")= num 784
[13:33:47.435] Packages to be attached in all futures: [n=0] 
[13:33:47.435] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.435] Number of futures (= number of chunks): 1
[13:33:47.435] Launching 1 futures (chunks) ...
[13:33:47.435] Chunk #1 of 1 ...
[13:33:47.435]  - seeds: <none>
[13:33:47.436]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.446] Created future:
[13:33:47.446] ClusterFuture:
[13:33:47.446] Label: ‘future_lapply-1’
[13:33:47.446] Expression:
[13:33:47.446] {
[13:33:47.446]     do.call(function(...) {
[13:33:47.446]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.446]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.446]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.446]             on.exit(options(oopts), add = TRUE)
[13:33:47.446]         }
[13:33:47.446]         {
[13:33:47.446]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.446]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.446]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.446]             })
[13:33:47.446]         }
[13:33:47.446]     }, args = future.call.arguments)
[13:33:47.446] }
[13:33:47.446] Lazy evaluation: FALSE
[13:33:47.446] Asynchronous evaluation: TRUE
[13:33:47.446] Local evaluation: TRUE
[13:33:47.446] Environment: R_GlobalEnv
[13:33:47.446] Capture standard output: TRUE
[13:33:47.446] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.446] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:47.446] Packages: <none>
[13:33:47.446] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.446] Resolved: FALSE
[13:33:47.446] Value: <not collected>
[13:33:47.446] Conditions captured: <none>
[13:33:47.446] Early signaling: FALSE
[13:33:47.446] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.446] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.457] Chunk #1 of 1 ... DONE
[13:33:47.457] Launching 1 futures (chunks) ... DONE
[13:33:47.457] Resolving 1 futures (chunks) ...
[13:33:47.489]  - Number of value chunks collected: 1
[13:33:47.489] Resolving 1 futures (chunks) ... DONE
[13:33:47.489] Reducing values from 1 chunks ...
[13:33:47.489]  - Number of values collected after concatenation: 2
[13:33:47.489]  - Number of values expected: 2
[13:33:47.490] Reducing values from 1 chunks ... DONE
[13:33:47.490] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[13:33:47.490] future_lapply() ...
[13:33:47.490] Number of chunks: 1
[13:33:47.490] getGlobalsAndPackagesXApply() ...
[13:33:47.491]  - future.globals: TRUE
[13:33:47.492]  - globals found/used: [n=1] ‘FUN’
[13:33:47.492]  - needed namespaces: [n=0] 
[13:33:47.492] Finding globals ... DONE
[13:33:47.492]  - use_args: TRUE
[13:33:47.493]  - Getting '...' globals ...
[13:33:47.493]    - '...' content: [n=0] 
[13:33:47.493] List of 1
[13:33:47.493]  $ ...: list()
[13:33:47.493]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.493]  - attr(*, "where")=List of 1
[13:33:47.493]   ..$ ...:<environment: 0x5620d158cd28> 
[13:33:47.493]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.493]  - attr(*, "resolved")= logi TRUE
[13:33:47.493]  - attr(*, "total_size")= num NA
[13:33:47.495]  - Getting '...' globals ... DONE
[13:33:47.495] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.496] List of 2
[13:33:47.496]  $ ...future.FUN:function (x)  
[13:33:47.496]  $ ...          : list()
[13:33:47.496]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.496]  - attr(*, "where")=List of 2
[13:33:47.496]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.496]   ..$ ...          :<environment: 0x5620d158cd28> 
[13:33:47.496]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.496]  - attr(*, "resolved")= logi FALSE
[13:33:47.496]  - attr(*, "total_size")= num 728
[13:33:47.498] Packages to be attached in all futures: [n=0] 
[13:33:47.498] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.498] Number of futures (= number of chunks): 1
[13:33:47.498] Launching 1 futures (chunks) ...
[13:33:47.499] Chunk #1 of 1 ...
[13:33:47.499]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.499]    + additional globals found: [n=0] 
[13:33:47.499]    + additional namespaces needed: [n=0] 
[13:33:47.499]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.499]  - seeds: <none>
[13:33:47.499]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.508] Created future:
[13:33:47.508] ClusterFuture:
[13:33:47.508] Label: ‘future_lapply-1’
[13:33:47.508] Expression:
[13:33:47.508] {
[13:33:47.508]     do.call(function(...) {
[13:33:47.508]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.508]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.508]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.508]             on.exit(options(oopts), add = TRUE)
[13:33:47.508]         }
[13:33:47.508]         {
[13:33:47.508]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.508]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.508]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.508]             })
[13:33:47.508]         }
[13:33:47.508]     }, args = future.call.arguments)
[13:33:47.508] }
[13:33:47.508] Lazy evaluation: FALSE
[13:33:47.508] Asynchronous evaluation: TRUE
[13:33:47.508] Local evaluation: TRUE
[13:33:47.508] Environment: R_GlobalEnv
[13:33:47.508] Capture standard output: TRUE
[13:33:47.508] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.508] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.508] Packages: <none>
[13:33:47.508] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.508] Resolved: FALSE
[13:33:47.508] Value: <not collected>
[13:33:47.508] Conditions captured: <none>
[13:33:47.508] Early signaling: FALSE
[13:33:47.508] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.508] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.519] Chunk #1 of 1 ... DONE
[13:33:47.519] Launching 1 futures (chunks) ... DONE
[13:33:47.519] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[13:33:47.611] future_lapply() ...
[13:33:47.612] Number of chunks: 1
[13:33:47.612] getGlobalsAndPackagesXApply() ...
[13:33:47.613]  - future.globals: TRUE
[13:33:47.618]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:33:47.618]  - needed namespaces: [n=0] 
[13:33:47.618] Finding globals ... DONE
[13:33:47.618]  - use_args: TRUE
[13:33:47.618]  - Getting '...' globals ...
[13:33:47.618]    - '...' content: [n=0] 
[13:33:47.618] List of 1
[13:33:47.618]  $ ...: list()
[13:33:47.618]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.618]  - attr(*, "where")=List of 1
[13:33:47.618]   ..$ ...:<environment: 0x5620d24b29c8> 
[13:33:47.618]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.618]  - attr(*, "resolved")= logi TRUE
[13:33:47.618]  - attr(*, "total_size")= num NA
[13:33:47.621]  - Getting '...' globals ... DONE
[13:33:47.621] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:33:47.621] List of 6
[13:33:47.621]  $ ...future.FUN:function (i)  
[13:33:47.621]  $ caller       :function (a, b, FUN = call_my_add)  
[13:33:47.621]  $ args         :List of 1
[13:33:47.621]   ..$ FUN:function (a, b)  
[13:33:47.621]  $ call_my_add  :function (a, b)  
[13:33:47.621]  $ my_add       :function (a, b)  
[13:33:47.621]  $ ...          : list()
[13:33:47.621]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.621]  - attr(*, "where")=List of 6
[13:33:47.621]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.621]   ..$ caller       :<environment: R_EmptyEnv> 
[13:33:47.621]   ..$ args         :<environment: R_EmptyEnv> 
[13:33:47.621]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:33:47.621]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:33:47.621]   ..$ ...          :<environment: 0x5620d24b29c8> 
[13:33:47.621]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.621]  - attr(*, "resolved")= logi FALSE
[13:33:47.621]  - attr(*, "total_size")= num 6664
[13:33:47.627] Packages to be attached in all futures: [n=0] 
[13:33:47.627] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.627] Number of futures (= number of chunks): 1
[13:33:47.627] Launching 1 futures (chunks) ...
[13:33:47.628] Chunk #1 of 1 ...
[13:33:47.628]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.628]    + additional globals found: [n=0] 
[13:33:47.628]    + additional namespaces needed: [n=0] 
[13:33:47.628]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.628]  - seeds: <none>
[13:33:47.628]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.634] Created future:
[13:33:47.634] SequentialFuture:
[13:33:47.634] Label: ‘future_lapply-1’
[13:33:47.634] Expression:
[13:33:47.634] {
[13:33:47.634]     do.call(function(...) {
[13:33:47.634]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.634]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.634]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.634]             on.exit(options(oopts), add = TRUE)
[13:33:47.634]         }
[13:33:47.634]         {
[13:33:47.634]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.634]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.634]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.634]             })
[13:33:47.634]         }
[13:33:47.634]     }, args = future.call.arguments)
[13:33:47.634] }
[13:33:47.634] Lazy evaluation: FALSE
[13:33:47.634] Asynchronous evaluation: FALSE
[13:33:47.634] Local evaluation: TRUE
[13:33:47.634] Environment: 0x5620d24aeff8
[13:33:47.634] Capture standard output: TRUE
[13:33:47.634] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.634] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:33:47.634] Packages: <none>
[13:33:47.634] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.634] Resolved: TRUE
[13:33:47.634] Value: 168 bytes of class ‘list’
[13:33:47.634] Early signaling: FALSE
[13:33:47.634] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.634] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.635] Chunk #1 of 1 ... DONE
[13:33:47.635] Launching 1 futures (chunks) ... DONE
[13:33:47.635] Resolving 1 futures (chunks) ...
[13:33:47.636]  - Number of value chunks collected: 1
[13:33:47.636] Resolving 1 futures (chunks) ... DONE
[13:33:47.636] Reducing values from 1 chunks ...
[13:33:47.636]  - Number of values collected after concatenation: 3
[13:33:47.636]  - Number of values expected: 3
[13:33:47.636] Reducing values from 1 chunks ... DONE
[13:33:47.636] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:33:47.636] future_lapply() ...
[13:33:47.639] Number of chunks: 1
[13:33:47.640] getGlobalsAndPackagesXApply() ...
[13:33:47.640]  - future.globals: TRUE
[13:33:47.642]  - globals found/used: [n=1] ‘FUN’
[13:33:47.642]  - needed namespaces: [n=0] 
[13:33:47.642] Finding globals ... DONE
[13:33:47.642]  - use_args: TRUE
[13:33:47.643]  - Getting '...' globals ...
[13:33:47.643]    - '...' content: [n=1] ‘what’
[13:33:47.643] List of 1
[13:33:47.643]  $ ...:List of 1
[13:33:47.643]   ..$ what:function (x)  
[13:33:47.643]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.643]  - attr(*, "where")=List of 1
[13:33:47.643]   ..$ ...:<environment: 0x5620d0f9f810> 
[13:33:47.643]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.643]  - attr(*, "resolved")= logi TRUE
[13:33:47.643]  - attr(*, "total_size")= num NA
[13:33:47.646]  - Getting '...' globals ... DONE
[13:33:47.646] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.646] List of 2
[13:33:47.646]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:47.646]  $ ...          :List of 1
[13:33:47.646]   ..$ what:function (x)  
[13:33:47.646]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.646]  - attr(*, "where")=List of 2
[13:33:47.646]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.646]   ..$ ...          :<environment: 0x5620d0f9f810> 
[13:33:47.646]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.646]  - attr(*, "resolved")= logi FALSE
[13:33:47.646]  - attr(*, "total_size")= num 12192
[13:33:47.649] Packages to be attached in all futures: [n=0] 
[13:33:47.649] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.649] Number of futures (= number of chunks): 1
[13:33:47.649] Launching 1 futures (chunks) ...
[13:33:47.649] Chunk #1 of 1 ...
[13:33:47.649]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.650]    + additional globals found: [n=0] 
[13:33:47.650]    + additional namespaces needed: [n=0] 
[13:33:47.650]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.650]  - seeds: <none>
[13:33:47.650]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.652] Created future:
[13:33:47.652] SequentialFuture:
[13:33:47.652] Label: ‘future_lapply-1’
[13:33:47.652] Expression:
[13:33:47.652] {
[13:33:47.652]     do.call(function(...) {
[13:33:47.652]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.652]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.652]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.652]             on.exit(options(oopts), add = TRUE)
[13:33:47.652]         }
[13:33:47.652]         {
[13:33:47.652]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.652]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.652]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.652]             })
[13:33:47.652]         }
[13:33:47.652]     }, args = future.call.arguments)
[13:33:47.652] }
[13:33:47.652] Lazy evaluation: FALSE
[13:33:47.652] Asynchronous evaluation: FALSE
[13:33:47.652] Local evaluation: TRUE
[13:33:47.652] Environment: R_GlobalEnv
[13:33:47.652] Capture standard output: TRUE
[13:33:47.652] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.652] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.652] Packages: <none>
[13:33:47.652] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.652] Resolved: TRUE
[13:33:47.652] Value: 56 bytes of class ‘list’
[13:33:47.652] Early signaling: FALSE
[13:33:47.652] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.652] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.653] Chunk #1 of 1 ... DONE
[13:33:47.653] Launching 1 futures (chunks) ... DONE
[13:33:47.653] Resolving 1 futures (chunks) ...
[13:33:47.654]  - Number of value chunks collected: 1
[13:33:47.654] Resolving 1 futures (chunks) ... DONE
[13:33:47.654] Reducing values from 1 chunks ...
[13:33:47.654]  - Number of values collected after concatenation: 1
[13:33:47.654]  - Number of values expected: 1
[13:33:47.654] Reducing values from 1 chunks ... DONE
[13:33:47.654] future_lapply() ... DONE
[13:33:47.654] future_lapply() ...
[13:33:47.656] Number of chunks: 1
[13:33:47.656] getGlobalsAndPackagesXApply() ...
[13:33:47.656]  - future.globals: TRUE
[13:33:47.658]  - globals found/used: [n=1] ‘FUN’
[13:33:47.658]  - needed namespaces: [n=0] 
[13:33:47.659] Finding globals ... DONE
[13:33:47.659]  - use_args: TRUE
[13:33:47.659]  - Getting '...' globals ...
[13:33:47.659]    - '...' content: [n=1] ‘what’
[13:33:47.659] List of 1
[13:33:47.659]  $ ...:List of 1
[13:33:47.659]   ..$ what:function (...)  
[13:33:47.659]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.659]  - attr(*, "where")=List of 1
[13:33:47.659]   ..$ ...:<environment: 0x5620d2236870> 
[13:33:47.659]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.659]  - attr(*, "resolved")= logi TRUE
[13:33:47.659]  - attr(*, "total_size")= num NA
[13:33:47.662]  - Getting '...' globals ... DONE
[13:33:47.662] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.662] List of 2
[13:33:47.662]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:47.662]  $ ...          :List of 1
[13:33:47.662]   ..$ what:function (...)  
[13:33:47.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.662]  - attr(*, "where")=List of 2
[13:33:47.662]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.662]   ..$ ...          :<environment: 0x5620d2236870> 
[13:33:47.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.662]  - attr(*, "resolved")= logi FALSE
[13:33:47.662]  - attr(*, "total_size")= num 12584
[13:33:47.665] Packages to be attached in all futures: [n=0] 
[13:33:47.665] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.665] Number of futures (= number of chunks): 1
[13:33:47.665] Launching 1 futures (chunks) ...
[13:33:47.665] Chunk #1 of 1 ...
[13:33:47.665]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.666]    + additional globals found: [n=0] 
[13:33:47.666]    + additional namespaces needed: [n=0] 
[13:33:47.666]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.666]  - seeds: <none>
[13:33:47.666]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.670] Created future:
[13:33:47.670] SequentialFuture:
[13:33:47.670] Label: ‘future_lapply-1’
[13:33:47.670] Expression:
[13:33:47.670] {
[13:33:47.670]     do.call(function(...) {
[13:33:47.670]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.670]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.670]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.670]             on.exit(options(oopts), add = TRUE)
[13:33:47.670]         }
[13:33:47.670]         {
[13:33:47.670]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.670]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.670]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.670]             })
[13:33:47.670]         }
[13:33:47.670]     }, args = future.call.arguments)
[13:33:47.670] }
[13:33:47.670] Lazy evaluation: FALSE
[13:33:47.670] Asynchronous evaluation: FALSE
[13:33:47.670] Local evaluation: TRUE
[13:33:47.670] Environment: R_GlobalEnv
[13:33:47.670] Capture standard output: TRUE
[13:33:47.670] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.670] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.670] Packages: <none>
[13:33:47.670] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.670] Resolved: TRUE
[13:33:47.670] Value: 56 bytes of class ‘list’
[13:33:47.670] Early signaling: FALSE
[13:33:47.670] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.670] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.671] Chunk #1 of 1 ... DONE
[13:33:47.671] Launching 1 futures (chunks) ... DONE
[13:33:47.671] Resolving 1 futures (chunks) ...
[13:33:47.672]  - Number of value chunks collected: 1
[13:33:47.672] Resolving 1 futures (chunks) ... DONE
[13:33:47.672] Reducing values from 1 chunks ...
[13:33:47.672]  - Number of values collected after concatenation: 1
[13:33:47.672]  - Number of values expected: 1
[13:33:47.672] Reducing values from 1 chunks ... DONE
[13:33:47.672] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:33:47.673] future_lapply() ...
[13:33:47.673] Number of chunks: 1
[13:33:47.673] getGlobalsAndPackagesXApply() ...
[13:33:47.673]  - future.globals: TRUE
[13:33:47.675]  - globals found/used: [n=1] ‘FUN’
[13:33:47.675]  - needed namespaces: [n=0] 
[13:33:47.675] Finding globals ... DONE
[13:33:47.675]  - use_args: TRUE
[13:33:47.675]  - Getting '...' globals ...
[13:33:47.676]    - '...' content: [n=1] ‘b’
[13:33:47.676] List of 1
[13:33:47.676]  $ ...:List of 1
[13:33:47.676]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:47.676]   .. ..$ a: int [1:2] 1 2
[13:33:47.676]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.676]  - attr(*, "where")=List of 1
[13:33:47.676]   ..$ ...:<environment: 0x5620d165bf98> 
[13:33:47.676]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.676]  - attr(*, "resolved")= logi TRUE
[13:33:47.676]  - attr(*, "total_size")= num NA
[13:33:47.679]  - Getting '...' globals ... DONE
[13:33:47.679] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.679] List of 2
[13:33:47.679]  $ ...future.FUN:function (a, b)  
[13:33:47.679]  $ ...          :List of 1
[13:33:47.679]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:47.679]   .. ..$ a: int [1:2] 1 2
[13:33:47.679]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.679]  - attr(*, "where")=List of 2
[13:33:47.679]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.679]   ..$ ...          :<environment: 0x5620d165bf98> 
[13:33:47.679]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.679]  - attr(*, "resolved")= logi FALSE
[13:33:47.679]  - attr(*, "total_size")= num 1440
[13:33:47.682] Packages to be attached in all futures: [n=0] 
[13:33:47.682] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.683] Number of futures (= number of chunks): 1
[13:33:47.683] Launching 1 futures (chunks) ...
[13:33:47.683] Chunk #1 of 1 ...
[13:33:47.683]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.683]    + additional globals found: [n=0] 
[13:33:47.683]    + additional namespaces needed: [n=0] 
[13:33:47.683]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.683]  - seeds: <none>
[13:33:47.684]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.686] Created future:
[13:33:47.686] SequentialFuture:
[13:33:47.686] Label: ‘future_lapply-1’
[13:33:47.686] Expression:
[13:33:47.686] {
[13:33:47.686]     do.call(function(...) {
[13:33:47.686]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.686]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.686]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.686]             on.exit(options(oopts), add = TRUE)
[13:33:47.686]         }
[13:33:47.686]         {
[13:33:47.686]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.686]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.686]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.686]             })
[13:33:47.686]         }
[13:33:47.686]     }, args = future.call.arguments)
[13:33:47.686] }
[13:33:47.686] Lazy evaluation: FALSE
[13:33:47.686] Asynchronous evaluation: FALSE
[13:33:47.686] Local evaluation: TRUE
[13:33:47.686] Environment: R_GlobalEnv
[13:33:47.686] Capture standard output: TRUE
[13:33:47.686] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.686] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.686] Packages: <none>
[13:33:47.686] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.686] Resolved: TRUE
[13:33:47.686] Value: 112 bytes of class ‘list’
[13:33:47.686] Early signaling: FALSE
[13:33:47.686] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.686] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.687] Chunk #1 of 1 ... DONE
[13:33:47.687] Launching 1 futures (chunks) ... DONE
[13:33:47.687] Resolving 1 futures (chunks) ...
[13:33:47.687]  - Number of value chunks collected: 1
[13:33:47.687] Resolving 1 futures (chunks) ... DONE
[13:33:47.687] Reducing values from 1 chunks ...
[13:33:47.688]  - Number of values collected after concatenation: 1
[13:33:47.688]  - Number of values expected: 1
[13:33:47.688] Reducing values from 1 chunks ... DONE
[13:33:47.688] future_lapply() ... DONE
[13:33:47.688] future_lapply() ...
[13:33:47.688] Number of chunks: 1
[13:33:47.688] getGlobalsAndPackagesXApply() ...
[13:33:47.689]  - future.globals: TRUE
[13:33:47.690]  - globals found/used: [n=1] ‘FUN’
[13:33:47.690]  - needed namespaces: [n=0] 
[13:33:47.690] Finding globals ... DONE
[13:33:47.690]  - use_args: TRUE
[13:33:47.690]  - Getting '...' globals ...
[13:33:47.691]    - '...' content: [n=1] ‘b’
[13:33:47.691] List of 1
[13:33:47.691]  $ ...:List of 1
[13:33:47.691]   ..$ b:<environment: 0x5620cf2496d0> 
[13:33:47.691]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.691]  - attr(*, "where")=List of 1
[13:33:47.691]   ..$ ...:<environment: 0x5620cf24a188> 
[13:33:47.691]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.691]  - attr(*, "resolved")= logi TRUE
[13:33:47.691]  - attr(*, "total_size")= num NA
[13:33:47.693]  - Getting '...' globals ... DONE
[13:33:47.694] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.694] List of 2
[13:33:47.694]  $ ...future.FUN:function (a, b)  
[13:33:47.694]  $ ...          :List of 1
[13:33:47.694]   ..$ b:<environment: 0x5620cf2496d0> 
[13:33:47.694]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.694]  - attr(*, "where")=List of 2
[13:33:47.694]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.694]   ..$ ...          :<environment: 0x5620cf24a188> 
[13:33:47.694]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.694]  - attr(*, "resolved")= logi FALSE
[13:33:47.694]  - attr(*, "total_size")= num 1440
[13:33:47.696] Packages to be attached in all futures: [n=0] 
[13:33:47.697] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.697] Number of futures (= number of chunks): 1
[13:33:47.697] Launching 1 futures (chunks) ...
[13:33:47.697] Chunk #1 of 1 ...
[13:33:47.697]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.697]    + additional globals found: [n=0] 
[13:33:47.697]    + additional namespaces needed: [n=0] 
[13:33:47.698]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.698]  - seeds: <none>
[13:33:47.698]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.700] Created future:
[13:33:47.700] SequentialFuture:
[13:33:47.700] Label: ‘future_lapply-1’
[13:33:47.700] Expression:
[13:33:47.700] {
[13:33:47.700]     do.call(function(...) {
[13:33:47.700]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.700]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.700]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.700]             on.exit(options(oopts), add = TRUE)
[13:33:47.700]         }
[13:33:47.700]         {
[13:33:47.700]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.700]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.700]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.700]             })
[13:33:47.700]         }
[13:33:47.700]     }, args = future.call.arguments)
[13:33:47.700] }
[13:33:47.700] Lazy evaluation: FALSE
[13:33:47.700] Asynchronous evaluation: FALSE
[13:33:47.700] Local evaluation: TRUE
[13:33:47.700] Environment: R_GlobalEnv
[13:33:47.700] Capture standard output: TRUE
[13:33:47.700] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.700] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.700] Packages: <none>
[13:33:47.700] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.700] Resolved: TRUE
[13:33:47.700] Value: 120 bytes of class ‘list’
[13:33:47.700] Early signaling: FALSE
[13:33:47.700] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.700] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.701] Chunk #1 of 1 ... DONE
[13:33:47.701] Launching 1 futures (chunks) ... DONE
[13:33:47.701] Resolving 1 futures (chunks) ...
[13:33:47.701]  - Number of value chunks collected: 1
[13:33:47.701] Resolving 1 futures (chunks) ... DONE
[13:33:47.702] Reducing values from 1 chunks ...
[13:33:47.702]  - Number of values collected after concatenation: 1
[13:33:47.702]  - Number of values expected: 1
[13:33:47.702] Reducing values from 1 chunks ... DONE
[13:33:47.702] future_lapply() ... DONE
[13:33:47.702] future_lapply() ...
[13:33:47.703] Number of chunks: 1
[13:33:47.703] getGlobalsAndPackagesXApply() ...
[13:33:47.703]  - future.globals: TRUE
[13:33:47.705]  - globals found/used: [n=1] ‘FUN’
[13:33:47.705]  - needed namespaces: [n=0] 
[13:33:47.705] Finding globals ... DONE
[13:33:47.705]  - use_args: TRUE
[13:33:47.705]  - Getting '...' globals ...
[13:33:47.705]    - '...' content: [n=1] ‘b’
[13:33:47.706] List of 1
[13:33:47.706]  $ ...:List of 1
[13:33:47.706]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:47.706]   .. .. ..@ slots     :List of 4
[13:33:47.706]   .. .. .. ..$ .Data  : chr "function"
[13:33:47.706]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. ..$ target : chr "signature"
[13:33:47.706]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. ..$ defined: chr "signature"
[13:33:47.706]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. ..$ generic: chr "character"
[13:33:47.706]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. ..@ contains  :List of 3
[13:33:47.706]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.706]   .. .. ..@ virtual   : logi FALSE
[13:33:47.706]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:47.706]  list()
[13:33:47.706]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:47.706]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:47.706]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:47.706]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:47.706]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:47.706]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:47.706]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:47.706]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:47.706]   .. .. .. .. ..$ generic: chr(0) 
[13:33:47.706]   .. .. ..@ validity  : NULL
[13:33:47.706]   .. .. ..@ access    : list()
[13:33:47.706]   .. .. ..@ className : chr "MethodDefinition"
[13:33:47.706]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. ..@ subclasses:List of 7
[13:33:47.706]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.706]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.706]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.706]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.706]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.706]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.706]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.706]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.706]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:47.706]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.706]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.706]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.706]   .. .. ..@ versionKey:<externalptr> 
[13:33:47.706]   .. .. ..@ sealed    : logi TRUE
[13:33:47.706]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.706]  - attr(*, "where")=List of 1
[13:33:47.706]   ..$ ...:<environment: 0x5620d2450200> 
[13:33:47.706]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.706]  - attr(*, "resolved")= logi TRUE
[13:33:47.706]  - attr(*, "total_size")= num NA
[13:33:47.753]  - Getting '...' globals ... DONE
[13:33:47.753] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.753] List of 2
[13:33:47.753]  $ ...future.FUN:function (a, b)  
[13:33:47.753]  $ ...          :List of 1
[13:33:47.753]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:47.753]   .. .. ..@ slots     :List of 4
[13:33:47.753]   .. .. .. ..$ .Data  : chr "function"
[13:33:47.753]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. ..$ target : chr "signature"
[13:33:47.753]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. ..$ defined: chr "signature"
[13:33:47.753]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. ..$ generic: chr "character"
[13:33:47.753]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. ..@ contains  :List of 3
[13:33:47.753]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.753]   .. .. ..@ virtual   : logi FALSE
[13:33:47.753]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:47.753]  list()
[13:33:47.753]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:47.753]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:47.753]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:47.753]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:47.753]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:47.753]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:47.753]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:47.753]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:47.753]   .. .. .. .. ..$ generic: chr(0) 
[13:33:47.753]   .. .. ..@ validity  : NULL
[13:33:47.753]   .. .. ..@ access    : list()
[13:33:47.753]   .. .. ..@ className : chr "MethodDefinition"
[13:33:47.753]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. ..@ subclasses:List of 7
[13:33:47.753]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 1
[13:33:47.753]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.753]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.753]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:47.753]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:47.753]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:47.753]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:47.753]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:47.753]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:47.753]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:47.753]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:47.753]   .. .. .. .. .. ..@ distance  : num 2
[13:33:47.753]   .. .. ..@ versionKey:<externalptr> 
[13:33:47.753]   .. .. ..@ sealed    : logi TRUE
[13:33:47.753]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.753]  - attr(*, "where")=List of 2
[13:33:47.753]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.753]   ..$ ...          :<environment: 0x5620d2450200> 
[13:33:47.753]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.753]  - attr(*, "resolved")= logi FALSE
[13:33:47.753]  - attr(*, "total_size")= num 312512
[13:33:47.797] Packages to be attached in all futures: [n=0] 
[13:33:47.798] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.798] Number of futures (= number of chunks): 1
[13:33:47.798] Launching 1 futures (chunks) ...
[13:33:47.798] Chunk #1 of 1 ...
[13:33:47.798]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.798]    + additional globals found: [n=0] 
[13:33:47.798]    + additional namespaces needed: [n=0] 
[13:33:47.799]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.799]  - seeds: <none>
[13:33:47.799]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.801] Created future:
[13:33:47.801] SequentialFuture:
[13:33:47.801] Label: ‘future_lapply-1’
[13:33:47.801] Expression:
[13:33:47.801] {
[13:33:47.801]     do.call(function(...) {
[13:33:47.801]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.801]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.801]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.801]             on.exit(options(oopts), add = TRUE)
[13:33:47.801]         }
[13:33:47.801]         {
[13:33:47.801]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.801]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.801]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.801]             })
[13:33:47.801]         }
[13:33:47.801]     }, args = future.call.arguments)
[13:33:47.801] }
[13:33:47.801] Lazy evaluation: FALSE
[13:33:47.801] Asynchronous evaluation: FALSE
[13:33:47.801] Local evaluation: TRUE
[13:33:47.801] Environment: R_GlobalEnv
[13:33:47.801] Capture standard output: TRUE
[13:33:47.801] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.801] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.801] Packages: <none>
[13:33:47.801] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.801] Resolved: TRUE
[13:33:47.801] Value: 112 bytes of class ‘list’
[13:33:47.801] Early signaling: FALSE
[13:33:47.801] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.801] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.802] Chunk #1 of 1 ... DONE
[13:33:47.802] Launching 1 futures (chunks) ... DONE
[13:33:47.802] Resolving 1 futures (chunks) ...
[13:33:47.803]  - Number of value chunks collected: 1
[13:33:47.803] Resolving 1 futures (chunks) ... DONE
[13:33:47.803] Reducing values from 1 chunks ...
[13:33:47.803]  - Number of values collected after concatenation: 1
[13:33:47.803]  - Number of values expected: 1
[13:33:47.803] Reducing values from 1 chunks ... DONE
[13:33:47.803] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:33:47.805] future_lapply() ...
[13:33:47.806] Number of chunks: 1
[13:33:47.806] getGlobalsAndPackagesXApply() ...
[13:33:47.806]  - future.globals: TRUE
[13:33:47.807]  - globals found/used: [n=1] ‘FUN’
[13:33:47.807]  - needed namespaces: [n=0] 
[13:33:47.807] Finding globals ... DONE
[13:33:47.808]  - use_args: TRUE
[13:33:47.808]  - Getting '...' globals ...
[13:33:47.808]    - '...' content: [n=0] 
[13:33:47.808] List of 1
[13:33:47.808]  $ ...: list()
[13:33:47.808]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.808]  - attr(*, "where")=List of 1
[13:33:47.808]   ..$ ...:<environment: 0x5620d0920fb0> 
[13:33:47.808]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.808]  - attr(*, "resolved")= logi TRUE
[13:33:47.808]  - attr(*, "total_size")= num NA
[13:33:47.810]  - Getting '...' globals ... DONE
[13:33:47.811] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.811] List of 2
[13:33:47.811]  $ ...future.FUN:function (f)  
[13:33:47.811]  $ ...          : list()
[13:33:47.811]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.811]  - attr(*, "where")=List of 2
[13:33:47.811]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.811]   ..$ ...          :<environment: 0x5620d0920fb0> 
[13:33:47.811]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.811]  - attr(*, "resolved")= logi FALSE
[13:33:47.811]  - attr(*, "total_size")= num 1008
[13:33:47.813] Packages to be attached in all futures: [n=0] 
[13:33:47.813] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.814] Number of futures (= number of chunks): 1
[13:33:47.814] Launching 1 futures (chunks) ...
[13:33:47.814] Chunk #1 of 1 ...
[13:33:47.814]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.816]    + additional globals found: [n=2] ‘a’, ‘b’
[13:33:47.816]    + additional namespaces needed: [n=1] ‘tools’
[13:33:47.816]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.817]  - seeds: <none>
[13:33:47.817]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:33:47.819] Created future:
[13:33:47.819] SequentialFuture:
[13:33:47.819] Label: ‘future_lapply-1’
[13:33:47.819] Expression:
[13:33:47.819] {
[13:33:47.819]     do.call(function(...) {
[13:33:47.819]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.819]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.819]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.819]             on.exit(options(oopts), add = TRUE)
[13:33:47.819]         }
[13:33:47.819]         {
[13:33:47.819]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.819]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.819]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.819]             })
[13:33:47.819]         }
[13:33:47.819]     }, args = future.call.arguments)
[13:33:47.819] }
[13:33:47.819] Lazy evaluation: FALSE
[13:33:47.819] Asynchronous evaluation: FALSE
[13:33:47.819] Local evaluation: TRUE
[13:33:47.819] Environment: R_GlobalEnv
[13:33:47.819] Capture standard output: TRUE
[13:33:47.819] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.819] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:33:47.819] Packages: 1 packages (‘tools’)
[13:33:47.819] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.819] Resolved: TRUE
[13:33:47.819] Value: 224 bytes of class ‘list’
[13:33:47.819] Early signaling: FALSE
[13:33:47.819] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.819] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.820] Chunk #1 of 1 ... DONE
[13:33:47.821] Launching 1 futures (chunks) ... DONE
[13:33:47.821] Resolving 1 futures (chunks) ...
[13:33:47.821]  - Number of value chunks collected: 1
[13:33:47.821] Resolving 1 futures (chunks) ... DONE
[13:33:47.821] Reducing values from 1 chunks ...
[13:33:47.821]  - Number of values collected after concatenation: 4
[13:33:47.821]  - Number of values expected: 4
[13:33:47.821] Reducing values from 1 chunks ... DONE
[13:33:47.822] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:33:47.824] future_lapply() ...
[13:33:47.825] Number of chunks: 1
[13:33:47.825] getGlobalsAndPackagesXApply() ...
[13:33:47.825]  - future.globals: TRUE
[13:33:47.827]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:33:47.827]  - needed namespaces: [n=0] 
[13:33:47.827] Finding globals ... DONE
[13:33:47.827]  - use_args: TRUE
[13:33:47.828]  - Getting '...' globals ...
[13:33:47.828]    - '...' content: [n=0] 
[13:33:47.828] List of 1
[13:33:47.828]  $ ...: list()
[13:33:47.828]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.828]  - attr(*, "where")=List of 1
[13:33:47.828]   ..$ ...:<environment: 0x5620d24bd340> 
[13:33:47.828]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.828]  - attr(*, "resolved")= logi TRUE
[13:33:47.828]  - attr(*, "total_size")= num NA
[13:33:47.830]  - Getting '...' globals ... DONE
[13:33:47.831] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:33:47.831] List of 3
[13:33:47.831]  $ ...future.FUN        :function (x)  
[13:33:47.831]  $ future.call.arguments:List of 1
[13:33:47.831]   ..$ a: num 1
[13:33:47.831]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.831]  $ ...                  : list()
[13:33:47.831]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.831]  - attr(*, "where")=List of 3
[13:33:47.831]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:33:47.831]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:33:47.831]   ..$ ...                  :<environment: 0x5620d24bd340> 
[13:33:47.831]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.831]  - attr(*, "resolved")= logi FALSE
[13:33:47.831]  - attr(*, "total_size")= num 1272
[13:33:47.836] Packages to be attached in all futures: [n=0] 
[13:33:47.836] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.836] Number of futures (= number of chunks): 1
[13:33:47.836] Launching 1 futures (chunks) ...
[13:33:47.836] Chunk #1 of 1 ...
[13:33:47.836]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.837]    + additional globals found: [n=0] 
[13:33:47.837]    + additional namespaces needed: [n=0] 
[13:33:47.837]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.837]  - seeds: <none>
[13:33:47.837]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.839] Created future:
[13:33:47.839] SequentialFuture:
[13:33:47.839] Label: ‘future_lapply-1’
[13:33:47.839] Expression:
[13:33:47.839] {
[13:33:47.839]     do.call(function(...) {
[13:33:47.839]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.839]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.839]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.839]             on.exit(options(oopts), add = TRUE)
[13:33:47.839]         }
[13:33:47.839]         {
[13:33:47.839]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.839]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.839]                 ...future.FUN(...future.X_jj)
[13:33:47.839]             })
[13:33:47.839]         }
[13:33:47.839]     }, args = future.call.arguments)
[13:33:47.839] }
[13:33:47.839] Lazy evaluation: FALSE
[13:33:47.839] Asynchronous evaluation: FALSE
[13:33:47.839] Local evaluation: TRUE
[13:33:47.839] Environment: 0x5620d24bd6c0
[13:33:47.839] Capture standard output: TRUE
[13:33:47.839] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.839] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.839] Packages: <none>
[13:33:47.839] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.839] Resolved: TRUE
[13:33:47.839] Value: 56 bytes of class ‘list’
[13:33:47.839] Early signaling: FALSE
[13:33:47.839] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.839] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.840] Chunk #1 of 1 ... DONE
[13:33:47.840] Launching 1 futures (chunks) ... DONE
[13:33:47.841] Resolving 1 futures (chunks) ...
[13:33:47.841]  - Number of value chunks collected: 1
[13:33:47.841] Resolving 1 futures (chunks) ... DONE
[13:33:47.841] Reducing values from 1 chunks ...
[13:33:47.841]  - Number of values collected after concatenation: 1
[13:33:47.841]  - Number of values expected: 1
[13:33:47.841] Reducing values from 1 chunks ... DONE
[13:33:47.841] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:33:47.843] future_lapply() ...
[13:33:47.843] Number of chunks: 1
[13:33:47.843] getGlobalsAndPackagesXApply() ...
[13:33:47.844]  - future.globals: TRUE
[13:33:47.845]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:47.846]  - needed namespaces: [n=0] 
[13:33:47.846] Finding globals ... DONE
[13:33:47.846]  - use_args: TRUE
[13:33:47.846]  - Getting '...' globals ...
[13:33:47.846]    - '...' content: [n=0] 
[13:33:47.846] List of 1
[13:33:47.846]  $ ...: list()
[13:33:47.846]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.846]  - attr(*, "where")=List of 1
[13:33:47.846]   ..$ ...:<environment: 0x5620d12bd598> 
[13:33:47.846]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.846]  - attr(*, "resolved")= logi TRUE
[13:33:47.846]  - attr(*, "total_size")= num NA
[13:33:47.849]  - Getting '...' globals ... DONE
[13:33:47.849] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:47.849] List of 3
[13:33:47.849]  $ ...future.FUN:function (ii)  
[13:33:47.849]  $ a            : num 1
[13:33:47.849]  $ ...          : list()
[13:33:47.849]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.849]  - attr(*, "where")=List of 3
[13:33:47.849]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.849]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:47.849]   ..$ ...          :<environment: 0x5620d12bd598> 
[13:33:47.849]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.849]  - attr(*, "resolved")= logi FALSE
[13:33:47.849]  - attr(*, "total_size")= num 2984
[13:33:47.852] Packages to be attached in all futures: [n=0] 
[13:33:47.852] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.852] Number of futures (= number of chunks): 1
[13:33:47.852] Launching 1 futures (chunks) ...
[13:33:47.852] Chunk #1 of 1 ...
[13:33:47.853]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.853]    + additional globals found: [n=0] 
[13:33:47.853]    + additional namespaces needed: [n=0] 
[13:33:47.853]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.853]  - seeds: <none>
[13:33:47.853]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.855] Created future:
[13:33:47.855] SequentialFuture:
[13:33:47.855] Label: ‘future_lapply-1’
[13:33:47.855] Expression:
[13:33:47.855] {
[13:33:47.855]     do.call(function(...) {
[13:33:47.855]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.855]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.855]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.855]             on.exit(options(oopts), add = TRUE)
[13:33:47.855]         }
[13:33:47.855]         {
[13:33:47.855]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.855]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.855]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.855]             })
[13:33:47.855]         }
[13:33:47.855]     }, args = future.call.arguments)
[13:33:47.855] }
[13:33:47.855] Lazy evaluation: FALSE
[13:33:47.855] Asynchronous evaluation: FALSE
[13:33:47.855] Local evaluation: TRUE
[13:33:47.855] Environment: R_GlobalEnv
[13:33:47.855] Capture standard output: TRUE
[13:33:47.855] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.855] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:47.855] Packages: <none>
[13:33:47.855] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.855] Resolved: TRUE
[13:33:47.855] Value: 56 bytes of class ‘list’
[13:33:47.855] Early signaling: FALSE
[13:33:47.855] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.855] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.856] Chunk #1 of 1 ... DONE
[13:33:47.856] Launching 1 futures (chunks) ... DONE
[13:33:47.857] Resolving 1 futures (chunks) ...
[13:33:47.857]  - Number of value chunks collected: 1
[13:33:47.857] Resolving 1 futures (chunks) ... DONE
[13:33:47.857] Reducing values from 1 chunks ...
[13:33:47.857]  - Number of values collected after concatenation: 1
[13:33:47.857]  - Number of values expected: 1
[13:33:47.857] Reducing values from 1 chunks ... DONE
[13:33:47.857] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:33:47.858] future_lapply() ...
[13:33:47.858] Number of chunks: 1
[13:33:47.858] getGlobalsAndPackagesXApply() ...
[13:33:47.859]  - future.globals: TRUE
[13:33:47.861]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:47.861]  - needed namespaces: [n=0] 
[13:33:47.861] Finding globals ... DONE
[13:33:47.861]  - use_args: TRUE
[13:33:47.861]  - Getting '...' globals ...
[13:33:47.861]    - '...' content: [n=0] 
[13:33:47.861] List of 1
[13:33:47.861]  $ ...: list()
[13:33:47.861]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.861]  - attr(*, "where")=List of 1
[13:33:47.861]   ..$ ...:<environment: 0x5620cf33d550> 
[13:33:47.861]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.861]  - attr(*, "resolved")= logi TRUE
[13:33:47.861]  - attr(*, "total_size")= num NA
[13:33:47.864]  - Getting '...' globals ... DONE
[13:33:47.864] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:47.864] List of 3
[13:33:47.864]  $ ...future.FUN:function (ii)  
[13:33:47.864]  $ a            : num 1
[13:33:47.864]  $ ...          : list()
[13:33:47.864]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.864]  - attr(*, "where")=List of 3
[13:33:47.864]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.864]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:47.864]   ..$ ...          :<environment: 0x5620cf33d550> 
[13:33:47.864]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.864]  - attr(*, "resolved")= logi FALSE
[13:33:47.864]  - attr(*, "total_size")= num 2984
[13:33:47.867] Packages to be attached in all futures: [n=0] 
[13:33:47.867] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.867] Number of futures (= number of chunks): 1
[13:33:47.867] Launching 1 futures (chunks) ...
[13:33:47.867] Chunk #1 of 1 ...
[13:33:47.868]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.868]    + additional globals found: [n=0] 
[13:33:47.868]    + additional namespaces needed: [n=0] 
[13:33:47.868]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.868]  - seeds: <none>
[13:33:47.868]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.870] Created future:
[13:33:47.870] SequentialFuture:
[13:33:47.870] Label: ‘future_lapply-1’
[13:33:47.870] Expression:
[13:33:47.870] {
[13:33:47.870]     do.call(function(...) {
[13:33:47.870]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.870]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.870]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.870]             on.exit(options(oopts), add = TRUE)
[13:33:47.870]         }
[13:33:47.870]         {
[13:33:47.870]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.870]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.870]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.870]             })
[13:33:47.870]         }
[13:33:47.870]     }, args = future.call.arguments)
[13:33:47.870] }
[13:33:47.870] Lazy evaluation: FALSE
[13:33:47.870] Asynchronous evaluation: FALSE
[13:33:47.870] Local evaluation: TRUE
[13:33:47.870] Environment: R_GlobalEnv
[13:33:47.870] Capture standard output: TRUE
[13:33:47.870] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.870] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:47.870] Packages: <none>
[13:33:47.870] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.870] Resolved: TRUE
[13:33:47.870] Value: 56 bytes of class ‘list’
[13:33:47.870] Early signaling: FALSE
[13:33:47.870] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.870] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.871] Chunk #1 of 1 ... DONE
[13:33:47.871] Launching 1 futures (chunks) ... DONE
[13:33:47.872] Resolving 1 futures (chunks) ...
[13:33:47.872]  - Number of value chunks collected: 1
[13:33:47.872] Resolving 1 futures (chunks) ... DONE
[13:33:47.872] Reducing values from 1 chunks ...
[13:33:47.872]  - Number of values collected after concatenation: 1
[13:33:47.872]  - Number of values expected: 1
[13:33:47.872] Reducing values from 1 chunks ... DONE
[13:33:47.872] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:33:47.873] future_lapply() ...
[13:33:47.873] Number of chunks: 1
[13:33:47.873] getGlobalsAndPackagesXApply() ...
[13:33:47.873]  - future.globals: <name-value list> with names ‘42’
[13:33:47.873]  - use_args: TRUE
[13:33:47.873]  - Getting '...' globals ...
[13:33:47.874]    - '...' content: [n=0] 
[13:33:47.874] List of 1
[13:33:47.874]  $ ...: list()
[13:33:47.874]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.874]  - attr(*, "where")=List of 1
[13:33:47.874]   ..$ ...:<environment: 0x5620d27505d0> 
[13:33:47.874]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.874]  - attr(*, "resolved")= logi TRUE
[13:33:47.874]  - attr(*, "total_size")= num NA
[13:33:47.876]  - Getting '...' globals ... DONE
[13:33:47.876] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:33:47.877] List of 3
[13:33:47.877]  $ a            : num 42
[13:33:47.877]  $ ...future.FUN:function (x)  
[13:33:47.877]  $ ...          : list()
[13:33:47.877]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.877]  - attr(*, "where")=List of 3
[13:33:47.877]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:47.877]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:33:47.877]   ..$ ...          :<environment: 0x5620d27505d0> 
[13:33:47.877]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.877]  - attr(*, "resolved")= logi FALSE
[13:33:47.877]  - attr(*, "total_size")= num NA
[13:33:47.881] Packages to be attached in all futures: [n=0] 
[13:33:47.881] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.881] Number of futures (= number of chunks): 1
[13:33:47.881] Launching 1 futures (chunks) ...
[13:33:47.881] Chunk #1 of 1 ...
[13:33:47.882]  - seeds: <none>
[13:33:47.882]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.884] Created future:
[13:33:47.884] SequentialFuture:
[13:33:47.884] Label: ‘future_lapply-1’
[13:33:47.884] Expression:
[13:33:47.884] {
[13:33:47.884]     do.call(function(...) {
[13:33:47.884]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.884]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.884]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.884]             on.exit(options(oopts), add = TRUE)
[13:33:47.884]         }
[13:33:47.884]         {
[13:33:47.884]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.884]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.884]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.884]             })
[13:33:47.884]         }
[13:33:47.884]     }, args = future.call.arguments)
[13:33:47.884] }
[13:33:47.884] Lazy evaluation: FALSE
[13:33:47.884] Asynchronous evaluation: FALSE
[13:33:47.884] Local evaluation: TRUE
[13:33:47.884] Environment: R_GlobalEnv
[13:33:47.884] Capture standard output: TRUE
[13:33:47.884] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.884] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:47.884] Packages: <none>
[13:33:47.884] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.884] Resolved: TRUE
[13:33:47.884] Value: 56 bytes of class ‘list’
[13:33:47.884] Early signaling: FALSE
[13:33:47.884] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.884] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:33:47.885] Chunk #1 of 1 ... DONE
[13:33:47.885] Launching 1 futures (chunks) ... DONE
[13:33:47.885] Resolving 1 futures (chunks) ...
[13:33:47.886]  - Number of value chunks collected: 1
[13:33:47.886] Resolving 1 futures (chunks) ... DONE
[13:33:47.886] Reducing values from 1 chunks ...
[13:33:47.886]  - Number of values collected after concatenation: 1
[13:33:47.886]  - Number of values expected: 1
[13:33:47.886] Reducing values from 1 chunks ... DONE
[13:33:47.886] future_lapply() ... DONE
List of 1
 $ : num 42
[13:33:47.894] future_lapply() ...
[13:33:47.899] Number of chunks: 2
[13:33:47.899] getGlobalsAndPackagesXApply() ...
[13:33:47.899]  - future.globals: TRUE
[13:33:47.903]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:33:47.904]  - needed namespaces: [n=0] 
[13:33:47.904] Finding globals ... DONE
[13:33:47.904]  - use_args: TRUE
[13:33:47.904]  - Getting '...' globals ...
[13:33:47.904]    - '...' content: [n=0] 
[13:33:47.904] List of 1
[13:33:47.904]  $ ...: list()
[13:33:47.904]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.904]  - attr(*, "where")=List of 1
[13:33:47.904]   ..$ ...:<environment: 0x5620d0eadff8> 
[13:33:47.904]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.904]  - attr(*, "resolved")= logi TRUE
[13:33:47.904]  - attr(*, "total_size")= num NA
[13:33:47.907]  - Getting '...' globals ... DONE
[13:33:47.907] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:33:47.907] List of 6
[13:33:47.907]  $ ...future.FUN:function (i)  
[13:33:47.907]  $ caller       :function (a, b, FUN = call_my_add)  
[13:33:47.907]  $ args         :List of 1
[13:33:47.907]   ..$ FUN:function (a, b)  
[13:33:47.907]  $ call_my_add  :function (a, b)  
[13:33:47.907]  $ my_add       :function (a, b)  
[13:33:47.907]  $ ...          : list()
[13:33:47.907]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.907]  - attr(*, "where")=List of 6
[13:33:47.907]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.907]   ..$ caller       :<environment: R_EmptyEnv> 
[13:33:47.907]   ..$ args         :<environment: R_EmptyEnv> 
[13:33:47.907]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:33:47.907]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:33:47.907]   ..$ ...          :<environment: 0x5620d0eadff8> 
[13:33:47.907]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.907]  - attr(*, "resolved")= logi FALSE
[13:33:47.907]  - attr(*, "total_size")= num 24120
[13:33:47.911] Packages to be attached in all futures: [n=0] 
[13:33:47.911] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.911] Number of futures (= number of chunks): 2
[13:33:47.912] Launching 2 futures (chunks) ...
[13:33:47.912] Chunk #1 of 2 ...
[13:33:47.912]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.912]    + additional globals found: [n=0] 
[13:33:47.912]    + additional namespaces needed: [n=0] 
[13:33:47.912]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.912]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:47.912]  - seeds: <none>
[13:33:47.912]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.921] Created future:
[13:33:47.922] MulticoreFuture:
[13:33:47.922] Label: ‘future_lapply-1’
[13:33:47.922] Expression:
[13:33:47.922] {
[13:33:47.922]     do.call(function(...) {
[13:33:47.922]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.922]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.922]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.922]             on.exit(options(oopts), add = TRUE)
[13:33:47.922]         }
[13:33:47.922]         {
[13:33:47.922]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.922]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.922]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.922]             })
[13:33:47.922]         }
[13:33:47.922]     }, args = future.call.arguments)
[13:33:47.922] }
[13:33:47.922] Lazy evaluation: FALSE
[13:33:47.922] Asynchronous evaluation: TRUE
[13:33:47.922] Local evaluation: TRUE
[13:33:47.922] Environment: 0x5620d11430b0
[13:33:47.922] Capture standard output: TRUE
[13:33:47.922] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.922] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:33:47.922] Packages: <none>
[13:33:47.922] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.922] Resolved: TRUE
[13:33:47.922] Value: <not collected>
[13:33:47.922] Conditions captured: <none>
[13:33:47.922] Early signaling: FALSE
[13:33:47.922] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.922] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.929] Chunk #1 of 2 ... DONE
[13:33:47.929] Chunk #2 of 2 ...
[13:33:47.930]  - Finding globals in 'X' for chunk #2 ...
[13:33:47.930]    + additional globals found: [n=0] 
[13:33:47.930]    + additional namespaces needed: [n=0] 
[13:33:47.930]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:47.931]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:47.931]  - seeds: <none>
[13:33:47.931]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.940] Created future:
[13:33:47.940] MulticoreFuture:
[13:33:47.940] Label: ‘future_lapply-2’
[13:33:47.940] Expression:
[13:33:47.940] {
[13:33:47.940]     do.call(function(...) {
[13:33:47.940]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.940]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.940]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.940]             on.exit(options(oopts), add = TRUE)
[13:33:47.940]         }
[13:33:47.940]         {
[13:33:47.940]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.940]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.940]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.940]             })
[13:33:47.940]         }
[13:33:47.940]     }, args = future.call.arguments)
[13:33:47.940] }
[13:33:47.940] Lazy evaluation: FALSE
[13:33:47.940] Asynchronous evaluation: TRUE
[13:33:47.940] Local evaluation: TRUE
[13:33:47.940] Environment: 0x5620d11430b0
[13:33:47.940] Capture standard output: TRUE
[13:33:47.940] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.940] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:33:47.940] Packages: <none>
[13:33:47.940] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.940] Resolved: TRUE
[13:33:47.940] Value: <not collected>
[13:33:47.940] Conditions captured: <none>
[13:33:47.940] Early signaling: FALSE
[13:33:47.940] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.940] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.948] Chunk #2 of 2 ... DONE
[13:33:47.948] Launching 2 futures (chunks) ... DONE
[13:33:47.948] Resolving 2 futures (chunks) ...
[13:33:47.952]  - Number of value chunks collected: 2
[13:33:47.952] Resolving 2 futures (chunks) ... DONE
[13:33:47.953] Reducing values from 2 chunks ...
[13:33:47.953]  - Number of values collected after concatenation: 3
[13:33:47.953]  - Number of values expected: 3
[13:33:47.953] Reducing values from 2 chunks ... DONE
[13:33:47.953] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:33:47.954] future_lapply() ...
[13:33:47.962] Number of chunks: 1
[13:33:47.962] getGlobalsAndPackagesXApply() ...
[13:33:47.962]  - future.globals: TRUE
[13:33:47.965]  - globals found/used: [n=1] ‘FUN’
[13:33:47.965]  - needed namespaces: [n=0] 
[13:33:47.965] Finding globals ... DONE
[13:33:47.966]  - use_args: TRUE
[13:33:47.966]  - Getting '...' globals ...
[13:33:47.966]    - '...' content: [n=1] ‘what’
[13:33:47.966] List of 1
[13:33:47.966]  $ ...:List of 1
[13:33:47.966]   ..$ what:function (x)  
[13:33:47.966]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.966]  - attr(*, "where")=List of 1
[13:33:47.966]   ..$ ...:<environment: 0x5620d292caa0> 
[13:33:47.966]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.966]  - attr(*, "resolved")= logi TRUE
[13:33:47.966]  - attr(*, "total_size")= num NA
[13:33:47.970]  - Getting '...' globals ... DONE
[13:33:47.970] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:47.970] List of 2
[13:33:47.970]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:47.970]  $ ...          :List of 1
[13:33:47.970]   ..$ what:function (x)  
[13:33:47.970]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:47.970]  - attr(*, "where")=List of 2
[13:33:47.970]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:47.970]   ..$ ...          :<environment: 0x5620d292caa0> 
[13:33:47.970]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:47.970]  - attr(*, "resolved")= logi FALSE
[13:33:47.970]  - attr(*, "total_size")= num 12192
[13:33:47.973] Packages to be attached in all futures: [n=0] 
[13:33:47.974] getGlobalsAndPackagesXApply() ... DONE
[13:33:47.974] Number of futures (= number of chunks): 1
[13:33:47.974] Launching 1 futures (chunks) ...
[13:33:47.974] Chunk #1 of 1 ...
[13:33:47.974]  - Finding globals in 'X' for chunk #1 ...
[13:33:47.975]    + additional globals found: [n=0] 
[13:33:47.975]    + additional namespaces needed: [n=0] 
[13:33:47.975]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:47.975]  - seeds: <none>
[13:33:47.975]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:47.982] Created future:
[13:33:47.983] MulticoreFuture:
[13:33:47.983] Label: ‘future_lapply-1’
[13:33:47.983] Expression:
[13:33:47.983] {
[13:33:47.983]     do.call(function(...) {
[13:33:47.983]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:47.983]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:47.983]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:47.983]             on.exit(options(oopts), add = TRUE)
[13:33:47.983]         }
[13:33:47.983]         {
[13:33:47.983]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:47.983]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:47.983]                 ...future.FUN(...future.X_jj, ...)
[13:33:47.983]             })
[13:33:47.983]         }
[13:33:47.983]     }, args = future.call.arguments)
[13:33:47.983] }
[13:33:47.983] Lazy evaluation: FALSE
[13:33:47.983] Asynchronous evaluation: TRUE
[13:33:47.983] Local evaluation: TRUE
[13:33:47.983] Environment: R_GlobalEnv
[13:33:47.983] Capture standard output: TRUE
[13:33:47.983] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:47.983] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:47.983] Packages: <none>
[13:33:47.983] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:47.983] Resolved: TRUE
[13:33:47.983] Value: <not collected>
[13:33:47.983] Conditions captured: <none>
[13:33:47.983] Early signaling: FALSE
[13:33:47.983] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:47.983] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:47.991] Chunk #1 of 1 ... DONE
[13:33:47.991] Launching 1 futures (chunks) ... DONE
[13:33:47.991] Resolving 1 futures (chunks) ...
[13:33:47.993]  - Number of value chunks collected: 1
[13:33:47.993] Resolving 1 futures (chunks) ... DONE
[13:33:47.993] Reducing values from 1 chunks ...
[13:33:47.993]  - Number of values collected after concatenation: 1
[13:33:47.993]  - Number of values expected: 1
[13:33:47.993] Reducing values from 1 chunks ... DONE
[13:33:47.994] future_lapply() ... DONE
[13:33:47.994] future_lapply() ...
[13:33:47.999] Number of chunks: 1
[13:33:47.999] getGlobalsAndPackagesXApply() ...
[13:33:48.000]  - future.globals: TRUE
[13:33:48.003]  - globals found/used: [n=1] ‘FUN’
[13:33:48.003]  - needed namespaces: [n=0] 
[13:33:48.003] Finding globals ... DONE
[13:33:48.003]  - use_args: TRUE
[13:33:48.004]  - Getting '...' globals ...
[13:33:48.004]    - '...' content: [n=1] ‘what’
[13:33:48.004] List of 1
[13:33:48.004]  $ ...:List of 1
[13:33:48.004]   ..$ what:function (...)  
[13:33:48.004]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.004]  - attr(*, "where")=List of 1
[13:33:48.004]   ..$ ...:<environment: 0x5620cf460e38> 
[13:33:48.004]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.004]  - attr(*, "resolved")= logi TRUE
[13:33:48.004]  - attr(*, "total_size")= num NA
[13:33:48.008]  - Getting '...' globals ... DONE
[13:33:48.008] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:48.008] List of 2
[13:33:48.008]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:48.008]  $ ...          :List of 1
[13:33:48.008]   ..$ what:function (...)  
[13:33:48.008]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.008]  - attr(*, "where")=List of 2
[13:33:48.008]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.008]   ..$ ...          :<environment: 0x5620cf460e38> 
[13:33:48.008]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.008]  - attr(*, "resolved")= logi FALSE
[13:33:48.008]  - attr(*, "total_size")= num 13352
[13:33:48.011] Packages to be attached in all futures: [n=0] 
[13:33:48.011] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.012] Number of futures (= number of chunks): 1
[13:33:48.012] Launching 1 futures (chunks) ...
[13:33:48.012] Chunk #1 of 1 ...
[13:33:48.012]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.012]    + additional globals found: [n=0] 
[13:33:48.013]    + additional namespaces needed: [n=0] 
[13:33:48.013]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.013]  - seeds: <none>
[13:33:48.013]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.020] Created future:
[13:33:48.020] MulticoreFuture:
[13:33:48.020] Label: ‘future_lapply-1’
[13:33:48.020] Expression:
[13:33:48.020] {
[13:33:48.020]     do.call(function(...) {
[13:33:48.020]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.020]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.020]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.020]             on.exit(options(oopts), add = TRUE)
[13:33:48.020]         }
[13:33:48.020]         {
[13:33:48.020]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.020]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.020]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.020]             })
[13:33:48.020]         }
[13:33:48.020]     }, args = future.call.arguments)
[13:33:48.020] }
[13:33:48.020] Lazy evaluation: FALSE
[13:33:48.020] Asynchronous evaluation: TRUE
[13:33:48.020] Local evaluation: TRUE
[13:33:48.020] Environment: R_GlobalEnv
[13:33:48.020] Capture standard output: TRUE
[13:33:48.020] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.020] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:48.020] Packages: <none>
[13:33:48.020] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.020] Resolved: TRUE
[13:33:48.020] Value: <not collected>
[13:33:48.020] Conditions captured: <none>
[13:33:48.020] Early signaling: FALSE
[13:33:48.020] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.020] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.028] Chunk #1 of 1 ... DONE
[13:33:48.028] Launching 1 futures (chunks) ... DONE
[13:33:48.028] Resolving 1 futures (chunks) ...
[13:33:48.030]  - Number of value chunks collected: 1
[13:33:48.030] Resolving 1 futures (chunks) ... DONE
[13:33:48.030] Reducing values from 1 chunks ...
[13:33:48.030]  - Number of values collected after concatenation: 1
[13:33:48.030]  - Number of values expected: 1
[13:33:48.030] Reducing values from 1 chunks ... DONE
[13:33:48.031] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:33:48.031] future_lapply() ...
[13:33:48.035] Number of chunks: 1
[13:33:48.036] getGlobalsAndPackagesXApply() ...
[13:33:48.036]  - future.globals: TRUE
[13:33:48.038]  - globals found/used: [n=1] ‘FUN’
[13:33:48.038]  - needed namespaces: [n=0] 
[13:33:48.038] Finding globals ... DONE
[13:33:48.038]  - use_args: TRUE
[13:33:48.038]  - Getting '...' globals ...
[13:33:48.038]    - '...' content: [n=1] ‘b’
[13:33:48.039] List of 1
[13:33:48.039]  $ ...:List of 1
[13:33:48.039]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:48.039]   .. ..$ a: int [1:2] 1 2
[13:33:48.039]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.039]  - attr(*, "where")=List of 1
[13:33:48.039]   ..$ ...:<environment: 0x5620d2678ae8> 
[13:33:48.039]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.039]  - attr(*, "resolved")= logi TRUE
[13:33:48.039]  - attr(*, "total_size")= num NA
[13:33:48.045]  - Getting '...' globals ... DONE
[13:33:48.045] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:48.045] List of 2
[13:33:48.045]  $ ...future.FUN:function (a, b)  
[13:33:48.045]  $ ...          :List of 1
[13:33:48.045]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:48.045]   .. ..$ a: int [1:2] 1 2
[13:33:48.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.045]  - attr(*, "where")=List of 2
[13:33:48.045]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.045]   ..$ ...          :<environment: 0x5620d2678ae8> 
[13:33:48.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.045]  - attr(*, "resolved")= logi FALSE
[13:33:48.045]  - attr(*, "total_size")= num 1440
[13:33:48.049] Packages to be attached in all futures: [n=0] 
[13:33:48.049] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.049] Number of futures (= number of chunks): 1
[13:33:48.050] Launching 1 futures (chunks) ...
[13:33:48.050] Chunk #1 of 1 ...
[13:33:48.050]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.050]    + additional globals found: [n=0] 
[13:33:48.050]    + additional namespaces needed: [n=0] 
[13:33:48.050]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.051]  - seeds: <none>
[13:33:48.051]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.058] Created future:
[13:33:48.058] MulticoreFuture:
[13:33:48.058] Label: ‘future_lapply-1’
[13:33:48.058] Expression:
[13:33:48.058] {
[13:33:48.058]     do.call(function(...) {
[13:33:48.058]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.058]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.058]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.058]             on.exit(options(oopts), add = TRUE)
[13:33:48.058]         }
[13:33:48.058]         {
[13:33:48.058]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.058]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.058]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.058]             })
[13:33:48.058]         }
[13:33:48.058]     }, args = future.call.arguments)
[13:33:48.058] }
[13:33:48.058] Lazy evaluation: FALSE
[13:33:48.058] Asynchronous evaluation: TRUE
[13:33:48.058] Local evaluation: TRUE
[13:33:48.058] Environment: R_GlobalEnv
[13:33:48.058] Capture standard output: TRUE
[13:33:48.058] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.058] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:48.058] Packages: <none>
[13:33:48.058] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.058] Resolved: TRUE
[13:33:48.058] Value: <not collected>
[13:33:48.058] Conditions captured: <none>
[13:33:48.058] Early signaling: FALSE
[13:33:48.058] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.058] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.066] Chunk #1 of 1 ... DONE
[13:33:48.066] Launching 1 futures (chunks) ... DONE
[13:33:48.066] Resolving 1 futures (chunks) ...
[13:33:48.068]  - Number of value chunks collected: 1
[13:33:48.068] Resolving 1 futures (chunks) ... DONE
[13:33:48.068] Reducing values from 1 chunks ...
[13:33:48.068]  - Number of values collected after concatenation: 1
[13:33:48.068]  - Number of values expected: 1
[13:33:48.069] Reducing values from 1 chunks ... DONE
[13:33:48.069] future_lapply() ... DONE
[13:33:48.069] future_lapply() ...
[13:33:48.073] Number of chunks: 1
[13:33:48.073] getGlobalsAndPackagesXApply() ...
[13:33:48.073]  - future.globals: TRUE
[13:33:48.075]  - globals found/used: [n=1] ‘FUN’
[13:33:48.076]  - needed namespaces: [n=0] 
[13:33:48.076] Finding globals ... DONE
[13:33:48.076]  - use_args: TRUE
[13:33:48.076]  - Getting '...' globals ...
[13:33:48.076]    - '...' content: [n=1] ‘b’
[13:33:48.077] List of 1
[13:33:48.077]  $ ...:List of 1
[13:33:48.077]   ..$ b:<environment: 0x5620d0fe47d8> 
[13:33:48.077]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.077]  - attr(*, "where")=List of 1
[13:33:48.077]   ..$ ...:<environment: 0x5620d0fe5290> 
[13:33:48.077]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.077]  - attr(*, "resolved")= logi TRUE
[13:33:48.077]  - attr(*, "total_size")= num NA
[13:33:48.080]  - Getting '...' globals ... DONE
[13:33:48.080] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:48.080] List of 2
[13:33:48.080]  $ ...future.FUN:function (a, b)  
[13:33:48.080]  $ ...          :List of 1
[13:33:48.080]   ..$ b:<environment: 0x5620d0fe47d8> 
[13:33:48.080]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.080]  - attr(*, "where")=List of 2
[13:33:48.080]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.080]   ..$ ...          :<environment: 0x5620d0fe5290> 
[13:33:48.080]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.080]  - attr(*, "resolved")= logi FALSE
[13:33:48.080]  - attr(*, "total_size")= num 1440
[13:33:48.084] Packages to be attached in all futures: [n=0] 
[13:33:48.084] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.084] Number of futures (= number of chunks): 1
[13:33:48.085] Launching 1 futures (chunks) ...
[13:33:48.085] Chunk #1 of 1 ...
[13:33:48.085]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.085]    + additional globals found: [n=0] 
[13:33:48.085]    + additional namespaces needed: [n=0] 
[13:33:48.085]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.086]  - seeds: <none>
[13:33:48.086]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.093] Created future:
[13:33:48.093] MulticoreFuture:
[13:33:48.093] Label: ‘future_lapply-1’
[13:33:48.093] Expression:
[13:33:48.093] {
[13:33:48.093]     do.call(function(...) {
[13:33:48.093]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.093]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.093]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.093]             on.exit(options(oopts), add = TRUE)
[13:33:48.093]         }
[13:33:48.093]         {
[13:33:48.093]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.093]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.093]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.093]             })
[13:33:48.093]         }
[13:33:48.093]     }, args = future.call.arguments)
[13:33:48.093] }
[13:33:48.093] Lazy evaluation: FALSE
[13:33:48.093] Asynchronous evaluation: TRUE
[13:33:48.093] Local evaluation: TRUE
[13:33:48.093] Environment: R_GlobalEnv
[13:33:48.093] Capture standard output: TRUE
[13:33:48.093] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.093] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:48.093] Packages: <none>
[13:33:48.093] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.093] Resolved: TRUE
[13:33:48.093] Value: <not collected>
[13:33:48.093] Conditions captured: <none>
[13:33:48.093] Early signaling: FALSE
[13:33:48.093] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.093] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.101] Chunk #1 of 1 ... DONE
[13:33:48.101] Launching 1 futures (chunks) ... DONE
[13:33:48.101] Resolving 1 futures (chunks) ...
[13:33:48.103]  - Number of value chunks collected: 1
[13:33:48.103] Resolving 1 futures (chunks) ... DONE
[13:33:48.103] Reducing values from 1 chunks ...
[13:33:48.103]  - Number of values collected after concatenation: 1
[13:33:48.103]  - Number of values expected: 1
[13:33:48.103] Reducing values from 1 chunks ... DONE
[13:33:48.104] future_lapply() ... DONE
[13:33:48.104] future_lapply() ...
[13:33:48.108] Number of chunks: 1
[13:33:48.108] getGlobalsAndPackagesXApply() ...
[13:33:48.108]  - future.globals: TRUE
[13:33:48.111]  - globals found/used: [n=1] ‘FUN’
[13:33:48.111]  - needed namespaces: [n=0] 
[13:33:48.111] Finding globals ... DONE
[13:33:48.111]  - use_args: TRUE
[13:33:48.111]  - Getting '...' globals ...
[13:33:48.112]    - '...' content: [n=1] ‘b’
[13:33:48.112] List of 1
[13:33:48.112]  $ ...:List of 1
[13:33:48.112]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:48.112]   .. .. ..@ slots     :List of 4
[13:33:48.112]   .. .. .. ..$ .Data  : chr "function"
[13:33:48.112]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. ..$ target : chr "signature"
[13:33:48.112]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. ..$ defined: chr "signature"
[13:33:48.112]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. ..$ generic: chr "character"
[13:33:48.112]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. ..@ contains  :List of 3
[13:33:48.112]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.112]   .. .. ..@ virtual   : logi FALSE
[13:33:48.112]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:48.112]  list()
[13:33:48.112]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:48.112]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:48.112]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:48.112]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:48.112]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:48.112]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:48.112]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:48.112]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:48.112]   .. .. .. .. ..$ generic: chr(0) 
[13:33:48.112]   .. .. ..@ validity  : NULL
[13:33:48.112]   .. .. ..@ access    : list()
[13:33:48.112]   .. .. ..@ className : chr "MethodDefinition"
[13:33:48.112]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. ..@ subclasses:List of 7
[13:33:48.112]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.112]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.112]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.112]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.112]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.112]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.112]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.112]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.112]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:48.112]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.112]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.112]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.112]   .. .. ..@ versionKey:<externalptr> 
[13:33:48.112]   .. .. ..@ sealed    : logi TRUE
[13:33:48.112]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.112]  - attr(*, "where")=List of 1
[13:33:48.112]   ..$ ...:<environment: 0x5620d2061688> 
[13:33:48.112]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.112]  - attr(*, "resolved")= logi TRUE
[13:33:48.112]  - attr(*, "total_size")= num NA
[13:33:48.167]  - Getting '...' globals ... DONE
[13:33:48.168] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:48.168] List of 2
[13:33:48.168]  $ ...future.FUN:function (a, b)  
[13:33:48.168]  $ ...          :List of 1
[13:33:48.168]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:48.168]   .. .. ..@ slots     :List of 4
[13:33:48.168]   .. .. .. ..$ .Data  : chr "function"
[13:33:48.168]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. ..$ target : chr "signature"
[13:33:48.168]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. ..$ defined: chr "signature"
[13:33:48.168]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. ..$ generic: chr "character"
[13:33:48.168]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. ..@ contains  :List of 3
[13:33:48.168]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.168]   .. .. ..@ virtual   : logi FALSE
[13:33:48.168]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:48.168]  list()
[13:33:48.168]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:48.168]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:48.168]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:48.168]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:48.168]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:48.168]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:48.168]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:48.168]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:48.168]   .. .. .. .. ..$ generic: chr(0) 
[13:33:48.168]   .. .. ..@ validity  : NULL
[13:33:48.168]   .. .. ..@ access    : list()
[13:33:48.168]   .. .. ..@ className : chr "MethodDefinition"
[13:33:48.168]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. ..@ subclasses:List of 7
[13:33:48.168]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 1
[13:33:48.168]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.168]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.168]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:48.168]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:48.168]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:48.168]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:48.168]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:48.168]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:48.168]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:48.168]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:48.168]   .. .. .. .. .. ..@ distance  : num 2
[13:33:48.168]   .. .. ..@ versionKey:<externalptr> 
[13:33:48.168]   .. .. ..@ sealed    : logi TRUE
[13:33:48.168]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.168]  - attr(*, "where")=List of 2
[13:33:48.168]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.168]   ..$ ...          :<environment: 0x5620d2061688> 
[13:33:48.168]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.168]  - attr(*, "resolved")= logi FALSE
[13:33:48.168]  - attr(*, "total_size")= num 312512
[13:33:48.212] Packages to be attached in all futures: [n=0] 
[13:33:48.212] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.212] Number of futures (= number of chunks): 1
[13:33:48.213] Launching 1 futures (chunks) ...
[13:33:48.213] Chunk #1 of 1 ...
[13:33:48.213]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.213]    + additional globals found: [n=0] 
[13:33:48.213]    + additional namespaces needed: [n=0] 
[13:33:48.213]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.213]  - seeds: <none>
[13:33:48.213]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.221] Created future:
[13:33:48.222] MulticoreFuture:
[13:33:48.222] Label: ‘future_lapply-1’
[13:33:48.222] Expression:
[13:33:48.222] {
[13:33:48.222]     do.call(function(...) {
[13:33:48.222]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.222]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.222]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.222]             on.exit(options(oopts), add = TRUE)
[13:33:48.222]         }
[13:33:48.222]         {
[13:33:48.222]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.222]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.222]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.222]             })
[13:33:48.222]         }
[13:33:48.222]     }, args = future.call.arguments)
[13:33:48.222] }
[13:33:48.222] Lazy evaluation: FALSE
[13:33:48.222] Asynchronous evaluation: TRUE
[13:33:48.222] Local evaluation: TRUE
[13:33:48.222] Environment: R_GlobalEnv
[13:33:48.222] Capture standard output: TRUE
[13:33:48.222] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.222] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:48.222] Packages: <none>
[13:33:48.222] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.222] Resolved: TRUE
[13:33:48.222] Value: <not collected>
[13:33:48.222] Conditions captured: <none>
[13:33:48.222] Early signaling: FALSE
[13:33:48.222] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.222] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.230] Chunk #1 of 1 ... DONE
[13:33:48.230] Launching 1 futures (chunks) ... DONE
[13:33:48.230] Resolving 1 futures (chunks) ...
[13:33:48.232]  - Number of value chunks collected: 1
[13:33:48.232] Resolving 1 futures (chunks) ... DONE
[13:33:48.232] Reducing values from 1 chunks ...
[13:33:48.233]  - Number of values collected after concatenation: 1
[13:33:48.233]  - Number of values expected: 1
[13:33:48.233] Reducing values from 1 chunks ... DONE
[13:33:48.233] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:33:48.236] future_lapply() ...
[13:33:48.241] Number of chunks: 2
[13:33:48.241] getGlobalsAndPackagesXApply() ...
[13:33:48.241]  - future.globals: TRUE
[13:33:48.243]  - globals found/used: [n=1] ‘FUN’
[13:33:48.243]  - needed namespaces: [n=0] 
[13:33:48.243] Finding globals ... DONE
[13:33:48.243]  - use_args: TRUE
[13:33:48.243]  - Getting '...' globals ...
[13:33:48.244]    - '...' content: [n=0] 
[13:33:48.244] List of 1
[13:33:48.244]  $ ...: list()
[13:33:48.244]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.244]  - attr(*, "where")=List of 1
[13:33:48.244]   ..$ ...:<environment: 0x5620ceee9bf8> 
[13:33:48.244]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.244]  - attr(*, "resolved")= logi TRUE
[13:33:48.244]  - attr(*, "total_size")= num NA
[13:33:48.247]  - Getting '...' globals ... DONE
[13:33:48.247] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:48.247] List of 2
[13:33:48.247]  $ ...future.FUN:function (f)  
[13:33:48.247]  $ ...          : list()
[13:33:48.247]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.247]  - attr(*, "where")=List of 2
[13:33:48.247]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.247]   ..$ ...          :<environment: 0x5620ceee9bf8> 
[13:33:48.247]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.247]  - attr(*, "resolved")= logi FALSE
[13:33:48.247]  - attr(*, "total_size")= num 1008
[13:33:48.250] Packages to be attached in all futures: [n=0] 
[13:33:48.250] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.250] Number of futures (= number of chunks): 2
[13:33:48.251] Launching 2 futures (chunks) ...
[13:33:48.251] Chunk #1 of 2 ...
[13:33:48.251]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.253]    + additional globals found: [n=2] ‘a’, ‘b’
[13:33:48.253]    + additional namespaces needed: [n=0] 
[13:33:48.253]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.253]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:48.253]  - seeds: <none>
[13:33:48.253]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:33:48.260] Created future:
[13:33:48.261] MulticoreFuture:
[13:33:48.261] Label: ‘future_lapply-1’
[13:33:48.261] Expression:
[13:33:48.261] {
[13:33:48.261]     do.call(function(...) {
[13:33:48.261]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.261]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.261]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.261]             on.exit(options(oopts), add = TRUE)
[13:33:48.261]         }
[13:33:48.261]         {
[13:33:48.261]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.261]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.261]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.261]             })
[13:33:48.261]         }
[13:33:48.261]     }, args = future.call.arguments)
[13:33:48.261] }
[13:33:48.261] Lazy evaluation: FALSE
[13:33:48.261] Asynchronous evaluation: TRUE
[13:33:48.261] Local evaluation: TRUE
[13:33:48.261] Environment: R_GlobalEnv
[13:33:48.261] Capture standard output: TRUE
[13:33:48.261] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.261] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:33:48.261] Packages: <none>
[13:33:48.261] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.261] Resolved: TRUE
[13:33:48.261] Value: <not collected>
[13:33:48.261] Conditions captured: <none>
[13:33:48.261] Early signaling: FALSE
[13:33:48.261] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.261] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.269] Chunk #1 of 2 ... DONE
[13:33:48.269] Chunk #2 of 2 ...
[13:33:48.269]  - Finding globals in 'X' for chunk #2 ...
[13:33:48.272]    + additional globals found: [n=2] ‘a’, ‘b’
[13:33:48.272]    + additional namespaces needed: [n=1] ‘tools’
[13:33:48.273]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:48.273]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:48.273]  - seeds: <none>
[13:33:48.273]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:33:48.282] Created future:
[13:33:48.282] MulticoreFuture:
[13:33:48.282] Label: ‘future_lapply-2’
[13:33:48.282] Expression:
[13:33:48.282] {
[13:33:48.282]     do.call(function(...) {
[13:33:48.282]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.282]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.282]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.282]             on.exit(options(oopts), add = TRUE)
[13:33:48.282]         }
[13:33:48.282]         {
[13:33:48.282]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.282]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.282]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.282]             })
[13:33:48.282]         }
[13:33:48.282]     }, args = future.call.arguments)
[13:33:48.282] }
[13:33:48.282] Lazy evaluation: FALSE
[13:33:48.282] Asynchronous evaluation: TRUE
[13:33:48.282] Local evaluation: TRUE
[13:33:48.282] Environment: R_GlobalEnv
[13:33:48.282] Capture standard output: TRUE
[13:33:48.282] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.282] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:33:48.282] Packages: 1 packages (‘tools’)
[13:33:48.282] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.282] Resolved: TRUE
[13:33:48.282] Value: <not collected>
[13:33:48.282] Conditions captured: <none>
[13:33:48.282] Early signaling: FALSE
[13:33:48.282] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.282] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.295] Chunk #2 of 2 ... DONE
[13:33:48.295] Launching 2 futures (chunks) ... DONE
[13:33:48.295] Resolving 2 futures (chunks) ...
[13:33:48.300]  - Number of value chunks collected: 2
[13:33:48.300] Resolving 2 futures (chunks) ... DONE
[13:33:48.300] Reducing values from 2 chunks ...
[13:33:48.300]  - Number of values collected after concatenation: 4
[13:33:48.301]  - Number of values expected: 4
[13:33:48.301] Reducing values from 2 chunks ... DONE
[13:33:48.301] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:33:48.305] future_lapply() ...
[13:33:48.309] Number of chunks: 1
[13:33:48.309] getGlobalsAndPackagesXApply() ...
[13:33:48.310]  - future.globals: TRUE
[13:33:48.312]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:33:48.312]  - needed namespaces: [n=0] 
[13:33:48.313] Finding globals ... DONE
[13:33:48.313]  - use_args: TRUE
[13:33:48.313]  - Getting '...' globals ...
[13:33:48.313]    - '...' content: [n=0] 
[13:33:48.313] List of 1
[13:33:48.313]  $ ...: list()
[13:33:48.313]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.313]  - attr(*, "where")=List of 1
[13:33:48.313]   ..$ ...:<environment: 0x5620d16d2c68> 
[13:33:48.313]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.313]  - attr(*, "resolved")= logi TRUE
[13:33:48.313]  - attr(*, "total_size")= num NA
[13:33:48.316]  - Getting '...' globals ... DONE
[13:33:48.316] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:33:48.317] List of 3
[13:33:48.317]  $ ...future.FUN        :function (x)  
[13:33:48.317]  $ future.call.arguments:List of 1
[13:33:48.317]   ..$ a: num 1
[13:33:48.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.317]  $ ...                  : list()
[13:33:48.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.317]  - attr(*, "where")=List of 3
[13:33:48.317]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:33:48.317]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:33:48.317]   ..$ ...                  :<environment: 0x5620d16d2c68> 
[13:33:48.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.317]  - attr(*, "resolved")= logi FALSE
[13:33:48.317]  - attr(*, "total_size")= num 1272
[13:33:48.321] Packages to be attached in all futures: [n=0] 
[13:33:48.321] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.321] Number of futures (= number of chunks): 1
[13:33:48.321] Launching 1 futures (chunks) ...
[13:33:48.322] Chunk #1 of 1 ...
[13:33:48.322]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.322]    + additional globals found: [n=0] 
[13:33:48.322]    + additional namespaces needed: [n=0] 
[13:33:48.322]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.322]  - seeds: <none>
[13:33:48.322]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.330] Created future:
[13:33:48.330] MulticoreFuture:
[13:33:48.330] Label: ‘future_lapply-1’
[13:33:48.330] Expression:
[13:33:48.330] {
[13:33:48.330]     do.call(function(...) {
[13:33:48.330]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.330]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.330]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.330]             on.exit(options(oopts), add = TRUE)
[13:33:48.330]         }
[13:33:48.330]         {
[13:33:48.330]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.330]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.330]                 ...future.FUN(...future.X_jj)
[13:33:48.330]             })
[13:33:48.330]         }
[13:33:48.330]     }, args = future.call.arguments)
[13:33:48.330] }
[13:33:48.330] Lazy evaluation: FALSE
[13:33:48.330] Asynchronous evaluation: TRUE
[13:33:48.330] Local evaluation: TRUE
[13:33:48.330] Environment: 0x5620d16d28e8
[13:33:48.330] Capture standard output: TRUE
[13:33:48.330] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.330] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:48.330] Packages: <none>
[13:33:48.330] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.330] Resolved: TRUE
[13:33:48.330] Value: <not collected>
[13:33:48.330] Conditions captured: <none>
[13:33:48.330] Early signaling: FALSE
[13:33:48.330] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.330] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.338] Chunk #1 of 1 ... DONE
[13:33:48.339] Launching 1 futures (chunks) ... DONE
[13:33:48.339] Resolving 1 futures (chunks) ...
[13:33:48.340]  - Number of value chunks collected: 1
[13:33:48.340] Resolving 1 futures (chunks) ... DONE
[13:33:48.341] Reducing values from 1 chunks ...
[13:33:48.341]  - Number of values collected after concatenation: 1
[13:33:48.341]  - Number of values expected: 1
[13:33:48.341] Reducing values from 1 chunks ... DONE
[13:33:48.341] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:33:48.343] future_lapply() ...
[13:33:48.348] Number of chunks: 1
[13:33:48.348] getGlobalsAndPackagesXApply() ...
[13:33:48.348]  - future.globals: TRUE
[13:33:48.350]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:48.351]  - needed namespaces: [n=0] 
[13:33:48.351] Finding globals ... DONE
[13:33:48.351]  - use_args: TRUE
[13:33:48.351]  - Getting '...' globals ...
[13:33:48.351]    - '...' content: [n=0] 
[13:33:48.351] List of 1
[13:33:48.351]  $ ...: list()
[13:33:48.351]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.351]  - attr(*, "where")=List of 1
[13:33:48.351]   ..$ ...:<environment: 0x5620cf748ca8> 
[13:33:48.351]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.351]  - attr(*, "resolved")= logi TRUE
[13:33:48.351]  - attr(*, "total_size")= num NA
[13:33:48.354]  - Getting '...' globals ... DONE
[13:33:48.355] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:48.355] List of 3
[13:33:48.355]  $ ...future.FUN:function (ii)  
[13:33:48.355]  $ a            : num 1
[13:33:48.355]  $ ...          : list()
[13:33:48.355]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.355]  - attr(*, "where")=List of 3
[13:33:48.355]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.355]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:48.355]   ..$ ...          :<environment: 0x5620cf748ca8> 
[13:33:48.355]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.355]  - attr(*, "resolved")= logi FALSE
[13:33:48.355]  - attr(*, "total_size")= num 2984
[13:33:48.358] Packages to be attached in all futures: [n=0] 
[13:33:48.359] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.359] Number of futures (= number of chunks): 1
[13:33:48.359] Launching 1 futures (chunks) ...
[13:33:48.359] Chunk #1 of 1 ...
[13:33:48.359]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.360]    + additional globals found: [n=0] 
[13:33:48.360]    + additional namespaces needed: [n=0] 
[13:33:48.360]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.360]  - seeds: <none>
[13:33:48.360]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.367] Created future:
[13:33:48.367] MulticoreFuture:
[13:33:48.367] Label: ‘future_lapply-1’
[13:33:48.367] Expression:
[13:33:48.367] {
[13:33:48.367]     do.call(function(...) {
[13:33:48.367]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.367]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.367]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.367]             on.exit(options(oopts), add = TRUE)
[13:33:48.367]         }
[13:33:48.367]         {
[13:33:48.367]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.367]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.367]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.367]             })
[13:33:48.367]         }
[13:33:48.367]     }, args = future.call.arguments)
[13:33:48.367] }
[13:33:48.367] Lazy evaluation: FALSE
[13:33:48.367] Asynchronous evaluation: TRUE
[13:33:48.367] Local evaluation: TRUE
[13:33:48.367] Environment: R_GlobalEnv
[13:33:48.367] Capture standard output: TRUE
[13:33:48.367] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.367] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:48.367] Packages: <none>
[13:33:48.367] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.367] Resolved: TRUE
[13:33:48.367] Value: <not collected>
[13:33:48.367] Conditions captured: <none>
[13:33:48.367] Early signaling: FALSE
[13:33:48.367] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.367] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.375] Chunk #1 of 1 ... DONE
[13:33:48.376] Launching 1 futures (chunks) ... DONE
[13:33:48.376] Resolving 1 futures (chunks) ...
[13:33:48.377]  - Number of value chunks collected: 1
[13:33:48.377] Resolving 1 futures (chunks) ... DONE
[13:33:48.378] Reducing values from 1 chunks ...
[13:33:48.378]  - Number of values collected after concatenation: 1
[13:33:48.378]  - Number of values expected: 1
[13:33:48.378] Reducing values from 1 chunks ... DONE
[13:33:48.378] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:33:48.378] future_lapply() ...
[13:33:48.385] Number of chunks: 1
[13:33:48.386] getGlobalsAndPackagesXApply() ...
[13:33:48.386]  - future.globals: TRUE
[13:33:48.388]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:48.389]  - needed namespaces: [n=0] 
[13:33:48.389] Finding globals ... DONE
[13:33:48.389]  - use_args: TRUE
[13:33:48.389]  - Getting '...' globals ...
[13:33:48.389]    - '...' content: [n=0] 
[13:33:48.389] List of 1
[13:33:48.389]  $ ...: list()
[13:33:48.389]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.389]  - attr(*, "where")=List of 1
[13:33:48.389]   ..$ ...:<environment: 0x5620d2860e60> 
[13:33:48.389]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.389]  - attr(*, "resolved")= logi TRUE
[13:33:48.389]  - attr(*, "total_size")= num NA
[13:33:48.393]  - Getting '...' globals ... DONE
[13:33:48.393] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:48.393] List of 3
[13:33:48.393]  $ ...future.FUN:function (ii)  
[13:33:48.393]  $ a            : num 1
[13:33:48.393]  $ ...          : list()
[13:33:48.393]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.393]  - attr(*, "where")=List of 3
[13:33:48.393]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.393]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:48.393]   ..$ ...          :<environment: 0x5620d2860e60> 
[13:33:48.393]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.393]  - attr(*, "resolved")= logi FALSE
[13:33:48.393]  - attr(*, "total_size")= num 2984
[13:33:48.397] Packages to be attached in all futures: [n=0] 
[13:33:48.397] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.397] Number of futures (= number of chunks): 1
[13:33:48.397] Launching 1 futures (chunks) ...
[13:33:48.397] Chunk #1 of 1 ...
[13:33:48.397]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.398]    + additional globals found: [n=0] 
[13:33:48.398]    + additional namespaces needed: [n=0] 
[13:33:48.398]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.398]  - seeds: <none>
[13:33:48.398]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.405] Created future:
[13:33:48.406] MulticoreFuture:
[13:33:48.406] Label: ‘future_lapply-1’
[13:33:48.406] Expression:
[13:33:48.406] {
[13:33:48.406]     do.call(function(...) {
[13:33:48.406]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.406]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.406]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.406]             on.exit(options(oopts), add = TRUE)
[13:33:48.406]         }
[13:33:48.406]         {
[13:33:48.406]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.406]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.406]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.406]             })
[13:33:48.406]         }
[13:33:48.406]     }, args = future.call.arguments)
[13:33:48.406] }
[13:33:48.406] Lazy evaluation: FALSE
[13:33:48.406] Asynchronous evaluation: TRUE
[13:33:48.406] Local evaluation: TRUE
[13:33:48.406] Environment: R_GlobalEnv
[13:33:48.406] Capture standard output: TRUE
[13:33:48.406] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.406] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:48.406] Packages: <none>
[13:33:48.406] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.406] Resolved: TRUE
[13:33:48.406] Value: <not collected>
[13:33:48.406] Conditions captured: <none>
[13:33:48.406] Early signaling: FALSE
[13:33:48.406] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.406] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.414] Chunk #1 of 1 ... DONE
[13:33:48.414] Launching 1 futures (chunks) ... DONE
[13:33:48.414] Resolving 1 futures (chunks) ...
[13:33:48.416]  - Number of value chunks collected: 1
[13:33:48.416] Resolving 1 futures (chunks) ... DONE
[13:33:48.416] Reducing values from 1 chunks ...
[13:33:48.416]  - Number of values collected after concatenation: 1
[13:33:48.416]  - Number of values expected: 1
[13:33:48.416] Reducing values from 1 chunks ... DONE
[13:33:48.416] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:33:48.417] future_lapply() ...
[13:33:48.421] Number of chunks: 1
[13:33:48.421] getGlobalsAndPackagesXApply() ...
[13:33:48.421]  - future.globals: <name-value list> with names ‘42’
[13:33:48.421]  - use_args: TRUE
[13:33:48.422]  - Getting '...' globals ...
[13:33:48.422]    - '...' content: [n=0] 
[13:33:48.422] List of 1
[13:33:48.422]  $ ...: list()
[13:33:48.422]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.422]  - attr(*, "where")=List of 1
[13:33:48.422]   ..$ ...:<environment: 0x5620d08ed0b8> 
[13:33:48.422]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.422]  - attr(*, "resolved")= logi TRUE
[13:33:48.422]  - attr(*, "total_size")= num NA
[13:33:48.425]  - Getting '...' globals ... DONE
[13:33:48.425] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:33:48.426] List of 3
[13:33:48.426]  $ a            : num 42
[13:33:48.426]  $ ...future.FUN:function (x)  
[13:33:48.426]  $ ...          : list()
[13:33:48.426]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.426]  - attr(*, "where")=List of 3
[13:33:48.426]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:48.426]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:33:48.426]   ..$ ...          :<environment: 0x5620d08ed0b8> 
[13:33:48.426]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.426]  - attr(*, "resolved")= logi FALSE
[13:33:48.426]  - attr(*, "total_size")= num NA
[13:33:48.430] Packages to be attached in all futures: [n=0] 
[13:33:48.430] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.430] Number of futures (= number of chunks): 1
[13:33:48.430] Launching 1 futures (chunks) ...
[13:33:48.430] Chunk #1 of 1 ...
[13:33:48.430]  - seeds: <none>
[13:33:48.430]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.438] Created future:
[13:33:48.439] MulticoreFuture:
[13:33:48.439] Label: ‘future_lapply-1’
[13:33:48.439] Expression:
[13:33:48.439] {
[13:33:48.439]     do.call(function(...) {
[13:33:48.439]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.439]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.439]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.439]             on.exit(options(oopts), add = TRUE)
[13:33:48.439]         }
[13:33:48.439]         {
[13:33:48.439]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.439]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.439]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.439]             })
[13:33:48.439]         }
[13:33:48.439]     }, args = future.call.arguments)
[13:33:48.439] }
[13:33:48.439] Lazy evaluation: FALSE
[13:33:48.439] Asynchronous evaluation: TRUE
[13:33:48.439] Local evaluation: TRUE
[13:33:48.439] Environment: R_GlobalEnv
[13:33:48.439] Capture standard output: TRUE
[13:33:48.439] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.439] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:48.439] Packages: <none>
[13:33:48.439] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.439] Resolved: TRUE
[13:33:48.439] Value: <not collected>
[13:33:48.439] Conditions captured: <none>
[13:33:48.439] Early signaling: FALSE
[13:33:48.439] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.439] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.447] Chunk #1 of 1 ... DONE
[13:33:48.447] Launching 1 futures (chunks) ... DONE
[13:33:48.447] Resolving 1 futures (chunks) ...
[13:33:48.448]  - Number of value chunks collected: 1
[13:33:48.448] Resolving 1 futures (chunks) ... DONE
[13:33:48.449] Reducing values from 1 chunks ...
[13:33:48.449]  - Number of values collected after concatenation: 1
[13:33:48.449]  - Number of values expected: 1
[13:33:48.449] Reducing values from 1 chunks ... DONE
[13:33:48.449] future_lapply() ... DONE
List of 1
 $ : num 42
[13:33:48.806] future_lapply() ...
[13:33:48.811] Number of chunks: 2
[13:33:48.811] getGlobalsAndPackagesXApply() ...
[13:33:48.811]  - future.globals: TRUE
[13:33:48.819]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:33:48.819]  - needed namespaces: [n=0] 
[13:33:48.820] Finding globals ... DONE
[13:33:48.820]  - use_args: TRUE
[13:33:48.820]  - Getting '...' globals ...
[13:33:48.820]    - '...' content: [n=0] 
[13:33:48.820] List of 1
[13:33:48.820]  $ ...: list()
[13:33:48.820]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.820]  - attr(*, "where")=List of 1
[13:33:48.820]   ..$ ...:<environment: 0x5620d275ec60> 
[13:33:48.820]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.820]  - attr(*, "resolved")= logi TRUE
[13:33:48.820]  - attr(*, "total_size")= num NA
[13:33:48.823]  - Getting '...' globals ... DONE
[13:33:48.824] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:33:48.824] List of 6
[13:33:48.824]  $ ...future.FUN:function (i)  
[13:33:48.824]  $ caller       :function (a, b, FUN = call_my_add)  
[13:33:48.824]  $ args         :List of 1
[13:33:48.824]   ..$ FUN:function (a, b)  
[13:33:48.824]  $ call_my_add  :function (a, b)  
[13:33:48.824]  $ my_add       :function (a, b)  
[13:33:48.824]  $ ...          : list()
[13:33:48.824]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:48.824]  - attr(*, "where")=List of 6
[13:33:48.824]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:48.824]   ..$ caller       :<environment: R_EmptyEnv> 
[13:33:48.824]   ..$ args         :<environment: R_EmptyEnv> 
[13:33:48.824]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:33:48.824]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:33:48.824]   ..$ ...          :<environment: 0x5620d275ec60> 
[13:33:48.824]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:48.824]  - attr(*, "resolved")= logi FALSE
[13:33:48.824]  - attr(*, "total_size")= num 24120
[13:33:48.829] Packages to be attached in all futures: [n=0] 
[13:33:48.829] getGlobalsAndPackagesXApply() ... DONE
[13:33:48.829] Number of futures (= number of chunks): 2
[13:33:48.830] Launching 2 futures (chunks) ...
[13:33:48.830] Chunk #1 of 2 ...
[13:33:48.830]  - Finding globals in 'X' for chunk #1 ...
[13:33:48.830]    + additional globals found: [n=0] 
[13:33:48.830]    + additional namespaces needed: [n=0] 
[13:33:48.830]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:48.831]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:48.831]  - seeds: <none>
[13:33:48.831]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.893] Created future:
[13:33:48.893] MultisessionFuture:
[13:33:48.893] Label: ‘future_lapply-1’
[13:33:48.893] Expression:
[13:33:48.893] {
[13:33:48.893]     do.call(function(...) {
[13:33:48.893]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.893]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.893]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.893]             on.exit(options(oopts), add = TRUE)
[13:33:48.893]         }
[13:33:48.893]         {
[13:33:48.893]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.893]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.893]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.893]             })
[13:33:48.893]         }
[13:33:48.893]     }, args = future.call.arguments)
[13:33:48.893] }
[13:33:48.893] Lazy evaluation: FALSE
[13:33:48.893] Asynchronous evaluation: TRUE
[13:33:48.893] Local evaluation: TRUE
[13:33:48.893] Environment: 0x5620d275f088
[13:33:48.893] Capture standard output: TRUE
[13:33:48.893] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.893] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:33:48.893] Packages: <none>
[13:33:48.893] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.893] Resolved: FALSE
[13:33:48.893] Value: <not collected>
[13:33:48.893] Conditions captured: <none>
[13:33:48.893] Early signaling: FALSE
[13:33:48.893] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.893] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.906] Chunk #1 of 2 ... DONE
[13:33:48.906] Chunk #2 of 2 ...
[13:33:48.906]  - Finding globals in 'X' for chunk #2 ...
[13:33:48.907]    + additional globals found: [n=0] 
[13:33:48.907]    + additional namespaces needed: [n=0] 
[13:33:48.907]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:48.907]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:48.907]  - seeds: <none>
[13:33:48.907]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:48.978] Created future:
[13:33:48.978] MultisessionFuture:
[13:33:48.978] Label: ‘future_lapply-2’
[13:33:48.978] Expression:
[13:33:48.978] {
[13:33:48.978]     do.call(function(...) {
[13:33:48.978]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:48.978]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:48.978]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:48.978]             on.exit(options(oopts), add = TRUE)
[13:33:48.978]         }
[13:33:48.978]         {
[13:33:48.978]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:48.978]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:48.978]                 ...future.FUN(...future.X_jj, ...)
[13:33:48.978]             })
[13:33:48.978]         }
[13:33:48.978]     }, args = future.call.arguments)
[13:33:48.978] }
[13:33:48.978] Lazy evaluation: FALSE
[13:33:48.978] Asynchronous evaluation: TRUE
[13:33:48.978] Local evaluation: TRUE
[13:33:48.978] Environment: 0x5620d275f088
[13:33:48.978] Capture standard output: TRUE
[13:33:48.978] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:48.978] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:33:48.978] Packages: <none>
[13:33:48.978] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:48.978] Resolved: FALSE
[13:33:48.978] Value: <not collected>
[13:33:48.978] Conditions captured: <none>
[13:33:48.978] Early signaling: FALSE
[13:33:48.978] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:48.978] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:48.990] Chunk #2 of 2 ... DONE
[13:33:48.990] Launching 2 futures (chunks) ... DONE
[13:33:48.990] Resolving 2 futures (chunks) ...
[13:33:49.057]  - Number of value chunks collected: 2
[13:33:49.057] Resolving 2 futures (chunks) ... DONE
[13:33:49.057] Reducing values from 2 chunks ...
[13:33:49.057]  - Number of values collected after concatenation: 3
[13:33:49.057]  - Number of values expected: 3
[13:33:49.057] Reducing values from 2 chunks ... DONE
[13:33:49.058] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:33:49.058] future_lapply() ...
[13:33:49.062] Number of chunks: 1
[13:33:49.063] getGlobalsAndPackagesXApply() ...
[13:33:49.063]  - future.globals: TRUE
[13:33:49.065]  - globals found/used: [n=1] ‘FUN’
[13:33:49.066]  - needed namespaces: [n=0] 
[13:33:49.066] Finding globals ... DONE
[13:33:49.066]  - use_args: TRUE
[13:33:49.066]  - Getting '...' globals ...
[13:33:49.066]    - '...' content: [n=1] ‘what’
[13:33:49.066] List of 1
[13:33:49.066]  $ ...:List of 1
[13:33:49.066]   ..$ what:function (x)  
[13:33:49.066]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.066]  - attr(*, "where")=List of 1
[13:33:49.066]   ..$ ...:<environment: 0x5620d21d6918> 
[13:33:49.066]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.066]  - attr(*, "resolved")= logi TRUE
[13:33:49.066]  - attr(*, "total_size")= num NA
[13:33:49.069]  - Getting '...' globals ... DONE
[13:33:49.069] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.070] List of 2
[13:33:49.070]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:49.070]  $ ...          :List of 1
[13:33:49.070]   ..$ what:function (x)  
[13:33:49.070]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.070]  - attr(*, "where")=List of 2
[13:33:49.070]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.070]   ..$ ...          :<environment: 0x5620d21d6918> 
[13:33:49.070]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.070]  - attr(*, "resolved")= logi FALSE
[13:33:49.070]  - attr(*, "total_size")= num 12192
[13:33:49.085] Packages to be attached in all futures: [n=0] 
[13:33:49.085] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.085] Number of futures (= number of chunks): 1
[13:33:49.085] Launching 1 futures (chunks) ...
[13:33:49.085] Chunk #1 of 1 ...
[13:33:49.085]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.085]    + additional globals found: [n=0] 
[13:33:49.086]    + additional namespaces needed: [n=0] 
[13:33:49.086]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.086]  - seeds: <none>
[13:33:49.086]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.103] Created future:
[13:33:49.103] MultisessionFuture:
[13:33:49.103] Label: ‘future_lapply-1’
[13:33:49.103] Expression:
[13:33:49.103] {
[13:33:49.103]     do.call(function(...) {
[13:33:49.103]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.103]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.103]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.103]             on.exit(options(oopts), add = TRUE)
[13:33:49.103]         }
[13:33:49.103]         {
[13:33:49.103]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.103]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.103]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.103]             })
[13:33:49.103]         }
[13:33:49.103]     }, args = future.call.arguments)
[13:33:49.103] }
[13:33:49.103] Lazy evaluation: FALSE
[13:33:49.103] Asynchronous evaluation: TRUE
[13:33:49.103] Local evaluation: TRUE
[13:33:49.103] Environment: R_GlobalEnv
[13:33:49.103] Capture standard output: TRUE
[13:33:49.103] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.103] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.103] Packages: <none>
[13:33:49.103] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.103] Resolved: FALSE
[13:33:49.103] Value: <not collected>
[13:33:49.103] Conditions captured: <none>
[13:33:49.103] Early signaling: FALSE
[13:33:49.103] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.103] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.115] Chunk #1 of 1 ... DONE
[13:33:49.115] Launching 1 futures (chunks) ... DONE
[13:33:49.115] Resolving 1 futures (chunks) ...
[13:33:49.157]  - Number of value chunks collected: 1
[13:33:49.157] Resolving 1 futures (chunks) ... DONE
[13:33:49.158] Reducing values from 1 chunks ...
[13:33:49.158]  - Number of values collected after concatenation: 1
[13:33:49.158]  - Number of values expected: 1
[13:33:49.158] Reducing values from 1 chunks ... DONE
[13:33:49.158] future_lapply() ... DONE
[13:33:49.158] future_lapply() ...
[13:33:49.162] Number of chunks: 1
[13:33:49.163] getGlobalsAndPackagesXApply() ...
[13:33:49.163]  - future.globals: TRUE
[13:33:49.165]  - globals found/used: [n=1] ‘FUN’
[13:33:49.165]  - needed namespaces: [n=0] 
[13:33:49.165] Finding globals ... DONE
[13:33:49.166]  - use_args: TRUE
[13:33:49.166]  - Getting '...' globals ...
[13:33:49.166]    - '...' content: [n=1] ‘what’
[13:33:49.166] List of 1
[13:33:49.166]  $ ...:List of 1
[13:33:49.166]   ..$ what:function (...)  
[13:33:49.166]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.166]  - attr(*, "where")=List of 1
[13:33:49.166]   ..$ ...:<environment: 0x5620d0ec8640> 
[13:33:49.166]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.166]  - attr(*, "resolved")= logi TRUE
[13:33:49.166]  - attr(*, "total_size")= num NA
[13:33:49.169]  - Getting '...' globals ... DONE
[13:33:49.169] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.169] List of 2
[13:33:49.169]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:33:49.169]  $ ...          :List of 1
[13:33:49.169]   ..$ what:function (...)  
[13:33:49.169]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.169]  - attr(*, "where")=List of 2
[13:33:49.169]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.169]   ..$ ...          :<environment: 0x5620d0ec8640> 
[13:33:49.169]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.169]  - attr(*, "resolved")= logi FALSE
[13:33:49.169]  - attr(*, "total_size")= num 13352
[13:33:49.172] Packages to be attached in all futures: [n=0] 
[13:33:49.172] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.172] Number of futures (= number of chunks): 1
[13:33:49.172] Launching 1 futures (chunks) ...
[13:33:49.173] Chunk #1 of 1 ...
[13:33:49.173]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.173]    + additional globals found: [n=0] 
[13:33:49.173]    + additional namespaces needed: [n=0] 
[13:33:49.173]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.173]  - seeds: <none>
[13:33:49.173]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.190] Created future:
[13:33:49.190] MultisessionFuture:
[13:33:49.190] Label: ‘future_lapply-1’
[13:33:49.190] Expression:
[13:33:49.190] {
[13:33:49.190]     do.call(function(...) {
[13:33:49.190]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.190]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.190]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.190]             on.exit(options(oopts), add = TRUE)
[13:33:49.190]         }
[13:33:49.190]         {
[13:33:49.190]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.190]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.190]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.190]             })
[13:33:49.190]         }
[13:33:49.190]     }, args = future.call.arguments)
[13:33:49.190] }
[13:33:49.190] Lazy evaluation: FALSE
[13:33:49.190] Asynchronous evaluation: TRUE
[13:33:49.190] Local evaluation: TRUE
[13:33:49.190] Environment: R_GlobalEnv
[13:33:49.190] Capture standard output: TRUE
[13:33:49.190] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.190] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.190] Packages: <none>
[13:33:49.190] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.190] Resolved: FALSE
[13:33:49.190] Value: <not collected>
[13:33:49.190] Conditions captured: <none>
[13:33:49.190] Early signaling: FALSE
[13:33:49.190] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.190] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.202] Chunk #1 of 1 ... DONE
[13:33:49.202] Launching 1 futures (chunks) ... DONE
[13:33:49.202] Resolving 1 futures (chunks) ...
[13:33:49.232]  - Number of value chunks collected: 1
[13:33:49.232] Resolving 1 futures (chunks) ... DONE
[13:33:49.232] Reducing values from 1 chunks ...
[13:33:49.232]  - Number of values collected after concatenation: 1
[13:33:49.232]  - Number of values expected: 1
[13:33:49.233] Reducing values from 1 chunks ... DONE
[13:33:49.233] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:33:49.233] future_lapply() ...
[13:33:49.236] Number of chunks: 1
[13:33:49.237] getGlobalsAndPackagesXApply() ...
[13:33:49.237]  - future.globals: TRUE
[13:33:49.238]  - globals found/used: [n=1] ‘FUN’
[13:33:49.238]  - needed namespaces: [n=0] 
[13:33:49.239] Finding globals ... DONE
[13:33:49.239]  - use_args: TRUE
[13:33:49.239]  - Getting '...' globals ...
[13:33:49.239]    - '...' content: [n=1] ‘b’
[13:33:49.239] List of 1
[13:33:49.239]  $ ...:List of 1
[13:33:49.239]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:49.239]   .. ..$ a: int [1:2] 1 2
[13:33:49.239]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.239]  - attr(*, "where")=List of 1
[13:33:49.239]   ..$ ...:<environment: 0x5620d23c4a20> 
[13:33:49.239]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.239]  - attr(*, "resolved")= logi TRUE
[13:33:49.239]  - attr(*, "total_size")= num NA
[13:33:49.242]  - Getting '...' globals ... DONE
[13:33:49.243] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.243] List of 2
[13:33:49.243]  $ ...future.FUN:function (a, b)  
[13:33:49.243]  $ ...          :List of 1
[13:33:49.243]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:33:49.243]   .. ..$ a: int [1:2] 1 2
[13:33:49.243]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.243]  - attr(*, "where")=List of 2
[13:33:49.243]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.243]   ..$ ...          :<environment: 0x5620d23c4a20> 
[13:33:49.243]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.243]  - attr(*, "resolved")= logi FALSE
[13:33:49.243]  - attr(*, "total_size")= num 1440
[13:33:49.246] Packages to be attached in all futures: [n=0] 
[13:33:49.246] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.246] Number of futures (= number of chunks): 1
[13:33:49.246] Launching 1 futures (chunks) ...
[13:33:49.246] Chunk #1 of 1 ...
[13:33:49.247]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.249]    + additional globals found: [n=0] 
[13:33:49.249]    + additional namespaces needed: [n=0] 
[13:33:49.249]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.249]  - seeds: <none>
[13:33:49.249]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.266] Created future:
[13:33:49.266] MultisessionFuture:
[13:33:49.266] Label: ‘future_lapply-1’
[13:33:49.266] Expression:
[13:33:49.266] {
[13:33:49.266]     do.call(function(...) {
[13:33:49.266]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.266]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.266]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.266]             on.exit(options(oopts), add = TRUE)
[13:33:49.266]         }
[13:33:49.266]         {
[13:33:49.266]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.266]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.266]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.266]             })
[13:33:49.266]         }
[13:33:49.266]     }, args = future.call.arguments)
[13:33:49.266] }
[13:33:49.266] Lazy evaluation: FALSE
[13:33:49.266] Asynchronous evaluation: TRUE
[13:33:49.266] Local evaluation: TRUE
[13:33:49.266] Environment: R_GlobalEnv
[13:33:49.266] Capture standard output: TRUE
[13:33:49.266] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.266] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.266] Packages: <none>
[13:33:49.266] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.266] Resolved: FALSE
[13:33:49.266] Value: <not collected>
[13:33:49.266] Conditions captured: <none>
[13:33:49.266] Early signaling: FALSE
[13:33:49.266] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.266] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.278] Chunk #1 of 1 ... DONE
[13:33:49.278] Launching 1 futures (chunks) ... DONE
[13:33:49.278] Resolving 1 futures (chunks) ...
[13:33:49.308]  - Number of value chunks collected: 1
[13:33:49.308] Resolving 1 futures (chunks) ... DONE
[13:33:49.308] Reducing values from 1 chunks ...
[13:33:49.308]  - Number of values collected after concatenation: 1
[13:33:49.308]  - Number of values expected: 1
[13:33:49.309] Reducing values from 1 chunks ... DONE
[13:33:49.309] future_lapply() ... DONE
[13:33:49.309] future_lapply() ...
[13:33:49.312] Number of chunks: 1
[13:33:49.312] getGlobalsAndPackagesXApply() ...
[13:33:49.312]  - future.globals: TRUE
[13:33:49.314]  - globals found/used: [n=1] ‘FUN’
[13:33:49.314]  - needed namespaces: [n=0] 
[13:33:49.314] Finding globals ... DONE
[13:33:49.314]  - use_args: TRUE
[13:33:49.314]  - Getting '...' globals ...
[13:33:49.315]    - '...' content: [n=1] ‘b’
[13:33:49.315] List of 1
[13:33:49.315]  $ ...:List of 1
[13:33:49.315]   ..$ b:<environment: 0x5620d11e2218> 
[13:33:49.315]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.315]  - attr(*, "where")=List of 1
[13:33:49.315]   ..$ ...:<environment: 0x5620d11db098> 
[13:33:49.315]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.315]  - attr(*, "resolved")= logi TRUE
[13:33:49.315]  - attr(*, "total_size")= num NA
[13:33:49.317]  - Getting '...' globals ... DONE
[13:33:49.318] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.318] List of 2
[13:33:49.318]  $ ...future.FUN:function (a, b)  
[13:33:49.318]  $ ...          :List of 1
[13:33:49.318]   ..$ b:<environment: 0x5620d11e2218> 
[13:33:49.318]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.318]  - attr(*, "where")=List of 2
[13:33:49.318]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.318]   ..$ ...          :<environment: 0x5620d11db098> 
[13:33:49.318]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.318]  - attr(*, "resolved")= logi FALSE
[13:33:49.318]  - attr(*, "total_size")= num 1440
[13:33:49.321] Packages to be attached in all futures: [n=0] 
[13:33:49.321] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.321] Number of futures (= number of chunks): 1
[13:33:49.321] Launching 1 futures (chunks) ...
[13:33:49.321] Chunk #1 of 1 ...
[13:33:49.321]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.322]    + additional globals found: [n=0] 
[13:33:49.322]    + additional namespaces needed: [n=0] 
[13:33:49.322]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.322]  - seeds: <none>
[13:33:49.322]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.341] Created future:
[13:33:49.341] MultisessionFuture:
[13:33:49.341] Label: ‘future_lapply-1’
[13:33:49.341] Expression:
[13:33:49.341] {
[13:33:49.341]     do.call(function(...) {
[13:33:49.341]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.341]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.341]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.341]             on.exit(options(oopts), add = TRUE)
[13:33:49.341]         }
[13:33:49.341]         {
[13:33:49.341]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.341]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.341]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.341]             })
[13:33:49.341]         }
[13:33:49.341]     }, args = future.call.arguments)
[13:33:49.341] }
[13:33:49.341] Lazy evaluation: FALSE
[13:33:49.341] Asynchronous evaluation: TRUE
[13:33:49.341] Local evaluation: TRUE
[13:33:49.341] Environment: R_GlobalEnv
[13:33:49.341] Capture standard output: TRUE
[13:33:49.341] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.341] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.341] Packages: <none>
[13:33:49.341] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.341] Resolved: FALSE
[13:33:49.341] Value: <not collected>
[13:33:49.341] Conditions captured: <none>
[13:33:49.341] Early signaling: FALSE
[13:33:49.341] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.341] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.353] Chunk #1 of 1 ... DONE
[13:33:49.353] Launching 1 futures (chunks) ... DONE
[13:33:49.353] Resolving 1 futures (chunks) ...
[13:33:49.384]  - Number of value chunks collected: 1
[13:33:49.384] Resolving 1 futures (chunks) ... DONE
[13:33:49.384] Reducing values from 1 chunks ...
[13:33:49.384]  - Number of values collected after concatenation: 1
[13:33:49.385]  - Number of values expected: 1
[13:33:49.385] Reducing values from 1 chunks ... DONE
[13:33:49.385] future_lapply() ... DONE
[13:33:49.385] future_lapply() ...
[13:33:49.388] Number of chunks: 1
[13:33:49.389] getGlobalsAndPackagesXApply() ...
[13:33:49.389]  - future.globals: TRUE
[13:33:49.391]  - globals found/used: [n=1] ‘FUN’
[13:33:49.391]  - needed namespaces: [n=0] 
[13:33:49.391] Finding globals ... DONE
[13:33:49.391]  - use_args: TRUE
[13:33:49.391]  - Getting '...' globals ...
[13:33:49.391]    - '...' content: [n=1] ‘b’
[13:33:49.392] List of 1
[13:33:49.392]  $ ...:List of 1
[13:33:49.392]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:49.392]   .. .. ..@ slots     :List of 4
[13:33:49.392]   .. .. .. ..$ .Data  : chr "function"
[13:33:49.392]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. ..$ target : chr "signature"
[13:33:49.392]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. ..$ defined: chr "signature"
[13:33:49.392]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. ..$ generic: chr "character"
[13:33:49.392]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. ..@ contains  :List of 3
[13:33:49.392]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.392]   .. .. ..@ virtual   : logi FALSE
[13:33:49.392]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:49.392]  list()
[13:33:49.392]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:49.392]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:49.392]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:49.392]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:49.392]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:49.392]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:49.392]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:49.392]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:49.392]   .. .. .. .. ..$ generic: chr(0) 
[13:33:49.392]   .. .. ..@ validity  : NULL
[13:33:49.392]   .. .. ..@ access    : list()
[13:33:49.392]   .. .. ..@ className : chr "MethodDefinition"
[13:33:49.392]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. ..@ subclasses:List of 7
[13:33:49.392]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.392]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.392]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.392]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.392]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.392]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.392]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.392]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.392]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:49.392]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.392]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.392]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.392]   .. .. ..@ versionKey:<externalptr> 
[13:33:49.392]   .. .. ..@ sealed    : logi TRUE
[13:33:49.392]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.392]  - attr(*, "where")=List of 1
[13:33:49.392]   ..$ ...:<environment: 0x5620d10579a8> 
[13:33:49.392]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.392]  - attr(*, "resolved")= logi TRUE
[13:33:49.392]  - attr(*, "total_size")= num NA
[13:33:49.439]  - Getting '...' globals ... DONE
[13:33:49.439] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.439] List of 2
[13:33:49.439]  $ ...future.FUN:function (a, b)  
[13:33:49.439]  $ ...          :List of 1
[13:33:49.439]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:33:49.439]   .. .. ..@ slots     :List of 4
[13:33:49.439]   .. .. .. ..$ .Data  : chr "function"
[13:33:49.439]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. ..$ target : chr "signature"
[13:33:49.439]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. ..$ defined: chr "signature"
[13:33:49.439]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. ..$ generic: chr "character"
[13:33:49.439]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. ..@ contains  :List of 3
[13:33:49.439]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "function"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr "function"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.439]   .. .. ..@ virtual   : logi FALSE
[13:33:49.439]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:33:49.439]  list()
[13:33:49.439]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:33:49.439]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:49.439]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:49.439]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:49.439]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:33:49.439]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:33:49.439]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:33:49.439]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:33:49.439]   .. .. .. .. ..$ generic: chr(0) 
[13:33:49.439]   .. .. ..@ validity  : NULL
[13:33:49.439]   .. .. ..@ access    : list()
[13:33:49.439]   .. .. ..@ className : chr "MethodDefinition"
[13:33:49.439]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. ..@ subclasses:List of 7
[13:33:49.439]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr(0) 
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 1
[13:33:49.439]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.439]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.439]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:33:49.439]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ package   : chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:33:49.439]   .. .. .. .. .. ..@ test      :function (object)  
[13:33:49.439]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:33:49.439]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:33:49.439]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:33:49.439]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:33:49.439]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:33:49.439]   .. .. .. .. .. ..@ distance  : num 2
[13:33:49.439]   .. .. ..@ versionKey:<externalptr> 
[13:33:49.439]   .. .. ..@ sealed    : logi TRUE
[13:33:49.439]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.439]  - attr(*, "where")=List of 2
[13:33:49.439]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.439]   ..$ ...          :<environment: 0x5620d10579a8> 
[13:33:49.439]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.439]  - attr(*, "resolved")= logi FALSE
[13:33:49.439]  - attr(*, "total_size")= num 312512
[13:33:49.486] Packages to be attached in all futures: [n=0] 
[13:33:49.486] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.486] Number of futures (= number of chunks): 1
[13:33:49.486] Launching 1 futures (chunks) ...
[13:33:49.486] Chunk #1 of 1 ...
[13:33:49.486]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.487]    + additional globals found: [n=0] 
[13:33:49.487]    + additional namespaces needed: [n=0] 
[13:33:49.487]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.487]  - seeds: <none>
[13:33:49.487]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.505] Created future:
[13:33:49.505] MultisessionFuture:
[13:33:49.505] Label: ‘future_lapply-1’
[13:33:49.505] Expression:
[13:33:49.505] {
[13:33:49.505]     do.call(function(...) {
[13:33:49.505]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.505]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.505]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.505]             on.exit(options(oopts), add = TRUE)
[13:33:49.505]         }
[13:33:49.505]         {
[13:33:49.505]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.505]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.505]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.505]             })
[13:33:49.505]         }
[13:33:49.505]     }, args = future.call.arguments)
[13:33:49.505] }
[13:33:49.505] Lazy evaluation: FALSE
[13:33:49.505] Asynchronous evaluation: TRUE
[13:33:49.505] Local evaluation: TRUE
[13:33:49.505] Environment: R_GlobalEnv
[13:33:49.505] Capture standard output: TRUE
[13:33:49.505] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.505] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.505] Packages: <none>
[13:33:49.505] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.505] Resolved: FALSE
[13:33:49.505] Value: <not collected>
[13:33:49.505] Conditions captured: <none>
[13:33:49.505] Early signaling: FALSE
[13:33:49.505] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.505] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.517] Chunk #1 of 1 ... DONE
[13:33:49.517] Launching 1 futures (chunks) ... DONE
[13:33:49.517] Resolving 1 futures (chunks) ...
[13:33:49.548]  - Number of value chunks collected: 1
[13:33:49.548] Resolving 1 futures (chunks) ... DONE
[13:33:49.548] Reducing values from 1 chunks ...
[13:33:49.549]  - Number of values collected after concatenation: 1
[13:33:49.549]  - Number of values expected: 1
[13:33:49.549] Reducing values from 1 chunks ... DONE
[13:33:49.549] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:33:49.551] future_lapply() ...
[13:33:49.554] Number of chunks: 2
[13:33:49.555] getGlobalsAndPackagesXApply() ...
[13:33:49.555]  - future.globals: TRUE
[13:33:49.556]  - globals found/used: [n=1] ‘FUN’
[13:33:49.556]  - needed namespaces: [n=0] 
[13:33:49.556] Finding globals ... DONE
[13:33:49.556]  - use_args: TRUE
[13:33:49.556]  - Getting '...' globals ...
[13:33:49.557]    - '...' content: [n=0] 
[13:33:49.557] List of 1
[13:33:49.557]  $ ...: list()
[13:33:49.557]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.557]  - attr(*, "where")=List of 1
[13:33:49.557]   ..$ ...:<environment: 0x5620d063b010> 
[13:33:49.557]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.557]  - attr(*, "resolved")= logi TRUE
[13:33:49.557]  - attr(*, "total_size")= num NA
[13:33:49.559]  - Getting '...' globals ... DONE
[13:33:49.559] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.560] List of 2
[13:33:49.560]  $ ...future.FUN:function (f)  
[13:33:49.560]  $ ...          : list()
[13:33:49.560]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.560]  - attr(*, "where")=List of 2
[13:33:49.560]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.560]   ..$ ...          :<environment: 0x5620d063b010> 
[13:33:49.560]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.560]  - attr(*, "resolved")= logi FALSE
[13:33:49.560]  - attr(*, "total_size")= num 1008
[13:33:49.562] Packages to be attached in all futures: [n=0] 
[13:33:49.562] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.562] Number of futures (= number of chunks): 2
[13:33:49.563] Launching 2 futures (chunks) ...
[13:33:49.563] Chunk #1 of 2 ...
[13:33:49.563]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.564]    + additional globals found: [n=2] ‘a’, ‘b’
[13:33:49.564]    + additional namespaces needed: [n=0] 
[13:33:49.565]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.565]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:49.565]  - seeds: <none>
[13:33:49.565]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:33:49.581] Created future:
[13:33:49.581] MultisessionFuture:
[13:33:49.581] Label: ‘future_lapply-1’
[13:33:49.581] Expression:
[13:33:49.581] {
[13:33:49.581]     do.call(function(...) {
[13:33:49.581]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.581]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.581]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.581]             on.exit(options(oopts), add = TRUE)
[13:33:49.581]         }
[13:33:49.581]         {
[13:33:49.581]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.581]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.581]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.581]             })
[13:33:49.581]         }
[13:33:49.581]     }, args = future.call.arguments)
[13:33:49.581] }
[13:33:49.581] Lazy evaluation: FALSE
[13:33:49.581] Asynchronous evaluation: TRUE
[13:33:49.581] Local evaluation: TRUE
[13:33:49.581] Environment: R_GlobalEnv
[13:33:49.581] Capture standard output: TRUE
[13:33:49.581] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.581] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:33:49.581] Packages: <none>
[13:33:49.581] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.581] Resolved: FALSE
[13:33:49.581] Value: <not collected>
[13:33:49.581] Conditions captured: <none>
[13:33:49.581] Early signaling: FALSE
[13:33:49.581] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.581] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.593] Chunk #1 of 2 ... DONE
[13:33:49.593] Chunk #2 of 2 ...
[13:33:49.593]  - Finding globals in 'X' for chunk #2 ...
[13:33:49.595]    + additional globals found: [n=2] ‘a’, ‘b’
[13:33:49.595]    + additional namespaces needed: [n=1] ‘tools’
[13:33:49.595]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:49.595]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:49.595]  - seeds: <none>
[13:33:49.596]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:33:49.613] Created future:
[13:33:49.613] MultisessionFuture:
[13:33:49.613] Label: ‘future_lapply-2’
[13:33:49.613] Expression:
[13:33:49.613] {
[13:33:49.613]     do.call(function(...) {
[13:33:49.613]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.613]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.613]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.613]             on.exit(options(oopts), add = TRUE)
[13:33:49.613]         }
[13:33:49.613]         {
[13:33:49.613]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.613]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.613]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.613]             })
[13:33:49.613]         }
[13:33:49.613]     }, args = future.call.arguments)
[13:33:49.613] }
[13:33:49.613] Lazy evaluation: FALSE
[13:33:49.613] Asynchronous evaluation: TRUE
[13:33:49.613] Local evaluation: TRUE
[13:33:49.613] Environment: R_GlobalEnv
[13:33:49.613] Capture standard output: TRUE
[13:33:49.613] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.613] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:33:49.613] Packages: 1 packages (‘tools’)
[13:33:49.613] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.613] Resolved: FALSE
[13:33:49.613] Value: <not collected>
[13:33:49.613] Conditions captured: <none>
[13:33:49.613] Early signaling: FALSE
[13:33:49.613] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.613] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.624] Chunk #2 of 2 ... DONE
[13:33:49.624] Launching 2 futures (chunks) ... DONE
[13:33:49.624] Resolving 2 futures (chunks) ...
[13:33:49.659]  - Number of value chunks collected: 2
[13:33:49.660] Resolving 2 futures (chunks) ... DONE
[13:33:49.660] Reducing values from 2 chunks ...
[13:33:49.660]  - Number of values collected after concatenation: 4
[13:33:49.660]  - Number of values expected: 4
[13:33:49.660] Reducing values from 2 chunks ... DONE
[13:33:49.660] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:33:49.663] future_lapply() ...
[13:33:49.666] Number of chunks: 1
[13:33:49.666] getGlobalsAndPackagesXApply() ...
[13:33:49.666]  - future.globals: TRUE
[13:33:49.668]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:33:49.669]  - needed namespaces: [n=0] 
[13:33:49.669] Finding globals ... DONE
[13:33:49.669]  - use_args: TRUE
[13:33:49.669]  - Getting '...' globals ...
[13:33:49.669]    - '...' content: [n=0] 
[13:33:49.669] List of 1
[13:33:49.669]  $ ...: list()
[13:33:49.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.669]  - attr(*, "where")=List of 1
[13:33:49.669]   ..$ ...:<environment: 0x5620d14f0da8> 
[13:33:49.669]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.669]  - attr(*, "resolved")= logi TRUE
[13:33:49.669]  - attr(*, "total_size")= num NA
[13:33:49.672]  - Getting '...' globals ... DONE
[13:33:49.672] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:33:49.672] List of 3
[13:33:49.672]  $ ...future.FUN        :function (x)  
[13:33:49.672]  $ future.call.arguments:List of 1
[13:33:49.672]   ..$ a: num 1
[13:33:49.672]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.672]  $ ...                  : list()
[13:33:49.672]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.672]  - attr(*, "where")=List of 3
[13:33:49.672]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:33:49.672]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:33:49.672]   ..$ ...                  :<environment: 0x5620d14f0da8> 
[13:33:49.672]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.672]  - attr(*, "resolved")= logi FALSE
[13:33:49.672]  - attr(*, "total_size")= num 1272
[13:33:49.676] Packages to be attached in all futures: [n=0] 
[13:33:49.676] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.676] Number of futures (= number of chunks): 1
[13:33:49.676] Launching 1 futures (chunks) ...
[13:33:49.676] Chunk #1 of 1 ...
[13:33:49.676]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.676]    + additional globals found: [n=0] 
[13:33:49.677]    + additional namespaces needed: [n=0] 
[13:33:49.677]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.677]  - seeds: <none>
[13:33:49.677]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.695] Created future:
[13:33:49.695] MultisessionFuture:
[13:33:49.695] Label: ‘future_lapply-1’
[13:33:49.695] Expression:
[13:33:49.695] {
[13:33:49.695]     do.call(function(...) {
[13:33:49.695]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.695]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.695]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.695]             on.exit(options(oopts), add = TRUE)
[13:33:49.695]         }
[13:33:49.695]         {
[13:33:49.695]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.695]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.695]                 ...future.FUN(...future.X_jj)
[13:33:49.695]             })
[13:33:49.695]         }
[13:33:49.695]     }, args = future.call.arguments)
[13:33:49.695] }
[13:33:49.695] Lazy evaluation: FALSE
[13:33:49.695] Asynchronous evaluation: TRUE
[13:33:49.695] Local evaluation: TRUE
[13:33:49.695] Environment: 0x5620d14f0a28
[13:33:49.695] Capture standard output: TRUE
[13:33:49.695] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.695] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:49.695] Packages: <none>
[13:33:49.695] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.695] Resolved: FALSE
[13:33:49.695] Value: <not collected>
[13:33:49.695] Conditions captured: <none>
[13:33:49.695] Early signaling: FALSE
[13:33:49.695] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.695] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.707] Chunk #1 of 1 ... DONE
[13:33:49.707] Launching 1 futures (chunks) ... DONE
[13:33:49.707] Resolving 1 futures (chunks) ...
[13:33:49.749]  - Number of value chunks collected: 1
[13:33:49.749] Resolving 1 futures (chunks) ... DONE
[13:33:49.750] Reducing values from 1 chunks ...
[13:33:49.750]  - Number of values collected after concatenation: 1
[13:33:49.750]  - Number of values expected: 1
[13:33:49.750] Reducing values from 1 chunks ... DONE
[13:33:49.750] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:33:49.751] future_lapply() ...
[13:33:49.755] Number of chunks: 1
[13:33:49.755] getGlobalsAndPackagesXApply() ...
[13:33:49.755]  - future.globals: TRUE
[13:33:49.758]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:49.758]  - needed namespaces: [n=0] 
[13:33:49.758] Finding globals ... DONE
[13:33:49.758]  - use_args: TRUE
[13:33:49.758]  - Getting '...' globals ...
[13:33:49.758]    - '...' content: [n=0] 
[13:33:49.758] List of 1
[13:33:49.758]  $ ...: list()
[13:33:49.758]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.758]  - attr(*, "where")=List of 1
[13:33:49.758]   ..$ ...:<environment: 0x5620d10535b8> 
[13:33:49.758]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.758]  - attr(*, "resolved")= logi TRUE
[13:33:49.758]  - attr(*, "total_size")= num NA
[13:33:49.761]  - Getting '...' globals ... DONE
[13:33:49.761] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:49.761] List of 3
[13:33:49.761]  $ ...future.FUN:function (ii)  
[13:33:49.761]  $ a            : num 1
[13:33:49.761]  $ ...          : list()
[13:33:49.761]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.761]  - attr(*, "where")=List of 3
[13:33:49.761]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.761]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:49.761]   ..$ ...          :<environment: 0x5620d10535b8> 
[13:33:49.761]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.761]  - attr(*, "resolved")= logi FALSE
[13:33:49.761]  - attr(*, "total_size")= num 2984
[13:33:49.764] Packages to be attached in all futures: [n=0] 
[13:33:49.764] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.764] Number of futures (= number of chunks): 1
[13:33:49.765] Launching 1 futures (chunks) ...
[13:33:49.765] Chunk #1 of 1 ...
[13:33:49.765]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.765]    + additional globals found: [n=0] 
[13:33:49.765]    + additional namespaces needed: [n=0] 
[13:33:49.765]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.765]  - seeds: <none>
[13:33:49.765]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.782] Created future:
[13:33:49.784] MultisessionFuture:
[13:33:49.784] Label: ‘future_lapply-1’
[13:33:49.784] Expression:
[13:33:49.784] {
[13:33:49.784]     do.call(function(...) {
[13:33:49.784]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.784]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.784]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.784]             on.exit(options(oopts), add = TRUE)
[13:33:49.784]         }
[13:33:49.784]         {
[13:33:49.784]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.784]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.784]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.784]             })
[13:33:49.784]         }
[13:33:49.784]     }, args = future.call.arguments)
[13:33:49.784] }
[13:33:49.784] Lazy evaluation: FALSE
[13:33:49.784] Asynchronous evaluation: TRUE
[13:33:49.784] Local evaluation: TRUE
[13:33:49.784] Environment: R_GlobalEnv
[13:33:49.784] Capture standard output: TRUE
[13:33:49.784] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.784] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:49.784] Packages: <none>
[13:33:49.784] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.784] Resolved: FALSE
[13:33:49.784] Value: <not collected>
[13:33:49.784] Conditions captured: <none>
[13:33:49.784] Early signaling: FALSE
[13:33:49.784] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.784] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.796] Chunk #1 of 1 ... DONE
[13:33:49.796] Launching 1 futures (chunks) ... DONE
[13:33:49.796] Resolving 1 futures (chunks) ...
[13:33:49.824]  - Number of value chunks collected: 1
[13:33:49.824] Resolving 1 futures (chunks) ... DONE
[13:33:49.825] Reducing values from 1 chunks ...
[13:33:49.825]  - Number of values collected after concatenation: 1
[13:33:49.825]  - Number of values expected: 1
[13:33:49.825] Reducing values from 1 chunks ... DONE
[13:33:49.825] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:33:49.825] future_lapply() ...
[13:33:49.829] Number of chunks: 1
[13:33:49.829] getGlobalsAndPackagesXApply() ...
[13:33:49.829]  - future.globals: TRUE
[13:33:49.831]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:33:49.831]  - needed namespaces: [n=0] 
[13:33:49.831] Finding globals ... DONE
[13:33:49.831]  - use_args: TRUE
[13:33:49.832]  - Getting '...' globals ...
[13:33:49.832]    - '...' content: [n=0] 
[13:33:49.832] List of 1
[13:33:49.832]  $ ...: list()
[13:33:49.832]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.832]  - attr(*, "where")=List of 1
[13:33:49.832]   ..$ ...:<environment: 0x5620d173ada8> 
[13:33:49.832]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.832]  - attr(*, "resolved")= logi TRUE
[13:33:49.832]  - attr(*, "total_size")= num NA
[13:33:49.834]  - Getting '...' globals ... DONE
[13:33:49.835] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:33:49.835] List of 3
[13:33:49.835]  $ ...future.FUN:function (ii)  
[13:33:49.835]  $ a            : num 1
[13:33:49.835]  $ ...          : list()
[13:33:49.835]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.835]  - attr(*, "where")=List of 3
[13:33:49.835]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.835]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:49.835]   ..$ ...          :<environment: 0x5620d173ada8> 
[13:33:49.835]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.835]  - attr(*, "resolved")= logi FALSE
[13:33:49.835]  - attr(*, "total_size")= num 2984
[13:33:49.838] Packages to be attached in all futures: [n=0] 
[13:33:49.838] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.838] Number of futures (= number of chunks): 1
[13:33:49.838] Launching 1 futures (chunks) ...
[13:33:49.838] Chunk #1 of 1 ...
[13:33:49.838]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.839]    + additional globals found: [n=0] 
[13:33:49.839]    + additional namespaces needed: [n=0] 
[13:33:49.839]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.839]  - seeds: <none>
[13:33:49.839]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.857] Created future:
[13:33:49.857] MultisessionFuture:
[13:33:49.857] Label: ‘future_lapply-1’
[13:33:49.857] Expression:
[13:33:49.857] {
[13:33:49.857]     do.call(function(...) {
[13:33:49.857]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.857]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.857]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.857]             on.exit(options(oopts), add = TRUE)
[13:33:49.857]         }
[13:33:49.857]         {
[13:33:49.857]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.857]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.857]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.857]             })
[13:33:49.857]         }
[13:33:49.857]     }, args = future.call.arguments)
[13:33:49.857] }
[13:33:49.857] Lazy evaluation: FALSE
[13:33:49.857] Asynchronous evaluation: TRUE
[13:33:49.857] Local evaluation: TRUE
[13:33:49.857] Environment: R_GlobalEnv
[13:33:49.857] Capture standard output: TRUE
[13:33:49.857] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.857] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:49.857] Packages: <none>
[13:33:49.857] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.857] Resolved: FALSE
[13:33:49.857] Value: <not collected>
[13:33:49.857] Conditions captured: <none>
[13:33:49.857] Early signaling: FALSE
[13:33:49.857] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.857] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.869] Chunk #1 of 1 ... DONE
[13:33:49.869] Launching 1 futures (chunks) ... DONE
[13:33:49.869] Resolving 1 futures (chunks) ...
[13:33:49.900]  - Number of value chunks collected: 1
[13:33:49.900] Resolving 1 futures (chunks) ... DONE
[13:33:49.900] Reducing values from 1 chunks ...
[13:33:49.901]  - Number of values collected after concatenation: 1
[13:33:49.901]  - Number of values expected: 1
[13:33:49.901] Reducing values from 1 chunks ... DONE
[13:33:49.901] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:33:49.901] future_lapply() ...
[13:33:49.905] Number of chunks: 1
[13:33:49.905] getGlobalsAndPackagesXApply() ...
[13:33:49.905]  - future.globals: <name-value list> with names ‘42’
[13:33:49.905]  - use_args: TRUE
[13:33:49.905]  - Getting '...' globals ...
[13:33:49.905]    - '...' content: [n=0] 
[13:33:49.906] List of 1
[13:33:49.906]  $ ...: list()
[13:33:49.906]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.906]  - attr(*, "where")=List of 1
[13:33:49.906]   ..$ ...:<environment: 0x5620d23a03d0> 
[13:33:49.906]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.906]  - attr(*, "resolved")= logi TRUE
[13:33:49.906]  - attr(*, "total_size")= num NA
[13:33:49.908]  - Getting '...' globals ... DONE
[13:33:49.908] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:33:49.908] List of 3
[13:33:49.908]  $ a            : num 42
[13:33:49.908]  $ ...future.FUN:function (x)  
[13:33:49.908]  $ ...          : list()
[13:33:49.908]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.908]  - attr(*, "where")=List of 3
[13:33:49.908]   ..$ a            :<environment: R_EmptyEnv> 
[13:33:49.908]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:33:49.908]   ..$ ...          :<environment: 0x5620d23a03d0> 
[13:33:49.908]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.908]  - attr(*, "resolved")= logi FALSE
[13:33:49.908]  - attr(*, "total_size")= num NA
[13:33:49.911] Packages to be attached in all futures: [n=0] 
[13:33:49.911] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.912] Number of futures (= number of chunks): 1
[13:33:49.912] Launching 1 futures (chunks) ...
[13:33:49.912] Chunk #1 of 1 ...
[13:33:49.912]  - seeds: <none>
[13:33:49.912]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:49.929] Created future:
[13:33:49.929] MultisessionFuture:
[13:33:49.929] Label: ‘future_lapply-1’
[13:33:49.929] Expression:
[13:33:49.929] {
[13:33:49.929]     do.call(function(...) {
[13:33:49.929]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:49.929]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:49.929]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:49.929]             on.exit(options(oopts), add = TRUE)
[13:33:49.929]         }
[13:33:49.929]         {
[13:33:49.929]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:49.929]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:49.929]                 ...future.FUN(...future.X_jj, ...)
[13:33:49.929]             })
[13:33:49.929]         }
[13:33:49.929]     }, args = future.call.arguments)
[13:33:49.929] }
[13:33:49.929] Lazy evaluation: FALSE
[13:33:49.929] Asynchronous evaluation: TRUE
[13:33:49.929] Local evaluation: TRUE
[13:33:49.929] Environment: R_GlobalEnv
[13:33:49.929] Capture standard output: TRUE
[13:33:49.929] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:49.929] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:33:49.929] Packages: <none>
[13:33:49.929] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:49.929] Resolved: FALSE
[13:33:49.929] Value: <not collected>
[13:33:49.929] Conditions captured: <none>
[13:33:49.929] Early signaling: FALSE
[13:33:49.929] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:49.929] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:49.940] Chunk #1 of 1 ... DONE
[13:33:49.941] Launching 1 futures (chunks) ... DONE
[13:33:49.941] Resolving 1 futures (chunks) ...
[13:33:49.972]  - Number of value chunks collected: 1
[13:33:49.972] Resolving 1 futures (chunks) ... DONE
[13:33:49.972] Reducing values from 1 chunks ...
[13:33:49.972]  - Number of values collected after concatenation: 1
[13:33:49.972]  - Number of values expected: 1
[13:33:49.973] Reducing values from 1 chunks ... DONE
[13:33:49.973] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[13:33:49.973] future_lapply() ...
[13:33:49.977] Number of chunks: 2
[13:33:49.977] getGlobalsAndPackagesXApply() ...
[13:33:49.977]  - future.globals: TRUE
[13:33:49.981]  - globals found/used: [n=1] ‘FUN’
[13:33:49.981]  - needed namespaces: [n=0] 
[13:33:49.981] Finding globals ... DONE
[13:33:49.981]  - use_args: TRUE
[13:33:49.981]  - Getting '...' globals ...
[13:33:49.982]    - '...' content: [n=0] 
[13:33:49.982] List of 1
[13:33:49.982]  $ ...: list()
[13:33:49.982]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.982]  - attr(*, "where")=List of 1
[13:33:49.982]   ..$ ...:<environment: 0x5620d2063d18> 
[13:33:49.982]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.982]  - attr(*, "resolved")= logi TRUE
[13:33:49.982]  - attr(*, "total_size")= num NA
[13:33:49.984]  - Getting '...' globals ... DONE
[13:33:49.985] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:49.985] List of 2
[13:33:49.985]  $ ...future.FUN:function (y)  
[13:33:49.985]  $ ...          : list()
[13:33:49.985]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:49.985]  - attr(*, "where")=List of 2
[13:33:49.985]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:49.985]   ..$ ...          :<environment: 0x5620d2063d18> 
[13:33:49.985]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:49.985]  - attr(*, "resolved")= logi FALSE
[13:33:49.985]  - attr(*, "total_size")= num 280
[13:33:49.987] Packages to be attached in all futures: [n=0] 
[13:33:49.987] getGlobalsAndPackagesXApply() ... DONE
[13:33:49.987] Number of futures (= number of chunks): 2
[13:33:49.988] Launching 2 futures (chunks) ...
[13:33:49.988] Chunk #1 of 2 ...
[13:33:49.988]  - Finding globals in 'X' for chunk #1 ...
[13:33:49.988]    + additional globals found: [n=0] 
[13:33:49.988]    + additional namespaces needed: [n=0] 
[13:33:49.988]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:49.988]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:49.988]  - seeds: <none>
[13:33:49.989]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.005] Created future:
[13:33:50.005] MultisessionFuture:
[13:33:50.005] Label: ‘future_lapply-1’
[13:33:50.005] Expression:
[13:33:50.005] {
[13:33:50.005]     do.call(function(...) {
[13:33:50.005]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.005]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.005]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.005]             on.exit(options(oopts), add = TRUE)
[13:33:50.005]         }
[13:33:50.005]         {
[13:33:50.005]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.005]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.005]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.005]             })
[13:33:50.005]         }
[13:33:50.005]     }, args = future.call.arguments)
[13:33:50.005] }
[13:33:50.005] Lazy evaluation: FALSE
[13:33:50.005] Asynchronous evaluation: TRUE
[13:33:50.005] Local evaluation: TRUE
[13:33:50.005] Environment: 0x5620d2064108
[13:33:50.005] Capture standard output: TRUE
[13:33:50.005] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.005] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.005] Packages: <none>
[13:33:50.005] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.005] Resolved: FALSE
[13:33:50.005] Value: <not collected>
[13:33:50.005] Conditions captured: <none>
[13:33:50.005] Early signaling: FALSE
[13:33:50.005] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.005] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.016] Chunk #1 of 2 ... DONE
[13:33:50.017] Chunk #2 of 2 ...
[13:33:50.017]  - Finding globals in 'X' for chunk #2 ...
[13:33:50.017]    + additional globals found: [n=0] 
[13:33:50.017]    + additional namespaces needed: [n=0] 
[13:33:50.017]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:50.017]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:50.017]  - seeds: <none>
[13:33:50.018]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.035] Created future:
[13:33:50.036] MultisessionFuture:
[13:33:50.036] Label: ‘future_lapply-2’
[13:33:50.036] Expression:
[13:33:50.036] {
[13:33:50.036]     do.call(function(...) {
[13:33:50.036]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.036]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.036]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.036]             on.exit(options(oopts), add = TRUE)
[13:33:50.036]         }
[13:33:50.036]         {
[13:33:50.036]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.036]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.036]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.036]             })
[13:33:50.036]         }
[13:33:50.036]     }, args = future.call.arguments)
[13:33:50.036] }
[13:33:50.036] Lazy evaluation: FALSE
[13:33:50.036] Asynchronous evaluation: TRUE
[13:33:50.036] Local evaluation: TRUE
[13:33:50.036] Environment: 0x5620d2064108
[13:33:50.036] Capture standard output: TRUE
[13:33:50.036] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.036] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.036] Packages: <none>
[13:33:50.036] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.036] Resolved: FALSE
[13:33:50.036] Value: <not collected>
[13:33:50.036] Conditions captured: <none>
[13:33:50.036] Early signaling: FALSE
[13:33:50.036] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.036] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.047] Chunk #2 of 2 ... DONE
[13:33:50.047] Launching 2 futures (chunks) ... DONE
[13:33:50.048] Resolving 2 futures (chunks) ...
[13:33:50.091]  - Number of value chunks collected: 2
[13:33:50.091] Resolving 2 futures (chunks) ... DONE
[13:33:50.091] Reducing values from 2 chunks ...
[13:33:50.091]  - Number of values collected after concatenation: 2
[13:33:50.091]  - Number of values expected: 2
[13:33:50.091] Reducing values from 2 chunks ... DONE
[13:33:50.091] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[13:33:50.092] future_lapply() ...
[13:33:50.096] Number of chunks: 2
[13:33:50.096] getGlobalsAndPackagesXApply() ...
[13:33:50.096]  - future.globals: TRUE
[13:33:50.097]  - globals found/used: [n=1] ‘FUN’
[13:33:50.097]  - needed namespaces: [n=0] 
[13:33:50.097] Finding globals ... DONE
[13:33:50.097]  - use_args: TRUE
[13:33:50.098]  - Getting '...' globals ...
[13:33:50.098]    - '...' content: [n=0] 
[13:33:50.098] List of 1
[13:33:50.098]  $ ...: list()
[13:33:50.098]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.098]  - attr(*, "where")=List of 1
[13:33:50.098]   ..$ ...:<environment: 0x5620d2327cf8> 
[13:33:50.098]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.098]  - attr(*, "resolved")= logi TRUE
[13:33:50.098]  - attr(*, "total_size")= num NA
[13:33:50.100]  - Getting '...' globals ... DONE
[13:33:50.101] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:50.101] List of 2
[13:33:50.101]  $ ...future.FUN:function (y)  
[13:33:50.101]  $ ...          : list()
[13:33:50.101]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.101]  - attr(*, "where")=List of 2
[13:33:50.101]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:50.101]   ..$ ...          :<environment: 0x5620d2327cf8> 
[13:33:50.101]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.101]  - attr(*, "resolved")= logi FALSE
[13:33:50.101]  - attr(*, "total_size")= num 280
[13:33:50.103] Packages to be attached in all futures: [n=0] 
[13:33:50.103] getGlobalsAndPackagesXApply() ... DONE
[13:33:50.104] Number of futures (= number of chunks): 2
[13:33:50.104] Launching 2 futures (chunks) ...
[13:33:50.104] Chunk #1 of 2 ...
[13:33:50.104]  - Finding globals in 'X' for chunk #1 ...
[13:33:50.104]    + additional globals found: [n=0] 
[13:33:50.104]    + additional namespaces needed: [n=0] 
[13:33:50.104]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:50.104]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:50.105]  - seeds: <none>
[13:33:50.105]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.121] Created future:
[13:33:50.121] MultisessionFuture:
[13:33:50.121] Label: ‘future_lapply-1’
[13:33:50.121] Expression:
[13:33:50.121] {
[13:33:50.121]     do.call(function(...) {
[13:33:50.121]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.121]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.121]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.121]             on.exit(options(oopts), add = TRUE)
[13:33:50.121]         }
[13:33:50.121]         {
[13:33:50.121]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.121]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.121]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.121]             })
[13:33:50.121]         }
[13:33:50.121]     }, args = future.call.arguments)
[13:33:50.121] }
[13:33:50.121] Lazy evaluation: FALSE
[13:33:50.121] Asynchronous evaluation: TRUE
[13:33:50.121] Local evaluation: TRUE
[13:33:50.121] Environment: 0x5620d2328158
[13:33:50.121] Capture standard output: TRUE
[13:33:50.121] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.121] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.121] Packages: <none>
[13:33:50.121] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.121] Resolved: FALSE
[13:33:50.121] Value: <not collected>
[13:33:50.121] Conditions captured: <none>
[13:33:50.121] Early signaling: FALSE
[13:33:50.121] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.121] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.133] Chunk #1 of 2 ... DONE
[13:33:50.133] Chunk #2 of 2 ...
[13:33:50.133]  - Finding globals in 'X' for chunk #2 ...
[13:33:50.133]    + additional globals found: [n=0] 
[13:33:50.133]    + additional namespaces needed: [n=0] 
[13:33:50.134]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:50.134]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:50.134]  - seeds: <none>
[13:33:50.134]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.156] Created future:
[13:33:50.156] MultisessionFuture:
[13:33:50.156] Label: ‘future_lapply-2’
[13:33:50.156] Expression:
[13:33:50.156] {
[13:33:50.156]     do.call(function(...) {
[13:33:50.156]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.156]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.156]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.156]             on.exit(options(oopts), add = TRUE)
[13:33:50.156]         }
[13:33:50.156]         {
[13:33:50.156]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.156]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.156]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.156]             })
[13:33:50.156]         }
[13:33:50.156]     }, args = future.call.arguments)
[13:33:50.156] }
[13:33:50.156] Lazy evaluation: FALSE
[13:33:50.156] Asynchronous evaluation: TRUE
[13:33:50.156] Local evaluation: TRUE
[13:33:50.156] Environment: 0x5620d2328158
[13:33:50.156] Capture standard output: TRUE
[13:33:50.156] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.156] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.156] Packages: <none>
[13:33:50.156] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.156] Resolved: FALSE
[13:33:50.156] Value: <not collected>
[13:33:50.156] Conditions captured: <none>
[13:33:50.156] Early signaling: FALSE
[13:33:50.156] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.156] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.168] Chunk #2 of 2 ... DONE
[13:33:50.168] Launching 2 futures (chunks) ... DONE
[13:33:50.168] Resolving 2 futures (chunks) ...
[13:33:50.211]  - Number of value chunks collected: 2
[13:33:50.211] Resolving 2 futures (chunks) ... DONE
[13:33:50.211] Reducing values from 2 chunks ...
[13:33:50.211]  - Number of values collected after concatenation: 2
[13:33:50.211]  - Number of values expected: 2
[13:33:50.211] Reducing values from 2 chunks ... DONE
[13:33:50.211] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[13:33:50.214] future_lapply() ...
[13:33:50.218] Number of chunks: 2
[13:33:50.218] getGlobalsAndPackagesXApply() ...
[13:33:50.218]  - future.globals: TRUE
[13:33:50.219] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[13:33:50.220] future_lapply() ...
[13:33:50.223] Number of chunks: 2
[13:33:50.223] getGlobalsAndPackagesXApply() ...
[13:33:50.223]  - future.globals: TRUE
[13:33:50.225]  - globals found/used: [n=1] ‘FUN’
[13:33:50.225]  - needed namespaces: [n=0] 
[13:33:50.225] Finding globals ... DONE
[13:33:50.225]  - use_args: TRUE
[13:33:50.225]  - Getting '...' globals ...
[13:33:50.225]    - '...' content: [n=0] 
[13:33:50.226] List of 1
[13:33:50.226]  $ ...: list()
[13:33:50.226]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.226]  - attr(*, "where")=List of 1
[13:33:50.226]   ..$ ...:<environment: 0x5620d0e19a50> 
[13:33:50.226]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.226]  - attr(*, "resolved")= logi TRUE
[13:33:50.226]  - attr(*, "total_size")= num NA
[13:33:50.228]  - Getting '...' globals ... DONE
[13:33:50.228] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:50.228] List of 2
[13:33:50.228]  $ ...future.FUN:function (x)  
[13:33:50.228]  $ ...          : list()
[13:33:50.228]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.228]  - attr(*, "where")=List of 2
[13:33:50.228]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:50.228]   ..$ ...          :<environment: 0x5620d0e19a50> 
[13:33:50.228]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.228]  - attr(*, "resolved")= logi FALSE
[13:33:50.228]  - attr(*, "total_size")= num 1840
[13:33:50.231] Packages to be attached in all futures: [n=0] 
[13:33:50.231] getGlobalsAndPackagesXApply() ... DONE
[13:33:50.231] Number of futures (= number of chunks): 2
[13:33:50.231] Launching 2 futures (chunks) ...
[13:33:50.231] Chunk #1 of 2 ...
[13:33:50.232]  - Finding globals in 'X' for chunk #1 ...
[13:33:50.232]    + additional globals found: [n=0] 
[13:33:50.232]    + additional namespaces needed: [n=0] 
[13:33:50.232]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:50.232]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:50.232]  - seeds: <none>
[13:33:50.232]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.249] Created future:
[13:33:50.250] MultisessionFuture:
[13:33:50.250] Label: ‘future_lapply-1’
[13:33:50.250] Expression:
[13:33:50.250] {
[13:33:50.250]     do.call(function(...) {
[13:33:50.250]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.250]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.250]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.250]             on.exit(options(oopts), add = TRUE)
[13:33:50.250]         }
[13:33:50.250]         {
[13:33:50.250]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.250]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.250]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.250]             })
[13:33:50.250]         }
[13:33:50.250]     }, args = future.call.arguments)
[13:33:50.250] }
[13:33:50.250] Lazy evaluation: FALSE
[13:33:50.250] Asynchronous evaluation: TRUE
[13:33:50.250] Local evaluation: TRUE
[13:33:50.250] Environment: R_GlobalEnv
[13:33:50.250] Capture standard output: TRUE
[13:33:50.250] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.250] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.250] Packages: <none>
[13:33:50.250] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.250] Resolved: FALSE
[13:33:50.250] Value: <not collected>
[13:33:50.250] Conditions captured: <none>
[13:33:50.250] Early signaling: FALSE
[13:33:50.250] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.250] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.261] Chunk #1 of 2 ... DONE
[13:33:50.261] Chunk #2 of 2 ...
[13:33:50.261]  - Finding globals in 'X' for chunk #2 ...
[13:33:50.262]    + additional globals found: [n=0] 
[13:33:50.262]    + additional namespaces needed: [n=0] 
[13:33:50.262]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:50.262]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:33:50.262]  - seeds: <none>
[13:33:50.262]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.278] Created future:
[13:33:50.279] MultisessionFuture:
[13:33:50.279] Label: ‘future_lapply-2’
[13:33:50.279] Expression:
[13:33:50.279] {
[13:33:50.279]     do.call(function(...) {
[13:33:50.279]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.279]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.279]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.279]             on.exit(options(oopts), add = TRUE)
[13:33:50.279]         }
[13:33:50.279]         {
[13:33:50.279]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.279]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.279]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.279]             })
[13:33:50.279]         }
[13:33:50.279]     }, args = future.call.arguments)
[13:33:50.279] }
[13:33:50.279] Lazy evaluation: FALSE
[13:33:50.279] Asynchronous evaluation: TRUE
[13:33:50.279] Local evaluation: TRUE
[13:33:50.279] Environment: R_GlobalEnv
[13:33:50.279] Capture standard output: TRUE
[13:33:50.279] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.279] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:33:50.279] Packages: <none>
[13:33:50.279] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.279] Resolved: FALSE
[13:33:50.279] Value: <not collected>
[13:33:50.279] Conditions captured: <none>
[13:33:50.279] Early signaling: FALSE
[13:33:50.279] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.279] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.290] Chunk #2 of 2 ... DONE
[13:33:50.290] Launching 2 futures (chunks) ... DONE
[13:33:50.291] Resolving 2 futures (chunks) ...
[13:33:50.335]  - Number of value chunks collected: 2
[13:33:50.335] Resolving 2 futures (chunks) ... DONE
[13:33:50.335] Reducing values from 2 chunks ...
[13:33:50.335]  - Number of values collected after concatenation: 10
[13:33:50.335]  - Number of values expected: 10
[13:33:50.335] Reducing values from 2 chunks ... DONE
[13:33:50.335] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[13:33:50.344] future_lapply() ...
[13:33:50.348] Number of chunks: 10
[13:33:50.349] getGlobalsAndPackagesXApply() ...
[13:33:50.349]  - future.globals: TRUE
[13:33:50.350]  - globals found/used: [n=1] ‘FUN’
[13:33:50.350]  - needed namespaces: [n=0] 
[13:33:50.351] Finding globals ... DONE
[13:33:50.351]  - use_args: TRUE
[13:33:50.351]  - Getting '...' globals ...
[13:33:50.351]    - '...' content: [n=0] 
[13:33:50.351] List of 1
[13:33:50.351]  $ ...: list()
[13:33:50.351]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.351]  - attr(*, "where")=List of 1
[13:33:50.351]   ..$ ...:<environment: 0x5620d1655fd0> 
[13:33:50.351]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.351]  - attr(*, "resolved")= logi TRUE
[13:33:50.351]  - attr(*, "total_size")= num NA
[13:33:50.353]  - Getting '...' globals ... DONE
[13:33:50.354] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:50.354] List of 2
[13:33:50.354]  $ ...future.FUN:function (x)  
[13:33:50.354]  $ ...          : list()
[13:33:50.354]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.354]  - attr(*, "where")=List of 2
[13:33:50.354]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:50.354]   ..$ ...          :<environment: 0x5620d1655fd0> 
[13:33:50.354]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.354]  - attr(*, "resolved")= logi FALSE
[13:33:50.354]  - attr(*, "total_size")= num 1840
[13:33:50.356] Packages to be attached in all futures: [n=0] 
[13:33:50.356] getGlobalsAndPackagesXApply() ... DONE
[13:33:50.357] Number of futures (= number of chunks): 10
[13:33:50.357] Launching 10 futures (chunks) ...
[13:33:50.357] Chunk #1 of 10 ...
[13:33:50.357]  - Finding globals in 'X' for chunk #1 ...
[13:33:50.357]    + additional globals found: [n=0] 
[13:33:50.357]    + additional namespaces needed: [n=0] 
[13:33:50.357]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:50.358]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.358]  - seeds: <none>
[13:33:50.358]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.376] Created future:
[13:33:50.376] MultisessionFuture:
[13:33:50.376] Label: ‘future_lapply-1’
[13:33:50.376] Expression:
[13:33:50.376] {
[13:33:50.376]     do.call(function(...) {
[13:33:50.376]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.376]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.376]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.376]             on.exit(options(oopts), add = TRUE)
[13:33:50.376]         }
[13:33:50.376]         {
[13:33:50.376]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.376]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.376]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.376]             })
[13:33:50.376]         }
[13:33:50.376]     }, args = future.call.arguments)
[13:33:50.376] }
[13:33:50.376] Lazy evaluation: FALSE
[13:33:50.376] Asynchronous evaluation: TRUE
[13:33:50.376] Local evaluation: TRUE
[13:33:50.376] Environment: R_GlobalEnv
[13:33:50.376] Capture standard output: TRUE
[13:33:50.376] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.376] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.376] Packages: <none>
[13:33:50.376] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.376] Resolved: FALSE
[13:33:50.376] Value: <not collected>
[13:33:50.376] Conditions captured: <none>
[13:33:50.376] Early signaling: FALSE
[13:33:50.376] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.376] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.387] Chunk #1 of 10 ... DONE
[13:33:50.387] Chunk #2 of 10 ...
[13:33:50.387]  - Finding globals in 'X' for chunk #2 ...
[13:33:50.388]    + additional globals found: [n=0] 
[13:33:50.388]    + additional namespaces needed: [n=0] 
[13:33:50.388]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:50.388]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.388]  - seeds: <none>
[13:33:50.388]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.405] Created future:
[13:33:50.405] MultisessionFuture:
[13:33:50.405] Label: ‘future_lapply-2’
[13:33:50.405] Expression:
[13:33:50.405] {
[13:33:50.405]     do.call(function(...) {
[13:33:50.405]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.405]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.405]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.405]             on.exit(options(oopts), add = TRUE)
[13:33:50.405]         }
[13:33:50.405]         {
[13:33:50.405]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.405]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.405]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.405]             })
[13:33:50.405]         }
[13:33:50.405]     }, args = future.call.arguments)
[13:33:50.405] }
[13:33:50.405] Lazy evaluation: FALSE
[13:33:50.405] Asynchronous evaluation: TRUE
[13:33:50.405] Local evaluation: TRUE
[13:33:50.405] Environment: R_GlobalEnv
[13:33:50.405] Capture standard output: TRUE
[13:33:50.405] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.405] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.405] Packages: <none>
[13:33:50.405] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.405] Resolved: FALSE
[13:33:50.405] Value: <not collected>
[13:33:50.405] Conditions captured: <none>
[13:33:50.405] Early signaling: FALSE
[13:33:50.405] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.405] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.416] Chunk #2 of 10 ... DONE
[13:33:50.416] Chunk #3 of 10 ...
[13:33:50.416]  - Finding globals in 'X' for chunk #3 ...
[13:33:50.417]    + additional globals found: [n=0] 
[13:33:50.417]    + additional namespaces needed: [n=0] 
[13:33:50.417]  - Finding globals in 'X' for chunk #3 ... DONE
[13:33:50.417]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.417]  - seeds: <none>
[13:33:50.417]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.445] Created future:
[13:33:50.445] MultisessionFuture:
[13:33:50.445] Label: ‘future_lapply-3’
[13:33:50.445] Expression:
[13:33:50.445] {
[13:33:50.445]     do.call(function(...) {
[13:33:50.445]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.445]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.445]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.445]             on.exit(options(oopts), add = TRUE)
[13:33:50.445]         }
[13:33:50.445]         {
[13:33:50.445]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.445]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.445]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.445]             })
[13:33:50.445]         }
[13:33:50.445]     }, args = future.call.arguments)
[13:33:50.445] }
[13:33:50.445] Lazy evaluation: FALSE
[13:33:50.445] Asynchronous evaluation: TRUE
[13:33:50.445] Local evaluation: TRUE
[13:33:50.445] Environment: R_GlobalEnv
[13:33:50.445] Capture standard output: TRUE
[13:33:50.445] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.445] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.445] Packages: <none>
[13:33:50.445] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.445] Resolved: FALSE
[13:33:50.445] Value: <not collected>
[13:33:50.445] Conditions captured: <none>
[13:33:50.445] Early signaling: FALSE
[13:33:50.445] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.445] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.457] Chunk #3 of 10 ... DONE
[13:33:50.457] Chunk #4 of 10 ...
[13:33:50.457]  - Finding globals in 'X' for chunk #4 ...
[13:33:50.457]    + additional globals found: [n=0] 
[13:33:50.457]    + additional namespaces needed: [n=0] 
[13:33:50.457]  - Finding globals in 'X' for chunk #4 ... DONE
[13:33:50.457]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.458]  - seeds: <none>
[13:33:50.458]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.496] Created future:
[13:33:50.496] MultisessionFuture:
[13:33:50.496] Label: ‘future_lapply-4’
[13:33:50.496] Expression:
[13:33:50.496] {
[13:33:50.496]     do.call(function(...) {
[13:33:50.496]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.496]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.496]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.496]             on.exit(options(oopts), add = TRUE)
[13:33:50.496]         }
[13:33:50.496]         {
[13:33:50.496]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.496]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.496]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.496]             })
[13:33:50.496]         }
[13:33:50.496]     }, args = future.call.arguments)
[13:33:50.496] }
[13:33:50.496] Lazy evaluation: FALSE
[13:33:50.496] Asynchronous evaluation: TRUE
[13:33:50.496] Local evaluation: TRUE
[13:33:50.496] Environment: R_GlobalEnv
[13:33:50.496] Capture standard output: TRUE
[13:33:50.496] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.496] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.496] Packages: <none>
[13:33:50.496] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.496] Resolved: FALSE
[13:33:50.496] Value: <not collected>
[13:33:50.496] Conditions captured: <none>
[13:33:50.496] Early signaling: FALSE
[13:33:50.496] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.496] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.507] Chunk #4 of 10 ... DONE
[13:33:50.507] Chunk #5 of 10 ...
[13:33:50.507]  - Finding globals in 'X' for chunk #5 ...
[13:33:50.508]    + additional globals found: [n=0] 
[13:33:50.508]    + additional namespaces needed: [n=0] 
[13:33:50.508]  - Finding globals in 'X' for chunk #5 ... DONE
[13:33:50.508]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.508]  - seeds: <none>
[13:33:50.508]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.536] Created future:
[13:33:50.536] MultisessionFuture:
[13:33:50.536] Label: ‘future_lapply-5’
[13:33:50.536] Expression:
[13:33:50.536] {
[13:33:50.536]     do.call(function(...) {
[13:33:50.536]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.536]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.536]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.536]             on.exit(options(oopts), add = TRUE)
[13:33:50.536]         }
[13:33:50.536]         {
[13:33:50.536]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.536]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.536]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.536]             })
[13:33:50.536]         }
[13:33:50.536]     }, args = future.call.arguments)
[13:33:50.536] }
[13:33:50.536] Lazy evaluation: FALSE
[13:33:50.536] Asynchronous evaluation: TRUE
[13:33:50.536] Local evaluation: TRUE
[13:33:50.536] Environment: R_GlobalEnv
[13:33:50.536] Capture standard output: TRUE
[13:33:50.536] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.536] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.536] Packages: <none>
[13:33:50.536] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.536] Resolved: FALSE
[13:33:50.536] Value: <not collected>
[13:33:50.536] Conditions captured: <none>
[13:33:50.536] Early signaling: FALSE
[13:33:50.536] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.536] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.548] Chunk #5 of 10 ... DONE
[13:33:50.548] Chunk #6 of 10 ...
[13:33:50.548]  - Finding globals in 'X' for chunk #6 ...
[13:33:50.548]    + additional globals found: [n=0] 
[13:33:50.549]    + additional namespaces needed: [n=0] 
[13:33:50.549]  - Finding globals in 'X' for chunk #6 ... DONE
[13:33:50.549]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.549]  - seeds: <none>
[13:33:50.549]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.577] Created future:
[13:33:50.577] MultisessionFuture:
[13:33:50.577] Label: ‘future_lapply-6’
[13:33:50.577] Expression:
[13:33:50.577] {
[13:33:50.577]     do.call(function(...) {
[13:33:50.577]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.577]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.577]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.577]             on.exit(options(oopts), add = TRUE)
[13:33:50.577]         }
[13:33:50.577]         {
[13:33:50.577]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.577]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.577]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.577]             })
[13:33:50.577]         }
[13:33:50.577]     }, args = future.call.arguments)
[13:33:50.577] }
[13:33:50.577] Lazy evaluation: FALSE
[13:33:50.577] Asynchronous evaluation: TRUE
[13:33:50.577] Local evaluation: TRUE
[13:33:50.577] Environment: R_GlobalEnv
[13:33:50.577] Capture standard output: TRUE
[13:33:50.577] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.577] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.577] Packages: <none>
[13:33:50.577] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.577] Resolved: FALSE
[13:33:50.577] Value: <not collected>
[13:33:50.577] Conditions captured: <none>
[13:33:50.577] Early signaling: FALSE
[13:33:50.577] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.577] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.589] Chunk #6 of 10 ... DONE
[13:33:50.589] Chunk #7 of 10 ...
[13:33:50.589]  - Finding globals in 'X' for chunk #7 ...
[13:33:50.589]    + additional globals found: [n=0] 
[13:33:50.589]    + additional namespaces needed: [n=0] 
[13:33:50.589]  - Finding globals in 'X' for chunk #7 ... DONE
[13:33:50.590]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.590]  - seeds: <none>
[13:33:50.590]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.617] Created future:
[13:33:50.617] MultisessionFuture:
[13:33:50.617] Label: ‘future_lapply-7’
[13:33:50.617] Expression:
[13:33:50.617] {
[13:33:50.617]     do.call(function(...) {
[13:33:50.617]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.617]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.617]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.617]             on.exit(options(oopts), add = TRUE)
[13:33:50.617]         }
[13:33:50.617]         {
[13:33:50.617]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.617]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.617]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.617]             })
[13:33:50.617]         }
[13:33:50.617]     }, args = future.call.arguments)
[13:33:50.617] }
[13:33:50.617] Lazy evaluation: FALSE
[13:33:50.617] Asynchronous evaluation: TRUE
[13:33:50.617] Local evaluation: TRUE
[13:33:50.617] Environment: R_GlobalEnv
[13:33:50.617] Capture standard output: TRUE
[13:33:50.617] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.617] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.617] Packages: <none>
[13:33:50.617] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.617] Resolved: FALSE
[13:33:50.617] Value: <not collected>
[13:33:50.617] Conditions captured: <none>
[13:33:50.617] Early signaling: FALSE
[13:33:50.617] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.617] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.628] Chunk #7 of 10 ... DONE
[13:33:50.628] Chunk #8 of 10 ...
[13:33:50.629]  - Finding globals in 'X' for chunk #8 ...
[13:33:50.629]    + additional globals found: [n=0] 
[13:33:50.629]    + additional namespaces needed: [n=0] 
[13:33:50.629]  - Finding globals in 'X' for chunk #8 ... DONE
[13:33:50.629]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.629]  - seeds: <none>
[13:33:50.630]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.658] Created future:
[13:33:50.658] MultisessionFuture:
[13:33:50.658] Label: ‘future_lapply-8’
[13:33:50.658] Expression:
[13:33:50.658] {
[13:33:50.658]     do.call(function(...) {
[13:33:50.658]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.658]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.658]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.658]             on.exit(options(oopts), add = TRUE)
[13:33:50.658]         }
[13:33:50.658]         {
[13:33:50.658]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.658]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.658]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.658]             })
[13:33:50.658]         }
[13:33:50.658]     }, args = future.call.arguments)
[13:33:50.658] }
[13:33:50.658] Lazy evaluation: FALSE
[13:33:50.658] Asynchronous evaluation: TRUE
[13:33:50.658] Local evaluation: TRUE
[13:33:50.658] Environment: R_GlobalEnv
[13:33:50.658] Capture standard output: TRUE
[13:33:50.658] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.658] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.658] Packages: <none>
[13:33:50.658] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.658] Resolved: FALSE
[13:33:50.658] Value: <not collected>
[13:33:50.658] Conditions captured: <none>
[13:33:50.658] Early signaling: FALSE
[13:33:50.658] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.658] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.669] Chunk #8 of 10 ... DONE
[13:33:50.669] Chunk #9 of 10 ...
[13:33:50.670]  - Finding globals in 'X' for chunk #9 ...
[13:33:50.670]    + additional globals found: [n=0] 
[13:33:50.670]    + additional namespaces needed: [n=0] 
[13:33:50.670]  - Finding globals in 'X' for chunk #9 ... DONE
[13:33:50.670]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.671]  - seeds: <none>
[13:33:50.671]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.697] Created future:
[13:33:50.698] MultisessionFuture:
[13:33:50.698] Label: ‘future_lapply-9’
[13:33:50.698] Expression:
[13:33:50.698] {
[13:33:50.698]     do.call(function(...) {
[13:33:50.698]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.698]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.698]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.698]             on.exit(options(oopts), add = TRUE)
[13:33:50.698]         }
[13:33:50.698]         {
[13:33:50.698]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.698]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.698]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.698]             })
[13:33:50.698]         }
[13:33:50.698]     }, args = future.call.arguments)
[13:33:50.698] }
[13:33:50.698] Lazy evaluation: FALSE
[13:33:50.698] Asynchronous evaluation: TRUE
[13:33:50.698] Local evaluation: TRUE
[13:33:50.698] Environment: R_GlobalEnv
[13:33:50.698] Capture standard output: TRUE
[13:33:50.698] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.698] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.698] Packages: <none>
[13:33:50.698] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.698] Resolved: FALSE
[13:33:50.698] Value: <not collected>
[13:33:50.698] Conditions captured: <none>
[13:33:50.698] Early signaling: FALSE
[13:33:50.698] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.698] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.712] Chunk #9 of 10 ... DONE
[13:33:50.712] Chunk #10 of 10 ...
[13:33:50.712]  - Finding globals in 'X' for chunk #10 ...
[13:33:50.712]    + additional globals found: [n=0] 
[13:33:50.713]    + additional namespaces needed: [n=0] 
[13:33:50.713]  - Finding globals in 'X' for chunk #10 ... DONE
[13:33:50.713]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:33:50.713]  - seeds: <none>
[13:33:50.713]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.741] Created future:
[13:33:50.741] MultisessionFuture:
[13:33:50.741] Label: ‘future_lapply-10’
[13:33:50.741] Expression:
[13:33:50.741] {
[13:33:50.741]     do.call(function(...) {
[13:33:50.741]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.741]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.741]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.741]             on.exit(options(oopts), add = TRUE)
[13:33:50.741]         }
[13:33:50.741]         {
[13:33:50.741]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.741]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.741]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.741]             })
[13:33:50.741]         }
[13:33:50.741]     }, args = future.call.arguments)
[13:33:50.741] }
[13:33:50.741] Lazy evaluation: FALSE
[13:33:50.741] Asynchronous evaluation: TRUE
[13:33:50.741] Local evaluation: TRUE
[13:33:50.741] Environment: R_GlobalEnv
[13:33:50.741] Capture standard output: TRUE
[13:33:50.741] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.741] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.741] Packages: <none>
[13:33:50.741] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.741] Resolved: FALSE
[13:33:50.741] Value: <not collected>
[13:33:50.741] Conditions captured: <none>
[13:33:50.741] Early signaling: FALSE
[13:33:50.741] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.741] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.753] Chunk #10 of 10 ... DONE
[13:33:50.753] Launching 10 futures (chunks) ... DONE
[13:33:50.753] Resolving 10 futures (chunks) ...
[13:33:50.785]  - Number of value chunks collected: 10
[13:33:50.785] Resolving 10 futures (chunks) ... DONE
[13:33:50.785] Reducing values from 10 chunks ...
[13:33:50.785]  - Number of values collected after concatenation: 10
[13:33:50.785]  - Number of values expected: 10
[13:33:50.785] Reducing values from 10 chunks ... DONE
[13:33:50.785] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:33:50.789] future_lapply() ...
[13:33:50.793] Number of chunks: 5
[13:33:50.793] getGlobalsAndPackagesXApply() ...
[13:33:50.793]  - future.globals: TRUE
[13:33:50.794]  - globals found/used: [n=1] ‘FUN’
[13:33:50.795]  - needed namespaces: [n=0] 
[13:33:50.795] Finding globals ... DONE
[13:33:50.795]  - use_args: TRUE
[13:33:50.795]  - Getting '...' globals ...
[13:33:50.795]    - '...' content: [n=0] 
[13:33:50.795] List of 1
[13:33:50.795]  $ ...: list()
[13:33:50.795]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.795]  - attr(*, "where")=List of 1
[13:33:50.795]   ..$ ...:<environment: 0x5620cf0c6348> 
[13:33:50.795]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.795]  - attr(*, "resolved")= logi TRUE
[13:33:50.795]  - attr(*, "total_size")= num NA
[13:33:50.798]  - Getting '...' globals ... DONE
[13:33:50.798] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:50.798] List of 2
[13:33:50.798]  $ ...future.FUN:function (x)  
[13:33:50.798]  $ ...          : list()
[13:33:50.798]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:50.798]  - attr(*, "where")=List of 2
[13:33:50.798]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:50.798]   ..$ ...          :<environment: 0x5620cf0c6348> 
[13:33:50.798]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:50.798]  - attr(*, "resolved")= logi FALSE
[13:33:50.798]  - attr(*, "total_size")= num 1840
[13:33:50.801] Packages to be attached in all futures: [n=0] 
[13:33:50.801] getGlobalsAndPackagesXApply() ... DONE
[13:33:50.801] Number of futures (= number of chunks): 5
[13:33:50.801] Launching 5 futures (chunks) ...
[13:33:50.801] Chunk #1 of 5 ...
[13:33:50.801]  - Finding globals in 'X' for chunk #1 ...
[13:33:50.802]    + additional globals found: [n=0] 
[13:33:50.802]    + additional namespaces needed: [n=0] 
[13:33:50.802]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:50.802]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:33:50.802]  - seeds: <none>
[13:33:50.802]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.819] Created future:
[13:33:50.819] MultisessionFuture:
[13:33:50.819] Label: ‘future_lapply-1’
[13:33:50.819] Expression:
[13:33:50.819] {
[13:33:50.819]     do.call(function(...) {
[13:33:50.819]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.819]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.819]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.819]             on.exit(options(oopts), add = TRUE)
[13:33:50.819]         }
[13:33:50.819]         {
[13:33:50.819]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.819]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.819]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.819]             })
[13:33:50.819]         }
[13:33:50.819]     }, args = future.call.arguments)
[13:33:50.819] }
[13:33:50.819] Lazy evaluation: FALSE
[13:33:50.819] Asynchronous evaluation: TRUE
[13:33:50.819] Local evaluation: TRUE
[13:33:50.819] Environment: R_GlobalEnv
[13:33:50.819] Capture standard output: TRUE
[13:33:50.819] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.819] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.819] Packages: <none>
[13:33:50.819] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.819] Resolved: FALSE
[13:33:50.819] Value: <not collected>
[13:33:50.819] Conditions captured: <none>
[13:33:50.819] Early signaling: FALSE
[13:33:50.819] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.819] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.830] Chunk #1 of 5 ... DONE
[13:33:50.830] Chunk #2 of 5 ...
[13:33:50.831]  - Finding globals in 'X' for chunk #2 ...
[13:33:50.831]    + additional globals found: [n=0] 
[13:33:50.831]    + additional namespaces needed: [n=0] 
[13:33:50.831]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:50.831]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:33:50.831]  - seeds: <none>
[13:33:50.831]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.848] Created future:
[13:33:50.848] MultisessionFuture:
[13:33:50.848] Label: ‘future_lapply-2’
[13:33:50.848] Expression:
[13:33:50.848] {
[13:33:50.848]     do.call(function(...) {
[13:33:50.848]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.848]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.848]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.848]             on.exit(options(oopts), add = TRUE)
[13:33:50.848]         }
[13:33:50.848]         {
[13:33:50.848]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.848]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.848]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.848]             })
[13:33:50.848]         }
[13:33:50.848]     }, args = future.call.arguments)
[13:33:50.848] }
[13:33:50.848] Lazy evaluation: FALSE
[13:33:50.848] Asynchronous evaluation: TRUE
[13:33:50.848] Local evaluation: TRUE
[13:33:50.848] Environment: R_GlobalEnv
[13:33:50.848] Capture standard output: TRUE
[13:33:50.848] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.848] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.848] Packages: <none>
[13:33:50.848] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.848] Resolved: FALSE
[13:33:50.848] Value: <not collected>
[13:33:50.848] Conditions captured: <none>
[13:33:50.848] Early signaling: FALSE
[13:33:50.848] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.848] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.859] Chunk #2 of 5 ... DONE
[13:33:50.859] Chunk #3 of 5 ...
[13:33:50.860]  - Finding globals in 'X' for chunk #3 ...
[13:33:50.860]    + additional globals found: [n=0] 
[13:33:50.860]    + additional namespaces needed: [n=0] 
[13:33:50.860]  - Finding globals in 'X' for chunk #3 ... DONE
[13:33:50.860]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:33:50.860]  - seeds: <none>
[13:33:50.860]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.894] Created future:
[13:33:50.894] MultisessionFuture:
[13:33:50.894] Label: ‘future_lapply-3’
[13:33:50.894] Expression:
[13:33:50.894] {
[13:33:50.894]     do.call(function(...) {
[13:33:50.894]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.894]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.894]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.894]             on.exit(options(oopts), add = TRUE)
[13:33:50.894]         }
[13:33:50.894]         {
[13:33:50.894]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.894]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.894]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.894]             })
[13:33:50.894]         }
[13:33:50.894]     }, args = future.call.arguments)
[13:33:50.894] }
[13:33:50.894] Lazy evaluation: FALSE
[13:33:50.894] Asynchronous evaluation: TRUE
[13:33:50.894] Local evaluation: TRUE
[13:33:50.894] Environment: R_GlobalEnv
[13:33:50.894] Capture standard output: TRUE
[13:33:50.894] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.894] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.894] Packages: <none>
[13:33:50.894] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.894] Resolved: FALSE
[13:33:50.894] Value: <not collected>
[13:33:50.894] Conditions captured: <none>
[13:33:50.894] Early signaling: FALSE
[13:33:50.894] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.894] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.906] Chunk #3 of 5 ... DONE
[13:33:50.906] Chunk #4 of 5 ...
[13:33:50.906]  - Finding globals in 'X' for chunk #4 ...
[13:33:50.907]    + additional globals found: [n=0] 
[13:33:50.907]    + additional namespaces needed: [n=0] 
[13:33:50.907]  - Finding globals in 'X' for chunk #4 ... DONE
[13:33:50.907]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:33:50.907]  - seeds: <none>
[13:33:50.907]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.935] Created future:
[13:33:50.935] MultisessionFuture:
[13:33:50.935] Label: ‘future_lapply-4’
[13:33:50.935] Expression:
[13:33:50.935] {
[13:33:50.935]     do.call(function(...) {
[13:33:50.935]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.935]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.935]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.935]             on.exit(options(oopts), add = TRUE)
[13:33:50.935]         }
[13:33:50.935]         {
[13:33:50.935]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.935]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.935]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.935]             })
[13:33:50.935]         }
[13:33:50.935]     }, args = future.call.arguments)
[13:33:50.935] }
[13:33:50.935] Lazy evaluation: FALSE
[13:33:50.935] Asynchronous evaluation: TRUE
[13:33:50.935] Local evaluation: TRUE
[13:33:50.935] Environment: R_GlobalEnv
[13:33:50.935] Capture standard output: TRUE
[13:33:50.935] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.935] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.935] Packages: <none>
[13:33:50.935] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.935] Resolved: FALSE
[13:33:50.935] Value: <not collected>
[13:33:50.935] Conditions captured: <none>
[13:33:50.935] Early signaling: FALSE
[13:33:50.935] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.935] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.947] Chunk #4 of 5 ... DONE
[13:33:50.947] Chunk #5 of 5 ...
[13:33:50.947]  - Finding globals in 'X' for chunk #5 ...
[13:33:50.947]    + additional globals found: [n=0] 
[13:33:50.947]    + additional namespaces needed: [n=0] 
[13:33:50.948]  - Finding globals in 'X' for chunk #5 ... DONE
[13:33:50.948]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:33:50.948]  - seeds: <none>
[13:33:50.948]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:50.975] Created future:
[13:33:50.975] MultisessionFuture:
[13:33:50.975] Label: ‘future_lapply-5’
[13:33:50.975] Expression:
[13:33:50.975] {
[13:33:50.975]     do.call(function(...) {
[13:33:50.975]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:50.975]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:50.975]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:50.975]             on.exit(options(oopts), add = TRUE)
[13:33:50.975]         }
[13:33:50.975]         {
[13:33:50.975]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:50.975]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:50.975]                 ...future.FUN(...future.X_jj, ...)
[13:33:50.975]             })
[13:33:50.975]         }
[13:33:50.975]     }, args = future.call.arguments)
[13:33:50.975] }
[13:33:50.975] Lazy evaluation: FALSE
[13:33:50.975] Asynchronous evaluation: TRUE
[13:33:50.975] Local evaluation: TRUE
[13:33:50.975] Environment: R_GlobalEnv
[13:33:50.975] Capture standard output: TRUE
[13:33:50.975] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:50.975] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:50.975] Packages: <none>
[13:33:50.975] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:50.975] Resolved: FALSE
[13:33:50.975] Value: <not collected>
[13:33:50.975] Conditions captured: <none>
[13:33:50.975] Early signaling: FALSE
[13:33:50.975] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:50.975] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:50.987] Chunk #5 of 5 ... DONE
[13:33:50.987] Launching 5 futures (chunks) ... DONE
[13:33:50.987] Resolving 5 futures (chunks) ...
[13:33:51.030]  - Number of value chunks collected: 5
[13:33:51.030] Resolving 5 futures (chunks) ... DONE
[13:33:51.031] Reducing values from 5 chunks ...
[13:33:51.031]  - Number of values collected after concatenation: 10
[13:33:51.031]  - Number of values expected: 10
[13:33:51.031] Reducing values from 5 chunks ... DONE
[13:33:51.031] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:33:51.034] future_lapply() ...
[13:33:51.038] Number of chunks: 2
[13:33:51.039] getGlobalsAndPackagesXApply() ...
[13:33:51.039]  - future.globals: TRUE
[13:33:51.040]  - globals found/used: [n=1] ‘FUN’
[13:33:51.040]  - needed namespaces: [n=0] 
[13:33:51.041] Finding globals ... DONE
[13:33:51.041]  - use_args: TRUE
[13:33:51.041]  - Getting '...' globals ...
[13:33:51.041]    - '...' content: [n=0] 
[13:33:51.041] List of 1
[13:33:51.041]  $ ...: list()
[13:33:51.041]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.041]  - attr(*, "where")=List of 1
[13:33:51.041]   ..$ ...:<environment: 0x5620d27a8b20> 
[13:33:51.041]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.041]  - attr(*, "resolved")= logi TRUE
[13:33:51.041]  - attr(*, "total_size")= num NA
[13:33:51.044]  - Getting '...' globals ... DONE
[13:33:51.044] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:51.044] List of 2
[13:33:51.044]  $ ...future.FUN:function (x)  
[13:33:51.044]  $ ...          : list()
[13:33:51.044]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.044]  - attr(*, "where")=List of 2
[13:33:51.044]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:51.044]   ..$ ...          :<environment: 0x5620d27a8b20> 
[13:33:51.044]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.044]  - attr(*, "resolved")= logi FALSE
[13:33:51.044]  - attr(*, "total_size")= num 1840
[13:33:51.046] Packages to be attached in all futures: [n=0] 
[13:33:51.047] getGlobalsAndPackagesXApply() ... DONE
[13:33:51.047] Number of futures (= number of chunks): 2
[13:33:51.047] Launching 2 futures (chunks) ...
[13:33:51.047] Chunk #1 of 2 ...
[13:33:51.047]  - Finding globals in 'X' for chunk #1 ...
[13:33:51.047]    + additional globals found: [n=0] 
[13:33:51.047]    + additional namespaces needed: [n=0] 
[13:33:51.048]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:51.048]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:33:51.048]  - seeds: <none>
[13:33:51.048]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:51.065] Created future:
[13:33:51.065] MultisessionFuture:
[13:33:51.065] Label: ‘future_lapply-1’
[13:33:51.065] Expression:
[13:33:51.065] {
[13:33:51.065]     do.call(function(...) {
[13:33:51.065]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:51.065]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:51.065]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:51.065]             on.exit(options(oopts), add = TRUE)
[13:33:51.065]         }
[13:33:51.065]         {
[13:33:51.065]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:51.065]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:51.065]                 ...future.FUN(...future.X_jj, ...)
[13:33:51.065]             })
[13:33:51.065]         }
[13:33:51.065]     }, args = future.call.arguments)
[13:33:51.065] }
[13:33:51.065] Lazy evaluation: FALSE
[13:33:51.065] Asynchronous evaluation: TRUE
[13:33:51.065] Local evaluation: TRUE
[13:33:51.065] Environment: R_GlobalEnv
[13:33:51.065] Capture standard output: TRUE
[13:33:51.065] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:51.065] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:51.065] Packages: <none>
[13:33:51.065] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:51.065] Resolved: FALSE
[13:33:51.065] Value: <not collected>
[13:33:51.065] Conditions captured: <none>
[13:33:51.065] Early signaling: FALSE
[13:33:51.065] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:51.065] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:51.079] Chunk #1 of 2 ... DONE
[13:33:51.080] Chunk #2 of 2 ...
[13:33:51.080]  - Finding globals in 'X' for chunk #2 ...
[13:33:51.080]    + additional globals found: [n=0] 
[13:33:51.080]    + additional namespaces needed: [n=0] 
[13:33:51.080]  - Finding globals in 'X' for chunk #2 ... DONE
[13:33:51.080]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:33:51.080]  - seeds: <none>
[13:33:51.081]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:51.098] Created future:
[13:33:51.098] MultisessionFuture:
[13:33:51.098] Label: ‘future_lapply-2’
[13:33:51.098] Expression:
[13:33:51.098] {
[13:33:51.098]     do.call(function(...) {
[13:33:51.098]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:51.098]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:51.098]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:51.098]             on.exit(options(oopts), add = TRUE)
[13:33:51.098]         }
[13:33:51.098]         {
[13:33:51.098]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:51.098]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:51.098]                 ...future.FUN(...future.X_jj, ...)
[13:33:51.098]             })
[13:33:51.098]         }
[13:33:51.098]     }, args = future.call.arguments)
[13:33:51.098] }
[13:33:51.098] Lazy evaluation: FALSE
[13:33:51.098] Asynchronous evaluation: TRUE
[13:33:51.098] Local evaluation: TRUE
[13:33:51.098] Environment: R_GlobalEnv
[13:33:51.098] Capture standard output: TRUE
[13:33:51.098] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:51.098] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:51.098] Packages: <none>
[13:33:51.098] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:51.098] Resolved: FALSE
[13:33:51.098] Value: <not collected>
[13:33:51.098] Conditions captured: <none>
[13:33:51.098] Early signaling: FALSE
[13:33:51.098] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:51.098] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:51.109] Chunk #2 of 2 ... DONE
[13:33:51.109] Launching 2 futures (chunks) ... DONE
[13:33:51.110] Resolving 2 futures (chunks) ...
[13:33:51.140]  - Number of value chunks collected: 2
[13:33:51.141] Resolving 2 futures (chunks) ... DONE
[13:33:51.141] Reducing values from 2 chunks ...
[13:33:51.141]  - Number of values collected after concatenation: 10
[13:33:51.141]  - Number of values expected: 10
[13:33:51.141] Reducing values from 2 chunks ... DONE
[13:33:51.141] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:33:51.145] future_lapply() ...
[13:33:51.149] Number of chunks: 1
[13:33:51.149] getGlobalsAndPackagesXApply() ...
[13:33:51.149]  - future.globals: TRUE
[13:33:51.151]  - globals found/used: [n=1] ‘FUN’
[13:33:51.151]  - needed namespaces: [n=0] 
[13:33:51.151] Finding globals ... DONE
[13:33:51.151]  - use_args: TRUE
[13:33:51.151]  - Getting '...' globals ...
[13:33:51.152]    - '...' content: [n=0] 
[13:33:51.152] List of 1
[13:33:51.152]  $ ...: list()
[13:33:51.152]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.152]  - attr(*, "where")=List of 1
[13:33:51.152]   ..$ ...:<environment: 0x5620d08f3320> 
[13:33:51.152]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.152]  - attr(*, "resolved")= logi TRUE
[13:33:51.152]  - attr(*, "total_size")= num NA
[13:33:51.154]  - Getting '...' globals ... DONE
[13:33:51.154] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:51.155] List of 2
[13:33:51.155]  $ ...future.FUN:function (x)  
[13:33:51.155]  $ ...          : list()
[13:33:51.155]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.155]  - attr(*, "where")=List of 2
[13:33:51.155]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:51.155]   ..$ ...          :<environment: 0x5620d08f3320> 
[13:33:51.155]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.155]  - attr(*, "resolved")= logi FALSE
[13:33:51.155]  - attr(*, "total_size")= num 1840
[13:33:51.157] Packages to be attached in all futures: [n=0] 
[13:33:51.157] getGlobalsAndPackagesXApply() ... DONE
[13:33:51.158] Number of futures (= number of chunks): 1
[13:33:51.158] Launching 1 futures (chunks) ...
[13:33:51.158] Chunk #1 of 1 ...
[13:33:51.158]  - Finding globals in 'X' for chunk #1 ...
[13:33:51.158]    + additional globals found: [n=0] 
[13:33:51.158]    + additional namespaces needed: [n=0] 
[13:33:51.158]  - Finding globals in 'X' for chunk #1 ... DONE
[13:33:51.158]  - seeds: <none>
[13:33:51.159]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:33:51.175] Created future:
[13:33:51.175] MultisessionFuture:
[13:33:51.175] Label: ‘future_lapply-1’
[13:33:51.175] Expression:
[13:33:51.175] {
[13:33:51.175]     do.call(function(...) {
[13:33:51.175]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:33:51.175]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:33:51.175]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:33:51.175]             on.exit(options(oopts), add = TRUE)
[13:33:51.175]         }
[13:33:51.175]         {
[13:33:51.175]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:33:51.175]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:33:51.175]                 ...future.FUN(...future.X_jj, ...)
[13:33:51.175]             })
[13:33:51.175]         }
[13:33:51.175]     }, args = future.call.arguments)
[13:33:51.175] }
[13:33:51.175] Lazy evaluation: FALSE
[13:33:51.175] Asynchronous evaluation: TRUE
[13:33:51.175] Local evaluation: TRUE
[13:33:51.175] Environment: R_GlobalEnv
[13:33:51.175] Capture standard output: TRUE
[13:33:51.175] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:33:51.175] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:33:51.175] Packages: <none>
[13:33:51.175] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:33:51.175] Resolved: FALSE
[13:33:51.175] Value: <not collected>
[13:33:51.175] Conditions captured: <none>
[13:33:51.175] Early signaling: FALSE
[13:33:51.175] Owner process: abe97395-ee1e-4319-8255-8fe11c4fd41c
[13:33:51.175] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:33:51.187] Chunk #1 of 1 ... DONE
[13:33:51.187] Launching 1 futures (chunks) ... DONE
[13:33:51.187] Resolving 1 futures (chunks) ...
[13:33:51.229]  - Number of value chunks collected: 1
[13:33:51.229] Resolving 1 futures (chunks) ... DONE
[13:33:51.230] Reducing values from 1 chunks ...
[13:33:51.230]  - Number of values collected after concatenation: 10
[13:33:51.230]  - Number of values expected: 10
[13:33:51.230] Reducing values from 1 chunks ... DONE
[13:33:51.230] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[13:33:51.234] future_lapply() ...
[13:33:51.237] Number of chunks: 1
[13:33:51.237] getGlobalsAndPackagesXApply() ...
[13:33:51.237] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[13:33:51.238] future_lapply() ...
[13:33:51.241] Number of chunks: 1
[13:33:51.241] getGlobalsAndPackagesXApply() ...
[13:33:51.241]  - future.globals: <name-value list> with names ‘1’
[13:33:51.241] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:33:51.241] future_lapply() ...
[13:33:51.245] Number of chunks: 1
[13:33:51.245] getGlobalsAndPackagesXApply() ...
[13:33:51.245]  - future.globals: ‘...future.FUN’
[13:33:51.245]  - use_args: TRUE
[13:33:51.245] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:33:51.246] future_lapply() ...
[13:33:51.251] Number of chunks: 1
[13:33:51.251] getGlobalsAndPackagesXApply() ...
[13:33:51.252]  - future.globals: ‘...future.FUN’
[13:33:51.252]  - use_args: TRUE
[13:33:51.252] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[13:33:51.252] future_lapply() ...
[13:33:51.255] Number of chunks: 1
[13:33:51.256] getGlobalsAndPackagesXApply() ...
[13:33:51.256]  - future.globals: TRUE
[13:33:51.257]  - globals found/used: [n=1] ‘FUN’
[13:33:51.257]  - needed namespaces: [n=0] 
[13:33:51.257] Finding globals ... DONE
[13:33:51.257]  - use_args: TRUE
[13:33:51.257]  - Getting '...' globals ...
[13:33:51.258]    - '...' content: [n=0] 
[13:33:51.258] List of 1
[13:33:51.258]  $ ...: list()
[13:33:51.258]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.258]  - attr(*, "where")=List of 1
[13:33:51.258]   ..$ ...:<environment: 0x5620d18fbec8> 
[13:33:51.258]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.258]  - attr(*, "resolved")= logi TRUE
[13:33:51.258]  - attr(*, "total_size")= num NA
[13:33:51.260]  - Getting '...' globals ... DONE
[13:33:51.260] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:33:51.260] List of 2
[13:33:51.260]  $ ...future.FUN:function (f)  
[13:33:51.260]  $ ...          : list()
[13:33:51.260]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:33:51.260]  - attr(*, "where")=List of 2
[13:33:51.260]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:33:51.260]   ..$ ...          :<environment: 0x5620d18fbec8> 
[13:33:51.260]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:33:51.260]  - attr(*, "resolved")= logi FALSE
[13:33:51.260]  - attr(*, "total_size")= num 336
[13:33:51.263] Packages to be attached in all futures: [n=0] 
[13:33:51.263] getGlobalsAndPackagesXApply() ... DONE
[13:33:51.263] Number of futures (= number of chunks): 1
[13:33:51.263] Launching 1 futures (chunks) ...
[13:33:51.263] Chunk #1 of 1 ...
[13:33:51.264]  - Finding globals in 'X' for chunk #1 ...
[13:33:51.265]    + additional globals found: [n=1] ‘...future.elements_ii’
[13:33:51.265]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
