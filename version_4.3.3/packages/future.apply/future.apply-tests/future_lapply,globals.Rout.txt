
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[16:17:52.127] plan(): Setting new future strategy stack:
[16:17:52.127] List of future strategies:
[16:17:52.127] 1. sequential:
[16:17:52.127]    - args: function (..., envir = parent.frame())
[16:17:52.127]    - tweaked: FALSE
[16:17:52.127]    - call: future::plan("sequential")
[16:17:52.141] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[16:17:52.691] future_lapply() ...
[16:17:52.695] Number of chunks: 1
[16:17:52.696] getGlobalsAndPackagesXApply() ...
[16:17:52.696]  - future.globals: FALSE
[16:17:52.699]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:17:52.699]  - needed namespaces: [n=0] 
[16:17:52.699] Finding globals ... DONE
[16:17:52.699]  - use_args: TRUE
[16:17:52.699]  - Getting '...' globals ...
[16:17:52.700]    - '...' content: [n=0] 
[16:17:52.700] List of 1
[16:17:52.700]  $ ...: list()
[16:17:52.700]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.700]  - attr(*, "where")=List of 1
[16:17:52.700]   ..$ ...:<environment: 0x556b14f93638> 
[16:17:52.700]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.700]  - attr(*, "resolved")= logi TRUE
[16:17:52.700]  - attr(*, "total_size")= num NA
[16:17:52.703]  - Getting '...' globals ... DONE
[16:17:52.703] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:17:52.703] List of 3
[16:17:52.703]  $ ...future.FUN        :function (x)  
[16:17:52.703]  $ future.call.arguments: list()
[16:17:52.703]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.703]  $ ...                  : list()
[16:17:52.703]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.703]  - attr(*, "where")=List of 3
[16:17:52.703]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:17:52.703]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:17:52.703]   ..$ ...                  :<environment: 0x556b14f93638> 
[16:17:52.703]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.703]  - attr(*, "resolved")= logi FALSE
[16:17:52.703]  - attr(*, "total_size")= num 3824
[16:17:52.707] Packages to be attached in all futures: [n=1] ‘utils’
[16:17:52.707] getGlobalsAndPackagesXApply() ... DONE
[16:17:52.708] Number of futures (= number of chunks): 1
[16:17:52.708] Launching 1 futures (chunks) ...
[16:17:52.708] Chunk #1 of 1 ...
[16:17:52.708]  - seeds: <none>
[16:17:52.708]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:52.718] Created future:
[16:17:52.718] ClusterFuture:
[16:17:52.718] Label: ‘future_lapply-1’
[16:17:52.718] Expression:
[16:17:52.718] {
[16:17:52.718]     do.call(function(...) {
[16:17:52.718]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:52.718]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:52.718]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:52.718]             on.exit(options(oopts), add = TRUE)
[16:17:52.718]         }
[16:17:52.718]         {
[16:17:52.718]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:52.718]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:52.718]                 ...future.FUN(...future.X_jj, ...)
[16:17:52.718]             })
[16:17:52.718]         }
[16:17:52.718]     }, args = future.call.arguments)
[16:17:52.718] }
[16:17:52.718] Lazy evaluation: FALSE
[16:17:52.718] Asynchronous evaluation: TRUE
[16:17:52.718] Local evaluation: TRUE
[16:17:52.718] Environment: R_GlobalEnv
[16:17:52.718] Capture standard output: TRUE
[16:17:52.718] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:52.718] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:52.718] Packages: 1 packages (‘utils’)
[16:17:52.718] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:52.718] Resolved: FALSE
[16:17:52.718] Value: <not collected>
[16:17:52.718] Conditions captured: <none>
[16:17:52.718] Early signaling: FALSE
[16:17:52.718] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:52.718] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:52.731] Chunk #1 of 1 ... DONE
[16:17:52.731] Launching 1 futures (chunks) ... DONE
[16:17:52.731] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[16:17:52.775] future_lapply() ...
[16:17:52.776] Number of chunks: 1
[16:17:52.776] getGlobalsAndPackagesXApply() ...
[16:17:52.776]  - future.globals: TRUE
[16:17:52.779]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[16:17:52.780]  - needed namespaces: [n=1] ‘stats’
[16:17:52.780] Finding globals ... DONE
[16:17:52.780]  - use_args: TRUE
[16:17:52.780]  - Getting '...' globals ...
[16:17:52.780]    - '...' content: [n=0] 
[16:17:52.780] List of 1
[16:17:52.780]  $ ...: list()
[16:17:52.780]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.780]  - attr(*, "where")=List of 1
[16:17:52.780]   ..$ ...:<environment: 0x556b185708a0> 
[16:17:52.780]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.780]  - attr(*, "resolved")= logi TRUE
[16:17:52.780]  - attr(*, "total_size")= num NA
[16:17:52.784]  - Getting '...' globals ... DONE
[16:17:52.784] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[16:17:52.784] List of 4
[16:17:52.784]  $ ...future.FUN:function (x)  
[16:17:52.784]  $ a            : num 1
[16:17:52.784]  $ b            : num 2
[16:17:52.784]  $ ...          : list()
[16:17:52.784]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.784]  - attr(*, "where")=List of 4
[16:17:52.784]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:52.784]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:52.784]   ..$ b            :<environment: R_EmptyEnv> 
[16:17:52.784]   ..$ ...          :<environment: 0x556b185708a0> 
[16:17:52.784]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.784]  - attr(*, "resolved")= logi FALSE
[16:17:52.784]  - attr(*, "total_size")= num 3936
[16:17:52.792] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[16:17:52.792] getGlobalsAndPackagesXApply() ... DONE
[16:17:52.792] Number of futures (= number of chunks): 1
[16:17:52.792] Launching 1 futures (chunks) ...
[16:17:52.792] Chunk #1 of 1 ...
[16:17:52.792]  - Finding globals in 'X' for chunk #1 ...
[16:17:52.793]    + additional globals found: [n=0] 
[16:17:52.793]    + additional namespaces needed: [n=0] 
[16:17:52.793]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:52.793]  - seeds: <none>
[16:17:52.793]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:52.802] Created future:
[16:17:52.802] ClusterFuture:
[16:17:52.802] Label: ‘future_lapply-1’
[16:17:52.802] Expression:
[16:17:52.802] {
[16:17:52.802]     do.call(function(...) {
[16:17:52.802]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:52.802]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:52.802]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:52.802]             on.exit(options(oopts), add = TRUE)
[16:17:52.802]         }
[16:17:52.802]         {
[16:17:52.802]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:52.802]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:52.802]                 ...future.FUN(...future.X_jj, ...)
[16:17:52.802]             })
[16:17:52.802]         }
[16:17:52.802]     }, args = future.call.arguments)
[16:17:52.802] }
[16:17:52.802] Lazy evaluation: FALSE
[16:17:52.802] Asynchronous evaluation: TRUE
[16:17:52.802] Local evaluation: TRUE
[16:17:52.802] Environment: R_GlobalEnv
[16:17:52.802] Capture standard output: TRUE
[16:17:52.802] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:52.802] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:17:52.802] Packages: 2 packages (‘stats’, ‘utils’)
[16:17:52.802] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:52.802] Resolved: FALSE
[16:17:52.802] Value: <not collected>
[16:17:52.802] Conditions captured: <none>
[16:17:52.802] Early signaling: FALSE
[16:17:52.802] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:52.802] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:52.813] Chunk #1 of 1 ... DONE
[16:17:52.813] Launching 1 futures (chunks) ... DONE
[16:17:52.814] Resolving 1 futures (chunks) ...
[16:17:52.856]  - Number of value chunks collected: 1
[16:17:52.856] Resolving 1 futures (chunks) ... DONE
[16:17:52.856] Reducing values from 1 chunks ...
[16:17:52.856]  - Number of values collected after concatenation: 1
[16:17:52.856]  - Number of values expected: 1
[16:17:52.856] Reducing values from 1 chunks ... DONE
[16:17:52.856] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[16:17:52.857] future_lapply() ...
[16:17:52.857] Number of chunks: 1
[16:17:52.857] getGlobalsAndPackagesXApply() ...
[16:17:52.857]  - future.globals: ‘a’, ‘b’
[16:17:52.858]  - use_args: TRUE
[16:17:52.858] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:17:52.858] List of 4
[16:17:52.858]  $ a            : num 1
[16:17:52.858]  $ b            : num 2
[16:17:52.858]  $ ...future.FUN:function (x)  
[16:17:52.858]  $ ...          : list()
[16:17:52.858]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.858]  - attr(*, "where")=List of 4
[16:17:52.858]   ..$ a            :<environment: R_GlobalEnv> 
[16:17:52.858]   ..$ b            :<environment: R_GlobalEnv> 
[16:17:52.858]   ..$ ...future.FUN:<environment: 0x556b174f9740> 
[16:17:52.858]   ..$ ...          :<environment: 0x556b174f9740> 
[16:17:52.858]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.858]  - attr(*, "resolved")= logi FALSE
[16:17:52.858]  - attr(*, "total_size")= num NA
[16:17:52.862] Packages to be attached in all futures: [n=1] ‘utils’
[16:17:52.862] getGlobalsAndPackagesXApply() ... DONE
[16:17:52.862] Number of futures (= number of chunks): 1
[16:17:52.862] Launching 1 futures (chunks) ...
[16:17:52.862] Chunk #1 of 1 ...
[16:17:52.862]  - seeds: <none>
[16:17:52.862]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:52.872] Created future:
[16:17:52.872] ClusterFuture:
[16:17:52.872] Label: ‘future_lapply-1’
[16:17:52.872] Expression:
[16:17:52.872] {
[16:17:52.872]     do.call(function(...) {
[16:17:52.872]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:52.872]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:52.872]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:52.872]             on.exit(options(oopts), add = TRUE)
[16:17:52.872]         }
[16:17:52.872]         {
[16:17:52.872]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:52.872]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:52.872]                 ...future.FUN(...future.X_jj, ...)
[16:17:52.872]             })
[16:17:52.872]         }
[16:17:52.872]     }, args = future.call.arguments)
[16:17:52.872] }
[16:17:52.872] Lazy evaluation: FALSE
[16:17:52.872] Asynchronous evaluation: TRUE
[16:17:52.872] Local evaluation: TRUE
[16:17:52.872] Environment: R_GlobalEnv
[16:17:52.872] Capture standard output: TRUE
[16:17:52.872] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:52.872] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:17:52.872] Packages: 1 packages (‘utils’)
[16:17:52.872] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:52.872] Resolved: FALSE
[16:17:52.872] Value: <not collected>
[16:17:52.872] Conditions captured: <none>
[16:17:52.872] Early signaling: FALSE
[16:17:52.872] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:52.872] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:52.883] Chunk #1 of 1 ... DONE
[16:17:52.883] Launching 1 futures (chunks) ... DONE
[16:17:52.883] Resolving 1 futures (chunks) ...
[16:17:52.915]  - Number of value chunks collected: 1
[16:17:52.915] Resolving 1 futures (chunks) ... DONE
[16:17:52.915] Reducing values from 1 chunks ...
[16:17:52.915]  - Number of values collected after concatenation: 1
[16:17:52.915]  - Number of values expected: 1
[16:17:52.915] Reducing values from 1 chunks ... DONE
[16:17:52.915] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[16:17:52.915] future_lapply() ...
[16:17:52.916] Number of chunks: 1
[16:17:52.916] getGlobalsAndPackagesXApply() ...
[16:17:52.917]  - future.globals: <name-value list> with names ‘2’, ‘3’
[16:17:52.917]  - use_args: TRUE
[16:17:52.917]  - Getting '...' globals ...
[16:17:52.917]    - '...' content: [n=0] 
[16:17:52.917] List of 1
[16:17:52.917]  $ ...: list()
[16:17:52.917]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.917]  - attr(*, "where")=List of 1
[16:17:52.917]   ..$ ...:<environment: 0x556b1579aae0> 
[16:17:52.917]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.917]  - attr(*, "resolved")= logi TRUE
[16:17:52.917]  - attr(*, "total_size")= num NA
[16:17:52.920]  - Getting '...' globals ... DONE
[16:17:52.920] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:17:52.920] List of 4
[16:17:52.920]  $ a            : num 2
[16:17:52.920]  $ b            : num 3
[16:17:52.920]  $ ...future.FUN:function (x)  
[16:17:52.920]  $ ...          : list()
[16:17:52.920]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.920]  - attr(*, "where")=List of 4
[16:17:52.920]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:52.920]   ..$ b            :<environment: R_EmptyEnv> 
[16:17:52.920]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:17:52.920]   ..$ ...          :<environment: 0x556b1579aae0> 
[16:17:52.920]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.920]  - attr(*, "resolved")= logi FALSE
[16:17:52.920]  - attr(*, "total_size")= num NA
[16:17:52.924] Packages to be attached in all futures: [n=1] ‘utils’
[16:17:52.924] getGlobalsAndPackagesXApply() ... DONE
[16:17:52.924] Number of futures (= number of chunks): 1
[16:17:52.924] Launching 1 futures (chunks) ...
[16:17:52.924] Chunk #1 of 1 ...
[16:17:52.925]  - seeds: <none>
[16:17:52.925]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:52.934] Created future:
[16:17:52.934] ClusterFuture:
[16:17:52.934] Label: ‘future_lapply-1’
[16:17:52.934] Expression:
[16:17:52.934] {
[16:17:52.934]     do.call(function(...) {
[16:17:52.934]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:52.934]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:52.934]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:52.934]             on.exit(options(oopts), add = TRUE)
[16:17:52.934]         }
[16:17:52.934]         {
[16:17:52.934]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:52.934]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:52.934]                 ...future.FUN(...future.X_jj, ...)
[16:17:52.934]             })
[16:17:52.934]         }
[16:17:52.934]     }, args = future.call.arguments)
[16:17:52.934] }
[16:17:52.934] Lazy evaluation: FALSE
[16:17:52.934] Asynchronous evaluation: TRUE
[16:17:52.934] Local evaluation: TRUE
[16:17:52.934] Environment: R_GlobalEnv
[16:17:52.934] Capture standard output: TRUE
[16:17:52.934] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:52.934] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:17:52.934] Packages: 1 packages (‘utils’)
[16:17:52.934] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:52.934] Resolved: FALSE
[16:17:52.934] Value: <not collected>
[16:17:52.934] Conditions captured: <none>
[16:17:52.934] Early signaling: FALSE
[16:17:52.934] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:52.934] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:52.946] Chunk #1 of 1 ... DONE
[16:17:52.946] Launching 1 futures (chunks) ... DONE
[16:17:52.946] Resolving 1 futures (chunks) ...
[16:17:52.988]  - Number of value chunks collected: 1
[16:17:52.988] Resolving 1 futures (chunks) ... DONE
[16:17:52.988] Reducing values from 1 chunks ...
[16:17:52.988]  - Number of values collected after concatenation: 1
[16:17:52.989]  - Number of values expected: 1
[16:17:52.989] Reducing values from 1 chunks ... DONE
[16:17:52.989] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[16:17:52.989] future_lapply() ...
[16:17:52.990] Number of chunks: 1
[16:17:52.990] getGlobalsAndPackagesXApply() ...
[16:17:52.990]  - future.globals: FALSE
[16:17:52.991]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[16:17:52.991]  - needed namespaces: [n=0] 
[16:17:52.991] Finding globals ... DONE
[16:17:52.991]  - use_args: TRUE
[16:17:52.991]  - Getting '...' globals ...
[16:17:52.992]    - '...' content: [n=0] 
[16:17:52.992] List of 1
[16:17:52.992]  $ ...: list()
[16:17:52.992]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.992]  - attr(*, "where")=List of 1
[16:17:52.992]   ..$ ...:<environment: 0x556b18574f78> 
[16:17:52.992]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.992]  - attr(*, "resolved")= logi TRUE
[16:17:52.992]  - attr(*, "total_size")= num NA
[16:17:52.994]  - Getting '...' globals ... DONE
[16:17:52.994] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:17:52.994] List of 4
[16:17:52.994]  $ d                    : num 42
[16:17:52.994]  $ ...future.FUN        :function (x)  
[16:17:52.994]  $ future.call.arguments: list()
[16:17:52.994]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.994]  $ ...                  : list()
[16:17:52.994]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:52.994]  - attr(*, "where")=List of 4
[16:17:52.994]   ..$ d                    :<environment: R_EmptyEnv> 
[16:17:52.994]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:17:52.994]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:17:52.994]   ..$ ...                  :<environment: 0x556b18574f78> 
[16:17:52.994]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:52.994]  - attr(*, "resolved")= logi FALSE
[16:17:52.994]  - attr(*, "total_size")= num 784
[16:17:52.998] Packages to be attached in all futures: [n=0] 
[16:17:52.998] getGlobalsAndPackagesXApply() ... DONE
[16:17:52.998] Number of futures (= number of chunks): 1
[16:17:52.998] Launching 1 futures (chunks) ...
[16:17:52.999] Chunk #1 of 1 ...
[16:17:52.999]  - seeds: <none>
[16:17:52.999]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.009] Created future:
[16:17:53.009] ClusterFuture:
[16:17:53.009] Label: ‘future_lapply-1’
[16:17:53.009] Expression:
[16:17:53.009] {
[16:17:53.009]     do.call(function(...) {
[16:17:53.009]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.009]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.009]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.009]             on.exit(options(oopts), add = TRUE)
[16:17:53.009]         }
[16:17:53.009]         {
[16:17:53.009]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.009]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.009]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.009]             })
[16:17:53.009]         }
[16:17:53.009]     }, args = future.call.arguments)
[16:17:53.009] }
[16:17:53.009] Lazy evaluation: FALSE
[16:17:53.009] Asynchronous evaluation: TRUE
[16:17:53.009] Local evaluation: TRUE
[16:17:53.009] Environment: R_GlobalEnv
[16:17:53.009] Capture standard output: TRUE
[16:17:53.009] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.009] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.009] Packages: <none>
[16:17:53.009] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.009] Resolved: FALSE
[16:17:53.009] Value: <not collected>
[16:17:53.009] Conditions captured: <none>
[16:17:53.009] Early signaling: FALSE
[16:17:53.009] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.009] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.021] Chunk #1 of 1 ... DONE
[16:17:53.021] Launching 1 futures (chunks) ... DONE
[16:17:53.021] Resolving 1 futures (chunks) ...
[16:17:53.063]  - Number of value chunks collected: 1
[16:17:53.063] Resolving 1 futures (chunks) ... DONE
[16:17:53.063] Reducing values from 1 chunks ...
[16:17:53.063]  - Number of values collected after concatenation: 2
[16:17:53.063]  - Number of values expected: 2
[16:17:53.063] Reducing values from 1 chunks ... DONE
[16:17:53.063] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[16:17:53.064] future_lapply() ...
[16:17:53.064] Number of chunks: 1
[16:17:53.064] getGlobalsAndPackagesXApply() ...
[16:17:53.065]  - future.globals: TRUE
[16:17:53.066]  - globals found/used: [n=1] ‘FUN’
[16:17:53.066]  - needed namespaces: [n=0] 
[16:17:53.067] Finding globals ... DONE
[16:17:53.067]  - use_args: TRUE
[16:17:53.067]  - Getting '...' globals ...
[16:17:53.067]    - '...' content: [n=0] 
[16:17:53.067] List of 1
[16:17:53.067]  $ ...: list()
[16:17:53.067]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.067]  - attr(*, "where")=List of 1
[16:17:53.067]   ..$ ...:<environment: 0x556b176945b8> 
[16:17:53.067]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.067]  - attr(*, "resolved")= logi TRUE
[16:17:53.067]  - attr(*, "total_size")= num NA
[16:17:53.070]  - Getting '...' globals ... DONE
[16:17:53.070] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.070] List of 2
[16:17:53.070]  $ ...future.FUN:function (x)  
[16:17:53.070]  $ ...          : list()
[16:17:53.070]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.070]  - attr(*, "where")=List of 2
[16:17:53.070]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.070]   ..$ ...          :<environment: 0x556b176945b8> 
[16:17:53.070]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.070]  - attr(*, "resolved")= logi FALSE
[16:17:53.070]  - attr(*, "total_size")= num 728
[16:17:53.073] Packages to be attached in all futures: [n=0] 
[16:17:53.073] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.073] Number of futures (= number of chunks): 1
[16:17:53.073] Launching 1 futures (chunks) ...
[16:17:53.073] Chunk #1 of 1 ...
[16:17:53.073]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.073]    + additional globals found: [n=0] 
[16:17:53.074]    + additional namespaces needed: [n=0] 
[16:17:53.074]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.074]  - seeds: <none>
[16:17:53.074]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.083] Created future:
[16:17:53.083] ClusterFuture:
[16:17:53.083] Label: ‘future_lapply-1’
[16:17:53.083] Expression:
[16:17:53.083] {
[16:17:53.083]     do.call(function(...) {
[16:17:53.083]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.083]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.083]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.083]             on.exit(options(oopts), add = TRUE)
[16:17:53.083]         }
[16:17:53.083]         {
[16:17:53.083]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.083]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.083]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.083]             })
[16:17:53.083]         }
[16:17:53.083]     }, args = future.call.arguments)
[16:17:53.083] }
[16:17:53.083] Lazy evaluation: FALSE
[16:17:53.083] Asynchronous evaluation: TRUE
[16:17:53.083] Local evaluation: TRUE
[16:17:53.083] Environment: R_GlobalEnv
[16:17:53.083] Capture standard output: TRUE
[16:17:53.083] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.083] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.083] Packages: <none>
[16:17:53.083] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.083] Resolved: TRUE
[16:17:53.083] Value: <not collected>
[16:17:53.083] Conditions captured: <none>
[16:17:53.083] Early signaling: FALSE
[16:17:53.083] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.083] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.085] Chunk #1 of 1 ... DONE
[16:17:53.085] Launching 1 futures (chunks) ... DONE
[16:17:53.085] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[16:17:53.136] future_lapply() ...
[16:17:53.137] Number of chunks: 1
[16:17:53.137] getGlobalsAndPackagesXApply() ...
[16:17:53.137]  - future.globals: TRUE
[16:17:53.142]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:17:53.142]  - needed namespaces: [n=0] 
[16:17:53.143] Finding globals ... DONE
[16:17:53.143]  - use_args: TRUE
[16:17:53.143]  - Getting '...' globals ...
[16:17:53.143]    - '...' content: [n=0] 
[16:17:53.143] List of 1
[16:17:53.143]  $ ...: list()
[16:17:53.143]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.143]  - attr(*, "where")=List of 1
[16:17:53.143]   ..$ ...:<environment: 0x556b18561988> 
[16:17:53.143]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.143]  - attr(*, "resolved")= logi TRUE
[16:17:53.143]  - attr(*, "total_size")= num NA
[16:17:53.146]  - Getting '...' globals ... DONE
[16:17:53.146] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:17:53.146] List of 6
[16:17:53.146]  $ ...future.FUN:function (i)  
[16:17:53.146]  $ caller       :function (a, b, FUN = call_my_add)  
[16:17:53.146]  $ args         :List of 1
[16:17:53.146]   ..$ FUN:function (a, b)  
[16:17:53.146]  $ call_my_add  :function (a, b)  
[16:17:53.146]  $ my_add       :function (a, b)  
[16:17:53.146]  $ ...          : list()
[16:17:53.146]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.146]  - attr(*, "where")=List of 6
[16:17:53.146]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.146]   ..$ caller       :<environment: R_EmptyEnv> 
[16:17:53.146]   ..$ args         :<environment: R_EmptyEnv> 
[16:17:53.146]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:17:53.146]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:17:53.146]   ..$ ...          :<environment: 0x556b18561988> 
[16:17:53.146]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.146]  - attr(*, "resolved")= logi FALSE
[16:17:53.146]  - attr(*, "total_size")= num 6664
[16:17:53.152] Packages to be attached in all futures: [n=0] 
[16:17:53.152] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.152] Number of futures (= number of chunks): 1
[16:17:53.153] Launching 1 futures (chunks) ...
[16:17:53.153] Chunk #1 of 1 ...
[16:17:53.153]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.153]    + additional globals found: [n=0] 
[16:17:53.153]    + additional namespaces needed: [n=0] 
[16:17:53.153]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.153]  - seeds: <none>
[16:17:53.153]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.159] Created future:
[16:17:53.159] SequentialFuture:
[16:17:53.159] Label: ‘future_lapply-1’
[16:17:53.159] Expression:
[16:17:53.159] {
[16:17:53.159]     do.call(function(...) {
[16:17:53.159]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.159]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.159]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.159]             on.exit(options(oopts), add = TRUE)
[16:17:53.159]         }
[16:17:53.159]         {
[16:17:53.159]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.159]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.159]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.159]             })
[16:17:53.159]         }
[16:17:53.159]     }, args = future.call.arguments)
[16:17:53.159] }
[16:17:53.159] Lazy evaluation: FALSE
[16:17:53.159] Asynchronous evaluation: FALSE
[16:17:53.159] Local evaluation: TRUE
[16:17:53.159] Environment: 0x556b18561de8
[16:17:53.159] Capture standard output: TRUE
[16:17:53.159] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.159] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:17:53.159] Packages: <none>
[16:17:53.159] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.159] Resolved: TRUE
[16:17:53.159] Value: 168 bytes of class ‘list’
[16:17:53.159] Early signaling: FALSE
[16:17:53.159] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.159] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.160] Chunk #1 of 1 ... DONE
[16:17:53.160] Launching 1 futures (chunks) ... DONE
[16:17:53.160] Resolving 1 futures (chunks) ...
[16:17:53.161]  - Number of value chunks collected: 1
[16:17:53.161] Resolving 1 futures (chunks) ... DONE
[16:17:53.161] Reducing values from 1 chunks ...
[16:17:53.161]  - Number of values collected after concatenation: 3
[16:17:53.161]  - Number of values expected: 3
[16:17:53.161] Reducing values from 1 chunks ... DONE
[16:17:53.161] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:17:53.162] future_lapply() ...
[16:17:53.165] Number of chunks: 1
[16:17:53.165] getGlobalsAndPackagesXApply() ...
[16:17:53.165]  - future.globals: TRUE
[16:17:53.168]  - globals found/used: [n=1] ‘FUN’
[16:17:53.168]  - needed namespaces: [n=0] 
[16:17:53.168] Finding globals ... DONE
[16:17:53.168]  - use_args: TRUE
[16:17:53.168]  - Getting '...' globals ...
[16:17:53.168]    - '...' content: [n=1] ‘what’
[16:17:53.168] List of 1
[16:17:53.168]  $ ...:List of 1
[16:17:53.168]   ..$ what:function (x)  
[16:17:53.168]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.168]  - attr(*, "where")=List of 1
[16:17:53.168]   ..$ ...:<environment: 0x556b170fa740> 
[16:17:53.168]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.168]  - attr(*, "resolved")= logi TRUE
[16:17:53.168]  - attr(*, "total_size")= num NA
[16:17:53.171]  - Getting '...' globals ... DONE
[16:17:53.171] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.171] List of 2
[16:17:53.171]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:53.171]  $ ...          :List of 1
[16:17:53.171]   ..$ what:function (x)  
[16:17:53.171]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.171]  - attr(*, "where")=List of 2
[16:17:53.171]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.171]   ..$ ...          :<environment: 0x556b170fa740> 
[16:17:53.171]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.171]  - attr(*, "resolved")= logi FALSE
[16:17:53.171]  - attr(*, "total_size")= num 12192
[16:17:53.174] Packages to be attached in all futures: [n=0] 
[16:17:53.174] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.175] Number of futures (= number of chunks): 1
[16:17:53.175] Launching 1 futures (chunks) ...
[16:17:53.175] Chunk #1 of 1 ...
[16:17:53.175]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.175]    + additional globals found: [n=0] 
[16:17:53.175]    + additional namespaces needed: [n=0] 
[16:17:53.175]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.176]  - seeds: <none>
[16:17:53.176]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.178] Created future:
[16:17:53.178] SequentialFuture:
[16:17:53.178] Label: ‘future_lapply-1’
[16:17:53.178] Expression:
[16:17:53.178] {
[16:17:53.178]     do.call(function(...) {
[16:17:53.178]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.178]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.178]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.178]             on.exit(options(oopts), add = TRUE)
[16:17:53.178]         }
[16:17:53.178]         {
[16:17:53.178]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.178]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.178]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.178]             })
[16:17:53.178]         }
[16:17:53.178]     }, args = future.call.arguments)
[16:17:53.178] }
[16:17:53.178] Lazy evaluation: FALSE
[16:17:53.178] Asynchronous evaluation: FALSE
[16:17:53.178] Local evaluation: TRUE
[16:17:53.178] Environment: R_GlobalEnv
[16:17:53.178] Capture standard output: TRUE
[16:17:53.178] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.178] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.178] Packages: <none>
[16:17:53.178] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.178] Resolved: TRUE
[16:17:53.178] Value: 56 bytes of class ‘list’
[16:17:53.178] Early signaling: FALSE
[16:17:53.178] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.178] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.179] Chunk #1 of 1 ... DONE
[16:17:53.179] Launching 1 futures (chunks) ... DONE
[16:17:53.179] Resolving 1 futures (chunks) ...
[16:17:53.180]  - Number of value chunks collected: 1
[16:17:53.180] Resolving 1 futures (chunks) ... DONE
[16:17:53.180] Reducing values from 1 chunks ...
[16:17:53.180]  - Number of values collected after concatenation: 1
[16:17:53.180]  - Number of values expected: 1
[16:17:53.180] Reducing values from 1 chunks ... DONE
[16:17:53.180] future_lapply() ... DONE
[16:17:53.180] future_lapply() ...
[16:17:53.181] Number of chunks: 1
[16:17:53.182] getGlobalsAndPackagesXApply() ...
[16:17:53.182]  - future.globals: TRUE
[16:17:53.184]  - globals found/used: [n=1] ‘FUN’
[16:17:53.184]  - needed namespaces: [n=0] 
[16:17:53.184] Finding globals ... DONE
[16:17:53.185]  - use_args: TRUE
[16:17:53.185]  - Getting '...' globals ...
[16:17:53.185]    - '...' content: [n=1] ‘what’
[16:17:53.185] List of 1
[16:17:53.185]  $ ...:List of 1
[16:17:53.185]   ..$ what:function (...)  
[16:17:53.185]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.185]  - attr(*, "where")=List of 1
[16:17:53.185]   ..$ ...:<environment: 0x556b182b6c70> 
[16:17:53.185]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.185]  - attr(*, "resolved")= logi TRUE
[16:17:53.185]  - attr(*, "total_size")= num NA
[16:17:53.188]  - Getting '...' globals ... DONE
[16:17:53.188] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.188] List of 2
[16:17:53.188]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:53.188]  $ ...          :List of 1
[16:17:53.188]   ..$ what:function (...)  
[16:17:53.188]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.188]  - attr(*, "where")=List of 2
[16:17:53.188]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.188]   ..$ ...          :<environment: 0x556b182b6c70> 
[16:17:53.188]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.188]  - attr(*, "resolved")= logi FALSE
[16:17:53.188]  - attr(*, "total_size")= num 12584
[16:17:53.191] Packages to be attached in all futures: [n=0] 
[16:17:53.191] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.191] Number of futures (= number of chunks): 1
[16:17:53.191] Launching 1 futures (chunks) ...
[16:17:53.191] Chunk #1 of 1 ...
[16:17:53.191]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.192]    + additional globals found: [n=0] 
[16:17:53.192]    + additional namespaces needed: [n=0] 
[16:17:53.192]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.192]  - seeds: <none>
[16:17:53.192]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.197] Created future:
[16:17:53.197] SequentialFuture:
[16:17:53.197] Label: ‘future_lapply-1’
[16:17:53.197] Expression:
[16:17:53.197] {
[16:17:53.197]     do.call(function(...) {
[16:17:53.197]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.197]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.197]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.197]             on.exit(options(oopts), add = TRUE)
[16:17:53.197]         }
[16:17:53.197]         {
[16:17:53.197]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.197]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.197]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.197]             })
[16:17:53.197]         }
[16:17:53.197]     }, args = future.call.arguments)
[16:17:53.197] }
[16:17:53.197] Lazy evaluation: FALSE
[16:17:53.197] Asynchronous evaluation: FALSE
[16:17:53.197] Local evaluation: TRUE
[16:17:53.197] Environment: R_GlobalEnv
[16:17:53.197] Capture standard output: TRUE
[16:17:53.197] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.197] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.197] Packages: <none>
[16:17:53.197] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.197] Resolved: TRUE
[16:17:53.197] Value: 56 bytes of class ‘list’
[16:17:53.197] Early signaling: FALSE
[16:17:53.197] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.197] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.198] Chunk #1 of 1 ... DONE
[16:17:53.198] Launching 1 futures (chunks) ... DONE
[16:17:53.198] Resolving 1 futures (chunks) ...
[16:17:53.198]  - Number of value chunks collected: 1
[16:17:53.198] Resolving 1 futures (chunks) ... DONE
[16:17:53.199] Reducing values from 1 chunks ...
[16:17:53.199]  - Number of values collected after concatenation: 1
[16:17:53.199]  - Number of values expected: 1
[16:17:53.199] Reducing values from 1 chunks ... DONE
[16:17:53.199] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:17:53.199] future_lapply() ...
[16:17:53.200] Number of chunks: 1
[16:17:53.200] getGlobalsAndPackagesXApply() ...
[16:17:53.200]  - future.globals: TRUE
[16:17:53.201]  - globals found/used: [n=1] ‘FUN’
[16:17:53.202]  - needed namespaces: [n=0] 
[16:17:53.202] Finding globals ... DONE
[16:17:53.202]  - use_args: TRUE
[16:17:53.202]  - Getting '...' globals ...
[16:17:53.202]    - '...' content: [n=1] ‘b’
[16:17:53.202] List of 1
[16:17:53.202]  $ ...:List of 1
[16:17:53.202]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:53.202]   .. ..$ a: int [1:2] 1 2
[16:17:53.202]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.202]  - attr(*, "where")=List of 1
[16:17:53.202]   ..$ ...:<environment: 0x556b17805960> 
[16:17:53.202]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.202]  - attr(*, "resolved")= logi TRUE
[16:17:53.202]  - attr(*, "total_size")= num NA
[16:17:53.205]  - Getting '...' globals ... DONE
[16:17:53.206] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.206] List of 2
[16:17:53.206]  $ ...future.FUN:function (a, b)  
[16:17:53.206]  $ ...          :List of 1
[16:17:53.206]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:53.206]   .. ..$ a: int [1:2] 1 2
[16:17:53.206]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.206]  - attr(*, "where")=List of 2
[16:17:53.206]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.206]   ..$ ...          :<environment: 0x556b17805960> 
[16:17:53.206]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.206]  - attr(*, "resolved")= logi FALSE
[16:17:53.206]  - attr(*, "total_size")= num 1440
[16:17:53.209] Packages to be attached in all futures: [n=0] 
[16:17:53.209] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.209] Number of futures (= number of chunks): 1
[16:17:53.209] Launching 1 futures (chunks) ...
[16:17:53.209] Chunk #1 of 1 ...
[16:17:53.209]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.210]    + additional globals found: [n=0] 
[16:17:53.210]    + additional namespaces needed: [n=0] 
[16:17:53.210]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.210]  - seeds: <none>
[16:17:53.210]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.212] Created future:
[16:17:53.212] SequentialFuture:
[16:17:53.212] Label: ‘future_lapply-1’
[16:17:53.212] Expression:
[16:17:53.212] {
[16:17:53.212]     do.call(function(...) {
[16:17:53.212]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.212]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.212]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.212]             on.exit(options(oopts), add = TRUE)
[16:17:53.212]         }
[16:17:53.212]         {
[16:17:53.212]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.212]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.212]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.212]             })
[16:17:53.212]         }
[16:17:53.212]     }, args = future.call.arguments)
[16:17:53.212] }
[16:17:53.212] Lazy evaluation: FALSE
[16:17:53.212] Asynchronous evaluation: FALSE
[16:17:53.212] Local evaluation: TRUE
[16:17:53.212] Environment: R_GlobalEnv
[16:17:53.212] Capture standard output: TRUE
[16:17:53.212] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.212] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.212] Packages: <none>
[16:17:53.212] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.212] Resolved: TRUE
[16:17:53.212] Value: 112 bytes of class ‘list’
[16:17:53.212] Early signaling: FALSE
[16:17:53.212] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.212] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.213] Chunk #1 of 1 ... DONE
[16:17:53.213] Launching 1 futures (chunks) ... DONE
[16:17:53.214] Resolving 1 futures (chunks) ...
[16:17:53.214]  - Number of value chunks collected: 1
[16:17:53.214] Resolving 1 futures (chunks) ... DONE
[16:17:53.214] Reducing values from 1 chunks ...
[16:17:53.214]  - Number of values collected after concatenation: 1
[16:17:53.214]  - Number of values expected: 1
[16:17:53.214] Reducing values from 1 chunks ... DONE
[16:17:53.214] future_lapply() ... DONE
[16:17:53.215] future_lapply() ...
[16:17:53.215] Number of chunks: 1
[16:17:53.215] getGlobalsAndPackagesXApply() ...
[16:17:53.215]  - future.globals: TRUE
[16:17:53.217]  - globals found/used: [n=1] ‘FUN’
[16:17:53.217]  - needed namespaces: [n=0] 
[16:17:53.217] Finding globals ... DONE
[16:17:53.217]  - use_args: TRUE
[16:17:53.217]  - Getting '...' globals ...
[16:17:53.217]    - '...' content: [n=1] ‘b’
[16:17:53.218] List of 1
[16:17:53.218]  $ ...:List of 1
[16:17:53.218]   ..$ b:<environment: 0x556b14f93f08> 
[16:17:53.218]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.218]  - attr(*, "where")=List of 1
[16:17:53.218]   ..$ ...:<environment: 0x556b14f94b48> 
[16:17:53.218]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.218]  - attr(*, "resolved")= logi TRUE
[16:17:53.218]  - attr(*, "total_size")= num NA
[16:17:53.220]  - Getting '...' globals ... DONE
[16:17:53.220] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.220] List of 2
[16:17:53.220]  $ ...future.FUN:function (a, b)  
[16:17:53.220]  $ ...          :List of 1
[16:17:53.220]   ..$ b:<environment: 0x556b14f93f08> 
[16:17:53.220]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.220]  - attr(*, "where")=List of 2
[16:17:53.220]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.220]   ..$ ...          :<environment: 0x556b14f94b48> 
[16:17:53.220]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.220]  - attr(*, "resolved")= logi FALSE
[16:17:53.220]  - attr(*, "total_size")= num 1440
[16:17:53.223] Packages to be attached in all futures: [n=0] 
[16:17:53.223] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.224] Number of futures (= number of chunks): 1
[16:17:53.224] Launching 1 futures (chunks) ...
[16:17:53.224] Chunk #1 of 1 ...
[16:17:53.224]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.224]    + additional globals found: [n=0] 
[16:17:53.224]    + additional namespaces needed: [n=0] 
[16:17:53.224]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.224]  - seeds: <none>
[16:17:53.224]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.227] Created future:
[16:17:53.227] SequentialFuture:
[16:17:53.227] Label: ‘future_lapply-1’
[16:17:53.227] Expression:
[16:17:53.227] {
[16:17:53.227]     do.call(function(...) {
[16:17:53.227]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.227]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.227]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.227]             on.exit(options(oopts), add = TRUE)
[16:17:53.227]         }
[16:17:53.227]         {
[16:17:53.227]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.227]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.227]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.227]             })
[16:17:53.227]         }
[16:17:53.227]     }, args = future.call.arguments)
[16:17:53.227] }
[16:17:53.227] Lazy evaluation: FALSE
[16:17:53.227] Asynchronous evaluation: FALSE
[16:17:53.227] Local evaluation: TRUE
[16:17:53.227] Environment: R_GlobalEnv
[16:17:53.227] Capture standard output: TRUE
[16:17:53.227] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.227] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.227] Packages: <none>
[16:17:53.227] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.227] Resolved: TRUE
[16:17:53.227] Value: 120 bytes of class ‘list’
[16:17:53.227] Early signaling: FALSE
[16:17:53.227] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.227] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.228] Chunk #1 of 1 ... DONE
[16:17:53.228] Launching 1 futures (chunks) ... DONE
[16:17:53.228] Resolving 1 futures (chunks) ...
[16:17:53.228]  - Number of value chunks collected: 1
[16:17:53.228] Resolving 1 futures (chunks) ... DONE
[16:17:53.228] Reducing values from 1 chunks ...
[16:17:53.229]  - Number of values collected after concatenation: 1
[16:17:53.229]  - Number of values expected: 1
[16:17:53.229] Reducing values from 1 chunks ... DONE
[16:17:53.229] future_lapply() ... DONE
[16:17:53.229] future_lapply() ...
[16:17:53.229] Number of chunks: 1
[16:17:53.229] getGlobalsAndPackagesXApply() ...
[16:17:53.230]  - future.globals: TRUE
[16:17:53.232]  - globals found/used: [n=1] ‘FUN’
[16:17:53.232]  - needed namespaces: [n=0] 
[16:17:53.232] Finding globals ... DONE
[16:17:53.232]  - use_args: TRUE
[16:17:53.232]  - Getting '...' globals ...
[16:17:53.232]    - '...' content: [n=1] ‘b’
[16:17:53.232] List of 1
[16:17:53.232]  $ ...:List of 1
[16:17:53.232]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:53.232]   .. .. ..@ slots     :List of 4
[16:17:53.232]   .. .. .. ..$ .Data  : chr "function"
[16:17:53.232]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. ..$ target : chr "signature"
[16:17:53.232]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. ..$ defined: chr "signature"
[16:17:53.232]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. ..$ generic: chr "character"
[16:17:53.232]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. ..@ contains  :List of 3
[16:17:53.232]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.232]   .. .. ..@ virtual   : logi FALSE
[16:17:53.232]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:53.232]  list()
[16:17:53.232]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.232]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.232]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.232]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.232]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.232]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.232]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.232]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.232]   .. .. .. .. ..$ generic: chr(0) 
[16:17:53.232]   .. .. ..@ validity  : NULL
[16:17:53.232]   .. .. ..@ access    : list()
[16:17:53.232]   .. .. ..@ className : chr "MethodDefinition"
[16:17:53.232]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. ..@ subclasses:List of 7
[16:17:53.232]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.232]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.232]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.232]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.232]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.232]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.232]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.232]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.232]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.232]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.232]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.232]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.232]   .. .. ..@ versionKey:<externalptr> 
[16:17:53.232]   .. .. ..@ sealed    : logi TRUE
[16:17:53.232]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.232]  - attr(*, "where")=List of 1
[16:17:53.232]   ..$ ...:<environment: 0x556b184f6f38> 
[16:17:53.232]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.232]  - attr(*, "resolved")= logi TRUE
[16:17:53.232]  - attr(*, "total_size")= num NA
[16:17:53.280]  - Getting '...' globals ... DONE
[16:17:53.281] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.281] List of 2
[16:17:53.281]  $ ...future.FUN:function (a, b)  
[16:17:53.281]  $ ...          :List of 1
[16:17:53.281]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:53.281]   .. .. ..@ slots     :List of 4
[16:17:53.281]   .. .. .. ..$ .Data  : chr "function"
[16:17:53.281]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. ..$ target : chr "signature"
[16:17:53.281]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. ..$ defined: chr "signature"
[16:17:53.281]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. ..$ generic: chr "character"
[16:17:53.281]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. ..@ contains  :List of 3
[16:17:53.281]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.281]   .. .. ..@ virtual   : logi FALSE
[16:17:53.281]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:53.281]  list()
[16:17:53.281]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.281]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.281]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.281]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.281]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.281]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.281]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.281]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.281]   .. .. .. .. ..$ generic: chr(0) 
[16:17:53.281]   .. .. ..@ validity  : NULL
[16:17:53.281]   .. .. ..@ access    : list()
[16:17:53.281]   .. .. ..@ className : chr "MethodDefinition"
[16:17:53.281]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. ..@ subclasses:List of 7
[16:17:53.281]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.281]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.281]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.281]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.281]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.281]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.281]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.281]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.281]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.281]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.281]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.281]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.281]   .. .. ..@ versionKey:<externalptr> 
[16:17:53.281]   .. .. ..@ sealed    : logi TRUE
[16:17:53.281]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.281]  - attr(*, "where")=List of 2
[16:17:53.281]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.281]   ..$ ...          :<environment: 0x556b184f6f38> 
[16:17:53.281]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.281]  - attr(*, "resolved")= logi FALSE
[16:17:53.281]  - attr(*, "total_size")= num 312512
[16:17:53.326] Packages to be attached in all futures: [n=0] 
[16:17:53.327] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.327] Number of futures (= number of chunks): 1
[16:17:53.327] Launching 1 futures (chunks) ...
[16:17:53.327] Chunk #1 of 1 ...
[16:17:53.327]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.327]    + additional globals found: [n=0] 
[16:17:53.327]    + additional namespaces needed: [n=0] 
[16:17:53.328]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.328]  - seeds: <none>
[16:17:53.328]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.330] Created future:
[16:17:53.330] SequentialFuture:
[16:17:53.330] Label: ‘future_lapply-1’
[16:17:53.330] Expression:
[16:17:53.330] {
[16:17:53.330]     do.call(function(...) {
[16:17:53.330]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.330]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.330]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.330]             on.exit(options(oopts), add = TRUE)
[16:17:53.330]         }
[16:17:53.330]         {
[16:17:53.330]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.330]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.330]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.330]             })
[16:17:53.330]         }
[16:17:53.330]     }, args = future.call.arguments)
[16:17:53.330] }
[16:17:53.330] Lazy evaluation: FALSE
[16:17:53.330] Asynchronous evaluation: FALSE
[16:17:53.330] Local evaluation: TRUE
[16:17:53.330] Environment: R_GlobalEnv
[16:17:53.330] Capture standard output: TRUE
[16:17:53.330] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.330] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.330] Packages: <none>
[16:17:53.330] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.330] Resolved: TRUE
[16:17:53.330] Value: 112 bytes of class ‘list’
[16:17:53.330] Early signaling: FALSE
[16:17:53.330] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.330] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.331] Chunk #1 of 1 ... DONE
[16:17:53.331] Launching 1 futures (chunks) ... DONE
[16:17:53.332] Resolving 1 futures (chunks) ...
[16:17:53.332]  - Number of value chunks collected: 1
[16:17:53.332] Resolving 1 futures (chunks) ... DONE
[16:17:53.332] Reducing values from 1 chunks ...
[16:17:53.332]  - Number of values collected after concatenation: 1
[16:17:53.332]  - Number of values expected: 1
[16:17:53.332] Reducing values from 1 chunks ... DONE
[16:17:53.332] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:17:53.334] future_lapply() ...
[16:17:53.335] Number of chunks: 1
[16:17:53.335] getGlobalsAndPackagesXApply() ...
[16:17:53.335]  - future.globals: TRUE
[16:17:53.336]  - globals found/used: [n=1] ‘FUN’
[16:17:53.336]  - needed namespaces: [n=0] 
[16:17:53.337] Finding globals ... DONE
[16:17:53.337]  - use_args: TRUE
[16:17:53.337]  - Getting '...' globals ...
[16:17:53.337]    - '...' content: [n=0] 
[16:17:53.337] List of 1
[16:17:53.337]  $ ...: list()
[16:17:53.337]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.337]  - attr(*, "where")=List of 1
[16:17:53.337]   ..$ ...:<environment: 0x556b16a78818> 
[16:17:53.337]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.337]  - attr(*, "resolved")= logi TRUE
[16:17:53.337]  - attr(*, "total_size")= num NA
[16:17:53.340]  - Getting '...' globals ... DONE
[16:17:53.340] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.340] List of 2
[16:17:53.340]  $ ...future.FUN:function (f)  
[16:17:53.340]  $ ...          : list()
[16:17:53.340]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.340]  - attr(*, "where")=List of 2
[16:17:53.340]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.340]   ..$ ...          :<environment: 0x556b16a78818> 
[16:17:53.340]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.340]  - attr(*, "resolved")= logi FALSE
[16:17:53.340]  - attr(*, "total_size")= num 1008
[16:17:53.342] Packages to be attached in all futures: [n=0] 
[16:17:53.343] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.343] Number of futures (= number of chunks): 1
[16:17:53.343] Launching 1 futures (chunks) ...
[16:17:53.343] Chunk #1 of 1 ...
[16:17:53.343]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.345]    + additional globals found: [n=2] ‘a’, ‘b’
[16:17:53.345]    + additional namespaces needed: [n=1] ‘tools’
[16:17:53.346]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.346]  - seeds: <none>
[16:17:53.346]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:17:53.349] Created future:
[16:17:53.349] SequentialFuture:
[16:17:53.349] Label: ‘future_lapply-1’
[16:17:53.349] Expression:
[16:17:53.349] {
[16:17:53.349]     do.call(function(...) {
[16:17:53.349]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.349]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.349]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.349]             on.exit(options(oopts), add = TRUE)
[16:17:53.349]         }
[16:17:53.349]         {
[16:17:53.349]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.349]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.349]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.349]             })
[16:17:53.349]         }
[16:17:53.349]     }, args = future.call.arguments)
[16:17:53.349] }
[16:17:53.349] Lazy evaluation: FALSE
[16:17:53.349] Asynchronous evaluation: FALSE
[16:17:53.349] Local evaluation: TRUE
[16:17:53.349] Environment: R_GlobalEnv
[16:17:53.349] Capture standard output: TRUE
[16:17:53.349] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.349] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:17:53.349] Packages: 1 packages (‘tools’)
[16:17:53.349] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.349] Resolved: TRUE
[16:17:53.349] Value: 224 bytes of class ‘list’
[16:17:53.349] Early signaling: FALSE
[16:17:53.349] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.349] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.350] Chunk #1 of 1 ... DONE
[16:17:53.350] Launching 1 futures (chunks) ... DONE
[16:17:53.350] Resolving 1 futures (chunks) ...
[16:17:53.350]  - Number of value chunks collected: 1
[16:17:53.350] Resolving 1 futures (chunks) ... DONE
[16:17:53.350] Reducing values from 1 chunks ...
[16:17:53.351]  - Number of values collected after concatenation: 4
[16:17:53.351]  - Number of values expected: 4
[16:17:53.351] Reducing values from 1 chunks ... DONE
[16:17:53.351] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:17:53.353] future_lapply() ...
[16:17:53.354] Number of chunks: 1
[16:17:53.354] getGlobalsAndPackagesXApply() ...
[16:17:53.354]  - future.globals: TRUE
[16:17:53.356]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:17:53.357]  - needed namespaces: [n=0] 
[16:17:53.357] Finding globals ... DONE
[16:17:53.357]  - use_args: TRUE
[16:17:53.357]  - Getting '...' globals ...
[16:17:53.357]    - '...' content: [n=0] 
[16:17:53.357] List of 1
[16:17:53.357]  $ ...: list()
[16:17:53.357]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.357]  - attr(*, "where")=List of 1
[16:17:53.357]   ..$ ...:<environment: 0x556b18579100> 
[16:17:53.357]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.357]  - attr(*, "resolved")= logi TRUE
[16:17:53.357]  - attr(*, "total_size")= num NA
[16:17:53.360]  - Getting '...' globals ... DONE
[16:17:53.360] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:17:53.360] List of 3
[16:17:53.360]  $ ...future.FUN        :function (x)  
[16:17:53.360]  $ future.call.arguments:List of 1
[16:17:53.360]   ..$ a: num 1
[16:17:53.360]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.360]  $ ...                  : list()
[16:17:53.360]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.360]  - attr(*, "where")=List of 3
[16:17:53.360]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:17:53.360]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:17:53.360]   ..$ ...                  :<environment: 0x556b18579100> 
[16:17:53.360]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.360]  - attr(*, "resolved")= logi FALSE
[16:17:53.360]  - attr(*, "total_size")= num 1272
[16:17:53.365] Packages to be attached in all futures: [n=0] 
[16:17:53.365] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.365] Number of futures (= number of chunks): 1
[16:17:53.365] Launching 1 futures (chunks) ...
[16:17:53.366] Chunk #1 of 1 ...
[16:17:53.366]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.366]    + additional globals found: [n=0] 
[16:17:53.366]    + additional namespaces needed: [n=0] 
[16:17:53.366]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.366]  - seeds: <none>
[16:17:53.366]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.368] Created future:
[16:17:53.369] SequentialFuture:
[16:17:53.369] Label: ‘future_lapply-1’
[16:17:53.369] Expression:
[16:17:53.369] {
[16:17:53.369]     do.call(function(...) {
[16:17:53.369]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.369]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.369]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.369]             on.exit(options(oopts), add = TRUE)
[16:17:53.369]         }
[16:17:53.369]         {
[16:17:53.369]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.369]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.369]                 ...future.FUN(...future.X_jj)
[16:17:53.369]             })
[16:17:53.369]         }
[16:17:53.369]     }, args = future.call.arguments)
[16:17:53.369] }
[16:17:53.369] Lazy evaluation: FALSE
[16:17:53.369] Asynchronous evaluation: FALSE
[16:17:53.369] Local evaluation: TRUE
[16:17:53.369] Environment: 0x556b18579480
[16:17:53.369] Capture standard output: TRUE
[16:17:53.369] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.369] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.369] Packages: <none>
[16:17:53.369] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.369] Resolved: TRUE
[16:17:53.369] Value: 56 bytes of class ‘list’
[16:17:53.369] Early signaling: FALSE
[16:17:53.369] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.369] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.370] Chunk #1 of 1 ... DONE
[16:17:53.370] Launching 1 futures (chunks) ... DONE
[16:17:53.370] Resolving 1 futures (chunks) ...
[16:17:53.370]  - Number of value chunks collected: 1
[16:17:53.370] Resolving 1 futures (chunks) ... DONE
[16:17:53.370] Reducing values from 1 chunks ...
[16:17:53.370]  - Number of values collected after concatenation: 1
[16:17:53.371]  - Number of values expected: 1
[16:17:53.371] Reducing values from 1 chunks ... DONE
[16:17:53.371] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:17:53.372] future_lapply() ...
[16:17:53.373] Number of chunks: 1
[16:17:53.373] getGlobalsAndPackagesXApply() ...
[16:17:53.373]  - future.globals: TRUE
[16:17:53.375]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:53.375]  - needed namespaces: [n=0] 
[16:17:53.375] Finding globals ... DONE
[16:17:53.375]  - use_args: TRUE
[16:17:53.375]  - Getting '...' globals ...
[16:17:53.375]    - '...' content: [n=0] 
[16:17:53.375] List of 1
[16:17:53.375]  $ ...: list()
[16:17:53.375]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.375]  - attr(*, "where")=List of 1
[16:17:53.375]   ..$ ...:<environment: 0x556b174c1f40> 
[16:17:53.375]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.375]  - attr(*, "resolved")= logi TRUE
[16:17:53.375]  - attr(*, "total_size")= num NA
[16:17:53.378]  - Getting '...' globals ... DONE
[16:17:53.378] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:53.378] List of 3
[16:17:53.378]  $ ...future.FUN:function (ii)  
[16:17:53.378]  $ a            : num 1
[16:17:53.378]  $ ...          : list()
[16:17:53.378]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.378]  - attr(*, "where")=List of 3
[16:17:53.378]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.378]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.378]   ..$ ...          :<environment: 0x556b174c1f40> 
[16:17:53.378]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.378]  - attr(*, "resolved")= logi FALSE
[16:17:53.378]  - attr(*, "total_size")= num 2984
[16:17:53.381] Packages to be attached in all futures: [n=0] 
[16:17:53.381] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.381] Number of futures (= number of chunks): 1
[16:17:53.381] Launching 1 futures (chunks) ...
[16:17:53.382] Chunk #1 of 1 ...
[16:17:53.382]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.382]    + additional globals found: [n=0] 
[16:17:53.382]    + additional namespaces needed: [n=0] 
[16:17:53.382]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.382]  - seeds: <none>
[16:17:53.382]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.385] Created future:
[16:17:53.385] SequentialFuture:
[16:17:53.385] Label: ‘future_lapply-1’
[16:17:53.385] Expression:
[16:17:53.385] {
[16:17:53.385]     do.call(function(...) {
[16:17:53.385]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.385]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.385]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.385]             on.exit(options(oopts), add = TRUE)
[16:17:53.385]         }
[16:17:53.385]         {
[16:17:53.385]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.385]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.385]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.385]             })
[16:17:53.385]         }
[16:17:53.385]     }, args = future.call.arguments)
[16:17:53.385] }
[16:17:53.385] Lazy evaluation: FALSE
[16:17:53.385] Asynchronous evaluation: FALSE
[16:17:53.385] Local evaluation: TRUE
[16:17:53.385] Environment: R_GlobalEnv
[16:17:53.385] Capture standard output: TRUE
[16:17:53.385] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.385] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.385] Packages: <none>
[16:17:53.385] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.385] Resolved: TRUE
[16:17:53.385] Value: 56 bytes of class ‘list’
[16:17:53.385] Early signaling: FALSE
[16:17:53.385] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.385] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.386] Chunk #1 of 1 ... DONE
[16:17:53.386] Launching 1 futures (chunks) ... DONE
[16:17:53.386] Resolving 1 futures (chunks) ...
[16:17:53.386]  - Number of value chunks collected: 1
[16:17:53.386] Resolving 1 futures (chunks) ... DONE
[16:17:53.386] Reducing values from 1 chunks ...
[16:17:53.386]  - Number of values collected after concatenation: 1
[16:17:53.387]  - Number of values expected: 1
[16:17:53.387] Reducing values from 1 chunks ... DONE
[16:17:53.387] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:17:53.387] future_lapply() ...
[16:17:53.388] Number of chunks: 1
[16:17:53.388] getGlobalsAndPackagesXApply() ...
[16:17:53.388]  - future.globals: TRUE
[16:17:53.390]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:53.390]  - needed namespaces: [n=0] 
[16:17:53.390] Finding globals ... DONE
[16:17:53.390]  - use_args: TRUE
[16:17:53.390]  - Getting '...' globals ...
[16:17:53.390]    - '...' content: [n=0] 
[16:17:53.391] List of 1
[16:17:53.391]  $ ...: list()
[16:17:53.391]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.391]  - attr(*, "where")=List of 1
[16:17:53.391]   ..$ ...:<environment: 0x556b15865c90> 
[16:17:53.391]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.391]  - attr(*, "resolved")= logi TRUE
[16:17:53.391]  - attr(*, "total_size")= num NA
[16:17:53.393]  - Getting '...' globals ... DONE
[16:17:53.393] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:53.393] List of 3
[16:17:53.393]  $ ...future.FUN:function (ii)  
[16:17:53.393]  $ a            : num 1
[16:17:53.393]  $ ...          : list()
[16:17:53.393]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.393]  - attr(*, "where")=List of 3
[16:17:53.393]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.393]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.393]   ..$ ...          :<environment: 0x556b15865c90> 
[16:17:53.393]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.393]  - attr(*, "resolved")= logi FALSE
[16:17:53.393]  - attr(*, "total_size")= num 2984
[16:17:53.396] Packages to be attached in all futures: [n=0] 
[16:17:53.396] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.396] Number of futures (= number of chunks): 1
[16:17:53.397] Launching 1 futures (chunks) ...
[16:17:53.397] Chunk #1 of 1 ...
[16:17:53.397]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.397]    + additional globals found: [n=0] 
[16:17:53.397]    + additional namespaces needed: [n=0] 
[16:17:53.397]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.397]  - seeds: <none>
[16:17:53.397]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.400] Created future:
[16:17:53.400] SequentialFuture:
[16:17:53.400] Label: ‘future_lapply-1’
[16:17:53.400] Expression:
[16:17:53.400] {
[16:17:53.400]     do.call(function(...) {
[16:17:53.400]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.400]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.400]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.400]             on.exit(options(oopts), add = TRUE)
[16:17:53.400]         }
[16:17:53.400]         {
[16:17:53.400]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.400]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.400]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.400]             })
[16:17:53.400]         }
[16:17:53.400]     }, args = future.call.arguments)
[16:17:53.400] }
[16:17:53.400] Lazy evaluation: FALSE
[16:17:53.400] Asynchronous evaluation: FALSE
[16:17:53.400] Local evaluation: TRUE
[16:17:53.400] Environment: R_GlobalEnv
[16:17:53.400] Capture standard output: TRUE
[16:17:53.400] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.400] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.400] Packages: <none>
[16:17:53.400] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.400] Resolved: TRUE
[16:17:53.400] Value: 56 bytes of class ‘list’
[16:17:53.400] Early signaling: FALSE
[16:17:53.400] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.400] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.401] Chunk #1 of 1 ... DONE
[16:17:53.401] Launching 1 futures (chunks) ... DONE
[16:17:53.401] Resolving 1 futures (chunks) ...
[16:17:53.401]  - Number of value chunks collected: 1
[16:17:53.401] Resolving 1 futures (chunks) ... DONE
[16:17:53.401] Reducing values from 1 chunks ...
[16:17:53.401]  - Number of values collected after concatenation: 1
[16:17:53.402]  - Number of values expected: 1
[16:17:53.402] Reducing values from 1 chunks ... DONE
[16:17:53.402] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:17:53.402] future_lapply() ...
[16:17:53.402] Number of chunks: 1
[16:17:53.402] getGlobalsAndPackagesXApply() ...
[16:17:53.402]  - future.globals: <name-value list> with names ‘42’
[16:17:53.403]  - use_args: TRUE
[16:17:53.403]  - Getting '...' globals ...
[16:17:53.403]    - '...' content: [n=0] 
[16:17:53.403] List of 1
[16:17:53.403]  $ ...: list()
[16:17:53.403]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.403]  - attr(*, "where")=List of 1
[16:17:53.403]   ..$ ...:<environment: 0x556b1881b9c0> 
[16:17:53.403]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.403]  - attr(*, "resolved")= logi TRUE
[16:17:53.403]  - attr(*, "total_size")= num NA
[16:17:53.406]  - Getting '...' globals ... DONE
[16:17:53.406] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:17:53.406] List of 3
[16:17:53.406]  $ a            : num 42
[16:17:53.406]  $ ...future.FUN:function (x)  
[16:17:53.406]  $ ...          : list()
[16:17:53.406]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.406]  - attr(*, "where")=List of 3
[16:17:53.406]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.406]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:17:53.406]   ..$ ...          :<environment: 0x556b1881b9c0> 
[16:17:53.406]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.406]  - attr(*, "resolved")= logi FALSE
[16:17:53.406]  - attr(*, "total_size")= num NA
[16:17:53.410] Packages to be attached in all futures: [n=0] 
[16:17:53.410] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.411] Number of futures (= number of chunks): 1
[16:17:53.411] Launching 1 futures (chunks) ...
[16:17:53.411] Chunk #1 of 1 ...
[16:17:53.411]  - seeds: <none>
[16:17:53.411]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.414] Created future:
[16:17:53.414] SequentialFuture:
[16:17:53.414] Label: ‘future_lapply-1’
[16:17:53.414] Expression:
[16:17:53.414] {
[16:17:53.414]     do.call(function(...) {
[16:17:53.414]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.414]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.414]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.414]             on.exit(options(oopts), add = TRUE)
[16:17:53.414]         }
[16:17:53.414]         {
[16:17:53.414]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.414]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.414]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.414]             })
[16:17:53.414]         }
[16:17:53.414]     }, args = future.call.arguments)
[16:17:53.414] }
[16:17:53.414] Lazy evaluation: FALSE
[16:17:53.414] Asynchronous evaluation: FALSE
[16:17:53.414] Local evaluation: TRUE
[16:17:53.414] Environment: R_GlobalEnv
[16:17:53.414] Capture standard output: TRUE
[16:17:53.414] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.414] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.414] Packages: <none>
[16:17:53.414] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.414] Resolved: TRUE
[16:17:53.414] Value: 56 bytes of class ‘list’
[16:17:53.414] Early signaling: FALSE
[16:17:53.414] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.414] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:17:53.415] Chunk #1 of 1 ... DONE
[16:17:53.415] Launching 1 futures (chunks) ... DONE
[16:17:53.415] Resolving 1 futures (chunks) ...
[16:17:53.415]  - Number of value chunks collected: 1
[16:17:53.415] Resolving 1 futures (chunks) ... DONE
[16:17:53.415] Reducing values from 1 chunks ...
[16:17:53.416]  - Number of values collected after concatenation: 1
[16:17:53.416]  - Number of values expected: 1
[16:17:53.416] Reducing values from 1 chunks ... DONE
[16:17:53.416] future_lapply() ... DONE
List of 1
 $ : num 42
[16:17:53.423] future_lapply() ...
[16:17:53.428] Number of chunks: 2
[16:17:53.428] getGlobalsAndPackagesXApply() ...
[16:17:53.428]  - future.globals: TRUE
[16:17:53.433]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:17:53.433]  - needed namespaces: [n=0] 
[16:17:53.433] Finding globals ... DONE
[16:17:53.433]  - use_args: TRUE
[16:17:53.433]  - Getting '...' globals ...
[16:17:53.434]    - '...' content: [n=0] 
[16:17:53.434] List of 1
[16:17:53.434]  $ ...: list()
[16:17:53.434]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.434]  - attr(*, "where")=List of 1
[16:17:53.434]   ..$ ...:<environment: 0x556b170226f8> 
[16:17:53.434]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.434]  - attr(*, "resolved")= logi TRUE
[16:17:53.434]  - attr(*, "total_size")= num NA
[16:17:53.436]  - Getting '...' globals ... DONE
[16:17:53.436] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:17:53.436] List of 6
[16:17:53.436]  $ ...future.FUN:function (i)  
[16:17:53.436]  $ caller       :function (a, b, FUN = call_my_add)  
[16:17:53.436]  $ args         :List of 1
[16:17:53.436]   ..$ FUN:function (a, b)  
[16:17:53.436]  $ call_my_add  :function (a, b)  
[16:17:53.436]  $ my_add       :function (a, b)  
[16:17:53.436]  $ ...          : list()
[16:17:53.436]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.436]  - attr(*, "where")=List of 6
[16:17:53.436]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.436]   ..$ caller       :<environment: R_EmptyEnv> 
[16:17:53.436]   ..$ args         :<environment: R_EmptyEnv> 
[16:17:53.436]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:17:53.436]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:17:53.436]   ..$ ...          :<environment: 0x556b170226f8> 
[16:17:53.436]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.436]  - attr(*, "resolved")= logi FALSE
[16:17:53.436]  - attr(*, "total_size")= num 24120
[16:17:53.441] Packages to be attached in all futures: [n=0] 
[16:17:53.441] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.441] Number of futures (= number of chunks): 2
[16:17:53.441] Launching 2 futures (chunks) ...
[16:17:53.441] Chunk #1 of 2 ...
[16:17:53.441]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.442]    + additional globals found: [n=0] 
[16:17:53.442]    + additional namespaces needed: [n=0] 
[16:17:53.442]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.442]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:53.442]  - seeds: <none>
[16:17:53.442]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.451] Created future:
[16:17:53.451] MulticoreFuture:
[16:17:53.451] Label: ‘future_lapply-1’
[16:17:53.451] Expression:
[16:17:53.451] {
[16:17:53.451]     do.call(function(...) {
[16:17:53.451]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.451]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.451]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.451]             on.exit(options(oopts), add = TRUE)
[16:17:53.451]         }
[16:17:53.451]         {
[16:17:53.451]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.451]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.451]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.451]             })
[16:17:53.451]         }
[16:17:53.451]     }, args = future.call.arguments)
[16:17:53.451] }
[16:17:53.451] Lazy evaluation: FALSE
[16:17:53.451] Asynchronous evaluation: TRUE
[16:17:53.451] Local evaluation: TRUE
[16:17:53.451] Environment: 0x556b172818d8
[16:17:53.451] Capture standard output: TRUE
[16:17:53.451] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.451] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:17:53.451] Packages: <none>
[16:17:53.451] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.451] Resolved: TRUE
[16:17:53.451] Value: <not collected>
[16:17:53.451] Conditions captured: <none>
[16:17:53.451] Early signaling: FALSE
[16:17:53.451] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.451] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.459] Chunk #1 of 2 ... DONE
[16:17:53.459] Chunk #2 of 2 ...
[16:17:53.459]  - Finding globals in 'X' for chunk #2 ...
[16:17:53.460]    + additional globals found: [n=0] 
[16:17:53.460]    + additional namespaces needed: [n=0] 
[16:17:53.460]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:53.460]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:53.461]  - seeds: <none>
[16:17:53.461]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.470] Created future:
[16:17:53.470] MulticoreFuture:
[16:17:53.470] Label: ‘future_lapply-2’
[16:17:53.470] Expression:
[16:17:53.470] {
[16:17:53.470]     do.call(function(...) {
[16:17:53.470]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.470]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.470]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.470]             on.exit(options(oopts), add = TRUE)
[16:17:53.470]         }
[16:17:53.470]         {
[16:17:53.470]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.470]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.470]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.470]             })
[16:17:53.470]         }
[16:17:53.470]     }, args = future.call.arguments)
[16:17:53.470] }
[16:17:53.470] Lazy evaluation: FALSE
[16:17:53.470] Asynchronous evaluation: TRUE
[16:17:53.470] Local evaluation: TRUE
[16:17:53.470] Environment: 0x556b172818d8
[16:17:53.470] Capture standard output: TRUE
[16:17:53.470] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.470] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:17:53.470] Packages: <none>
[16:17:53.470] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.470] Resolved: TRUE
[16:17:53.470] Value: <not collected>
[16:17:53.470] Conditions captured: <none>
[16:17:53.470] Early signaling: FALSE
[16:17:53.470] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.470] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.479] Chunk #2 of 2 ... DONE
[16:17:53.479] Launching 2 futures (chunks) ... DONE
[16:17:53.479] Resolving 2 futures (chunks) ...
[16:17:53.483]  - Number of value chunks collected: 2
[16:17:53.483] Resolving 2 futures (chunks) ... DONE
[16:17:53.483] Reducing values from 2 chunks ...
[16:17:53.483]  - Number of values collected after concatenation: 3
[16:17:53.483]  - Number of values expected: 3
[16:17:53.484] Reducing values from 2 chunks ... DONE
[16:17:53.484] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:17:53.484] future_lapply() ...
[16:17:53.493] Number of chunks: 1
[16:17:53.493] getGlobalsAndPackagesXApply() ...
[16:17:53.493]  - future.globals: TRUE
[16:17:53.496]  - globals found/used: [n=1] ‘FUN’
[16:17:53.496]  - needed namespaces: [n=0] 
[16:17:53.496] Finding globals ... DONE
[16:17:53.497]  - use_args: TRUE
[16:17:53.497]  - Getting '...' globals ...
[16:17:53.497]    - '...' content: [n=1] ‘what’
[16:17:53.497] List of 1
[16:17:53.497]  $ ...:List of 1
[16:17:53.497]   ..$ what:function (x)  
[16:17:53.497]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.497]  - attr(*, "where")=List of 1
[16:17:53.497]   ..$ ...:<environment: 0x556b189ff7f0> 
[16:17:53.497]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.497]  - attr(*, "resolved")= logi TRUE
[16:17:53.497]  - attr(*, "total_size")= num NA
[16:17:53.501]  - Getting '...' globals ... DONE
[16:17:53.501] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.501] List of 2
[16:17:53.501]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:53.501]  $ ...          :List of 1
[16:17:53.501]   ..$ what:function (x)  
[16:17:53.501]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.501]  - attr(*, "where")=List of 2
[16:17:53.501]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.501]   ..$ ...          :<environment: 0x556b189ff7f0> 
[16:17:53.501]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.501]  - attr(*, "resolved")= logi FALSE
[16:17:53.501]  - attr(*, "total_size")= num 12192
[16:17:53.505] Packages to be attached in all futures: [n=0] 
[16:17:53.505] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.505] Number of futures (= number of chunks): 1
[16:17:53.505] Launching 1 futures (chunks) ...
[16:17:53.505] Chunk #1 of 1 ...
[16:17:53.505]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.506]    + additional globals found: [n=0] 
[16:17:53.506]    + additional namespaces needed: [n=0] 
[16:17:53.506]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.506]  - seeds: <none>
[16:17:53.506]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.514] Created future:
[16:17:53.514] MulticoreFuture:
[16:17:53.514] Label: ‘future_lapply-1’
[16:17:53.514] Expression:
[16:17:53.514] {
[16:17:53.514]     do.call(function(...) {
[16:17:53.514]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.514]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.514]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.514]             on.exit(options(oopts), add = TRUE)
[16:17:53.514]         }
[16:17:53.514]         {
[16:17:53.514]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.514]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.514]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.514]             })
[16:17:53.514]         }
[16:17:53.514]     }, args = future.call.arguments)
[16:17:53.514] }
[16:17:53.514] Lazy evaluation: FALSE
[16:17:53.514] Asynchronous evaluation: TRUE
[16:17:53.514] Local evaluation: TRUE
[16:17:53.514] Environment: R_GlobalEnv
[16:17:53.514] Capture standard output: TRUE
[16:17:53.514] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.514] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.514] Packages: <none>
[16:17:53.514] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.514] Resolved: TRUE
[16:17:53.514] Value: <not collected>
[16:17:53.514] Conditions captured: <none>
[16:17:53.514] Early signaling: FALSE
[16:17:53.514] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.514] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.523] Chunk #1 of 1 ... DONE
[16:17:53.523] Launching 1 futures (chunks) ... DONE
[16:17:53.523] Resolving 1 futures (chunks) ...
[16:17:53.525]  - Number of value chunks collected: 1
[16:17:53.525] Resolving 1 futures (chunks) ... DONE
[16:17:53.526] Reducing values from 1 chunks ...
[16:17:53.526]  - Number of values collected after concatenation: 1
[16:17:53.526]  - Number of values expected: 1
[16:17:53.526] Reducing values from 1 chunks ... DONE
[16:17:53.526] future_lapply() ... DONE
[16:17:53.527] future_lapply() ...
[16:17:53.532] Number of chunks: 1
[16:17:53.532] getGlobalsAndPackagesXApply() ...
[16:17:53.533]  - future.globals: TRUE
[16:17:53.536]  - globals found/used: [n=1] ‘FUN’
[16:17:53.536]  - needed namespaces: [n=0] 
[16:17:53.536] Finding globals ... DONE
[16:17:53.537]  - use_args: TRUE
[16:17:53.537]  - Getting '...' globals ...
[16:17:53.537]    - '...' content: [n=1] ‘what’
[16:17:53.537] List of 1
[16:17:53.537]  $ ...:List of 1
[16:17:53.537]   ..$ what:function (...)  
[16:17:53.537]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.537]  - attr(*, "where")=List of 1
[16:17:53.537]   ..$ ...:<environment: 0x556b1549b8b0> 
[16:17:53.537]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.537]  - attr(*, "resolved")= logi TRUE
[16:17:53.537]  - attr(*, "total_size")= num NA
[16:17:53.541]  - Getting '...' globals ... DONE
[16:17:53.541] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.541] List of 2
[16:17:53.541]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:53.541]  $ ...          :List of 1
[16:17:53.541]   ..$ what:function (...)  
[16:17:53.541]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.541]  - attr(*, "where")=List of 2
[16:17:53.541]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.541]   ..$ ...          :<environment: 0x556b1549b8b0> 
[16:17:53.541]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.541]  - attr(*, "resolved")= logi FALSE
[16:17:53.541]  - attr(*, "total_size")= num 13352
[16:17:53.545] Packages to be attached in all futures: [n=0] 
[16:17:53.545] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.545] Number of futures (= number of chunks): 1
[16:17:53.545] Launching 1 futures (chunks) ...
[16:17:53.545] Chunk #1 of 1 ...
[16:17:53.545]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.546]    + additional globals found: [n=0] 
[16:17:53.546]    + additional namespaces needed: [n=0] 
[16:17:53.546]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.546]  - seeds: <none>
[16:17:53.546]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.553] Created future:
[16:17:53.554] MulticoreFuture:
[16:17:53.554] Label: ‘future_lapply-1’
[16:17:53.554] Expression:
[16:17:53.554] {
[16:17:53.554]     do.call(function(...) {
[16:17:53.554]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.554]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.554]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.554]             on.exit(options(oopts), add = TRUE)
[16:17:53.554]         }
[16:17:53.554]         {
[16:17:53.554]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.554]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.554]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.554]             })
[16:17:53.554]         }
[16:17:53.554]     }, args = future.call.arguments)
[16:17:53.554] }
[16:17:53.554] Lazy evaluation: FALSE
[16:17:53.554] Asynchronous evaluation: TRUE
[16:17:53.554] Local evaluation: TRUE
[16:17:53.554] Environment: R_GlobalEnv
[16:17:53.554] Capture standard output: TRUE
[16:17:53.554] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.554] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.554] Packages: <none>
[16:17:53.554] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.554] Resolved: TRUE
[16:17:53.554] Value: <not collected>
[16:17:53.554] Conditions captured: <none>
[16:17:53.554] Early signaling: FALSE
[16:17:53.554] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.554] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.562] Chunk #1 of 1 ... DONE
[16:17:53.562] Launching 1 futures (chunks) ... DONE
[16:17:53.562] Resolving 1 futures (chunks) ...
[16:17:53.564]  - Number of value chunks collected: 1
[16:17:53.564] Resolving 1 futures (chunks) ... DONE
[16:17:53.564] Reducing values from 1 chunks ...
[16:17:53.564]  - Number of values collected after concatenation: 1
[16:17:53.564]  - Number of values expected: 1
[16:17:53.565] Reducing values from 1 chunks ... DONE
[16:17:53.565] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:17:53.565] future_lapply() ...
[16:17:53.570] Number of chunks: 1
[16:17:53.570] getGlobalsAndPackagesXApply() ...
[16:17:53.570]  - future.globals: TRUE
[16:17:53.572]  - globals found/used: [n=1] ‘FUN’
[16:17:53.572]  - needed namespaces: [n=0] 
[16:17:53.572] Finding globals ... DONE
[16:17:53.572]  - use_args: TRUE
[16:17:53.573]  - Getting '...' globals ...
[16:17:53.573]    - '...' content: [n=1] ‘b’
[16:17:53.573] List of 1
[16:17:53.573]  $ ...:List of 1
[16:17:53.573]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:53.573]   .. ..$ a: int [1:2] 1 2
[16:17:53.573]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.573]  - attr(*, "where")=List of 1
[16:17:53.573]   ..$ ...:<environment: 0x556b1875aff8> 
[16:17:53.573]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.573]  - attr(*, "resolved")= logi TRUE
[16:17:53.573]  - attr(*, "total_size")= num NA
[16:17:53.579]  - Getting '...' globals ... DONE
[16:17:53.580] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.580] List of 2
[16:17:53.580]  $ ...future.FUN:function (a, b)  
[16:17:53.580]  $ ...          :List of 1
[16:17:53.580]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:53.580]   .. ..$ a: int [1:2] 1 2
[16:17:53.580]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.580]  - attr(*, "where")=List of 2
[16:17:53.580]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.580]   ..$ ...          :<environment: 0x556b1875aff8> 
[16:17:53.580]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.580]  - attr(*, "resolved")= logi FALSE
[16:17:53.580]  - attr(*, "total_size")= num 1440
[16:17:53.584] Packages to be attached in all futures: [n=0] 
[16:17:53.584] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.584] Number of futures (= number of chunks): 1
[16:17:53.584] Launching 1 futures (chunks) ...
[16:17:53.584] Chunk #1 of 1 ...
[16:17:53.585]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.585]    + additional globals found: [n=0] 
[16:17:53.585]    + additional namespaces needed: [n=0] 
[16:17:53.585]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.585]  - seeds: <none>
[16:17:53.585]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.593] Created future:
[16:17:53.593] MulticoreFuture:
[16:17:53.593] Label: ‘future_lapply-1’
[16:17:53.593] Expression:
[16:17:53.593] {
[16:17:53.593]     do.call(function(...) {
[16:17:53.593]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.593]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.593]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.593]             on.exit(options(oopts), add = TRUE)
[16:17:53.593]         }
[16:17:53.593]         {
[16:17:53.593]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.593]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.593]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.593]             })
[16:17:53.593]         }
[16:17:53.593]     }, args = future.call.arguments)
[16:17:53.593] }
[16:17:53.593] Lazy evaluation: FALSE
[16:17:53.593] Asynchronous evaluation: TRUE
[16:17:53.593] Local evaluation: TRUE
[16:17:53.593] Environment: R_GlobalEnv
[16:17:53.593] Capture standard output: TRUE
[16:17:53.593] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.593] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.593] Packages: <none>
[16:17:53.593] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.593] Resolved: TRUE
[16:17:53.593] Value: <not collected>
[16:17:53.593] Conditions captured: <none>
[16:17:53.593] Early signaling: FALSE
[16:17:53.593] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.593] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.601] Chunk #1 of 1 ... DONE
[16:17:53.601] Launching 1 futures (chunks) ... DONE
[16:17:53.601] Resolving 1 futures (chunks) ...
[16:17:53.603]  - Number of value chunks collected: 1
[16:17:53.603] Resolving 1 futures (chunks) ... DONE
[16:17:53.603] Reducing values from 1 chunks ...
[16:17:53.603]  - Number of values collected after concatenation: 1
[16:17:53.604]  - Number of values expected: 1
[16:17:53.604] Reducing values from 1 chunks ... DONE
[16:17:53.604] future_lapply() ... DONE
[16:17:53.604] future_lapply() ...
[16:17:53.609] Number of chunks: 1
[16:17:53.609] getGlobalsAndPackagesXApply() ...
[16:17:53.609]  - future.globals: TRUE
[16:17:53.611]  - globals found/used: [n=1] ‘FUN’
[16:17:53.611]  - needed namespaces: [n=0] 
[16:17:53.611] Finding globals ... DONE
[16:17:53.612]  - use_args: TRUE
[16:17:53.612]  - Getting '...' globals ...
[16:17:53.612]    - '...' content: [n=1] ‘b’
[16:17:53.612] List of 1
[16:17:53.612]  $ ...:List of 1
[16:17:53.612]   ..$ b:<environment: 0x556b171141d0> 
[16:17:53.612]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.612]  - attr(*, "where")=List of 1
[16:17:53.612]   ..$ ...:<environment: 0x556b17114c88> 
[16:17:53.612]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.612]  - attr(*, "resolved")= logi TRUE
[16:17:53.612]  - attr(*, "total_size")= num NA
[16:17:53.616]  - Getting '...' globals ... DONE
[16:17:53.616] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.616] List of 2
[16:17:53.616]  $ ...future.FUN:function (a, b)  
[16:17:53.616]  $ ...          :List of 1
[16:17:53.616]   ..$ b:<environment: 0x556b171141d0> 
[16:17:53.616]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.616]  - attr(*, "where")=List of 2
[16:17:53.616]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.616]   ..$ ...          :<environment: 0x556b17114c88> 
[16:17:53.616]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.616]  - attr(*, "resolved")= logi FALSE
[16:17:53.616]  - attr(*, "total_size")= num 1440
[16:17:53.620] Packages to be attached in all futures: [n=0] 
[16:17:53.620] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.620] Number of futures (= number of chunks): 1
[16:17:53.620] Launching 1 futures (chunks) ...
[16:17:53.620] Chunk #1 of 1 ...
[16:17:53.621]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.621]    + additional globals found: [n=0] 
[16:17:53.621]    + additional namespaces needed: [n=0] 
[16:17:53.621]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.621]  - seeds: <none>
[16:17:53.621]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.629] Created future:
[16:17:53.629] MulticoreFuture:
[16:17:53.629] Label: ‘future_lapply-1’
[16:17:53.629] Expression:
[16:17:53.629] {
[16:17:53.629]     do.call(function(...) {
[16:17:53.629]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.629]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.629]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.629]             on.exit(options(oopts), add = TRUE)
[16:17:53.629]         }
[16:17:53.629]         {
[16:17:53.629]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.629]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.629]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.629]             })
[16:17:53.629]         }
[16:17:53.629]     }, args = future.call.arguments)
[16:17:53.629] }
[16:17:53.629] Lazy evaluation: FALSE
[16:17:53.629] Asynchronous evaluation: TRUE
[16:17:53.629] Local evaluation: TRUE
[16:17:53.629] Environment: R_GlobalEnv
[16:17:53.629] Capture standard output: TRUE
[16:17:53.629] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.629] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.629] Packages: <none>
[16:17:53.629] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.629] Resolved: TRUE
[16:17:53.629] Value: <not collected>
[16:17:53.629] Conditions captured: <none>
[16:17:53.629] Early signaling: FALSE
[16:17:53.629] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.629] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.637] Chunk #1 of 1 ... DONE
[16:17:53.637] Launching 1 futures (chunks) ... DONE
[16:17:53.637] Resolving 1 futures (chunks) ...
[16:17:53.639]  - Number of value chunks collected: 1
[16:17:53.639] Resolving 1 futures (chunks) ... DONE
[16:17:53.639] Reducing values from 1 chunks ...
[16:17:53.639]  - Number of values collected after concatenation: 1
[16:17:53.639]  - Number of values expected: 1
[16:17:53.639] Reducing values from 1 chunks ... DONE
[16:17:53.640] future_lapply() ... DONE
[16:17:53.640] future_lapply() ...
[16:17:53.644] Number of chunks: 1
[16:17:53.644] getGlobalsAndPackagesXApply() ...
[16:17:53.644]  - future.globals: TRUE
[16:17:53.647]  - globals found/used: [n=1] ‘FUN’
[16:17:53.647]  - needed namespaces: [n=0] 
[16:17:53.647] Finding globals ... DONE
[16:17:53.647]  - use_args: TRUE
[16:17:53.647]  - Getting '...' globals ...
[16:17:53.648]    - '...' content: [n=1] ‘b’
[16:17:53.648] List of 1
[16:17:53.648]  $ ...:List of 1
[16:17:53.648]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:53.648]   .. .. ..@ slots     :List of 4
[16:17:53.648]   .. .. .. ..$ .Data  : chr "function"
[16:17:53.648]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. ..$ target : chr "signature"
[16:17:53.648]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. ..$ defined: chr "signature"
[16:17:53.648]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. ..$ generic: chr "character"
[16:17:53.648]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. ..@ contains  :List of 3
[16:17:53.648]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.648]   .. .. ..@ virtual   : logi FALSE
[16:17:53.648]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:53.648]  list()
[16:17:53.648]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.648]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.648]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.648]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.648]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.648]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.648]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.648]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.648]   .. .. .. .. ..$ generic: chr(0) 
[16:17:53.648]   .. .. ..@ validity  : NULL
[16:17:53.648]   .. .. ..@ access    : list()
[16:17:53.648]   .. .. ..@ className : chr "MethodDefinition"
[16:17:53.648]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. ..@ subclasses:List of 7
[16:17:53.648]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.648]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.648]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.648]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.648]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.648]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.648]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.648]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.648]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.648]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.648]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.648]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.648]   .. .. ..@ versionKey:<externalptr> 
[16:17:53.648]   .. .. ..@ sealed    : logi TRUE
[16:17:53.648]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.648]  - attr(*, "where")=List of 1
[16:17:53.648]   ..$ ...:<environment: 0x556b181429e8> 
[16:17:53.648]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.648]  - attr(*, "resolved")= logi TRUE
[16:17:53.648]  - attr(*, "total_size")= num NA
[16:17:53.704]  - Getting '...' globals ... DONE
[16:17:53.704] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.704] List of 2
[16:17:53.704]  $ ...future.FUN:function (a, b)  
[16:17:53.704]  $ ...          :List of 1
[16:17:53.704]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:53.704]   .. .. ..@ slots     :List of 4
[16:17:53.704]   .. .. .. ..$ .Data  : chr "function"
[16:17:53.704]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. ..$ target : chr "signature"
[16:17:53.704]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. ..$ defined: chr "signature"
[16:17:53.704]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. ..$ generic: chr "character"
[16:17:53.704]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. ..@ contains  :List of 3
[16:17:53.704]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.704]   .. .. ..@ virtual   : logi FALSE
[16:17:53.704]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:53.704]  list()
[16:17:53.704]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.704]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.704]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.704]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.704]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:53.704]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:53.704]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:53.704]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:53.704]   .. .. .. .. ..$ generic: chr(0) 
[16:17:53.704]   .. .. ..@ validity  : NULL
[16:17:53.704]   .. .. ..@ access    : list()
[16:17:53.704]   .. .. ..@ className : chr "MethodDefinition"
[16:17:53.704]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. ..@ subclasses:List of 7
[16:17:53.704]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 1
[16:17:53.704]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.704]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.704]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:53.704]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:53.704]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:53.704]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:53.704]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:53.704]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:53.704]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:53.704]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:53.704]   .. .. .. .. .. ..@ distance  : num 2
[16:17:53.704]   .. .. ..@ versionKey:<externalptr> 
[16:17:53.704]   .. .. ..@ sealed    : logi TRUE
[16:17:53.704]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.704]  - attr(*, "where")=List of 2
[16:17:53.704]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.704]   ..$ ...          :<environment: 0x556b181429e8> 
[16:17:53.704]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.704]  - attr(*, "resolved")= logi FALSE
[16:17:53.704]  - attr(*, "total_size")= num 312512
[16:17:53.749] Packages to be attached in all futures: [n=0] 
[16:17:53.749] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.750] Number of futures (= number of chunks): 1
[16:17:53.750] Launching 1 futures (chunks) ...
[16:17:53.750] Chunk #1 of 1 ...
[16:17:53.750]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.750]    + additional globals found: [n=0] 
[16:17:53.750]    + additional namespaces needed: [n=0] 
[16:17:53.750]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.750]  - seeds: <none>
[16:17:53.751]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.758] Created future:
[16:17:53.758] MulticoreFuture:
[16:17:53.758] Label: ‘future_lapply-1’
[16:17:53.758] Expression:
[16:17:53.758] {
[16:17:53.758]     do.call(function(...) {
[16:17:53.758]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.758]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.758]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.758]             on.exit(options(oopts), add = TRUE)
[16:17:53.758]         }
[16:17:53.758]         {
[16:17:53.758]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.758]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.758]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.758]             })
[16:17:53.758]         }
[16:17:53.758]     }, args = future.call.arguments)
[16:17:53.758] }
[16:17:53.758] Lazy evaluation: FALSE
[16:17:53.758] Asynchronous evaluation: TRUE
[16:17:53.758] Local evaluation: TRUE
[16:17:53.758] Environment: R_GlobalEnv
[16:17:53.758] Capture standard output: TRUE
[16:17:53.758] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.758] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.758] Packages: <none>
[16:17:53.758] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.758] Resolved: TRUE
[16:17:53.758] Value: <not collected>
[16:17:53.758] Conditions captured: <none>
[16:17:53.758] Early signaling: FALSE
[16:17:53.758] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.758] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.766] Chunk #1 of 1 ... DONE
[16:17:53.766] Launching 1 futures (chunks) ... DONE
[16:17:53.767] Resolving 1 futures (chunks) ...
[16:17:53.768]  - Number of value chunks collected: 1
[16:17:53.768] Resolving 1 futures (chunks) ... DONE
[16:17:53.768] Reducing values from 1 chunks ...
[16:17:53.769]  - Number of values collected after concatenation: 1
[16:17:53.769]  - Number of values expected: 1
[16:17:53.769] Reducing values from 1 chunks ... DONE
[16:17:53.769] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:17:53.772] future_lapply() ...
[16:17:53.777] Number of chunks: 2
[16:17:53.777] getGlobalsAndPackagesXApply() ...
[16:17:53.777]  - future.globals: TRUE
[16:17:53.779]  - globals found/used: [n=1] ‘FUN’
[16:17:53.779]  - needed namespaces: [n=0] 
[16:17:53.779] Finding globals ... DONE
[16:17:53.779]  - use_args: TRUE
[16:17:53.779]  - Getting '...' globals ...
[16:17:53.780]    - '...' content: [n=0] 
[16:17:53.780] List of 1
[16:17:53.780]  $ ...: list()
[16:17:53.780]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.780]  - attr(*, "where")=List of 1
[16:17:53.780]   ..$ ...:<environment: 0x556b15979af8> 
[16:17:53.780]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.780]  - attr(*, "resolved")= logi TRUE
[16:17:53.780]  - attr(*, "total_size")= num NA
[16:17:53.783]  - Getting '...' globals ... DONE
[16:17:53.783] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:53.783] List of 2
[16:17:53.783]  $ ...future.FUN:function (f)  
[16:17:53.783]  $ ...          : list()
[16:17:53.783]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.783]  - attr(*, "where")=List of 2
[16:17:53.783]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.783]   ..$ ...          :<environment: 0x556b15979af8> 
[16:17:53.783]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.783]  - attr(*, "resolved")= logi FALSE
[16:17:53.783]  - attr(*, "total_size")= num 1008
[16:17:53.786] Packages to be attached in all futures: [n=0] 
[16:17:53.786] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.786] Number of futures (= number of chunks): 2
[16:17:53.786] Launching 2 futures (chunks) ...
[16:17:53.787] Chunk #1 of 2 ...
[16:17:53.787]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.789]    + additional globals found: [n=2] ‘a’, ‘b’
[16:17:53.789]    + additional namespaces needed: [n=0] 
[16:17:53.789]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.789]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:53.789]  - seeds: <none>
[16:17:53.789]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:17:53.797] Created future:
[16:17:53.797] MulticoreFuture:
[16:17:53.797] Label: ‘future_lapply-1’
[16:17:53.797] Expression:
[16:17:53.797] {
[16:17:53.797]     do.call(function(...) {
[16:17:53.797]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.797]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.797]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.797]             on.exit(options(oopts), add = TRUE)
[16:17:53.797]         }
[16:17:53.797]         {
[16:17:53.797]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.797]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.797]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.797]             })
[16:17:53.797]         }
[16:17:53.797]     }, args = future.call.arguments)
[16:17:53.797] }
[16:17:53.797] Lazy evaluation: FALSE
[16:17:53.797] Asynchronous evaluation: TRUE
[16:17:53.797] Local evaluation: TRUE
[16:17:53.797] Environment: R_GlobalEnv
[16:17:53.797] Capture standard output: TRUE
[16:17:53.797] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.797] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:17:53.797] Packages: <none>
[16:17:53.797] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.797] Resolved: TRUE
[16:17:53.797] Value: <not collected>
[16:17:53.797] Conditions captured: <none>
[16:17:53.797] Early signaling: FALSE
[16:17:53.797] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.797] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.805] Chunk #1 of 2 ... DONE
[16:17:53.805] Chunk #2 of 2 ...
[16:17:53.805]  - Finding globals in 'X' for chunk #2 ...
[16:17:53.809]    + additional globals found: [n=2] ‘a’, ‘b’
[16:17:53.809]    + additional namespaces needed: [n=1] ‘tools’
[16:17:53.809]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:53.809]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:53.809]  - seeds: <none>
[16:17:53.810]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:17:53.819] Created future:
[16:17:53.819] MulticoreFuture:
[16:17:53.819] Label: ‘future_lapply-2’
[16:17:53.819] Expression:
[16:17:53.819] {
[16:17:53.819]     do.call(function(...) {
[16:17:53.819]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.819]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.819]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.819]             on.exit(options(oopts), add = TRUE)
[16:17:53.819]         }
[16:17:53.819]         {
[16:17:53.819]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.819]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.819]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.819]             })
[16:17:53.819]         }
[16:17:53.819]     }, args = future.call.arguments)
[16:17:53.819] }
[16:17:53.819] Lazy evaluation: FALSE
[16:17:53.819] Asynchronous evaluation: TRUE
[16:17:53.819] Local evaluation: TRUE
[16:17:53.819] Environment: R_GlobalEnv
[16:17:53.819] Capture standard output: TRUE
[16:17:53.819] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.819] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:17:53.819] Packages: 1 packages (‘tools’)
[16:17:53.819] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.819] Resolved: FALSE
[16:17:53.819] Value: <not collected>
[16:17:53.819] Conditions captured: <none>
[16:17:53.819] Early signaling: FALSE
[16:17:53.819] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.819] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.832] Chunk #2 of 2 ... DONE
[16:17:53.832] Launching 2 futures (chunks) ... DONE
[16:17:53.832] Resolving 2 futures (chunks) ...
[16:17:53.837]  - Number of value chunks collected: 2
[16:17:53.837] Resolving 2 futures (chunks) ... DONE
[16:17:53.837] Reducing values from 2 chunks ...
[16:17:53.837]  - Number of values collected after concatenation: 4
[16:17:53.837]  - Number of values expected: 4
[16:17:53.838] Reducing values from 2 chunks ... DONE
[16:17:53.838] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:17:53.841] future_lapply() ...
[16:17:53.846] Number of chunks: 1
[16:17:53.846] getGlobalsAndPackagesXApply() ...
[16:17:53.846]  - future.globals: TRUE
[16:17:53.849]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:17:53.849]  - needed namespaces: [n=0] 
[16:17:53.849] Finding globals ... DONE
[16:17:53.849]  - use_args: TRUE
[16:17:53.850]  - Getting '...' globals ...
[16:17:53.850]    - '...' content: [n=0] 
[16:17:53.850] List of 1
[16:17:53.850]  $ ...: list()
[16:17:53.850]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.850]  - attr(*, "where")=List of 1
[16:17:53.850]   ..$ ...:<environment: 0x556b177f44f8> 
[16:17:53.850]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.850]  - attr(*, "resolved")= logi TRUE
[16:17:53.850]  - attr(*, "total_size")= num NA
[16:17:53.853]  - Getting '...' globals ... DONE
[16:17:53.853] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:17:53.853] List of 3
[16:17:53.853]  $ ...future.FUN        :function (x)  
[16:17:53.853]  $ future.call.arguments:List of 1
[16:17:53.853]   ..$ a: num 1
[16:17:53.853]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.853]  $ ...                  : list()
[16:17:53.853]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.853]  - attr(*, "where")=List of 3
[16:17:53.853]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:17:53.853]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:17:53.853]   ..$ ...                  :<environment: 0x556b177f44f8> 
[16:17:53.853]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.853]  - attr(*, "resolved")= logi FALSE
[16:17:53.853]  - attr(*, "total_size")= num 1272
[16:17:53.858] Packages to be attached in all futures: [n=0] 
[16:17:53.858] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.858] Number of futures (= number of chunks): 1
[16:17:53.858] Launching 1 futures (chunks) ...
[16:17:53.858] Chunk #1 of 1 ...
[16:17:53.859]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.859]    + additional globals found: [n=0] 
[16:17:53.859]    + additional namespaces needed: [n=0] 
[16:17:53.859]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.859]  - seeds: <none>
[16:17:53.859]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.867] Created future:
[16:17:53.867] MulticoreFuture:
[16:17:53.867] Label: ‘future_lapply-1’
[16:17:53.867] Expression:
[16:17:53.867] {
[16:17:53.867]     do.call(function(...) {
[16:17:53.867]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.867]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.867]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.867]             on.exit(options(oopts), add = TRUE)
[16:17:53.867]         }
[16:17:53.867]         {
[16:17:53.867]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.867]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.867]                 ...future.FUN(...future.X_jj)
[16:17:53.867]             })
[16:17:53.867]         }
[16:17:53.867]     }, args = future.call.arguments)
[16:17:53.867] }
[16:17:53.867] Lazy evaluation: FALSE
[16:17:53.867] Asynchronous evaluation: TRUE
[16:17:53.867] Local evaluation: TRUE
[16:17:53.867] Environment: 0x556b177f4108
[16:17:53.867] Capture standard output: TRUE
[16:17:53.867] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.867] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:53.867] Packages: <none>
[16:17:53.867] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.867] Resolved: TRUE
[16:17:53.867] Value: <not collected>
[16:17:53.867] Conditions captured: <none>
[16:17:53.867] Early signaling: FALSE
[16:17:53.867] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.867] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.875] Chunk #1 of 1 ... DONE
[16:17:53.875] Launching 1 futures (chunks) ... DONE
[16:17:53.876] Resolving 1 futures (chunks) ...
[16:17:53.877]  - Number of value chunks collected: 1
[16:17:53.877] Resolving 1 futures (chunks) ... DONE
[16:17:53.877] Reducing values from 1 chunks ...
[16:17:53.878]  - Number of values collected after concatenation: 1
[16:17:53.878]  - Number of values expected: 1
[16:17:53.878] Reducing values from 1 chunks ... DONE
[16:17:53.878] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:17:53.880] future_lapply() ...
[16:17:53.884] Number of chunks: 1
[16:17:53.885] getGlobalsAndPackagesXApply() ...
[16:17:53.885]  - future.globals: TRUE
[16:17:53.887]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:53.888]  - needed namespaces: [n=0] 
[16:17:53.888] Finding globals ... DONE
[16:17:53.888]  - use_args: TRUE
[16:17:53.888]  - Getting '...' globals ...
[16:17:53.888]    - '...' content: [n=0] 
[16:17:53.888] List of 1
[16:17:53.888]  $ ...: list()
[16:17:53.888]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.888]  - attr(*, "where")=List of 1
[16:17:53.888]   ..$ ...:<environment: 0x556b158a2058> 
[16:17:53.888]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.888]  - attr(*, "resolved")= logi TRUE
[16:17:53.888]  - attr(*, "total_size")= num NA
[16:17:53.891]  - Getting '...' globals ... DONE
[16:17:53.892] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:53.892] List of 3
[16:17:53.892]  $ ...future.FUN:function (ii)  
[16:17:53.892]  $ a            : num 1
[16:17:53.892]  $ ...          : list()
[16:17:53.892]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.892]  - attr(*, "where")=List of 3
[16:17:53.892]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.892]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.892]   ..$ ...          :<environment: 0x556b158a2058> 
[16:17:53.892]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.892]  - attr(*, "resolved")= logi FALSE
[16:17:53.892]  - attr(*, "total_size")= num 2984
[16:17:53.895] Packages to be attached in all futures: [n=0] 
[16:17:53.896] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.896] Number of futures (= number of chunks): 1
[16:17:53.896] Launching 1 futures (chunks) ...
[16:17:53.896] Chunk #1 of 1 ...
[16:17:53.896]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.897]    + additional globals found: [n=0] 
[16:17:53.897]    + additional namespaces needed: [n=0] 
[16:17:53.897]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.897]  - seeds: <none>
[16:17:53.897]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.904] Created future:
[16:17:53.905] MulticoreFuture:
[16:17:53.905] Label: ‘future_lapply-1’
[16:17:53.905] Expression:
[16:17:53.905] {
[16:17:53.905]     do.call(function(...) {
[16:17:53.905]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.905]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.905]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.905]             on.exit(options(oopts), add = TRUE)
[16:17:53.905]         }
[16:17:53.905]         {
[16:17:53.905]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.905]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.905]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.905]             })
[16:17:53.905]         }
[16:17:53.905]     }, args = future.call.arguments)
[16:17:53.905] }
[16:17:53.905] Lazy evaluation: FALSE
[16:17:53.905] Asynchronous evaluation: TRUE
[16:17:53.905] Local evaluation: TRUE
[16:17:53.905] Environment: R_GlobalEnv
[16:17:53.905] Capture standard output: TRUE
[16:17:53.905] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.905] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.905] Packages: <none>
[16:17:53.905] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.905] Resolved: TRUE
[16:17:53.905] Value: <not collected>
[16:17:53.905] Conditions captured: <none>
[16:17:53.905] Early signaling: FALSE
[16:17:53.905] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.905] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.913] Chunk #1 of 1 ... DONE
[16:17:53.913] Launching 1 futures (chunks) ... DONE
[16:17:53.913] Resolving 1 futures (chunks) ...
[16:17:53.915]  - Number of value chunks collected: 1
[16:17:53.915] Resolving 1 futures (chunks) ... DONE
[16:17:53.915] Reducing values from 1 chunks ...
[16:17:53.915]  - Number of values collected after concatenation: 1
[16:17:53.915]  - Number of values expected: 1
[16:17:53.915] Reducing values from 1 chunks ... DONE
[16:17:53.915] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:17:53.916] future_lapply() ...
[16:17:53.923] Number of chunks: 1
[16:17:53.923] getGlobalsAndPackagesXApply() ...
[16:17:53.923]  - future.globals: TRUE
[16:17:53.926]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:53.926]  - needed namespaces: [n=0] 
[16:17:53.926] Finding globals ... DONE
[16:17:53.926]  - use_args: TRUE
[16:17:53.926]  - Getting '...' globals ...
[16:17:53.927]    - '...' content: [n=0] 
[16:17:53.927] List of 1
[16:17:53.927]  $ ...: list()
[16:17:53.927]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.927]  - attr(*, "where")=List of 1
[16:17:53.927]   ..$ ...:<environment: 0x556b18953360> 
[16:17:53.927]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.927]  - attr(*, "resolved")= logi TRUE
[16:17:53.927]  - attr(*, "total_size")= num NA
[16:17:53.930]  - Getting '...' globals ... DONE
[16:17:53.930] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:53.930] List of 3
[16:17:53.930]  $ ...future.FUN:function (ii)  
[16:17:53.930]  $ a            : num 1
[16:17:53.930]  $ ...          : list()
[16:17:53.930]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.930]  - attr(*, "where")=List of 3
[16:17:53.930]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:53.930]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.930]   ..$ ...          :<environment: 0x556b18953360> 
[16:17:53.930]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.930]  - attr(*, "resolved")= logi FALSE
[16:17:53.930]  - attr(*, "total_size")= num 2984
[16:17:53.934] Packages to be attached in all futures: [n=0] 
[16:17:53.934] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.934] Number of futures (= number of chunks): 1
[16:17:53.934] Launching 1 futures (chunks) ...
[16:17:53.934] Chunk #1 of 1 ...
[16:17:53.935]  - Finding globals in 'X' for chunk #1 ...
[16:17:53.935]    + additional globals found: [n=0] 
[16:17:53.935]    + additional namespaces needed: [n=0] 
[16:17:53.935]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:53.935]  - seeds: <none>
[16:17:53.935]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.943] Created future:
[16:17:53.943] MulticoreFuture:
[16:17:53.943] Label: ‘future_lapply-1’
[16:17:53.943] Expression:
[16:17:53.943] {
[16:17:53.943]     do.call(function(...) {
[16:17:53.943]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.943]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.943]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.943]             on.exit(options(oopts), add = TRUE)
[16:17:53.943]         }
[16:17:53.943]         {
[16:17:53.943]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.943]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.943]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.943]             })
[16:17:53.943]         }
[16:17:53.943]     }, args = future.call.arguments)
[16:17:53.943] }
[16:17:53.943] Lazy evaluation: FALSE
[16:17:53.943] Asynchronous evaluation: TRUE
[16:17:53.943] Local evaluation: TRUE
[16:17:53.943] Environment: R_GlobalEnv
[16:17:53.943] Capture standard output: TRUE
[16:17:53.943] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.943] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.943] Packages: <none>
[16:17:53.943] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.943] Resolved: TRUE
[16:17:53.943] Value: <not collected>
[16:17:53.943] Conditions captured: <none>
[16:17:53.943] Early signaling: FALSE
[16:17:53.943] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.943] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.951] Chunk #1 of 1 ... DONE
[16:17:53.951] Launching 1 futures (chunks) ... DONE
[16:17:53.952] Resolving 1 futures (chunks) ...
[16:17:53.953]  - Number of value chunks collected: 1
[16:17:53.953] Resolving 1 futures (chunks) ... DONE
[16:17:53.954] Reducing values from 1 chunks ...
[16:17:53.954]  - Number of values collected after concatenation: 1
[16:17:53.954]  - Number of values expected: 1
[16:17:53.954] Reducing values from 1 chunks ... DONE
[16:17:53.954] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:17:53.954] future_lapply() ...
[16:17:53.959] Number of chunks: 1
[16:17:53.959] getGlobalsAndPackagesXApply() ...
[16:17:53.959]  - future.globals: <name-value list> with names ‘42’
[16:17:53.959]  - use_args: TRUE
[16:17:53.959]  - Getting '...' globals ...
[16:17:53.960]    - '...' content: [n=0] 
[16:17:53.960] List of 1
[16:17:53.960]  $ ...: list()
[16:17:53.960]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.960]  - attr(*, "where")=List of 1
[16:17:53.960]   ..$ ...:<environment: 0x556b16a138e0> 
[16:17:53.960]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.960]  - attr(*, "resolved")= logi TRUE
[16:17:53.960]  - attr(*, "total_size")= num NA
[16:17:53.963]  - Getting '...' globals ... DONE
[16:17:53.963] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:17:53.963] List of 3
[16:17:53.963]  $ a            : num 42
[16:17:53.963]  $ ...future.FUN:function (x)  
[16:17:53.963]  $ ...          : list()
[16:17:53.963]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:53.963]  - attr(*, "where")=List of 3
[16:17:53.963]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:53.963]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:17:53.963]   ..$ ...          :<environment: 0x556b16a138e0> 
[16:17:53.963]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:53.963]  - attr(*, "resolved")= logi FALSE
[16:17:53.963]  - attr(*, "total_size")= num NA
[16:17:53.967] Packages to be attached in all futures: [n=0] 
[16:17:53.967] getGlobalsAndPackagesXApply() ... DONE
[16:17:53.968] Number of futures (= number of chunks): 1
[16:17:53.968] Launching 1 futures (chunks) ...
[16:17:53.968] Chunk #1 of 1 ...
[16:17:53.968]  - seeds: <none>
[16:17:53.968]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:53.976] Created future:
[16:17:53.976] MulticoreFuture:
[16:17:53.976] Label: ‘future_lapply-1’
[16:17:53.976] Expression:
[16:17:53.976] {
[16:17:53.976]     do.call(function(...) {
[16:17:53.976]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:53.976]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:53.976]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:53.976]             on.exit(options(oopts), add = TRUE)
[16:17:53.976]         }
[16:17:53.976]         {
[16:17:53.976]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:53.976]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:53.976]                 ...future.FUN(...future.X_jj, ...)
[16:17:53.976]             })
[16:17:53.976]         }
[16:17:53.976]     }, args = future.call.arguments)
[16:17:53.976] }
[16:17:53.976] Lazy evaluation: FALSE
[16:17:53.976] Asynchronous evaluation: TRUE
[16:17:53.976] Local evaluation: TRUE
[16:17:53.976] Environment: R_GlobalEnv
[16:17:53.976] Capture standard output: TRUE
[16:17:53.976] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:53.976] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:53.976] Packages: <none>
[16:17:53.976] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:53.976] Resolved: TRUE
[16:17:53.976] Value: <not collected>
[16:17:53.976] Conditions captured: <none>
[16:17:53.976] Early signaling: FALSE
[16:17:53.976] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:53.976] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:53.985] Chunk #1 of 1 ... DONE
[16:17:53.985] Launching 1 futures (chunks) ... DONE
[16:17:53.985] Resolving 1 futures (chunks) ...
[16:17:53.987]  - Number of value chunks collected: 1
[16:17:53.987] Resolving 1 futures (chunks) ... DONE
[16:17:53.987] Reducing values from 1 chunks ...
[16:17:53.987]  - Number of values collected after concatenation: 1
[16:17:53.987]  - Number of values expected: 1
[16:17:53.987] Reducing values from 1 chunks ... DONE
[16:17:53.987] future_lapply() ... DONE
List of 1
 $ : num 42
[16:17:54.355] future_lapply() ...
[16:17:54.360] Number of chunks: 2
[16:17:54.360] getGlobalsAndPackagesXApply() ...
[16:17:54.360]  - future.globals: TRUE
[16:17:54.368]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:17:54.368]  - needed namespaces: [n=0] 
[16:17:54.368] Finding globals ... DONE
[16:17:54.368]  - use_args: TRUE
[16:17:54.368]  - Getting '...' globals ...
[16:17:54.369]    - '...' content: [n=0] 
[16:17:54.369] List of 1
[16:17:54.369]  $ ...: list()
[16:17:54.369]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.369]  - attr(*, "where")=List of 1
[16:17:54.369]   ..$ ...:<environment: 0x556b1884ba20> 
[16:17:54.369]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.369]  - attr(*, "resolved")= logi TRUE
[16:17:54.369]  - attr(*, "total_size")= num NA
[16:17:54.372]  - Getting '...' globals ... DONE
[16:17:54.372] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:17:54.372] List of 6
[16:17:54.372]  $ ...future.FUN:function (i)  
[16:17:54.372]  $ caller       :function (a, b, FUN = call_my_add)  
[16:17:54.372]  $ args         :List of 1
[16:17:54.372]   ..$ FUN:function (a, b)  
[16:17:54.372]  $ call_my_add  :function (a, b)  
[16:17:54.372]  $ my_add       :function (a, b)  
[16:17:54.372]  $ ...          : list()
[16:17:54.372]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.372]  - attr(*, "where")=List of 6
[16:17:54.372]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.372]   ..$ caller       :<environment: R_EmptyEnv> 
[16:17:54.372]   ..$ args         :<environment: R_EmptyEnv> 
[16:17:54.372]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:17:54.372]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:17:54.372]   ..$ ...          :<environment: 0x556b1884ba20> 
[16:17:54.372]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.372]  - attr(*, "resolved")= logi FALSE
[16:17:54.372]  - attr(*, "total_size")= num 24120
[16:17:54.378] Packages to be attached in all futures: [n=0] 
[16:17:54.378] getGlobalsAndPackagesXApply() ... DONE
[16:17:54.378] Number of futures (= number of chunks): 2
[16:17:54.378] Launching 2 futures (chunks) ...
[16:17:54.378] Chunk #1 of 2 ...
[16:17:54.378]  - Finding globals in 'X' for chunk #1 ...
[16:17:54.379]    + additional globals found: [n=0] 
[16:17:54.379]    + additional namespaces needed: [n=0] 
[16:17:54.379]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:54.379]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:54.379]  - seeds: <none>
[16:17:54.379]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.439] Created future:
[16:17:54.439] MultisessionFuture:
[16:17:54.439] Label: ‘future_lapply-1’
[16:17:54.439] Expression:
[16:17:54.439] {
[16:17:54.439]     do.call(function(...) {
[16:17:54.439]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.439]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.439]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.439]             on.exit(options(oopts), add = TRUE)
[16:17:54.439]         }
[16:17:54.439]         {
[16:17:54.439]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.439]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.439]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.439]             })
[16:17:54.439]         }
[16:17:54.439]     }, args = future.call.arguments)
[16:17:54.439] }
[16:17:54.439] Lazy evaluation: FALSE
[16:17:54.439] Asynchronous evaluation: TRUE
[16:17:54.439] Local evaluation: TRUE
[16:17:54.439] Environment: 0x556b1884be48
[16:17:54.439] Capture standard output: TRUE
[16:17:54.439] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.439] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:17:54.439] Packages: <none>
[16:17:54.439] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.439] Resolved: FALSE
[16:17:54.439] Value: <not collected>
[16:17:54.439] Conditions captured: <none>
[16:17:54.439] Early signaling: FALSE
[16:17:54.439] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.439] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.451] Chunk #1 of 2 ... DONE
[16:17:54.451] Chunk #2 of 2 ...
[16:17:54.451]  - Finding globals in 'X' for chunk #2 ...
[16:17:54.452]    + additional globals found: [n=0] 
[16:17:54.452]    + additional namespaces needed: [n=0] 
[16:17:54.452]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:54.452]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:54.452]  - seeds: <none>
[16:17:54.452]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.522] Created future:
[16:17:54.522] MultisessionFuture:
[16:17:54.522] Label: ‘future_lapply-2’
[16:17:54.522] Expression:
[16:17:54.522] {
[16:17:54.522]     do.call(function(...) {
[16:17:54.522]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.522]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.522]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.522]             on.exit(options(oopts), add = TRUE)
[16:17:54.522]         }
[16:17:54.522]         {
[16:17:54.522]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.522]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.522]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.522]             })
[16:17:54.522]         }
[16:17:54.522]     }, args = future.call.arguments)
[16:17:54.522] }
[16:17:54.522] Lazy evaluation: FALSE
[16:17:54.522] Asynchronous evaluation: TRUE
[16:17:54.522] Local evaluation: TRUE
[16:17:54.522] Environment: 0x556b1884be48
[16:17:54.522] Capture standard output: TRUE
[16:17:54.522] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.522] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:17:54.522] Packages: <none>
[16:17:54.522] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.522] Resolved: FALSE
[16:17:54.522] Value: <not collected>
[16:17:54.522] Conditions captured: <none>
[16:17:54.522] Early signaling: FALSE
[16:17:54.522] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.522] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.534] Chunk #2 of 2 ... DONE
[16:17:54.535] Launching 2 futures (chunks) ... DONE
[16:17:54.535] Resolving 2 futures (chunks) ...
[16:17:54.603]  - Number of value chunks collected: 2
[16:17:54.604] Resolving 2 futures (chunks) ... DONE
[16:17:54.604] Reducing values from 2 chunks ...
[16:17:54.604]  - Number of values collected after concatenation: 3
[16:17:54.604]  - Number of values expected: 3
[16:17:54.604] Reducing values from 2 chunks ... DONE
[16:17:54.604] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:17:54.604] future_lapply() ...
[16:17:54.609] Number of chunks: 1
[16:17:54.609] getGlobalsAndPackagesXApply() ...
[16:17:54.610]  - future.globals: TRUE
[16:17:54.612]  - globals found/used: [n=1] ‘FUN’
[16:17:54.613]  - needed namespaces: [n=0] 
[16:17:54.613] Finding globals ... DONE
[16:17:54.613]  - use_args: TRUE
[16:17:54.613]  - Getting '...' globals ...
[16:17:54.613]    - '...' content: [n=1] ‘what’
[16:17:54.613] List of 1
[16:17:54.613]  $ ...:List of 1
[16:17:54.613]   ..$ what:function (x)  
[16:17:54.613]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.613]  - attr(*, "where")=List of 1
[16:17:54.613]   ..$ ...:<environment: 0x556b182b6f90> 
[16:17:54.613]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.613]  - attr(*, "resolved")= logi TRUE
[16:17:54.613]  - attr(*, "total_size")= num NA
[16:17:54.616]  - Getting '...' globals ... DONE
[16:17:54.616] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:54.617] List of 2
[16:17:54.617]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:54.617]  $ ...          :List of 1
[16:17:54.617]   ..$ what:function (x)  
[16:17:54.617]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.617]  - attr(*, "where")=List of 2
[16:17:54.617]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.617]   ..$ ...          :<environment: 0x556b182b6f90> 
[16:17:54.617]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.617]  - attr(*, "resolved")= logi FALSE
[16:17:54.617]  - attr(*, "total_size")= num 12192
[16:17:54.629] Packages to be attached in all futures: [n=0] 
[16:17:54.630] getGlobalsAndPackagesXApply() ... DONE
[16:17:54.630] Number of futures (= number of chunks): 1
[16:17:54.630] Launching 1 futures (chunks) ...
[16:17:54.630] Chunk #1 of 1 ...
[16:17:54.630]  - Finding globals in 'X' for chunk #1 ...
[16:17:54.630]    + additional globals found: [n=0] 
[16:17:54.630]    + additional namespaces needed: [n=0] 
[16:17:54.631]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:54.631]  - seeds: <none>
[16:17:54.631]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.648] Created future:
[16:17:54.648] MultisessionFuture:
[16:17:54.648] Label: ‘future_lapply-1’
[16:17:54.648] Expression:
[16:17:54.648] {
[16:17:54.648]     do.call(function(...) {
[16:17:54.648]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.648]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.648]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.648]             on.exit(options(oopts), add = TRUE)
[16:17:54.648]         }
[16:17:54.648]         {
[16:17:54.648]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.648]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.648]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.648]             })
[16:17:54.648]         }
[16:17:54.648]     }, args = future.call.arguments)
[16:17:54.648] }
[16:17:54.648] Lazy evaluation: FALSE
[16:17:54.648] Asynchronous evaluation: TRUE
[16:17:54.648] Local evaluation: TRUE
[16:17:54.648] Environment: R_GlobalEnv
[16:17:54.648] Capture standard output: TRUE
[16:17:54.648] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.648] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:54.648] Packages: <none>
[16:17:54.648] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.648] Resolved: FALSE
[16:17:54.648] Value: <not collected>
[16:17:54.648] Conditions captured: <none>
[16:17:54.648] Early signaling: FALSE
[16:17:54.648] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.648] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.659] Chunk #1 of 1 ... DONE
[16:17:54.660] Launching 1 futures (chunks) ... DONE
[16:17:54.660] Resolving 1 futures (chunks) ...
[16:17:54.690]  - Number of value chunks collected: 1
[16:17:54.690] Resolving 1 futures (chunks) ... DONE
[16:17:54.691] Reducing values from 1 chunks ...
[16:17:54.691]  - Number of values collected after concatenation: 1
[16:17:54.691]  - Number of values expected: 1
[16:17:54.691] Reducing values from 1 chunks ... DONE
[16:17:54.691] future_lapply() ... DONE
[16:17:54.691] future_lapply() ...
[16:17:54.696] Number of chunks: 1
[16:17:54.696] getGlobalsAndPackagesXApply() ...
[16:17:54.696]  - future.globals: TRUE
[16:17:54.699]  - globals found/used: [n=1] ‘FUN’
[16:17:54.699]  - needed namespaces: [n=0] 
[16:17:54.699] Finding globals ... DONE
[16:17:54.699]  - use_args: TRUE
[16:17:54.699]  - Getting '...' globals ...
[16:17:54.699]    - '...' content: [n=1] ‘what’
[16:17:54.700] List of 1
[16:17:54.700]  $ ...:List of 1
[16:17:54.700]   ..$ what:function (...)  
[16:17:54.700]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.700]  - attr(*, "where")=List of 1
[16:17:54.700]   ..$ ...:<environment: 0x556b17080978> 
[16:17:54.700]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.700]  - attr(*, "resolved")= logi TRUE
[16:17:54.700]  - attr(*, "total_size")= num NA
[16:17:54.703]  - Getting '...' globals ... DONE
[16:17:54.703] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:54.703] List of 2
[16:17:54.703]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:17:54.703]  $ ...          :List of 1
[16:17:54.703]   ..$ what:function (...)  
[16:17:54.703]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.703]  - attr(*, "where")=List of 2
[16:17:54.703]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.703]   ..$ ...          :<environment: 0x556b17080978> 
[16:17:54.703]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.703]  - attr(*, "resolved")= logi FALSE
[16:17:54.703]  - attr(*, "total_size")= num 13352
[16:17:54.706] Packages to be attached in all futures: [n=0] 
[16:17:54.706] getGlobalsAndPackagesXApply() ... DONE
[16:17:54.706] Number of futures (= number of chunks): 1
[16:17:54.706] Launching 1 futures (chunks) ...
[16:17:54.707] Chunk #1 of 1 ...
[16:17:54.707]  - Finding globals in 'X' for chunk #1 ...
[16:17:54.707]    + additional globals found: [n=0] 
[16:17:54.707]    + additional namespaces needed: [n=0] 
[16:17:54.707]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:54.707]  - seeds: <none>
[16:17:54.707]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.725] Created future:
[16:17:54.725] MultisessionFuture:
[16:17:54.725] Label: ‘future_lapply-1’
[16:17:54.725] Expression:
[16:17:54.725] {
[16:17:54.725]     do.call(function(...) {
[16:17:54.725]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.725]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.725]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.725]             on.exit(options(oopts), add = TRUE)
[16:17:54.725]         }
[16:17:54.725]         {
[16:17:54.725]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.725]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.725]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.725]             })
[16:17:54.725]         }
[16:17:54.725]     }, args = future.call.arguments)
[16:17:54.725] }
[16:17:54.725] Lazy evaluation: FALSE
[16:17:54.725] Asynchronous evaluation: TRUE
[16:17:54.725] Local evaluation: TRUE
[16:17:54.725] Environment: R_GlobalEnv
[16:17:54.725] Capture standard output: TRUE
[16:17:54.725] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.725] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:54.725] Packages: <none>
[16:17:54.725] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.725] Resolved: FALSE
[16:17:54.725] Value: <not collected>
[16:17:54.725] Conditions captured: <none>
[16:17:54.725] Early signaling: FALSE
[16:17:54.725] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.725] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.737] Chunk #1 of 1 ... DONE
[16:17:54.737] Launching 1 futures (chunks) ... DONE
[16:17:54.737] Resolving 1 futures (chunks) ...
[16:17:54.779]  - Number of value chunks collected: 1
[16:17:54.779] Resolving 1 futures (chunks) ... DONE
[16:17:54.779] Reducing values from 1 chunks ...
[16:17:54.780]  - Number of values collected after concatenation: 1
[16:17:54.780]  - Number of values expected: 1
[16:17:54.780] Reducing values from 1 chunks ... DONE
[16:17:54.780] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:17:54.780] future_lapply() ...
[16:17:54.784] Number of chunks: 1
[16:17:54.784] getGlobalsAndPackagesXApply() ...
[16:17:54.784]  - future.globals: TRUE
[16:17:54.786]  - globals found/used: [n=1] ‘FUN’
[16:17:54.786]  - needed namespaces: [n=0] 
[16:17:54.786] Finding globals ... DONE
[16:17:54.786]  - use_args: TRUE
[16:17:54.787]  - Getting '...' globals ...
[16:17:54.787]    - '...' content: [n=1] ‘b’
[16:17:54.787] List of 1
[16:17:54.787]  $ ...:List of 1
[16:17:54.787]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:54.787]   .. ..$ a: int [1:2] 1 2
[16:17:54.787]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.787]  - attr(*, "where")=List of 1
[16:17:54.787]   ..$ ...:<environment: 0x556b1867b7b0> 
[16:17:54.787]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.787]  - attr(*, "resolved")= logi TRUE
[16:17:54.787]  - attr(*, "total_size")= num NA
[16:17:54.791]  - Getting '...' globals ... DONE
[16:17:54.791] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:54.791] List of 2
[16:17:54.791]  $ ...future.FUN:function (a, b)  
[16:17:54.791]  $ ...          :List of 1
[16:17:54.791]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:17:54.791]   .. ..$ a: int [1:2] 1 2
[16:17:54.791]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.791]  - attr(*, "where")=List of 2
[16:17:54.791]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.791]   ..$ ...          :<environment: 0x556b1867b7b0> 
[16:17:54.791]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.791]  - attr(*, "resolved")= logi FALSE
[16:17:54.791]  - attr(*, "total_size")= num 1440
[16:17:54.794] Packages to be attached in all futures: [n=0] 
[16:17:54.794] getGlobalsAndPackagesXApply() ... DONE
[16:17:54.794] Number of futures (= number of chunks): 1
[16:17:54.795] Launching 1 futures (chunks) ...
[16:17:54.795] Chunk #1 of 1 ...
[16:17:54.795]  - Finding globals in 'X' for chunk #1 ...
[16:17:54.795]    + additional globals found: [n=0] 
[16:17:54.795]    + additional namespaces needed: [n=0] 
[16:17:54.795]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:54.795]  - seeds: <none>
[16:17:54.797]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.815] Created future:
[16:17:54.815] MultisessionFuture:
[16:17:54.815] Label: ‘future_lapply-1’
[16:17:54.815] Expression:
[16:17:54.815] {
[16:17:54.815]     do.call(function(...) {
[16:17:54.815]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.815]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.815]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.815]             on.exit(options(oopts), add = TRUE)
[16:17:54.815]         }
[16:17:54.815]         {
[16:17:54.815]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.815]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.815]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.815]             })
[16:17:54.815]         }
[16:17:54.815]     }, args = future.call.arguments)
[16:17:54.815] }
[16:17:54.815] Lazy evaluation: FALSE
[16:17:54.815] Asynchronous evaluation: TRUE
[16:17:54.815] Local evaluation: TRUE
[16:17:54.815] Environment: R_GlobalEnv
[16:17:54.815] Capture standard output: TRUE
[16:17:54.815] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.815] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:54.815] Packages: <none>
[16:17:54.815] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.815] Resolved: FALSE
[16:17:54.815] Value: <not collected>
[16:17:54.815] Conditions captured: <none>
[16:17:54.815] Early signaling: FALSE
[16:17:54.815] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.815] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.827] Chunk #1 of 1 ... DONE
[16:17:54.827] Launching 1 futures (chunks) ... DONE
[16:17:54.827] Resolving 1 futures (chunks) ...
[16:17:54.858]  - Number of value chunks collected: 1
[16:17:54.858] Resolving 1 futures (chunks) ... DONE
[16:17:54.859] Reducing values from 1 chunks ...
[16:17:54.859]  - Number of values collected after concatenation: 1
[16:17:54.859]  - Number of values expected: 1
[16:17:54.859] Reducing values from 1 chunks ... DONE
[16:17:54.859] future_lapply() ... DONE
[16:17:54.859] future_lapply() ...
[16:17:54.863] Number of chunks: 1
[16:17:54.863] getGlobalsAndPackagesXApply() ...
[16:17:54.863]  - future.globals: TRUE
[16:17:54.865]  - globals found/used: [n=1] ‘FUN’
[16:17:54.865]  - needed namespaces: [n=0] 
[16:17:54.865] Finding globals ... DONE
[16:17:54.865]  - use_args: TRUE
[16:17:54.865]  - Getting '...' globals ...
[16:17:54.865]    - '...' content: [n=1] ‘b’
[16:17:54.866] List of 1
[16:17:54.866]  $ ...:List of 1
[16:17:54.866]   ..$ b:<environment: 0x556b173b3448> 
[16:17:54.866]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.866]  - attr(*, "where")=List of 1
[16:17:54.866]   ..$ ...:<environment: 0x556b173b4088> 
[16:17:54.866]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.866]  - attr(*, "resolved")= logi TRUE
[16:17:54.866]  - attr(*, "total_size")= num NA
[16:17:54.868]  - Getting '...' globals ... DONE
[16:17:54.868] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:54.869] List of 2
[16:17:54.869]  $ ...future.FUN:function (a, b)  
[16:17:54.869]  $ ...          :List of 1
[16:17:54.869]   ..$ b:<environment: 0x556b173b3448> 
[16:17:54.869]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.869]  - attr(*, "where")=List of 2
[16:17:54.869]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.869]   ..$ ...          :<environment: 0x556b173b4088> 
[16:17:54.869]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.869]  - attr(*, "resolved")= logi FALSE
[16:17:54.869]  - attr(*, "total_size")= num 1440
[16:17:54.871] Packages to be attached in all futures: [n=0] 
[16:17:54.872] getGlobalsAndPackagesXApply() ... DONE
[16:17:54.872] Number of futures (= number of chunks): 1
[16:17:54.872] Launching 1 futures (chunks) ...
[16:17:54.872] Chunk #1 of 1 ...
[16:17:54.872]  - Finding globals in 'X' for chunk #1 ...
[16:17:54.872]    + additional globals found: [n=0] 
[16:17:54.873]    + additional namespaces needed: [n=0] 
[16:17:54.873]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:54.873]  - seeds: <none>
[16:17:54.873]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:54.890] Created future:
[16:17:54.890] MultisessionFuture:
[16:17:54.890] Label: ‘future_lapply-1’
[16:17:54.890] Expression:
[16:17:54.890] {
[16:17:54.890]     do.call(function(...) {
[16:17:54.890]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:54.890]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:54.890]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:54.890]             on.exit(options(oopts), add = TRUE)
[16:17:54.890]         }
[16:17:54.890]         {
[16:17:54.890]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:54.890]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:54.890]                 ...future.FUN(...future.X_jj, ...)
[16:17:54.890]             })
[16:17:54.890]         }
[16:17:54.890]     }, args = future.call.arguments)
[16:17:54.890] }
[16:17:54.890] Lazy evaluation: FALSE
[16:17:54.890] Asynchronous evaluation: TRUE
[16:17:54.890] Local evaluation: TRUE
[16:17:54.890] Environment: R_GlobalEnv
[16:17:54.890] Capture standard output: TRUE
[16:17:54.890] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:54.890] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:54.890] Packages: <none>
[16:17:54.890] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:54.890] Resolved: FALSE
[16:17:54.890] Value: <not collected>
[16:17:54.890] Conditions captured: <none>
[16:17:54.890] Early signaling: FALSE
[16:17:54.890] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:54.890] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:54.902] Chunk #1 of 1 ... DONE
[16:17:54.902] Launching 1 futures (chunks) ... DONE
[16:17:54.902] Resolving 1 futures (chunks) ...
[16:17:54.944]  - Number of value chunks collected: 1
[16:17:54.944] Resolving 1 futures (chunks) ... DONE
[16:17:54.945] Reducing values from 1 chunks ...
[16:17:54.945]  - Number of values collected after concatenation: 1
[16:17:54.945]  - Number of values expected: 1
[16:17:54.945] Reducing values from 1 chunks ... DONE
[16:17:54.945] future_lapply() ... DONE
[16:17:54.945] future_lapply() ...
[16:17:54.948] Number of chunks: 1
[16:17:54.949] getGlobalsAndPackagesXApply() ...
[16:17:54.949]  - future.globals: TRUE
[16:17:54.951]  - globals found/used: [n=1] ‘FUN’
[16:17:54.951]  - needed namespaces: [n=0] 
[16:17:54.951] Finding globals ... DONE
[16:17:54.951]  - use_args: TRUE
[16:17:54.951]  - Getting '...' globals ...
[16:17:54.951]    - '...' content: [n=1] ‘b’
[16:17:54.952] List of 1
[16:17:54.952]  $ ...:List of 1
[16:17:54.952]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:54.952]   .. .. ..@ slots     :List of 4
[16:17:54.952]   .. .. .. ..$ .Data  : chr "function"
[16:17:54.952]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. ..$ target : chr "signature"
[16:17:54.952]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. ..$ defined: chr "signature"
[16:17:54.952]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. ..$ generic: chr "character"
[16:17:54.952]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. ..@ contains  :List of 3
[16:17:54.952]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.952]   .. .. ..@ virtual   : logi FALSE
[16:17:54.952]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:54.952]  list()
[16:17:54.952]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:54.952]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:54.952]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:54.952]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:54.952]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:54.952]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:54.952]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:54.952]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:54.952]   .. .. .. .. ..$ generic: chr(0) 
[16:17:54.952]   .. .. ..@ validity  : NULL
[16:17:54.952]   .. .. ..@ access    : list()
[16:17:54.952]   .. .. ..@ className : chr "MethodDefinition"
[16:17:54.952]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. ..@ subclasses:List of 7
[16:17:54.952]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.952]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.952]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.952]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.952]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.952]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.952]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.952]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.952]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:54.952]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.952]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.952]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.952]   .. .. ..@ versionKey:<externalptr> 
[16:17:54.952]   .. .. ..@ sealed    : logi TRUE
[16:17:54.952]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.952]  - attr(*, "where")=List of 1
[16:17:54.952]   ..$ ...:<environment: 0x556b17151d98> 
[16:17:54.952]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.952]  - attr(*, "resolved")= logi TRUE
[16:17:54.952]  - attr(*, "total_size")= num NA
[16:17:54.999]  - Getting '...' globals ... DONE
[16:17:54.999] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:54.999] List of 2
[16:17:54.999]  $ ...future.FUN:function (a, b)  
[16:17:54.999]  $ ...          :List of 1
[16:17:54.999]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:17:54.999]   .. .. ..@ slots     :List of 4
[16:17:54.999]   .. .. .. ..$ .Data  : chr "function"
[16:17:54.999]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. ..$ target : chr "signature"
[16:17:54.999]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. ..$ defined: chr "signature"
[16:17:54.999]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. ..$ generic: chr "character"
[16:17:54.999]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. ..@ contains  :List of 3
[16:17:54.999]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "function"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr "function"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.999]   .. .. ..@ virtual   : logi FALSE
[16:17:54.999]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:17:54.999]  list()
[16:17:54.999]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:17:54.999]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:54.999]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:54.999]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:54.999]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:17:54.999]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:17:54.999]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:17:54.999]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:17:54.999]   .. .. .. .. ..$ generic: chr(0) 
[16:17:54.999]   .. .. ..@ validity  : NULL
[16:17:54.999]   .. .. ..@ access    : list()
[16:17:54.999]   .. .. ..@ className : chr "MethodDefinition"
[16:17:54.999]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. ..@ subclasses:List of 7
[16:17:54.999]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr(0) 
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 1
[16:17:54.999]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.999]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.999]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:17:54.999]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ package   : chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:17:54.999]   .. .. .. .. .. ..@ test      :function (object)  
[16:17:54.999]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:17:54.999]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:17:54.999]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:17:54.999]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:17:54.999]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:17:54.999]   .. .. .. .. .. ..@ distance  : num 2
[16:17:54.999]   .. .. ..@ versionKey:<externalptr> 
[16:17:54.999]   .. .. ..@ sealed    : logi TRUE
[16:17:54.999]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:54.999]  - attr(*, "where")=List of 2
[16:17:54.999]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:54.999]   ..$ ...          :<environment: 0x556b17151d98> 
[16:17:54.999]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:54.999]  - attr(*, "resolved")= logi FALSE
[16:17:54.999]  - attr(*, "total_size")= num 312512
[16:17:55.048] Packages to be attached in all futures: [n=0] 
[16:17:55.048] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.048] Number of futures (= number of chunks): 1
[16:17:55.048] Launching 1 futures (chunks) ...
[16:17:55.048] Chunk #1 of 1 ...
[16:17:55.048]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.049]    + additional globals found: [n=0] 
[16:17:55.049]    + additional namespaces needed: [n=0] 
[16:17:55.049]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.049]  - seeds: <none>
[16:17:55.049]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.067] Created future:
[16:17:55.067] MultisessionFuture:
[16:17:55.067] Label: ‘future_lapply-1’
[16:17:55.067] Expression:
[16:17:55.067] {
[16:17:55.067]     do.call(function(...) {
[16:17:55.067]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.067]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.067]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.067]             on.exit(options(oopts), add = TRUE)
[16:17:55.067]         }
[16:17:55.067]         {
[16:17:55.067]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.067]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.067]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.067]             })
[16:17:55.067]         }
[16:17:55.067]     }, args = future.call.arguments)
[16:17:55.067] }
[16:17:55.067] Lazy evaluation: FALSE
[16:17:55.067] Asynchronous evaluation: TRUE
[16:17:55.067] Local evaluation: TRUE
[16:17:55.067] Environment: R_GlobalEnv
[16:17:55.067] Capture standard output: TRUE
[16:17:55.067] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.067] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.067] Packages: <none>
[16:17:55.067] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.067] Resolved: FALSE
[16:17:55.067] Value: <not collected>
[16:17:55.067] Conditions captured: <none>
[16:17:55.067] Early signaling: FALSE
[16:17:55.067] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.067] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.078] Chunk #1 of 1 ... DONE
[16:17:55.078] Launching 1 futures (chunks) ... DONE
[16:17:55.079] Resolving 1 futures (chunks) ...
[16:17:55.121]  - Number of value chunks collected: 1
[16:17:55.121] Resolving 1 futures (chunks) ... DONE
[16:17:55.121] Reducing values from 1 chunks ...
[16:17:55.121]  - Number of values collected after concatenation: 1
[16:17:55.121]  - Number of values expected: 1
[16:17:55.121] Reducing values from 1 chunks ... DONE
[16:17:55.121] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:17:55.123] future_lapply() ...
[16:17:55.127] Number of chunks: 2
[16:17:55.127] getGlobalsAndPackagesXApply() ...
[16:17:55.127]  - future.globals: TRUE
[16:17:55.129]  - globals found/used: [n=1] ‘FUN’
[16:17:55.129]  - needed namespaces: [n=0] 
[16:17:55.129] Finding globals ... DONE
[16:17:55.129]  - use_args: TRUE
[16:17:55.129]  - Getting '...' globals ...
[16:17:55.130]    - '...' content: [n=0] 
[16:17:55.130] List of 1
[16:17:55.130]  $ ...: list()
[16:17:55.130]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.130]  - attr(*, "where")=List of 1
[16:17:55.130]   ..$ ...:<environment: 0x556b14feea40> 
[16:17:55.130]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.130]  - attr(*, "resolved")= logi TRUE
[16:17:55.130]  - attr(*, "total_size")= num NA
[16:17:55.132]  - Getting '...' globals ... DONE
[16:17:55.132] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:55.132] List of 2
[16:17:55.132]  $ ...future.FUN:function (f)  
[16:17:55.132]  $ ...          : list()
[16:17:55.132]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.132]  - attr(*, "where")=List of 2
[16:17:55.132]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.132]   ..$ ...          :<environment: 0x556b14feea40> 
[16:17:55.132]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.132]  - attr(*, "resolved")= logi FALSE
[16:17:55.132]  - attr(*, "total_size")= num 1008
[16:17:55.135] Packages to be attached in all futures: [n=0] 
[16:17:55.135] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.135] Number of futures (= number of chunks): 2
[16:17:55.135] Launching 2 futures (chunks) ...
[16:17:55.136] Chunk #1 of 2 ...
[16:17:55.136]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.137]    + additional globals found: [n=2] ‘a’, ‘b’
[16:17:55.137]    + additional namespaces needed: [n=0] 
[16:17:55.138]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.138]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.138]  - seeds: <none>
[16:17:55.138]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:17:55.155] Created future:
[16:17:55.155] MultisessionFuture:
[16:17:55.155] Label: ‘future_lapply-1’
[16:17:55.155] Expression:
[16:17:55.155] {
[16:17:55.155]     do.call(function(...) {
[16:17:55.155]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.155]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.155]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.155]             on.exit(options(oopts), add = TRUE)
[16:17:55.155]         }
[16:17:55.155]         {
[16:17:55.155]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.155]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.155]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.155]             })
[16:17:55.155]         }
[16:17:55.155]     }, args = future.call.arguments)
[16:17:55.155] }
[16:17:55.155] Lazy evaluation: FALSE
[16:17:55.155] Asynchronous evaluation: TRUE
[16:17:55.155] Local evaluation: TRUE
[16:17:55.155] Environment: R_GlobalEnv
[16:17:55.155] Capture standard output: TRUE
[16:17:55.155] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.155] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:17:55.155] Packages: <none>
[16:17:55.155] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.155] Resolved: FALSE
[16:17:55.155] Value: <not collected>
[16:17:55.155] Conditions captured: <none>
[16:17:55.155] Early signaling: FALSE
[16:17:55.155] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.155] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.166] Chunk #1 of 2 ... DONE
[16:17:55.167] Chunk #2 of 2 ...
[16:17:55.167]  - Finding globals in 'X' for chunk #2 ...
[16:17:55.168]    + additional globals found: [n=2] ‘a’, ‘b’
[16:17:55.169]    + additional namespaces needed: [n=1] ‘tools’
[16:17:55.169]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:55.169]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.169]  - seeds: <none>
[16:17:55.169]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:17:55.186] Created future:
[16:17:55.187] MultisessionFuture:
[16:17:55.187] Label: ‘future_lapply-2’
[16:17:55.187] Expression:
[16:17:55.187] {
[16:17:55.187]     do.call(function(...) {
[16:17:55.187]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.187]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.187]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.187]             on.exit(options(oopts), add = TRUE)
[16:17:55.187]         }
[16:17:55.187]         {
[16:17:55.187]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.187]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.187]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.187]             })
[16:17:55.187]         }
[16:17:55.187]     }, args = future.call.arguments)
[16:17:55.187] }
[16:17:55.187] Lazy evaluation: FALSE
[16:17:55.187] Asynchronous evaluation: TRUE
[16:17:55.187] Local evaluation: TRUE
[16:17:55.187] Environment: R_GlobalEnv
[16:17:55.187] Capture standard output: TRUE
[16:17:55.187] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.187] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:17:55.187] Packages: 1 packages (‘tools’)
[16:17:55.187] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.187] Resolved: FALSE
[16:17:55.187] Value: <not collected>
[16:17:55.187] Conditions captured: <none>
[16:17:55.187] Early signaling: FALSE
[16:17:55.187] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.187] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.198] Chunk #2 of 2 ... DONE
[16:17:55.198] Launching 2 futures (chunks) ... DONE
[16:17:55.198] Resolving 2 futures (chunks) ...
[16:17:55.244]  - Number of value chunks collected: 2
[16:17:55.244] Resolving 2 futures (chunks) ... DONE
[16:17:55.244] Reducing values from 2 chunks ...
[16:17:55.244]  - Number of values collected after concatenation: 4
[16:17:55.244]  - Number of values expected: 4
[16:17:55.244] Reducing values from 2 chunks ... DONE
[16:17:55.244] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:17:55.247] future_lapply() ...
[16:17:55.251] Number of chunks: 1
[16:17:55.251] getGlobalsAndPackagesXApply() ...
[16:17:55.251]  - future.globals: TRUE
[16:17:55.253]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:17:55.253]  - needed namespaces: [n=0] 
[16:17:55.253] Finding globals ... DONE
[16:17:55.253]  - use_args: TRUE
[16:17:55.254]  - Getting '...' globals ...
[16:17:55.254]    - '...' content: [n=0] 
[16:17:55.254] List of 1
[16:17:55.254]  $ ...: list()
[16:17:55.254]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.254]  - attr(*, "where")=List of 1
[16:17:55.254]   ..$ ...:<environment: 0x556b175e11e0> 
[16:17:55.254]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.254]  - attr(*, "resolved")= logi TRUE
[16:17:55.254]  - attr(*, "total_size")= num NA
[16:17:55.256]  - Getting '...' globals ... DONE
[16:17:55.257] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:17:55.257] List of 3
[16:17:55.257]  $ ...future.FUN        :function (x)  
[16:17:55.257]  $ future.call.arguments:List of 1
[16:17:55.257]   ..$ a: num 1
[16:17:55.257]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.257]  $ ...                  : list()
[16:17:55.257]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.257]  - attr(*, "where")=List of 3
[16:17:55.257]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:17:55.257]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:17:55.257]   ..$ ...                  :<environment: 0x556b175e11e0> 
[16:17:55.257]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.257]  - attr(*, "resolved")= logi FALSE
[16:17:55.257]  - attr(*, "total_size")= num 1272
[16:17:55.260] Packages to be attached in all futures: [n=0] 
[16:17:55.260] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.261] Number of futures (= number of chunks): 1
[16:17:55.261] Launching 1 futures (chunks) ...
[16:17:55.261] Chunk #1 of 1 ...
[16:17:55.261]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.261]    + additional globals found: [n=0] 
[16:17:55.261]    + additional namespaces needed: [n=0] 
[16:17:55.261]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.261]  - seeds: <none>
[16:17:55.262]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.280] Created future:
[16:17:55.280] MultisessionFuture:
[16:17:55.280] Label: ‘future_lapply-1’
[16:17:55.280] Expression:
[16:17:55.280] {
[16:17:55.280]     do.call(function(...) {
[16:17:55.280]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.280]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.280]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.280]             on.exit(options(oopts), add = TRUE)
[16:17:55.280]         }
[16:17:55.280]         {
[16:17:55.280]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.280]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.280]                 ...future.FUN(...future.X_jj)
[16:17:55.280]             })
[16:17:55.280]         }
[16:17:55.280]     }, args = future.call.arguments)
[16:17:55.280] }
[16:17:55.280] Lazy evaluation: FALSE
[16:17:55.280] Asynchronous evaluation: TRUE
[16:17:55.280] Local evaluation: TRUE
[16:17:55.280] Environment: 0x556b175e0e60
[16:17:55.280] Capture standard output: TRUE
[16:17:55.280] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.280] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.280] Packages: <none>
[16:17:55.280] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.280] Resolved: FALSE
[16:17:55.280] Value: <not collected>
[16:17:55.280] Conditions captured: <none>
[16:17:55.280] Early signaling: FALSE
[16:17:55.280] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.280] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.291] Chunk #1 of 1 ... DONE
[16:17:55.291] Launching 1 futures (chunks) ... DONE
[16:17:55.291] Resolving 1 futures (chunks) ...
[16:17:55.322]  - Number of value chunks collected: 1
[16:17:55.322] Resolving 1 futures (chunks) ... DONE
[16:17:55.322] Reducing values from 1 chunks ...
[16:17:55.322]  - Number of values collected after concatenation: 1
[16:17:55.323]  - Number of values expected: 1
[16:17:55.323] Reducing values from 1 chunks ... DONE
[16:17:55.323] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:17:55.324] future_lapply() ...
[16:17:55.328] Number of chunks: 1
[16:17:55.328] getGlobalsAndPackagesXApply() ...
[16:17:55.328]  - future.globals: TRUE
[16:17:55.330]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:55.331]  - needed namespaces: [n=0] 
[16:17:55.331] Finding globals ... DONE
[16:17:55.331]  - use_args: TRUE
[16:17:55.331]  - Getting '...' globals ...
[16:17:55.331]    - '...' content: [n=0] 
[16:17:55.331] List of 1
[16:17:55.331]  $ ...: list()
[16:17:55.331]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.331]  - attr(*, "where")=List of 1
[16:17:55.331]   ..$ ...:<environment: 0x556b17109ae8> 
[16:17:55.331]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.331]  - attr(*, "resolved")= logi TRUE
[16:17:55.331]  - attr(*, "total_size")= num NA
[16:17:55.334]  - Getting '...' globals ... DONE
[16:17:55.334] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:55.334] List of 3
[16:17:55.334]  $ ...future.FUN:function (ii)  
[16:17:55.334]  $ a            : num 1
[16:17:55.334]  $ ...          : list()
[16:17:55.334]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.334]  - attr(*, "where")=List of 3
[16:17:55.334]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.334]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:55.334]   ..$ ...          :<environment: 0x556b17109ae8> 
[16:17:55.334]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.334]  - attr(*, "resolved")= logi FALSE
[16:17:55.334]  - attr(*, "total_size")= num 2984
[16:17:55.337] Packages to be attached in all futures: [n=0] 
[16:17:55.337] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.338] Number of futures (= number of chunks): 1
[16:17:55.338] Launching 1 futures (chunks) ...
[16:17:55.338] Chunk #1 of 1 ...
[16:17:55.338]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.338]    + additional globals found: [n=0] 
[16:17:55.338]    + additional namespaces needed: [n=0] 
[16:17:55.338]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.338]  - seeds: <none>
[16:17:55.339]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.355] Created future:
[16:17:55.356] MultisessionFuture:
[16:17:55.356] Label: ‘future_lapply-1’
[16:17:55.356] Expression:
[16:17:55.356] {
[16:17:55.356]     do.call(function(...) {
[16:17:55.356]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.356]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.356]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.356]             on.exit(options(oopts), add = TRUE)
[16:17:55.356]         }
[16:17:55.356]         {
[16:17:55.356]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.356]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.356]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.356]             })
[16:17:55.356]         }
[16:17:55.356]     }, args = future.call.arguments)
[16:17:55.356] }
[16:17:55.356] Lazy evaluation: FALSE
[16:17:55.356] Asynchronous evaluation: TRUE
[16:17:55.356] Local evaluation: TRUE
[16:17:55.356] Environment: R_GlobalEnv
[16:17:55.356] Capture standard output: TRUE
[16:17:55.356] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.356] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:55.356] Packages: <none>
[16:17:55.356] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.356] Resolved: FALSE
[16:17:55.356] Value: <not collected>
[16:17:55.356] Conditions captured: <none>
[16:17:55.356] Early signaling: FALSE
[16:17:55.356] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.356] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.369] Chunk #1 of 1 ... DONE
[16:17:55.370] Launching 1 futures (chunks) ... DONE
[16:17:55.370] Resolving 1 futures (chunks) ...
[16:17:55.398]  - Number of value chunks collected: 1
[16:17:55.398] Resolving 1 futures (chunks) ... DONE
[16:17:55.398] Reducing values from 1 chunks ...
[16:17:55.399]  - Number of values collected after concatenation: 1
[16:17:55.399]  - Number of values expected: 1
[16:17:55.399] Reducing values from 1 chunks ... DONE
[16:17:55.399] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:17:55.399] future_lapply() ...
[16:17:55.403] Number of chunks: 1
[16:17:55.403] getGlobalsAndPackagesXApply() ...
[16:17:55.403]  - future.globals: TRUE
[16:17:55.405]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:17:55.405]  - needed namespaces: [n=0] 
[16:17:55.405] Finding globals ... DONE
[16:17:55.405]  - use_args: TRUE
[16:17:55.406]  - Getting '...' globals ...
[16:17:55.406]    - '...' content: [n=0] 
[16:17:55.406] List of 1
[16:17:55.406]  $ ...: list()
[16:17:55.406]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.406]  - attr(*, "where")=List of 1
[16:17:55.406]   ..$ ...:<environment: 0x556b17866210> 
[16:17:55.406]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.406]  - attr(*, "resolved")= logi TRUE
[16:17:55.406]  - attr(*, "total_size")= num NA
[16:17:55.408]  - Getting '...' globals ... DONE
[16:17:55.409] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:17:55.409] List of 3
[16:17:55.409]  $ ...future.FUN:function (ii)  
[16:17:55.409]  $ a            : num 1
[16:17:55.409]  $ ...          : list()
[16:17:55.409]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.409]  - attr(*, "where")=List of 3
[16:17:55.409]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.409]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:55.409]   ..$ ...          :<environment: 0x556b17866210> 
[16:17:55.409]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.409]  - attr(*, "resolved")= logi FALSE
[16:17:55.409]  - attr(*, "total_size")= num 2984
[16:17:55.412] Packages to be attached in all futures: [n=0] 
[16:17:55.412] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.412] Number of futures (= number of chunks): 1
[16:17:55.412] Launching 1 futures (chunks) ...
[16:17:55.412] Chunk #1 of 1 ...
[16:17:55.412]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.413]    + additional globals found: [n=0] 
[16:17:55.413]    + additional namespaces needed: [n=0] 
[16:17:55.413]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.413]  - seeds: <none>
[16:17:55.413]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.430] Created future:
[16:17:55.430] MultisessionFuture:
[16:17:55.430] Label: ‘future_lapply-1’
[16:17:55.430] Expression:
[16:17:55.430] {
[16:17:55.430]     do.call(function(...) {
[16:17:55.430]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.430]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.430]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.430]             on.exit(options(oopts), add = TRUE)
[16:17:55.430]         }
[16:17:55.430]         {
[16:17:55.430]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.430]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.430]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.430]             })
[16:17:55.430]         }
[16:17:55.430]     }, args = future.call.arguments)
[16:17:55.430] }
[16:17:55.430] Lazy evaluation: FALSE
[16:17:55.430] Asynchronous evaluation: TRUE
[16:17:55.430] Local evaluation: TRUE
[16:17:55.430] Environment: R_GlobalEnv
[16:17:55.430] Capture standard output: TRUE
[16:17:55.430] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.430] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:55.430] Packages: <none>
[16:17:55.430] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.430] Resolved: FALSE
[16:17:55.430] Value: <not collected>
[16:17:55.430] Conditions captured: <none>
[16:17:55.430] Early signaling: FALSE
[16:17:55.430] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.430] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.442] Chunk #1 of 1 ... DONE
[16:17:55.442] Launching 1 futures (chunks) ... DONE
[16:17:55.442] Resolving 1 futures (chunks) ...
[16:17:55.484]  - Number of value chunks collected: 1
[16:17:55.484] Resolving 1 futures (chunks) ... DONE
[16:17:55.484] Reducing values from 1 chunks ...
[16:17:55.484]  - Number of values collected after concatenation: 1
[16:17:55.484]  - Number of values expected: 1
[16:17:55.484] Reducing values from 1 chunks ... DONE
[16:17:55.485] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:17:55.485] future_lapply() ...
[16:17:55.488] Number of chunks: 1
[16:17:55.488] getGlobalsAndPackagesXApply() ...
[16:17:55.488]  - future.globals: <name-value list> with names ‘42’
[16:17:55.489]  - use_args: TRUE
[16:17:55.489]  - Getting '...' globals ...
[16:17:55.489]    - '...' content: [n=0] 
[16:17:55.489] List of 1
[16:17:55.489]  $ ...: list()
[16:17:55.489]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.489]  - attr(*, "where")=List of 1
[16:17:55.489]   ..$ ...:<environment: 0x556b184121f0> 
[16:17:55.489]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.489]  - attr(*, "resolved")= logi TRUE
[16:17:55.489]  - attr(*, "total_size")= num NA
[16:17:55.492]  - Getting '...' globals ... DONE
[16:17:55.492] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:17:55.492] List of 3
[16:17:55.492]  $ a            : num 42
[16:17:55.492]  $ ...future.FUN:function (x)  
[16:17:55.492]  $ ...          : list()
[16:17:55.492]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.492]  - attr(*, "where")=List of 3
[16:17:55.492]   ..$ a            :<environment: R_EmptyEnv> 
[16:17:55.492]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:17:55.492]   ..$ ...          :<environment: 0x556b184121f0> 
[16:17:55.492]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.492]  - attr(*, "resolved")= logi FALSE
[16:17:55.492]  - attr(*, "total_size")= num NA
[16:17:55.495] Packages to be attached in all futures: [n=0] 
[16:17:55.495] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.495] Number of futures (= number of chunks): 1
[16:17:55.495] Launching 1 futures (chunks) ...
[16:17:55.495] Chunk #1 of 1 ...
[16:17:55.496]  - seeds: <none>
[16:17:55.496]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.513] Created future:
[16:17:55.513] MultisessionFuture:
[16:17:55.513] Label: ‘future_lapply-1’
[16:17:55.513] Expression:
[16:17:55.513] {
[16:17:55.513]     do.call(function(...) {
[16:17:55.513]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.513]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.513]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.513]             on.exit(options(oopts), add = TRUE)
[16:17:55.513]         }
[16:17:55.513]         {
[16:17:55.513]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.513]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.513]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.513]             })
[16:17:55.513]         }
[16:17:55.513]     }, args = future.call.arguments)
[16:17:55.513] }
[16:17:55.513] Lazy evaluation: FALSE
[16:17:55.513] Asynchronous evaluation: TRUE
[16:17:55.513] Local evaluation: TRUE
[16:17:55.513] Environment: R_GlobalEnv
[16:17:55.513] Capture standard output: TRUE
[16:17:55.513] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.513] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:17:55.513] Packages: <none>
[16:17:55.513] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.513] Resolved: FALSE
[16:17:55.513] Value: <not collected>
[16:17:55.513] Conditions captured: <none>
[16:17:55.513] Early signaling: FALSE
[16:17:55.513] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.513] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.525] Chunk #1 of 1 ... DONE
[16:17:55.525] Launching 1 futures (chunks) ... DONE
[16:17:55.525] Resolving 1 futures (chunks) ...
[16:17:55.567]  - Number of value chunks collected: 1
[16:17:55.567] Resolving 1 futures (chunks) ... DONE
[16:17:55.567] Reducing values from 1 chunks ...
[16:17:55.567]  - Number of values collected after concatenation: 1
[16:17:55.567]  - Number of values expected: 1
[16:17:55.567] Reducing values from 1 chunks ... DONE
[16:17:55.567] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[16:17:55.568] future_lapply() ...
[16:17:55.572] Number of chunks: 2
[16:17:55.572] getGlobalsAndPackagesXApply() ...
[16:17:55.572]  - future.globals: TRUE
[16:17:55.576]  - globals found/used: [n=1] ‘FUN’
[16:17:55.576]  - needed namespaces: [n=0] 
[16:17:55.576] Finding globals ... DONE
[16:17:55.576]  - use_args: TRUE
[16:17:55.576]  - Getting '...' globals ...
[16:17:55.577]    - '...' content: [n=0] 
[16:17:55.577] List of 1
[16:17:55.577]  $ ...: list()
[16:17:55.577]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.577]  - attr(*, "where")=List of 1
[16:17:55.577]   ..$ ...:<environment: 0x556b180a7f50> 
[16:17:55.577]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.577]  - attr(*, "resolved")= logi TRUE
[16:17:55.577]  - attr(*, "total_size")= num NA
[16:17:55.579]  - Getting '...' globals ... DONE
[16:17:55.579] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:55.579] List of 2
[16:17:55.579]  $ ...future.FUN:function (y)  
[16:17:55.579]  $ ...          : list()
[16:17:55.579]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.579]  - attr(*, "where")=List of 2
[16:17:55.579]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.579]   ..$ ...          :<environment: 0x556b180a7f50> 
[16:17:55.579]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.579]  - attr(*, "resolved")= logi FALSE
[16:17:55.579]  - attr(*, "total_size")= num 280
[16:17:55.582] Packages to be attached in all futures: [n=0] 
[16:17:55.582] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.582] Number of futures (= number of chunks): 2
[16:17:55.582] Launching 2 futures (chunks) ...
[16:17:55.582] Chunk #1 of 2 ...
[16:17:55.583]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.583]    + additional globals found: [n=0] 
[16:17:55.583]    + additional namespaces needed: [n=0] 
[16:17:55.583]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.583]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.583]  - seeds: <none>
[16:17:55.583]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.600] Created future:
[16:17:55.600] MultisessionFuture:
[16:17:55.600] Label: ‘future_lapply-1’
[16:17:55.600] Expression:
[16:17:55.600] {
[16:17:55.600]     do.call(function(...) {
[16:17:55.600]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.600]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.600]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.600]             on.exit(options(oopts), add = TRUE)
[16:17:55.600]         }
[16:17:55.600]         {
[16:17:55.600]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.600]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.600]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.600]             })
[16:17:55.600]         }
[16:17:55.600]     }, args = future.call.arguments)
[16:17:55.600] }
[16:17:55.600] Lazy evaluation: FALSE
[16:17:55.600] Asynchronous evaluation: TRUE
[16:17:55.600] Local evaluation: TRUE
[16:17:55.600] Environment: 0x556b180a8340
[16:17:55.600] Capture standard output: TRUE
[16:17:55.600] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.600] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.600] Packages: <none>
[16:17:55.600] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.600] Resolved: FALSE
[16:17:55.600] Value: <not collected>
[16:17:55.600] Conditions captured: <none>
[16:17:55.600] Early signaling: FALSE
[16:17:55.600] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.600] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.611] Chunk #1 of 2 ... DONE
[16:17:55.612] Chunk #2 of 2 ...
[16:17:55.612]  - Finding globals in 'X' for chunk #2 ...
[16:17:55.612]    + additional globals found: [n=0] 
[16:17:55.612]    + additional namespaces needed: [n=0] 
[16:17:55.613]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:55.613]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.613]  - seeds: <none>
[16:17:55.613]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.630] Created future:
[16:17:55.630] MultisessionFuture:
[16:17:55.630] Label: ‘future_lapply-2’
[16:17:55.630] Expression:
[16:17:55.630] {
[16:17:55.630]     do.call(function(...) {
[16:17:55.630]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.630]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.630]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.630]             on.exit(options(oopts), add = TRUE)
[16:17:55.630]         }
[16:17:55.630]         {
[16:17:55.630]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.630]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.630]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.630]             })
[16:17:55.630]         }
[16:17:55.630]     }, args = future.call.arguments)
[16:17:55.630] }
[16:17:55.630] Lazy evaluation: FALSE
[16:17:55.630] Asynchronous evaluation: TRUE
[16:17:55.630] Local evaluation: TRUE
[16:17:55.630] Environment: 0x556b180a8340
[16:17:55.630] Capture standard output: TRUE
[16:17:55.630] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.630] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.630] Packages: <none>
[16:17:55.630] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.630] Resolved: FALSE
[16:17:55.630] Value: <not collected>
[16:17:55.630] Conditions captured: <none>
[16:17:55.630] Early signaling: FALSE
[16:17:55.630] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.630] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.642] Chunk #2 of 2 ... DONE
[16:17:55.642] Launching 2 futures (chunks) ... DONE
[16:17:55.642] Resolving 2 futures (chunks) ...
[16:17:55.674]  - Number of value chunks collected: 2
[16:17:55.674] Resolving 2 futures (chunks) ... DONE
[16:17:55.675] Reducing values from 2 chunks ...
[16:17:55.675]  - Number of values collected after concatenation: 2
[16:17:55.675]  - Number of values expected: 2
[16:17:55.675] Reducing values from 2 chunks ... DONE
[16:17:55.675] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[16:17:55.675] future_lapply() ...
[16:17:55.679] Number of chunks: 2
[16:17:55.679] getGlobalsAndPackagesXApply() ...
[16:17:55.679]  - future.globals: TRUE
[16:17:55.681]  - globals found/used: [n=1] ‘FUN’
[16:17:55.681]  - needed namespaces: [n=0] 
[16:17:55.681] Finding globals ... DONE
[16:17:55.681]  - use_args: TRUE
[16:17:55.681]  - Getting '...' globals ...
[16:17:55.681]    - '...' content: [n=0] 
[16:17:55.682] List of 1
[16:17:55.682]  $ ...: list()
[16:17:55.682]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.682]  - attr(*, "where")=List of 1
[16:17:55.682]   ..$ ...:<environment: 0x556b183dc098> 
[16:17:55.682]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.682]  - attr(*, "resolved")= logi TRUE
[16:17:55.682]  - attr(*, "total_size")= num NA
[16:17:55.684]  - Getting '...' globals ... DONE
[16:17:55.684] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:55.684] List of 2
[16:17:55.684]  $ ...future.FUN:function (y)  
[16:17:55.684]  $ ...          : list()
[16:17:55.684]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.684]  - attr(*, "where")=List of 2
[16:17:55.684]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.684]   ..$ ...          :<environment: 0x556b183dc098> 
[16:17:55.684]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.684]  - attr(*, "resolved")= logi FALSE
[16:17:55.684]  - attr(*, "total_size")= num 280
[16:17:55.687] Packages to be attached in all futures: [n=0] 
[16:17:55.687] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.687] Number of futures (= number of chunks): 2
[16:17:55.687] Launching 2 futures (chunks) ...
[16:17:55.687] Chunk #1 of 2 ...
[16:17:55.687]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.688]    + additional globals found: [n=0] 
[16:17:55.688]    + additional namespaces needed: [n=0] 
[16:17:55.688]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.688]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.688]  - seeds: <none>
[16:17:55.688]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.705] Created future:
[16:17:55.705] MultisessionFuture:
[16:17:55.705] Label: ‘future_lapply-1’
[16:17:55.705] Expression:
[16:17:55.705] {
[16:17:55.705]     do.call(function(...) {
[16:17:55.705]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.705]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.705]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.705]             on.exit(options(oopts), add = TRUE)
[16:17:55.705]         }
[16:17:55.705]         {
[16:17:55.705]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.705]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.705]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.705]             })
[16:17:55.705]         }
[16:17:55.705]     }, args = future.call.arguments)
[16:17:55.705] }
[16:17:55.705] Lazy evaluation: FALSE
[16:17:55.705] Asynchronous evaluation: TRUE
[16:17:55.705] Local evaluation: TRUE
[16:17:55.705] Environment: 0x556b183dc488
[16:17:55.705] Capture standard output: TRUE
[16:17:55.705] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.705] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.705] Packages: <none>
[16:17:55.705] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.705] Resolved: FALSE
[16:17:55.705] Value: <not collected>
[16:17:55.705] Conditions captured: <none>
[16:17:55.705] Early signaling: FALSE
[16:17:55.705] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.705] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.716] Chunk #1 of 2 ... DONE
[16:17:55.716] Chunk #2 of 2 ...
[16:17:55.716]  - Finding globals in 'X' for chunk #2 ...
[16:17:55.717]    + additional globals found: [n=0] 
[16:17:55.717]    + additional namespaces needed: [n=0] 
[16:17:55.717]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:55.717]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.717]  - seeds: <none>
[16:17:55.717]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.742] Created future:
[16:17:55.742] MultisessionFuture:
[16:17:55.742] Label: ‘future_lapply-2’
[16:17:55.742] Expression:
[16:17:55.742] {
[16:17:55.742]     do.call(function(...) {
[16:17:55.742]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.742]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.742]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.742]             on.exit(options(oopts), add = TRUE)
[16:17:55.742]         }
[16:17:55.742]         {
[16:17:55.742]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.742]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.742]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.742]             })
[16:17:55.742]         }
[16:17:55.742]     }, args = future.call.arguments)
[16:17:55.742] }
[16:17:55.742] Lazy evaluation: FALSE
[16:17:55.742] Asynchronous evaluation: TRUE
[16:17:55.742] Local evaluation: TRUE
[16:17:55.742] Environment: 0x556b183dc488
[16:17:55.742] Capture standard output: TRUE
[16:17:55.742] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.742] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.742] Packages: <none>
[16:17:55.742] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.742] Resolved: FALSE
[16:17:55.742] Value: <not collected>
[16:17:55.742] Conditions captured: <none>
[16:17:55.742] Early signaling: FALSE
[16:17:55.742] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.742] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.753] Chunk #2 of 2 ... DONE
[16:17:55.754] Launching 2 futures (chunks) ... DONE
[16:17:55.754] Resolving 2 futures (chunks) ...
[16:17:55.797]  - Number of value chunks collected: 2
[16:17:55.797] Resolving 2 futures (chunks) ... DONE
[16:17:55.797] Reducing values from 2 chunks ...
[16:17:55.797]  - Number of values collected after concatenation: 2
[16:17:55.797]  - Number of values expected: 2
[16:17:55.797] Reducing values from 2 chunks ... DONE
[16:17:55.797] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[16:17:55.800] future_lapply() ...
[16:17:55.803] Number of chunks: 2
[16:17:55.804] getGlobalsAndPackagesXApply() ...
[16:17:55.804]  - future.globals: TRUE
[16:17:55.805] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[16:17:55.805] future_lapply() ...
[16:17:55.809] Number of chunks: 2
[16:17:55.809] getGlobalsAndPackagesXApply() ...
[16:17:55.809]  - future.globals: TRUE
[16:17:55.811]  - globals found/used: [n=1] ‘FUN’
[16:17:55.811]  - needed namespaces: [n=0] 
[16:17:55.811] Finding globals ... DONE
[16:17:55.811]  - use_args: TRUE
[16:17:55.811]  - Getting '...' globals ...
[16:17:55.812]    - '...' content: [n=0] 
[16:17:55.812] List of 1
[16:17:55.812]  $ ...: list()
[16:17:55.812]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.812]  - attr(*, "where")=List of 1
[16:17:55.812]   ..$ ...:<environment: 0x556b16f20a20> 
[16:17:55.812]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.812]  - attr(*, "resolved")= logi TRUE
[16:17:55.812]  - attr(*, "total_size")= num NA
[16:17:55.814]  - Getting '...' globals ... DONE
[16:17:55.814] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:55.815] List of 2
[16:17:55.815]  $ ...future.FUN:function (x)  
[16:17:55.815]  $ ...          : list()
[16:17:55.815]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.815]  - attr(*, "where")=List of 2
[16:17:55.815]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.815]   ..$ ...          :<environment: 0x556b16f20a20> 
[16:17:55.815]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.815]  - attr(*, "resolved")= logi FALSE
[16:17:55.815]  - attr(*, "total_size")= num 1840
[16:17:55.817] Packages to be attached in all futures: [n=0] 
[16:17:55.817] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.817] Number of futures (= number of chunks): 2
[16:17:55.818] Launching 2 futures (chunks) ...
[16:17:55.818] Chunk #1 of 2 ...
[16:17:55.818]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.818]    + additional globals found: [n=0] 
[16:17:55.818]    + additional namespaces needed: [n=0] 
[16:17:55.818]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.818]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.818]  - seeds: <none>
[16:17:55.819]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.835] Created future:
[16:17:55.835] MultisessionFuture:
[16:17:55.835] Label: ‘future_lapply-1’
[16:17:55.835] Expression:
[16:17:55.835] {
[16:17:55.835]     do.call(function(...) {
[16:17:55.835]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.835]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.835]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.835]             on.exit(options(oopts), add = TRUE)
[16:17:55.835]         }
[16:17:55.835]         {
[16:17:55.835]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.835]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.835]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.835]             })
[16:17:55.835]         }
[16:17:55.835]     }, args = future.call.arguments)
[16:17:55.835] }
[16:17:55.835] Lazy evaluation: FALSE
[16:17:55.835] Asynchronous evaluation: TRUE
[16:17:55.835] Local evaluation: TRUE
[16:17:55.835] Environment: R_GlobalEnv
[16:17:55.835] Capture standard output: TRUE
[16:17:55.835] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.835] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.835] Packages: <none>
[16:17:55.835] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.835] Resolved: FALSE
[16:17:55.835] Value: <not collected>
[16:17:55.835] Conditions captured: <none>
[16:17:55.835] Early signaling: FALSE
[16:17:55.835] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.835] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.847] Chunk #1 of 2 ... DONE
[16:17:55.847] Chunk #2 of 2 ...
[16:17:55.847]  - Finding globals in 'X' for chunk #2 ...
[16:17:55.847]    + additional globals found: [n=0] 
[16:17:55.848]    + additional namespaces needed: [n=0] 
[16:17:55.848]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:55.848]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:17:55.848]  - seeds: <none>
[16:17:55.848]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.864] Created future:
[16:17:55.865] MultisessionFuture:
[16:17:55.865] Label: ‘future_lapply-2’
[16:17:55.865] Expression:
[16:17:55.865] {
[16:17:55.865]     do.call(function(...) {
[16:17:55.865]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.865]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.865]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.865]             on.exit(options(oopts), add = TRUE)
[16:17:55.865]         }
[16:17:55.865]         {
[16:17:55.865]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.865]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.865]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.865]             })
[16:17:55.865]         }
[16:17:55.865]     }, args = future.call.arguments)
[16:17:55.865] }
[16:17:55.865] Lazy evaluation: FALSE
[16:17:55.865] Asynchronous evaluation: TRUE
[16:17:55.865] Local evaluation: TRUE
[16:17:55.865] Environment: R_GlobalEnv
[16:17:55.865] Capture standard output: TRUE
[16:17:55.865] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.865] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:17:55.865] Packages: <none>
[16:17:55.865] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.865] Resolved: FALSE
[16:17:55.865] Value: <not collected>
[16:17:55.865] Conditions captured: <none>
[16:17:55.865] Early signaling: FALSE
[16:17:55.865] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.865] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.876] Chunk #2 of 2 ... DONE
[16:17:55.876] Launching 2 futures (chunks) ... DONE
[16:17:55.876] Resolving 2 futures (chunks) ...
[16:17:55.920]  - Number of value chunks collected: 2
[16:17:55.920] Resolving 2 futures (chunks) ... DONE
[16:17:55.920] Reducing values from 2 chunks ...
[16:17:55.921]  - Number of values collected after concatenation: 10
[16:17:55.921]  - Number of values expected: 10
[16:17:55.921] Reducing values from 2 chunks ... DONE
[16:17:55.921] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[16:17:55.930] future_lapply() ...
[16:17:55.934] Number of chunks: 10
[16:17:55.935] getGlobalsAndPackagesXApply() ...
[16:17:55.935]  - future.globals: TRUE
[16:17:55.937]  - globals found/used: [n=1] ‘FUN’
[16:17:55.937]  - needed namespaces: [n=0] 
[16:17:55.937] Finding globals ... DONE
[16:17:55.937]  - use_args: TRUE
[16:17:55.937]  - Getting '...' globals ...
[16:17:55.937]    - '...' content: [n=0] 
[16:17:55.937] List of 1
[16:17:55.937]  $ ...: list()
[16:17:55.937]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.937]  - attr(*, "where")=List of 1
[16:17:55.937]   ..$ ...:<environment: 0x556b1772d8c0> 
[16:17:55.937]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.937]  - attr(*, "resolved")= logi TRUE
[16:17:55.937]  - attr(*, "total_size")= num NA
[16:17:55.940]  - Getting '...' globals ... DONE
[16:17:55.940] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:55.940] List of 2
[16:17:55.940]  $ ...future.FUN:function (x)  
[16:17:55.940]  $ ...          : list()
[16:17:55.940]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:55.940]  - attr(*, "where")=List of 2
[16:17:55.940]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:55.940]   ..$ ...          :<environment: 0x556b1772d8c0> 
[16:17:55.940]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:55.940]  - attr(*, "resolved")= logi FALSE
[16:17:55.940]  - attr(*, "total_size")= num 1840
[16:17:55.943] Packages to be attached in all futures: [n=0] 
[16:17:55.943] getGlobalsAndPackagesXApply() ... DONE
[16:17:55.943] Number of futures (= number of chunks): 10
[16:17:55.943] Launching 10 futures (chunks) ...
[16:17:55.943] Chunk #1 of 10 ...
[16:17:55.943]  - Finding globals in 'X' for chunk #1 ...
[16:17:55.944]    + additional globals found: [n=0] 
[16:17:55.944]    + additional namespaces needed: [n=0] 
[16:17:55.944]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:55.944]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:55.944]  - seeds: <none>
[16:17:55.944]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.962] Created future:
[16:17:55.962] MultisessionFuture:
[16:17:55.962] Label: ‘future_lapply-1’
[16:17:55.962] Expression:
[16:17:55.962] {
[16:17:55.962]     do.call(function(...) {
[16:17:55.962]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.962]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.962]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.962]             on.exit(options(oopts), add = TRUE)
[16:17:55.962]         }
[16:17:55.962]         {
[16:17:55.962]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.962]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.962]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.962]             })
[16:17:55.962]         }
[16:17:55.962]     }, args = future.call.arguments)
[16:17:55.962] }
[16:17:55.962] Lazy evaluation: FALSE
[16:17:55.962] Asynchronous evaluation: TRUE
[16:17:55.962] Local evaluation: TRUE
[16:17:55.962] Environment: R_GlobalEnv
[16:17:55.962] Capture standard output: TRUE
[16:17:55.962] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.962] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:55.962] Packages: <none>
[16:17:55.962] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.962] Resolved: FALSE
[16:17:55.962] Value: <not collected>
[16:17:55.962] Conditions captured: <none>
[16:17:55.962] Early signaling: FALSE
[16:17:55.962] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.962] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:55.974] Chunk #1 of 10 ... DONE
[16:17:55.974] Chunk #2 of 10 ...
[16:17:55.974]  - Finding globals in 'X' for chunk #2 ...
[16:17:55.974]    + additional globals found: [n=0] 
[16:17:55.974]    + additional namespaces needed: [n=0] 
[16:17:55.974]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:55.975]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:55.975]  - seeds: <none>
[16:17:55.975]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:55.992] Created future:
[16:17:55.992] MultisessionFuture:
[16:17:55.992] Label: ‘future_lapply-2’
[16:17:55.992] Expression:
[16:17:55.992] {
[16:17:55.992]     do.call(function(...) {
[16:17:55.992]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:55.992]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:55.992]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:55.992]             on.exit(options(oopts), add = TRUE)
[16:17:55.992]         }
[16:17:55.992]         {
[16:17:55.992]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:55.992]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:55.992]                 ...future.FUN(...future.X_jj, ...)
[16:17:55.992]             })
[16:17:55.992]         }
[16:17:55.992]     }, args = future.call.arguments)
[16:17:55.992] }
[16:17:55.992] Lazy evaluation: FALSE
[16:17:55.992] Asynchronous evaluation: TRUE
[16:17:55.992] Local evaluation: TRUE
[16:17:55.992] Environment: R_GlobalEnv
[16:17:55.992] Capture standard output: TRUE
[16:17:55.992] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:55.992] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:55.992] Packages: <none>
[16:17:55.992] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:55.992] Resolved: FALSE
[16:17:55.992] Value: <not collected>
[16:17:55.992] Conditions captured: <none>
[16:17:55.992] Early signaling: FALSE
[16:17:55.992] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:55.992] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.003] Chunk #2 of 10 ... DONE
[16:17:56.003] Chunk #3 of 10 ...
[16:17:56.003]  - Finding globals in 'X' for chunk #3 ...
[16:17:56.004]    + additional globals found: [n=0] 
[16:17:56.004]    + additional namespaces needed: [n=0] 
[16:17:56.004]  - Finding globals in 'X' for chunk #3 ... DONE
[16:17:56.004]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.004]  - seeds: <none>
[16:17:56.004]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.032] Created future:
[16:17:56.032] MultisessionFuture:
[16:17:56.032] Label: ‘future_lapply-3’
[16:17:56.032] Expression:
[16:17:56.032] {
[16:17:56.032]     do.call(function(...) {
[16:17:56.032]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.032]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.032]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.032]             on.exit(options(oopts), add = TRUE)
[16:17:56.032]         }
[16:17:56.032]         {
[16:17:56.032]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.032]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.032]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.032]             })
[16:17:56.032]         }
[16:17:56.032]     }, args = future.call.arguments)
[16:17:56.032] }
[16:17:56.032] Lazy evaluation: FALSE
[16:17:56.032] Asynchronous evaluation: TRUE
[16:17:56.032] Local evaluation: TRUE
[16:17:56.032] Environment: R_GlobalEnv
[16:17:56.032] Capture standard output: TRUE
[16:17:56.032] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.032] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.032] Packages: <none>
[16:17:56.032] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.032] Resolved: FALSE
[16:17:56.032] Value: <not collected>
[16:17:56.032] Conditions captured: <none>
[16:17:56.032] Early signaling: FALSE
[16:17:56.032] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.032] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.044] Chunk #3 of 10 ... DONE
[16:17:56.044] Chunk #4 of 10 ...
[16:17:56.044]  - Finding globals in 'X' for chunk #4 ...
[16:17:56.044]    + additional globals found: [n=0] 
[16:17:56.045]    + additional namespaces needed: [n=0] 
[16:17:56.045]  - Finding globals in 'X' for chunk #4 ... DONE
[16:17:56.045]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.045]  - seeds: <none>
[16:17:56.045]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.083] Created future:
[16:17:56.083] MultisessionFuture:
[16:17:56.083] Label: ‘future_lapply-4’
[16:17:56.083] Expression:
[16:17:56.083] {
[16:17:56.083]     do.call(function(...) {
[16:17:56.083]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.083]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.083]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.083]             on.exit(options(oopts), add = TRUE)
[16:17:56.083]         }
[16:17:56.083]         {
[16:17:56.083]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.083]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.083]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.083]             })
[16:17:56.083]         }
[16:17:56.083]     }, args = future.call.arguments)
[16:17:56.083] }
[16:17:56.083] Lazy evaluation: FALSE
[16:17:56.083] Asynchronous evaluation: TRUE
[16:17:56.083] Local evaluation: TRUE
[16:17:56.083] Environment: R_GlobalEnv
[16:17:56.083] Capture standard output: TRUE
[16:17:56.083] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.083] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.083] Packages: <none>
[16:17:56.083] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.083] Resolved: FALSE
[16:17:56.083] Value: <not collected>
[16:17:56.083] Conditions captured: <none>
[16:17:56.083] Early signaling: FALSE
[16:17:56.083] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.083] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.095] Chunk #4 of 10 ... DONE
[16:17:56.095] Chunk #5 of 10 ...
[16:17:56.095]  - Finding globals in 'X' for chunk #5 ...
[16:17:56.095]    + additional globals found: [n=0] 
[16:17:56.095]    + additional namespaces needed: [n=0] 
[16:17:56.095]  - Finding globals in 'X' for chunk #5 ... DONE
[16:17:56.095]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.095]  - seeds: <none>
[16:17:56.096]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.123] Created future:
[16:17:56.123] MultisessionFuture:
[16:17:56.123] Label: ‘future_lapply-5’
[16:17:56.123] Expression:
[16:17:56.123] {
[16:17:56.123]     do.call(function(...) {
[16:17:56.123]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.123]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.123]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.123]             on.exit(options(oopts), add = TRUE)
[16:17:56.123]         }
[16:17:56.123]         {
[16:17:56.123]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.123]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.123]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.123]             })
[16:17:56.123]         }
[16:17:56.123]     }, args = future.call.arguments)
[16:17:56.123] }
[16:17:56.123] Lazy evaluation: FALSE
[16:17:56.123] Asynchronous evaluation: TRUE
[16:17:56.123] Local evaluation: TRUE
[16:17:56.123] Environment: R_GlobalEnv
[16:17:56.123] Capture standard output: TRUE
[16:17:56.123] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.123] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.123] Packages: <none>
[16:17:56.123] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.123] Resolved: FALSE
[16:17:56.123] Value: <not collected>
[16:17:56.123] Conditions captured: <none>
[16:17:56.123] Early signaling: FALSE
[16:17:56.123] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.123] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.134] Chunk #5 of 10 ... DONE
[16:17:56.135] Chunk #6 of 10 ...
[16:17:56.135]  - Finding globals in 'X' for chunk #6 ...
[16:17:56.135]    + additional globals found: [n=0] 
[16:17:56.135]    + additional namespaces needed: [n=0] 
[16:17:56.135]  - Finding globals in 'X' for chunk #6 ... DONE
[16:17:56.135]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.135]  - seeds: <none>
[16:17:56.136]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.165] Created future:
[16:17:56.165] MultisessionFuture:
[16:17:56.165] Label: ‘future_lapply-6’
[16:17:56.165] Expression:
[16:17:56.165] {
[16:17:56.165]     do.call(function(...) {
[16:17:56.165]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.165]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.165]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.165]             on.exit(options(oopts), add = TRUE)
[16:17:56.165]         }
[16:17:56.165]         {
[16:17:56.165]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.165]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.165]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.165]             })
[16:17:56.165]         }
[16:17:56.165]     }, args = future.call.arguments)
[16:17:56.165] }
[16:17:56.165] Lazy evaluation: FALSE
[16:17:56.165] Asynchronous evaluation: TRUE
[16:17:56.165] Local evaluation: TRUE
[16:17:56.165] Environment: R_GlobalEnv
[16:17:56.165] Capture standard output: TRUE
[16:17:56.165] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.165] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.165] Packages: <none>
[16:17:56.165] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.165] Resolved: FALSE
[16:17:56.165] Value: <not collected>
[16:17:56.165] Conditions captured: <none>
[16:17:56.165] Early signaling: FALSE
[16:17:56.165] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.165] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.177] Chunk #6 of 10 ... DONE
[16:17:56.177] Chunk #7 of 10 ...
[16:17:56.177]  - Finding globals in 'X' for chunk #7 ...
[16:17:56.177]    + additional globals found: [n=0] 
[16:17:56.177]    + additional namespaces needed: [n=0] 
[16:17:56.177]  - Finding globals in 'X' for chunk #7 ... DONE
[16:17:56.178]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.178]  - seeds: <none>
[16:17:56.178]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.206] Created future:
[16:17:56.206] MultisessionFuture:
[16:17:56.206] Label: ‘future_lapply-7’
[16:17:56.206] Expression:
[16:17:56.206] {
[16:17:56.206]     do.call(function(...) {
[16:17:56.206]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.206]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.206]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.206]             on.exit(options(oopts), add = TRUE)
[16:17:56.206]         }
[16:17:56.206]         {
[16:17:56.206]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.206]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.206]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.206]             })
[16:17:56.206]         }
[16:17:56.206]     }, args = future.call.arguments)
[16:17:56.206] }
[16:17:56.206] Lazy evaluation: FALSE
[16:17:56.206] Asynchronous evaluation: TRUE
[16:17:56.206] Local evaluation: TRUE
[16:17:56.206] Environment: R_GlobalEnv
[16:17:56.206] Capture standard output: TRUE
[16:17:56.206] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.206] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.206] Packages: <none>
[16:17:56.206] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.206] Resolved: FALSE
[16:17:56.206] Value: <not collected>
[16:17:56.206] Conditions captured: <none>
[16:17:56.206] Early signaling: FALSE
[16:17:56.206] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.206] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.217] Chunk #7 of 10 ... DONE
[16:17:56.218] Chunk #8 of 10 ...
[16:17:56.218]  - Finding globals in 'X' for chunk #8 ...
[16:17:56.218]    + additional globals found: [n=0] 
[16:17:56.218]    + additional namespaces needed: [n=0] 
[16:17:56.218]  - Finding globals in 'X' for chunk #8 ... DONE
[16:17:56.218]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.218]  - seeds: <none>
[16:17:56.218]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.246] Created future:
[16:17:56.246] MultisessionFuture:
[16:17:56.246] Label: ‘future_lapply-8’
[16:17:56.246] Expression:
[16:17:56.246] {
[16:17:56.246]     do.call(function(...) {
[16:17:56.246]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.246]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.246]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.246]             on.exit(options(oopts), add = TRUE)
[16:17:56.246]         }
[16:17:56.246]         {
[16:17:56.246]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.246]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.246]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.246]             })
[16:17:56.246]         }
[16:17:56.246]     }, args = future.call.arguments)
[16:17:56.246] }
[16:17:56.246] Lazy evaluation: FALSE
[16:17:56.246] Asynchronous evaluation: TRUE
[16:17:56.246] Local evaluation: TRUE
[16:17:56.246] Environment: R_GlobalEnv
[16:17:56.246] Capture standard output: TRUE
[16:17:56.246] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.246] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.246] Packages: <none>
[16:17:56.246] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.246] Resolved: FALSE
[16:17:56.246] Value: <not collected>
[16:17:56.246] Conditions captured: <none>
[16:17:56.246] Early signaling: FALSE
[16:17:56.246] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.246] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.258] Chunk #8 of 10 ... DONE
[16:17:56.258] Chunk #9 of 10 ...
[16:17:56.258]  - Finding globals in 'X' for chunk #9 ...
[16:17:56.258]    + additional globals found: [n=0] 
[16:17:56.258]    + additional namespaces needed: [n=0] 
[16:17:56.259]  - Finding globals in 'X' for chunk #9 ... DONE
[16:17:56.259]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.259]  - seeds: <none>
[16:17:56.259]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.286] Created future:
[16:17:56.287] MultisessionFuture:
[16:17:56.287] Label: ‘future_lapply-9’
[16:17:56.287] Expression:
[16:17:56.287] {
[16:17:56.287]     do.call(function(...) {
[16:17:56.287]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.287]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.287]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.287]             on.exit(options(oopts), add = TRUE)
[16:17:56.287]         }
[16:17:56.287]         {
[16:17:56.287]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.287]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.287]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.287]             })
[16:17:56.287]         }
[16:17:56.287]     }, args = future.call.arguments)
[16:17:56.287] }
[16:17:56.287] Lazy evaluation: FALSE
[16:17:56.287] Asynchronous evaluation: TRUE
[16:17:56.287] Local evaluation: TRUE
[16:17:56.287] Environment: R_GlobalEnv
[16:17:56.287] Capture standard output: TRUE
[16:17:56.287] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.287] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.287] Packages: <none>
[16:17:56.287] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.287] Resolved: FALSE
[16:17:56.287] Value: <not collected>
[16:17:56.287] Conditions captured: <none>
[16:17:56.287] Early signaling: FALSE
[16:17:56.287] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.287] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.300] Chunk #9 of 10 ... DONE
[16:17:56.300] Chunk #10 of 10 ...
[16:17:56.301]  - Finding globals in 'X' for chunk #10 ...
[16:17:56.301]    + additional globals found: [n=0] 
[16:17:56.301]    + additional namespaces needed: [n=0] 
[16:17:56.301]  - Finding globals in 'X' for chunk #10 ... DONE
[16:17:56.301]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:17:56.301]  - seeds: <none>
[16:17:56.301]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.329] Created future:
[16:17:56.329] MultisessionFuture:
[16:17:56.329] Label: ‘future_lapply-10’
[16:17:56.329] Expression:
[16:17:56.329] {
[16:17:56.329]     do.call(function(...) {
[16:17:56.329]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.329]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.329]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.329]             on.exit(options(oopts), add = TRUE)
[16:17:56.329]         }
[16:17:56.329]         {
[16:17:56.329]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.329]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.329]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.329]             })
[16:17:56.329]         }
[16:17:56.329]     }, args = future.call.arguments)
[16:17:56.329] }
[16:17:56.329] Lazy evaluation: FALSE
[16:17:56.329] Asynchronous evaluation: TRUE
[16:17:56.329] Local evaluation: TRUE
[16:17:56.329] Environment: R_GlobalEnv
[16:17:56.329] Capture standard output: TRUE
[16:17:56.329] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.329] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.329] Packages: <none>
[16:17:56.329] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.329] Resolved: FALSE
[16:17:56.329] Value: <not collected>
[16:17:56.329] Conditions captured: <none>
[16:17:56.329] Early signaling: FALSE
[16:17:56.329] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.329] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.341] Chunk #10 of 10 ... DONE
[16:17:56.341] Launching 10 futures (chunks) ... DONE
[16:17:56.341] Resolving 10 futures (chunks) ...
[16:17:56.375]  - Number of value chunks collected: 10
[16:17:56.375] Resolving 10 futures (chunks) ... DONE
[16:17:56.375] Reducing values from 10 chunks ...
[16:17:56.375]  - Number of values collected after concatenation: 10
[16:17:56.375]  - Number of values expected: 10
[16:17:56.375] Reducing values from 10 chunks ... DONE
[16:17:56.375] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:17:56.379] future_lapply() ...
[16:17:56.383] Number of chunks: 5
[16:17:56.383] getGlobalsAndPackagesXApply() ...
[16:17:56.383]  - future.globals: TRUE
[16:17:56.385]  - globals found/used: [n=1] ‘FUN’
[16:17:56.385]  - needed namespaces: [n=0] 
[16:17:56.385] Finding globals ... DONE
[16:17:56.385]  - use_args: TRUE
[16:17:56.385]  - Getting '...' globals ...
[16:17:56.385]    - '...' content: [n=0] 
[16:17:56.386] List of 1
[16:17:56.386]  $ ...: list()
[16:17:56.386]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.386]  - attr(*, "where")=List of 1
[16:17:56.386]   ..$ ...:<environment: 0x556b15cca168> 
[16:17:56.386]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.386]  - attr(*, "resolved")= logi TRUE
[16:17:56.386]  - attr(*, "total_size")= num NA
[16:17:56.388]  - Getting '...' globals ... DONE
[16:17:56.388] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:56.388] List of 2
[16:17:56.388]  $ ...future.FUN:function (x)  
[16:17:56.388]  $ ...          : list()
[16:17:56.388]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.388]  - attr(*, "where")=List of 2
[16:17:56.388]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:56.388]   ..$ ...          :<environment: 0x556b15cca168> 
[16:17:56.388]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.388]  - attr(*, "resolved")= logi FALSE
[16:17:56.388]  - attr(*, "total_size")= num 1840
[16:17:56.391] Packages to be attached in all futures: [n=0] 
[16:17:56.391] getGlobalsAndPackagesXApply() ... DONE
[16:17:56.391] Number of futures (= number of chunks): 5
[16:17:56.391] Launching 5 futures (chunks) ...
[16:17:56.391] Chunk #1 of 5 ...
[16:17:56.392]  - Finding globals in 'X' for chunk #1 ...
[16:17:56.392]    + additional globals found: [n=0] 
[16:17:56.392]    + additional namespaces needed: [n=0] 
[16:17:56.392]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:56.392]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:17:56.392]  - seeds: <none>
[16:17:56.392]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.409] Created future:
[16:17:56.409] MultisessionFuture:
[16:17:56.409] Label: ‘future_lapply-1’
[16:17:56.409] Expression:
[16:17:56.409] {
[16:17:56.409]     do.call(function(...) {
[16:17:56.409]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.409]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.409]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.409]             on.exit(options(oopts), add = TRUE)
[16:17:56.409]         }
[16:17:56.409]         {
[16:17:56.409]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.409]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.409]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.409]             })
[16:17:56.409]         }
[16:17:56.409]     }, args = future.call.arguments)
[16:17:56.409] }
[16:17:56.409] Lazy evaluation: FALSE
[16:17:56.409] Asynchronous evaluation: TRUE
[16:17:56.409] Local evaluation: TRUE
[16:17:56.409] Environment: R_GlobalEnv
[16:17:56.409] Capture standard output: TRUE
[16:17:56.409] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.409] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.409] Packages: <none>
[16:17:56.409] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.409] Resolved: FALSE
[16:17:56.409] Value: <not collected>
[16:17:56.409] Conditions captured: <none>
[16:17:56.409] Early signaling: FALSE
[16:17:56.409] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.409] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.420] Chunk #1 of 5 ... DONE
[16:17:56.420] Chunk #2 of 5 ...
[16:17:56.421]  - Finding globals in 'X' for chunk #2 ...
[16:17:56.421]    + additional globals found: [n=0] 
[16:17:56.421]    + additional namespaces needed: [n=0] 
[16:17:56.421]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:56.421]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:17:56.421]  - seeds: <none>
[16:17:56.422]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.438] Created future:
[16:17:56.438] MultisessionFuture:
[16:17:56.438] Label: ‘future_lapply-2’
[16:17:56.438] Expression:
[16:17:56.438] {
[16:17:56.438]     do.call(function(...) {
[16:17:56.438]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.438]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.438]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.438]             on.exit(options(oopts), add = TRUE)
[16:17:56.438]         }
[16:17:56.438]         {
[16:17:56.438]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.438]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.438]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.438]             })
[16:17:56.438]         }
[16:17:56.438]     }, args = future.call.arguments)
[16:17:56.438] }
[16:17:56.438] Lazy evaluation: FALSE
[16:17:56.438] Asynchronous evaluation: TRUE
[16:17:56.438] Local evaluation: TRUE
[16:17:56.438] Environment: R_GlobalEnv
[16:17:56.438] Capture standard output: TRUE
[16:17:56.438] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.438] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.438] Packages: <none>
[16:17:56.438] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.438] Resolved: FALSE
[16:17:56.438] Value: <not collected>
[16:17:56.438] Conditions captured: <none>
[16:17:56.438] Early signaling: FALSE
[16:17:56.438] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.438] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.450] Chunk #2 of 5 ... DONE
[16:17:56.450] Chunk #3 of 5 ...
[16:17:56.450]  - Finding globals in 'X' for chunk #3 ...
[16:17:56.450]    + additional globals found: [n=0] 
[16:17:56.450]    + additional namespaces needed: [n=0] 
[16:17:56.450]  - Finding globals in 'X' for chunk #3 ... DONE
[16:17:56.451]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:17:56.451]  - seeds: <none>
[16:17:56.451]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.484] Created future:
[16:17:56.484] MultisessionFuture:
[16:17:56.484] Label: ‘future_lapply-3’
[16:17:56.484] Expression:
[16:17:56.484] {
[16:17:56.484]     do.call(function(...) {
[16:17:56.484]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.484]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.484]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.484]             on.exit(options(oopts), add = TRUE)
[16:17:56.484]         }
[16:17:56.484]         {
[16:17:56.484]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.484]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.484]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.484]             })
[16:17:56.484]         }
[16:17:56.484]     }, args = future.call.arguments)
[16:17:56.484] }
[16:17:56.484] Lazy evaluation: FALSE
[16:17:56.484] Asynchronous evaluation: TRUE
[16:17:56.484] Local evaluation: TRUE
[16:17:56.484] Environment: R_GlobalEnv
[16:17:56.484] Capture standard output: TRUE
[16:17:56.484] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.484] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.484] Packages: <none>
[16:17:56.484] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.484] Resolved: FALSE
[16:17:56.484] Value: <not collected>
[16:17:56.484] Conditions captured: <none>
[16:17:56.484] Early signaling: FALSE
[16:17:56.484] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.484] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.495] Chunk #3 of 5 ... DONE
[16:17:56.495] Chunk #4 of 5 ...
[16:17:56.496]  - Finding globals in 'X' for chunk #4 ...
[16:17:56.496]    + additional globals found: [n=0] 
[16:17:56.496]    + additional namespaces needed: [n=0] 
[16:17:56.496]  - Finding globals in 'X' for chunk #4 ... DONE
[16:17:56.496]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:17:56.496]  - seeds: <none>
[16:17:56.496]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.524] Created future:
[16:17:56.524] MultisessionFuture:
[16:17:56.524] Label: ‘future_lapply-4’
[16:17:56.524] Expression:
[16:17:56.524] {
[16:17:56.524]     do.call(function(...) {
[16:17:56.524]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.524]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.524]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.524]             on.exit(options(oopts), add = TRUE)
[16:17:56.524]         }
[16:17:56.524]         {
[16:17:56.524]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.524]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.524]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.524]             })
[16:17:56.524]         }
[16:17:56.524]     }, args = future.call.arguments)
[16:17:56.524] }
[16:17:56.524] Lazy evaluation: FALSE
[16:17:56.524] Asynchronous evaluation: TRUE
[16:17:56.524] Local evaluation: TRUE
[16:17:56.524] Environment: R_GlobalEnv
[16:17:56.524] Capture standard output: TRUE
[16:17:56.524] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.524] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.524] Packages: <none>
[16:17:56.524] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.524] Resolved: FALSE
[16:17:56.524] Value: <not collected>
[16:17:56.524] Conditions captured: <none>
[16:17:56.524] Early signaling: FALSE
[16:17:56.524] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.524] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.535] Chunk #4 of 5 ... DONE
[16:17:56.536] Chunk #5 of 5 ...
[16:17:56.536]  - Finding globals in 'X' for chunk #5 ...
[16:17:56.536]    + additional globals found: [n=0] 
[16:17:56.536]    + additional namespaces needed: [n=0] 
[16:17:56.536]  - Finding globals in 'X' for chunk #5 ... DONE
[16:17:56.536]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:17:56.536]  - seeds: <none>
[16:17:56.536]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.563] Created future:
[16:17:56.564] MultisessionFuture:
[16:17:56.564] Label: ‘future_lapply-5’
[16:17:56.564] Expression:
[16:17:56.564] {
[16:17:56.564]     do.call(function(...) {
[16:17:56.564]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.564]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.564]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.564]             on.exit(options(oopts), add = TRUE)
[16:17:56.564]         }
[16:17:56.564]         {
[16:17:56.564]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.564]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.564]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.564]             })
[16:17:56.564]         }
[16:17:56.564]     }, args = future.call.arguments)
[16:17:56.564] }
[16:17:56.564] Lazy evaluation: FALSE
[16:17:56.564] Asynchronous evaluation: TRUE
[16:17:56.564] Local evaluation: TRUE
[16:17:56.564] Environment: R_GlobalEnv
[16:17:56.564] Capture standard output: TRUE
[16:17:56.564] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.564] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.564] Packages: <none>
[16:17:56.564] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.564] Resolved: FALSE
[16:17:56.564] Value: <not collected>
[16:17:56.564] Conditions captured: <none>
[16:17:56.564] Early signaling: FALSE
[16:17:56.564] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.564] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.575] Chunk #5 of 5 ... DONE
[16:17:56.575] Launching 5 futures (chunks) ... DONE
[16:17:56.576] Resolving 5 futures (chunks) ...
[16:17:56.606]  - Number of value chunks collected: 5
[16:17:56.606] Resolving 5 futures (chunks) ... DONE
[16:17:56.606] Reducing values from 5 chunks ...
[16:17:56.607]  - Number of values collected after concatenation: 10
[16:17:56.607]  - Number of values expected: 10
[16:17:56.607] Reducing values from 5 chunks ... DONE
[16:17:56.607] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:17:56.611] future_lapply() ...
[16:17:56.614] Number of chunks: 2
[16:17:56.615] getGlobalsAndPackagesXApply() ...
[16:17:56.615]  - future.globals: TRUE
[16:17:56.616]  - globals found/used: [n=1] ‘FUN’
[16:17:56.616]  - needed namespaces: [n=0] 
[16:17:56.617] Finding globals ... DONE
[16:17:56.617]  - use_args: TRUE
[16:17:56.617]  - Getting '...' globals ...
[16:17:56.617]    - '...' content: [n=0] 
[16:17:56.617] List of 1
[16:17:56.617]  $ ...: list()
[16:17:56.617]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.617]  - attr(*, "where")=List of 1
[16:17:56.617]   ..$ ...:<environment: 0x556b1876c428> 
[16:17:56.617]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.617]  - attr(*, "resolved")= logi TRUE
[16:17:56.617]  - attr(*, "total_size")= num NA
[16:17:56.620]  - Getting '...' globals ... DONE
[16:17:56.620] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:56.620] List of 2
[16:17:56.620]  $ ...future.FUN:function (x)  
[16:17:56.620]  $ ...          : list()
[16:17:56.620]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.620]  - attr(*, "where")=List of 2
[16:17:56.620]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:56.620]   ..$ ...          :<environment: 0x556b1876c428> 
[16:17:56.620]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.620]  - attr(*, "resolved")= logi FALSE
[16:17:56.620]  - attr(*, "total_size")= num 1840
[16:17:56.623] Packages to be attached in all futures: [n=0] 
[16:17:56.623] getGlobalsAndPackagesXApply() ... DONE
[16:17:56.623] Number of futures (= number of chunks): 2
[16:17:56.623] Launching 2 futures (chunks) ...
[16:17:56.623] Chunk #1 of 2 ...
[16:17:56.623]  - Finding globals in 'X' for chunk #1 ...
[16:17:56.624]    + additional globals found: [n=0] 
[16:17:56.624]    + additional namespaces needed: [n=0] 
[16:17:56.624]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:56.624]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:17:56.624]  - seeds: <none>
[16:17:56.624]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.640] Created future:
[16:17:56.640] MultisessionFuture:
[16:17:56.640] Label: ‘future_lapply-1’
[16:17:56.640] Expression:
[16:17:56.640] {
[16:17:56.640]     do.call(function(...) {
[16:17:56.640]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.640]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.640]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.640]             on.exit(options(oopts), add = TRUE)
[16:17:56.640]         }
[16:17:56.640]         {
[16:17:56.640]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.640]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.640]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.640]             })
[16:17:56.640]         }
[16:17:56.640]     }, args = future.call.arguments)
[16:17:56.640] }
[16:17:56.640] Lazy evaluation: FALSE
[16:17:56.640] Asynchronous evaluation: TRUE
[16:17:56.640] Local evaluation: TRUE
[16:17:56.640] Environment: R_GlobalEnv
[16:17:56.640] Capture standard output: TRUE
[16:17:56.640] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.640] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.640] Packages: <none>
[16:17:56.640] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.640] Resolved: FALSE
[16:17:56.640] Value: <not collected>
[16:17:56.640] Conditions captured: <none>
[16:17:56.640] Early signaling: FALSE
[16:17:56.640] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.640] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.654] Chunk #1 of 2 ... DONE
[16:17:56.654] Chunk #2 of 2 ...
[16:17:56.654]  - Finding globals in 'X' for chunk #2 ...
[16:17:56.655]    + additional globals found: [n=0] 
[16:17:56.655]    + additional namespaces needed: [n=0] 
[16:17:56.655]  - Finding globals in 'X' for chunk #2 ... DONE
[16:17:56.655]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:17:56.655]  - seeds: <none>
[16:17:56.655]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.673] Created future:
[16:17:56.674] MultisessionFuture:
[16:17:56.674] Label: ‘future_lapply-2’
[16:17:56.674] Expression:
[16:17:56.674] {
[16:17:56.674]     do.call(function(...) {
[16:17:56.674]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.674]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.674]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.674]             on.exit(options(oopts), add = TRUE)
[16:17:56.674]         }
[16:17:56.674]         {
[16:17:56.674]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.674]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.674]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.674]             })
[16:17:56.674]         }
[16:17:56.674]     }, args = future.call.arguments)
[16:17:56.674] }
[16:17:56.674] Lazy evaluation: FALSE
[16:17:56.674] Asynchronous evaluation: TRUE
[16:17:56.674] Local evaluation: TRUE
[16:17:56.674] Environment: R_GlobalEnv
[16:17:56.674] Capture standard output: TRUE
[16:17:56.674] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.674] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.674] Packages: <none>
[16:17:56.674] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.674] Resolved: FALSE
[16:17:56.674] Value: <not collected>
[16:17:56.674] Conditions captured: <none>
[16:17:56.674] Early signaling: FALSE
[16:17:56.674] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.674] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.685] Chunk #2 of 2 ... DONE
[16:17:56.685] Launching 2 futures (chunks) ... DONE
[16:17:56.686] Resolving 2 futures (chunks) ...
[16:17:56.729]  - Number of value chunks collected: 2
[16:17:56.729] Resolving 2 futures (chunks) ... DONE
[16:17:56.729] Reducing values from 2 chunks ...
[16:17:56.729]  - Number of values collected after concatenation: 10
[16:17:56.729]  - Number of values expected: 10
[16:17:56.730] Reducing values from 2 chunks ... DONE
[16:17:56.730] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:17:56.733] future_lapply() ...
[16:17:56.738] Number of chunks: 1
[16:17:56.738] getGlobalsAndPackagesXApply() ...
[16:17:56.738]  - future.globals: TRUE
[16:17:56.740]  - globals found/used: [n=1] ‘FUN’
[16:17:56.740]  - needed namespaces: [n=0] 
[16:17:56.740] Finding globals ... DONE
[16:17:56.740]  - use_args: TRUE
[16:17:56.740]  - Getting '...' globals ...
[16:17:56.741]    - '...' content: [n=0] 
[16:17:56.741] List of 1
[16:17:56.741]  $ ...: list()
[16:17:56.741]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.741]  - attr(*, "where")=List of 1
[16:17:56.741]   ..$ ...:<environment: 0x556b16a06f68> 
[16:17:56.741]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.741]  - attr(*, "resolved")= logi TRUE
[16:17:56.741]  - attr(*, "total_size")= num NA
[16:17:56.743]  - Getting '...' globals ... DONE
[16:17:56.744] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:56.744] List of 2
[16:17:56.744]  $ ...future.FUN:function (x)  
[16:17:56.744]  $ ...          : list()
[16:17:56.744]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.744]  - attr(*, "where")=List of 2
[16:17:56.744]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:56.744]   ..$ ...          :<environment: 0x556b16a06f68> 
[16:17:56.744]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.744]  - attr(*, "resolved")= logi FALSE
[16:17:56.744]  - attr(*, "total_size")= num 1840
[16:17:56.746] Packages to be attached in all futures: [n=0] 
[16:17:56.746] getGlobalsAndPackagesXApply() ... DONE
[16:17:56.747] Number of futures (= number of chunks): 1
[16:17:56.747] Launching 1 futures (chunks) ...
[16:17:56.747] Chunk #1 of 1 ...
[16:17:56.747]  - Finding globals in 'X' for chunk #1 ...
[16:17:56.747]    + additional globals found: [n=0] 
[16:17:56.747]    + additional namespaces needed: [n=0] 
[16:17:56.748]  - Finding globals in 'X' for chunk #1 ... DONE
[16:17:56.748]  - seeds: <none>
[16:17:56.748]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:17:56.765] Created future:
[16:17:56.765] MultisessionFuture:
[16:17:56.765] Label: ‘future_lapply-1’
[16:17:56.765] Expression:
[16:17:56.765] {
[16:17:56.765]     do.call(function(...) {
[16:17:56.765]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:17:56.765]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:17:56.765]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:17:56.765]             on.exit(options(oopts), add = TRUE)
[16:17:56.765]         }
[16:17:56.765]         {
[16:17:56.765]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:17:56.765]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:17:56.765]                 ...future.FUN(...future.X_jj, ...)
[16:17:56.765]             })
[16:17:56.765]         }
[16:17:56.765]     }, args = future.call.arguments)
[16:17:56.765] }
[16:17:56.765] Lazy evaluation: FALSE
[16:17:56.765] Asynchronous evaluation: TRUE
[16:17:56.765] Local evaluation: TRUE
[16:17:56.765] Environment: R_GlobalEnv
[16:17:56.765] Capture standard output: TRUE
[16:17:56.765] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:17:56.765] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:17:56.765] Packages: <none>
[16:17:56.765] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:17:56.765] Resolved: FALSE
[16:17:56.765] Value: <not collected>
[16:17:56.765] Conditions captured: <none>
[16:17:56.765] Early signaling: FALSE
[16:17:56.765] Owner process: 951b8229-86d1-2fa1-8a7e-ea5246cbaac7
[16:17:56.765] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:17:56.777] Chunk #1 of 1 ... DONE
[16:17:56.777] Launching 1 futures (chunks) ... DONE
[16:17:56.777] Resolving 1 futures (chunks) ...
[16:17:56.819]  - Number of value chunks collected: 1
[16:17:56.819] Resolving 1 futures (chunks) ... DONE
[16:17:56.819] Reducing values from 1 chunks ...
[16:17:56.820]  - Number of values collected after concatenation: 10
[16:17:56.820]  - Number of values expected: 10
[16:17:56.820] Reducing values from 1 chunks ... DONE
[16:17:56.820] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[16:17:56.824] future_lapply() ...
[16:17:56.827] Number of chunks: 1
[16:17:56.827] getGlobalsAndPackagesXApply() ...
[16:17:56.828] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[16:17:56.828] future_lapply() ...
[16:17:56.831] Number of chunks: 1
[16:17:56.831] getGlobalsAndPackagesXApply() ...
[16:17:56.831]  - future.globals: <name-value list> with names ‘1’
[16:17:56.832] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:17:56.832] future_lapply() ...
[16:17:56.835] Number of chunks: 1
[16:17:56.835] getGlobalsAndPackagesXApply() ...
[16:17:56.835]  - future.globals: ‘...future.FUN’
[16:17:56.836]  - use_args: TRUE
[16:17:56.836] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:17:56.836] future_lapply() ...
[16:17:56.842] Number of chunks: 1
[16:17:56.842] getGlobalsAndPackagesXApply() ...
[16:17:56.842]  - future.globals: ‘...future.FUN’
[16:17:56.842]  - use_args: TRUE
[16:17:56.843] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[16:17:56.843] future_lapply() ...
[16:17:56.846] Number of chunks: 1
[16:17:56.846] getGlobalsAndPackagesXApply() ...
[16:17:56.847]  - future.globals: TRUE
[16:17:56.848]  - globals found/used: [n=1] ‘FUN’
[16:17:56.848]  - needed namespaces: [n=0] 
[16:17:56.848] Finding globals ... DONE
[16:17:56.848]  - use_args: TRUE
[16:17:56.848]  - Getting '...' globals ...
[16:17:56.849]    - '...' content: [n=0] 
[16:17:56.849] List of 1
[16:17:56.849]  $ ...: list()
[16:17:56.849]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.849]  - attr(*, "where")=List of 1
[16:17:56.849]   ..$ ...:<environment: 0x556b179e84b0> 
[16:17:56.849]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.849]  - attr(*, "resolved")= logi TRUE
[16:17:56.849]  - attr(*, "total_size")= num NA
[16:17:56.851]  - Getting '...' globals ... DONE
[16:17:56.851] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:17:56.851] List of 2
[16:17:56.851]  $ ...future.FUN:function (f)  
[16:17:56.851]  $ ...          : list()
[16:17:56.851]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:17:56.851]  - attr(*, "where")=List of 2
[16:17:56.851]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:17:56.851]   ..$ ...          :<environment: 0x556b179e84b0> 
[16:17:56.851]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:17:56.851]  - attr(*, "resolved")= logi FALSE
[16:17:56.851]  - attr(*, "total_size")= num 336
[16:17:56.854] Packages to be attached in all futures: [n=0] 
[16:17:56.854] getGlobalsAndPackagesXApply() ... DONE
[16:17:56.854] Number of futures (= number of chunks): 1
[16:17:56.854] Launching 1 futures (chunks) ...
[16:17:56.855] Chunk #1 of 1 ...
[16:17:56.855]  - Finding globals in 'X' for chunk #1 ...
[16:17:56.856]    + additional globals found: [n=1] ‘...future.elements_ii’
[16:17:56.856]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
