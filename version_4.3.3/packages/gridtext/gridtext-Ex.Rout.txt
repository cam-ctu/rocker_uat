
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gridtext"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gridtext')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("richtext_grob")
> ### * richtext_grob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: richtext_grob
> ### Title: Draw formatted text labels
> ### Aliases: richtext_grob
> 
> ### ** Examples
> 
> library(grid)
> 
> text <- c(
+   "Some text **in bold.**", "Linebreaks<br>Linebreaks<br>Linebreaks",
+   "*x*<sup>2</sup> + 5*x* + *C*<sub>*i*</sub>",
+   "Some <span style='color:blue'>blue text **in bold.**</span><br>And *italics text.*<br>
+    And some <span style='font-size:18pt; color:black'>large</span> text."
+ )
> 
> x <- c(.2, .1, .7, .9)
> y <- c(.8, .4, .1, .5)
> rot <- c(0, 0, 45, -45)
> gp = gpar(col = c("black", "red"), fontfamily = c("Palatino", "Courier", "Times", "Helvetica"))
> box_gp = gpar(col = "black", fill = c("cornsilk", NA, "lightblue1", NA), lty = c(0, 1, 1, 1))
> hjust <- c(0.5, 0, 0, 1)
> vjust <- c(0.5, 1, 0, 0.5)
> 
> g <- richtext_grob(
+   text, x, y, hjust = hjust, vjust = vjust, rot = rot,
+   padding = unit(c(6, 6, 4, 6), "pt"),
+   r = unit(c(0, 2, 4, 8), "pt"),
+   gp = gp, box_gp = box_gp
+ )
> grid.newpage()
> grid.draw(g)
> grid.points(x, y, default.units = "npc", pch = 19, size = unit(5, "pt"))
> 
> # multiple text labels with aligned boxes
> text <- c("January", "February", "March", "April", "May")
> x <- (1:5)/6 + 1/24
> y <- rep(0.8, 5)
> g <- richtext_grob(
+   text, x, y, halign = 0, hjust = 1,
+   rot = 45,
+   padding = unit(c(3, 6, 1, 3), "pt"),
+   r = unit(4, "pt"),
+   align_widths = TRUE,
+   box_gp = gpar(col = "black", fill = "cornsilk")
+ )
> grid.newpage()
> grid.draw(g)
> grid.points(x, y, default.units = "npc", pch = 19, size = unit(5, "pt"))
> 
> 
> 
> cleanEx()

detaching ‘package:grid’

> nameEx("textbox_grob")
> ### * textbox_grob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: textbox_grob
> ### Title: Draw formatted multi-line text with word wrap
> ### Aliases: textbox_grob
> 
> ### ** Examples
> 
> library(grid)
> g <- textbox_grob(
+   "**The quick brown fox jumps over the lazy dog.**<br><br>
+   The quick brown fox jumps over the lazy dog.
+   The **quick <span style='color:brown;'>brown fox</span>** jumps over the lazy dog.
+   The quick brown fox jumps over the lazy dog.",
+   x = unit(0.5, "npc"), y = unit(0.7, "npc"), halign = 0, valign = 1,
+   gp = gpar(fontsize = 15),
+   box_gp = gpar(col = "black", fill = "lightcyan1"),
+   r = unit(5, "pt"),
+   padding = unit(c(10, 10, 10, 10), "pt"),
+   margin = unit(c(0, 10, 0, 10), "pt")
+ )
> grid.newpage()
> grid.draw(g)
> 
> # internal vs. external alignment
> g1 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 0, vjust = 1, halign = 0, valign = 1,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g2 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 1, vjust = 1, halign = 0.5, valign = 0.5,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g3 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 0, vjust = 0, halign = 1, valign = 1,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g4 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 1, vjust = 0, halign = 0, valign = 0,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> grid.newpage()
> grid.draw(g1)
> grid.draw(g2)
> grid.draw(g3)
> grid.draw(g4)
> 
> # internal vs. external alignment, with rotated boxes
> g1 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 1, vjust = 1, halign = 0, valign = 1,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   orientation = "left-rotated",
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g2 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 0, vjust = 1, halign = 0.5, valign = 0.5,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   orientation = "right-rotated",
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g3 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 1, vjust = 1, halign = 1, valign = 1,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   orientation = "inverted",
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> g4 <- textbox_grob(
+   "The quick brown fox jumps over the lazy dog.",
+   hjust = 1, vjust = 0, halign = 0, valign = 0,
+   width = unit(1.5, "inch"), height = unit(1.5, "inch"),
+   orientation = "upright",
+   box_gp = gpar(col = "black", fill = "cornsilk"),
+   padding = unit(c(2, 2, 2, 2), "pt"),
+   margin = unit(c(5, 5, 5, 5), "pt")
+ )
> grid.newpage()
> grid.draw(g1)
> grid.draw(g2)
> grid.draw(g3)
> grid.draw(g4)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:grid’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.568 0.031 0.602 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
