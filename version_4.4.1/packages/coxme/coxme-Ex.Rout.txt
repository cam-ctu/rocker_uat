
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "coxme"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('coxme')
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("anova.coxme")
> ### * anova.coxme
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: anova.coxme
> ### Title: Analysis of Deviance for a Cox model.
> ### Aliases: anova.coxme anova.coxmelist
> ### Keywords: models regression survival
> 
> ### ** Examples
> 
> # Testing a shrunken estimate of ECOG performace status
> fit1 <- coxph(Surv(time, status) ~ age + sex, data=lung,
+                subset=(!is.na(ph.ecog)))
> fit2 <- coxme(Surv(time, status) ~ age + sex + (1|ph.ecog), lung)
> anova(fit1,fit2)
Analysis of Deviance Table
 Cox model: response is  Surv(time, status)
 Model 1: ~age + sex
 Model 2: ~age + sex + (1 | ph.ecog)
   loglik  Chisq Df P(>|Chi|)   
1 -737.54                       
2 -733.02 9.0495  1  0.002628 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
>  
> 
> 
> cleanEx()
> nameEx("coxme")
> ### * coxme
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: coxme
> ### Title: Fit a mixed effects Cox model
> ### Aliases: coxme
> ### Keywords: survival
> 
> ### ** Examples
> 
> # A non-significant institution effect
> fit1 <- coxph(Surv(time, status) ~ ph.ecog + age, data=lung,
+               subset=(!is.na(inst)))
> fit2 <- coxme(Surv(time, status) ~ ph.ecog + age + (1|inst), lung)
> anova(fit1, fit2)
Analysis of Deviance Table
 Cox model: response is  Surv(time, status)
 Model 1: ~ph.ecog + age
 Model 2: ~ph.ecog + age + (1 | inst)
   loglik  Chisq Df P(>|Chi|)
1 -729.90                    
2 -729.73 0.3379  1    0.5611
> 
> # Shrinkage effects (equivalent to ridge regression)
> temp <- with(lung, scale(cbind(age, wt.loss, meal.cal)))
> rfit <- coxme(Surv(time, status) ~ ph.ecog + (temp | 1), data=lung)
> 
> 
> 
> cleanEx()
> nameEx("eortc")
> ### * eortc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: eortc
> ### Title: Simulated data set based on an EORTC trial
> ### Aliases: eortc
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(eortc)
> coxme(Surv(y, uncens) ~ trt + (trt| center) + strata(center), eortc)
Cox mixed-effects model fit by maximum likelihood
  Data: eortc
  events, n = 1463, 2323
  Iterations= 5 28 
                    NULL Integrated   Fitted
Log-likelihood -5609.797   -5539.43 -5528.94

                   Chisq    df p    AIC    BIC
Integrated loglik 140.74  2.00 0 136.74 126.16
 Penalized loglik 161.72 10.22 0 141.28  87.25

Model:  Surv(y, uncens) ~ trt + (trt | center) + strata(center) 
Fixed coefficients
         coef exp(coef)  se(coef)    z p
trt 0.7431879  2.102628 0.0784898 9.47 0

Random effects
 Group  Variable Std Dev    Variance  
 center trt      0.24220971 0.05866554
> 
> 
> 
> cleanEx()
> nameEx("fixef.coxme")
> ### * fixef.coxme
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fixef.coxme
> ### Title: Extraction functions for Coxme
> ### Aliases: fixef.coxme ranef.coxme vcov.coxme VarCorr.coxme
> ### Keywords: models survival
> 
> ### ** Examples
> 
> rat1 <- coxme(Surv(time, status) ~ rx + (1|litter), rats)
> fixed.effects(rat1)
       rx 
0.7301151 
> vcov(rat1)
          rx
rx 0.1009764
> random.effects(rat1)[[1]]  #one value for each of the 50 litters
          1           2           3           4           5           6 
 0.50905765 -0.38286358 -0.45828855 -0.38286358 -0.47279177 -0.26839475 
          7           8           9          10          11          12 
-0.24557502 -0.30156545 -0.39932377 -0.44911387  1.09264483 -0.30854255 
         13          14          15          16          17          18 
 1.04191054 -0.32570291  0.38219534 -0.19104607 -0.30260527 -0.28747724 
         19          20          21          22          23          24 
 0.68389216 -0.45828855  0.55972853 -0.38772561 -0.28141466 -0.45211212 
         25          26          27          28          29          30 
 2.27719156 -0.37939316  0.50412795 -0.26449115 -0.40044488 -0.31562403 
         31          32          33          34          35          36 
-0.30489539 -0.43401164 -0.39870460 -0.37773674 -0.41216446 -0.45828855 
         37          38          39          40          41          42 
-0.28926378 -0.38772561  1.43945640 -0.32283387 -0.47279177 -0.40215716 
         43          44          45          46          47          48 
-0.47279177 -0.05729056  0.51989198 -0.39108092 -0.38485896 -0.45828855 
         49          50          51          52          53          54 
-0.47279177 -0.35071897 -0.39932377 -0.45828855 -0.35077596 -0.42315185 
         55          56          57          58          59          60 
 1.12640985 -0.31451979  1.34929508 -0.38286358  1.59733100 -0.45828855 
         61          62          63          64          65          66 
-0.20649617 -0.26075195  1.58536973  0.46631719  0.43850170 -0.27460292 
         67          68          69          70          71          72 
 0.61282381 -0.41046145  0.74458806 -0.44911387  0.39719327 -0.21785773 
         73          74          75          76          77          78 
-0.47279177 -0.44911387  0.37846791 -0.42828629  1.49003781 -0.45438018 
         79          80          81          82          83          84 
 1.45141276 -0.25343157  0.59885100 -0.40137485  1.38309315 -0.18782619 
         85          86          87          88          89          90 
 1.03401023 -0.14747832 -0.38585861 -0.43205684 -0.30686724 -0.29654037 
         91          92          93          94          95          96 
-0.14252420 -0.39421878  0.41951193 -0.37755425 -0.29635590 -0.38818840 
         97          98          99         100 
 0.37803738  0.52927617  0.38318344 -0.38842111 
> VarCorr(rat1)
$litter
Intercept 
 1.317388 

> 
> 
> 
> cleanEx()
> nameEx("fixef.lmekin")
> ### * fixef.lmekin
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fixef.lmekin
> ### Title: Extraction functions for Lmekin
> ### Aliases: fixef.lmekin ranef.lmekin vcov.lmekin VarCorr.lmekin
> ###   logLik.lmekin
> ### Keywords: models
> 
> ### ** Examples
> 
> data(ergoStool, package="nlme")  # use a data set from nlme
> efit <-  lmekin(effort ~ Type + (1|Subject), ergoStool)
> ranef(efit)
$Subject
            8             5             4             9             6 
-1.708721e+00 -1.495131e+00 -8.543605e-01 -2.135901e-01 -3.591690e-16 
            3             7             1             2 
 4.271802e-01  4.271802e-01  1.708721e+00  1.708721e+00 

> 
> 
> 
> cleanEx()
> nameEx("lmekin")
> ### * lmekin
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lmekin
> ### Title: Fit a linear mixed effects model
> ### Aliases: lmekin
> ### Keywords: models
> 
> ### ** Examples
> 
>   data(ergoStool, package="nlme")  # use a data set from nlme 
>   fit1 <- lmekin(effort ~ Type + (1|Subject), data=ergoStool)
>   ## Not run: 
> ##D   # gives the same result
> ##D   require(nlme)
> ##D   fit2 <- lme(effort ~ Type, data=ergoStool, random= ~1|Subject,
> ##D             method="ML")
> ##D   
> ## End(Not run)
>  
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.902 0.117 2.018 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
