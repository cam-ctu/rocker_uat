
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "tensorA"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('tensorA')

Attaching package: ‘tensorA’

The following object is masked from ‘package:base’:

    norm

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("addtensor")
> ### * addtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add.tensor
> ### Title: Element-wise arithmetic operations +,-,*,/ with tensors
> ### Aliases: add.tensor -.tensor +.tensor *.tensor /.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,V=2,W=5))
> add.tensor(A,A)/2 -A
, , 1

      V
U      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 2

      V
U      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 3

      V
U      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 4

      V
U      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 5

      V
U      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

attr(,"class")
[1] "tensor"
> (A+A)/2
, , 1

      V
U      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      V
U      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      V
U      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      V
U      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      V
U      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> A/A
, , 1

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 2

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 3

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 4

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 5

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

attr(,"class")
[1] "tensor"
> A * 1/A
, , 1

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 2

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 3

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 4

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

, , 5

      V
U      [,1] [,2]
  [1,]    1    1
  [2,]    1    1

attr(,"class")
[1] "tensor"
> norm.tensor(reorder.tensor(A,c(2,3,1)) - A)
[1] 0
> 
> 
> 
> cleanEx()
> nameEx("astensor")
> ### * astensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.tensor
> ### Title: Coercion to a tensor
> ### Aliases: as.tensor as.tensor.default as.tensor.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- diag(5)
> as.tensor(A)
      I2
I1     [,1] [,2] [,3] [,4] [,5]
  [1,]    1    0    0    0    0
  [2,]    0    1    0    0    0
  [3,]    0    0    1    0    0
  [4,]    0    0    0    1    0
  [5,]    0    0    0    0    1
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> cleanEx()
> nameEx("bindtensor")
> ### * bindtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bind.tensor
> ### Title: A cbind/rbind for tensors
> ### Aliases: bind.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
>   A <- to.tensor(1:6,c(a=2,b=3))
> bind.tensor(A,"a",A)
      a
b      [,1] [,2] [,3] [,4]
  [1,]    1    2    1    2
  [2,]    3    4    3    4
  [3,]    5    6    5    6
attr(,"class")
[1] "tensor" "matrix"
> bind.tensor(A,"b",A)
      b
a      [,1] [,2] [,3] [,4] [,5] [,6]
  [1,]    1    3    5    1    3    5
  [2,]    2    4    6    2    4    6
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> cleanEx()
> nameEx("choltensor")
> ### * choltensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: chol.tensor
> ### Title: Cholesky decomposition of a tensor
> ### Aliases: chol.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> 
> 
> A <- to.tensor(rnorm(15),c(a=3,b=5))
> AAt <- einstein.tensor(A,mark(A,i="a"))
> ch <- chol.tensor(AAt,"a","a'",name="lambda")
> #names(ch)[1]<-"lambda"
> einstein.tensor(ch,mark(ch,i="a")) # AAt
      a'
a           [,1]      [,2]      [,3]
  [1,]  3.654154  1.684675 -1.322649
  [2,]  1.684675  7.877802 -1.900721
  [3,] -1.322649 -1.900721  3.120415
attr(,"class")
[1] "tensor" "matrix"
> 
> A <- to.tensor(rnorm(30),c(a=3,b=5,c=2))
> AAt <- einstein.tensor(A,mark(A,i="a"),by="c")
> ch <- chol.tensor(AAt,"a","a'",name="lambda")
> einstein.tensor(ch,mark(ch,i="a"),by="c") #AAt
, , 1

      a'
a           [,1]      [,2]       [,3]
  [1,]  3.835457 1.2152221 -1.5549251
  [2,]  1.215222 0.5903188  0.1910708
  [3,] -1.554925 0.1910708  5.8918138

, , 2

      a'
a            [,1]      [,2]       [,3]
  [1,]  3.0725648 0.2202373 -0.5580756
  [2,]  0.2202373 2.2473183  0.1246571
  [3,] -0.5580756 0.1246571  2.0711421

attr(,"class")
[1] "tensor"
> 
> 	     
> 
> 
> 
> 
> cleanEx()
> nameEx("deltatensor")
> ### * deltatensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: delta.tensor
> ### Title: Creates a Kronecker delta tensor
> ### Aliases: delta.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> delta.tensor(c(a=2,b=3))
, , 1, 1

      b
a      [,1] [,2] [,3]
  [1,]    1    0    0
  [2,]    0    0    0

, , 2, 1

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    1    0    0

, , 1, 2

      b
a      [,1] [,2] [,3]
  [1,]    0    1    0
  [2,]    0    0    0

, , 2, 2

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    1    0

, , 1, 3

      b
a      [,1] [,2] [,3]
  [1,]    0    0    1
  [2,]    0    0    0

, , 2, 3

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    1

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("diagmul")
> ### * diagmul
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diagmul.tensor
> ### Title: Multiplication of a tensor with a tensor given by its diagonal
> ### Aliases: diagmul.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> (A <- matrix(rep(1:3,each=3),nrow=3))
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3
[3,]    1    2    3
> (b <- to.tensor(c(1,1/2,1/3)))
[1] 1.0000000 0.5000000 0.3333333
attr(,"class")
[1] "tensor"
> diagmul.tensor(as.tensor(A),2,as.tensor(c(1,1/2,1/3)),1)
      I2
I1     [,1] [,2] [,3]
  [1,]    1    1    1
  [2,]    1    1    1
  [3,]    1    1    1
attr(,"class")
[1] "tensor" "matrix"
> diagmul.tensor(as.tensor(A),1,as.tensor(c(1,1/2,1/3)),1)
      I1
I2     [,1] [,2]      [,3]
  [1,]    1  0.5 0.3333333
  [2,]    2  1.0 0.6666667
  [3,]    3  1.5 1.0000000
attr(,"class")
[1] "tensor" "matrix"
> A %*% diag(b)
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    1    1
[3,]    1    1    1
> diag(b) %*% A
          [,1]      [,2] [,3]
[1,] 1.0000000 2.0000000  3.0
[2,] 0.5000000 1.0000000  1.5
[3,] 0.3333333 0.6666667  1.0
> 
> 
> 
> cleanEx()
> nameEx("diagtensor")
> ### * diagtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diag.tensor
> ### Title: Creates a "diagonal" tensor
> ### Aliases: diag.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:4,c(a=2,b=2))
> diag.tensor(A)
, , 1, 1

      b
a      [,1] [,2]
  [1,]    1    0
  [2,]    0    0

, , 2, 1

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    2    0

, , 1, 2

      b
a      [,1] [,2]
  [1,]    0    3
  [2,]    0    0

, , 2, 2

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    4

attr(,"class")
[1] "tensor"
> diag.tensor(A,by="b")
, , 1

      a'
a      [,1] [,2]
  [1,]    1    0
  [2,]    0    2

, , 2

      a'
a      [,1] [,2]
  [1,]    3    0
  [2,]    0    4

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> cleanEx()
> nameEx("dragtensor")
> ### * dragtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: drag.tensor
> ### Title: Managing covariate and contravariate indices
> ### Aliases: drag.tensor is.covariate is.covariate.tensor
> ###   is.covariate.numeric is.covariate.character is.contravariate
> ###   is.contravariate.tensor is.contravariate.numeric
> ###   is.contravariate.character contraname as.covariate as.contravariate
> ###   as.covariate.character as.contravariate.character
> ### Keywords: arith
> 
> ### ** Examples
> 
> g <- to.tensor(c(1,2,0,1),c(i=2,j=2))
> A <- to.tensor(rnorm(8),c(a=2,b=2,c=2))
> A2 <- drag.tensor(A,g,c("b","c"))
> A2
, , 1

      ^b
a            [,1]     [,2]
  [1,] -0.6264538 0.417279
  [2,]  0.1836433 1.227994

, , 2

      ^b
a           [,1]        [,2]
  [1,]  1.582415 -1.00614451
  [2,] -1.187755 -0.07672683

attr(,"class")
[1] "tensor"
> names(A2)
[1] "a"  "^b" "^c"
> as.covariate(names(A2))
[1] "a" "b" "c"
> as.contravariate(names(A2))
[1] "^a" "^b" "^c"
> is.covariate(A2)
[1]  TRUE FALSE FALSE
> is.contravariate(A2)
[1] FALSE  TRUE  TRUE
> riemann.tensor(A2,g)
, , 1, 1, 1

      ^b
a            [,1]     [,2]
  [1,] -0.6264538 0.417279
  [2,]  0.1836433 1.227994

, , 2, 1, 1

      ^b
a           [,1]        [,2]
  [1,]  1.582415 -1.00614451
  [2,] -1.187755 -0.07672683

, , 1, 2, 1

      ^b
a            [,1]     [,2]
  [1,] -1.2529076 0.834558
  [2,]  0.3672866 2.455988

, , 2, 2, 1

      ^b
a           [,1]       [,2]
  [1,]  3.164831 -2.0122890
  [2,] -2.375510 -0.1534537

, , 1, 1, 2

      ^b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 2, 1, 2

      ^b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 1, 2, 2

      ^b
a            [,1]     [,2]
  [1,] -0.6264538 0.417279
  [2,]  0.1836433 1.227994

, , 2, 2, 2

      ^b
a           [,1]        [,2]
  [1,]  1.582415 -1.00614451
  [2,] -1.187755 -0.07672683

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> cleanEx()
> nameEx("einstein")
> ### * einstein
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: einstein.tensor
> ### Title: Tensor multiplication with Einstein's convention, by summing
> ###   over all equally named indices.
> ### Aliases: einstein.tensor %e% %e%.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,V=2,W=5))
> B <- to.tensor(1:30,list(U=c("a","b","c"),V=c("B1","B2"),W=1:5))
> einstein.tensor(A,U="U'",B)
      U
U'        a    b    c
  [1,] 1945 2045 2145
  [2,] 2090 2200 2310
attr(,"class")
[1] "tensor" "matrix"
> einstein.tensor(A,U="U'",mark(B,"k"))
, , 1, Uk = a, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2, Uk = a, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3, Uk = a, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4, Uk = a, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5, Uk = a, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   17   19
  [2,]   18   20

, , 1, Uk = b, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]    2    6
  [2,]    4    8

, , 2, Uk = b, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   10   14
  [2,]   12   16

, , 3, Uk = b, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   18   22
  [2,]   20   24

, , 4, Uk = b, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   26   30
  [2,]   28   32

, , 5, Uk = b, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   34   38
  [2,]   36   40

, , 1, Uk = c, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]    3    9
  [2,]    6   12

, , 2, Uk = c, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   15   21
  [2,]   18   24

, , 3, Uk = c, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   27   33
  [2,]   30   36

, , 4, Uk = c, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   39   45
  [2,]   42   48

, , 5, Uk = c, Vk = B1, Wk = 1

      V
U'     [,1] [,2]
  [1,]   51   57
  [2,]   54   60

, , 1, Uk = a, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]    4   12
  [2,]    8   16

, , 2, Uk = a, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   20   28
  [2,]   24   32

, , 3, Uk = a, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   36   44
  [2,]   40   48

, , 4, Uk = a, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   52   60
  [2,]   56   64

, , 5, Uk = a, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   68   76
  [2,]   72   80

, , 1, Uk = b, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]    5   15
  [2,]   10   20

, , 2, Uk = b, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   25   35
  [2,]   30   40

, , 3, Uk = b, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   45   55
  [2,]   50   60

, , 4, Uk = b, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   65   75
  [2,]   70   80

, , 5, Uk = b, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   85   95
  [2,]   90  100

, , 1, Uk = c, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]    6   18
  [2,]   12   24

, , 2, Uk = c, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   30   42
  [2,]   36   48

, , 3, Uk = c, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   54   66
  [2,]   60   72

, , 4, Uk = c, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]   78   90
  [2,]   84   96

, , 5, Uk = c, Vk = B2, Wk = 1

      V
U'     [,1] [,2]
  [1,]  102  114
  [2,]  108  120

, , 1, Uk = a, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]    7   21
  [2,]   14   28

, , 2, Uk = a, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   35   49
  [2,]   42   56

, , 3, Uk = a, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   63   77
  [2,]   70   84

, , 4, Uk = a, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   91  105
  [2,]   98  112

, , 5, Uk = a, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]  119  133
  [2,]  126  140

, , 1, Uk = b, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]    8   24
  [2,]   16   32

, , 2, Uk = b, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   40   56
  [2,]   48   64

, , 3, Uk = b, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   72   88
  [2,]   80   96

, , 4, Uk = b, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]  104  120
  [2,]  112  128

, , 5, Uk = b, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]  136  152
  [2,]  144  160

, , 1, Uk = c, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]    9   27
  [2,]   18   36

, , 2, Uk = c, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   45   63
  [2,]   54   72

, , 3, Uk = c, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]   81   99
  [2,]   90  108

, , 4, Uk = c, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]  117  135
  [2,]  126  144

, , 5, Uk = c, Vk = B1, Wk = 2

      V
U'     [,1] [,2]
  [1,]  153  171
  [2,]  162  180

, , 1, Uk = a, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   10   30
  [2,]   20   40

, , 2, Uk = a, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   50   70
  [2,]   60   80

, , 3, Uk = a, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   90  110
  [2,]  100  120

, , 4, Uk = a, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  130  150
  [2,]  140  160

, , 5, Uk = a, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  170  190
  [2,]  180  200

, , 1, Uk = b, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   11   33
  [2,]   22   44

, , 2, Uk = b, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   55   77
  [2,]   66   88

, , 3, Uk = b, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   99  121
  [2,]  110  132

, , 4, Uk = b, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  143  165
  [2,]  154  176

, , 5, Uk = b, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  187  209
  [2,]  198  220

, , 1, Uk = c, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   12   36
  [2,]   24   48

, , 2, Uk = c, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]   60   84
  [2,]   72   96

, , 3, Uk = c, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  108  132
  [2,]  120  144

, , 4, Uk = c, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  156  180
  [2,]  168  192

, , 5, Uk = c, Vk = B2, Wk = 2

      V
U'     [,1] [,2]
  [1,]  204  228
  [2,]  216  240

, , 1, Uk = a, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   13   39
  [2,]   26   52

, , 2, Uk = a, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   65   91
  [2,]   78  104

, , 3, Uk = a, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  117  143
  [2,]  130  156

, , 4, Uk = a, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  169  195
  [2,]  182  208

, , 5, Uk = a, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  221  247
  [2,]  234  260

, , 1, Uk = b, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   14   42
  [2,]   28   56

, , 2, Uk = b, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   70   98
  [2,]   84  112

, , 3, Uk = b, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  126  154
  [2,]  140  168

, , 4, Uk = b, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  182  210
  [2,]  196  224

, , 5, Uk = b, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  238  266
  [2,]  252  280

, , 1, Uk = c, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   15   45
  [2,]   30   60

, , 2, Uk = c, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]   75  105
  [2,]   90  120

, , 3, Uk = c, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  135  165
  [2,]  150  180

, , 4, Uk = c, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  195  225
  [2,]  210  240

, , 5, Uk = c, Vk = B1, Wk = 3

      V
U'     [,1] [,2]
  [1,]  255  285
  [2,]  270  300

, , 1, Uk = a, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   16   48
  [2,]   32   64

, , 2, Uk = a, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   80  112
  [2,]   96  128

, , 3, Uk = a, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  144  176
  [2,]  160  192

, , 4, Uk = a, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  208  240
  [2,]  224  256

, , 5, Uk = a, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  272  304
  [2,]  288  320

, , 1, Uk = b, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   17   51
  [2,]   34   68

, , 2, Uk = b, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   85  119
  [2,]  102  136

, , 3, Uk = b, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  153  187
  [2,]  170  204

, , 4, Uk = b, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  221  255
  [2,]  238  272

, , 5, Uk = b, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  289  323
  [2,]  306  340

, , 1, Uk = c, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   18   54
  [2,]   36   72

, , 2, Uk = c, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]   90  126
  [2,]  108  144

, , 3, Uk = c, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  162  198
  [2,]  180  216

, , 4, Uk = c, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  234  270
  [2,]  252  288

, , 5, Uk = c, Vk = B2, Wk = 3

      V
U'     [,1] [,2]
  [1,]  306  342
  [2,]  324  360

, , 1, Uk = a, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]   19   57
  [2,]   38   76

, , 2, Uk = a, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]   95  133
  [2,]  114  152

, , 3, Uk = a, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  171  209
  [2,]  190  228

, , 4, Uk = a, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  247  285
  [2,]  266  304

, , 5, Uk = a, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  323  361
  [2,]  342  380

, , 1, Uk = b, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]   20   60
  [2,]   40   80

, , 2, Uk = b, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  100  140
  [2,]  120  160

, , 3, Uk = b, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  180  220
  [2,]  200  240

, , 4, Uk = b, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  260  300
  [2,]  280  320

, , 5, Uk = b, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  340  380
  [2,]  360  400

, , 1, Uk = c, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]   21   63
  [2,]   42   84

, , 2, Uk = c, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  105  147
  [2,]  126  168

, , 3, Uk = c, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  189  231
  [2,]  210  252

, , 4, Uk = c, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  273  315
  [2,]  294  336

, , 5, Uk = c, Vk = B1, Wk = 4

      V
U'     [,1] [,2]
  [1,]  357  399
  [2,]  378  420

, , 1, Uk = a, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]   22   66
  [2,]   44   88

, , 2, Uk = a, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  110  154
  [2,]  132  176

, , 3, Uk = a, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  198  242
  [2,]  220  264

, , 4, Uk = a, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  286  330
  [2,]  308  352

, , 5, Uk = a, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  374  418
  [2,]  396  440

, , 1, Uk = b, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]   23   69
  [2,]   46   92

, , 2, Uk = b, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  115  161
  [2,]  138  184

, , 3, Uk = b, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  207  253
  [2,]  230  276

, , 4, Uk = b, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  299  345
  [2,]  322  368

, , 5, Uk = b, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  391  437
  [2,]  414  460

, , 1, Uk = c, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]   24   72
  [2,]   48   96

, , 2, Uk = c, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  120  168
  [2,]  144  192

, , 3, Uk = c, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  216  264
  [2,]  240  288

, , 4, Uk = c, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  312  360
  [2,]  336  384

, , 5, Uk = c, Vk = B2, Wk = 4

      V
U'     [,1] [,2]
  [1,]  408  456
  [2,]  432  480

, , 1, Uk = a, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]   25   75
  [2,]   50  100

, , 2, Uk = a, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  125  175
  [2,]  150  200

, , 3, Uk = a, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  225  275
  [2,]  250  300

, , 4, Uk = a, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  325  375
  [2,]  350  400

, , 5, Uk = a, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  425  475
  [2,]  450  500

, , 1, Uk = b, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]   26   78
  [2,]   52  104

, , 2, Uk = b, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  130  182
  [2,]  156  208

, , 3, Uk = b, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  234  286
  [2,]  260  312

, , 4, Uk = b, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  338  390
  [2,]  364  416

, , 5, Uk = b, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  442  494
  [2,]  468  520

, , 1, Uk = c, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]   27   81
  [2,]   54  108

, , 2, Uk = c, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  135  189
  [2,]  162  216

, , 3, Uk = c, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  243  297
  [2,]  270  324

, , 4, Uk = c, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  351  405
  [2,]  378  432

, , 5, Uk = c, Vk = B1, Wk = 5

      V
U'     [,1] [,2]
  [1,]  459  513
  [2,]  486  540

, , 1, Uk = a, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]   28   84
  [2,]   56  112

, , 2, Uk = a, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  140  196
  [2,]  168  224

, , 3, Uk = a, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  252  308
  [2,]  280  336

, , 4, Uk = a, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  364  420
  [2,]  392  448

, , 5, Uk = a, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  476  532
  [2,]  504  560

, , 1, Uk = b, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]   29   87
  [2,]   58  116

, , 2, Uk = b, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  145  203
  [2,]  174  232

, , 3, Uk = b, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  261  319
  [2,]  290  348

, , 4, Uk = b, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  377  435
  [2,]  406  464

, , 5, Uk = b, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  493  551
  [2,]  522  580

, , 1, Uk = c, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]   30   90
  [2,]   60  120

, , 2, Uk = c, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  150  210
  [2,]  180  240

, , 3, Uk = c, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  270  330
  [2,]  300  360

, , 4, Uk = c, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  390  450
  [2,]  420  480

, , 5, Uk = c, Vk = B2, Wk = 5

      V
U'     [,1] [,2]
  [1,]  510  570
  [2,]  540  600

attr(,"class")
[1] "tensor"
> einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk")
      Uk
U'        a    b    c
  [1,] 1945 2045 2145
  [2,] 2090 2200 2310
attr(,"class")
[1] "tensor" "matrix"
> einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk",1/10)
      Uk
U'         a     b     c
  [1,] 194.5 204.5 214.5
  [2,] 209.0 220.0 231.0
attr(,"class")
[1] "tensor" "matrix"
> einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk",diag=to.tensor(c(1,1/10,1/100),c(Uk=3)))
      Uk
U'        a     b     c
  [1,] 1945 204.5 21.45
  [2,] 2090 220.0 23.10
attr(,"class")
[1] "tensor" "matrix"
> 
> ftable(einstein.tensor(A,U="U'",B))
    U    a    b    c
U'                  
U'1   1945 2045 2145
U'2   2090 2200 2310
> ftable(einstein.tensor(A,U="U'",mark(B,"k")))
                Wk   1   2   3   4   5
U'  V  W  Uk Vk                       
U'1 V1 W1 a  B1      1   7  13  19  25
             B2      4  10  16  22  28
          b  B1      2   8  14  20  26
             B2      5  11  17  23  29
          c  B1      3   9  15  21  27
             B2      6  12  18  24  30
       W2 a  B1      5  35  65  95 125
             B2     20  50  80 110 140
          b  B1     10  40  70 100 130
             B2     25  55  85 115 145
          c  B1     15  45  75 105 135
             B2     30  60  90 120 150
       W3 a  B1      9  63 117 171 225
             B2     36  90 144 198 252
          b  B1     18  72 126 180 234
             B2     45  99 153 207 261
          c  B1     27  81 135 189 243
             B2     54 108 162 216 270
       W4 a  B1     13  91 169 247 325
             B2     52 130 208 286 364
          b  B1     26 104 182 260 338
             B2     65 143 221 299 377
          c  B1     39 117 195 273 351
             B2     78 156 234 312 390
       W5 a  B1     17 119 221 323 425
             B2     68 170 272 374 476
          b  B1     34 136 238 340 442
             B2     85 187 289 391 493
          c  B1     51 153 255 357 459
             B2    102 204 306 408 510
    V2 W1 a  B1      3  21  39  57  75
             B2     12  30  48  66  84
          b  B1      6  24  42  60  78
             B2     15  33  51  69  87
          c  B1      9  27  45  63  81
             B2     18  36  54  72  90
       W2 a  B1      7  49  91 133 175
             B2     28  70 112 154 196
          b  B1     14  56  98 140 182
             B2     35  77 119 161 203
          c  B1     21  63 105 147 189
             B2     42  84 126 168 210
       W3 a  B1     11  77 143 209 275
             B2     44 110 176 242 308
          b  B1     22  88 154 220 286
             B2     55 121 187 253 319
          c  B1     33  99 165 231 297
             B2     66 132 198 264 330
       W4 a  B1     15 105 195 285 375
             B2     60 150 240 330 420
          b  B1     30 120 210 300 390
             B2     75 165 255 345 435
          c  B1     45 135 225 315 405
             B2     90 180 270 360 450
       W5 a  B1     19 133 247 361 475
             B2     76 190 304 418 532
          b  B1     38 152 266 380 494
             B2     95 209 323 437 551
          c  B1     57 171 285 399 513
             B2    114 228 342 456 570
U'2 V1 W1 a  B1      2  14  26  38  50
             B2      8  20  32  44  56
          b  B1      4  16  28  40  52
             B2     10  22  34  46  58
          c  B1      6  18  30  42  54
             B2     12  24  36  48  60
       W2 a  B1      6  42  78 114 150
             B2     24  60  96 132 168
          b  B1     12  48  84 120 156
             B2     30  66 102 138 174
          c  B1     18  54  90 126 162
             B2     36  72 108 144 180
       W3 a  B1     10  70 130 190 250
             B2     40 100 160 220 280
          b  B1     20  80 140 200 260
             B2     50 110 170 230 290
          c  B1     30  90 150 210 270
             B2     60 120 180 240 300
       W4 a  B1     14  98 182 266 350
             B2     56 140 224 308 392
          b  B1     28 112 196 280 364
             B2     70 154 238 322 406
          c  B1     42 126 210 294 378
             B2     84 168 252 336 420
       W5 a  B1     18 126 234 342 450
             B2     72 180 288 396 504
          b  B1     36 144 252 360 468
             B2     90 198 306 414 522
          c  B1     54 162 270 378 486
             B2    108 216 324 432 540
    V2 W1 a  B1      4  28  52  76 100
             B2     16  40  64  88 112
          b  B1      8  32  56  80 104
             B2     20  44  68  92 116
          c  B1     12  36  60  84 108
             B2     24  48  72  96 120
       W2 a  B1      8  56 104 152 200
             B2     32  80 128 176 224
          b  B1     16  64 112 160 208
             B2     40  88 136 184 232
          c  B1     24  72 120 168 216
             B2     48  96 144 192 240
       W3 a  B1     12  84 156 228 300
             B2     48 120 192 264 336
          b  B1     24  96 168 240 312
             B2     60 132 204 276 348
          c  B1     36 108 180 252 324
             B2     72 144 216 288 360
       W4 a  B1     16 112 208 304 400
             B2     64 160 256 352 448
          b  B1     32 128 224 320 416
             B2     80 176 272 368 464
          c  B1     48 144 240 336 432
             B2     96 192 288 384 480
       W5 a  B1     20 140 260 380 500
             B2     80 200 320 440 560
          b  B1     40 160 280 400 520
             B2    100 220 340 460 580
          c  B1     60 180 300 420 540
             B2    120 240 360 480 600
> ftable(einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk"))
    Uk    a    b    c
U'                   
U'1    1945 2045 2145
U'2    2090 2200 2310
> ftable(einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk",1/10))
    Uk     a     b     c
U'                      
U'1    194.5 204.5 214.5
U'2    209.0 220.0 231.0
> ftable(einstein.tensor(A,U="U'",mark(B,"k"),V="Vk",W="Wk",diag=to.tensor(c(1,1/10,1/100),c(Uk=3))))
    Uk       a       b       c
U'                            
U'1    1945.00  204.50   21.45
U'2    2090.00  220.00   23.10
> 
> dim(A[[U=~M]])
M V W 
2 2 5 
> A[[U=~M]] 
, , 1

      V
M      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      V
M      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      V
M      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      V
M      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      V
M      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> A[[U=~M,V=~"L"]] 
, , 1

      L
M      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      L
M      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      L
M      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      L
M      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      L
M      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> cleanEx()
> nameEx("ftabletensor")
> ### * ftabletensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ftable.tensor
> ### Title: Pretty printing of tensors
> ### Aliases: ftable.tensor
> ### Keywords: math
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,V=2,W=5))
> A
, , 1

      V
U      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      V
U      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      V
U      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      V
U      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      V
U      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> dim(A)
U V W 
2 2 5 
> names(A)
[1] "U" "V" "W"
> dimnames(A)
$U
NULL

$V
NULL

$W
NULL

> 
> ftable(to.tensor(A))
      W W1 W2 W3 W4 W5
U  V                  
U1 V1    1  5  9 13 17
   V2    3  7 11 15 19
U2 V1    2  6 10 14 18
   V2    4  8 12 16 20
> ftable(to.tensor(c(A),dim(A)))
      W W1 W2 W3 W4 W5
U  V                  
U1 V1    1  5  9 13 17
   V2    3  7 11 15 19
U2 V1    2  6 10 14 18
   V2    4  8 12 16 20
> 
> 
> 
> 
> cleanEx()
> nameEx("invtensor")
> ### * invtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: inv.tensor
> ### Title: Inversion of a tensor as linear mapping from tensors to tensors
> ### Aliases: inv.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> # SVD
> # inv.tensor
> R1  <- matrix(rnorm(9),nrow=3)
> R1i <- solve(R1)
> R2 <- to.tensor(R1,c(a=3,b=3),what=1:2)
> R2i <- to.tensor(R1i,c(b=3,a=3),what=1:2)
> 
> inv.tensor(R2,"a","b") - R2i
      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0
attr(,"class")
[1] "tensor" "matrix"
> inv.tensor(R2,"a","b",allowSingular=TRUE) - R2i
      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16
attr(,"class")
[1] "tensor" "matrix"
> 
> inv.tensor(rep(R2,4,1,"K"),"a","b",by="K") - rep(R2i,4,1,"K")
, , 1

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 2

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 3

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 4

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

attr(,"class")
[1] "tensor"
> inv.tensor(rep(R2,4,1,"K"),"a","b",by="K",allowSingular=TRUE) - rep(R2i,4,3,"K")
, , 1

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 2

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 3

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 4

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("istensor")
> ### * istensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is.tensor
> ### Title: Checking for being a tensor
> ### Aliases: is.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- matrix(1:9,nrow=3)
> is.tensor(A) # no
[1] FALSE
> A <- to.tensor(A)
> is.tensor(A) # yes
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("leveltensor")
> ### * leveltensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: level.tensor
> ### Title: The level (number of indices) of a tensor
> ### Aliases: level.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:24,c(a=1,b=2,c=3,d=4))
> level.tensor(A)
[1] 4
> level.tensor(matrix(1))
[1] 2
> level.tensor(1:10)
[1] 1
> level.tensor(1)
[1] 0
> 
> 
> 
> cleanEx()
> nameEx("margin")
> ### * margin
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: margin.tensor
> ### Title: Marginalization of tensors
> ### Aliases: margin.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- diag(1:5)
> A
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    0    2    0    0    0
[3,]    0    0    3    0    0
[4,]    0    0    0    4    0
[5,]    0    0    0    0    5
> margin.tensor(A,1)
[1] 1 2 3 4 5
attr(,"class")
[1] "tensor"
> 
> A <- to.tensor(1:30,dim=c(i=3,j=5,k=2))
> ftable(A)
      k k1 k2
i  j         
i1 j1    1 16
   j2    4 19
   j3    7 22
   j4   10 25
   j5   13 28
i2 j1    2 17
   j2    5 20
   j3    8 23
   j4   11 26
   j5   14 29
i3 j1    3 18
   j2    6 21
   j3    9 24
   j4   12 27
   j5   15 30
> margin.tensor(A,"j")
      k
i      [,1] [,2]
  [1,]   35  110
  [2,]   40  115
  [3,]   45  120
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> 
> cleanEx()
> nameEx("marktensor")
> ### * marktensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mark.tensor
> ### Title: Marks the names of a tensor with a mark
> ### Aliases: mark mark.character mark.numeric mark.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> # The outer product
> A <- to.tensor(1:4,c(a=2,b=2))
> A 
      b
a      [,1] [,2]
  [1,]    1    3
  [2,]    2    4
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> cleanEx()
> nameEx("meantensor")
> ### * meantensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mean.tensor
> ### Title: Mean and variance of tensors
> ### Aliases: mean.tensor var.tensor
> ### Keywords: multivariate
> 
> ### ** Examples
> 
>  d1 <- c(a=2,b=2)
>  d2 <- c("a'"=2,"b'"=2)
>  # a mean tensor:
>  m <- to.tensor(1:4,d1)             
>  # a positive definite variance tensor:
>  V <- delta.tensor(d1)+one.tensor(c(d1,d2))
>  V
, , 1, 1

      b
a      [,1] [,2]
  [1,]    2    1
  [2,]    1    1

, , 2, 1

      b
a      [,1] [,2]
  [1,]    1    1
  [2,]    2    1

, , 1, 2

      b
a      [,1] [,2]
  [1,]    1    2
  [2,]    1    1

, , 2, 2

      b
a      [,1] [,2]
  [1,]    1    1
  [2,]    1    2

attr(,"class")
[1] "tensor"
>  # Simulate Normally distributed tensors with these moments:
>  X <- (power.tensor(V,c("a","b"),c("a'","b'"),p=1/2)  %e%
+       to.tensor(rnorm(1000*2*2),c(i=1000,d2))) + m
>  # The mean
>  mean.tensor(X,along="i")
      b
a           [,1]     [,2]
  [1,] 0.9896254 3.016583
  [2,] 1.9850116 4.017996
attr(,"class")
[1] "tensor" "matrix"
>  # Full tensorial covariance:
>  var.tensor(X,along="i")
, , 1, 1

      b
a          [,1]     [,2]
  [1,] 2.221704 1.201978
  [2,] 1.149362 1.168588

, , 2, 1

      b
a          [,1]     [,2]
  [1,] 1.149362 1.165263
  [2,] 2.215854 1.151960

, , 1, 2

      b
a          [,1]     [,2]
  [1,] 1.201978 2.211113
  [2,] 1.165263 1.153431

, , 2, 2

      b
a          [,1]     [,2]
  [1,] 1.168588 1.153431
  [2,] 1.151960 2.214864

attr(,"class")
[1] "tensor"
>  # Variance of the slices  X[[b=1]] and X[[b=2]] :
>  var.tensor(X,along="i",by="b")
, , 1

      a'
a          [,1]     [,2]
  [1,] 2.221704 1.149362
  [2,] 1.149362 2.215854

, , 2

      a'
a          [,1]     [,2]
  [1,] 2.211113 1.153431
  [2,] 1.153431 2.214864

attr(,"class")
[1] "tensor"
>  # Covariance of the slices X[[b=1]] and X[[b=2]] :
>  var.tensor(X[[b=1]],X[[a=~"a'",b=2]],along="i")
      a'
a          [,1]     [,2]
  [1,] 1.201978 1.168588
  [2,] 1.165263 1.151960
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> 
> cleanEx()
> nameEx("multensor")
> ### * multensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mul.tensor
> ### Title: Tensor multiplication for the tensor class
> ### Aliases: mul.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(A=2,B=2,C=5))
> B <- to.tensor(1:20,c(D=2,B=2,E=5))
> mul.tensor(A,"A",A,"B")
Warning in to.tensor.default(c(E), dime, ndimnames = ndim) :
  Tensor with duplicated names generated: B  C  A  C  
, , 1, 1

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]    7   23   39   55   71
  [2,]   15   31   47   63   79

, , 2, 1

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   10   34   58   82  106
  [2,]   22   46   70   94  118

, , 1, 2

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   19   67  115  163  211
  [2,]   43   91  139  187  235

, , 2, 2

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   22   78  134  190  246
  [2,]   50  106  162  218  274

, , 1, 3

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   31  111  191  271  351
  [2,]   71  151  231  311  391

, , 2, 3

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   34  122  210  298  386
  [2,]   78  166  254  342  430

, , 1, 4

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   43  155  267  379  491
  [2,]   99  211  323  435  547

, , 2, 4

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   46  166  286  406  526
  [2,]  106  226  346  466  586

, , 1, 5

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   55  199  343  487  631
  [2,]  127  271  415  559  703

, , 2, 5

      C
B      [,1] [,2] [,3] [,4] [,5]
  [1,]   58  210  362  514  666
  [2,]  134  286  438  590  742

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("names")
> ### * names
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: names.tensor
> ### Title: Getting and setting index and dimensionnames of a tensor
> ### Aliases: names.tensor names<-.tensor dimnames<-.tensor dimnames.tensor
> ###   dim<-.tensor
> ### Keywords: algebra
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,V=2,W=5))
> A
, , 1

      V
U      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      V
U      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      V
U      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      V
U      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      V
U      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> dim(A)
U V W 
2 2 5 
> names(A)
[1] "U" "V" "W"
> names(A) <- c("A","B","C")
> A
, , 1

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      B
A      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      B
A      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      B
A      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      B
A      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> dim(A)
A B C 
2 2 5 
> names(A)
[1] "A" "B" "C"
> 
> 
> 
> 
> cleanEx()
> nameEx("normtensor")
> ### * normtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: norm.tensor
> ### Title: Calculate the Euclidean norm or Euclidean operator norm of a
> ###   tensor or its subtensors
> ### Aliases: norm norm.tensor opnorm opnorm.tensor
> ### Keywords: algebra
> 
> ### ** Examples
> 
> C <- to.tensor(1:20,c(A=4,B=5))
> norm(C,"A")
[1]  5.477226 13.190906 21.118712 29.086079 37.067506
attr(,"class")
[1] "tensor"
> norm(C,2)
[1] 23.76973 25.69047 27.65863 29.66479
attr(,"class")
[1] "tensor"
> norm(C,c("A","B"))
[1] 53.57238
> opnorm(C,"A")
NULL
> 
> 
> 
> cleanEx()
> nameEx("onetensor")
> ### * onetensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: one.tensor
> ### Title: Creates a tensor with all entries 1
> ### Aliases: one.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> one.tensor(c(a=3,b=3,c=3))
, , 1

      b
a      [,1] [,2] [,3]
  [1,]    1    1    1
  [2,]    1    1    1
  [3,]    1    1    1

, , 2

      b
a      [,1] [,2] [,3]
  [1,]    1    1    1
  [2,]    1    1    1
  [3,]    1    1    1

, , 3

      b
a      [,1] [,2] [,3]
  [1,]    1    1    1
  [2,]    1    1    1
  [3,]    1    1    1

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("postensor")
> ### * postensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pos.tensor
> ### Title: enumeration of index combinations
> ### Aliases: pos.tensor
> ### Keywords: array
> 
> ### ** Examples
> 
>    (A <- to.tensor(1:20,dim=c(A=2,B=2,C=5)))
, , 1

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      B
A      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      B
A      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      B
A      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      B
A      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
>    pos.tensor(dim(A))
      A B C
 [1,] 1 1 1
 [2,] 2 1 1
 [3,] 1 2 1
 [4,] 2 2 1
 [5,] 1 1 2
 [6,] 2 1 2
 [7,] 1 2 2
 [8,] 2 2 2
 [9,] 1 1 3
[10,] 2 1 3
[11,] 1 2 3
[12,] 2 2 3
[13,] 1 1 4
[14,] 2 1 4
[15,] 1 2 4
[16,] 2 2 4
[17,] 1 1 5
[18,] 2 1 5
[19,] 1 2 5
[20,] 2 2 5
> 
> 
> 
> cleanEx()
> nameEx("powertensor")
> ### * powertensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: power.tensor
> ### Title: Compute the power of a symmetric tensor
> ### Aliases: power.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(rnorm(120),c(a=2,b=2,c=5,d=3,e=2))
> AAt <- A %e% mark(A,"'",c("a","b"))
> AAt
, , 1, 1

      b
a           [,1]      [,2]
  [1,] 17.564377  3.900600
  [2,]  1.780057 -3.176259

, , 2, 1

      b
a           [,1]       [,2]
  [1,]  1.780057 -0.5294323
  [2,] 24.204095 -3.9369811

, , 1, 2

      b
a            [,1]       [,2]
  [1,]  3.9005997 27.7005141
  [2,] -0.5294323  0.7063656

, , 2, 2

      b
a           [,1]       [,2]
  [1,] -3.176259  0.7063656
  [2,] -3.936981 24.4440609

attr(,"class")
[1] "tensor"
> 
> power.tensor(AAt,c("a","b"),c("a'","b'"),-1)
, , 1, 1

      b
a              [,1]         [,2]
  [1,]  0.060602653 -0.008792209
  [2,] -0.003416556  0.007578501

, , 2, 1

      b
a              [,1]        [,2]
  [1,] -0.003416556 0.001132953
  [2,]  0.042630662 0.006389444

, , 1, 2

      b
a              [,1]         [,2]
  [1,] -0.008792209  0.037412175
  [2,]  0.001132953 -0.002041093

, , 2, 2

      b
a             [,1]         [,2]
  [1,] 0.007578501 -0.002041093
  [2,] 0.006389444  0.042982554

attr(,"class")
[1] "tensor"
> 
> inv.tensor(AAt,c("a","b"))
, , 1, 1

      b
a              [,1]         [,2]
  [1,]  0.060602653 -0.008792209
  [2,] -0.003416556  0.007578501

, , 2, 1

      b
a              [,1]        [,2]
  [1,] -0.003416556 0.001132953
  [2,]  0.042630662 0.006389444

, , 1, 2

      b
a              [,1]         [,2]
  [1,] -0.008792209  0.037412175
  [2,]  0.001132953 -0.002041093

, , 2, 2

      b
a             [,1]         [,2]
  [1,] 0.007578501 -0.002041093
  [2,] 0.006389444  0.042982554

attr(,"class")
[1] "tensor"
> 
> power.tensor(AAt,c("a","b"),c("a'","b'"),2)
, , 1, 1

      b
a           [,1]      [,2]
  [1,] 336.97924  173.3742
  [2,]  84.79003 -137.6825

, , 2, 1

      b
a           [,1]       [,2]
  [1,]  84.79003  -23.31764
  [2,] 604.78694 -197.55477

, , 1, 2

      b
a           [,1]      [,2]
  [1,] 173.37420 783.31241
  [2,] -23.31764  26.52818

, , 2, 2

      b
a           [,1]      [,2]
  [1,] -137.6825  26.52818
  [2,] -197.5548 623.59951

attr(,"class")
[1] "tensor"
> mul.tensor(AAt,c("a","b"),AAt,c("a'","b'"))
, , 1, 1

      b'
a'          [,1]      [,2]
  [1,] 336.97924  173.3742
  [2,]  84.79003 -137.6825

, , 2, 1

      b'
a'          [,1]       [,2]
  [1,]  84.79003  -23.31764
  [2,] 604.78694 -197.55477

, , 1, 2

      b'
a'          [,1]      [,2]
  [1,] 173.37420 783.31241
  [2,] -23.31764  26.52818

, , 2, 2

      b'
a'          [,1]      [,2]
  [1,] -137.6825  26.52818
  [2,] -197.5548 623.59951

attr(,"class")
[1] "tensor"
> 
> power.tensor(power.tensor(AAt,c("a","b"),c("a'","b'"),1/pi),
+                      c("a","b"),c("a'","b'"),pi)
, , 1, 1

      b
a           [,1]      [,2]
  [1,] 17.564377  3.900600
  [2,]  1.780057 -3.176259

, , 2, 1

      b
a           [,1]       [,2]
  [1,]  1.780057 -0.5294323
  [2,] 24.204095 -3.9369811

, , 1, 2

      b
a            [,1]       [,2]
  [1,]  3.9005997 27.7005141
  [2,] -0.5294323  0.7063656

, , 2, 2

      b
a           [,1]       [,2]
  [1,] -3.176259  0.7063656
  [2,] -3.936981 24.4440609

attr(,"class")
[1] "tensor"
> 
> 
> AAt <- einstein.tensor(A , mark(A,"'",c("a","b")),by="e")
> 
> power.tensor(AAt,c("a","b"),c("a'","b'"),-1,by="e")
, , 1, 1, 1

      b
a             [,1]         [,2]
  [1,]  0.34320291 -0.009370125
  [2,] -0.02703248  0.071128048

, , 2, 1, 1

      b
a             [,1]       [,2]
  [1,] -0.02703248 0.02901092
  [2,]  0.11367936 0.01903483

, , 1, 2, 1

      b
a              [,1]        [,2]
  [1,] -0.009370125  0.09106155
  [2,]  0.029010924 -0.02015882

, , 2, 2, 1

      b
a            [,1]        [,2]
  [1,] 0.07112805 -0.02015882
  [2,] 0.01903483  0.09103919

, , 1, 1, 2

      b
a            [,1]        [,2]
  [1,] 0.08593926 -0.03757613
  [2,] 0.01171886 -0.02072908

, , 2, 1, 2

      b
a            [,1]        [,2]
  [1,] 0.01171886 -0.03323533
  [2,] 0.08719169 -0.02210156

, , 1, 2, 2

      b
a             [,1]       [,2]
  [1,] -0.03757613 0.10454907
  [2,] -0.03323533 0.05043206

, , 2, 2, 2

      b
a             [,1]       [,2]
  [1,] -0.02072908 0.05043206
  [2,] -0.02210156 0.13923919

attr(,"class")
[1] "tensor"
> 
> inv.tensor(AAt,c("a","b"),by="e")
, , 1, 1, 1

      b
a             [,1]         [,2]
  [1,]  0.34320291 -0.009370125
  [2,] -0.02703248  0.071128048

, , 2, 1, 1

      b
a             [,1]       [,2]
  [1,] -0.02703248 0.02901092
  [2,]  0.11367936 0.01903483

, , 1, 2, 1

      b
a              [,1]        [,2]
  [1,] -0.009370125  0.09106155
  [2,]  0.029010924 -0.02015882

, , 2, 2, 1

      b
a            [,1]        [,2]
  [1,] 0.07112805 -0.02015882
  [2,] 0.01903483  0.09103919

, , 1, 1, 2

      b
a            [,1]        [,2]
  [1,] 0.08593926 -0.03757613
  [2,] 0.01171886 -0.02072908

, , 2, 1, 2

      b
a            [,1]        [,2]
  [1,] 0.01171886 -0.03323533
  [2,] 0.08719169 -0.02210156

, , 1, 2, 2

      b
a             [,1]       [,2]
  [1,] -0.03757613 0.10454907
  [2,] -0.03323533 0.05043206

, , 2, 2, 2

      b
a             [,1]       [,2]
  [1,] -0.02072908 0.05043206
  [2,] -0.02210156 0.13923919

attr(,"class")
[1] "tensor"
> 
> power.tensor(AAt,c("a","b"),c("a'","b'"),2,by="e")
, , 1, 1, 1

      b
a          [,1]      [,2]
  [1,] 30.05055 -39.46786
  [2,] 45.71631 -80.14155

, , 2, 1, 1

      b
a           [,1]      [,2]
  [1,]  45.71631 -129.8329
  [2,] 166.78599 -150.2038

, , 1, 2, 1

      b
a            [,1]     [,2]
  [1,]  -39.46786 218.0298
  [2,] -129.83285 156.6892

, , 2, 2, 1

      b
a            [,1]     [,2]
  [1,]  -80.14155 156.6892
  [2,] -150.20380 301.1452

, , 1, 1, 2

      b
a           [,1]      [,2]
  [1,] 214.39208 135.44531
  [2,]  20.63038 -11.59282

, , 2, 1, 2

      b
a           [,1]        [,2]
  [1,]  20.63038 103.6688229
  [2,] 187.10129   0.2037233

, , 1, 2, 2

      b
a          [,1]      [,2]
  [1,] 135.4453 260.73566
  [2,] 103.6688 -85.71715

, , 2, 2, 2

      b
a             [,1]      [,2]
  [1,] -11.5928191 -85.71715
  [2,]   0.2037233  92.16669

attr(,"class")
[1] "tensor"
> mul.tensor(AAt,c("a","b"),AAt,c("a'","b'"),by="e")
, , 1, 1, 1

      b'
a'         [,1]      [,2]
  [1,] 30.05055 -39.46786
  [2,] 45.71631 -80.14155

, , 2, 1, 1

      b'
a'          [,1]      [,2]
  [1,]  45.71631 -129.8329
  [2,] 166.78599 -150.2038

, , 1, 2, 1

      b'
a'           [,1]     [,2]
  [1,]  -39.46786 218.0298
  [2,] -129.83285 156.6892

, , 2, 2, 1

      b'
a'           [,1]     [,2]
  [1,]  -80.14155 156.6892
  [2,] -150.20380 301.1452

, , 1, 1, 2

      b'
a'          [,1]      [,2]
  [1,] 214.39208 135.44531
  [2,]  20.63038 -11.59282

, , 2, 1, 2

      b'
a'          [,1]        [,2]
  [1,]  20.63038 103.6688229
  [2,] 187.10129   0.2037233

, , 1, 2, 2

      b'
a'         [,1]      [,2]
  [1,] 135.4453 260.73566
  [2,] 103.6688 -85.71715

, , 2, 2, 2

      b'
a'            [,1]      [,2]
  [1,] -11.5928191 -85.71715
  [2,]   0.2037233  92.16669

attr(,"class")
[1] "tensor"
> 
> power.tensor(power.tensor(AAt,c("a","b"),c("a'","b'"),1/pi,by="e"),
+ c("a","b"),c("a'","b'"),pi,by="e")
, , 1, 1, 1

      b
a          [,1]      [,2]
  [1,] 3.747119 -0.933751
  [2,] 1.714180 -3.492756

, , 2, 1, 1

      b
a          [,1]      [,2]
  [1,]  1.71418 -4.384602
  [2,] 11.09862 -4.630700

, , 1, 2, 1

      b
a           [,1]      [,2]
  [1,] -0.933751 13.298713
  [2,] -4.384602  4.591016

, , 2, 2, 1

      b
a           [,1]      [,2]
  [1,] -3.492756  4.591016
  [2,] -4.630700 15.697932

, , 1, 1, 2

      b
a             [,1]     [,2]
  [1,] 13.81725800 4.834351
  [2,]  0.06587662 0.316497

, , 2, 1, 2

      b
a             [,1]      [,2]
  [1,]  0.06587662 3.8551699
  [2,] 13.10547113 0.6937186

, , 1, 2, 2

      b
a          [,1]     [,2]
  [1,] 4.834351 14.40180
  [2,] 3.855170 -3.88465

, , 2, 2, 2

      b
a           [,1]      [,2]
  [1,] 0.3164970 -3.884650
  [2,] 0.6937186  8.746129

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("reordertensor")
> ### * reordertensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: reorder.tensor
> ### Title: Permutation of indices and storage sequence of a tensor
> ### Aliases: reorder.tensor
> ### Keywords: array
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(A=2,B=2,C=5))
> A
, , 1

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      B
A      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      B
A      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      B
A      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      B
A      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> reorder(A,"C")
, , 1

      A
C      [,1] [,2]
  [1,]    1    2
  [2,]    5    6
  [3,]    9   10
  [4,]   13   14
  [5,]   17   18

, , 2

      A
C      [,1] [,2]
  [1,]    3    4
  [2,]    7    8
  [3,]   11   12
  [4,]   15   16
  [5,]   19   20

attr(,"class")
[1] "tensor"
> reorder(A,"B")
, , 1

      A
B      [,1] [,2]
  [1,]    1    2
  [2,]    3    4

, , 2

      A
B      [,1] [,2]
  [1,]    5    6
  [2,]    7    8

, , 3

      A
B      [,1] [,2]
  [1,]    9   10
  [2,]   11   12

, , 4

      A
B      [,1] [,2]
  [1,]   13   14
  [2,]   15   16

, , 5

      A
B      [,1] [,2]
  [1,]   17   18
  [2,]   19   20

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("reptensor")
> ### * reptensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: reptensor
> ### Title: Repeats a tensor
> ### Aliases: rep.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:4,c(A=2,B=2))
> rep(A,3)
, , 1

      A
i      [,1] [,2]
  [1,]    1    2
  [2,]    1    2
  [3,]    1    2

, , 2

      A
i      [,1] [,2]
  [1,]    3    4
  [2,]    3    4
  [3,]    3    4

attr(,"class")
[1] "tensor"
> rep(A,3,3,"u")
, , 1

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 3

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

attr(,"class")
[1] "tensor"
> rep(A,c(2,3))
      B
i      [,1] [,2]
  [1,]    1    3
  [2,]    1    3
  [3,]    2    4
  [4,]    2    4
  [5,]    2    4
attr(,"class")
[1] "tensor" "matrix"
> A <- to.tensor(1:4,c(A=1,B=4))
> rep(A,5,pos="A",name=NA)
      B
NA     [,1] [,2] [,3] [,4]
  [1,]    1    2    3    4
  [2,]    1    2    3    4
  [3,]    1    2    3    4
  [4,]    1    2    3    4
  [5,]    1    2    3    4
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> cleanEx()
> nameEx("riemann")
> ### * riemann
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: riemann.tensor
> ### Title: Tensor multiplication with Riemann's convention
> ### Aliases: riemann.tensor %r% %r%.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,"^V"=2,W=5))
> B <- to.tensor(1:20,c("^U"=2,V=2,Q=5))
> riemann.tensor(A,B)
      Q
W      [,1] [,2] [,3] [,4] [,5]
  [1,]   30   70  110  150  190
  [2,]   70  174  278  382  486
  [3,]  110  278  446  614  782
  [4,]  150  382  614  846 1078
  [5,]  190  486  782 1078 1374
attr(,"class")
[1] "tensor" "matrix"
> A %r% B 
      Q
W      [,1] [,2] [,3] [,4] [,5]
  [1,]   30   70  110  150  190
  [2,]   70  174  278  382  486
  [3,]  110  278  446  614  782
  [4,]  150  382  614  846 1078
  [5,]  190  486  782 1078 1374
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> 
> cleanEx()
> nameEx("sequencing")
> ### * sequencing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sequencing
> ### Title: Working with index sequences
> ### Aliases: $.tensor ^.tensor |.tensor renamefirst.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(i=5,j=2,k=2))
> C <- to.tensor(1:4,c(i=2,j=2))
> E <- A$ihl %e% C$hj %e% C$lk |"$ijk"
> E
, , 1

      j
i      [,1] [,2]
  [1,]   99  221
  [2,]  108  242
  [3,]  117  263
  [4,]  126  284
  [5,]  135  305

, , 2

      j
i      [,1] [,2]
  [1,]  211  469
  [2,]  232  518
  [3,]  253  567
  [4,]  274  616
  [5,]  295  665

attr(,"class")
[1] "tensor"
> # Same as:
> E2 <- reorder.tensor(A[[j=~h,k=~l]] %e% C[[i=~h]] %e% C[[i=~l,j=~k]],c("i","j","k"))
> E-E2
, , 1

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

, , 2

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

attr(,"class")
[1] "tensor"
> E <- A$i.h.l %e% C$h.j %e% C$l.k |"i.j.k"
> E
, , 1

      j
i      [,1] [,2]
  [1,]   99  221
  [2,]  108  242
  [3,]  117  263
  [4,]  126  284
  [5,]  135  305

, , 2

      j
i      [,1] [,2]
  [1,]  211  469
  [2,]  232  518
  [3,]  253  567
  [4,]  274  616
  [5,]  295  665

attr(,"class")
[1] "tensor"
> E-E2
, , 1

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

, , 2

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

attr(,"class")
[1] "tensor"
> E <- A^"i.h.l" %e% C^"h.j" %e% C^"l.k" |"i.j.k"
> E
, , 1

      j
i      [,1] [,2]
  [1,]   99  221
  [2,]  108  242
  [3,]  117  263
  [4,]  126  284
  [5,]  135  305

, , 2

      j
i      [,1] [,2]
  [1,]  211  469
  [2,]  232  518
  [3,]  253  567
  [4,]  274  616
  [5,]  295  665

attr(,"class")
[1] "tensor"
> E-E2
, , 1

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

, , 2

      j
i      [,1] [,2]
  [1,]    0    0
  [2,]    0    0
  [3,]    0    0
  [4,]    0    0
  [5,]    0    0

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("slicetensor")
> ### * slicetensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: slice.tensor
> ### Title: Working with the indices of a tensor (accessing, slicing,
> ###   renaming, ...)
> ### Aliases: slice.tensor [[.tensor [.tensor [[<-.tensor [<-.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(A=2,B=2,C=5))
> A[C=1]
[1] 1
attr(,"class")
[1] "tensor"
> A[C=1:3]
[1] 1 2 3
attr(,"class")
[1] "tensor"
> A[[B=~b]]                  # renaming dimensions
, , 1

      b
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      b
A      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      b
A      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      b
A      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      b
A      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> A[[B=~b,A=~aaa]]      
, , 1

      b
aaa    [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      b
aaa    [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      b
aaa    [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      b
aaa    [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      b
aaa    [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> A[[B=~b,A=~aaa,aaa=1]]      
      C
b      [,1] [,2] [,3] [,4] [,5]
  [1,]    1    5    9   13   17
  [2,]    3    7   11   15   19
attr(,"class")
[1] "tensor"
> A[[A=1,B=~gamma]][C=1:2]
[1] 1 3
attr(,"class")
[1] "tensor"
> A 
, , 1

      B
A      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      B
A      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      B
A      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      B
A      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      B
A      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("solvetensor")
> ### * solvetensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: solve.tensor
> ### Title: Solving linear equations with tensors
> ### Aliases: solve.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> R1  <- matrix(rnorm(9),nrow=3)
> R1i <- solve(R1)
> R2 <- to.tensor(R1,c(a=3,b=3),what=1:2)
> R2i <- to.tensor(R1i,c(b=3,a=3),what=1:2)
> 
> inv.tensor(R2,"a","b") - R2i
      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0
attr(,"class")
[1] "tensor" "matrix"
> inv.tensor(R2,"a","b",allowSingular=TRUE) - R2i
      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16
attr(,"class")
[1] "tensor" "matrix"
> 
> inv.tensor(rep(R2,4,1,"K"),"a","b",by="K") - rep(R2i,4,1,"K")
, , 1

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 2

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 3

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 4

      b
a      [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    0

attr(,"class")
[1] "tensor"
> inv.tensor(rep(R2,4,1,"K"),"a","b",by="K",allowSingular=TRUE) - rep(R2i,4,3,"K")
, , 1

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 2

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 3

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

, , 4

      b
a              [,1]         [,2]          [,3]
  [1,] 2.220446e-16 0.000000e+00  2.359224e-16
  [2,] 6.661338e-16 7.979728e-17 -2.220446e-16
  [3,] 3.330669e-16 1.665335e-16 -3.330669e-16

attr(,"class")
[1] "tensor"
> 
> R3 <- to.tensor(rnorm(15),c(a=3,z=5))
> 
> mul.tensor(R2i,"b",mul.tensor(R2,"a",R3)) # R3
      z
a            [,1]       [,2]        [,3]      [,4]        [,5]
  [1,] -0.3053884 -0.6212406 -0.04493361 0.8212212  0.78213630
  [2,]  1.5117812 -2.2146999 -0.01619026 0.5939013  0.07456498
  [3,]  0.3898432  1.1249309  0.94383621 0.9189774 -1.98935170
attr(,"class")
[1] "tensor" "matrix"
> 
> solve.tensor(R2i,R3[[z=1]],"a")
[1]  0.1431761 -0.3088906  1.1917947
attr(,"class")
[1] "tensor"
> mul.tensor(R2,"a",R3[[z=1]])
[1]  0.1431761 -0.3088906  1.1917947
attr(,"class")
[1] "tensor"
> 
> solve.tensor(R2i,R3,"a")
      z
b            [,1]       [,2]       [,3]       [,4]       [,5]
  [1,]  0.1431761 -0.9575608 -0.7635209 -1.1733149  1.1860803
  [2,] -0.3088906 -2.6437842 -0.8514043  0.7517816  2.9044969
  [3,]  1.1917947 -1.2902641  0.5095877  1.3679091 -0.7091425
attr(,"class")
[1] "tensor" "matrix"
> mul.tensor(R2,"a",R3)
      z
b            [,1]       [,2]       [,3]       [,4]       [,5]
  [1,]  0.1431761 -0.9575608 -0.7635209 -1.1733149  1.1860803
  [2,] -0.3088906 -2.6437842 -0.8514043  0.7517816  2.9044969
  [3,]  1.1917947 -1.2902641  0.5095877  1.3679091 -0.7091425
attr(,"class")
[1] "tensor" "matrix"
> 
> solve.tensor(R2i,R3[[z=1]],"a",allowSingular=TRUE)
[1]  0.1431761 -0.3088906  1.1917947
attr(,"class")
[1] "tensor"
> mul.tensor(R2,"a",R3[[z=1]])
[1]  0.1431761 -0.3088906  1.1917947
attr(,"class")
[1] "tensor"
> 
> solve.tensor(R2i,R3,"a",allowSingular=TRUE)
      z
b            [,1]       [,2]       [,3]       [,4]       [,5]
  [1,]  0.1431761 -0.9575608 -0.7635209 -1.1733149  1.1860803
  [2,] -0.3088906 -2.6437842 -0.8514043  0.7517816  2.9044969
  [3,]  1.1917947 -1.2902641  0.5095877  1.3679091 -0.7091425
attr(,"class")
[1] "tensor" "matrix"
> mul.tensor(R2,"a",R3)
      z
b            [,1]       [,2]       [,3]       [,4]       [,5]
  [1,]  0.1431761 -0.9575608 -0.7635209 -1.1733149  1.1860803
  [2,] -0.3088906 -2.6437842 -0.8514043  0.7517816  2.9044969
  [3,]  1.1917947 -1.2902641  0.5095877  1.3679091 -0.7091425
attr(,"class")
[1] "tensor" "matrix"
> 
> solve.tensor(rep(R2i,4,1,"K"),R3[[z=1]],"a",by="K")
      K
b            [,1]       [,2]       [,3]       [,4]
  [1,]  0.1431761  0.1431761  0.1431761  0.1431761
  [2,] -0.3088906 -0.3088906 -0.3088906 -0.3088906
  [3,]  1.1917947  1.1917947  1.1917947  1.1917947
attr(,"class")
[1] "tensor" "matrix"
> rep(mul.tensor(R2,"a",R3[[z=1]]),4,1,"K")
      b
K           [,1]       [,2]     [,3]
  [1,] 0.1431761 -0.3088906 1.191795
  [2,] 0.1431761 -0.3088906 1.191795
  [3,] 0.1431761 -0.3088906 1.191795
  [4,] 0.1431761 -0.3088906 1.191795
attr(,"class")
[1] "tensor" "matrix"
> 
> solve.tensor(rep(R2i,4,1,"K"),rep(R3[[z=1]],4,1,"K"),"a",by="K")
      K
b            [,1]       [,2]       [,3]       [,4]
  [1,]  0.1431761  0.1431761  0.1431761  0.1431761
  [2,] -0.3088906 -0.3088906 -0.3088906 -0.3088906
  [3,]  1.1917947  1.1917947  1.1917947  1.1917947
attr(,"class")
[1] "tensor" "matrix"
> rep(mul.tensor(R2,"a",R3[[z=1]]),4,1,"K")
      b
K           [,1]       [,2]     [,3]
  [1,] 0.1431761 -0.3088906 1.191795
  [2,] 0.1431761 -0.3088906 1.191795
  [3,] 0.1431761 -0.3088906 1.191795
  [4,] 0.1431761 -0.3088906 1.191795
attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> 
> cleanEx()
> nameEx("svdtensor")
> ### * svdtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: svd.tensor
> ### Title: Singular value decomposition of tensors
> ### Aliases: svd.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> # SVD
> A <- to.tensor(rnorm(120),c(a=2,b=2,c=5,d=3,e=2))
> 
> SVD <- svd.tensor(A,c("a","d"),c("b","c"),by="e")
> dim(SVD$v)
     b      c lambda      e 
     2      5      6      2 
> # Property of decomposition
> einstein.tensor(SVD$v,diag=SVD$d,SVD$u,by="e") # A
, , 1, 1, 1

      c
b            [,1]      [,2]      [,3]       [,4]        [,5]
  [1,] -0.6264538 0.3295078 0.5757814 -0.6212406 -0.01619026
  [2,] -0.8356286 0.4874291 1.5117812  1.1249309  0.82122120

, , 2, 1, 1

      c
b           [,1]       [,2]       [,3]        [,4]      [,5]
  [1,] 0.1836433 -0.8204684 -0.3053884 -2.21469989 0.9438362
  [2,] 1.5952808  0.7383247  0.3898432 -0.04493361 0.5939013

, , 1, 2, 1

      c
b            [,1]       [,2]       [,3]       [,4]      [,5]
  [1,] 0.91897737  0.6198257 -0.4781501  0.3876716 -0.394290
  [2,] 0.07456498 -0.1557955  1.3586796 -1.3770596  1.100025

, , 2, 2, 1

      c
b            [,1]        [,2]       [,3]        [,4]       [,5]
  [1,]  0.7821363 -0.05612874  0.4179416 -0.05380504 -0.0593134
  [2,] -1.9893517 -1.47075238 -0.1027877 -0.41499456  0.7631757

, , 1, 3, 1

      c
b            [,1]       [,2]       [,3]      [,4]       [,5]
  [1,] -0.1645236 -0.6887557 -0.1123462 0.3411197 -0.3672215
  [2,]  0.6969634  0.3645820  0.3981059 1.4330237  0.5697196

, , 2, 3, 1

      c
b            [,1]       [,2]       [,3]      [,4]       [,5]
  [1,] -0.2533617 -0.7074952  0.8811077 -1.129363 -1.0441346
  [2,]  0.5566632  0.7685329 -0.6120264  1.980400 -0.1350546

, , 1, 1, 2

      c
b           [,1]       [,2]      [,3]       [,4]        [,5]
  [1,] 2.4016178 -0.7432732 0.1532533  0.6107264 -0.44329187
  [2,] 0.6897394 -1.8049586 0.4755095 -1.2536334  0.07434132

, , 2, 1, 2

      c
b             [,1]      [,2]       [,3]       [,4]         [,5]
  [1,] -0.03924000 0.1887923  2.1726117 -0.9340976  0.001105352
  [2,]  0.02800216 1.4655549 -0.7099464  0.2914462 -0.589520946

, , 1, 2, 2

      c
b            [,1]      [,2]       [,3]     [,4]      [,5]
  [1,] -0.5686687 0.5939462  0.3700188 1.160403 -1.276592
  [2,]  1.1780870 1.0630998 -0.5425200 1.586833 -1.224613

, , 2, 2, 2

      c
b            [,1]       [,2]      [,3]      [,4]       [,5]
  [1,] -0.1351786  0.3329504 0.2670988 0.7002136 -0.5732654
  [2,] -1.5235668 -0.3041839 1.2078678 0.5584864 -0.4734006

, , 1, 3, 2

      c
b            [,1]       [,2]       [,3]       [,4]       [,5]
  [1,] -0.6203667 -0.6545846  0.3841854  1.4322822 -0.3199929
  [2,] -0.9109216  0.7167075 -0.6357365 -0.2073807  0.4941883

, , 2, 3, 2

      c
b            [,1]      [,2]       [,3]       [,4]       [,5]
  [1,] 0.04211587 1.7672873  1.6821761 -0.6506964 -0.2791133
  [2,] 0.15802877 0.9101742 -0.4616447 -0.3928079 -0.1773305

attr(,"class")
[1] "tensor"
> # Property of orthogonality
> SVD$v %e% SVD$v[[lambda=~"lambda'"]]         # 2*delta.tensor(c(lambda=6))
      lambda'
lambda          [,1]          [,2]          [,3]          [,4]         [,5]
  [1,]  2.000000e+00  2.680148e-16  2.775558e-17 -2.654127e-16 2.289835e-16
  [2,]  2.680148e-16  2.000000e+00 -1.075529e-16  9.789261e-16 2.541370e-16
  [3,]  2.775558e-17 -1.075529e-16  2.000000e+00 -2.333203e-16 9.714451e-17
  [4,] -2.654127e-16  9.789261e-16 -2.333203e-16  2.000000e+00 6.678685e-17
  [5,]  2.289835e-16  2.541370e-16  9.714451e-17  6.678685e-17 2.000000e+00
  [6,]  8.326673e-17  2.125036e-16 -1.387779e-16 -5.030698e-17 3.608225e-16
      lambda'
lambda          [,6]
  [1,]  8.326673e-17
  [2,]  2.125036e-16
  [3,] -1.387779e-16
  [4,] -5.030698e-17
  [5,]  3.608225e-16
  [6,]  2.000000e+00
attr(,"class")
[1] "tensor" "matrix"
> SVD$u %e% SVD$u[[lambda=~"lambda'"]]         # 2*delta.tensor(c(lambda=6)))
      lambda'
lambda          [,1]          [,2]          [,3]          [,4]          [,5]
  [1,]  2.000000e+00  1.110223e-16  3.573530e-16 -6.938894e-17 -8.604228e-16
  [2,]  1.110223e-16  2.000000e+00 -1.066855e-16 -2.359224e-16 -1.665335e-16
  [3,]  3.573530e-16 -1.066855e-16  2.000000e+00  4.831205e-16  2.736526e-16
  [4,] -6.938894e-17 -2.359224e-16  4.831205e-16  2.000000e+00  1.387779e-17
  [5,] -8.604228e-16 -1.665335e-16  2.736526e-16  1.387779e-17  2.000000e+00
  [6,]  2.220446e-16 -1.110223e-16  1.821460e-16  1.942890e-16 -2.914335e-16
      lambda'
lambda          [,6]
  [1,]  2.220446e-16
  [2,] -1.110223e-16
  [3,]  1.821460e-16
  [4,]  1.942890e-16
  [5,] -2.914335e-16
  [6,]  2.000000e+00
attr(,"class")
[1] "tensor" "matrix"
> SVD$u %e% mark(SVD$u,"'",c("a","d"))  # 2*delta.tensor(c(a=2,d=3)))
, , 1, 1

      d
a              [,1]         [,2]         [,3]
  [1,] 2.000000e+00 3.380542e-16 1.283695e-16
  [2,] 9.367507e-17 6.149595e-16 3.747003e-16

, , 2, 1

      d
a              [,1]          [,2]         [,3]
  [1,] 9.367507e-17  1.231654e-16 3.053113e-16
  [2,] 2.000000e+00 -1.804112e-16 1.110223e-16

, , 1, 2

      d
a              [,1]          [,2]          [,3]
  [1,] 3.380542e-16  2.000000e+00 -5.390653e-16
  [2,] 1.231654e-16 -3.126839e-16 -1.682682e-16

, , 2, 2

      d
a               [,1]          [,2]         [,3]
  [1,]  6.149595e-16 -3.126839e-16 1.942890e-16
  [2,] -1.804112e-16  2.000000e+00 1.387779e-17

, , 1, 3

      d
a              [,1]          [,2]         [,3]
  [1,] 1.283695e-16 -5.390653e-16 2.000000e+00
  [2,] 3.053113e-16  1.942890e-16 4.163336e-16

, , 2, 3

      d
a              [,1]          [,2]         [,3]
  [1,] 3.747003e-16 -1.682682e-16 4.163336e-16
  [2,] 1.110223e-16  1.387779e-17 2.000000e+00

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("tensorA.package")
> ### * tensorA.package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tensorA-package
> ### Title: The tensorA package for tensor arithmetic
> ### Aliases: tensorA-package tensor Tensor tensorA
> ### Keywords: package
> 
> ### ** Examples
> 
> A <- to.tensor( 1:20, c(a=2,b=2,c=5) )
> A
, , 1

      b
a      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      b
a      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      b
a      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      b
a      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      b
a      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> ftable(A)
      c c1 c2 c3 c4 c5
a  b                  
a1 b1    1  5  9 13 17
   b2    3  7 11 15 19
a2 b1    2  6 10 14 18
   b2    4  8 12 16 20
> B <- to.tensor( c(0,1,1,0) , c(a=2,"a'"=2))
> A %e% B
, , 1

      c
b      [,1] [,2] [,3] [,4] [,5]
  [1,]    2    6   10   14   18
  [2,]    4    8   12   16   20

, , 2

      c
b      [,1] [,2] [,3] [,4] [,5]
  [1,]    1    5    9   13   17
  [2,]    3    7   11   15   19

attr(,"class")
[1] "tensor"
> drag.tensor( A , B, c("a","b"))
, , 1

      ^a
c      [,1] [,2]
  [1,]    4    3
  [2,]    8    7
  [3,]   12   11
  [4,]   16   15
  [5,]   20   19

, , 2

      ^a
c      [,1] [,2]
  [1,]    2    1
  [2,]    6    5
  [3,]   10    9
  [4,]   14   13
  [5,]   18   17

attr(,"class")
[1] "tensor"
> A %e% one.tensor(c(c=5))/5     # a mean of matrices
      b
a      [,1] [,2]
  [1,]    9   11
  [2,]   10   12
attr(,"class")
[1] "tensor" "matrix"
> reorder.tensor(A,c("c","b","a"))
, , 1

      b
c      [,1] [,2]
  [1,]    1    3
  [2,]    5    7
  [3,]    9   11
  [4,]   13   15
  [5,]   17   19

, , 2

      b
c      [,1] [,2]
  [1,]    2    4
  [2,]    6    8
  [3,]   10   12
  [4,]   14   16
  [5,]   18   20

attr(,"class")
[1] "tensor"
> A -  reorder.tensor(A,c("c","b","a"))  # =0 since sequence is irrelevant
, , 1

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 2

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 3

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 4

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

, , 5

      b
a      [,1] [,2]
  [1,]    0    0
  [2,]    0    0

attr(,"class")
[1] "tensor"
> inv.tensor(A,"a",by="c")  
, , 1

      b
a      [,1] [,2]
  [1,] -2.0  1.0
  [2,]  1.5 -0.5

, , 2

      b
a      [,1] [,2]
  [1,] -4.0  3.0
  [2,]  3.5 -2.5

, , 3

      b
a      [,1] [,2]
  [1,] -6.0  5.0
  [2,]  5.5 -4.5

, , 4

      b
a      [,1] [,2]
  [1,] -8.0  7.0
  [2,]  7.5 -6.5

, , 5

      b
a       [,1] [,2]
  [1,] -10.0  9.0
  [2,]   9.5 -8.5

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> cleanEx()
> nameEx("toPos")
> ### * toPos
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: toPos.tensor
> ### Title: get the position of an index of tensor
> ### Aliases: toPos.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:30,c(a=2,b=3,c=5))
> toPos.tensor(A,c("b","c"))
[1] 2 3
> toPos.tensor(A,c(2,1))     # only returns the values
[1] 2 1
> toPos.tensor(A,c("^a"),both=TRUE)
[1] 1
> 
> 
> 
> cleanEx()
> nameEx("tomatrixtensor")
> ### * tomatrixtensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: to.matrix.tensor
> ### Title: The matrix corresponding to a tensor seen as a linear mapping of
> ###   tensors.
> ### Aliases: to.matrix.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- reorder.tensor(to.tensor(1:30,c(a=2,b=3,c=5)),c("c","a","b"))
> 
> to.matrix.tensor(A,"a",c("b","c"))              # matrix(1:30,nrow=2)
      
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
  [1,]    1    3    5    7    9   11   13   15   17    19    21    23    25
  [2,]    2    4    6    8   10   12   14   16   18    20    22    24    26
      
       [,14] [,15]
  [1,]    27    29
  [2,]    28    30
> 
> to.matrix.tensor(A,c("a","b"),c("c"))           # matrix(1:30,nrow=6)
      
       [,1] [,2] [,3] [,4] [,5]
  [1,]    1    7   13   19   25
  [2,]    2    8   14   20   26
  [3,]    3    9   15   21   27
  [4,]    4   10   16   22   28
  [5,]    5   11   17   23   29
  [6,]    6   12   18   24   30
> 
> to.matrix.tensor(A,c("a","b"),by=c("c")) # structure(1:30,dim=c(6,1,5)))
, , 1

      
       [,1]
  [1,]    1
  [2,]    2
  [3,]    3
  [4,]    4
  [5,]    5
  [6,]    6

, , 2

      
       [,1]
  [1,]    7
  [2,]    8
  [3,]    9
  [4,]   10
  [5,]   11
  [6,]   12

, , 3

      
       [,1]
  [1,]   13
  [2,]   14
  [3,]   15
  [4,]   16
  [5,]   17
  [6,]   18

, , 4

      
       [,1]
  [1,]   19
  [2,]   20
  [3,]   21
  [4,]   22
  [5,]   23
  [6,]   24

, , 5

      
       [,1]
  [1,]   25
  [2,]   26
  [3,]   27
  [4,]   28
  [5,]   29
  [6,]   30

> to.matrix.tensor(A,c("a"),by=c("c"))     # structure(1:30,dim=c(2,3,5)))
, , 1

      
       [,1] [,2] [,3]
  [1,]    1    3    5
  [2,]    2    4    6

, , 2

      
       [,1] [,2] [,3]
  [1,]    7    9   11
  [2,]    8   10   12

, , 3

      
       [,1] [,2] [,3]
  [1,]   13   15   17
  [2,]   14   16   18

, , 4

      
       [,1] [,2] [,3]
  [1,]   19   21   23
  [2,]   20   22   24

, , 5

      
       [,1] [,2] [,3]
  [1,]   25   27   29
  [2,]   26   28   30

> 
> 
> 
> cleanEx()
> nameEx("totensor")
> ### * totensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: to.tensor
> ### Title: Creates a tensor object
> ### Aliases: to.tensor to.tensor.default
> ### Keywords: algebra
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(U=2,V=2,W=5))
> B <- to.tensor(1:20,c(U=2,VV=2,WW=5))
> A %e% B
, , 1, 1

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]    5   17   29   41   53
  [2,]   11   23   35   47   59

, , 2, 1

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   11   39   67   95  123
  [2,]   25   53   81  109  137

, , 1, 2

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   17   61  105  149  193
  [2,]   39   83  127  171  215

, , 2, 2

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   23   83  143  203  263
  [2,]   53  113  173  233  293

, , 1, 3

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   29  105  181  257  333
  [2,]   67  143  219  295  371

, , 2, 3

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   35  127  219  311  403
  [2,]   81  173  265  357  449

, , 1, 4

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   41  149  257  365  473
  [2,]   95  203  311  419  527

, , 2, 4

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   47  171  295  419  543
  [2,]  109  233  357  481  605

, , 1, 5

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   53  193  333  473  613
  [2,]  123  263  403  543  683

, , 2, 5

      W
V      [,1] [,2] [,3] [,4] [,5]
  [1,]   59  215  371  527  683
  [2,]  137  293  449  605  761

attr(,"class")
[1] "tensor"
> 
> 
> 
> 
> cleanEx()
> nameEx("tracetensor")
> ### * tracetensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: trace.tensor
> ### Title: Collapse a tensor
> ### Aliases: trace.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:20,c(i=2,j=2,k=5))
> A
, , 1

      j
i      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

, , 2

      j
i      [,1] [,2]
  [1,]    5    7
  [2,]    6    8

, , 3

      j
i      [,1] [,2]
  [1,]    9   11
  [2,]   10   12

, , 4

      j
i      [,1] [,2]
  [1,]   13   15
  [2,]   14   16

, , 5

      j
i      [,1] [,2]
  [1,]   17   19
  [2,]   18   20

attr(,"class")
[1] "tensor"
> trace.tensor(A,"i","j")
[1]  5 13 21 29 37
attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("tripledelta")
> ### * tripledelta
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tripledelta.tensor
> ### Title: A tensor with entry 1 if and only if three indices are equal
> ### Aliases: tripledelta.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> tripledelta.tensor(3)
, , 1

      '
       [,1] [,2] [,3]
  [1,]    1    0    0
  [2,]    0    0    0
  [3,]    0    0    0

, , 2

      '
       [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    1    0
  [3,]    0    0    0

, , 3

      '
       [,1] [,2] [,3]
  [1,]    0    0    0
  [2,]    0    0    0
  [3,]    0    0    1

attr(,"class")
[1] "tensor"
> 
> 
> 
> cleanEx()
> nameEx("undroptensor")
> ### * undroptensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: undrop.tensor
> ### Title: Adds a spurious dimension to a tensor
> ### Aliases: undrop.tensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:4,c(a=2,b=2))
> undrop.tensor(A,"i")
, , 1

      b
a      [,1] [,2]
  [1,]    1    3
  [2,]    2    4

attr(,"class")
[1] "tensor" "matrix"
> 
> 
> 
> cleanEx()
> nameEx("untensor")
> ### * untensor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: untensor
> ### Title: Removes indices/dimensions from a tensor
> ### Aliases: untensor
> ### Keywords: arith
> 
> ### ** Examples
> 
> A <- to.tensor(1:64,c(a=2,b=2,c=2,d=2,e=2,f=2))
> untensor(A,list(c(1,5),c(2,4)),name=c("i","j"))
, , 1, 1

      i
j      [,1] [,2] [,3] [,4]
  [1,]    1    2   17   18
  [2,]    3    4   19   20
  [3,]    9   10   25   26
  [4,]   11   12   27   28

, , 2, 1

      i
j      [,1] [,2] [,3] [,4]
  [1,]    5    6   21   22
  [2,]    7    8   23   24
  [3,]   13   14   29   30
  [4,]   15   16   31   32

, , 1, 2

      i
j      [,1] [,2] [,3] [,4]
  [1,]   33   34   49   50
  [2,]   35   36   51   52
  [3,]   41   42   57   58
  [4,]   43   44   59   60

, , 2, 2

      i
j      [,1] [,2] [,3] [,4]
  [1,]   37   38   53   54
  [2,]   39   40   55   56
  [3,]   45   46   61   62
  [4,]   47   48   63   64

attr(,"class")
[1] "tensor"
> untensor(A,by=c("c","f"))
, , 1

       c
I1      [,1] [,2]
   [1,]    1    5
   [2,]    2    6
   [3,]    3    7
   [4,]    4    8
   [5,]    9   13
   [6,]   10   14
   [7,]   11   15
   [8,]   12   16
   [9,]   17   21
  [10,]   18   22
  [11,]   19   23
  [12,]   20   24
  [13,]   25   29
  [14,]   26   30
  [15,]   27   31
  [16,]   28   32

, , 2

       c
I1      [,1] [,2]
   [1,]   33   37
   [2,]   34   38
   [3,]   35   39
   [4,]   36   40
   [5,]   41   45
   [6,]   42   46
   [7,]   43   47
   [8,]   44   48
   [9,]   49   53
  [10,]   50   54
  [11,]   51   55
  [12,]   52   56
  [13,]   57   61
  [14,]   58   62
  [15,]   59   63
  [16,]   60   64

attr(,"class")
[1] "tensor"
> untensor(A,c("a","d"))
, , 1, 1, 1

      b
I1     [,1] [,2]
  [1,]    1    3
  [2,]    2    4
  [3,]    9   11
  [4,]   10   12

, , 2, 1, 1

      b
I1     [,1] [,2]
  [1,]    5    7
  [2,]    6    8
  [3,]   13   15
  [4,]   14   16

, , 1, 2, 1

      b
I1     [,1] [,2]
  [1,]   17   19
  [2,]   18   20
  [3,]   25   27
  [4,]   26   28

, , 2, 2, 1

      b
I1     [,1] [,2]
  [1,]   21   23
  [2,]   22   24
  [3,]   29   31
  [4,]   30   32

, , 1, 1, 2

      b
I1     [,1] [,2]
  [1,]   33   35
  [2,]   34   36
  [3,]   41   43
  [4,]   42   44

, , 2, 1, 2

      b
I1     [,1] [,2]
  [1,]   37   39
  [2,]   38   40
  [3,]   45   47
  [4,]   46   48

, , 1, 2, 2

      b
I1     [,1] [,2]
  [1,]   49   51
  [2,]   50   52
  [3,]   57   59
  [4,]   58   60

, , 2, 2, 2

      b
I1     [,1] [,2]
  [1,]   53   55
  [2,]   54   56
  [3,]   61   63
  [4,]   62   64

attr(,"class")
[1] "tensor"
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.224 0.322 0.224 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
