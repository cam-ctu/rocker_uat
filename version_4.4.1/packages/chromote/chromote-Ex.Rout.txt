
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "chromote"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('chromote')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("default_chrome_args")
> ### * default_chrome_args
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: default_chrome_args
> ### Title: Default Chrome arguments
> ### Aliases: default_chrome_args get_chrome_args set_chrome_args
> 
> ### ** Examples
> 
> old_chrome_args <- get_chrome_args()
> 
> # Disable the gpu and use of `/dev/shm`
> set_chrome_args(c("--disable-gpu", "--disable-dev-shm-usage"))
> 
> #... Make new `Chrome` or `ChromoteSession` instance
> 
> # Restore old defaults
> set_chrome_args(old_chrome_args)
> 
> 
> 
> cleanEx()
> nameEx("find_chrome")
> ### * find_chrome
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: find_chrome
> ### Title: Find path to Chrome or Chromium browser
> ### Aliases: find_chrome
> 
> ### ** Examples
> 
> find_chrome()
`google-chrome`, `chromium-browser` and `chrome` were not found. Try setting the `CHROMOTE_CHROME` environment variable to the executable of a Chromium-based browser, such as Google Chrome, Chromium or Brave or adding one of these executables to your PATH.
NULL
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.243 0.013 0.268 0.01 0.002 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
