
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "docopt"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('docopt')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("docopt")
> ### * docopt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: docopt
> ### Title: Parse 'args' based on command-line interface described in 'doc'.
> ### Aliases: docopt
> 
> ### ** Examples
> 
> "Usage: my_program.R [-hso FILE] [--quiet | --verbose] [INPUT ...]
+ 
+ -h --help    show this
+ -s --sorted  sorted output
+ -o FILE      specify output file [default: ./test.txt]
+ --quiet      print less text
+ --verbose    print more text" -> doc
> docopt(doc, "-s --quiet")
List of 11
 $ --help   : logi FALSE
 $ --sorted : logi TRUE
 $ -o       : chr "./test.txt"
 $ --quiet  : logi TRUE
 $ --verbose: logi FALSE
 $ INPUT    : list()
 $ help     : logi FALSE
 $ sorted   : logi TRUE
 $ o        : chr "./test.txt"
 $ quiet    : logi TRUE
 $ verbose  : logi FALSE
NULL
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.116 0.013 0.129 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
