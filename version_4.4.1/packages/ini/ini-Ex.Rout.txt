
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ini"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('ini')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("read.ini")
> ### * read.ini
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.ini
> ### Title: Read and parse .ini file to list
> ### Aliases: read.ini
> 
> ### ** Examples
> 
> ## Create a new temp ini for reading
> iniFile <- tempfile(fileext = '.ini')
> 
> sink(iniFile)
> cat("; This line is a comment\n")
> cat("# This one too!\n")
> cat("[    Hello World]\n")
> cat("Foo = Bar          \n")
> cat("Foo1 = Bar=345 \n")
> sink()
> 
> ## Read ini
> checkini <- read.ini(iniFile)
> 
> ## Check structure
> checkini
$`Hello World`
$`Hello World`$Foo
[1] "Bar"

$`Hello World`$Foo1
[1] "Bar=345"


> checkini$`Hello World`$Foo
[1] "Bar"
> 
> 
> 
> 
> cleanEx()
> nameEx("write.ini")
> ### * write.ini
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write.ini
> ### Title: Write list to .ini file
> ### Aliases: write.ini
> 
> ### ** Examples
> 
> ## Create a new temp ini for writing
> iniFile <- tempfile(fileext = '.ini')
> 
> ## Create a new list holding our INI
> newini <- list()
> newini[[ "Hello World" ]] <- list(Foo = 'Bar')
> 
> ## Write structure to file
> write.ini(newini, iniFile)
> 
> ## Check file content
> ## Not run: 
> ##D file.show(iniFile)
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.059 0.009 0.068 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
