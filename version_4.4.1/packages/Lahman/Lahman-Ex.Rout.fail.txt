
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Lahman"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Lahman')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("AllstarFull")
> ### * AllstarFull
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AllstarFull
> ### Title: AllstarFull table
> ### Aliases: AllstarFull
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(AllstarFull)
> 
> # find number of appearances by players in the All Star games
> player_appearances <- with(AllstarFull, rev(sort(table(playerID))))
> 
> # How many All-Star players, in total?
> length(player_appearances)
[1] 1978
> 
> # density plot of the whole distribution
> plot(density(player_appearances), main="Player appearances in All Star Games")
> rug(jitter(player_appearances))
> 
> # who has played in more than 10 ASGs?
> player_appearances[player_appearances > 10]
playerID
 mayswi01 musiast01 aaronha01 willite01 ripkeca01 mantlmi01 yastrca01 robinbr01 
       26        24        24        19        19        19        18        18 
kalinal01 carewro01 berrayo01  rosepe01 clemero01 spahnwa01 smithoz01 gwynnto01 
       18        18        18        17        17        16        15        15 
  foxne01 aparilu01 rodriiv01 rodrial01 robinfr02 jeterde01 jacksre01 bondsba01 
       15        15        14        14        14        14        14        14 
benchjo01 bankser01 riverma01 killeha01 griffke02 dimagjo01 crandde01 cepedor01 
       14        14        13        13        13        13        13        13 
cabremi01 brettge01 boyerke01 winfida01 seaveto01 schmimi01 ramirma02 pujolal01 
       13        13        13        12        12        12        12        12 
piazzmi01   ottme01 mcgwima01 mazerbi01 matheed01 larkiba01 boggswa01 alomaro01 
       12        12        12        12        12        12        12        12 
troutmi01 kershcl01 howarel01 hermabi01 freehbi01  fiskca01 dickebi01 clemero02 
       11        11        11        11        11        11        11        11 
cartega01 
       11 
> hist(player_appearances[player_appearances > 10])
> 
> 
> # Hank Aaron's All-Star record:
> subset(AllstarFull, playerID == "aaronha01")
      playerID yearID gameNum       gameID teamID lgID GP startingPos
26   aaronha01   1957       0 NLS195707090    MLN   NL  1           9
76   aaronha01   1958       0 ALS195807080    MLN   NL  1           9
167  aaronha01   1959       1 NLS195907070    MLN   NL  1           9
168  aaronha01   1959       2 NLS195908030    MLN   NL  1           9
285  aaronha01   1960       1 ALS196007110    MLN   NL  1           9
286  aaronha01   1960       2 ALS196007130    MLN   NL  1           9
401  aaronha01   1961       1 NLS196107110    MLN   NL  1          NA
402  aaronha01   1961       2 ALS196107310    MLN   NL  1          NA
528  aaronha01   1962       0 NLS196207300    MLN   NL  1          NA
591  aaronha01   1963       0 ALS196307090    MLN   NL  1           9
645  aaronha01   1964       0 NLS196407070    MLN   NL  1          NA
697  aaronha01   1965       0 ALS196507130    MLN   NL  1           9
746  aaronha01   1966       0 NLS196607120    ATL   NL  1           7
801  aaronha01   1967       0 ALS196707110    ATL   NL  1           8
1193 aaronha01   1968       0 NLS196807090    ATL   NL  1           9
1251 aaronha01   1969       0 ALS196907230    ATL   NL  1           9
1308 aaronha01   1970       0 NLS197007140    ATL   NL  1           9
1369 aaronha01   1971       0 ALS197107130    ATL   NL  1           9
1431 aaronha01   1972       0 NLS197207250    ATL   NL  1           9
1485 aaronha01   1973       0 ALS197307240    ATL   NL  1           3
1552 aaronha01   1974       0 NLS197407230    ATL   NL  1           9
1581 aaronha01   1975       0 ALS197507150    MIL   AL  1          NA
2130 aaronha01   1955       0 NLS195507120    MLN   NL  1          NA
3594 aaronha01   1956       0 ALS195607100    MLN   NL  1          NA
> 
> # Years that Stan Musial played in the ASG:
> with(AllstarFull, yearID[playerID == "musiast01"])
 [1] 1957 1958 1959 1959 1960 1960 1961 1961 1962 1962 1963 1951 1952 1953 1954
[16] 1955 1943 1944 1946 1947 1948 1949 1950 1956
> 
> # Starting positions he played (NA means did not start)
> with(AllstarFull, startingPos[playerID == "musiast01"])
 [1]  3  3  3 NA NA NA NA NA NA NA NA  7  8  7  9 NA  7  8  7 NA  7  8  3  9
> 
> # All-Star rosters from the 1966 ASG
> subset(AllstarFull, gameID == "NLS196607120")
     playerID yearID gameNum       gameID teamID lgID GP startingPos
714 mclaide01   1966       0 NLS196607120    DET   AL  1           1
715 freehbi01   1966       0 NLS196607120    DET   AL  1           2
716 scottge02   1966       0 NLS196607120    BOS   AL  1           3
717 knoopbo01   1966       0 NLS196607120    CAL   AL  1           4
718 robinbr01   1966       0 NLS196607120    BAL   AL  1           5
719 mcauldi01   1966       0 NLS196607120    DET   AL  1           6
720 robinfr02   1966       0 NLS196607120    BAL   AL  1           7
721 kalinal01   1966       0 NLS196607120    DET   AL  1           8
722 olivato01   1966       0 NLS196607120    MIN   AL  1           9
723  ageeto01   1966       0 NLS196607120    CHA   AL  1          NA
724 barbest01   1966       0 NLS196607120    BAL   AL  0          NA
725 batteea01   1966       0 NLS196607120    MIN   AL  1          NA
726  bellga01   1966       0 NLS196607120    CLE   AL  0          NA
727  cashno01   1966       0 NLS196607120    DET   AL  1          NA
728 colavro01   1966       0 NLS196607120    CLE   AL  1          NA
729 etchean01   1966       0 NLS196607120    BAL   AL  0          NA
730 fregoji01   1966       0 NLS196607120    CAL   AL  1          NA
731 hunteca01   1966       0 NLS196607120    KC1   AL  0          NA
732  kaatji01   1966       0 NLS196607120    MIN   AL  1          NA
733 killeha01   1966       0 NLS196607120    MIN   AL  1          NA
734 mcdowsa01   1966       0 NLS196607120    CLE   AL  0          NA
735 richabo01   1966       0 NLS196607120    NYA   AL  1          NA
736 richepe01   1966       0 NLS196607120    WS2   AL  1          NA
737 siebeso01   1966       0 NLS196607120    CLE   AL  1          NA
738 stottme01   1966       0 NLS196607120    NYA   AL  1          NA
739 yastrca01   1966       0 NLS196607120    BOS   AL  0          NA
740 koufasa01   1966       0 NLS196607120    LAN   NL  1           1
741 torrejo01   1966       0 NLS196607120    ATL   NL  1           2
742 mccovwi01   1966       0 NLS196607120    SFN   NL  1           3
743 lefebji01   1966       0 NLS196607120    LAN   NL  1           4
744 santoro01   1966       0 NLS196607120    CHN   NL  1           5
745 cardele01   1966       0 NLS196607120    CIN   NL  1           6
746 aaronha01   1966       0 NLS196607120    ATL   NL  1           7
747  mayswi01   1966       0 NLS196607120    SFN   NL  1           8
748 clemero01   1966       0 NLS196607120    PIT   NL  1           9
749 allendi01   1966       0 NLS196607120    PHI   NL  1          NA
750  aloufe01   1966       0 NLS196607120    ATL   NL  0          NA
751 bunniji01   1966       0 NLS196607120    PHI   NL  1          NA
752 floodcu01   1966       0 NLS196607120    SLN   NL  1          NA
753 gibsobo01   1966       0 NLS196607120    SLN   NL  0          NA
754 halleto01   1966       0 NLS196607120    SFN   NL  0          NA
755  hartji01   1966       0 NLS196607120    SFN   NL  1          NA
756  huntro01   1966       0 NLS196607120    NYN   NL  1          NA
757 maricju01   1966       0 NLS196607120    SFN   NL  1          NA
758 mccarti01   1966       0 NLS196607120    SLN   NL  1          NA
759 mccoobi01   1966       0 NLS196607120    CIN   NL  0          NA
760 morgajo02   1966       0 NLS196607120    HOU   NL  0          NA
761 perryga01   1966       0 NLS196607120    SFN   NL  1          NA
762 raymocl01   1966       0 NLS196607120    HOU   NL  0          NA
763 reganph01   1966       0 NLS196607120    LAN   NL  0          NA
764 stargwi01   1966       0 NLS196607120    PIT   NL  1          NA
765 vealebo01   1966       0 NLS196607120    PIT   NL  0          NA
766 willsma01   1966       0 NLS196607120    LAN   NL  1          NA
> 
> # All-Stars from the Washington Nationals
> subset(AllstarFull, teamID == "WAS")
      playerID yearID gameNum       gameID teamID lgID GP startingPos
4311 cordech01   2005       0 ALS200507120    WAS   NL  1          NA
4315 hernali01   2005       0 ALS200507120    WAS   NL  1          NA
4373 soriaal01   2006       0 NLS200607110    WAS   NL  1           7
4467 youngdm01   2007       0 NLS200707100    WAS   NL  1          NA
4514 guzmacr01   2008       0 ALS200807150    WAS   NL  1          NA
4605 zimmery01   2009       0 NLS200907140    WAS   NL  1          NA
4662 cappsma01   2010       0 ALS201007130    WAS   NL  1          NA
4744 clippty01   2011       0 NLS201107120    WAS   NL  1          NA
4822 desmoia01   2012       0 ALS201207100    WAS   NL  0          NA
4825 gonzagi01   2012       0 ALS201207100    WAS   NL  1          NA
4828 harpebr03   2012       0 ALS201207100    WAS   NL  1          NA
4842 strasst01   2012       0 ALS201207100    WAS   NL  1          NA
4892 harpebr03   2013       0 NLS201307160    WAS   NL  1           8
4921 zimmejo02   2013       0 NLS201307160    WAS   NL  0          NA
4978 clippty01   2014       0 ALS201407150    WAS   NL  1          NA
5002 zimmejo02   2014       0 ALS201407150    WAS   NL  0          NA
5049 harpebr03   2015       0 NLS201507140    WAS   NL  1           9
5074 scherma01   2015       0 NLS201507140    WAS   NL  0          NA
5125 harpebr03   2016       0 ALS201607120    WAS   NL  1           9
5148 murphda08   2016       0 ALS201607120    WAS   NL  1          NA
5151 ramoswi01   2016       0 ALS201607120    WAS   NL  1          NA
5153 scherma01   2016       0 ALS201607120    WAS   NL  1          NA
5155 strasst01   2016       0 ALS201607120    WAS   NL  0          NA
5196 scherma01   2017       0 NLS201707110    WAS   NL  1           1
5198 zimmery01   2017       0 NLS201707110    WAS   NL  1           3
5199 murphda08   2017       0 NLS201707110    WAS   NL  1           4
5204 harpebr03   2017       0 NLS201707110    WAS   NL  1           9
5225 strasst01   2017       0 NLS201707110    WAS   NL  0          NA
5266 scherma01   2018       0 NLS201807170    WAS   NL  1           1
5273 harpebr03   2018       0 NLS201807170    WAS   NL  1           8
5282 doolise01   2018       0 NLS201807170    WAS   NL  0          NA
5365 rendoan01   2019       0 ALS201907090    WAS   NL  0          NA
5367 scherma01   2019       0 ALS201907090    WAS   NL  0          NA
5414 scherma01   2021       0 NLS202107130    WAS   NL  1           1
5447 schwaky01   2021       0 NLS202107130    WAS   NL  0          NA
5448  sotoju01   2021       0 NLS202107130    WAS   NL  1          NA
5451 turnetr01   2021       0 NLS202107130    WAS   NL  1          NA
5514  sotoju01   2022       0 NLS202207190    WAS   NL  1          NA
5545  grayjo03   2023       0 ALS202307110    WAS   NL  1          NA
5658  sotoju01   2022       0 NLS202207190    WAS   NL  1          NA
> 
> # Teams with the fewest All-Stars
> rare <- names(which(table(AllstarFull$teamID) < 10))
> 
> # Records associated with the 'rare' teams:
> # (There are a few teamID typos: can you spot them?)
> subset(AllstarFull, teamID %in% rare)
      playerID yearID gameNum       gameID teamID lgID GP startingPos
1225 heganmi01   1969       0 ALS196907230    SE1   AL  0          NA
1234 minchdo01   1969       0 ALS196907230    SE1   AL  1          NA
> 
> 
> 
> cleanEx()
> nameEx("Appearances")
> ### * Appearances
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Appearances
> ### Title: Appearances table
> ### Aliases: Appearances
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Appearances)
> library("dplyr")

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library("tidyr")
> 
> # Henry Aaron's last two years as a DH in Milwaukee
> Appearances %>%
+    filter(playerID == "aaronha01" & teamID == "ML4") %>%
+    select(yearID:G_batting, G_of:G_ph)  # subset variables
  yearID teamID lgID  playerID G_all  GS G_batting G_of G_dh G_ph
1   1975    ML4   AL aaronha01   137 129       137    3  127    8
2   1976    ML4   AL aaronha01    85  70        85    1   74   15
>    
> # Herb Washington, strictly a pinch runner for Oakland in 1974-5
> Appearances %>%
+    filter(playerID == "washihe01") 
  yearID teamID lgID  playerID G_all GS G_batting G_defense G_p G_c G_1b G_2b
1   1974    OAK   AL washihe01    92  0        92         0   0   0    0    0
2   1975    OAK   AL washihe01    13  0        13         0   0   0    0    0
  G_3b G_ss G_lf G_cf G_rf G_of G_dh G_ph G_pr
1    0    0    0    0    0    0   28    0   92
2    0    0    0    0    0    0    3    0   13
> 
> # A true utility player - Jerry Hairston, Jr.
> Appearances %>%
+   filter(playerID == "hairsje02")
   yearID teamID lgID  playerID G_all  GS G_batting G_defense G_p G_c G_1b G_2b
1    1998    BAL   AL hairsje02     6   2         6         4   0   0    0    4
2    1999    BAL   AL hairsje02    50  49        50        50   0   0    0   50
3    2000    BAL   AL hairsje02    49  49        49        49   0   0    0   49
4    2001    BAL   AL hairsje02   159 154       159       156   0   0    0  156
5    2002    BAL   AL hairsje02   122 118       122       119   0   0    0  119
6    2003    BAL   AL hairsje02    58  56        58        48   0   0    0   48
7    2004    BAL   AL hairsje02    86  80        86        62   0   0    0   12
8    2005    CHN   NL hairsje02   114  91       114       104   0   0    0   44
9    2006    CHN   NL hairsje02    38  21        38        32   0   0    1   24
10   2006    TEX   AL hairsje02    63  24        63        56   0   0    0    1
11   2007    TEX   AL hairsje02    73  41        73        71   0   0    0   16
12   2008    CIN   NL hairsje02    80  62        80        71   0   0    0    7
13   2009    CIN   NL hairsje02    86  77        86        81   0   0    0    9
14   2009    NYA   AL hairsje02    45  21        45        41   0   0    0    3
15   2010    SDN   NL hairsje02   119 105       119       114   0   0    0   47
16   2011    MIL   NL hairsje02    45  32        45        40   0   0    0   27
17   2011    WAS   NL hairsje02    75  60        75        72   0   0    0    3
18   2012    LAN   NL hairsje02    78  63        78        74   0   0    1   30
19   2013    LAN   NL hairsje02    96  43        96        63   0   0   13    1
   G_3b G_ss G_lf G_cf G_rf G_of G_dh G_ph G_pr
1     0    0    0    0    0    0    0    0    3
2     0    0    0    0    0    0    0    0    1
3     0    0    0    0    0    0    0    0    0
4     0    0    0    0    0    0    0    0    3
5     0    0    0    0    0    0    0    2    2
6     0    0    0    0    0    0    9    1    1
7     1    0   10   15   27   52   21    2    3
8     0    1   20   48    1   62    0   15    1
9     0    0    3    0    5    8    0    7    2
10    1    3   35   12    7   52    3    4   13
11   10    2   21   22    6   49    0    6    5
12    1   34   24   17   12   42    0   10    0
13   33   31    9    3    5   17    0    7    0
14   16   11   10    2    9   19    3    4    8
15    3   62    4    0    8   12    0    7    1
16    5    1    1   11    0   12    0    5    2
17   44    1   22    9    0   30    0    8    2
18   32    2   18    0    0   18    1   10    0
19   28    0   23    0    4   27    0   39    1
> 
> # Appearances for the 1984 Cleveland Indians
> Appearances %>%
+   filter(teamID == "CLE" & yearID == 1984)
   yearID teamID lgID  playerID G_all  GS G_batting G_defense G_p G_c G_1b G_2b
1    1984    CLE   AL apontlu01    25   0         0        25  25   0    0    0
2    1984    CLE   AL bandoch01    75  60        75        64   0  63    1    0
3    1984    CLE   AL barklje01     3   0         0         3   3   0    0    0
4    1984    CLE   AL behenri01     3   3         0         3   3   0    0    0
5    1984    CLE   AL bernato01   140 122       140       136   0   0    0  136
6    1984    CLE   AL blylebe01    33  32         0        33  33   0    0    0
7    1984    CLE   AL butlebr01   159 149       159       156   0   0    0    0
8    1984    CLE   AL camacer01    69   0         0        69  69   0    0    0
9    1984    CLE   AL cartejo01    66  55        66        60   0   0    7    0
10   1984    CLE   AL castica01    87  56        87        70   0   0    0    0
11   1984    CLE   AL comerst01    22  20         0        22  22   0    0    0
12   1984    CLE   AL easteja01    26   1         0        26  26   0    0    0
13   1984    CLE   AL  farrst01    31  16         0        31  31   0    0    0
14   1984    CLE   AL fischmi01    85  45        85        83   0   0    0   55
15   1984    CLE   AL francju01   160 158       160       159   0   0    0    0
16   1984    CLE   AL frazige01    22   0         0        22  22   0    0    0
17   1984    CLE   AL  hallme01    83  65        83        69   0   0    0    0
18   1984    CLE   AL hargrmi01   133  85       133       124   0   0  124    0
19   1984    CLE   AL hassero01    48  39        48        45   0  44    1    0
20   1984    CLE   AL heatone01    38  34         0        38  38   0    0    0
21   1984    CLE   AL jacobbr01   126 125       126       126   0   0    0    0
22   1984    CLE   AL jeffcmi01    63   1         0        63  63   0    0    0
23   1984    CLE   AL moronje01     7   5         7         6   0   0    0    0
24   1984    CLE   AL nixonot01    49  29        49        46   0   0    0    0
25   1984    CLE   AL noboaju01    23   1        23        19   0   0    0   19
26   1984    CLE   AL perkibr01    58   7        58         2   0   0    2    0
27   1984    CLE   AL quirkja01     1   0         1         1   0   1    0    0
28   1984    CLE   AL rhombke01    13   2        13         9   0   0    1    1
29   1984    CLE   AL romanjo02     3   2         0         3   3   0    0    0
30   1984    CLE   AL romerra01     1   0         0         1   1   0    0    0
31   1984    CLE   AL schuldo01    19  14         0        19  19   0    0    0
32   1984    CLE   AL smithro01    22  14         0        22  22   0    0    0
33   1984    CLE   AL spillda01    14   8         0        14  14   0    0    0
34   1984    CLE   AL sutclri01    15  15         0        15  15   0    0    0
35   1984    CLE   AL tablepa01   144 131       144       139   0   0   67    1
36   1984    CLE   AL thornan01   155 155       155        11   0   0   11    0
37   1984    CLE   AL ujdurje01     4   3         0         4   4   0    0    0
38   1984    CLE   AL vukovge01   134 110       134       130   0   0    0    0
39   1984    CLE   AL waddeto01    58   0         0        58  58   0    0    0
40   1984    CLE   AL willaje01    87  68        87        76   0  76    0    0
   G_3b G_ss G_lf G_cf G_rf G_of G_dh G_ph G_pr
1     0    0    0    0    0    0    0    0    0
2     1    0    0    0    0    0    1   13    0
3     0    0    0    0    0    0    0    0    0
4     0    0    0    0    0    0    0    0    0
5     0    0    0    0    0    0    1    3    4
6     0    0    0    0    0    0    0    0    0
7     0    0    0  156    1  156    0    3    2
8     0    0    0    0    0    0    0    0    0
9     0    0   48   14    0   59    0    8    1
10    0    0    0    0   70   70    2   26    1
11    0    0    0    0    0    0    0    0    0
12    0    0    0    0    0    0    0    0    0
13    0    0    0    0    0    0    0    0    0
14   17   15    0    0    0    0    0    2    7
15    0  159    0    0    0    0    1    1    1
16    0    0    0    0    0    0    0    0    0
17    0    0   64    1    6   69    9   13    0
18    0    0    0    0    0    0    0   20    0
19    0    0    0    0    0    0    1    3    0
20    0    0    0    0    0    0    0    0    0
21  126    1    0    0    0    0    0    0    0
22    0    0    0    0    0    0    0    0    0
23    6    0    0    0    0    0    1    1    1
24    0    0   43    4    0   46    0    0   10
25    0    0    0    0    0    0    2    0    6
26    0    0    0    0    0    0   10   50    1
27    0    0    0    0    0    0    0    0    0
28    0    0    7    0    0    7    1    3    4
29    0    0    0    0    0    0    0    0    0
30    0    0    0    0    0    0    0    0    0
31    0    0    0    0    0    0    0    0    0
32    0    0    0    0    0    0    0    0    0
33    0    0    0    0    0    0    0    0    0
34    0    0    0    0    0    0    0    0    0
35   36    0   43    0    0   43    1    8    4
36    0    0    0    0    0    0  144    0    0
37    0    0    0    0    0    0    0    0    0
38    0    0   16    0  124  130    0   15    0
39    0    0    0    0    0    0    0    0    0
40    0    0    0    0    0    0    1   12    0
> 
> # Pete Rose's primary position each year of his career
> Appearances %>% 
+    filter(playerID == "rosepe01") %>%
+    group_by(yearID, teamID) %>%
+    gather(pos, G, G_1b:G_rf) %>%
+    filter(G == max(G)) %>%
+    select(yearID:G_all, pos, G) %>%
+    mutate(pos = substring(as.character(pos), 3, 4)) %>%
+    arrange(yearID, teamID)
# A tibble: 25 × 7
# Groups:   yearID, teamID [25]
   yearID teamID lgID  playerID G_all pos       G
    <int> <fct>  <fct> <chr>    <int> <chr> <int>
 1   1963 CIN    NL    rosepe01   157 2b      157
 2   1964 CIN    NL    rosepe01   136 2b      128
 3   1965 CIN    NL    rosepe01   162 2b      161
 4   1966 CIN    NL    rosepe01   156 2b      140
 5   1967 CIN    NL    rosepe01   148 lf      124
 6   1968 CIN    NL    rosepe01   149 rf      142
 7   1969 CIN    NL    rosepe01   156 rf      101
 8   1970 CIN    NL    rosepe01   159 rf      155
 9   1971 CIN    NL    rosepe01   160 rf      156
10   1972 CIN    NL    rosepe01   154 lf      154
# ℹ 15 more rows
> 
> 
> # Most pitcher appearances each year since 1950
> Appearances %>%
+    filter(yearID >= 1950) %>%
+    group_by(yearID) %>%
+    summarise(maxPitcher = playerID[which.max(G_p)],
+              maxAppear = max(G_p))
# A tibble: 74 × 3
   yearID maxPitcher maxAppear
    <int> <chr>          <int>
 1   1950 konstji01         74
 2   1951 kindeel01         63
 3   1952 wilheho01         71
 4   1953 kindeel01         69
 5   1954 hugheji02         60
 6   1955 labincl01         60
 7   1956 facero01          68
 8   1957 lowntu01          67
 9   1958 elstodo01         69
10   1959 stalege01         67
# ℹ 64 more rows
> 
> # Individuals who have played all 162 games since 1961
> all162 <- Appearances %>%
+               filter(yearID > 1960 & G_all == 162) %>% 
+               arrange(yearID, playerID) %>%
+               select(yearID:G_all)
> # Number of all-gamers by year (returns a vector)
> table(all162$yearID)

1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1973 1974 1975 1976 1977 
   2    6    3    9    5    5    1    3    5    2    2    6    4    3    2    4 
1978 1979 1980 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1996 
   4    8    7    8    4    5    4    5    2    2    5    2    3    4    2    3 
1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 
   6    4    5    5    7    6    5    3   10    6    7    4    1    2    1    3 
2013 2014 2015 2016 2017 2018 2019 2021 2022 2023 
   4    4    1    3    5    6    5    2    2    4 
> 
> # Players with most pinch hitting appearances in a year
> Appearances %>%
+   arrange(desc(G_ph)) %>%
+   select(playerID, yearID, teamID, lgID, G_all, G_ph) %>%
+   head(., 10)
    playerID yearID teamID lgID G_all G_ph
1  suzukic01   2017    MIA   NL   136  109
2  harrile01   2001    NYN   NL   110   95
3  staubru01   1983    NYN   NL   104   94
4  sweenma01   2008    LAN   NL    98   94
5  vandejo02   1995    COL   NL   105   92
6  francma01   2003    ATL   NL   112   92
7  nortogr01   2009    ATL   NL    95   91
8  lasteto01   2018    CHN   NL   123   91
9  perryge01   1993    SLN   NL    96   88
10 francma01   1999    NYN   NL   122   88
> 
> # Players with most pinch hitting appearances, career
> Appearances %>%
+   group_by(playerID) %>%
+   select(playerID, G_all, G_ph) %>%
+   summarise(G = sum(G_all), PH = sum(G_ph)) %>%
+   arrange(desc(PH)) %>%
+   head(., 10)
# A tibble: 10 × 3
   playerID      G    PH
   <chr>     <int> <int>
 1 harrile01  1903   927
 2 sweenma01  1218   819
 3 hanseda01  1230   768
 4 grossgr01  1809   748
 5 vandejo02  1372   659
 6 burgesm01  1692   606
 7 motama01   1536   597
 8 palmeor01  1206   538
 9 dwyerji01  1328   524
10 brownga01  1051   522
> 
> # Players with most career appearances at each position
> Appearances %>%
+   select(playerID, G_c:G_rf) %>%
+   rename(C = G_c, `1B` = G_1b, `2B` = G_2b, SS = G_ss,
+          `3B` = G_3b, LF = G_lf, CF = G_cf, RF = G_rf) %>%
+   gather(pos, G, C:RF) %>%
+   group_by(pos, playerID) %>%
+   summarise(G = sum(G)) %>%
+   arrange(desc(G)) %>%
+   do(head(., 1))
`summarise()` has grouped output by 'pos'. You can override using the `.groups`
argument.
# A tibble: 8 × 3
# Groups:   pos [8]
  pos   playerID      G
  <chr> <chr>     <int>
1 1B    murraed02  2413
2 2B    collied01  2648
3 3B    robinbr01  2870
4 C     rodriiv01  2427
5 CF    mayswi01   2829
6 LF    bondsba01  2715
7 RF    clemero01  2305
8 SS    vizquom01  2709
> 
> 
> 
> cleanEx()

detaching ‘package:tidyr’, ‘package:dplyr’

> nameEx("AwardsManagers")
> ### * AwardsManagers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AwardsManagers
> ### Title: AwardsManagers table
> ### Aliases: AwardsManagers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # Post-season managerial awards
> 
> # Number of recipients of each award by year
> with(AwardsManagers, table(yearID, awardID))
      awardID
yearID BBWAA Manager of the Year TSN Manager of the Year
  1936                         0                       1
  1937                         0                       1
  1938                         0                       1
  1939                         0                       1
  1940                         0                       1
  1941                         0                       1
  1942                         0                       1
  1943                         0                       1
  1944                         0                       1
  1945                         0                       1
  1946                         0                       1
  1947                         0                       1
  1948                         0                       1
  1949                         0                       1
  1950                         0                       1
  1951                         0                       1
  1952                         0                       1
  1953                         0                       1
  1954                         0                       1
  1955                         0                       1
  1956                         0                       1
  1957                         0                       1
  1958                         0                       1
  1959                         0                       1
  1960                         0                       1
  1961                         0                       1
  1962                         0                       1
  1963                         0                       1
  1964                         0                       1
  1965                         0                       1
  1966                         0                       1
  1967                         0                       1
  1968                         0                       1
  1969                         0                       1
  1970                         0                       1
  1971                         0                       1
  1972                         0                       1
  1973                         0                       1
  1974                         0                       1
  1975                         0                       1
  1976                         0                       1
  1977                         0                       1
  1978                         0                       1
  1979                         0                       1
  1980                         0                       1
  1981                         0                       1
  1982                         0                       1
  1983                         2                       1
  1984                         2                       1
  1985                         2                       1
  1986                         2                       2
  1987                         2                       2
  1988                         2                       2
  1989                         2                       2
  1990                         2                       2
  1991                         2                       2
  1992                         2                       2
  1993                         2                       2
  1994                         2                       2
  1995                         2                       2
  1996                         3                       2
  1997                         2                       2
  1998                         2                       2
  1999                         2                       2
  2000                         2                       2
  2001                         2                       2
  2002                         2                       2
  2003                         2                       2
  2004                         2                       2
  2005                         2                       2
  2006                         2                       2
  2007                         2                       2
  2008                         2                       2
  2009                         2                       2
  2010                         2                       2
  2011                         2                       2
  2012                         2                       2
  2013                         2                       2
  2014                         2                       2
  2015                         2                       2
  2016                         2                       0
  2017                         2                       0
  2018                         2                       0
  2019                         2                       0
  2020                         2                       0
  2021                         2                       0
  2022                         2                       0
  2023                         2                       0
> 
> # 1996 award winners
> subset(AwardsManagers, yearID == 1996)
     playerID                   awardID yearID lgID  tie notes
97  oatesjo01 BBWAA Manager of the Year   1996   AL    Y    NA
98  torrejo01 BBWAA Manager of the Year   1996   AL    Y    NA
99  bochybr01 BBWAA Manager of the Year   1996   NL <NA>    NA
100 oatesjo01   TSN Manager of the Year   1996   AL <NA>    NA
101 bochybr01   TSN Manager of the Year   1996   NL <NA>    NA
> 
> # AL winners of the BBWAA managerial award
> subset(AwardsManagers, awardID == "BBWAA Manager of the year" &
+                           lgID == "AL")
[1] playerID awardID  yearID   lgID     tie      notes   
<0 rows> (or 0-length row.names)
> 
> # Tony LaRussa's manager of the year awards
> subset(AwardsManagers, playerID == "larusto01")
     playerID                   awardID yearID lgID  tie notes
48  larusto01 BBWAA Manager of the Year   1983   AL <NA>    NA
50  larusto01   TSN Manager of the Year   1983   ML <NA>    NA
65  larusto01 BBWAA Manager of the Year   1988   AL <NA>    NA
67  larusto01   TSN Manager of the Year   1988   AL <NA>    NA
81  larusto01 BBWAA Manager of the Year   1992   AL <NA>    NA
83  larusto01   TSN Manager of the Year   1992   AL <NA>    NA
123 larusto01 BBWAA Manager of the Year   2002   NL <NA>    NA
> 
> 
> 
> 
> cleanEx()
> nameEx("AwardsPlayers")
> ### * AwardsPlayers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AwardsPlayers
> ### Title: AwardsPlayers table
> ### Aliases: AwardsPlayers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(AwardsPlayers)
> # Which awards have been given and how many?
> with(AwardsPlayers, table(awardID))
awardID
                           ALCS MVP                   All-Star Game MVP 
                                 43                                  62 
                    Babe Ruth Award          Baseball Magazine All-Star 
                                 78                                1520 
                Branch Rickey Award         Comeback Player of the Year 
                                 23                                  36 
                     Cy Young Award                          Gold Glove 
                                126                                1204 
                   Hank Aaron Award                         Hutch Award 
                                 50                                  55 
          Lou Gehrig Memorial Award                Most Valuable Player 
                                 69                                 208 
                           NLCS MVP                Outstanding DH Award 
                                 49                                   8 
              Pitching Triple Crown                      Platinum Glove 
                                 39                                  26 
         Reliever of the Year Award              Roberto Clemente Award 
                                 94                                  54 
                 Rookie of the Year                      Silver Slugger 
                                154                                 792 
                     SIlver Slugger                        Triple Crown 
                                  5                                  17 
                       TSN All-Star             TSN Fireman of the Year 
                               1525                                  88 
                      TSN Guide MVP TSN Major League Player of the Year 
                                 33                                  89 
            TSN Pitcher of the Year              TSN Player of the Year 
                                151                                  92 
           TSN Reliever of the Year                    World Series MVP 
                                 36                                  71 
> awardtab <- with(AwardsPlayers, table(awardID))
> 
> # Plot the awardtab table as a Cleveland dot plot
> library("lattice")
> dotplot(awardtab)
> 
> # Restrict to MVP awards
> mvp <- subset(AwardsPlayers, awardID == "Most Valuable Player")
> # Who won in 1994?
> mvp[mvp$yearID == 1994L, ]
      playerID              awardID yearID lgID  tie notes
5105 thomafr04 Most Valuable Player   1994   AL <NA>  <NA>
5106 bagweje01 Most Valuable Player   1994   NL <NA>  <NA>
> 
> goldglove <- subset(AwardsPlayers, awardID == "Gold Glove")
> # which players won most often?
> GGcount <- table(goldglove$playerID)
> GGcount[GGcount>10]

clemero01 hernake01  kaatji01 maddugr01  mayswi01 robinbr01 rodriiv01 smithoz01 
       12        11        16        18        12        16        13        13 
vizquom01 
       11 
> 
> # Triple Crown winners
> subset(AwardsPlayers, awardID == "Triple Crown")
      playerID      awardID yearID lgID  tie notes
620   cobbty01 Triple Crown   1909   AL <NA>  <NA>
642  hinespa01 Triple Crown   1878   NL <NA>  <NA>
645  oneilti01 Triple Crown   1887   AA <NA>  <NA>
649  duffyhu01 Triple Crown   1894   NL <NA>  <NA>
651  lajoina01 Triple Crown   1901   AL <NA>  <NA>
1156 hornsro01 Triple Crown   1922   NL <NA>  <NA>
1272 hornsro01 Triple Crown   1925   NL <NA>  <NA>
1668  foxxji01 Triple Crown   1933   AL <NA>  <NA>
1669 kleinch01 Triple Crown   1933   NL <NA>  <NA>
1721 gehrilo01 Triple Crown   1934   AL <NA>  <NA>
1954 robinfr02 Triple Crown   1966   AL <NA>  <NA>
2011 yastrca01 Triple Crown   1967   AL <NA>  <NA>
3087 medwijo01 Triple Crown   1937   NL <NA>  <NA>
3353 willite01 Triple Crown   1942   AL <NA>  <NA>
3610 willite01 Triple Crown   1947   AL <NA>  <NA>
3898 mantlmi01 Triple Crown   1956   AL <NA>  <NA>
6508 cabremi01 Triple Crown   2012   AL <NA>  <NA>
> 
> # Simultaneous Triple Crown and MVP winners
> # (compare merged file to TC)
> TC <- subset(AwardsPlayers, awardID == "Triple Crown")
> MVP <- subset(AwardsPlayers, awardID == "Most Valuable Player")
> keepvars <- c("playerID", "yearID", "lgID.x")
> merge(TC, MVP, by = c("playerID", "yearID"))[ ,keepvars]
   playerID yearID lgID.x
1 cabremi01   2012     AL
2  foxxji01   1933     AL
3 hornsro01   1925     NL
4 mantlmi01   1956     AL
5 medwijo01   1937     NL
6 robinfr02   1966     AL
7 yastrca01   1967     AL
> 
> 
> 
> 
> 
> cleanEx()

detaching ‘package:lattice’

> nameEx("AwardsShareManagers")
> ### * AwardsShareManagers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AwardsShareManagers
> ### Title: AwardsShareManagers table
> ### Aliases: AwardsShareManagers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # Voting for the BBWAA Manager of the Year award by year and league
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> # Sort in decreasing order of points by year and league
> AwardsShareManagers %>%
+    group_by(yearID, lgID) %>%
+    arrange(desc(pointsWon))
# A tibble: 510 × 7
# Groups:   yearID, lgID [82]
   awardID                  yearID lgID  playerID pointsWon pointsMax votesFirst
   <chr>                     <int> <fct> <chr>        <int>     <int>      <int>
 1 BBWAA Manager of the Ye…   2000 NL    bakerdu…       154       160         30
 2 BBWAA Manager of the Ye…   2005 NL    coxbo01        152       160         28
 3 BBWAA Manager of the Ye…   2011 NL    gibsoki…       152       160         28
 4 BBWAA Manager of the Ye…   2009 NL    tracyji…       151       160         29
 5 BBWAA Manager of the Ye…   2023 AL    hydebr99       144       150         27
 6 BBWAA Manager of the Ye…   2021 NL    kaplega…       143       150         28
 7 BBWAA Manager of the Ye…   2004 NL    coxbo01        140       160         22
 8 BBWAA Manager of the Ye…   2013 NL    hurdlcl…       140       150         25
 9 BBWAA Manager of the Ye…   1991 AL    kellyto…       138       140         27
10 BBWAA Manager of the Ye…   1994 NL    aloufe01       138       140         27
# ℹ 500 more rows
> 
> # Any unanimous winners?
> AwardsShareManagers %>%
+   filter(pointsWon == pointsMax)
[1] awardID    yearID     lgID       playerID   pointsWon  pointsMax  votesFirst
<0 rows> (or 0-length row.names)
> 
> # Manager with highest proportion of possible points
> AwardsShareManagers %>%
+    mutate(propWon = pointsWon/pointsMax) %>%
+    arrange(desc(propWon)) %>%
+    head(., 1)
                    awardID yearID lgID  playerID pointsWon pointsMax
1 BBWAA Manager of the Year   1991   AL kellyto01       138       140
  votesFirst   propWon
1         27 0.9857143
> 
> # Bobby Cox's MOY vote tallies
> AwardsShareManagers %>%
+   filter(playerID == "coxbo01")
                     awardID yearID lgID playerID pointsWon pointsMax
1  BBWAA Manager of the Year   1983   AL  coxbo01         4        28
2  BBWAA Manager of the Year   1984   AL  coxbo01         9       140
3  BBWAA Manager of the Year   1985   AL  coxbo01       104       140
4  BBWAA Manager of the Year   1991   NL  coxbo01        96       120
5  BBWAA Manager of the Year   1992   NL  coxbo01        29       120
6  BBWAA Manager of the Year   1993   NL  coxbo01        27       140
7  BBWAA Manager of the Year   1994   NL  coxbo01         3       140
8  BBWAA Manager of the Year   1995   NL  coxbo01        20       140
9  BBWAA Manager of the Year   1996   NL  coxbo01        24       140
10 BBWAA Manager of the Year   1997   NL  coxbo01         6       140
11 BBWAA Manager of the Year   1998   NL  coxbo01        17       160
12 BBWAA Manager of the Year   1999   NL  coxbo01        98       160
13 BBWAA Manager of the Year   2000   NL  coxbo01        41       160
14 BBWAA Manager of the Year   2001   NL  coxbo01        12       160
15 BBWAA Manager of the Year   2002   NL  coxbo01        93       160
16 BBWAA Manager of the Year   2003   NL  coxbo01        56       160
17 BBWAA Manager of the Year   2004   NL  coxbo01       140       160
18 BBWAA Manager of the Year   2005   NL  coxbo01       152       160
19 BBWAA Manager of the Year   2009   NL  coxbo01        15       160
20 BBWAA Manager of the Year   2010   NL  coxbo01        28       160
   votesFirst
1           4
2           0
3          16
4          13
5           1
6           0
7           0
8           1
9           3
10          0
11          0
12         10
13          1
14          2
15          9
16          6
17         22
18         28
19          0
20          1
> 
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("AwardsSharePlayers")
> ### * AwardsSharePlayers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AwardsSharePlayers
> ### Title: AwardsSharePlayers table
> ### Aliases: AwardsSharePlayers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # Vote tallies for post-season player awards
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> # Which awards are represented in this data frame?
> unique(AwardsSharePlayers$awardID)
[1] "Cy Young Award"       "Most Valuable Player" "Rookie of the Year"  
> 
> # Sort the votes for the Cy Young award in decreasing order.
> # Until 1967, the award went to the best pitcher
> # in both leagues.
> 
> cyvotes <- AwardsSharePlayers %>%
+               filter(awardID == "Cy Young") %>%
+               group_by(yearID, lgID) %>%
+               arrange(desc(pointsWon))
> 
> # 2012 votes
> subset(cyvotes, yearID == 2012)
# A tibble: 0 × 7
# Groups:   yearID, lgID [0]
# ℹ 7 variables: awardID <chr>, yearID <int>, lgID <fct>, playerID <chr>,
#   pointsWon <int>, pointsMax <int>, votesFirst <int>
> 
> # top three votegetters each year by league
> 
> cya_top3 <- cyvotes %>%
+               group_by(yearID, lgID) %>%
+               do(head(., 3))
> head(cya_top3, 12)
# A tibble: 0 × 7
# Groups:   yearID, lgID [0]
# ℹ 7 variables: awardID <chr>, yearID <int>, lgID <fct>, playerID <chr>,
#   pointsWon <int>, pointsMax <int>, votesFirst <int>
> 
> # unanimous Cy Young winners
> subset(cyvotes, pointsWon == pointsMax)
# A tibble: 0 × 7
# Groups:   yearID, lgID [0]
# ℹ 7 variables: awardID <chr>, yearID <int>, lgID <fct>, playerID <chr>,
#   pointsWon <int>, pointsMax <int>, votesFirst <int>
> 
> ## CYA was a major league award until 1967
> # Find top five pitchers with most top 3 vote tallies in CYA
> # head(with(cya_top3, rev(sort(table(playerID)))), 5)
> 
> # Pre-1967
> cya_top3 %>% 
+   filter(yearID <= 1966) %>%
+   group_by(playerID) %>%
+   summarise(yrs_top3 = n()) %>%
+   arrange(desc(yrs_top3)) %>%
+   head(., 2)
# A tibble: 0 × 2
# ℹ 2 variables: playerID <chr>, yrs_top3 <int>
> 
> # 1967+ (both leagues)
> cya_top3 %>% 
+   filter(yearID > 1966) %>%
+   group_by(playerID) %>%
+   summarise(yrs_top3 = n()) %>%
+   arrange(desc(yrs_top3)) %>%
+   head(., 5)
# A tibble: 0 × 2
# ℹ 2 variables: playerID <chr>, yrs_top3 <int>
> 
> # 1967+ (by league)
> cya_top3 %>% 
+   filter(yearID > 1966) %>%
+   group_by(playerID, lgID) %>%
+   summarise(yrs_top3 = n()) %>%
+   arrange(desc(yrs_top3)) %>%
+   head(., 5)
`summarise()` has grouped output by 'playerID'. You can override using the
`.groups` argument.
# A tibble: 0 × 3
# Groups:   playerID [0]
# ℹ 3 variables: playerID <chr>, lgID <fct>, yrs_top3 <int>
> 
> # Ditto for MVP awards
> # Top 3 votegetters for MVP award by year and league
> MVP_top3 <- AwardsSharePlayers %>% 
+               filter(awardID == "MVP") %>%
+               group_by(yearID, lgID) %>% 
+               arrange(desc(pointsWon)) %>%
+               do(head(., 3))
> tail(MVP_top3)
# A tibble: 0 × 7
# Groups:   yearID, lgID [0]
# ℹ 7 variables: awardID <chr>, yearID <int>, lgID <fct>, playerID <chr>,
#   pointsWon <int>, pointsMax <int>, votesFirst <int>
> 
> ## Select players with >= 7 top 3 finishes
> MVP_top3 %>% 
+   group_by(playerID) %>%
+   summarise(n_top3 = n()) %>%
+   arrange(desc(n_top3)) %>%
+   filter(n_top3 > 6)
# A tibble: 0 × 2
# ℹ 2 variables: playerID <chr>, n_top3 <int>
> 
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("Batting")
> ### * Batting
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Batting
> ### Title: Batting table
> ### Aliases: Batting
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Batting)
> head(Batting)
   playerID yearID stint teamID lgID  G AB R H X2B X3B HR RBI SB CS BB SO IBB
1 aardsda01   2004     1    SFN   NL 11  0 0 0   0   0  0   0  0  0  0  0   0
2 aardsda01   2006     1    CHN   NL 45  2 0 0   0   0  0   0  0  0  0  0   0
3 aardsda01   2007     1    CHA   AL 25  0 0 0   0   0  0   0  0  0  0  0   0
4 aardsda01   2008     1    BOS   AL 47  1 0 0   0   0  0   0  0  0  0  1   0
5 aardsda01   2009     1    SEA   AL 73  0 0 0   0   0  0   0  0  0  0  0   0
6 aardsda01   2010     1    SEA   AL 53  0 0 0   0   0  0   0  0  0  0  0   0
  HBP SH SF GIDP
1   0  0  0    0
2   0  1  0    0
3   0  0  0    0
4   0  0  0    0
5   0  0  0    0
6   0  0  0    0
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> ## Prelude: Extract information from Salaries and People
> ## to be merged with the batting data.
> 
> # Subset of Salaries data
> salaries <- Salaries %>%
+               select(playerID, yearID, teamID, salary)
> 
> # Subset of People table (player metadata)
> peopleInfo <- People %>%
+               select(playerID, birthYear, birthMonth, nameLast,
+                      nameFirst, bats)
> 
> # Left join salaries and peopleInfo to batting data,
> # create an age variable and sort by playerID, yearID and stint
> # Returns an ignorable warning.
> batting <- battingStats() %>% 
+              left_join(salaries, 
+                        by =c("playerID", "yearID", "teamID")) %>%
+              left_join(peopleInfo, by = "playerID") %>%
+              mutate(age = yearID - birthYear - 
+                             1L *(birthMonth >= 10)) %>%
+              arrange(playerID, yearID, stint)
> 
> ## Generate a ggplot similar to the NYT graph in the story about Ted
> ## Williams and the last .400 MLB season 
> # http://www.nytimes.com/interactive/2011/09/18/sports/baseball/WILLIAMS-GRAPHIC.html
> 
> # Restrict the pool of eligible players to the years after 1899 and
> # players with a minimum of 450 plate appearances (this covers the
> # strike year of 1994 when Tony Gwynn hit .394 before play was suspended
> # for the season - in a normal year, the minimum number of plate appearances is 502)
> 
> eligibleHitters <- batting %>%
+                      filter(yearID >= 1900 & PA > 450)
> 
> # Find the hitters with the highest BA in MLB each year (there are a
> # few ties).  Include all players with BA > .400, whether they
> # won a batting title or not, and add an indicator variable for
> # .400 average in a season.
> 
> topHitters <- eligibleHitters %>%
+                  group_by(yearID) %>%
+                  filter(BA == max(BA)| BA >= .400) %>%
+                  mutate(ba400 = BA >= 0.400) %>%
+                  select(playerID, yearID, nameLast, 
+                         nameFirst, BA, ba400)
> 
> # Sub-data frame for the .400 hitters plus the outliers after 1950
> # (averages above .380) - used to produce labels in the plot below
> bignames <- topHitters %>%
+               filter(ba400 | (yearID > 1950 & BA > 0.380)) %>%
+               arrange(desc(BA))
> 
> # Variable to provide a vertical offset to certain
> # labels in the ggplot below
> bignames$yoffset <-  c(0, 0, 0, 0, 0.002, 0, 0, 0,
+                        0.001, -0.001, 0, -0.002, 0, 0,
+                        0.002, 0, 0)
> 
> # Produce the plot
> 
> require("ggplot2")                               
Loading required package: ggplot2
> ggplot(topHitters, aes(x = yearID, y = BA)) +
+   geom_point(aes(colour = ba400), size = 2.5) +
+   geom_hline(yintercept = 0.400, size = 1, colour = "gray70") +
+   geom_text(data = bignames, aes(y = BA + yoffset,
+                                  label = nameLast), 
+                              size = 3, hjust = 1.2) +
+   scale_colour_manual(values = c("FALSE" = "black", "TRUE" = "red")) +
+   xlim(1899, 2015) +
+   xlab("Year") +
+   scale_y_continuous("Batting average",
+                      limits = c(0.330, 0.430),
+                      breaks = seq(0.34, 0.42, by = 0.02),
+                      labels = c(".340", ".360", ".380", ".400", ".420")) +
+   geom_smooth() +
+   theme(legend.position = "none")
Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
ℹ Please use `linewidth` instead.
`geom_smooth()` using method = 'loess' and formula = 'y ~ x'
Warning: Removed 11 rows containing non-finite outside the scale range
(`stat_smooth()`).
Warning: Removed 11 rows containing missing values or values outside the scale range
(`geom_point()`).
> 
> ##########################################################
> # after Chris Green,
> # http://sabr.org/research/baseball-s-first-power-surge-home-runs-late-19th-century-major-leagues
> 
> # Total home runs by year
> totalHR <- Batting %>%
+              group_by(yearID) %>%
+              summarise(HomeRuns = sum(as.numeric(HR), na.rm=TRUE),
+                        Games = sum(as.numeric(G), na.rm=TRUE))
> 
> # Plot HR by year, pre-1919 (dead ball era)
> totalHR %>% filter(yearID <= 1918) %>%
+             ggplot(., aes(x = yearID, y = HomeRuns)) +
+                geom_line() +
+                geom_point() +
+                labs(x = "Year", y = "Home runs hit")
> 
> # Take games into account
> totalHR %>% filter(yearID <= 1918) %>%
+   ggplot(., aes(x = yearID, y = HomeRuns/Games)) +
+      geom_line() +
+      geom_point() +
+      labs(x = "Year", y = "Home runs per game played")
> 
> # Widen perspective to all years from 1871
> ggplot(totalHR, aes(x = yearID, y = HomeRuns)) +
+   geom_point() +
+   geom_path() +
+   geom_smooth() +
+   labs(x = "Year", y = "Home runs hit")
`geom_smooth()` using method = 'loess' and formula = 'y ~ x'
> 
> # Similar plot for HR per game played by year -
> # shows several eras with spikes in HR hit
> ggplot(totalHR, aes(x = yearID, y = HomeRuns/Games)) +
+   geom_point() +
+   geom_path() +
+   geom_smooth(se = FALSE) +
+   labs(x = "Year", y = "Home runs per game played")
`geom_smooth()` using method = 'loess' and formula = 'y ~ x'
> 
> 
> 
> 
> 
> cleanEx()

detaching ‘package:ggplot2’, ‘package:dplyr’

> nameEx("BattingPost")
> ### * BattingPost
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BattingPost
> ### Title: BattingPost table
> ### Aliases: BattingPost
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # Post-season batting data
> # Requires care since intra-league playoffs have evolved since 1969
> # Simplest case: World Series
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> # Create a sub-data frame for modern World Series play
> ws <- BattingPost %>%
+         filter(round == "WS" & yearID >= 1903) %>%
+         mutate(BA = 0 + (AB > 0) * round(H/AB, 3),
+                TB = H + X2B + 2 * X3B + 3 * HR,
+                SA = 0 + (AB > 0) * round(TB/AB, 3),
+                PA = AB + BB + IBB + HBP + SH + SF,
+                OB = H + BB + IBB + HBP,
+                OBP = 0 + (AB > 0) * round(OB/PA, 3) )
> 
> # Players with most appearances in the WS:
> ws %>% group_by(playerID) %>%
+        summarise(appearances = n()) %>%
+        arrange(desc(appearances)) %>%
+        head(., 10)
# A tibble: 10 × 2
   playerID  appearances
   <chr>           <int>
 1 berrayo01          14
 2 mantlmi01          12
 3 fordwh01           11
 4 dimagjo01          10
 5 howarel01          10
 6 ruthba01           10
 7 bauerha01           9
 8 rizzuph01           9
 9 dickebi01           8
10 friscfr01           8
> 
> # Non-Yankees with most WS appearances
> ws %>% filter(teamID != "NYA") %>%
+        group_by(playerID) %>%
+        summarise(appearances = n()) %>%
+        arrange(desc(appearances)) %>%
+        head(., 10)
# A tibble: 10 × 2
   playerID  appearances
   <chr>           <int>
 1 friscfr01           8
 2 furilca01           7
 3 gilliji01           7
 4 hodgegi01           7
 5 reesepe01           7
 6 collied01           6
 7 palmeji01           6
 8 robinja02           6
 9 rosepe01            6
10 snidedu01           6
> 
> 
> # Top ten single WS batting averages ( >= 10 AB )
> ws %>% filter(AB > 10) %>%
+        arrange(desc(BA)) %>%
+        head(., 10)
   yearID round  playerID teamID lgID G AB R  H X2B X3B HR RBI SB CS BB SO IBB
1    1990    WS hatchbi01    CIN   NL 4 12 6  9   4   1  0   2  0  1  2  0   1
2    2013    WS ortizda01    BOS   AL 6 16 7 11   2   0  2   6  0  0  8  1   4
3    1928    WS  ruthba01    NYA   AL 4 16 9 10   3   0  3   4  0  0  1  2   0
4    2009    WS matsuhi01    NYA   AL 6 13 3  8   1   0  3   8  0  0  1  3   0
5    2001    WS bautida01    ARI   NL 5 12 1  7   2   0  0   7  0  0  1  1   0
6    1990    WS  saboch01    CIN   NL 4 16 2  9   1   0  2   5  0  1  2  2   0
7    1914    WS gowdyha01    BSN   NL 4 11 3  6   3   1  1   3  1  0  5  1   0
8    1928    WS gehrilo01    NYA   AL 4 11 5  6   1   0  4   9  0  0  6  0   0
9    1999    WS boonebr01    ATL   NL 4 13 1  7   4   0  0   3  0  1  1  3   0
10   1976    WS benchjo01    CIN   NL 4 15 4  8   1   1  2   6  0  0  0  1   0
   HBP SH SF GIDP    BA TB    SA PA OB   OBP
1    1  0  0    1 0.750 15 1.250 16 13 0.812
2    0  0  1    0 0.688 19 1.188 29 23 0.793
3    0  0  0    1 0.625 22 1.375 17 11 0.647
4    0  0  0    0 0.615 18 1.385 14  9 0.643
5    0  0  0    0 0.583  9 0.750 13  8 0.615
6    0  0  0    0 0.562 16 1.000 18 11 0.611
7    0  0  0    0 0.545 14 1.273 16 11 0.688
8    0  0  0    0 0.545 19 1.727 17 12 0.706
9    0  0  0    0 0.538 11 0.846 14  8 0.571
10   0  0  0    2 0.533 17 1.133 15  8 0.533
> 
> # Top ten slugging averages in a single WS 
> ws %>% filter(AB > 10) %>%
+   arrange(desc(SA)) %>%
+   head(., 10)
   yearID round  playerID teamID lgID G AB  R  H X2B X3B HR RBI SB CS BB SO IBB
1    1928    WS gehrilo01    NYA   AL 4 11  5  6   1   0  4   9  0  0  6  0   0
2    2009    WS matsuhi01    NYA   AL 6 13  3  8   1   0  3   8  0  0  1  3   0
3    1928    WS  ruthba01    NYA   AL 4 16  9 10   3   0  3   4  0  0  1  2   0
4    2002    WS bondsba01    SFN   NL 7 17  8  8   2   0  4   6  0  0 13  3   7
5    1914    WS gowdyha01    BSN   NL 4 11  3  6   3   1  1   3  1  0  5  1   0
6    1977    WS jacksre01    NYA   AL 6 20 10  9   1   0  5   8  0  0  3  4   0
7    1990    WS hatchbi01    CIN   NL 4 12  6  9   4   1  0   2  0  1  2  0   1
8    1939    WS kellech01    NYA   AL 4 16  8  7   1   1  3   6  0  0  1  2   0
9    2013    WS ortizda01    BOS   AL 6 16  7 11   2   0  2   6  0  0  8  1   4
10   2018    WS pearcst01    BOS   AL 5 12  5  4   1   0  3   8  0  0  4  0   0
   HBP SH SF GIDP    BA TB    SA PA OB   OBP
1    0  0  0    0 0.545 19 1.727 17 12 0.706
2    0  0  0    0 0.615 18 1.385 14  9 0.643
3    0  0  0    1 0.625 22 1.375 17 11 0.647
4    0  0  0    0 0.471 22 1.294 37 28 0.757
5    0  0  0    0 0.545 14 1.273 16 11 0.688
6    1  0  0    1 0.450 25 1.250 24 13 0.542
7    1  0  0    1 0.750 15 1.250 16 13 0.812
8    0  0  0    0 0.438 19 1.188 17  8 0.471
9    0  0  1    0 0.688 19 1.188 29 23 0.793
10   0  0  0    0 0.333 14 1.167 16  8 0.500
> 
> 
> # Hitting stats for the 1946 St. Louis Cardinals, ordered by BA
> ws %>% 
+   filter(teamID == "SLN" & yearID == 1946) %>%
+   arrange(desc(BA))
   yearID round  playerID teamID lgID G AB R H X2B X3B HR RBI SB CS BB SO IBB
1    1946    WS  ricede01    SLN   NL 3  6 2 3   1   0  0   0  0  0  2  0   2
2    1946    WS walkeha01    SLN   NL 7 17 3 7   2   0  0   6  0  1  4  2   2
3    1946    WS dicksmu01    SLN   NL 2  5 1 2   2   0  0   1  0  0  0  1   0
4    1946    WS slaugen01    SLN   NL 7 25 5 8   1   1  1   2  1  0  4  3   2
5    1946    WS garagjo01    SLN   NL 5 19 2 6   2   0  0   4  0  0  0  3   0
6    1946    WS kurowwh01    SLN   NL 7 27 5 8   3   0  0   2  0  0  0  3   0
7    1946    WS dusaker01    SLN   NL 4  4 0 1   1   0  0   0  0  0  2  2   0
8    1946    WS marioma01    SLN   NL 7 24 1 6   2   0  0   4  0  0  1  1   1
9    1946    WS mungere01    SLN   NL 1  4 0 1   0   0  0   0  0  0  0  2   0
10   1946    WS schoere01    SLN   NL 7 30 3 7   1   0  0   1  1  1  0  2   0
11   1946    WS musiast01    SLN   NL 7 27 3 6   4   1  0   4  1  0  4  2   0
12   1946    WS moorete01    SLN   NL 7 27 1 4   0   0  0   2  0  0  2  6   0
13   1946    WS brechha01    SLN   NL 3  8 2 1   0   0  0   1  0  0  0  1   0
14   1946    WS brazlal01    SLN   NL 1  2 0 0   0   0  0   0  0  0  0  0   0
15   1946    WS jonesni01    SLN   NL 1  1 0 0   0   0  0   0  0  0  0  1   0
16   1946    WS polleho01    SLN   NL 2  4 0 0   0   0  0   0  0  0  0  1   0
17   1946    WS sisledi01    SLN   NL 2  2 0 0   0   0  0   0  0  0  0  0   0
18   1946    WS beazljo01    SLN   NL 1  0 0 0   0   0  0   0  0  0  0  0   0
19   1946    WS wilkste01    SLN   NL 1  0 0 0   0   0  0   0  0  0  0  0   0
   HBP SH SF GIDP    BA TB    SA PA OB   OBP
1    0  0  0    0 0.500  4 0.667 10  7 0.700
2    0  1  0    0 0.412  9 0.529 24 13 0.542
3    0  0  0    0 0.400  4 0.800  5  2 0.400
4    1  0  0    0 0.320 14 0.560 32 15 0.469
5    0  0  0    0 0.316  8 0.421 19  6 0.316
6    1  0  0    1 0.296 11 0.407 28  9 0.321
7    0  0  0    0 0.250  2 0.500  6  3 0.500
8    0  3  0    1 0.250  8 0.333 29  8 0.276
9    0  1  0    0 0.250  1 0.250  5  1 0.200
10   0  1  0    0 0.233  8 0.267 31  7 0.226
11   0  0  0    0 0.222 12 0.444 31 10 0.323
12   0  2  0    0 0.148  4 0.148 31  6 0.194
13   0  0  0    0 0.125  1 0.125  8  1 0.125
14   0  0  0    0 0.000  0 0.000  2  0 0.000
15   0  0  0    0 0.000  0 0.000  1  0 0.000
16   0  0  0    0 0.000  0 0.000  4  0 0.000
17   0  0  0    0 0.000  0 0.000  2  0 0.000
18   0  0  0    0   NaN  0   NaN  0  0   NaN
19   0  0  0    0   NaN  0   NaN  0  0   NaN
> 
> # Babe Ruth's WS profile
> ws %>% 
+   filter(playerID == "ruthba01") %>%
+   arrange(yearID)
   yearID round playerID teamID lgID G AB R  H X2B X3B HR RBI SB CS BB SO IBB
1    1915    WS ruthba01    BOS   AL 1  1 0  0   0   0  0   0  0  0  0  0   0
2    1916    WS ruthba01    BOS   AL 1  5 0  0   0   0  0   1  0  0  0  2   0
3    1918    WS ruthba01    BOS   AL 3  5 0  1   0   1  0   2  0  0  0  2   0
4    1921    WS ruthba01    NYA   AL 6 16 3  5   0   0  1   4  2  1  5  8   0
5    1922    WS ruthba01    NYA   AL 5 17 1  2   1   0  0   1  0  1  2  3   0
6    1923    WS ruthba01    NYA   AL 6 19 8  7   1   1  3   3  0  0  8  6   0
7    1926    WS ruthba01    NYA   AL 7 20 6  6   0   0  4   5  1  1 11  2   1
8    1927    WS ruthba01    NYA   AL 4 15 4  6   0   0  2   7  1  0  2  2   1
9    1928    WS ruthba01    NYA   AL 4 16 9 10   3   0  3   4  0  0  1  2   0
10   1932    WS ruthba01    NYA   AL 4 15 6  5   0   0  2   6  0  0  4  3   0
   HBP SH SF GIDP    BA TB    SA PA OB   OBP
1    0  0  0    0 0.000  0 0.000  1  0 0.000
2    0  0  0    0 0.000  0 0.000  5  0 0.000
3    0  1  0    0 0.200  3 0.600  6  1 0.167
4    0  0  0    0 0.312  8 0.500 21 10 0.476
5    1  1  0    0 0.118  3 0.176 21  5 0.238
6    0  0  0    0 0.368 19 1.000 27 15 0.556
7    0  0  0    0 0.300 18 0.900 32 18 0.562
8    0  0  1    1 0.400 12 0.800 19  9 0.474
9    0  0  0    1 0.625 22 1.375 17 11 0.647
10   1  0  0    1 0.333 11 0.733 20 10 0.500
> 
> 
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("CollegePlaying")
> ### * CollegePlaying
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CollegePlaying
> ### Title: CollegePlaying table
> ### Aliases: CollegePlaying
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(CollegePlaying)
> head(CollegePlaying)
   playerID schoolID yearID
1 aardsda01   pennst   2001
2 aardsda01     rice   2002
3 aardsda01     rice   2003
4  abadan01  gamiddl   1992
5  abadan01  gamiddl   1993
6 abbeybe01  vermont   1889
> 
> ## Q: What are the top universities for producing MLB players?
> SPcount <- table(CollegePlaying$schoolID)
> SPcount[SPcount>50]

   alabama    arizona  arizonast   arkansas     auburn     baylor bostoncoll 
       155        161        236        108        122         99         71 
     brown        byu    cacerri california  calstfull    clemson  creighton 
       111         57         52        162        131        138         51 
 dartmouth       duke    florida  floridast    fordham   fresnost     gatech 
        64         94        138        152         99        103        137 
georgetown    georgia  holycross    houston   illinois    indiana  indianast 
        78         89        167         57        141         58         53 
      iowa     kentst   kentucky  longbeach loyolamary        lsu  manhattan 
        59         52         79         96         70        149         71 
  maryland    miamifl    miamioh   michigan michiganst  minnesota   missouri 
        60        113         63        191         71         86         72 
    missst    ncstate   nebraska  notredame   nwestern       ohio     ohiost 
       118         98         88        134         55         54        111 
  oklahoma    okstate    olemiss   oregonst     pennst pepperdine  princeton 
       135        132        108         70         58         87         66 
      rice    rutgers sandiegost santaclara  scarolina  setonhall  sillinois 
        83         52        102        112        119         70         57 
  stanford  stmarysca  tennessee      texas    texasam     tulane   txchrist 
       248         89         92        265        129         74         80 
    txtech       ucla      umass        unc      upenn        usc      vandy 
        53        180         52        154         87        250         65 
 villanova   virginia       wake     washst  wichitast  wisconsin  wmichigan 
        86         95         81         74        107         55         68 
      yale 
        59 
> 
> library("lattice")
> dotplot(SPcount[SPcount>50])
> dotplot(sort(SPcount[SPcount>50]))
> 
> ## Q: How many schools are represented in this dataset?
> length(table(CollegePlaying$schoolID))
[1] 1038
> 
> # Histogram of the number of players from each school who played in MLB:
> with(CollegePlaying, 
+      hist(table(schoolID), xlab = "Number of players",
+                            main = ""))
> 
> 
> 
> cleanEx()

detaching ‘package:lattice’

> nameEx("Fielding")
> ### * Fielding
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Fielding
> ### Title: Fielding table
> ### Aliases: Fielding
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Fielding)
> # Basic fielding data
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> 
> # Roberto Clemente's fielding profile
> # pitching and catching related data removed
> # subset(Fielding, playerID == "clemero01")[, 1:13]
> Fielding %>% 
+    filter(playerID == "clemero01") %>%
+    select(1:13)
    playerID yearID stint teamID lgID POS   G  GS InnOuts  PO  A  E DP
1  clemero01   1955     1    PIT   NL  OF 118 107    2892 253 18  6  5
2  clemero01   1956     1    PIT   NL  2B   2   0      18   1  1  1  0
3  clemero01   1956     1    PIT   NL  3B   1   0       6   0  2  1  0
4  clemero01   1956     1    PIT   NL  OF 139 130    3499 274 17 13  2
5  clemero01   1957     1    PIT   NL  OF 109 107    2836 272  9  6  1
6  clemero01   1958     1    PIT   NL  OF 135 129    3452 312 22  6  3
7  clemero01   1959     1    PIT   NL  OF 104 102    2700 229 10 13  1
8  clemero01   1960     1    PIT   NL  OF 142 140    3767 246 19  8  2
9  clemero01   1961     1    PIT   NL  OF 144 142    3723 256 27  9  5
10 clemero01   1962     1    PIT   NL  OF 142 138    3686 269 19  8  1
11 clemero01   1963     1    PIT   NL  OF 151 148    3943 239 11 11  2
12 clemero01   1964     1    PIT   NL  OF 154 154    4085 289 13 10  2
13 clemero01   1965     1    PIT   NL  OF 145 143    3810 288 16 10  1
14 clemero01   1966     1    PIT   NL  OF 154 153    4147 318 17 12  3
15 clemero01   1967     1    PIT   NL  OF 145 141    3751 273 17  9  4
16 clemero01   1968     1    PIT   NL  OF 131 128    3477 297  9  5  1
17 clemero01   1969     1    PIT   NL  OF 135 128    3372 226 14  5  1
18 clemero01   1970     1    PIT   NL  OF 104 102    2703 189 12  7  2
19 clemero01   1971     1    PIT   NL  OF 124 120    3243 267 11  2  4
20 clemero01   1972     1    PIT   NL  OF  94  88    2436 199  5  0  2
>    
> # Yadier Molina's fielding profile
> # PB, WP, SP and CS apply to catchers
> Fielding %>% 
+   subset(playerID == "molinya01") %>%
+   select(-WP, -ZR)
       playerID yearID stint teamID lgID POS   G  GS InnOuts   PO  A  E DP PB
93856 molinya01   2004     1    SLN   NL   C  51  39    1032  256 16  2  1  4
93857 molinya01   2005     1    SLN   NL  1B   1   0       3    0  0  0  0 NA
93858 molinya01   2005     1    SLN   NL   C 114 111    2878  684 66  7  4  8
93859 molinya01   2006     1    SLN   NL  1B   4   0      15    5  0  1  1 NA
93860 molinya01   2006     1    SLN   NL   C 127 118    3112  734 79  4  6  7
93861 molinya01   2007     1    SLN   NL  1B   1   0       3    1  0  0  0 NA
93862 molinya01   2007     1    SLN   NL   C 107 101    2584  582 63  6  8  7
93863 molinya01   2008     1    SLN   NL  1B   2   1      33   13  3  0  1 NA
93864 molinya01   2008     1    SLN   NL   C 119 114    3006  653 70 10  7  5
93865 molinya01   2009     1    SLN   NL  1B   6   0      30   10  1  0  2 NA
93866 molinya01   2009     1    SLN   NL   C 138 136    3530  884 82  5  6  4
93867 molinya01   2010     1    SLN   NL  1B   7   0      21    7  0  0  2 NA
93868 molinya01   2010     1    SLN   NL   C 135 130    3414  895 79  5 10  7
93869 molinya01   2011     1    SLN   NL  1B   2   0       6    3  0  1  0 NA
93870 molinya01   2011     1    SLN   NL   C 137 132    3450  857 67  5  5  6
93871 molinya01   2012     1    SLN   NL  1B   3   0      27   11  2  0  0 NA
93872 molinya01   2012     1    SLN   NL   C 136 133    3484  962 88  3 12  6
93873 molinya01   2013     1    SLN   NL  1B   5   2      54   17  1  0  1 NA
93874 molinya01   2013     1    SLN   NL   C 131 129    3346  976 63  4 11  3
93875 molinya01   2014     1    SLN   NL  1B   1   1      27   10  1  0  0 NA
93876 molinya01   2014     1    SLN   NL   C 107 106    2795  810 56  2 10  3
93877 molinya01   2015     1    SLN   NL   C 134 131    3449 1064 56  7  9  4
93878 molinya01   2016     1    SLN   NL  1B   2   1      21   10  1  0  0 NA
93879 molinya01   2016     1    SLN   NL   C 146 142    3655 1113 60  2  5  8
93880 molinya01   2017     1    SLN   NL  1B   1   0       6    4  0  0  0 NA
93881 molinya01   2017     1    SLN   NL   C 133 133    3377 1082 55  7 13  6
93882 molinya01   2018     1    SLN   NL  1B   5   0      36    9  2  1  3 NA
93883 molinya01   2018     1    SLN   NL   C 121 120    3053  966 42  2  8  4
93884 molinya01   2019     1    SLN   NL  1B   4   0      24    6  0  0  1 NA
93885 molinya01   2019     1    SLN   NL  3B   1   0       3    0  0  0  0 NA
93886 molinya01   2019     1    SLN   NL   C 111 108    2818  916 30  1  5  4
93887 molinya01   2020     1    SLN   NL  1B   2   0      15    3  0  0  0 NA
93888 molinya01   2020     1    SLN   NL   C  42  42    1012  307 16  5  1  3
93889 molinya01   2021     1    SLN   NL  1B   1   0       9    1  1  0  0 NA
93890 molinya01   2021     1    SLN   NL   C 118 118    3004  869 49  3 10  6
93891 molinya01   2022     1    SLN   NL  1B   1   0       3    0  0  0  0 NA
93892 molinya01   2022     1    SLN   NL   C  77  71    1885  512 25  3  6  1
93893 molinya01   2022     1    SLN   NL   P   2   0       6    0  0  0  0 NA
      SB CS
93856  9  8
93857 NA NA
93858 14 25
93859 NA NA
93860 37 29
93861 NA NA
93862 23 27
93863 NA NA
93864 34 18
93865 NA NA
93866 32 22
93867 NA NA
93868 35 33
93869 NA NA
93870 46 19
93871 NA NA
93872 38 35
93873 NA NA
93874 26 20
93875 NA NA
93876 23 21
93877 37 26
93878 NA NA
93879 67 18
93880 NA NA
93881 43 24
93882 NA NA
93883 27 12
93884 NA NA
93885 NA NA
93886 22  8
93887 NA NA
93888  6  5
93889 NA NA
93890 26 18
93891 NA NA
93892 20 13
93893 NA NA
> 
> # Pedro Martinez's fielding profile
> Fielding %>% subset(playerID == "martipe02")
       playerID yearID stint teamID lgID POS  G GS InnOuts PO  A E DP PB WP SB
85473 martipe02   1992     1    LAN   NL   P  2  1      24  0  0 0  0 NA NA NA
85474 martipe02   1993     1    LAN   NL   P 65  2     321  4  4 0  1 NA NA NA
85475 martipe02   1994     1    MON   NL   P 24 23     434  9 15 4  0 NA NA NA
85476 martipe02   1995     1    MON   NL   P 30 30     584 14 23 2  0 NA NA NA
85477 martipe02   1996     1    MON   NL   P 33 33     650 11 17 3  1 NA NA NA
85478 martipe02   1997     1    MON   NL   P 31 31     724  7 31 1  1 NA NA NA
85479 martipe02   1998     1    BOS   AL   P 33 33     701 11 18 4  3 NA NA NA
85480 martipe02   1999     1    BOS   AL   P 31 29     640 13 15 1  0 NA NA NA
85481 martipe02   2000     1    BOS   AL   P 29 29     651 14 28 0  2 NA NA NA
85482 martipe02   2001     1    BOS   AL   P 18 18     350  5  5 0  0 NA NA NA
85483 martipe02   2002     1    BOS   AL   P 30 30     598 16 16 2  1 NA NA NA
85484 martipe02   2003     1    BOS   AL   P 29 29     560 14 20 0  0 NA NA NA
85485 martipe02   2004     1    BOS   AL   P 33 33     651 16 16 1  0 NA NA NA
85486 martipe02   2005     1    NYN   NL   P 31 31     651  6 19 0  0 NA NA NA
85487 martipe02   2006     1    NYN   NL   P 23 23     398  7 13 5  0 NA NA NA
85488 martipe02   2007     1    NYN   NL   P  5  5      84  1  0 0  0 NA NA NA
85489 martipe02   2008     1    NYN   NL   P 20 20     327  6 17 0  1 NA NA NA
85490 martipe02   2009     1    PHI   NL   P  9  9     134  1  6 0  1 NA NA NA
      CS ZR
85473 NA NA
85474 NA NA
85475 NA NA
85476 NA NA
85477 NA NA
85478 NA NA
85479 NA NA
85480 NA NA
85481 NA NA
85482 NA NA
85483 NA NA
85484 NA NA
85485 NA NA
85486 NA NA
85487 NA NA
85488 NA NA
85489 NA NA
85490 NA NA
> 
> # Table of games played by Pete Rose at different positions
> with(subset(Fielding, playerID == "rosepe01"), xtabs(G ~ POS))
POS
  1B   2B   3B   OF 
 939  628  634 1327 
> 
> # Career total G/PO/A/E/DP for Luis Aparicio
> Fielding %>%
+     filter(playerID == "aparilu01") %>% 
+     select(G, PO, A, E, DP) %>%
+     summarise_each(funs(sum))
Warning: `summarise_each()` was deprecated in dplyr 0.7.0.
ℹ Please use `across()` instead.
Warning: `funs()` was deprecated in dplyr 0.8.0.
ℹ Please use a list of either functions or lambdas:

# Simple named list: list(mean = mean, median = median)

# Auto named with `tibble::lst()`: tibble::lst(mean, median)

# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
     G   PO    A   E   DP
1 2583 4548 8016 366 1553
> 
> 
> # Top ten 2B/SS in turning DPs
> Fielding %>%
+     subset(POS %in% c("2B", "SS")) %>%
+     group_by(playerID) %>%
+     summarise(TDP = sum(DP, na.rm = TRUE)) %>%
+     arrange(desc(TDP)) %>%
+     head(., 10)
# A tibble: 10 × 2
   playerID    TDP
   <chr>     <int>
 1 vizquom01  1775
 2 mazerbi01  1706
 3 foxne01    1619
 4 smithoz01  1590
 5 ripkeca01  1565
 6 aparilu01  1553
 7 randowi01  1547
 8 whitalo01  1527
 9 doerrbo01  1507
10 morgajo02  1505
> 
> # League average fielding statistics, 1961-present
> Fielding %>% 
+    filter(yearID >= 1961 & POS != "DH") %>%
+    select(yearID, lgID, POS, InnOuts, PO, A, E) %>%
+    group_by(yearID, lgID) %>%
+    summarise_at(vars(InnOuts, PO, A, E), funs(sum), na.rm = TRUE) %>%
+    mutate(fpct = round( (PO + A)/(PO + A + E), 3), 
+           OPE = round(InnOuts/E, 3))
Warning: `funs()` was deprecated in dplyr 0.8.0.
ℹ Please use a list of either functions or lambdas:

# Simple named list: list(mean = mean, median = median)

# Auto named with `tibble::lst()`: tibble::lst(mean, median)

# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
# A tibble: 126 × 8
# Groups:   yearID [63]
   yearID lgID  InnOuts    PO     A     E  fpct   OPE
    <int> <fct>   <int> <int> <int> <int> <dbl> <dbl>
 1   1961 AL     389523 43213 17237  1506 0.976  259.
 2   1961 NL     297720 33080 13728  1167 0.976  255.
 3   1962 AL     391878 43449 17138  1364 0.978  287.
 4   1962 NL     391206 43470 17832  1555 0.975  252.
 5   1963 AL     392877 43589 16998  1347 0.978  292.
 6   1963 NL     392946 43661 17681  1577 0.975  249.
 7   1964 AL     394593 43774 17130  1261 0.98   313.
 8   1964 NL     392094 43566 17933  1586 0.975  247.
 9   1965 AL     392562 43546 17231  1359 0.978  289.
10   1965 NL     395384 43932 18008  1486 0.977  266.
# ℹ 116 more rows
> 
> 
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("FieldingOF")
> ### * FieldingOF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FieldingOF
> ### Title: FieldingOF table
> ### Aliases: FieldingOF
> ### Keywords: datasets
> 
> ### ** Examples
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> require("tidyr")
Loading required package: tidyr
> 
> ## Data set only goes through 1955
> ## Can get a more complete record from the Fielding data frame
> ## or from the Appearances data (see below)
> 
> ## Output directly from the FieldingOF data
> 
> ## Barry Bonds (no records: post-1955 player)
> FieldingOF %>% 
+    filter(playerID == "bondsba01") 
[1] playerID yearID   stint    Glf      Gcf      Grf     
<0 rows> (or 0-length row.names)
> 
> ## Willie Mays (first few years)
> FieldingOF %>% 
+   filter(playerID == "mayswi01") 
  playerID yearID stint Glf Gcf Grf
1 mayswi01   1951     1   0 121   0
2 mayswi01   1952     1   0  34   0
3 mayswi01   1954     1   0 151   0
4 mayswi01   1955     1   0 152   0
> 
> ## Ty Cobb (complete)
> FieldingOF %>% 
+   filter(playerID == "cobbty01") 
   playerID yearID stint Glf Gcf Grf
1  cobbty01   1905     1   2  39   0
2  cobbty01   1906     1  18  55  24
3  cobbty01   1907     1   0   0 150
4  cobbty01   1908     1   0   0 150
5  cobbty01   1909     1   0   0 156
6  cobbty01   1910     1   0 111  26
7  cobbty01   1911     1   0 146   0
8  cobbty01   1912     1   0 140   0
9  cobbty01   1913     1   0 116   2
10 cobbty01   1914     1   0  96   0
11 cobbty01   1915     1   0 156   0
12 cobbty01   1916     1   0 143   0
13 cobbty01   1917     1   0 123  29
14 cobbty01   1918     1   0  92   3
15 cobbty01   1919     1   0 123   0
16 cobbty01   1920     1   0 112   0
17 cobbty01   1921     1   0 121   0
18 cobbty01   1922     1   0 133   1
19 cobbty01   1923     1   0 141   0
20 cobbty01   1924     1   0 155   0
21 cobbty01   1925     1   0 101   4
22 cobbty01   1926     1  15  39   1
23 cobbty01   1927     1   0  52  75
24 cobbty01   1928     1   0   0  85
> 
> ## One way to get OF game information from the Fielding data
> ## Note: OF games != sum(LF, CF, RF) because players can switch
> ## OF positions within a game. Players can also switch from
> ## other positions to outfield during a game. OF represents
> ## the number of games a player started in the outfield.
> Fielding %>%
+    select(playerID, yearID, stint, POS, G) %>%
+    filter(POS %in% c("LF", "CF", "RF", "OF")) %>%
+    tidyr::spread(POS, G, fill = 0) %>%
+    filter(playerID == "trumbma01")
    playerID yearID stint OF
1  trumbma01   2010     1  1
2  trumbma01   2011     1 11
3  trumbma01   2012     1 97
4  trumbma01   2013     1 27
5  trumbma01   2014     1 41
6  trumbma01   2015     1 42
7  trumbma01   2015     2 46
8  trumbma01   2016     1 96
9  trumbma01   2017     1 31
10 trumbma01   2018     1 19
> 
> ## Another way is through the Appearances data (no stint).
> ## Provides a somewhat nicer table than the above.
> 
> ## Mark Trumbo (active player)
> Appearances %>%
+    select(playerID, yearID, G_lf, G_cf, G_rf, G_of) %>%
+    filter(playerID == "trumbma01")
    playerID yearID G_lf G_cf G_rf G_of
1  trumbma01   2010    0    0    1    1
2  trumbma01   2011    1    0   10   11
3  trumbma01   2012   66    0   35   97
4  trumbma01   2013    8    0   19   27
5  trumbma01   2014   41    0    0   41
6  trumbma01   2015    0    0   42   42
7  trumbma01   2015   13    0   34   46
8  trumbma01   2016    1    0   95   96
9  trumbma01   2017    0    0   31   31
10 trumbma01   2018    0    0   19   19
11 trumbma01   2019    0    0    0    0
> 
> ## A slightly better format, perhaps
> Appearances %>%
+   select(playerID, yearID, G_lf, G_cf, G_rf, G_of) %>%
+   rename(LF = G_lf, CF = G_cf, RF = G_rf, OF = G_of) %>%
+   filter(playerID == "trumbma01")
    playerID yearID LF CF RF OF
1  trumbma01   2010  0  0  1  1
2  trumbma01   2011  1  0 10 11
3  trumbma01   2012 66  0 35 97
4  trumbma01   2013  8  0 19 27
5  trumbma01   2014 41  0  0 41
6  trumbma01   2015  0  0 42 42
7  trumbma01   2015 13  0 34 46
8  trumbma01   2016  1  0 95 96
9  trumbma01   2017  0  0 31 31
10 trumbma01   2018  0  0 19 19
11 trumbma01   2019  0  0  0  0
> 
> ## Willie Mays (1951-1973)
> Appearances %>%
+   select(playerID, yearID, G_lf, G_cf, G_rf, G_of) %>%
+   filter(playerID == "mayswi01")
   playerID yearID G_lf G_cf G_rf G_of
1  mayswi01   1951    0  121    0  121
2  mayswi01   1952    0   34    0   34
3  mayswi01   1954    0  151    0  151
4  mayswi01   1955    0  152    0  152
5  mayswi01   1956    0  152    0  152
6  mayswi01   1957    0  150    0  150
7  mayswi01   1958    0  151    0  151
8  mayswi01   1959    0  147    0  147
9  mayswi01   1960    0  152    0  152
10 mayswi01   1961    0  153    0  153
11 mayswi01   1962    0  161    0  161
12 mayswi01   1963    0  157    0  157
13 mayswi01   1964    0  155    0  155
14 mayswi01   1965    1  147    4  150
15 mayswi01   1966    1  144    5  149
16 mayswi01   1967    0  134    0  134
17 mayswi01   1968    0  141    1  142
18 mayswi01   1969    0  106    2  108
19 mayswi01   1970    0  128    0  128
20 mayswi01   1971    0   84    0   84
21 mayswi01   1972    0   50    0   50
22 mayswi01   1972    0   14    0   14
23 mayswi01   1973    0   45    0   45
> 
> ## Joe DiMaggio (1936-1951)
> Appearances %>%
+   select(playerID, yearID, G_lf, G_cf, G_rf, G_of) %>%
+   filter(playerID == "dimagjo01")
    playerID yearID G_lf G_cf G_rf G_of
1  dimagjo01   1936   64   55   20  138
2  dimagjo01   1937    0  150    0  150
3  dimagjo01   1938    0  145    0  145
4  dimagjo01   1939    0  116    0  116
5  dimagjo01   1940    0  130    0  130
6  dimagjo01   1941    0  139    0  139
7  dimagjo01   1942    0  154    0  154
8  dimagjo01   1946    3  128    0  131
9  dimagjo01   1947    0  139    0  139
10 dimagjo01   1948    0  152    0  152
11 dimagjo01   1949    0   76    0   76
12 dimagjo01   1950    0  137    0  137
13 dimagjo01   1951    0  113    0  113
> 
> 
> 
> 
> cleanEx()

detaching ‘package:tidyr’, ‘package:dplyr’

> nameEx("FieldingOFsplit")
> ### * FieldingOFsplit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FieldingOFsplit
> ### Title: FieldingOFsplit table
> ### Aliases: FieldingOFsplit
> ### Keywords: datasets
> 
> ### ** Examples
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> require("tidyr")
Loading required package: tidyr
> 
> ## Data set starts in 1954
> ## Can get a more complete record from the Fielding data frame
> ## or from the Appearances data (see below)
> 
> ## Output directly from the FieldingOFsplit data
> 
> ## Joe DiMaggio (no records: pre-1954 player)
> FieldingOFsplit %>% 
+    filter(playerID == "dimagjo01") 
 [1] playerID yearID   stint    teamID   lgID     POS      G        GS      
 [9] InnOuts  PO       A        E        DP       PB       WP       SB      
[17] CS       ZR      
<0 rows> (or 0-length row.names)
> 
> ## Willie Mays (all but his first few years)
> FieldingOF %>% 
+   filter(playerID == "mayswi01") 
  playerID yearID stint Glf Gcf Grf
1 mayswi01   1951     1   0 121   0
2 mayswi01   1952     1   0  34   0
3 mayswi01   1954     1   0 151   0
4 mayswi01   1955     1   0 152   0
> 
> ## Mike Trout (complete)
> FieldingOF %>% 
+   filter(playerID == "troutmi01")
   playerID yearID stint Glf Gcf Grf
1 troutmi01   2023     1   0  79   0
> 
> 
> 
> cleanEx()

detaching ‘package:tidyr’, ‘package:dplyr’

> nameEx("FieldingPost")
> ### * FieldingPost
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FieldingPost
> ### Title: FieldingPost data
> ### Aliases: FieldingPost
> ### Keywords: datasets
> 
> ### ** Examples
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> ## World Series fielding record for Yogi Berra
> FieldingPost %>%
+   filter(playerID == "berrayo01" & round == "WS")
    playerID yearID teamID lgID round POS G GS InnOuts PO A E DP TP PB SB CS
1  berrayo01   1947    NYA   AL    WS   C 4  3      86 19 2 2  0  0  0 NA NA
2  berrayo01   1947    NYA   AL    WS  RF 2  1      36  3 0 0  0  0 NA NA NA
3  berrayo01   1949    NYA   AL    WS   C 4  4     108 37 3 0  1  0  0 NA NA
4  berrayo01   1950    NYA   AL    WS   C 4  4     111 30 1 0  1  0  0 NA NA
5  berrayo01   1951    NYA   AL    WS   C 6  6     159 27 3 1  0  0  1 NA NA
6  berrayo01   1952    NYA   AL    WS   C 7  7     192 59 7 1  1  0  1 NA NA
7  berrayo01   1953    NYA   AL    WS   C 6  6     156 37 3 0  1  0  0 NA NA
8  berrayo01   1955    NYA   AL    WS   C 7  7     180 40 4 0  1  0  0 NA NA
9  berrayo01   1956    NYA   AL    WS   C 7  7     185 50 3 0  0  0  0 NA NA
10 berrayo01   1957    NYA   AL    WS   C 7  7     187 45 2 1  0  0  0 NA NA
11 berrayo01   1958    NYA   AL    WS   C 7  7     191 60 6 0  1  0  1 NA NA
12 berrayo01   1960    NYA   AL    WS   C 3  2      54 13 1 0  0  0  0 NA NA
13 berrayo01   1960    NYA   AL    WS  LF 3  3      60  4 0 0  0  0 NA NA NA
14 berrayo01   1960    NYA   AL    WS  RF 1  0       9  1 0 0  0  0 NA NA NA
15 berrayo01   1961    NYA   AL    WS  LF 4  4     108 11 0 1  0  0 NA NA NA
16 berrayo01   1962    NYA   AL    WS   C 1  1      24  6 1 0  0  0  0 NA NA
> 
> ## Yogi's career efficiency in throwing out base stealers 
> ## in his WS appearances and CS as a percentage of his 
> ## overall assists
> FieldingPost %>%
+   filter(playerID == "berrayo01" & round == "WS" & POS == "C") %>%
+   summarise(cs_pct = round(100 * sum(CS)/sum(SB + CS), 2),
+             cs_assists = round(100 * sum(CS)/sum(A), 2))
  cs_pct cs_assists
1     NA         NA
> 
> ## Innings per error for several selected shortstops in the WS
> FieldingPost %>%
+   filter(playerID %in% c("belanma01", "jeterde01", "campabe01",
+                          "conceda01", "bowala01"), round == "WS") %>%
+   group_by(playerID) %>%
+   summarise(G = sum(G),
+             InnOuts = sum(InnOuts),
+             Eper9 = round(27 * sum(E)/sum(InnOuts), 3))
# A tibble: 5 × 4
  playerID      G InnOuts Eper9
  <chr>     <int>   <int> <dbl>
1 belanma01    22     504 0.268
2 bowala01      6     161 0    
3 campabe01    19     516 0.209
4 conceda01    19     482 0.168
5 jeterde01    38    1027 0.079
> 
> 
> ## Top 10 center fielders in innings played in the WS
> FieldingPost %>%
+   filter(POS == "CF" & round == "WS") %>%
+   group_by(playerID) %>%
+   summarise(inn_total = sum(InnOuts)) %>%
+   arrange(desc(inn_total)) %>%
+   head(., 10)
# A tibble: 10 × 2
   playerID  inn_total
   <chr>         <int>
 1 dimagjo01      1370
 2 mantlmi01      1364
 3 willibe02       880
 4 snidedu01       868
 5 floodcu01       558
 6 mcgeewi01       542
 7 speaktr01       537
 8 whitede03       516
 9 grissma02       515
10 hendeda01       508
> 
> ## Most total chances by position
> FieldingPost %>%
+   filter(round == "WS" & !(POS %in% c("DH", "OF", "P"))) %>%
+   group_by(POS, playerID) %>%
+   summarise(TC = sum(PO + A + E)) %>%
+   arrange(desc(TC)) %>%
+   do(head(., 1))    # provides top player by position
`summarise()` has grouped output by 'POS'. You can override using the `.groups`
argument.
# A tibble: 8 × 3
# Groups:   POS [8]
  POS   playerID     TC
  <chr> <chr>     <int>
1 1B    hodgegi01   353
2 2B    friscfr01   247
3 3B    gardnla01    97
4 C     berrayo01   464
5 CF    dimagjo01   151
6 LF    gosligo01    68
7 RF    bauerha01    81
8 SS    rizzuph01   259
> 
> 
> 
> 
> cleanEx()

detaching ‘package:dplyr’

> nameEx("HallOfFame")
> ### * HallOfFame
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HallOfFame
> ### Title: Hall of Fame Voting Data
> ### Aliases: HallOfFame
> ### Keywords: datasets
> 
> ### ** Examples
> 
> ## Some examples for  Hall of Fame induction data
> 
> require("dplyr")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> require("ggplot2")
Loading required package: ggplot2
> 
> ############################################################
> ## Some simple queries
> 
> # What are the different types of HOF voters?
> table(HallOfFame$votedBy)

                                BBWAA                            Centennial 
                                 3932                                     6 
Contemporary Baseball Era Non-Players                      Contemporary Era 
                                    8                                     8 
                         Final Ballot                          Negro League 
                                   21                                    48 
                      Nominating Vote                            Old Timers 
                                   76                                    30 
                              Run Off                      Special Election 
                                   81                                     2 
                             Veterans             Veterans - 1943 and Later 
                                 1255                                    21 
              Veterans - Contributors         Veterans - Early Baseball Era 
                                  120                                    10 
                Veterans - Executives              Veterans - Expansion Era 
                                   20                                    24 
            Veterans - Golden Age Era                 Veterans - Golden Era 
                                   10                                    20 
      Veterans - Managers and Umpires        Veterans - Modern Baseball Era 
                                   20                                    20 
                   Veterans - Players                   Veterans - Pre-1943 
                                  600                                    10 
       Veterans - Pre-Integration Era           Veterans - Today's Game Era 
                                   20                                    20 
> 
> # What was the first year of Hall of Fame elections?
> sort(unique(HallOfFame$yearID))[1]
[1] 1936
> # Who comprised the original class?
> subset(HallOfFame, yearID == 1936 & inducted == "Y")
      playerID yearID votedBy ballots needed votes inducted category
876   cobbty01   1936   BBWAA     226    170   222        Y   Player
2845 mathech01   1936   BBWAA     226    170   205        Y   Player
3045 johnswa01   1936   BBWAA     226    170   189        Y   Player
4257  ruthba01   1936   BBWAA     226    170   215        Y   Player
5888 wagneho01   1936   BBWAA     226    170   215        Y   Player
     needed_note
876         <NA>
2845        <NA>
3045        <NA>
4257        <NA>
5888        <NA>
> 
> # Result of a player's last year on the BBWAA ballot
> # Restrict to players voted by BBWAA:
> HOFplayers <- subset(HallOfFame, 
+                  votedBy == "BBWAA" & category == "Player")
> 
> 
> # Number of years as HOF candidate, last pct vote, etc.
> # for a given player
> playerOutcomes <- HallOfFame %>%
+     filter(votedBy == "BBWAA" & category == "Player") %>%
+     group_by(playerID) %>%
+     mutate(nyears = length(ballots)) %>%
+     arrange(yearID) %>%
+     do(tail(., 1)) %>%
+     mutate(lastPct = 100 * round(votes/ballots, 3)) %>%
+     select(playerID, nyears, inducted, lastPct, yearID) %>%
+     rename(lastYear = yearID)
> 
> 
> ############################################################
> # How many voting years until election?
> inducted <- subset(playerOutcomes, inducted == "Y")
> table(inducted$nyears)

 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 
59 11 10  8  8  7  3  4  6  6  3  1  4  1  2 
> 
> # Bar chart of years to induction for inductees
> barplot(table(inducted$nyears), 
+         main="Number of voting years until election",
+ 	    	ylab="Number of players", xlab="Years")
> box()
> 
> # What is the form of this distribution?
> require("vcd")
Loading required package: vcd
Warning in library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘vcd’
> goodfit(inducted$nyears)
Error in goodfit(inducted$nyears) : could not find function "goodfit"
Execution halted
