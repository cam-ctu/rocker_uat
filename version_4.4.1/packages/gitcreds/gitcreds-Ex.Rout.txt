
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gitcreds"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gitcreds')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("gitcreds_cache_envvar")
> ### * gitcreds_cache_envvar
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gitcreds_cache_envvar
> ### Title: Environment variable to cache the password for a URL
> ### Aliases: gitcreds_cache_envvar
> 
> ### ** Examples
> 
> gitcreds_cache_envvar("https://github.com")
[1] "GITHUB_PAT_GITHUB_COM"
> gitcreds_cache_envvar("https://api.github.com/path/to/endpoint")
[1] "GITHUB_PAT_GITHUB_COM"
> gitcreds_cache_envvar("https://jane@github.com")
[1] "GITHUB_PAT_JANE_AT_GITHUB_COM"
> gitcreds_cache_envvar("https://another.site.github.com")
[1] "GITHUB_PAT_ANOTHER_SITE_GITHUB_COM"
> 
> 
> 
> cleanEx()
> nameEx("gitcreds_get")
> ### * gitcreds_get
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gitcreds_get
> ### Title: Query and set git credentials
> ### Aliases: gitcreds_get gitcreds gitcreds_set gitcreds_delete
> ###   gitcreds_list_helpers
> 
> ### ** Examples
> 
> ## Not run: 
> ##D gitcreds_get()
> ##D gitcreds_get("https://github.com")
> ##D gitcreds_get("https://myuser@github.com/myorg/myrepo")
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.063 0.007 0.069 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
