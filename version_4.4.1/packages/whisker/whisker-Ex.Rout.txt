
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "whisker"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('whisker')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("iteratelist")
> ### * iteratelist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: iteratelist
> ### Title: Create an iteration list from a R object
> ### Aliases: iteratelist
> 
> ### ** Examples
> 
> # create an iteration list from a named vector
> x <- c(a=1, b=2)
> iteratelist(x)
[[1]]
[[1]]$name
[1] "a"

[[1]]$value
[1] 1


[[2]]
[[2]]$name
[1] "b"

[[2]]$value
[1] 2


> 
> # iterate over the members of a list
> x <- list(name="John", age="30", gender="male")
> iteratelist(x, name="variable") 
[[1]]
[[1]]$variable
[1] "name"

[[1]]$value
[1] "John"


[[2]]
[[2]]$variable
[1] "age"

[[2]]$value
[1] "30"


[[3]]
[[3]]$variable
[1] "gender"

[[3]]$value
[1] "male"


> 
> # iterate over an unnamed vector
> values <- c(1,2,3,4)
> 
> template <- 
+ '{{#values}}
+ * Value: {{.}}
+ {{/values}}'
> 
> whisker.render(template)
[1] "* Value: 1\n* Value: 2\n* Value: 3\n* Value: 4\n"
> 
> #or 
> 
> values <- iteratelist(values, value="count")
> 
> template <- 
+ '{{#values}}
+ * Value: {{count}}
+ {{/values}}'
> 
> whisker.render(template)
[1] "* Value: 1\n* Value: 2\n* Value: 3\n* Value: 4\n"
> 
> 
> 
> cleanEx()
> nameEx("rowSplit")
> ### * rowSplit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rowSplit
> ### Title: Split a data.frame or matrix into rows
> ### Aliases: rowSplit
> 
> ### ** Examples
> 
> dat <- head(InsectSprays)
> dat <- unname(rowSplit(dat))
> 
> template <- 
+ "{{#dat}}
+ count: {{count}}, spray: {{spray}}\n
+ {{/dat}}"
> 
> whisker.render(template)
[1] "count: 10, spray: A\n\ncount: 7, spray: A\n\ncount: 20, spray: A\n\ncount: 14, spray: A\n\ncount: 14, spray: A\n\ncount: 12, spray: A\n\n"
> 
> 
> 
> cleanEx()
> nameEx("whisker-package")
> ### * whisker-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: whisker-package
> ### Title: Mustache for R
> ### Aliases: whisker-package
> 
> ### ** Examples
> 
> template <- 
+ 'Hello {{name}}
+ You have just won ${{value}}!
+ {{#in_ca}}
+ Well, ${{taxed_value}}, after taxes.
+ {{/in_ca}}'
> 
> data <- list( name = "Chris"
+             , value = 10000
+             , taxed_value = 10000 - (10000 * 0.4)
+             , in_ca = TRUE
+             )
> 
> whisker.render(template, data)
[1] "Hello Chris\nYou have just won $10000!\nWell, $6000, after taxes.\n"
> 
> 
> 
> 
> base <-
+ '<h2>Names</h2>
+ {{#names}}
+   {{> user}}
+ {{/names}}'
> 
> user <- '<strong>{{name}}</strong>'
> 
> names <- list(list(name="Alice"), list(name="Bob"))
> 
> whisker.render(base, partials=list(user=user))
[1] "<h2>Names</h2>\n  <strong>Alice</strong>  <strong>Bob</strong>"
> 
> 
> 
> 
> cleanEx()
> nameEx("whisker.render")
> ### * whisker.render
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: whisker.render
> ### Title: Logicless templating
> ### Aliases: whisker.render
> 
> ### ** Examples
> 
> template <- "Hello {{place}}!"
> place <- "World"
> 
> whisker.render(template)
[1] "Hello World!"
> 
> # to prevent html escaping use triple {{{}}}
> template <- 
+   "I'm escaped: {{name}}
+ And I'm not: {{{name}}}"
> 
> data <- list( name = '<My Name="Nescio&">')
> whisker.render(template, data)
[1] "I'm escaped: &lt;My Name=&quot;Nescio&amp;&quot;&gt;\nAnd I'm not: <My Name=\"Nescio&\">"
> # I'm escaped: &lt;My Name=&quot;Nescio&amp;&quot;&gt;
> # And I'm not: <My Name="Nescio&">
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.074 0.009 0.084 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
