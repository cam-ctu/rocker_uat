
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "webshot"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('webshot')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("appshot")
> ### * appshot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: appshot
> ### Title: Take a screenshot of a Shiny app
> ### Aliases: appshot appshot.character appshot.shiny.appobj
> 
> ### ** Examples
> 
> if (interactive()) {
+   appdir <- system.file("examples", "01_hello", package="shiny")
+ 
+   # With a Shiny directory
+   appshot(appdir, "01_hello.png")
+ 
+   # With a Shiny App object
+   shinyapp <- shiny::shinyAppDir(appdir)
+   appshot(shinyapp, "01_hello_app.png")
+ }
> 
> 
> 
> 
> cleanEx()
> nameEx("resize")
> ### * resize
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: resize
> ### Title: Resize an image
> ### Aliases: resize
> 
> ### ** Examples
> 
> if (interactive()) {
+   # Can be chained with webshot() or appshot()
+   webshot("https://www.r-project.org/", "r-small-1.png") %>%
+     resize("75%")
+ 
+   # Generate image that is 400 pixels wide
+   webshot("https://www.r-project.org/", "r-small-2.png") %>%
+     resize("400x")
+ }
> 
> 
> 
> cleanEx()
> nameEx("rmdshot")
> ### * rmdshot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rmdshot
> ### Title: Take a snapshot of an R Markdown document
> ### Aliases: rmdshot
> 
> ### ** Examples
> 
> if (interactive()) {
+   # rmdshot("rmarkdown_file.Rmd", "snapshot.png")
+ 
+   # R Markdown file
+   input_file <- system.file("examples/knitr-minimal.Rmd", package = "knitr")
+   rmdshot(input_file, "minimal_rmd.png")
+ 
+   # Shiny R Markdown file
+   input_file <- system.file("examples/shiny.Rmd", package = "webshot")
+   rmdshot(input_file, "shiny_rmd.png", delay = 5)
+ }
> 
> 
> 
> 
> cleanEx()
> nameEx("shrink")
> ### * shrink
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: shrink
> ### Title: Shrink file size of a PNG
> ### Aliases: shrink
> 
> ### ** Examples
> 
> if (interactive()) {
+   webshot("https://www.r-project.org/", "r-shrink.png") %>%
+     shrink()
+ }
> 
> 
> 
> cleanEx()
> nameEx("webshot")
> ### * webshot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: webshot
> ### Title: Take a screenshot of a URL
> ### Aliases: webshot
> 
> ### ** Examples
> 
> if (interactive()) {
+ 
+ # Whole web page
+ webshot("https://github.com/rstudio/shiny")
+ 
+ # Might need a longer delay for all assets to display
+ webshot("http://rstudio.github.io/leaflet", delay = 0.5)
+ 
+ # One can also take screenshots of several URLs with only one command.
+ # This is more efficient than calling 'webshot' multiple times.
+ webshot(c("https://github.com/rstudio/shiny",
+           "http://rstudio.github.io/leaflet"),
+         delay = 0.5)
+ 
+ # Clip to the viewport
+ webshot("http://rstudio.github.io/leaflet", "leaflet-viewport.png",
+         cliprect = "viewport")
+ 
+ # Manual clipping rectangle
+ webshot("http://rstudio.github.io/leaflet", "leaflet-clip.png",
+         cliprect = c(200, 5, 400, 300))
+ 
+ # Using CSS selectors to pick out regions
+ webshot("http://rstudio.github.io/leaflet", "leaflet-menu.png", selector = ".list-group")
+ webshot("http://reddit.com/", "reddit-top.png",
+         selector = c("input[type='text']", "#header-bottom-left"))
+ 
+ # Expand selection region
+ webshot("http://rstudio.github.io/leaflet", "leaflet-boxes.png",
+         selector = "#installation", expand = c(10, 50, 0, 50))
+ 
+ # If multiple matches for a given selector, it uses the first match
+ webshot("http://rstudio.github.io/leaflet", "leaflet-p.png", selector = "p")
+ webshot("https://github.com/rstudio/shiny/", "shiny-stats.png",
+          selector = "ul.numbers-summary")
+ 
+ # Send commands to eval
+ webshot("http://www.reddit.com/", "reddit-input.png",
+   selector = c("#search", "#login_login-main"),
+   eval = "casper.then(function() {
+     // Check the remember me box
+     this.click('#rem-login-main');
+     // Enter username and password
+     this.sendKeys('#login_login-main input[type=\"text\"]', 'my_username');
+     this.sendKeys('#login_login-main input[type=\"password\"]', 'password');
+ 
+     // Now click in the search box. This results in a box expanding below
+     this.click('#search input[type=\"text\"]');
+     // Wait 500ms
+     this.wait(500);
+   });"
+ )
+ 
+ # Result can be piped to other commands like resize() and shrink()
+ webshot("https://www.r-project.org/", "r-small.png") %>%
+  resize("75%") %>%
+  shrink()
+ 
+ # Requests can change the User-Agent header
+ webshot(
+   "https://www.rstudio.com/products/rstudio/download/",
+   "rstudio.png",
+   useragent = "Mozilla/5.0 (Macintosh; Intel Mac OS X)"
+ )
+ 
+ # See more examples in the package vignette
+ }
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.063 0.011 0.074 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
