{
  "hash": "27cf850a5dfcf60b78a1af6c812f1bc4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"future\"\nlisting:\n  contents:\n    - \"future/*.Rout\"\n    - \"future/**/*.Rout\"\n  type: table\n  fields: \n    - filename\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl <- download.packages(\"future\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/future\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/future/empty_output.Rout\")\nout <- test_pkg(\"future\", outDir=\"packages/future\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTesting examples for package 'future'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nchecks for tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDOing the tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRunning specific tests for package 'future'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running '000.sessionDetails.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'adhoc_native_to_utf8.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'backtrace.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'bquote.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'capture_journals.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'cluster-missing-future-pkg.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'cluster,worker-termination.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'cluster.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'ClusterRegistry.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'constant.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'demo.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'dotdotdot.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'early-signaling.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'Future-class.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'future,labels.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'future,optsenvvars.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'future.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureAssign_OP_with_environment.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureAssign_OP_with_listenv.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureAssign_OP.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureAssign.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureCall.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'FutureError.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'FutureGlobals.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureOf_with_environment.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureOf_with_listenv.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureOf.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'FutureRegistry.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futures.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'futureSessionInfo.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,formulas.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,locals.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,manual.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,NSE.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,resolve.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,S4methods.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,subassignment.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,toolarge.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,tricky_recursive.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globals,tricky.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'globalsOf,tweaks.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'immediateCondition.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'invalid-owner.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'mandelbrot.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'mpi.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'multicore,multithreading.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'multicore,worker-termination.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'multicore.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'multisession.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'nbrOfWorkers.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'nested_futures,mc.cores.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'nested_futures.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'non-exportable,connections.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'objectSize.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'plan.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'relaying,muffle.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'relaying,split.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'relaying.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'requestCore.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'requestNode.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'reserved-keyword-functions.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'resolve.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'resolved-non-blocking-test.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'rng_utils.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'rng.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'sequential.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'sessionDetails.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'startup.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'stdout.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'tweak.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'utils.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'uuid.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'whichIndex.R'\n```\n\n\n:::\n\n```{.r .cell-code}\n#needs rms installed to pass tests\nedit_log(\"future\", out)\n```\n:::\n\n\n# Output Files\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}