{
  "hash": "bd16a745a4a1c9ec87cabb8688fa59fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ordinal\"\nlisting:\n  contents:\n    - \"ordinal/*.Rout\"\n    - \"ordinal/**/*.Rout\"\n  type: table\n  fields: \n    - filename\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl <- download.packages(\"ordinal\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/ordinal\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/ordinal/empty_output.Rout\")\nout <- test_pkg(\"ordinal\", outDir=\"packages/ordinal\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTesting examples for package 'ordinal'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nchecks for tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDOing the tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRunning specific tests for package 'ordinal'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'anova.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clm.fit.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clm.formula.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clmm.control.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clmm.formula.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clmm.methods.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'clmm.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'confint.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'nominal.test.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'ranef.loading.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test-all.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.convergence.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.flex.link.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.model.matrix.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.predict.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.profile.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.single.anova.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.clm.Theta.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.general.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.makeThresholds.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test.sign.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test0weights.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'testAnova.clm2.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'testCLM.R'\n```\n\n\n:::\n\n```{.r .cell-code}\n#needs rms installed to pass tests\nedit_log(\"ordinal\", out)\n```\n:::\n\n\n# Output Files\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}