{
  "hash": "47274cec1b1fd32df445cdf975ecba56",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"backports\"\nlisting:\n  contents:\n    - \"backports/*.Rout\"\n    - \"backports/**/*.Rout\"\n  type: table\n  fields: \n    - filename\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"test_pkg.R\")\nsource(\"edit_log.R\")\n# to ensure that the lsiting doesn't fail.\n\n\ndl <- download.packages(\"backports\", destdir=\"packages\",type=\"source\",\n                        method=\"wget\")# wget was what solved this.. was getting binary versions\n\n\nunlink(\"packages/backports\")\nuntar(dl[,2], exdir = \"packages\", restore_times=FALSE)\nwriteLines(\"empty placeholder file\",\"packages/backports/empty_output.Rout\")\nout <- test_pkg(\"backports\", outDir=\"packages/backports\", test_path=\"tests\",\n                   types=c(\"examples\",\"tests\")\n                   )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTesting examples for package 'backports'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nchecks for tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDOing the tests\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRunning specific tests for package 'backports'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_anyNA.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_asplit.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_capture.output.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_deparse1.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dir.exists.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dotlibPaths.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dotsElt.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dotsLength.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dotsNames.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_dQuote.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_file.info.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_file.mode.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_file.mtime.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_file.size.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_get0.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_hasName.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_isFALSE.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_isNamespaceLoaded.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_isTRUE.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_lengths.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_list2DF.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_null_coalesce.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_paste.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_R_user_dir.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_Rconcordance.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_removeSource.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_startsWith.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_stopifnot.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_str2expression.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_str2lang.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_strrep.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_suppressWarnings.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_trimws.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_URLencode.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_valid.factor.R'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Running 'test_warningCondition.R'\n```\n\n\n:::\n\n```{.r .cell-code}\n#needs rms installed to pass tests\nedit_log(\"backports\", out)\n```\n:::\n\n\n# Output Files\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}