
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### Regression and other checks for 'make check-devel' but *not* for 'make check'
> 
> ## PR#18555: dummy_fgetc() returning EOF if the connection has an encoding specified
> 
> # try to find an available port
> port <- NULL
> for(p in round(runif(100, 27000, 28000))) {
+   sock <- tryCatch(serverSocket(p), error= function(e) NULL)
+   if (!is.null(sock)) {
+     port <- p
+     break
+   }
+ }
> stopifnot(!is.null(port))
> 
> outgoing <- socketConnection("localhost", port)
> incoming <- socketAccept(sock, encoding="UTF-8")
> close(sock)
> r <- readLines(incoming, 1) # sets EOF_signalled
> stopifnot(identical(r, character(0)))
> writeLines("hello", outgoing)
> close(outgoing)
> r <- readLines(incoming, 1) # due to EOF_signalled, readLines() didn't realize
>                             # that more data became available
> while(isIncomplete(incoming)) {
+   socketSelect(list(incoming))
+   r <- readLines(incoming, 1)
+ }
> close(incoming)
> stopifnot(identical(r, "hello")) # r was character(0) in error
> 
> proc.time()
   user  system elapsed 
  0.216   0.294   0.174 
> 
