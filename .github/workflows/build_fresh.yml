name: Build and Deploy
on:
  push:
    branches:
      - "master"
    paths:
      - "versions/versions.json"
  workflow_dispatch:
permissions:
  contents: write
jobs:
  
  generate_matrix:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.1.4
      - id: set-json
        run: |
          JSON=versions/versions.json
          if [[ "${{ github.event_name }}" == "push" ]]; then
            JSON=versions/change_versions.json
          fi
          echo "json=${JSON}" >>"$GITHUB_OUTPUT"
          echo ${JSON}
      - id: set-matrix
        run: |
          CONTENT=$(jq -r '{ version: [.version[] ] } | tostring' ${{ steps.set-json.outputs.json }})
          echo "matrix=${CONTENT}" >>"$GITHUB_OUTPUT"
          echo "${CONTENT}"


  build-and-deploy:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    container:
      image: shug0131/cctu:${{ matrix.version }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        
      - name: run build
        run: Rscript -e 'source("build.R")'
      - name: add system libraries 
        run: |
          add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          apt-get update
          apt-get -y install libudunits2-dev libudunits2-dev libgdal-dev
          apt-get -y install libgeos-dev libproj-dev libsqlite0-dev libmysqlclient-dev
          apt-get -y install libpq libpq-dev libpng
      - name: Build site
        run: |
          quarto render --profile github

      - name: Deploy ðŸš€
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          destination_dir: version_${{ matrix.version }}
