
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## For examples skipped in testing because they are 'random'
> 
> set.seed(1)
> if(.Platform$OS.type == "windows") options(pager = "console")
> 
> pdf("reg-examples-1.pdf", encoding = "ISOLatin1.enc")
> 
> 
> ## base
> example(Cstack_info, run.donttest = TRUE)

Cstck_> ## No test: 
Cstck_> Cstack_info()
      size    current  direction eval_depth 
  15938355      32144          1          9 

Cstck_> ## End(No test)
Cstck_> 
Cstck_> 
> example(DateTimeClasses, run.donttest = TRUE)

DtTmCl> ## IGNORE_RDIFF_BEGIN
DtTmCl> (z <- Sys.time())             # the current date, as class "POSIXct"
[1] "2024-12-21 11:34:52 UTC"

DtTmCl> Sys.time() - 3600             # an hour ago
[1] "2024-12-21 10:34:52 UTC"

DtTmCl> as.POSIXlt(Sys.time(), "GMT") # the current time in GMT
[1] "2024-12-21 11:34:52 GMT"

DtTmCl> format(.leap.seconds)         # the leap seconds in your time zone
 [1] "1972-07-01" "1973-01-01" "1974-01-01" "1975-01-01" "1976-01-01"
 [6] "1977-01-01" "1978-01-01" "1979-01-01" "1980-01-01" "1981-07-01"
[11] "1982-07-01" "1983-07-01" "1985-07-01" "1988-01-01" "1990-01-01"
[16] "1991-01-01" "1992-07-01" "1993-07-01" "1994-07-01" "1996-01-01"
[21] "1997-07-01" "1999-01-01" "2006-01-01" "2009-01-01" "2012-07-01"
[26] "2015-07-01" "2017-01-01"

DtTmCl> print(.leap.seconds, tz = "America/Los_Angeles")  # and in Seattle's
 [1] "1972-06-30 17:00:00 PDT" "1972-12-31 16:00:00 PST"
 [3] "1973-12-31 16:00:00 PST" "1974-12-31 16:00:00 PST"
 [5] "1975-12-31 16:00:00 PST" "1976-12-31 16:00:00 PST"
 [7] "1977-12-31 16:00:00 PST" "1978-12-31 16:00:00 PST"
 [9] "1979-12-31 16:00:00 PST" "1981-06-30 17:00:00 PDT"
[11] "1982-06-30 17:00:00 PDT" "1983-06-30 17:00:00 PDT"
[13] "1985-06-30 17:00:00 PDT" "1987-12-31 16:00:00 PST"
[15] "1989-12-31 16:00:00 PST" "1990-12-31 16:00:00 PST"
[17] "1992-06-30 17:00:00 PDT" "1993-06-30 17:00:00 PDT"
[19] "1994-06-30 17:00:00 PDT" "1995-12-31 16:00:00 PST"
[21] "1997-06-30 17:00:00 PDT" "1998-12-31 16:00:00 PST"
[23] "2005-12-31 16:00:00 PST" "2008-12-31 16:00:00 PST"
[25] "2012-06-30 17:00:00 PDT" "2015-06-30 17:00:00 PDT"
[27] "2016-12-31 16:00:00 PST"

DtTmCl> ## IGNORE_RDIFF_END
DtTmCl> 
DtTmCl> ## look at *internal* representation of "POSIXlt" :
DtTmCl> leapS <- as.POSIXlt(.leap.seconds)

DtTmCl> names(unclass(leapS)) ; is.list(leapS)
 [1] "sec"    "min"    "hour"   "mday"   "mon"    "year"   "wday"   "yday"  
 [9] "isdst"  "zone"   "gmtoff"
[1] TRUE

DtTmCl> ## str() on inner structure needs unclass(.):
DtTmCl> utils::str(unclass(leapS), vec.len = 7)
List of 11
 $ sec   : num [1:27] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
 $ min   : int [1:27] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
 $ hour  : int [1:27] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
 $ mday  : int [1:27] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
 $ mon   : int [1:27] 6 0 0 0 0 0 0 0 0 6 6 6 6 0 0 0 6 6 ...
 $ year  : int [1:27] 72 73 74 75 76 77 78 79 80 81 82 83 85 88 90 91 92 93 ...
 $ wday  : int [1:27] 6 1 2 3 4 6 0 1 2 3 4 5 1 5 1 2 3 4 ...
 $ yday  : int [1:27] 182 0 0 0 0 0 0 0 0 181 181 181 181 0 0 0 182 181 ...
 $ isdst : int [1:27] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
 $ zone  : chr [1:27] "GMT" "GMT" "GMT" "GMT" "GMT" "GMT" "GMT" ...
 $ gmtoff: int [1:27] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
 - attr(*, "tzone")= chr "GMT"
 - attr(*, "balanced")= logi TRUE

DtTmCl> ## show all (apart from "tzone" attr):
DtTmCl> data.frame(unclass(leapS))
   sec min hour mday mon year wday yday isdst zone gmtoff
1    0   0    0    1   6   72    6  182     0  GMT      0
2    0   0    0    1   0   73    1    0     0  GMT      0
3    0   0    0    1   0   74    2    0     0  GMT      0
4    0   0    0    1   0   75    3    0     0  GMT      0
5    0   0    0    1   0   76    4    0     0  GMT      0
6    0   0    0    1   0   77    6    0     0  GMT      0
7    0   0    0    1   0   78    0    0     0  GMT      0
8    0   0    0    1   0   79    1    0     0  GMT      0
9    0   0    0    1   0   80    2    0     0  GMT      0
10   0   0    0    1   6   81    3  181     0  GMT      0
11   0   0    0    1   6   82    4  181     0  GMT      0
12   0   0    0    1   6   83    5  181     0  GMT      0
13   0   0    0    1   6   85    1  181     0  GMT      0
14   0   0    0    1   0   88    5    0     0  GMT      0
15   0   0    0    1   0   90    1    0     0  GMT      0
16   0   0    0    1   0   91    2    0     0  GMT      0
17   0   0    0    1   6   92    3  182     0  GMT      0
18   0   0    0    1   6   93    4  181     0  GMT      0
19   0   0    0    1   6   94    5  181     0  GMT      0
20   0   0    0    1   0   96    1    0     0  GMT      0
21   0   0    0    1   6   97    2  181     0  GMT      0
22   0   0    0    1   0   99    5    0     0  GMT      0
23   0   0    0    1   0  106    0    0     0  GMT      0
24   0   0    0    1   0  109    4    0     0  GMT      0
25   0   0    0    1   6  112    0  182     0  GMT      0
26   0   0    0    1   6  115    3  181     0  GMT      0
27   0   0    0    1   0  117    0    0     0  GMT      0

DtTmCl> ## Extracting *single* components of POSIXlt objects:
DtTmCl> leapS[1 : 5, "year"]
[1] 72 73 74 75 76

DtTmCl> leapS[17:22, "mon" ]
[1] 6 6 6 0 6 0

DtTmCl> ##  length(.) <- n   now works for "POSIXct" and "POSIXlt" :
DtTmCl> for(lpS in list(.leap.seconds, leapS)) {
DtTmCl+     ls <- lpS; length(ls) <- 12
DtTmCl+     l2 <- lpS; length(l2) <- 5 + length(lpS)
DtTmCl+     stopifnot(exprs = {
DtTmCl+       ## length(.) <- * is compatible to subsetting/indexing:
DtTmCl+       identical(ls, lpS[seq_along(ls)])
DtTmCl+       identical(l2, lpS[seq_along(l2)])
DtTmCl+       ## has filled with NA's
DtTmCl+       is.na(l2[(length(lpS)+1):length(l2)])
DtTmCl+     })
DtTmCl+ }
> example(Dates, run.donttest = TRUE)

Dates> ## No test: 
Dates> (today <- Sys.Date())
[1] "2024-12-21"

Dates> format(today, "%d %b %Y")  # with month as a word
[1] "21 Dec 2024"

Dates> (tenweeks <- seq(today, length.out=10, by="1 week")) # next ten weeks
 [1] "2024-12-21" "2024-12-28" "2025-01-04" "2025-01-11" "2025-01-18"
 [6] "2025-01-25" "2025-02-01" "2025-02-08" "2025-02-15" "2025-02-22"

Dates> weekdays(today)
[1] "Saturday"

Dates> months(tenweeks)
 [1] "December" "December" "January"  "January"  "January"  "January" 
 [7] "February" "February" "February" "February"

Dates> ## End(No test)
Dates> (Dls <- as.Date(.leap.seconds))
 [1] "1972-07-01" "1973-01-01" "1974-01-01" "1975-01-01" "1976-01-01"
 [6] "1977-01-01" "1978-01-01" "1979-01-01" "1980-01-01" "1981-07-01"
[11] "1982-07-01" "1983-07-01" "1985-07-01" "1988-01-01" "1990-01-01"
[16] "1991-01-01" "1992-07-01" "1993-07-01" "1994-07-01" "1996-01-01"
[21] "1997-07-01" "1999-01-01" "2006-01-01" "2009-01-01" "2012-07-01"
[26] "2015-07-01" "2017-01-01"

Dates> ## Show use of year zero:
Dates> (z <- as.Date("01-01-01")) # how it is printed depends on the OS
[1] "1-01-01"

Dates> z - 365 # so year zero was a leap year.
[1] "0-01-02"

Dates> as.Date("00-02-29")
[1] "0-02-29"

Dates> # if you want a different format, consider something like (if supported)
Dates> ## Not run: 
Dates> ##D format(z, "%04Y-%m-%d") # "0001-01-01"
Dates> ##D format(z, "%_4Y-%m-%d") # "   1-01-01"
Dates> ##D format(z, "%_Y-%m-%d")  # "1-01-01"
Dates> ## End(Not run)
Dates>  
Dates> 
Dates> ##  length(<Date>) <- n   now works
Dates> ls <- Dls; length(ls) <- 12

Dates> l2 <- Dls; length(l2) <- 5 + length(Dls)

Dates> stopifnot(exprs = {
Dates+   ## length(.) <- * is compatible to subsetting/indexing:
Dates+   identical(ls, Dls[seq_along(ls)])
Dates+   identical(l2, Dls[seq_along(l2)])
Dates+   ## has filled with NA's
Dates+   is.na(l2[(length(Dls)+1):length(l2)])
Dates+ })
> example(Ops.Date, run.donttest = TRUE)

Ops.Dt> ## No test: 
Ops.Dt> (z <- Sys.Date())
[1] "2024-12-21"

Ops.Dt> z + 10
[1] "2024-12-31"

Ops.Dt> z < c("2009-06-01", "2010-01-01", "2015-01-01")
[1] FALSE FALSE FALSE

Ops.Dt> ## End(No test)
Ops.Dt> 
Ops.Dt> 
> example(Random, run.donttest = TRUE)

Random> require(stats)

Random> ## Seed the current RNG, i.e., set the RNG status
Random> set.seed(42); u1 <- runif(30)

Random> set.seed(42); u2 <- runif(30) # the same because of identical RNG status:

Random> stopifnot(identical(u1, u2))

Random> ## No test: 
Random> ## the default random seed is 626 integers, so only print a few
Random>  runif(1); .Random.seed[1:6]; runif(1); .Random.seed[1:6]
[1] 0.7375956
[1]       10403          31 -1577024373  1699409082  1745430460  -928819969
[1] 0.8110551
[1]       10403          32 -1577024373  1699409082  1745430460  -928819969

Random>  ## If there is no seed, a "random" new one is created:
Random>  rm(.Random.seed); runif(1); .Random.seed[1:6]
[1] 0.7021347
[1]       10403           1   540489662 -1469327415   854620027   838708554

Random> ## End(No test)
Random> ok <- RNGkind()

Random> RNGkind("Wich")  # (partial string matching on 'kind')

Random> ## This shows how 'runif(.)' works for Wichmann-Hill,
Random> ## using only R functions:
Random> 
Random> p.WH <- c(30269, 30307, 30323)

Random> a.WH <- c(  171,   172,   170)

Random> next.WHseed <- function(i.seed = .Random.seed[-1])
Random+   { (a.WH * i.seed) %% p.WH }

Random> my.runif1 <- function(i.seed = .Random.seed)
Random+   { ns <- next.WHseed(i.seed[-1]); sum(ns / p.WH) %% 1 }

Random> set.seed(1998-12-04)# (when the next lines were added to the souRce)

Random> rs <- .Random.seed

Random> (WHs <- next.WHseed(rs[-1]))
[1] 16476 24419 11857

Random> u <- runif(1)

Random> stopifnot(
Random+  next.WHseed(rs[-1]) == .Random.seed[-1],
Random+  all.equal(u, my.runif1(rs))
Random+ )

Random> ## ----
Random> .Random.seed
[1] 10400 16476 24419 11857

Random> RNGkind("Super") # matches  "Super-Duper"

Random> RNGkind()
[1] "Super-Duper" "Inversion"   "Rejection"  

Random> .Random.seed # new, corresponding to  Super-Duper
[1]      10402   47619480 -915084615

Random> ## Reset:
Random> RNGkind(ok[1])

Random> RNGversion(getRversion()) # the default version for this R version

Random> ## ----
Random> sum(duplicated(runif(1e6))) # around 110 for default generator
[1] 103

Random> ## and we would expect about almost sure duplicates beyond about
Random> qbirthday(1 - 1e-6, classes = 2e9) # 235,000
[1] 235075
> writeLines(formatDL(Sys.getenv(), style = "list")) # from formatDL.Rd
BIBINPUTS: .:/usr/local/lib/R/share/texmf/bibtex/bib:
BSTINPUTS: .:/usr/local/lib/R/share/texmf/bibtex/bst:
CCTU_VERSION: 0.8.1
CI: true
CRAN: https://p3m.dev/cran/__linux__/noble/latest
CTAN_REPO: https://mirror.ctan.org/systems/texlive/tlnet
DEFAULT_USER: rstudio
DENO_DOM_PLUGIN:
        /usr/lib/rstudio-server/bin/quarto/bin/tools/x86_64/deno_dom/libplugin.so
DENO_NO_UPDATE_CHECK: 1
DENO_TLS_CA_STORE: system,mozilla
EDITOR: vi
GITHUB_ACTION: __run_2
GITHUB_ACTIONS: true
GITHUB_ACTION_REF:
GITHUB_ACTION_REPOSITORY:
GITHUB_ACTOR: shug0131
GITHUB_ACTOR_ID: 11960975
GITHUB_API_URL: https://api.github.com
GITHUB_BASE_REF:
GITHUB_ENV:
        /__w/_temp/_runner_file_commands/set_env_6c1bb98e-9f32-4786-bc30-d730ae7fb255
GITHUB_EVENT_NAME: push
GITHUB_EVENT_PATH: /github/workflow/event.json
GITHUB_GRAPHQL_URL: https://api.github.com/graphql
GITHUB_HEAD_REF:
GITHUB_JOB: build-and-deploy
GITHUB_OUTPUT:
        /__w/_temp/_runner_file_commands/set_output_6c1bb98e-9f32-4786-bc30-d730ae7fb255
GITHUB_PATH:
        /__w/_temp/_runner_file_commands/add_path_6c1bb98e-9f32-4786-bc30-d730ae7fb255
GITHUB_REF: refs/heads/master
GITHUB_REF_NAME: master
GITHUB_REF_PROTECTED: false
GITHUB_REF_TYPE: branch
GITHUB_REPOSITORY: cam-ctu/rocker_uat
GITHUB_REPOSITORY_ID: 891627361
GITHUB_REPOSITORY_OWNER: cam-ctu
GITHUB_REPOSITORY_OWNER_ID: 164901318
GITHUB_RETENTION_DAYS: 90
GITHUB_RUN_ATTEMPT: 1
GITHUB_RUN_ID: 12444431058
GITHUB_RUN_NUMBER: 15
GITHUB_SERVER_URL: https://github.com
GITHUB_SHA: 1bcec8430495e28c373035794d0c4c9b42f257ea
GITHUB_STATE:
        /__w/_temp/_runner_file_commands/save_state_6c1bb98e-9f32-4786-bc30-d730ae7fb255
GITHUB_STEP_SUMMARY:
        /__w/_temp/_runner_file_commands/step_summary_6c1bb98e-9f32-4786-bc30-d730ae7fb255
GITHUB_TRIGGERING_ACTOR: shug0131
GITHUB_WORKFLOW: Build and Deploy
GITHUB_WORKFLOW_REF:
        cam-ctu/rocker_uat/.github/workflows/build_fresh.yml@refs/heads/master
GITHUB_WORKFLOW_SHA: 1bcec8430495e28c373035794d0c4c9b42f257ea
GITHUB_WORKSPACE: /__w/rocker_uat/rocker_uat
HOME: /github/home
HOSTNAME: 5fdf00facdc7
LANG: en_US.UTF-8
LANGUAGE: en
LC_ALL: C
LC_COLLATE: C
LC_TIME: C
LD_LIBRARY_PATH:
        /usr/local/lib/R/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-21-openjdk-amd64/lib/server:/usr/local/lib/R/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-21-openjdk-amd64/lib/server:/usr/local/lib/R/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-21-openjdk-amd64/lib/server
LN_S: ln -s
MAKE: make
PAGER: /usr/bin/pager
PATH:
        /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/texlive/bin/linux:/usr/local/texlive/bin/linux/
PWD: /usr/local/lib/R/tests
QUARTO_BIN_PATH: /usr/lib/rstudio-server/bin/quarto/bin
QUARTO_DENO: /usr/lib/rstudio-server/bin/quarto/bin/tools/x86_64/deno
QUARTO_DOCUMENT_PATH: /__w/rocker_uat/rocker_uat
QUARTO_FILTER_DEPENDENCY_FILE:
        /tmp/quarto-sessionea1d1894dd9f0a0d/df30f1e0f5201a82/34924dda9bd4014e
QUARTO_PROFILE: github
QUARTO_PROJECT_DIR: /__w/rocker_uat/rocker_uat
QUARTO_PROJECT_ROOT: /__w/rocker_uat/rocker_uat
QUARTO_ROOT: /usr/lib/rstudio-server
QUARTO_SHARE_PATH: /usr/lib/rstudio-server/bin/quarto/share
RSTUDIO_VERSION: 2024.12.0+467
RUNNER_ARCH: X64
RUNNER_ENVIRONMENT: github-hosted
RUNNER_NAME: GitHub Actions 9
RUNNER_OS: Linux
RUNNER_TEMP: /__w/_temp
RUNNER_TOOL_CACHE: /__t
RUNNER_WORKSPACE: /__w/rocker_uat
R_ARCH:
R_BROWSER: xdg-open
R_BZIPCMD: /usr/bin/bzip2
R_CMD: /usr/local/lib/R/bin/Rcmd
R_DEFAULT_PACKAGES:
R_DOC_DIR: /usr/local/lib/R/doc
R_ENVIRON:
R_ENVIRON_USER:
R_GZIPCMD: /usr/bin/gzip
R_HOME: /usr/local/lib/R
R_INCLUDE_DIR: /usr/local/lib/R/include
R_LIBS: /usr/local/lib/R/site-library:/usr/local/lib/R/library
R_LIBS_SITE: /usr/local/lib/R/site-library
R_LIBS_USER: /github/home/R/x86_64-pc-linux-gnu-library/4.4
R_OSTYPE: unix
R_PAPERSIZE: letter
R_PAPERSIZE_USER: letter
R_PDFVIEWER: /usr/bin/xdg-open
R_PLATFORM: x86_64-pc-linux-gnu
R_PRINTCMD: /usr/bin/lpr
R_PROFILE:
R_PROFILE_USER:
R_RD4PDF: times,inconsolata,hyper
R_SESSION_TMPDIR: /tmp/RtmpuP1TfW
R_SHARE_DIR: /usr/local/lib/R/share
R_STRIP_SHARED_LIB: strip --strip-unneeded
R_STRIP_STATIC_LIB: strip --strip-debug
R_TEXI2DVICMD: /usr/bin/texi2dvi
R_UNZIPCMD: /usr/bin/unzip
R_VERSION: 4.4.2
R_ZIPCMD: /usr/bin/zip
S6_VERSION: v2.1.0.2
SED: /usr/bin/sed
SHLVL: 1
SRCDIR: .
TAR: /usr/bin/tar
TEXINPUTS: .:/usr/local/lib/R/share/texmf/tex/latex:
TZ: Etc/UTC
> example(Sys.getpid, run.donttest = TRUE)

Sys.gt> ## No test: 
Sys.gt> Sys.getpid()
[1] 69980

Sys.gt> ## Show files opened from this R process
Sys.gt> if(.Platform$OS.type == "unix") ## on Unix-alikes such Linux, macOS, FreeBSD:
Sys.gt+    system(paste("lsof -p", Sys.getpid()))
sh: 1: lsof: not found

Sys.gt> ## End(No test)
Sys.gt> 
Sys.gt> 
Warning message:
In system(paste("lsof -p", Sys.getpid())) : error in running command
> example(Sys.sleep, run.donttest = TRUE)

Sys.sl> ## No test: 
Sys.sl> testit <- function(x)
Sys.sl+ {
Sys.sl+     p1 <- proc.time()
Sys.sl+     Sys.sleep(x)
Sys.sl+     proc.time() - p1 # The cpu usage should be negligible
Sys.sl+ }

Sys.sl> testit(3.7)
   user  system elapsed 
  0.000   0.000   3.704 

Sys.sl> ## End(No test)
Sys.sl> 
Sys.sl> 
> example(Sys.time, run.donttest = TRUE)

Sys.tm> ## No test: 
Sys.tm> Sys.time()
[1] "2024-12-21 11:34:56 UTC"

Sys.tm> ## print with possibly greater accuracy:
Sys.tm> op <- options(digits.secs = 6)

Sys.tm> Sys.time()
[1] "2024-12-21 11:34:56.110404 UTC"

Sys.tm> options(op)

Sys.tm> ## locale-specific version of date()
Sys.tm> format(Sys.time(), "%a %b %d %X %Y")
[1] "Sat Dec 21 11:34:56 2024"

Sys.tm> Sys.Date()
[1] "2024-12-21"

Sys.tm> ## End(No test)
Sys.tm> 
Sys.tm> 
> example(as.POSIXlt, run.donttest = TRUE)

a.POSI> ## No test: 
a.POSI> (z <- Sys.time())             # the current datetime, as class "POSIXct"
[1] "2024-12-21 11:34:56 UTC"

a.POSI> unclass(z)                    # a large integer
[1] 1734780896

a.POSI> floor(unclass(z)/86400)       # the number of days since 1970-01-01 (UTC)
[1] 20078

a.POSI> (now <- as.POSIXlt(Sys.time())) # the current datetime, as class "POSIXlt"
[1] "2024-12-21 11:34:56 UTC"

a.POSI> str(unclass(now))             # the internal list ; use now$hour, etc :
List of 11
 $ sec   : num 56.1
 $ min   : int 34
 $ hour  : int 11
 $ mday  : int 21
 $ mon   : int 11
 $ year  : int 124
 $ wday  : int 6
 $ yday  : int 355
 $ isdst : int 0
 $ zone  : chr "UTC"
 $ gmtoff: int 0
 - attr(*, "tzone")= chr [1:3] "Etc/UTC" "UTC" "UTC"
 - attr(*, "balanced")= logi TRUE

a.POSI> now$year + 1900               # see ?DateTimeClasses
[1] 2024

a.POSI> months(now); weekdays(now)    # see ?months; using LC_TIME locale
[1] "December"
[1] "Saturday"

a.POSI> ## suppose we have a time in seconds since 1960-01-01 00:00:00 GMT
a.POSI> ## (the origin used by SAS)
a.POSI> z <- 1472562988

a.POSI> # ways to convert this
a.POSI> as.POSIXct(z, origin = "1960-01-01")                # local
[1] "2006-08-30 13:16:28 UTC"

a.POSI> as.POSIXct(z, origin = "1960-01-01", tz = "GMT")    # in UTC
[1] "2006-08-30 13:16:28 GMT"

a.POSI> ## SPSS dates (R-help 2006-02-16)
a.POSI> z <- c(10485849600, 10477641600, 10561104000, 10562745600)

a.POSI> as.Date(as.POSIXct(z, origin = "1582-10-14", tz = "GMT"))
[1] "1915-01-26" "1914-10-23" "1917-06-15" "1917-07-04"

a.POSI> ## Stata date-times: milliseconds since 1960-01-01 00:00:00 GMT
a.POSI> ## format %tc excludes leap-seconds, assumed here
a.POSI> ## For format %tC including leap seconds, see foreign::read.dta()
a.POSI> z <- 1579598122120

a.POSI> op <- options(digits.secs = 3)

a.POSI> # avoid rounding down: milliseconds are not exactly representable
a.POSI> as.POSIXct((z+0.1)/1000, origin = "1960-01-01")
[1] "2010-01-20 09:15:22.120 UTC"

a.POSI> options(op)

a.POSI> ## Matlab 'serial day number' (days and fractional days)
a.POSI> z <- 7.343736909722223e5 # 2010-08-23 16:35:00

a.POSI> as.POSIXct((z - 719529)*86400, origin = "1970-01-01", tz = "UTC")
[1] "2010-08-23 16:35:00 UTC"

a.POSI> as.POSIXlt(Sys.time(), "GMT") # the current time in UTC
[1] "2024-12-21 11:34:56 GMT"

a.POSI> ## End(No test)
a.POSI> ## No test: 
a.POSI> ## These may not be correct names on your system
a.POSI> as.POSIXlt(Sys.time(), "America/New_York")  # in New York
[1] "2024-12-21 06:34:56 EST"

a.POSI> as.POSIXlt(Sys.time(), "EST5EDT")           # alternative.
[1] "2024-12-21 06:34:56 EST"

a.POSI> as.POSIXlt(Sys.time(), "EST" )   # somewhere in Eastern Canada
[1] "2024-12-21 06:34:56 EST"

a.POSI> as.POSIXlt(Sys.time(), "HST")    # in Hawaii
[1] "2024-12-21 01:34:56 HST"

a.POSI> as.POSIXlt(Sys.time(), "Australia/Darwin")
[1] "2024-12-21 21:04:56 ACST"

a.POSI> ## End(No test)
a.POSI> 
a.POSI> tab <- file.path(R.home("share"), "zoneinfo", "zone1970.tab")

a.POSI> if(file.exists(tab)) { # typically on Windows; *not* on Linux
a.POSI+   cols <- c("code", "coordinates", "TZ", "comments")
a.POSI+   tmp <- read.delim(tab,
a.POSI+                     header = FALSE, comment.char = "#", col.names = cols)
a.POSI+   if(interactive()) View(tmp)
a.POSI+   head(tmp, 10)
a.POSI+ }
> example(difftime, run.donttest = TRUE)

difftm> ## No test: 
difftm> (z <- Sys.time() - 3600)
[1] "2024-12-21 10:34:56 UTC"

difftm> Sys.time() - z                # just over 3600 seconds.
Time difference of 1 hours

difftm> ## time interval between release days of R 1.2.2 and 1.2.3.
difftm> ISOdate(2001, 4, 26) - ISOdate(2001, 2, 26)
Time difference of 59 days

difftm> as.difftime(c("0:3:20", "11:23:15"))
Time differences in mins
[1]   3.333333 683.250000

difftm> as.difftime(c("3:20", "23:15", "2:"), format = "%H:%M") # 3rd gives NA
Time differences in hours
[1]  3.333333 23.250000        NA

difftm> (z <- as.difftime(c(0,30,60), units = "mins"))
Time differences in mins
[1]  0 30 60

difftm> as.numeric(z, units = "secs")
[1]    0 1800 3600

difftm> as.numeric(z, units = "hours")
[1] 0.0 0.5 1.0

difftm> format(z)
[1] " 0 mins" "30 mins" "60 mins"

difftm> ## End(No test)
difftm> 
difftm> 
> example(format.Date, run.donttest = TRUE)

frmt.D> ## No test: 
frmt.D> ## locale-specific version of the date
frmt.D> format(Sys.Date(), "%a %b %d")
[1] "Sat Dec 21"

frmt.D> ## End(No test)
frmt.D> 
frmt.D> ## read in date info in format 'ddmmmyyyy'
frmt.D> ## This will give NA(s) in some locales; setting the C locale
frmt.D> ## as in the commented lines will overcome this on most systems.
frmt.D> ## lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
frmt.D> x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")

frmt.D> z <- as.Date(x, "%d%b%Y")

frmt.D> ## Sys.setlocale("LC_TIME", lct)
frmt.D> z
[1] "1960-01-01" "1960-01-02" "1960-03-31" "1960-07-30"

frmt.D> ## read in date/time info in format 'm/d/y'
frmt.D> dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")

frmt.D> as.Date(dates, "%m/%d/%y")
[1] "1992-02-27" "1992-02-27" "1992-01-14" "1992-02-28" "1992-02-01"

frmt.D> ## date given as number of days since 1900-01-01 (a date in 1989)
frmt.D> as.Date(32768, origin = "1900-01-01")
[1] "1989-09-19"

frmt.D> ## Excel is said to use 1900-01-01 as day 1 (Windows default) or
frmt.D> ## 1904-01-01 as day 0 (Mac default), but this is complicated by Excel
frmt.D> ## incorrectly treating 1900 as a leap year.
frmt.D> ## So for dates (post-1901) from Windows Excel
frmt.D> as.Date(35981, origin = "1899-12-30") # 1998-07-05
[1] "1998-07-05"

frmt.D> ## and Mac Excel
frmt.D> as.Date(34519, origin = "1904-01-01") # 1998-07-05
[1] "1998-07-05"

frmt.D> ## (these values come from http://support.microsoft.com/kb/214330)
frmt.D> 
frmt.D> ## Experiment shows that Matlab's origin is 719529 days before ours,
frmt.D> ## (it takes the non-existent 0000-01-01 as day 1)
frmt.D> ## so Matlab day 734373 can be imported as
frmt.D> as.Date(734373) - 719529 # 2010-08-23
[1] "2010-08-23"

frmt.D> ## (value from
frmt.D> ## http://www.mathworks.de/de/help/matlab/matlab_prog/represent-date-and-times-in-MATLAB.html)
frmt.D> 
frmt.D> ## Time zone effect
frmt.D> z <- ISOdate(2010, 04, 13, c(0,12)) # midnight and midday UTC

frmt.D> as.Date(z) # in UTC
[1] "2010-04-13" "2010-04-13"

frmt.D> ## No test: 
frmt.D> ## these time zone names are common
frmt.D> as.Date(z, tz = "NZ")
[1] "2010-04-13" "2010-04-13"

frmt.D> as.Date(z, tz = "HST") # Hawaii
[1] "2010-04-12" "2010-04-13"

frmt.D> ## End(No test)
frmt.D> 
frmt.D> 
frmt.D> 
> example(Reduce, run.donttest = TRUE) # funprog.Rd

Reduce> ## A general-purpose adder:
Reduce> add <- function(x) Reduce(`+`, x)

Reduce> add(list(1, 2, 3))
[1] 6

Reduce> ## Like sum(), but can also used for adding matrices etc., as it will
Reduce> ## use the appropriate '+' method in each reduction step.
Reduce> ## More generally, many generics meant to work on arbitrarily many
Reduce> ## arguments can be defined via reduction:
Reduce> FOO <- function(...) Reduce(FOO2, list(...))

Reduce> FOO2 <- function(x, y) UseMethod("FOO2")

Reduce> ## FOO() methods can then be provided via FOO2() methods.
Reduce> 
Reduce> ## A general-purpose cumulative adder:
Reduce> cadd <- function(x) Reduce(`+`, x, accumulate = TRUE)

Reduce> cadd(seq_len(7))
[1]  1  3  6 10 15 21 28

Reduce> ## A simple function to compute continued fractions:
Reduce> cfrac <- function(x) Reduce(function(u, v) u + 1 / v, x, right = TRUE)

Reduce> ## Continued fraction approximation for pi:
Reduce> cfrac(c(3, 7, 15, 1, 292))
[1] 3.141593

Reduce> ## Continued fraction approximation for Euler's number (e):
Reduce> cfrac(c(2, 1, 2, 1, 1, 4, 1, 1, 6, 1, 1, 8))
[1] 2.718282

Reduce> ## Map() now recycles similar to basic Ops:
Reduce> Map(`+`, 1,         1 : 3) ;         1 + 1:3
[[1]]
[1] 2

[[2]]
[1] 3

[[3]]
[1] 4

[1] 2 3 4

Reduce> Map(`+`, numeric(), 1 : 3) ; numeric() + 1:3
list()
numeric(0)

Reduce> ## Iterative function application:
Reduce> Funcall <- function(f, ...) f(...)

Reduce> ## Compute log(exp(acos(cos(0))))
Reduce> Reduce(Funcall, list(log, exp, acos, cos), 0, right = TRUE)
[1] 0

Reduce> ## n-fold iterate of a function, functional style:
Reduce> Iterate <- function(f, n = 1)
Reduce+     function(x) Reduce(Funcall, rep.int(list(f), n), x, right = TRUE)

Reduce> ## Continued fraction approximation to the golden ratio:
Reduce> Iterate(function(x) 1 + 1 / x, 30)(1)
[1] 1.618034

Reduce> ## which is the same as
Reduce> cfrac(rep.int(1, 31))
[1] 1.618034

Reduce> ## Computing square root approximations for x as fixed points of the
Reduce> ## function t |-> (t + x / t) / 2, as a function of the initial value:
Reduce> asqrt <- function(x, n) Iterate(function(t) (t + x / t) / 2, n)

Reduce> asqrt(2, 30)(10) # Starting from a positive value => +sqrt(2)
[1] 1.414214

Reduce> asqrt(2, 30)(-1) # Starting from a negative value => -sqrt(2)
[1] -1.414214

Reduce> ## A list of all functions in the base environment:
Reduce> funs <- Filter(is.function, sapply(ls(baseenv()), get, baseenv()))

Reduce> ## Functions in base with more than 10 arguments:
Reduce> names(Filter(function(f) length(formals(f)) > 10, funs))
[1] "format.default"   "formatC"          "library"          "merge.data.frame"
[5] "prettyNum"        "scan"             "source"           "system"          
[9] "system2"         

Reduce> ## Number of functions in base with a '...' argument:
Reduce> length(Filter(function(f)
Reduce+               any(names(formals(f)) %in% "..."),
Reduce+               funs))
[1] 428

Reduce> ## No test: 
Reduce> ## Find all objects in the base environment which are *not* functions:
Reduce> Filter(Negate(is.function),  sapply(ls(baseenv()), get, baseenv()))
$F
[1] FALSE

$LETTERS
 [1] "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S"
[20] "T" "U" "V" "W" "X" "Y" "Z"

$R.version
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          4.2                         
year           2024                        
month          10                          
day            31                          
svn rev        87279                       
language       R                           
version.string R version 4.4.2 (2024-10-31)
nickname       Pile of Leaves              

$R.version.string
[1] "R version 4.4.2 (2024-10-31)"

$T
[1] TRUE

$last.warning
$last.warning$`error in running command`
system(paste("lsof -p", Sys.getpid()))


$letters
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t" "u" "v" "w" "x" "y" "z"

$month.abb
 [1] "Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov" "Dec"

$month.name
 [1] "January"   "February"  "March"     "April"     "May"       "June"     
 [7] "July"      "August"    "September" "October"   "November"  "December" 

$pi
[1] 3.141593

$version
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          4                           
minor          4.2                         
year           2024                        
month          10                          
day            31                          
svn rev        87279                       
language       R                           
version.string R version 4.4.2 (2024-10-31)
nickname       Pile of Leaves              


Reduce> ## End(No test)
Reduce> 
Reduce> 
> example(gc, run.donttest = TRUE)

gc> ## No test: 
gc> gc() #- do it now
          used (Mb) gc trigger (Mb) max used (Mb)
Ncells  540368 28.9    1197735   64   692345 37.0
Vcells 1149853  8.8    8388608   64  5871659 44.8

gc> gcinfo(TRUE) #-- in the future, show when R does it
[1] FALSE

gc> ##            vvvvv use larger to *show* something
gc> x <- integer(100000); for(i in 1:18) x <- c(x, i)

gc> gcinfo(verbose = FALSE) #-- don't show it anymore
[1] TRUE

gc> gc(TRUE)
Garbage collection 8 = 5+0+3 (level 2) ... 
28.9 Mbytes of cons cells used (45%)
9.2 Mbytes of vectors used (14%)
          used (Mb) gc trigger (Mb) max used (Mb)
Ncells  540315 28.9    1197735   64   692345 37.0
Vcells 1199752  9.2    8388608   64  5871659 44.8

gc> gc(reset = TRUE)
          used (Mb) gc trigger (Mb) max used (Mb)
Ncells  540323 28.9    1197735   64   540323 28.9
Vcells 1199784  9.2    8388608   64  1199784  9.2

gc> ## End(No test)
gc> 
gc> 
> example(memory.profile, run.donttest = TRUE)

mmry.p> ## No test: 
mmry.p> memory.profile()
       NULL      symbol    pairlist     closure environment     promise 
          1        9219      252790        4424        1106        7145 
   language     special     builtin        char     logical     integer 
      80186          50         704       11831        9171       50170 
     double     complex   character         ...         any        list 
       3469          21       63425           0           0       22920 
 expression    bytecode externalptr     weakref         raw          S4 
          3       20006        1036        1245         438         917 

mmry.p> ## End(No test)
mmry.p> 
mmry.p> 
> paste("Today is", date()) # from paste.Rd
[1] "Today is Sat Dec 21 11:34:56 2024"
> trunc(Sys.time(), "day") # from round.POSIXt.Rd
[1] "2024-12-21 UTC"
> example(srcref, run.donttest = TRUE)

srcref> src <- srcfile(system.file("DESCRIPTION", package = "base"))

srcref> ## IGNORE_RDIFF_BEGIN
srcref> summary(src)
/usr/local/lib/R/library/base/DESCRIPTION 
Timestamp: 2024-12-17 13:39:44 UTC
Encoding: "native.enc"

srcref> ## IGNORE_RDIFF_END
srcref> getSrcLines(src, 1, 4)
[1] "Package: base"             "Version: 4.4.2"           
[3] "Priority: base"            "Title: The R Base Package"

srcref> ref <- srcref(src, c(1, 1, 2, 1000))

srcref> ref
Package: base
Version: 4.4.2

srcref> print(ref, useSource = FALSE)
<srcref: file "/usr/local/lib/R/library/base/DESCRIPTION" chars 1:1 to 2:1000>
> example(strptime, run.donttest = TRUE)

strptm> ## No test: 
strptm> ## locale-specific version of date()
strptm> format(Sys.time(), "%a %b %d %X %Y %Z")
[1] "Sat Dec 21 11:34:56 2024 UTC"

strptm> ## time to sub-second accuracy (if supported by the OS)
strptm> format(Sys.time(), "%H:%M:%OS3")
[1] "11:34:56.344"

strptm> ## End(No test)
strptm> ## read in date info in format 'ddmmmyyyy'
strptm> ## This will give NA(s) in some non-English locales; setting the C locale
strptm> ## as in the commented lines will overcome this on most systems.
strptm> ## lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
strptm> x <- c("1jan1960", "2jan1960", "31mar1960", "30jul1960")

strptm> z <- strptime(x, "%d%b%Y")

strptm> ## Sys.setlocale("LC_TIME", lct)
strptm> ## No test: 
strptm> z
[1] "1960-01-01 UTC" "1960-01-02 UTC" "1960-03-31 UTC" "1960-07-30 UTC"

strptm> ## End(No test)
strptm> (chz <- as.character(z)) # same w/o TZ
[1] "1960-01-01" "1960-01-02" "1960-03-31" "1960-07-30"

strptm> ## *here* (but not in general), the same as format():
strptm> stopifnot(exprs = {
strptm+      identical(chz, format(z))
strptm+      grepl("^1960-0[137]-[03][012]$", chz[!is.na(z)])
strptm+ })

strptm> ## read in date/time info in format 'm/d/y h:m:s'
strptm> dates <- c("02/27/92", "02/27/92", "01/14/92", "02/28/92", "02/01/92")

strptm> times <- c("23:03:20", "22:29:56", "01:03:30", "18:21:03", "16:56:26")

strptm> x <- paste(dates, times)

strptm> z2 <- strptime(x, "%m/%d/%y %H:%M:%S")

strptm> ## No test: 
strptm> z2 
[1] "1992-02-27 23:03:20 UTC" "1992-02-27 22:29:56 UTC"
[3] "1992-01-14 01:03:30 UTC" "1992-02-28 18:21:03 UTC"
[5] "1992-02-01 16:56:26 UTC"

strptm> ## End(No test)
strptm> ## *here* (but not in general), the same as format():
strptm> stopifnot(identical(format(z2), as.character(z2)))

strptm> ## time with fractional seconds
strptm> z3 <- strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS") ## No test: 

strptm> z3 # prints without fractional seconds by default, digits.sec = NULL ("= 0")
[1] "2006-02-20 11:16:16 UTC"

strptm> ## End(No test)
strptm> op <- options(digits.secs = 3)

strptm> ## No test: 
strptm> z3 # shows the 3 extra digits
[1] "2006-02-20 11:16:16.683 UTC"

strptm> ## End(No test)
strptm> as.character(z3) # ditto
[1] "2006-02-20 11:16:16.683"

strptm> options(op)

strptm> ## time zone names are not portable, but 'EST5EDT' comes pretty close.
strptm> ## (but its interpretation may not be universal: see ?timezones)
strptm> z4 <- strptime(c("2006-01-08 10:07:52", "2006-08-07 19:33:02"),
strptm+                "%Y-%m-%d %H:%M:%S", tz = "EST5EDT")

strptm> ## No test: 
strptm> z4 
[1] "2006-01-08 10:07:52 EST" "2006-08-07 19:33:02 EDT"

strptm> ## End(No test)
strptm> attr(z4, "tzone")
[1] "EST5EDT" "EST"     "EDT"    

strptm> as.character(z4)
[1] "2006-01-08 10:07:52" "2006-08-07 19:33:02"

strptm> z4$sec[2] <- pi # "very" fractional seconds

strptm> as.character(z4) # shows full precision
[1] "2006-01-08 10:07:52"                "2006-08-07 19:33:03.14159265358979"

strptm> format(z4) # no fractional sec
[1] "2006-01-08 10:07:52" "2006-08-07 19:33:03"

strptm> format(z4, digits=8) # shows only 6  (hard-wired maximum)
[1] "2006-01-08 10:07:52.000000" "2006-08-07 19:33:03.141592"

strptm> format(z4, digits=4)
[1] "2006-01-08 10:07:52.0000" "2006-08-07 19:33:03.1415"

strptm> ## An RFC 5322 header (Eastern Canada, during DST)
strptm> ## In a non-English locale the commented lines may be needed.
strptm> ## No test: 
strptm> ## prev <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
strptm> strptime("Tue, 23 Mar 2010 14:36:38 -0400", "%a, %d %b %Y %H:%M:%S %z")
[1] "2010-03-23 18:36:38"

strptm> ## Sys.setlocale("LC_TIME", prev)
strptm> 
strptm> ## Make sure you know what the abbreviated names are for you if you wish
strptm> ## to use them for input (they are matched case-insensitively):
strptm> format(s1 <- seq.Date(as.Date('1978-01-01'), by = 'day',   len =  7), "%a")
[1] "Sun" "Mon" "Tue" "Wed" "Thu" "Fri" "Sat"

strptm> format(s2 <- seq.Date(as.Date('2000-01-01'), by = 'month', len = 12), "%b")
 [1] "Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov" "Dec"

strptm> ## End(No test)
strptm> ## Non-finite date-times :
strptm> format(as.POSIXct(Inf)) # "Inf"  (was  NA  in R <= 4.1.x)
[1] "Inf"

strptm> format(as.POSIXlt(c(-Inf,Inf,NaN,NA))) # were all NA
[1] "-Inf" "Inf"  "NaN"  NA    
> example(sys.parent, run.donttest = TRUE)

sys.pr> ## No test: 
sys.pr> require(utils)

sys.pr> ## Note: the first two examples will give different results
sys.pr> ## if run by example().
sys.pr> ff <- function(x) gg(x)

sys.pr> gg <- function(y) sys.status()

sys.pr> str(ff(1))
List of 3
 $ sys.calls  :Dotted pair list of 9
  ..$ : language example(sys.parent, run.donttest = TRUE)
  ..$ : language source(tf, local, echo = echo, prompt.echo = paste0(prompt.prefix, getOption("prompt")),      continue.echo = pas| __truncated__ ...
  ..$ : language withVisible(eval(ei, envir))
  ..$ : language eval(ei, envir)
  ..$ : language eval(ei, envir)
  ..$ : language str(ff(1))
  .. ..- attr(*, "srcref")= 'srcref' int [1:8] 15 1 15 10 1 10 15 15
  .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
  ..$ : language ff(1)
  ..$ : language gg(x)
  .. ..- attr(*, "srcref")= 'srcref' int [1:8] 13 7 13 23 7 23 13 13
  .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
  ..$ : language sys.status()
  .. ..- attr(*, "srcref")= 'srcref' int [1:8] 14 7 14 30 7 30 14 14
  .. .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
 $ sys.parents: int [1:9] 0 1 2 2 4 0 0 7 8
 $ sys.frames :Dotted pair list of 9
  ..$ :<environment: 0x55fc4dbb6da0> 
  ..$ :<environment: 0x55fc4bfbe770> 
  ..$ :<environment: 0x55fc4f46b9d0> 
  ..$ :<environment: 0x55fc4f46b810> 
  ..$ :<environment: R_GlobalEnv> 
  ..$ :<environment: 0x55fc4f46b570> 
  ..$ :<environment: 0x55fc4f46b3b0> 
  ..$ :<environment: 0x55fc4f46b260> 
  ..$ :<environment: 0x55fc4f46b1b8> 

sys.pr> gg <- function(y) {
sys.pr+     ggg <- function() {
sys.pr+         cat("current frame is", sys.nframe(), "\n")
sys.pr+         cat("parents are", sys.parents(), "\n")
sys.pr+         print(sys.function(0)) # ggg
sys.pr+         print(sys.function(2)) # gg
sys.pr+     }
sys.pr+     if(y > 0) gg(y-1) else ggg()
sys.pr+ }

sys.pr> gg(3)
current frame is 10 
parents are 0 1 2 2 4 0 6 7 8 9 
function() {
        cat("current frame is", sys.nframe(), "\n")
        cat("parents are", sys.parents(), "\n")
        print(sys.function(0)) # ggg
        print(sys.function(2)) # gg
    }
<bytecode: 0x55fc4f9be190>
<environment: 0x55fc4fa3fa40>
function (file, local = FALSE, echo = verbose, print.eval = echo, 
    exprs, spaced = use_file, verbose = getOption("verbose"), 
    prompt.echo = getOption("prompt"), max.deparse.length = 150, 
    width.cutoff = 60L, deparseCtrl = "showAttributes", chdir = FALSE, 
    catch.aborts = FALSE, encoding = getOption("encoding"), continue.echo = getOption("continue"), 
    skip.echo = 0, keep.source = getOption("keep.source")) 
{
    envir <- if (isTRUE(local)) 
        parent.frame()
    else if (isFALSE(local)) 
        .GlobalEnv
    else if (is.environment(local)) 
        local
    else stop("'local' must be TRUE, FALSE or an environment")
    if (!missing(echo)) {
        if (!is.logical(echo)) 
            stop("'echo' must be logical")
        if (!echo && verbose) {
            warning("'verbose' is TRUE, 'echo' not; ... coercing 'echo <- TRUE'")
            echo <- TRUE
        }
    }
    if (verbose) {
        cat("'envir' chosen:")
        print(envir)
    }
    if (use_file <- missing(exprs)) {
        ofile <- file
        from_file <- FALSE
        srcfile <- NULL
        if (is.character(file)) {
            if (!length(file) || file == "") 
                stop("empty file/url name")
            have_encoding <- !missing(encoding) && !identical(encoding, 
                "unknown")
            if (identical(encoding, "unknown")) {
                enc <- utils::localeToCharset()
                encoding <- enc[length(enc)]
            }
            else enc <- encoding
            if (length(enc) > 1L) {
                encoding <- NA
                owarn <- options(warn = 2)
                for (e in enc) {
                  if (is.na(e)) 
                    next
                  zz <- file(file, encoding = e)
                  res <- tryCatch(readLines(zz, warn = FALSE), 
                    error = identity)
                  close(zz)
                  if (!inherits(res, "error")) {
                    encoding <- e
                    break
                  }
                }
                options(owarn)
            }
            if (is.na(encoding)) 
                stop("unable to find a plausible encoding")
            if (verbose) 
                cat(gettextf("encoding = \"%s\" chosen", encoding), 
                  "\n", sep = "")
            {
                filename <- file
                file <- file(filename, "r", encoding = encoding)
                on.exit(close(file))
                if (isTRUE(keep.source)) {
                  lines <- readLines(file, warn = FALSE)
                  on.exit()
                  close(file)
                  srcfile <- srcfilecopy(filename, lines, file.mtime(filename)[1], 
                    isFile = TRUE)
                }
                else {
                  from_file <- TRUE
                  srcfile <- filename
                }
                loc <- utils::localeToCharset()[1L]
                encoding <- if (have_encoding) 
                  switch(loc, `UTF-8` = "UTF-8", `ISO8859-1` = "latin1", 
                    "unknown")
                else "unknown"
            }
        }
        else {
            lines <- readLines(file, warn = FALSE)
            srcfile <- if (isTRUE(keep.source)) 
                srcfilecopy(deparse1(substitute(file), ""), lines)
            else deparse1(substitute(file), "")
        }
        if (verbose) {
            cat(sprintf(" --> from_file='%s'\n lines:", from_file))
            utils::str(lines)
        }
        exprs <- if (!from_file) {
            if (length(lines) && is.character(lines)) 
                .Internal(parse(stdin(), n = -1, lines, "?", 
                  srcfile, encoding))
            else expression()
        }
        else .Internal(parse(file, n = -1, NULL, "?", srcfile, 
            encoding))
        on.exit()
        if (from_file) 
            close(file)
        if (verbose) 
            cat("--> parsed", length(exprs), "expressions; now eval(.)ing them:\n")
        if (chdir) {
            if (is.character(ofile)) {
                if (grepl("^(ftp|ftps|http|https|file)://", ofile)) 
                  warning("'chdir = TRUE' makes no sense for a URL")
                else if ((path <- dirname(ofile)) != ".") {
                  owd <- getwd()
                  if (is.null(owd)) 
                    stop("cannot 'chdir' as current directory is unknown")
                  on.exit(setwd(owd), add = TRUE)
                  setwd(path)
                }
            }
            else {
                warning("'chdir = TRUE' makes no sense for a connection")
            }
        }
    }
    else {
        if (!missing(file)) 
            stop("specify either 'file' or 'exprs' but not both")
        if (!is.expression(exprs)) 
            exprs <- as.expression(exprs)
    }
    Ne <- length(exprs)
    if (echo) {
        sd <- "\""
        nos <- "[^\"]*"
        oddsd <- paste0("^", nos, sd, "(", nos, sd, nos, sd, 
            ")*", nos, "$")
        trySrcLines <- function(srcfile, showfrom, showto) {
            tryCatch(suppressWarnings(getSrcLines(srcfile, showfrom, 
                showto)), error = function(e) character())
        }
    }
    yy <- NULL
    lastshown <- 0
    srcrefs <- attr(exprs, "srcref")
    if (verbose && !is.null(srcrefs)) {
        cat("has srcrefs:\n")
        utils::str(srcrefs)
    }
    for (i in seq_len(Ne + echo)) {
        tail <- i > Ne
        if (!tail) {
            if (verbose) 
                cat("\n>>>> eval(expression_nr.", i, ")\n\t\t =================\n")
            ei <- exprs[i]
        }
        if (echo) {
            nd <- 0
            srcref <- if (tail) 
                attr(exprs, "wholeSrcref")
            else if (i <= length(srcrefs)) 
                srcrefs[[i]]
            if (!is.null(srcref)) {
                if (length(srcref) >= 8) {
                  firstl <- srcref[7L]
                  lastl <- srcref[8L]
                }
                else {
                  firstl <- srcref[1L]
                  lastl <- srcref[3L]
                }
                if (i == 1) 
                  lastshown <- min(skip.echo, lastl - 1)
                if (lastshown < lastl) {
                  srcfile <- attr(srcref, "srcfile")
                  dep <- trySrcLines(srcfile, lastshown + 1, 
                    lastl)
                  if (length(dep)) {
                    leading <- if (tail) 
                      length(dep)
                    else firstl - lastshown
                    lastshown <- lastl
                    while (length(dep) && grepl("^[[:blank:]]*$", 
                      dep[1L])) {
                      dep <- dep[-1L]
                      leading <- leading - 1L
                    }
                    dep <- paste0(rep.int(c(prompt.echo, continue.echo), 
                      pmax(0L, c(leading, length(dep) - leading))), 
                      dep, collapse = "\n")
                    nd <- nchar(dep, "c")
                  }
                  else srcref <- NULL
                }
            }
            if (is.null(srcref)) {
                if (!tail) {
                  dep <- substr(paste(deparse(ei, width.cutoff = width.cutoff, 
                    control = deparseCtrl), collapse = "\n"), 
                    12L, 1000000L)
                  dep <- paste0(prompt.echo, gsub("\n", paste0("\n", 
                    continue.echo), dep, fixed = TRUE))
                  nd <- nchar(dep, "c") - 1L
                }
            }
            if (nd) {
                do.trunc <- nd > max.deparse.length
                dep <- substr(dep, 1L, if (do.trunc) 
                  max.deparse.length
                else nd)
                cat(if (spaced) 
                  "\n", dep, if (do.trunc) 
                  paste(if (grepl(sd, dep) && grepl(oddsd, dep)) 
                    " ...\" ..."
                  else " ....", "[TRUNCATED] "), "\n", sep = "")
            }
        }
        if (!tail) {
            yy <- if (catch.aborts) 
                withRestarts(withVisible(eval(ei, envir)), abort = function() list(value = NULL, 
                  visible = FALSE))
            else withVisible(eval(ei, envir))
            i.symbol <- mode(ei[[1L]]) == "name"
            if (!i.symbol) {
                curr.fun <- ei[[1L]][[1L]]
                if (verbose) {
                  cat("curr.fun:")
                  utils::str(curr.fun)
                }
            }
            if (verbose >= 2) {
                cat(".... mode(ei[[1L]])=", mode(ei[[1L]]), "; paste(curr.fun)=")
                utils::str(paste(curr.fun))
            }
            if (print.eval && yy$visible) {
                if (isS4(yy$value)) 
                  methods::show(yy$value)
                else print(yy$value)
            }
            if (verbose) 
                cat(" .. after ", sQuote(deparse(ei, control = unique(c(deparseCtrl, 
                  "useSource")))), "\n", sep = "")
        }
    }
    invisible(yy)
}
<bytecode: 0x55fc4e953f08>
<environment: namespace:base>

sys.pr> t1 <- function() {
sys.pr+   aa <- "here"
sys.pr+   t2 <- function() {
sys.pr+     ## in frame 2 here
sys.pr+     cat("current frame is", sys.nframe(), "\n")
sys.pr+     str(sys.calls()) ## list with two components t1() and t2()
sys.pr+     cat("parents are frame numbers", sys.parents(), "\n") ## 0 1
sys.pr+     print(ls(envir = sys.frame(-1))) ## [1] "aa" "t2"
sys.pr+     invisible()
sys.pr+   }
sys.pr+   t2()
sys.pr+ }

sys.pr> t1()
current frame is 7 
Dotted pair list of 7
 $ : language example(sys.parent, run.donttest = TRUE)
 $ : language source(tf, local, echo = echo, prompt.echo = paste0(prompt.prefix, getOption("prompt")),      continue.echo = pas| __truncated__ ...
 $ : language withVisible(eval(ei, envir))
 $ : language eval(ei, envir)
 $ : language eval(ei, envir)
 $ : language t1()
  ..- attr(*, "srcref")= 'srcref' int [1:8] 40 1 40 4 1 4 40 40
  .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
 $ : language t2()
  ..- attr(*, "srcref")= 'srcref' int [1:8] 38 3 38 6 3 6 38 38
  .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
parents are frame numbers 0 1 2 2 4 0 6 
[1] "aa" "t2"

sys.pr> test.sys.on.exit <- function() {
sys.pr+   on.exit(print(1))
sys.pr+   ex <- sys.on.exit()
sys.pr+   str(ex)
sys.pr+   cat("exiting...\n")
sys.pr+ }

sys.pr> test.sys.on.exit()
 language print(1)
exiting...
[1] 1

sys.pr> ## gives 'language print(1)', prints 1 on exit
sys.pr> 
sys.pr> ## An example where the parent is not the next frame up the stack
sys.pr> ## since method dispatch uses a frame.
sys.pr> as.double.foo <- function(x)
sys.pr+ {
sys.pr+     str(sys.calls())
sys.pr+     print(sys.frames())
sys.pr+     print(sys.parents())
sys.pr+     print(sys.frame(-1)); print(parent.frame())
sys.pr+     x
sys.pr+ }

sys.pr> t2 <- function(x) as.double(x)

sys.pr> a <- structure(pi, class = "foo")

sys.pr> t2(a)
Dotted pair list of 8
 $ : language example(sys.parent, run.donttest = TRUE)
 $ : language source(tf, local, echo = echo, prompt.echo = paste0(prompt.prefix, getOption("prompt")),      continue.echo = pas| __truncated__ ...
 $ : language withVisible(eval(ei, envir))
 $ : language eval(ei, envir)
 $ : language eval(ei, envir)
 $ : language t2(a)
  ..- attr(*, "srcref")= 'srcref' int [1:8] 63 1 63 5 1 5 63 63
  .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
 $ : language as.double(x)
  ..- attr(*, "srcref")= 'srcref' int [1:8] 61 7 61 30 7 30 61 61
  .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
 $ : language as.double.foo(x)
  ..- attr(*, "srcref")= 'srcref' int [1:8] 61 7 61 30 7 30 61 61
  .. ..- attr(*, "srcfile")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fc4bfb93e0> 
[[1]]
<environment: 0x55fc4dbb6da0>

[[2]]
<environment: 0x55fc4bfbe770>

[[3]]
<environment: 0x55fc4fc2db58>

[[4]]
<environment: 0x55fc4fc2d998>

[[5]]
<environment: R_GlobalEnv>

[[6]]
<environment: 0x55fc4fc31528>

[[7]]
<environment: 0x55fc4fc313a0>

[[8]]
<environment: 0x55fc4fc31170>

[1] 0 1 2 2 4 0 6 6
<environment: 0x55fc4fc313a0>
<environment: 0x55fc4fc31528>
[1] 3.141593
attr(,"class")
[1] "foo"

sys.pr> ## End(No test)
sys.pr> 
sys.pr> 
> example(system.time, run.donttest = TRUE)

systm.> require(stats)

systm.> ## No test: 
systm.> system.time(for(i in 1:100) mad(runif(1000)))
   user  system elapsed 
  0.011   0.000   0.011 

systm.> ## End(No test)
systm.> ## Not run: 
systm.> ##D exT <- function(n = 10000) {
systm.> ##D   # Purpose: Test if system.time works ok;   n: loop size
systm.> ##D   system.time(for(i in 1:n) x <- mean(rt(1000, df = 4)))
systm.> ##D }
systm.> ##D #-- Try to interrupt one of the following (using Ctrl-C / Escape):
systm.> ##D exT()                 #- about 4 secs on a 2.5GHz Xeon
systm.> ##D system.time(exT())    #~ +/- same
systm.> ## End(Not run)
systm.> 
systm.> 
> example(tempfile, run.donttest = TRUE)

tempfl> ## No test: 
tempfl> tempfile(c("ab", "a b c"))   # give file name with spaces in!
[1] "/tmp/RtmpuP1TfW/ab1115cd405ff2"     "/tmp/RtmpuP1TfW/a b c1115c4e3a2867"

tempfl> tempfile("plot", fileext = c(".ps", ".pdf"))
[1] "/tmp/RtmpuP1TfW/plot1115c656ba955.ps"
[2] "/tmp/RtmpuP1TfW/plot1115cb1b1c4f.pdf"

tempfl> tempdir() # works on all platforms with a platform-dependent result
[1] "/tmp/RtmpuP1TfW"

tempfl> ## End(No test)
tempfl> 
tempfl> ## Show how 'check' is working on some platforms:
tempfl> if(exists("I'm brave") && `I'm brave` &&
tempfl+    identical(.Platform$OS.type, "unix") && grepl("^/tmp/", tempdir())) {
tempfl+   cat("Current tempdir(): ", tempdir(), "\n")
tempfl+   cat("Removing it :", file.remove(tempdir()),
tempfl+       "; dir.exists(tempdir()):", dir.exists(tempdir()), "\n")
tempfl+   cat("and now  tempdir(check = TRUE) :", tempdir(check = TRUE),"\n")
tempfl+ }
> example(weekdays, run.donttest = TRUE)

wekdys> ## No test: 
wekdys> ## first two are locale dependent:
wekdys> weekdays(.leap.seconds)
 [1] "Saturday"  "Monday"    "Tuesday"   "Wednesday" "Thursday"  "Saturday" 
 [7] "Sunday"    "Monday"    "Tuesday"   "Wednesday" "Thursday"  "Friday"   
[13] "Monday"    "Friday"    "Monday"    "Tuesday"   "Wednesday" "Thursday" 
[19] "Friday"    "Monday"    "Tuesday"   "Friday"    "Sunday"    "Thursday" 
[25] "Sunday"    "Wednesday" "Sunday"   

wekdys> months  (.leap.seconds)
 [1] "July"    "January" "January" "January" "January" "January" "January"
 [8] "January" "January" "July"    "July"    "July"    "July"    "January"
[15] "January" "January" "July"    "July"    "July"    "January" "July"   
[22] "January" "January" "January" "July"    "July"    "January"

wekdys> ## End(No test)
wekdys> quarters(.leap.seconds)
 [1] "Q3" "Q1" "Q1" "Q1" "Q1" "Q1" "Q1" "Q1" "Q1" "Q3" "Q3" "Q3" "Q3" "Q1" "Q1"
[16] "Q1" "Q3" "Q3" "Q3" "Q1" "Q3" "Q1" "Q1" "Q1" "Q3" "Q3" "Q1"

wekdys> ## Show how easily you get month, day, year, day (of {month, week, yr}), ... :
wekdys> ## (remember to count from 0 (!): mon = 0..11, wday = 0..6,  etc !!)
wekdys> 
wekdys> ##' Transform (Time-)Date vector  to  convenient data frame :
wekdys> dt2df <- function(dt, dName = deparse(substitute(dt))) {
wekdys+     DF <- as.data.frame(unclass(as.POSIXlt( dt )))
wekdys+     `names<-`(cbind(dt, DF, deparse.level=0L), c(dName, names(DF)))
wekdys+ }

wekdys> ## e.g.,
wekdys> dt2df(.leap.seconds)    # date+time
   .leap.seconds sec min hour mday mon year wday yday isdst zone gmtoff
1     1972-07-01   0   0    0    1   6   72    6  182     0  GMT      0
2     1973-01-01   0   0    0    1   0   73    1    0     0  GMT      0
3     1974-01-01   0   0    0    1   0   74    2    0     0  GMT      0
4     1975-01-01   0   0    0    1   0   75    3    0     0  GMT      0
5     1976-01-01   0   0    0    1   0   76    4    0     0  GMT      0
6     1977-01-01   0   0    0    1   0   77    6    0     0  GMT      0
7     1978-01-01   0   0    0    1   0   78    0    0     0  GMT      0
8     1979-01-01   0   0    0    1   0   79    1    0     0  GMT      0
9     1980-01-01   0   0    0    1   0   80    2    0     0  GMT      0
10    1981-07-01   0   0    0    1   6   81    3  181     0  GMT      0
11    1982-07-01   0   0    0    1   6   82    4  181     0  GMT      0
12    1983-07-01   0   0    0    1   6   83    5  181     0  GMT      0
13    1985-07-01   0   0    0    1   6   85    1  181     0  GMT      0
14    1988-01-01   0   0    0    1   0   88    5    0     0  GMT      0
15    1990-01-01   0   0    0    1   0   90    1    0     0  GMT      0
16    1991-01-01   0   0    0    1   0   91    2    0     0  GMT      0
17    1992-07-01   0   0    0    1   6   92    3  182     0  GMT      0
18    1993-07-01   0   0    0    1   6   93    4  181     0  GMT      0
19    1994-07-01   0   0    0    1   6   94    5  181     0  GMT      0
20    1996-01-01   0   0    0    1   0   96    1    0     0  GMT      0
21    1997-07-01   0   0    0    1   6   97    2  181     0  GMT      0
22    1999-01-01   0   0    0    1   0   99    5    0     0  GMT      0
23    2006-01-01   0   0    0    1   0  106    0    0     0  GMT      0
24    2009-01-01   0   0    0    1   0  109    4    0     0  GMT      0
25    2012-07-01   0   0    0    1   6  112    0  182     0  GMT      0
26    2015-07-01   0   0    0    1   6  115    3  181     0  GMT      0
27    2017-01-01   0   0    0    1   0  117    0    0     0  GMT      0

wekdys> ## No test: 
wekdys> dt2df(Sys.Date() + 0:9) # date
   Sys.Date() + 0:9 sec min hour mday mon year wday yday isdst zone gmtoff
1        2024-12-21   0   0    0   21  11  124    6  355     0  UTC      0
2        2024-12-22   0   0    0   22  11  124    0  356     0  UTC      0
3        2024-12-23   0   0    0   23  11  124    1  357     0  UTC      0
4        2024-12-24   0   0    0   24  11  124    2  358     0  UTC      0
5        2024-12-25   0   0    0   25  11  124    3  359     0  UTC      0
6        2024-12-26   0   0    0   26  11  124    4  360     0  UTC      0
7        2024-12-27   0   0    0   27  11  124    5  361     0  UTC      0
8        2024-12-28   0   0    0   28  11  124    6  362     0  UTC      0
9        2024-12-29   0   0    0   29  11  124    0  363     0  UTC      0
10       2024-12-30   0   0    0   30  11  124    1  364     0  UTC      0

wekdys> ## End(No test)
wekdys> ##' Even simpler:  Date -> Matrix - dropping time info {sec,min,hour, isdst}
wekdys> d2mat <- function(x) simplify2array(unclass(as.POSIXlt(x))[4:7])

wekdys> ## e.g.,
wekdys> d2mat(seq(as.Date("2000-02-02"), by=1, length.out=30)) # has R 1.0.0's release date
      mday mon year wday
 [1,]    2   1  100    3
 [2,]    3   1  100    4
 [3,]    4   1  100    5
 [4,]    5   1  100    6
 [5,]    6   1  100    0
 [6,]    7   1  100    1
 [7,]    8   1  100    2
 [8,]    9   1  100    3
 [9,]   10   1  100    4
[10,]   11   1  100    5
[11,]   12   1  100    6
[12,]   13   1  100    0
[13,]   14   1  100    1
[14,]   15   1  100    2
[15,]   16   1  100    3
[16,]   17   1  100    4
[17,]   18   1  100    5
[18,]   19   1  100    6
[19,]   20   1  100    0
[20,]   21   1  100    1
[21,]   22   1  100    2
[22,]   23   1  100    3
[23,]   24   1  100    4
[24,]   25   1  100    5
[25,]   26   1  100    6
[26,]   27   1  100    0
[27,]   28   1  100    1
[28,]   29   1  100    2
[29,]    1   2  100    3
[30,]    2   2  100    4

wekdys> ## No test: 
wekdys> ## Julian Day Number (JDN, https://en.wikipedia.org/wiki/Julian_day)
wekdys> ## is the number of days since noon UTC on the first day of 4317 BCE.
wekdys> ## in the proleptic Julian calendar.  To more recently, in
wekdys> ## 'Terrestrial Time' which differs from UTC by a few seconds
wekdys> ## See https://en.wikipedia.org/wiki/Terrestrial_Time
wekdys> julian(Sys.Date(), -2440588) # from a day
[1] 2460666
attr(,"origin")
[1] -2440588

wekdys> floor(as.numeric(julian(Sys.time())) + 2440587.5) # from a date-time
[1] 2460665

wekdys> ## End(No test)
wekdys> 
wekdys> 
wekdys> 
> library(help = "splines")

		Information on package 'splines'

Description:

Package:            splines
Version:            4.4.2
Priority:           base
Imports:            graphics, stats
Title:              Regression Spline Functions and Classes
Author:             Douglas M. Bates <bates@stat.wisc.edu> and William
                    N. Venables <Bill.Venables@csiro.au>
Maintainer:         R Core Team <do-use-Contact-address@r-project.org>
Contact:            R-help mailing list <r-help@r-project.org>
Description:        Regression spline functions and classes.
License:            Part of R 4.4.2
Suggests:           Matrix, methods
NeedsCompilation:   yes
Built:              R 4.4.2; x86_64-pc-linux-gnu; 2024-12-17 13:34:55
                    UTC; unix

Index:

asVector                Coerce an Object to a Vector
backSpline              Monotone Inverse Spline
bs                      B-Spline Basis for Polynomial Splines
interpSpline            Create an Interpolation Spline
ns                      Generate a Basis Matrix for Natural Cubic
                        Splines
periodicSpline          Create a Periodic Interpolation Spline
polySpline              Piecewise Polynomial Spline Representation
predict.bSpline         Evaluate a Spline at New Values of x
predict.bs              Evaluate a Spline Basis
splineDesign            Design Matrix for B-splines
splineKnots             Knot Vector from a Spline
splineOrder             Determine the Order of a Spline
splines-package         Regression Spline Functions and Classes
xyVector                Construct an 'xyVector' Object

> 
> ## for example(NA)
> if(require("microbenchmark")) {
+   x <- c(NaN, 1:10000)
+   print(microbenchmark(any(is.na(x)), anyNA(x)))
+ } else { ## much less accurate
+   x <- c(NaN, 1e6)
+   nSim <- 2^13
+   print(rbind(is.na = system.time(replicate(nSim, any(is.na(x)))),
+               anyNA = system.time(replicate(nSim, anyNA(x)))))
+ }
Loading required package: microbenchmark
      user.self sys.self elapsed user.child sys.child
is.na     0.009        0   0.009          0         0
anyNA     0.006        0   0.007          0         0
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'microbenchmark'
> 
> ## utils
> example(help.search, run.donttest = TRUE)

hlp.sr> help.search("linear models")    # In case you forgot how to fit linear
Demos with name or title matching 'linear models' using fuzzy matching:


stats::lm.glm           Some linear and generalized linear modelling
                        examples from `An Introduction to Statistical
                        Modelling' by Annette Dobson


Type 'demo(PKG::FOO)' to run demonstration 'PKG::FOO'.



Help files with alias or concept or title matching 'linear models'
using fuzzy matching:


Hmisc::abs.error.pred   Indexes of Absolute Prediction Error for Linear
                        Models
MASS::boxcox            Box-Cox Transformations for Linear Models
MASS::glm.nb            Fit a Negative Binomial Generalized Linear
                        Model
MASS::lm.gls            Fit Linear Models by Generalized Least Squares
MASS::loglm             Fit Log-Linear Models by Iterative Proportional
                        Scaling
MASS::loglm1            Fit Log-Linear Models by Iterative Proportional
                        Scaling - Internal function
MASS::rlm               Robust Fitting of Linear Models
MASS::stdres            Extract Standardized Residuals from a Linear
                        Model
MASS::studres           Extract Studentized Residuals from a Linear
                        Model
MASS::summary.rlm       Summary Method for Robust Linear Models
MatrixModels::glm4      Fitting Generalized Linear Models (using S4)
MatrixModels::lm.fit.sparse
                        Fitter Function for Sparse Linear Models
RcppEigen::fastLm       Bare-bones linear model fitting function
VGAM::N1binomial        Linear Model and Binomial Mixed Data Type
                        Family Function
VGAM::N1poisson         Linear Model and Poisson Mixed Data Type Family
                        Function
VGAM::anova.vglm        Analysis of Deviance for Vector Generalized
                        Linear Model Fits
VGAM::dN1binom          Linear Model and Binomial Mixed Data Type
                        Distribution
VGAM::dN1pois           Linear Model and Poisson Mixed Data Type
                        Distribution
VGAM::loglinb2          Loglinear Model for Two Binary Responses
VGAM::loglinb3          Loglinear Model for Three Binary Responses
VGAM::rrvglm            Fitting Reduced-Rank Vector Generalized Linear
                        Models (RR-VGLMs) and Doubly Constrained
                        RR-VGLMs (DRR-VGLMs)
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm-class      Class "rrvglm"
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm.control    Control Function for rrvglm()
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::rrvglm.optim.control
                        Control Function for rrvglm() Calling optim()
  Concepts: Reduced-Rank Vector Generalized Linear Model
VGAM::summary.drrvglm   Summarizing Reduced Rank Vector Generalized
                        Linear Model (RR-VGLM) and Doubly constrained
                        RR-VGLM Fits
VGAM::summaryvglm       Summarizing Vector Generalized Linear Model
                        Fits
VGAM::vglm              Fitting Vector Generalized Linear Models
  Concepts: Vector Generalized Linear Model
VGAM::vglm-class        Class "vglm"
  Concepts: Vector Generalized Linear Model
VGAM::vglm.control      Control Function for vglm()
  Concepts: Vector Generalized Linear Model
VGAM::vglmff-class      Class "vglmff"
  Concepts: Vector Generalized Linear Model
boot::cv.glm            Cross-validation for Generalized Linear Models
boot::glm.diag          Generalized Linear Model Diagnostics
boot::glm.diag.plots    Diagnostics plots for generalized linear models
ggplot2::fortify.lm     Supplement the data fitted to a linear model
                        with model fit statistics.
glmnet::glmnet-package
                        Elastic net model paths for some generalized
                        linear models
lme4::nlformula         Manipulate a Nonlinear Model Formula
mgcv::bam               Generalized additive models for very large
                        datasets
  Concepts: Functional linear model
mgcv::bam.update        Update a strictly additive bam model for new
                        data.
  Concepts: Functional linear model
mgcv::gam               Generalized additive models with integrated
                        smoothness estimation
  Concepts: Functional linear model
mgcv::jagam             Just Another Gibbs Additive Modeller: JAGS
                        support for mgcv.
  Concepts: Functional linear model
mice::glm.mids          Generalized linear model for 'mids' object
nlme::gls               Fit Linear Model Using Generalized Least
                        Squares
nlme::gnls              Fit Nonlinear Model Using Generalized Least
                        Squares
nlme::recalc            Recalculate Condensed Linear Model Object
nnet::multinom          Fit Multinomial Log-linear Models
quantreg::KhmaladzeTest
                        Tests of Location and Location Scale Shift
                        Hypotheses for Linear Models
quantreg::ParetoTest    Estimation and Inference on the Pareto Tail
                        Exponent for Linear Models
quantreg::predict.rqss
                        Predict from fitted nonparametric quantile
                        regression smoothing spline models
rms::Gls                Fit Linear Model Using Generalized Least
                        Squares
rms::ols                Linear Model Estimation Using Ordinary Least
                        Squares
rms::validate.ols       Validation of an Ordinary Linear Model
stats::anova.glm        Analysis of Deviance for Generalized Linear
                        Model Fits
stats::anova.lm         ANOVA for Linear Model Fits
stats::anova.mlm        Comparisons between Multivariate Linear Models
stats::family.glm       Accessing Generalized Linear Model Fits
stats::family.lm        Accessing Linear Model Fits
stats::glm              Fitting Generalized Linear Models
stats::lm               Fitting Linear Models
stats::lm.fit           Fitter Functions for Linear Models
stats::loglin           Fitting Log-Linear Models
stats::predict.lm       Predict method for Linear Model Fits
stats::selfStart        Construct Self-starting Nonlinear Models
stats::summary.glm      Summarizing Generalized Linear Model Fits
stats::summary.lm       Summarizing Linear Model Fits


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr>                                 # models
hlp.sr> help.search("non-existent topic")
No vignettes or demos or help files found with alias or concept or
title matching 'non-existent topic' using fuzzy matching.

hlp.sr> ??utils::help  # All the topics matching "help" in the utils package
Help files with alias or concept or title matching 'help' using regular
expression matching:


utils::example          Run an Examples Section from the Online Help
utils::help             Documentation
  Aliases: help
utils::help.request     Send a Post to R-help
  Aliases: help.request
utils::help.search      Search the Help System
  Aliases: help.search
utils::help.start       Hypertext Documentation
  Aliases: help.start
utils::hsearch_db       Help Search Utilities


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> ## No test: 
hlp.sr> ## Documentation with topic/concept/title matching 'print'
hlp.sr> ## (disabling fuzzy matching to not also match 'point')
hlp.sr> help.search("print", agrep = FALSE)
Vignettes with name or keyword or title matching 'print' using regular
expression matching:


knitr::knit_print       Custom Print Methods
pillar::debugme         Printing a tibble: Tracking control flow
pillar::printing        Printing a tibble: Control and data flow
vctrs::pillar           Printing vectors nicely in tibbles


Type 'vignette(PKG::FOO)' to inspect entries 'PKG::FOO'.



Help files with alias or concept or title matching 'print' using
regular expression matching:


BiocManager::valid      Validate installed package versions against
                        correct versions.
  Aliases: print.biocValid
BiocManager::version    Version of Bioconductor currently in use.
  Aliases: print.version_sentinel
DiagrammeR::print.dgr_graph
                        Print the graph to the terminal
  Aliases: print.dgr_graph
Formula::Formula        Extended Formulas: Multiple Responses and
                        Multiple Regressor Parts
  Aliases: print.Formula
Hmisc::abs.error.pred   Indexes of Absolute Prediction Error for Linear
                        Models
  Aliases: print.abs.error.pred
Hmisc::areg             Additive Regression with Optimal
                        Transformations on Both Sides using Canonical
                        Variates
  Aliases: print.areg
Hmisc::aregImpute       Multiple Imputation using Additive Regression,
                        Bootstrapping, and Predictive Mean Matching
  Aliases: print.aregImpute
Hmisc::biVar            Bivariate Summaries Computed Separately by a
                        Series of Predictors
  Aliases: print.biVar
Hmisc::bystats          Statistics by Categories
  Aliases: print.bystats, print.bystats2
Hmisc::colorFacet       Miscellaneous ggplot2 and grid Helper Functions
  Aliases: print.arrGrob
Hmisc::contents         Metadata for a Data Frame
  Aliases: print.contents.data.frame, print.contents.list
Hmisc::curveRep         Representative Curves
  Aliases: print.curveRep
Hmisc::dataDensityString
                        Internal Hmisc functions
  Aliases: naprint.keep, naprint.delete, print.substi,
    print.timePOSIXt, print.responseSummary
Hmisc::dataRep          Representativeness of Observations in a Data
                        Set
  Aliases: print.dataRep, print.predict.dataRep
Hmisc::describe         Concise Statistical Description of a Vector,
                        Matrix, Data Frame, or Formula
  Aliases: print.describe, print.describe.single
Hmisc::equalBins        Multicolumn Formating
  Concepts: Printing
Hmisc::find.matches     Find Close Matches
  Aliases: print.find.matches
Hmisc::format.pval      Format P Values
  Concepts: Printing
Hmisc::hoeffd           Matrix of Hoeffding's D Statistics
  Aliases: print.hoeffd
Hmisc::impute           Generic Functions and Methods for Imputation
  Aliases: print.impute
Hmisc::label            Label Attribute of an Object
  Aliases: print.labelled
Hmisc::latex            Convert an S object to LaTeX, and Related
                        Utilities
  Aliases: print.dvi, print.latex
Hmisc::list.tree        Pretty-print the Structure of a Data Object
Hmisc::mChoice          Methods for Storing and Analyzing Multiple
                        Choice Variables
  Aliases: print.mChoice, print.summary.mChoice
Hmisc::mhgr             Miscellaneous Functions for Epidemiology
  Aliases: print.mhgr, print.lrcum
Hmisc::popower          Power and Sample Size for Ordinal Response
  Aliases: print.popower, print.posamsize
Hmisc::print.char.list
                        prints a list of lists in a visually readable
                        format.
  Aliases: print.char.list
  Concepts: Printing
Hmisc::print.char.matrix
                        Function to print a matrix with stacked cells
  Aliases: print.char.matrix
  Concepts: Printing
Hmisc::print.princmp    print.princmp
  Aliases: print.princmp
Hmisc::printL           printL
  Aliases: printL
Hmisc::prn              Print and Object with its Name
  Concepts: Printing
Hmisc::prselect         Selectively Print Lines of a Text Vector
Hmisc::rcorr            Matrix of Correlations and P-values
  Aliases: print.rcorr
Hmisc::rcorrp.cens      Rank Correlation for Paired Predictors with a
                        Possibly Censored Response, and Integrated
                        Discrimination Index
  Aliases: print.improveProb
Hmisc::redun            Redundancy Analysis
  Aliases: print.redun
Hmisc::sas.get          Convert a SAS Dataset to an S Data Frame
  Aliases: print.special.miss
Hmisc::simplifyDims     List Simplification
  Concepts: Printing
Hmisc::spower           Simulate Power of 2-Sample Test for Survival
                        under Complex Conditions
  Aliases: print.spower, print.Quantile2
Hmisc::string.bounding.box
                        Determine Dimensions of Strings
  Concepts: Printing
Hmisc::string.break.line
                        Break a String into Many Lines at Newlines
  Concepts: Printing
Hmisc::stringDims       String Dimentions
  Concepts: Printing
Hmisc::summary.formula
                        Summarize Data for Making Tables and Plots
  Aliases: print.summary.formula.response,
    print.summary.formula.reverse, print.summary.formula.cross
Hmisc::summaryM         Summarize Mixed Data Types vs. Groups
  Aliases: print.summaryM, printsummaryM
Hmisc::t.test.cluster   t-test for Clustered Data
  Aliases: print.t.test.cluster
Hmisc::transace         Additive Regression and Transformations using
                        ace or avas
  Aliases: print.transace, print.areg.boot, print.summary.areg.boot
Hmisc::transcan         Transformations/Imputations using Canonical
                        Variates
  Aliases: print.transcan
Hmisc::varclus          Variable Clustering
  Aliases: print.varclus
MASS::dose.p            Predict Doses for Binomial Assay model
  Aliases: print.glm.dose
MASS::fractions         Rational Approximation
  Aliases: print.fractions
MASS::gamma.shape       Estimate the Shape Parameter of the Gamma
                        Distribution in a GLM Fit
  Aliases: print.gamma.shape
MASS::lda               Linear Discriminant Analysis
  Aliases: print.lda
MASS::lm.ridge          Ridge Regression
  Aliases: print.ridgelm
MASS::mca               Multiple Correspondence Analysis
  Aliases: print.mca
MASS::qda               Quadratic Discriminant Analysis
  Aliases: print.qda
MASS::rlm               Robust Fitting of Linear Models
  Aliases: print.rlm
MASS::rms.curv          Relative Curvature Measures for Non-Linear
                        Regression
  Aliases: print.rms.curv
MASS::summary.loglm     Summary Method Function for Objects of Class
                        'loglm'
  Aliases: print.summary.loglm
MASS::summary.negbin    Summary Method Function for Objects of Class
                        'negbin'
  Aliases: print.summary.negbin
MASS::summary.rlm       Summary Method for Robust Linear Models
  Aliases: print.summary.rlm
MASS::write.matrix      Write a Matrix or Data Frame
  Concepts: Printing
Matrix::diagonalMatrix-class
                        Class "diagonalMatrix" of Diagonal Matrices
  Aliases: print,diagonalMatrix-method
Matrix::formatSparseM   Formatting Sparse Numeric Matrices Utilities
  Concepts: Printing
Matrix::printSpMatrix   Format and Print Sparse Matrices Flexibly
  Aliases: printSpMatrix, printSpMatrix2
  Concepts: Printing
Matrix::sparseMatrix-class
                        Virtual Class "sparseMatrix" - Mother of Sparse
                        Matrices
  Aliases: print,sparseMatrix-method, print.sparseMatrix
MatrixModels::modelMatrix-class
                        Class "modelMatrix" and SubClasses
  Aliases: print,modelMatrix-method
PKI::oid                OBJECT IDENTIFIER Functions
  Aliases: print.oid
Rcpp::demangle          c++ type information
  Aliases: print.bytes
SparseM::slm.methods    Methods for slm objects
  Aliases: print.summary.slm, print.slm
VGAM::is.zero,NULL-method
                        Undocumented Methods Functions
  Aliases: print,VGAManova-method, print,Coef.rrvgam-method,
    print,summary.rrvgam-method, print,qrrvglm-method,
    print,Coef.qrrvglm-method, print,rrvglm-method,
    print,summary.qrrvglm-method, print,Coef.rrvglm-method,
    print,vlm-method, print,vglm-method, print,vgam-method,
    print,summary.rrvglm-method, print,summary.vgam-method,
    print,summary.vglm-method, print,summary.vlm-method,
    print,vsmooth.spline-method, print,rrvgam-method
arrow::reexports        Objects exported from other packages
  Aliases: print.integer64
backports::print.Rconcordance
                        Backport of print.Rconcordance for R < 4.3.0
  Aliases: print.Rconcordance
base::AsIs              Inhibit Interpretation/Conversion of Objects
  Aliases: print.AsIs
base::DateTimeClasses   Date-Time Classes
  Aliases: print.POSIXct, print.POSIXlt
base::Dates             Date Class
  Aliases: print.Date
base::`base-defunct`    Defunct Functions in Package 'base'
  Aliases: print.anova.glm, print.anova.lm, print.tabular, print.plot,
    print.ordered, printNoClass, print.atomic
base::`environment variables`
                        Environment Variables
  Aliases: R_PRINTCMD
base::by                Apply a Function to a Data Frame Split by
                        Factors
  Aliases: print.by
base::cat               Concatenate and Print
  Concepts: Printing
base::conditions        Condition Handling and Recovery
  Aliases: print.condition, print.restart
base::connections       Functions to Manipulate Connections (Files,
                        URLs, ...)
  Aliases: print.connection
base::difftime          Time Intervals / Differences
  Aliases: print.difftime
base::eigen             Spectral Decomposition of a Matrix
  Aliases: print.eigen
base::encodeString      Encode Character Vector as for Printing
base::format            Encode in a Common Format
  Concepts: Printing
base::format.info       format(.) Information
  Concepts: Printing
base::format.pval       Format P Values
  Concepts: Printing
base::formatC           Formatting Using C-style Formats
  Concepts: Printing
base::formatDL          Format Description Lists
  Concepts: Printing
base::getDLLRegisteredRoutines
                        Reflectance Information for C/Fortran routines
                        in a DLL
  Aliases: print.NativeRoutineList, print.DLLRegisteredRoutines
base::getLoadedDLLs     Get DLLs Loaded in Current Session
  Aliases: print.DLLInfo, print.DLLInfoList
base::hexmode           Integer Numbers Displayed in Hexadecimal
  Aliases: print.hexmode
  Concepts: Printing
base::invisible         Change the Print Mode to Invisible
base::labels            Find Labels from Object
  Concepts: Printing
base::library           Loading/Attaching and Listing of Packages
  Aliases: print.libraryIQR, print.packageInfo
base::noquote           Class for 'no quote' Printing of Character
                        Strings
  Aliases: print.noquote
  Concepts: Printing
base::numeric_version   Numeric Versions
  Aliases: print.numeric_version
base::octmode           Integer Numbers Displayed in Octal
  Aliases: print.octmode
  Concepts: Printing
base::options           Options Settings
  Concepts: Printing
base::print             Print Values
  Aliases: print, print.factor, print.function, print.listof,
    print.simple.list, print.Dlist, print.table
  Concepts: Printing
base::print.data.frame
                        Printing Data Frames
  Aliases: print.data.frame
  Concepts: Printing
base::print.default     Default Printing
  Aliases: print.default
  Concepts: Printing
base::prmatrix          Print Matrices, Old-style
  Concepts: Printing
base::proc.time         Running Time of R
  Aliases: print.proc_time
base::read.dcf          Read and Write Data in DCF Format
  Concepts: Printing
base::rle               Run Length Encoding
  Aliases: print.rle
base::source            Read R Code from a File, a Connection or
                        Expressions
  Aliases: withAutoprint
base::sprintf           Use C-style String Formatting Commands
  Aliases: sprintf
  Concepts: Printing
base::srcfile           References to Source Files and Code
  Aliases: print.srcfile, print.srcref
base::summary           Object Summaries
  Aliases: print.summaryDefault
base::table             Cross Tabulation and Table Creation
  Aliases: print.summary.table
base::traceback         Get and Print Call Stacks
base::warnings          Print Warning Messages
  Aliases: print.warnings, print.summary.warnings
bit64::as.character.integer64
                        Coerce from integer64
  Aliases: print.bitstring
bit64::bit64-package    A S3 class for vectors of 64bit integers
  Aliases: print.integer64
bit64::cache            Atomic Caching
  Aliases: print.cache
bit::physical.default   Physical and virtual attributes
  Aliases: print.physical, print.virtual
bit::print.bit          Print method for bit
  Aliases: print.bit
bit::print.bitwhich     Print method for bitwhich
  Aliases: print.bitwhich
bit::ri                 Range index
  Aliases: print.ri
boot::print.boot        Print a Summary of a Bootstrap Object
  Aliases: print.boot
boot::print.bootci      Print Bootstrap Confidence Intervals
  Aliases: print.bootci
  Concepts: Printing
boot::print.saddle.distn
                        Print Quantiles of Saddlepoint Approximations
  Aliases: print.saddle.distn
  Concepts: Printing
boot::print.simplex     Print Solution to Linear Programming Problem
  Aliases: print.simplex
  Concepts: Printing
bslib::print.bslib_fragment
                        Print a bslib page/fragment
  Aliases: print.bslib_fragment, print.bslib_page
cctu::print.cttab       Print
  Aliases: print.cttab
cellranger::print.ra_ref
                        Print ra_ref object
  Aliases: print.ra_ref
cli::cat_line           'cat()' helpers
  Aliases: cat_print
cli::cli_fmt            Capture the output of cli functions instead of
                        printing it
cli::cli_format         Format a value for printing
cli::pretty_print_code
                        Turn on pretty-printing functions at the R
                        console
  Aliases: pretty_print_code
cli::ruler              Print the helpful ruler to the screen
cluster::clusGap        Gap Statistic for Estimating the Number of
                        Clusters
  Aliases: print.clusGap
cluster::ellipsoidhull
                        Compute the Ellipsoid Hull or Spanning
                        Ellipsoid of a Point Set
  Aliases: print.ellipsoid
cluster::print.agnes    Print Method for AGNES Objects
  Aliases: print.agnes
  Concepts: Printing
cluster::print.clara    Print Method for CLARA Objects
  Aliases: print.clara
  Concepts: Printing
cluster::print.diana    Print Method for DIANA Objects
  Aliases: print.diana
  Concepts: Printing
cluster::print.dissimilarity
                        Print and Summary Methods for Dissimilarity
                        Objects
  Aliases: print.dissimilarity, print.summary.dissimilarity
  Concepts: Printing
cluster::print.fanny    Print and Summary Methods for FANNY Objects
  Aliases: print.fanny, print.summary.fanny
  Concepts: Printing
cluster::print.mona     Print Method for MONA Objects
  Aliases: print.mona
  Concepts: Printing
cluster::print.pam      Print Method for PAM Objects
  Aliases: print.pam
  Concepts: Printing
cluster::silhouette     Compute or Extract Silhouette Information from
                        Clustering
  Aliases: print.summary.silhouette
cluster::summary.agnes
                        Summary Method for 'agnes' Objects
  Aliases: print.summary.agnes
  Concepts: Printing
cluster::summary.clara
                        Summary Method for 'clara' Objects
  Aliases: print.summary.clara
  Concepts: Printing
cluster::summary.diana
                        Summary Method for 'diana' Objects
  Aliases: print.summary.diana
  Concepts: Printing
cluster::summary.mona   Summary Method for 'mona' Objects
  Aliases: print.summary.mona
  Concepts: Printing
cluster::summary.pam    Summary Method for PAM Objects
  Aliases: print.summary.pam
codetools::showTree     Print Lisp-Style Representation of R Expression
colorspace::hcl_palettes
                        HCL Color Palettes
  Aliases: print.hcl_palettes
consort::plot.consort   Add methods to print function
  Aliases: print.consort
covr::print.coverage    Print a coverage object
  Aliases: print.coverage
coxme::print.coxme      Print method for a coxme fit.
  Aliases: print.coxme
coxme::print.lmekin     Print function for lmekin
  Aliases: print.lmekin
data.table::IDateTime   Integer based date class
  Aliases: print.ITime
data.table::print.data.table
                        data.table Printing Options
  Aliases: print.data.table
data.table::shouldPrint
                        For use by packages that mimic/divert auto
                        printing e.g. IRkernel and knitr
  Aliases: shouldPrint
data.table::timetaken   Pretty print of time taken
desc::desc_print        Print the contents of a DESCRIPTION file to the
                        screen
  Aliases: desc_print
diffobj::diffPrint      Diff 'print'ed Objects
  Aliases: diffPrint, diffPrint,ANY-method
diffobj::guides         Generic Methods to Implement Flexible Guide
                        Line Computations
  Aliases: guidesPrint,, guidesPrint, guidesPrint,ANY,character-method
diffobj::trim           Methods to Remove Unsemantic Text Prior to Diff
  Aliases: trimPrint,, trimPrint, trimPrint,ANY,character-method
duckdb::duckdb_explain-class
                        DuckDB EXPLAIN query tree
  Aliases: print.duckdb_explain
eudract::print.dot_plot
                        print methods for dot_plot object
  Aliases: print.dot_plot
eudract::print.safety_summary
                        print method for safety summary object
  Aliases: print.safety_summary
fontawesome::print.fontawesome
                        Print the fontawesome icon to the Viewer
  Aliases: print.fontawesome
foreign::write.arff     Write Data into ARFF Files
  Concepts: Printing
fs::dir_tree            Print contents of directories in a tree-like
                        format
gee::gee                Function to solve a Generalized Estimation
                        Equation Model
  Aliases: print.gee, print.summary.gee
ggplot2::print.ggplot   Explicitly draw plot
  Aliases: print.ggplot
ggplot2::print.ggproto
                        Format or print a ggproto object
  Aliases: print.ggproto
gh::print.gh_response   Print the result of a GitHub API call
  Aliases: print.gh_response
glmnet::print.cv.glmnet
                        print a cross-validated glmnet object
  Aliases: print.cv.glmnet, print.cv.relaxed
glmnet::print.glmnet    print a glmnet object
  Aliases: print.glmnet, print.relaxed, print.bigGlm
grDevices::dev.copy     Copy Graphics Between Multiple Devices
  Aliases: dev.print
grDevices::recordPlot   Record and Replay Plots
  Aliases: print.recordedplot
grDevices::windows      Windows Graphics Devices
  Aliases: win.print, print.SavedPlots
gt::print.gt_tbl        Print a *gt* table
  Aliases: print.gt_tbl, print.gt_group, print.rtf_text
gtable::print.gtable    Print a gtable object
  Aliases: print.gtable
haven::print_labels     Print the labels of a labelled vector
  Aliases: print_labels
haven::tagged_na        "Tagged" missing values
  Aliases: print_tagged_na
hms::hms                A simple class for storing time-of-day values
  Aliases: print.hms
htmlTable::htmlTable    Output an HTML table
  Aliases: knit_print.htmlTable, print.htmlTable
htmlTable::interactiveTable
                        An interactive table that allows you to limit
                        the size of boxes
  Aliases: knit_print.interactiveTable, print.interactiveTable
htmlTable::prConvertDfFactors
                        Convert all factors to characters to print them
                        as they expected
htmlTable::prSkipRownames
                        Returns if rownames should be printed for the
                        htmlTable
htmltools::html_print   Implementation of the print method for HTML
  Aliases: html_print
htmltools::knitr_methods
                        Knitr S3 methods
  Aliases: knit_print.shiny.tag, knit_print.html,
    knit_print.shiny.tag.list, knit_print.html_dependency
htmltools::print.shiny.tag
                        Print method for HTML/tags
  Aliases: print.shiny.tag, print.html
httr::parse_http_date   Parse and print http dates.
igraph::cohesive_blocks
                        Calculate Cohesive Blocks
  Aliases: print.cohesiveBlocks
igraph::head_print      Print the only the head of an R object
  Aliases: head_print
igraph::indent_print    Indent a printout
  Aliases: indent_print
igraph::is_printer_callback
                        Is this a printer callback?
  Aliases: is_printer_callback
  Concepts: printer callbacks
igraph::layout_         Graph layouts
  Aliases: print.igraph_layout_spec, print.igraph_layout_modifier
igraph::membership      Functions to deal with the result of network
                        community detection
  Aliases: print.communities
igraph::print.igraph    Print graphs to the terminal
  Aliases: print.igraph, print_all
  Concepts: print
igraph::print.igraph.es
                        Print an edge sequence to the screen
  Aliases: print.igraph.es
igraph::print.igraph.vs
                        Show a vertex sequence on the screen
  Aliases: print.igraph.vs
igraph::print.igraphHRG
                        Print a hierarchical random graph model to the
                        screen
  Aliases: print.igraphHRG
igraph::print.igraphHRGConsensus
                        Print a hierarchical random graph consensus
                        tree to the screen
  Aliases: print.igraphHRGConsensus
igraph::printer_callback
                        Create a printer callback function
  Aliases: printer_callback
  Concepts: printer callbacks
inline::utilities       Printing, reading and writing compiled function
                        objects
  Aliases: print,CFunc-method, print,CFuncList-method
kableExtra::html_dependency_kePrint
                        HTML dependency for Javascript to enable
                        bootstrap tooltip and popup message
  Aliases: html_dependency_kePrint
kableExtra::landscape   Print the table on an isolated landscape page
                        in PDF
kinship2::autohint      Align a pedigree to print well
kinship2::pedigree      Create a pedigree or pedigreeList object
  Aliases: print.pedigree, print.pedigreeList
kinship2::pedigree.shrink
                        Shrink pedigree object
  Aliases: print.pedigree.shrink
knitr::knit_meta        Metadata about objects to be printed
knitr::knit_print       A custom printing function
  Aliases: knit_print, normal_print
lattice::equal.count    shingles
  Aliases: print.shingle, print.shingleLevel
  Concepts: Printing
lattice::print.trellis
                        Plot and Summarize Trellis Objects
  Aliases: print.trellis
lme4::.prt.methTit      Print and Summary Method Utilities for Mixed
                        Effects
lme4::VarCorr           Extract Variance and Correlation Components
  Aliases: print.VarCorr.merMod
lme4::merMod-class      Class "merMod" of Fitted Mixed-Effect Models
  Aliases: print.merMod, print.summary.merMod
loo::loo_compare        Model comparison
  Aliases: print.compare.loo, print.compare.loo_ss
loo::print.loo          Print methods
  Aliases: print.loo, print.waic, print.psis_loo,
    print.importance_sampling_loo, print.psis_loo_ap, print.psis,
    print.importance_sampling
loo::print_dims         Print dimensions of log-likelihood or
                        log-weights matrix
  Aliases: print_dims, print_dims.importance_sampling,
    print_dims.psis_loo, print_dims.importance_sampling_loo,
    print_dims.waic, print_dims.kfold, print_dims.psis_loo_ss
magrittr::print.fseq    Print method for functional sequence.
  Aliases: print.fseq
methods::MethodsList    'MethodsList' Objects
  Aliases: print.MethodsList
methods::completeSubclasses
                        Utilities for Managing Class Definitions
  Aliases: print.classRepresentation
methods::traceable-class
                        Classes Used Internally to Control Tracing
  Aliases: .doTracePrint
mgcv::anova.gam         Approximate hypothesis tests related to GAM
                        fits
  Aliases: print.anova.gam
mgcv::print.gam         Print a Generalized Additive Model object.
  Aliases: print.gam
mgcv::summary.gam       Summary for a GAM fit
  Aliases: print.summary.gam
mice::mads              Multivariate amputed data set ('mads')
  Aliases: print.mads
mice::mids              Multiply imputed data set ('mids')
  Aliases: print.mids
mice::mipo              'mipo': Multiple imputation pooled object
  Aliases: print.mipo, print.mipo.summary
mice::print.mira        Print a 'mira' object
  Aliases: print.mira, print.mice.anova, print.mice.anova.summary
mitml::plot.mitml       Print diagnostic plots
nlme::VarCorr           Extract variance and correlation components
  Aliases: print.VarCorr.lme
nlme::anova.lme         Compare Likelihoods of Fitted Objects
  Aliases: print.anova.lme
nlme::compareFits       Compare Fitted Objects
  Aliases: print.compareFits
nlme::corNatural        General correlation in natural parameterization
  Aliases: print.corNatural
nlme::getVarCov         Extract variance-covariance matrix
  Aliases: print.VarCov
nlme::intervals.gls     Confidence Intervals on gls Parameters
  Aliases: print.intervals.gls
nlme::intervals.lmList
                        Confidence Intervals on lmList Coefficients
  Aliases: print.intervals.lmList
nlme::intervals.lme     Confidence Intervals on lme Parameters
  Aliases: print.intervals.lme
nlme::lmList            List of lm Objects with a Common Model
  Aliases: print.lmList
nlme::print.summary.pdMat
                        Print a summary.pdMat Object
  Aliases: print.summary.pdMat
nlme::print.varFunc     Print a varFunc Object
  Aliases: print.varFunc, print.varComb
nlme::random.effects    Extract Random Effects
  Aliases: print.ranef
nlme::ranef.lme         Extract lme Random Effects
  Aliases: print.ranef.lme
nlme::reStruct          Random Effects Structure
  Aliases: print.reStruct
nlme::simulate.lme      Simulate Results from 'lme' Models
  Aliases: print.simulate.lme
nlme::summary.lme       Summarize an lme Object
  Aliases: print.summary.lme
nloptr::nloptr.print.options
                        Print description of nloptr options
  Aliases: nloptr.print.options
nloptr::print.nloptr    Print results after running nloptr
  Aliases: print.nloptr
nnet::multinom          Fit Multinomial Log-linear Models
  Aliases: print.multinom, print.summary.multinom
nnet::nnet              Fit Neural Networks
  Aliases: print.nnet, print.summary.nnet
openssl::fingerprint    OpenSSH fingerprint
  Aliases: fingerprint
openxlsx::pageSetup     Set page margins, orientation and print scaling
ordinal::convergence    Check convergence of cumulative link models
  Aliases: print.convergence.clm
pillar::format_glimpse
                        Format a vector for horizontal printing
pillar::format_tbl      Formatting of tbl objects
  Aliases: print.tbl
pillar::pillar_shaft    Column data
  Aliases: print.pillar_shaft
pkgdown::pkgdown_print
                        Print object in pkgdown output
  Aliases: pkgdown_print
plotly::knit_print.api_grid
                        Embed a plotly grid as an iframe in a knitr doc
  Aliases: knit_print.api_grid
plotly::knit_print.api_grid_local
                        Embed a plotly grid as an iframe in a knitr doc
  Aliases: knit_print.api_grid_local
plotly::knit_print.api_plot
                        Embed a plotly figure as an iframe in a knitr
                        doc
  Aliases: knit_print.api_plot
plotly::print.api       Print method for a 'generic' API response
  Aliases: print.api
plotly::print.api_grid
                        Print a plotly grid object
  Aliases: print.api_grid
plotly::print.api_grid_local
                        Print a plotly grid object
  Aliases: print.api_grid_local
plotly::print.api_plot
                        Print a plot on plotly's platform
  Aliases: print.api_plot
plotly::print.kaleidoScope
                        Print method for kaleido
  Aliases: print.kaleidoScope
plyr::print.quoted      Print quoted variables.
  Aliases: print.quoted
plyr::print.split       Print split.
  Aliases: print.split
polspline::summary.hare
                        Hare: hazard regression
  Aliases: print.hare
polspline::summary.heft
                        Heft: hazard estimation with flexible tails
  Aliases: print.heft
polspline::summary.logspline
                        Logspline Density Estimation
  Aliases: print.logspline
polspline::summary.lspec
                        Lspec: logspline estimation of a spectral
                        distribution
  Aliases: print.lspec
polspline::summary.oldlogspline
                        Logspline Density Estimation - 1992 version
  Aliases: print.oldlogspline
polspline::summary.polyclass
                        Polyclass: polychotomous regression and
                        multiple classification
  Aliases: print.polyclass
polspline::summary.polymars
                        Polymars: multivariate adaptive polynomial
                        spline regression
  Aliases: print.polymars
posterior::print.draws_array
                        Print 'draws_array' objects
  Aliases: print.draws_array
posterior::print.draws_df
                        Print 'draws_df' objects
  Aliases: print.draws_df
posterior::print.draws_list
                        Print 'draws_list' objects
  Aliases: print.draws_list
posterior::print.draws_matrix
                        Print 'draws_matrix' objects
  Aliases: print.draws_matrix
posterior::print.draws_rvars
                        Print 'draws_rvars' objects
  Aliases: print.draws_rvars
posterior::print.draws_summary
                        Print summaries of 'draws' objects
  Aliases: print.draws_summary
posterior::print.rvar   Print or format a random variable
  Aliases: print.rvar
prettyunits::pretty_round
                        Round a value to a defined number of digits
                        printing out trailing zeros, if applicable
prettyunits::pretty_signif
                        Round a value to a defined number of
                        significant digits printing out trailing zeros,
                        if applicable
profvis::print.profvis
                        Print a profvis object
  Aliases: print.profvis
ps::ps_handle           Create a process handle
  Aliases: print.ps_handle
quantreg::ParetoTest    Estimation and Inference on the Pareto Tail
                        Exponent for Linear Models
  Aliases: print.Hill, print.summary.Hill, print.Pickands,
    print.summary.Pickands
quantreg::anova.rq      Anova function for quantile regression fits
  Aliases: print.anova.rq
quantreg::crq           Functions to fit censored quantile regression
                        models
  Aliases: print.crq
quantreg::dynrq         Dynamic Linear Quantile Regression
  Aliases: print.dynrq, print.dynrqs, print.summary.dynrq,
    print.summary.dynrqs
quantreg::nlrq          Function to compute nonlinear quantile
                        regression estimates
  Aliases: print.nlrq, print.summary.nlrq
quantreg::print.KhmaladzeTest
                        Print a KhmaladzeTest object
  Aliases: print.KhmaladzeTest
quantreg::print.rq      Print an rq object
  Aliases: print.rq, print.rqs
quantreg::print.summary.rq
                        Print Quantile Regression Summary Object
  Aliases: print.summary.rq, print.summary.rqs
quantreg::rqss.object   RQSS Objects and Summarization Thereof
  Aliases: print.rqss
quantreg::summary.crq   Summary methods for Censored Quantile
                        Regression
  Aliases: print.summary.crq, print.summary.crqs
quantreg::summary.rqss
                        Summary of rqss fit
  Aliases: print.summary.rqss
rcmdcheck::print.rcmdcheck
                        Print R CMD check results
  Aliases: print.rcmdcheck
rcmdcheck::print.rcmdcheck_comparison
                        Print R CMD check result comparisons
  Aliases: print.rcmdcheck_comparison
reactable::knit_print.reactable
                        Print a reactable widget for knitr
  Aliases: knit_print.reactable
renv::diagnostics       Print a diagnostics report
rex::as.character.regex
                        Regular Expression
  Aliases: print.regex
rlang::env_print        Pretty-print an environment
  Aliases: env_print
rlang::expr_print       Print an expression
  Aliases: expr_print
rlang::quo_label        Format quosures for printing or labelling
rms::Gls                Fit Linear Model Using Generalized Least
                        Squares
  Aliases: print.Gls
rms::Predict            Compute Predicted Values and Confidence Limits
  Aliases: print.Predict
rms::Rq                 rms Package Interface to quantreg Package
  Aliases: print.Rq
rms::anova.rms          Analysis of Variance (Wald, LR, and F
                        Statistics)
  Aliases: print.anova.rms
rms::bj                 Buckley-James Multiple Regression Model
  Aliases: print.bj
rms::calibrate          Resampling Model Calibration
  Aliases: print.calibrate, print.calibrate.default
rms::contrast.rms       General Contrasts of Regression Coefficients
  Aliases: print.contrast.rms
rms::datadist           Distribution Summaries for Predictor Variables
  Aliases: print.datadist
rms::fastbw             Fast Backward Variable Selection
  Aliases: print.fastbw
rms::gIndex             Calculate Total and Partial g-indexes for an
                        rms Fit
  Aliases: print.gIndex
rms::lrm                Logistic Regression Model
  Aliases: print.lrm
rms::nomogram           Draw a Nomogram Representing a Regression Fit
  Aliases: print.nomogram
rms::orm                Ordinal Regression Model
  Aliases: print.orm
rms::pentrace           Trace AIC and BIC vs. Penalty
  Aliases: print.pentrace
rms::pphsm              Parametric Proportional Hazards form of AFT
                        Models
  Aliases: print.pphsm
rms::print.Glm          print.glm
  Aliases: print.Glm
rms::print.cph          Print cph Results
  Aliases: print.cph
  Concepts: Printing
rms::print.impactPO     Print Result from impactPO
  Aliases: print.impactPO
rms::print.ols          Print ols
  Aliases: print.ols
  Concepts: Printing
rms::print.rexVar       print.rexVar
  Aliases: print.rexVar
rms::psm                Parametric Survival Model
  Aliases: print.psm
rms::rmsMisc            Miscellaneous Design Attributes and Utility
                        Functions
  Aliases: print.rms, print.lrtest, latex.naprint.delete,
    html.naprint.delete
rms::specs.rms          rms Specifications for Models
  Aliases: print.specs.rms
rms::summary.rms        Summary of Effects in Model
  Aliases: print.summary.rms
rms::survest.psm        Parametric Survival Estimates
  Aliases: print.survest.psm
rms::val.prob           Validate Predicted Probabilities
  Aliases: print.val.prob
rms::val.surv           Validate Predicted Probabilities Against
                        Observed Survival Times
  Aliases: print.val.survh
rms::validate           Resampling Validation of a Fitted Model's
                        Indexes of Fit
  Aliases: print.validate
rms::validate.rpart     Dxy and Mean Squared Error by Cross-validating
                        a Tree Sequence
  Aliases: print.validate.rpart
rmsb::print.blrm        Print 'blrm()' Results
  Aliases: print.blrm
rmsb::print.blrmStats   Print Details for 'blrmStats' Predictive
                        Accuracy Measures
  Aliases: print.blrmStats
rmsb::print.predict.blrm
                        Print Predictions for 'blrm()'
  Aliases: print.predict.blrm
rmsb::print.rmsb        Basic Print for Bayesian Parameter Summary
  Aliases: print.rmsb
rmsb::stanDx            Print Stan Diagnostics
rpart::print.rpart      Print an Rpart Object
  Aliases: print.rpart
rpart::printcp          Displays CP table for Fitted Rpart Object
  Aliases: printcp
rpart::solder.balance   Soldering of Components on Printed-Circuit
                        Boards
rstan::monitor          Compute summaries of MCMC draws and monitor
                        convergence
  Aliases: print.simsummary
rstan::print.stanfit    Print a summary for a fitted model represented
                        by a 'stanfit' object
  Aliases: print.stanfit
rstan::sbc              Simulation Based Calibration (sbc)
  Aliases: print.sbc
sessioninfo::session_info
                        Print session information
shades::shade           The shade class
  Aliases: print.shade
shiny::knitr_methods    Knitr S3 methods
  Aliases: knit_print.shiny.appobj, knit_print.shiny.render.function,
    knit_print.reactive
shiny::renderPrint      Text Output
  Aliases: renderPrint
shiny::shiny.appobj     Shiny App object
  Aliases: print.shiny.appobj
shiny::shinyDeprecated
                        Print message for deprecated functions in Shiny
shiny::stacktrace       Stack trace manipulation functions
  Aliases: printError, printStackTrace
sp::CRS-class           Class "CRS" of coordinate reference system
                        arguments
  Aliases: print.CRS
sp::DMS-class           Class "DMS" for degree, minute, decimal second
                        values
  Aliases: print.DMS
sp::GridTopology-class
                        Class "GridTopology"
  Aliases: print.summary.GridTopology
sp::Spatial-class       Class "Spatial"
  Aliases: print.summary.Spatial
sp::SpatialGrid-class   Class "SpatialGrid"
  Aliases: print.summary.SpatialGrid
sp::SpatialGridDataFrame-class
                        Class "SpatialGridDataFrame"
  Aliases: print.summary.SpatialGridDataFrame
sp::SpatialMultiPoints-class
                        Class "SpatialMultiPoints"
  Aliases: print.SpatialMultiPoints
sp::SpatialMultiPointsDataFrame-class
                        Class "SpatialMultiPointsDataFrame"
  Aliases: print.SpatialMultiPointsDataFrame
sp::SpatialPixels-class
                        Class "SpatialPixels"
  Aliases: print.summary.SpatialPixels
sp::SpatialPixelsDataFrame-class
                        Class "SpatialPixelsDataFrame"
  Aliases: print.summary.SpatialPixelsDataFrame
sp::SpatialPoints-class
                        Class "SpatialPoints"
  Aliases: print.SpatialPoints
sp::SpatialPointsDataFrame-class
                        Class "SpatialPointsDataFrame"
  Aliases: print.SpatialPointsDataFrame
sp::bpy.colors          blue-pink-yellow color scheme, which also
                        prints well on black/white printers
stats::HoltWinters      Holt-Winters Filtering
  Aliases: print.HoltWinters
stats::StructTS         Fit Structural Time Series
  Aliases: print.StructTS
stats::`stats-defunct`
                        Defunct Functions in Package 'stats'
  Aliases: print.coefmat
stats::aov              Fit an Analysis of Variance Model
  Aliases: print.aov, print.aovlist
stats::ar               Fit Autoregressive Models to Time Series
  Aliases: print.ar
stats::arima0           ARIMA Modelling of Time Series - Preliminary
                        Version
  Aliases: print.arima0
stats::dendrogram       General Tree Structures
  Aliases: print.dendrogram
stats::dist             Distance Matrix Computation
  Aliases: print.dist
stats::ecdf             Empirical Cumulative Distribution Function
  Aliases: print.ecdf
stats::formula          Model Formulae
  Aliases: print.formula
stats::hclust           Hierarchical Clustering
  Aliases: print.hclust
stats::integrate        Integration of One-Dimensional Functions
  Aliases: print.integrate
stats::kmeans           K-Means Clustering
  Aliases: print.kmeans
stats::lm               Fitting Linear Models
  Aliases: print.lm
stats::loadings         Print Loadings in Factor Analysis
  Aliases: print.loadings, print.factanal
  Concepts: Printing
stats::ls.print         Print 'lsfit' Regression Results
  Aliases: ls.print
stats::naprint          Adjust for Missing Values
  Aliases: naprint, naprint.default, naprint.exclude, naprint.omit
stats::plot.isoreg      Plot Method for 'isoreg' Objects
  Concepts: Printing
stats::prcomp           Principal Components Analysis
  Aliases: print.prcomp, print.summary.prcomp
stats::princomp         Principal Components Analysis
  Aliases: print.princomp
stats::print.power.htest
                        Print Methods for Hypothesis Tests and Power
                        Calculation Objects
  Aliases: print.htest, print.power.htest
stats::print.ts         Printing and Formatting of Time-Series Objects
  Aliases: print.ts
stats::printCoefmat     Print Coefficient Matrices
  Aliases: printCoefmat
  Concepts: Printing
stats::read.ftable      Manipulate Flat Contingency Tables
  Aliases: print.ftable
stats::stepfun          Step Functions - Creation and Class
  Aliases: print.stepfun
stats::summary.aov      Summarize an Analysis of Variance Model
  Aliases: print.summary.aov, print.summary.aovlist
stats::summary.glm      Summarizing Generalized Linear Model Fits
  Aliases: print.summary.glm
stats::summary.lm       Summarizing Linear Model Fits
  Aliases: print.summary.lm
stats::summary.manova   Summary Method for Multivariate Analysis of
                        Variance
  Aliases: print.summary.manova
stats::summary.nls      Summarizing Non-Linear Least-Squares Model Fits
  Aliases: print.summary.nls
stats::summary.princomp
                        Summary method for Principal Components
                        Analysis
  Aliases: print.summary.princomp
stats::xtabs            Cross Tabulation
  Aliases: print.xtabs
stringi::`%s$%`         C-Style Formatting with 'stri_sprintf' as a
                        Binary Operator
stringi::stri_sprintf   Format Strings
  Aliases: stri_sprintf, stri_printf
survival::cox.zph       Test the Proportional Hazards Assumption of a
                        Cox Regression
  Aliases: print.cox.zph
survival::coxph         Fit Proportional Hazards Regression Model
  Aliases: print.coxph.null, print.coxph.penal
survival::coxph.object
                        Proportional Hazards Regression Object
  Aliases: print.coxph
survival::print.aareg   Print an aareg object
  Aliases: print.aareg
survival::print.summary.coxph
                        Print method for summary.coxph objects
  Aliases: print.summary.coxph
survival::print.summary.survexp
                        Print Survexp Summary
  Aliases: print.summary.survexp
survival::print.summary.survfit
                        Print Survfit Summary
  Aliases: print.summary.survfit
  Concepts: Printing
survival::print.survfit
                        Print a Short Summary of a Survival Curve
  Aliases: print.survfit
survival::survdiff      Test Survival Curve Differences
  Aliases: print.survdiff
survival::survexp       Compute Expected Survival
  Aliases: print.survexp
survival::survreg       Regression for a Parametric Survival Model
  Aliases: print.survreg.penal, print.summary.survreg
survival::survreg.object
                        Parametric Survival Model Object
  Aliases: print.survreg
tcltk::TclInterface     Low-level Tcl/Tk Interface
  Aliases: print.tclObj
tensorA::ftable.tensor
                        Pretty printing of tensors
testthat::capture_output
                        Capture output to console
  Aliases: testthat_print
testthat::expect_output
                        Does code print output to the console?
testthat::oldskool      Old-style expectations.
  Aliases: prints_text
tibble::formatting      Printing tibbles
  Aliases: print.tbl, print.tbl_df
tibble::trunc_mat       Legacy printing
tools::.print.via.format
                        Printing Utilities
  Aliases: .print.via.format
tools::QC               QC Checks for R Code and/or Documentation
  Aliases: print.checkDocFiles, print.checkDocStyle,
    print.checkReplaceFuns, print.checkS3methods, print.checkRdContents
tools::checkFF          Check Foreign Function Calls
  Aliases: print.checkFF
tools::checkTnF         Check R Packages or Code for T/F
  Aliases: print.checkTnF
tools::checkVignettes   Check Package Vignettes
  Aliases: print.checkVignettes
tools::codoc            Check Code/Documentation Consistency
  Aliases: print.codoc, print.codocClasses, print.codocData
tools::parse_Rd         Parse an Rd File
  Aliases: print.Rd
tools::undoc            Find Undocumented Objects
  Aliases: print.undoc
utf8::utf8_encode       Encode Character Object as for UTF-8 Printing
utf8::utf8_print        Print UTF-8 Text
  Aliases: utf8_print
utils::bibentry         Bibliography Entries
  Aliases: print.bibentry, print.citation
utils::browseVignettes
                        List Vignettes in an HTML Browser
  Aliases: print.browseVignettes
utils::changedFiles     Detect which Files Have Changed
  Aliases: print.changedFiles, print.fileSnapshot
utils::data             Data Sets
  Aliases: print.packageIQR
utils::formatUL         Format Unordered and Ordered Lists
  Concepts: Printing
utils::getAnywhere      Retrieve an R Object, Including from a
                        Namespace
  Aliases: print.getAnywhere
utils::hashtab          Hash Tables (Experimental)
  Aliases: print.hashtab
utils::help.search      Search the Help System
  Aliases: print.hsearch
utils::ls.str           List Objects and their Structure
  Aliases: print.ls_str
  Concepts: Printing
utils::make.socket      Create a Socket Connection
  Aliases: print.socket
utils::methods          List Methods for S3 Generic Functions or
                        Classes
  Aliases: print.MethodsFunction
utils::news             Build and Query R or Package News Information
  Aliases: print.news_db
utils::object.size      Report the Space Allocated for an Object
  Aliases: print.object_size
utils::packageDescription
                        Package Description
  Aliases: print.packageDescription
utils::packageStatus    Package Management Tools
  Aliases: print.packageStatus
utils::person           Persons
  Aliases: print.person
utils::sessionInfo      Collect Information About the Current R Session
  Aliases: print.sessionInfo
utils::str              Compactly Display the Structure of an Arbitrary
                        R Object
  Concepts: Printing
utils::toLatex          Converting R Objects to BibTeX or LaTeX
  Aliases: print.Latex, print.Bibtex
utils::vignette         View, List or Get R Source of Package Vignettes
  Aliases: print.vignette
utils::write.table      Data Output
  Concepts: Printing
vctrs::obj_print        'print()' and 'str()' generics.
  Aliases: obj_print, obj_print_header, obj_print_data,
    obj_print_footer
xfun::raw_string        Print a character vector in its raw form
  Aliases: print.xfun_raw_string
xfun::record            Run R code and record the results
  Aliases: print.xfun_record_results
xfun::record_print      Print methods for 'record()'
  Aliases: record_print, record_print.default, record_print.record_asis
xfun::session_info      An alternative to sessionInfo() to print
                        session information
xfun::strict_list       Strict lists
  Aliases: print.xfun_strict_list
xtable::autoformat      Automatically Format Export Tables
  Concepts: Printing
xtable::caption         Retrieve and Set Options for Export Tables
  Concepts: Printing
xtable::print.xtable    Print Export Tables
  Aliases: print.xtable
  Concepts: Printing
xtable::print.xtableMatharray
                        Print Math Array
  Aliases: print.xtableMatharray
  Concepts: Printing
xtable::sanitize        Sanitization Functions
  Concepts: Printing
xtable::string          String handling functions
  Aliases: print.string
  Concepts: Printing
xtable::xtableFtable    Create and Export Flat Tables
  Aliases: print.xtableFtable
  Concepts: Printing
xtable::xtableList      Create and Export Lists of Tables
  Aliases: print.xtableList
  Concepts: Printing
xtable::xtableMatharray
                        Create LaTeX Mathematical Array
  Concepts: Printing
zoo::yearmon            An Index Class for Monthly Data
  Aliases: print.yearmon
zoo::yearqtr            An Index Class for Quarterly Data
  Aliases: print.yearqtr
zoo::zoo                Z's Ordered Observations
  Aliases: print.zoo


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> help.search(apropos = "print", agrep = FALSE)  # ignores concepts
Vignettes with name or title matching 'print' using regular expression
matching:


knitr::knit_print       Custom Print Methods
pillar::debugme         Printing a tibble: Tracking control flow
pillar::printing        Printing a tibble: Control and data flow
vctrs::pillar           Printing vectors nicely in tibbles


Type 'vignette(PKG::FOO)' to inspect entries 'PKG::FOO'.



Help files with alias or title matching 'print' using regular
expression matching:


BiocManager::valid      Validate installed package versions against
                        correct versions.
  Aliases: print.biocValid
BiocManager::version    Version of Bioconductor currently in use.
  Aliases: print.version_sentinel
DiagrammeR::print.dgr_graph
                        Print the graph to the terminal
  Aliases: print.dgr_graph
Formula::Formula        Extended Formulas: Multiple Responses and
                        Multiple Regressor Parts
  Aliases: print.Formula
Hmisc::abs.error.pred   Indexes of Absolute Prediction Error for Linear
                        Models
  Aliases: print.abs.error.pred
Hmisc::areg             Additive Regression with Optimal
                        Transformations on Both Sides using Canonical
                        Variates
  Aliases: print.areg
Hmisc::aregImpute       Multiple Imputation using Additive Regression,
                        Bootstrapping, and Predictive Mean Matching
  Aliases: print.aregImpute
Hmisc::biVar            Bivariate Summaries Computed Separately by a
                        Series of Predictors
  Aliases: print.biVar
Hmisc::bystats          Statistics by Categories
  Aliases: print.bystats, print.bystats2
Hmisc::colorFacet       Miscellaneous ggplot2 and grid Helper Functions
  Aliases: print.arrGrob
Hmisc::contents         Metadata for a Data Frame
  Aliases: print.contents.data.frame, print.contents.list
Hmisc::curveRep         Representative Curves
  Aliases: print.curveRep
Hmisc::dataDensityString
                        Internal Hmisc functions
  Aliases: naprint.keep, naprint.delete, print.substi,
    print.timePOSIXt, print.responseSummary
Hmisc::dataRep          Representativeness of Observations in a Data
                        Set
  Aliases: print.dataRep, print.predict.dataRep
Hmisc::describe         Concise Statistical Description of a Vector,
                        Matrix, Data Frame, or Formula
  Aliases: print.describe, print.describe.single
Hmisc::find.matches     Find Close Matches
  Aliases: print.find.matches
Hmisc::hoeffd           Matrix of Hoeffding's D Statistics
  Aliases: print.hoeffd
Hmisc::impute           Generic Functions and Methods for Imputation
  Aliases: print.impute
Hmisc::label            Label Attribute of an Object
  Aliases: print.labelled
Hmisc::latex            Convert an S object to LaTeX, and Related
                        Utilities
  Aliases: print.dvi, print.latex
Hmisc::list.tree        Pretty-print the Structure of a Data Object
Hmisc::mChoice          Methods for Storing and Analyzing Multiple
                        Choice Variables
  Aliases: print.mChoice, print.summary.mChoice
Hmisc::mhgr             Miscellaneous Functions for Epidemiology
  Aliases: print.mhgr, print.lrcum
Hmisc::popower          Power and Sample Size for Ordinal Response
  Aliases: print.popower, print.posamsize
Hmisc::print.char.list
                        prints a list of lists in a visually readable
                        format.
  Aliases: print.char.list
Hmisc::print.char.matrix
                        Function to print a matrix with stacked cells
  Aliases: print.char.matrix
Hmisc::print.princmp    print.princmp
  Aliases: print.princmp
Hmisc::printL           printL
  Aliases: printL
Hmisc::prn              Print and Object with its Name
Hmisc::prselect         Selectively Print Lines of a Text Vector
Hmisc::rcorr            Matrix of Correlations and P-values
  Aliases: print.rcorr
Hmisc::rcorrp.cens      Rank Correlation for Paired Predictors with a
                        Possibly Censored Response, and Integrated
                        Discrimination Index
  Aliases: print.improveProb
Hmisc::redun            Redundancy Analysis
  Aliases: print.redun
Hmisc::sas.get          Convert a SAS Dataset to an S Data Frame
  Aliases: print.special.miss
Hmisc::spower           Simulate Power of 2-Sample Test for Survival
                        under Complex Conditions
  Aliases: print.spower, print.Quantile2
Hmisc::summary.formula
                        Summarize Data for Making Tables and Plots
  Aliases: print.summary.formula.response,
    print.summary.formula.reverse, print.summary.formula.cross
Hmisc::summaryM         Summarize Mixed Data Types vs. Groups
  Aliases: print.summaryM, printsummaryM
Hmisc::t.test.cluster   t-test for Clustered Data
  Aliases: print.t.test.cluster
Hmisc::transace         Additive Regression and Transformations using
                        ace or avas
  Aliases: print.transace, print.areg.boot, print.summary.areg.boot
Hmisc::transcan         Transformations/Imputations using Canonical
                        Variates
  Aliases: print.transcan
Hmisc::varclus          Variable Clustering
  Aliases: print.varclus
MASS::dose.p            Predict Doses for Binomial Assay model
  Aliases: print.glm.dose
MASS::fractions         Rational Approximation
  Aliases: print.fractions
MASS::gamma.shape       Estimate the Shape Parameter of the Gamma
                        Distribution in a GLM Fit
  Aliases: print.gamma.shape
MASS::lda               Linear Discriminant Analysis
  Aliases: print.lda
MASS::lm.ridge          Ridge Regression
  Aliases: print.ridgelm
MASS::mca               Multiple Correspondence Analysis
  Aliases: print.mca
MASS::qda               Quadratic Discriminant Analysis
  Aliases: print.qda
MASS::rlm               Robust Fitting of Linear Models
  Aliases: print.rlm
MASS::rms.curv          Relative Curvature Measures for Non-Linear
                        Regression
  Aliases: print.rms.curv
MASS::summary.loglm     Summary Method Function for Objects of Class
                        'loglm'
  Aliases: print.summary.loglm
MASS::summary.negbin    Summary Method Function for Objects of Class
                        'negbin'
  Aliases: print.summary.negbin
MASS::summary.rlm       Summary Method for Robust Linear Models
  Aliases: print.summary.rlm
Matrix::diagonalMatrix-class
                        Class "diagonalMatrix" of Diagonal Matrices
  Aliases: print,diagonalMatrix-method
Matrix::printSpMatrix   Format and Print Sparse Matrices Flexibly
  Aliases: printSpMatrix, printSpMatrix2
Matrix::sparseMatrix-class
                        Virtual Class "sparseMatrix" - Mother of Sparse
                        Matrices
  Aliases: print,sparseMatrix-method, print.sparseMatrix
MatrixModels::modelMatrix-class
                        Class "modelMatrix" and SubClasses
  Aliases: print,modelMatrix-method
PKI::oid                OBJECT IDENTIFIER Functions
  Aliases: print.oid
Rcpp::demangle          c++ type information
  Aliases: print.bytes
SparseM::slm.methods    Methods for slm objects
  Aliases: print.summary.slm, print.slm
VGAM::is.zero,NULL-method
                        Undocumented Methods Functions
  Aliases: print,VGAManova-method, print,Coef.rrvgam-method,
    print,summary.rrvgam-method, print,qrrvglm-method,
    print,Coef.qrrvglm-method, print,rrvglm-method,
    print,summary.qrrvglm-method, print,Coef.rrvglm-method,
    print,vlm-method, print,vglm-method, print,vgam-method,
    print,summary.rrvglm-method, print,summary.vgam-method,
    print,summary.vglm-method, print,summary.vlm-method,
    print,vsmooth.spline-method, print,rrvgam-method
arrow::reexports        Objects exported from other packages
  Aliases: print.integer64
backports::print.Rconcordance
                        Backport of print.Rconcordance for R < 4.3.0
  Aliases: print.Rconcordance
base::AsIs              Inhibit Interpretation/Conversion of Objects
  Aliases: print.AsIs
base::DateTimeClasses   Date-Time Classes
  Aliases: print.POSIXct, print.POSIXlt
base::Dates             Date Class
  Aliases: print.Date
base::`base-defunct`    Defunct Functions in Package 'base'
  Aliases: print.anova.glm, print.anova.lm, print.tabular, print.plot,
    print.ordered, printNoClass, print.atomic
base::`environment variables`
                        Environment Variables
  Aliases: R_PRINTCMD
base::by                Apply a Function to a Data Frame Split by
                        Factors
  Aliases: print.by
base::cat               Concatenate and Print
base::conditions        Condition Handling and Recovery
  Aliases: print.condition, print.restart
base::connections       Functions to Manipulate Connections (Files,
                        URLs, ...)
  Aliases: print.connection
base::difftime          Time Intervals / Differences
  Aliases: print.difftime
base::eigen             Spectral Decomposition of a Matrix
  Aliases: print.eigen
base::encodeString      Encode Character Vector as for Printing
base::getDLLRegisteredRoutines
                        Reflectance Information for C/Fortran routines
                        in a DLL
  Aliases: print.NativeRoutineList, print.DLLRegisteredRoutines
base::getLoadedDLLs     Get DLLs Loaded in Current Session
  Aliases: print.DLLInfo, print.DLLInfoList
base::hexmode           Integer Numbers Displayed in Hexadecimal
  Aliases: print.hexmode
base::invisible         Change the Print Mode to Invisible
base::library           Loading/Attaching and Listing of Packages
  Aliases: print.libraryIQR, print.packageInfo
base::noquote           Class for 'no quote' Printing of Character
                        Strings
  Aliases: print.noquote
base::numeric_version   Numeric Versions
  Aliases: print.numeric_version
base::octmode           Integer Numbers Displayed in Octal
  Aliases: print.octmode
base::print             Print Values
  Aliases: print, print.factor, print.function, print.listof,
    print.simple.list, print.Dlist, print.table
base::print.data.frame
                        Printing Data Frames
  Aliases: print.data.frame
base::print.default     Default Printing
  Aliases: print.default
base::prmatrix          Print Matrices, Old-style
base::proc.time         Running Time of R
  Aliases: print.proc_time
base::rle               Run Length Encoding
  Aliases: print.rle
base::source            Read R Code from a File, a Connection or
                        Expressions
  Aliases: withAutoprint
base::sprintf           Use C-style String Formatting Commands
  Aliases: sprintf
base::srcfile           References to Source Files and Code
  Aliases: print.srcfile, print.srcref
base::summary           Object Summaries
  Aliases: print.summaryDefault
base::table             Cross Tabulation and Table Creation
  Aliases: print.summary.table
base::traceback         Get and Print Call Stacks
base::warnings          Print Warning Messages
  Aliases: print.warnings, print.summary.warnings
bit64::as.character.integer64
                        Coerce from integer64
  Aliases: print.bitstring
bit64::bit64-package    A S3 class for vectors of 64bit integers
  Aliases: print.integer64
bit64::cache            Atomic Caching
  Aliases: print.cache
bit::physical.default   Physical and virtual attributes
  Aliases: print.physical, print.virtual
bit::print.bit          Print method for bit
  Aliases: print.bit
bit::print.bitwhich     Print method for bitwhich
  Aliases: print.bitwhich
bit::ri                 Range index
  Aliases: print.ri
boot::print.boot        Print a Summary of a Bootstrap Object
  Aliases: print.boot
boot::print.bootci      Print Bootstrap Confidence Intervals
  Aliases: print.bootci
boot::print.saddle.distn
                        Print Quantiles of Saddlepoint Approximations
  Aliases: print.saddle.distn
boot::print.simplex     Print Solution to Linear Programming Problem
  Aliases: print.simplex
bslib::print.bslib_fragment
                        Print a bslib page/fragment
  Aliases: print.bslib_fragment, print.bslib_page
cctu::print.cttab       Print
  Aliases: print.cttab
cellranger::print.ra_ref
                        Print ra_ref object
  Aliases: print.ra_ref
cli::cat_line           'cat()' helpers
  Aliases: cat_print
cli::cli_fmt            Capture the output of cli functions instead of
                        printing it
cli::cli_format         Format a value for printing
cli::pretty_print_code
                        Turn on pretty-printing functions at the R
                        console
  Aliases: pretty_print_code
cli::ruler              Print the helpful ruler to the screen
cluster::clusGap        Gap Statistic for Estimating the Number of
                        Clusters
  Aliases: print.clusGap
cluster::ellipsoidhull
                        Compute the Ellipsoid Hull or Spanning
                        Ellipsoid of a Point Set
  Aliases: print.ellipsoid
cluster::print.agnes    Print Method for AGNES Objects
  Aliases: print.agnes
cluster::print.clara    Print Method for CLARA Objects
  Aliases: print.clara
cluster::print.diana    Print Method for DIANA Objects
  Aliases: print.diana
cluster::print.dissimilarity
                        Print and Summary Methods for Dissimilarity
                        Objects
  Aliases: print.dissimilarity, print.summary.dissimilarity
cluster::print.fanny    Print and Summary Methods for FANNY Objects
  Aliases: print.fanny, print.summary.fanny
cluster::print.mona     Print Method for MONA Objects
  Aliases: print.mona
cluster::print.pam      Print Method for PAM Objects
  Aliases: print.pam
cluster::silhouette     Compute or Extract Silhouette Information from
                        Clustering
  Aliases: print.summary.silhouette
cluster::summary.agnes
                        Summary Method for 'agnes' Objects
  Aliases: print.summary.agnes
cluster::summary.clara
                        Summary Method for 'clara' Objects
  Aliases: print.summary.clara
cluster::summary.diana
                        Summary Method for 'diana' Objects
  Aliases: print.summary.diana
cluster::summary.mona   Summary Method for 'mona' Objects
  Aliases: print.summary.mona
cluster::summary.pam    Summary Method for PAM Objects
  Aliases: print.summary.pam
codetools::showTree     Print Lisp-Style Representation of R Expression
colorspace::hcl_palettes
                        HCL Color Palettes
  Aliases: print.hcl_palettes
consort::plot.consort   Add methods to print function
  Aliases: print.consort
covr::print.coverage    Print a coverage object
  Aliases: print.coverage
coxme::print.coxme      Print method for a coxme fit.
  Aliases: print.coxme
coxme::print.lmekin     Print function for lmekin
  Aliases: print.lmekin
data.table::IDateTime   Integer based date class
  Aliases: print.ITime
data.table::print.data.table
                        data.table Printing Options
  Aliases: print.data.table
data.table::shouldPrint
                        For use by packages that mimic/divert auto
                        printing e.g. IRkernel and knitr
  Aliases: shouldPrint
data.table::timetaken   Pretty print of time taken
desc::desc_print        Print the contents of a DESCRIPTION file to the
                        screen
  Aliases: desc_print
diffobj::diffPrint      Diff 'print'ed Objects
  Aliases: diffPrint, diffPrint,ANY-method
diffobj::guides         Generic Methods to Implement Flexible Guide
                        Line Computations
  Aliases: guidesPrint,, guidesPrint, guidesPrint,ANY,character-method
diffobj::trim           Methods to Remove Unsemantic Text Prior to Diff
  Aliases: trimPrint,, trimPrint, trimPrint,ANY,character-method
duckdb::duckdb_explain-class
                        DuckDB EXPLAIN query tree
  Aliases: print.duckdb_explain
eudract::print.dot_plot
                        print methods for dot_plot object
  Aliases: print.dot_plot
eudract::print.safety_summary
                        print method for safety summary object
  Aliases: print.safety_summary
fontawesome::print.fontawesome
                        Print the fontawesome icon to the Viewer
  Aliases: print.fontawesome
fs::dir_tree            Print contents of directories in a tree-like
                        format
gee::gee                Function to solve a Generalized Estimation
                        Equation Model
  Aliases: print.gee, print.summary.gee
ggplot2::print.ggplot   Explicitly draw plot
  Aliases: print.ggplot
ggplot2::print.ggproto
                        Format or print a ggproto object
  Aliases: print.ggproto
gh::print.gh_response   Print the result of a GitHub API call
  Aliases: print.gh_response
glmnet::print.cv.glmnet
                        print a cross-validated glmnet object
  Aliases: print.cv.glmnet, print.cv.relaxed
glmnet::print.glmnet    print a glmnet object
  Aliases: print.glmnet, print.relaxed, print.bigGlm
grDevices::dev.copy     Copy Graphics Between Multiple Devices
  Aliases: dev.print
grDevices::recordPlot   Record and Replay Plots
  Aliases: print.recordedplot
grDevices::windows      Windows Graphics Devices
  Aliases: win.print, print.SavedPlots
gt::print.gt_tbl        Print a *gt* table
  Aliases: print.gt_tbl, print.gt_group, print.rtf_text
gtable::print.gtable    Print a gtable object
  Aliases: print.gtable
haven::print_labels     Print the labels of a labelled vector
  Aliases: print_labels
haven::tagged_na        "Tagged" missing values
  Aliases: print_tagged_na
hms::hms                A simple class for storing time-of-day values
  Aliases: print.hms
htmlTable::htmlTable    Output an HTML table
  Aliases: knit_print.htmlTable, print.htmlTable
htmlTable::interactiveTable
                        An interactive table that allows you to limit
                        the size of boxes
  Aliases: knit_print.interactiveTable, print.interactiveTable
htmlTable::prConvertDfFactors
                        Convert all factors to characters to print them
                        as they expected
htmlTable::prSkipRownames
                        Returns if rownames should be printed for the
                        htmlTable
htmltools::html_print   Implementation of the print method for HTML
  Aliases: html_print
htmltools::knitr_methods
                        Knitr S3 methods
  Aliases: knit_print.shiny.tag, knit_print.html,
    knit_print.shiny.tag.list, knit_print.html_dependency
htmltools::print.shiny.tag
                        Print method for HTML/tags
  Aliases: print.shiny.tag, print.html
httr::parse_http_date   Parse and print http dates.
igraph::cohesive_blocks
                        Calculate Cohesive Blocks
  Aliases: print.cohesiveBlocks
igraph::head_print      Print the only the head of an R object
  Aliases: head_print
igraph::indent_print    Indent a printout
  Aliases: indent_print
igraph::is_printer_callback
                        Is this a printer callback?
  Aliases: is_printer_callback
igraph::layout_         Graph layouts
  Aliases: print.igraph_layout_spec, print.igraph_layout_modifier
igraph::membership      Functions to deal with the result of network
                        community detection
  Aliases: print.communities
igraph::print.igraph    Print graphs to the terminal
  Aliases: print.igraph, print_all
igraph::print.igraph.es
                        Print an edge sequence to the screen
  Aliases: print.igraph.es
igraph::print.igraph.vs
                        Show a vertex sequence on the screen
  Aliases: print.igraph.vs
igraph::print.igraphHRG
                        Print a hierarchical random graph model to the
                        screen
  Aliases: print.igraphHRG
igraph::print.igraphHRGConsensus
                        Print a hierarchical random graph consensus
                        tree to the screen
  Aliases: print.igraphHRGConsensus
igraph::printer_callback
                        Create a printer callback function
  Aliases: printer_callback
inline::utilities       Printing, reading and writing compiled function
                        objects
  Aliases: print,CFunc-method, print,CFuncList-method
kableExtra::html_dependency_kePrint
                        HTML dependency for Javascript to enable
                        bootstrap tooltip and popup message
  Aliases: html_dependency_kePrint
kableExtra::landscape   Print the table on an isolated landscape page
                        in PDF
kinship2::autohint      Align a pedigree to print well
kinship2::pedigree      Create a pedigree or pedigreeList object
  Aliases: print.pedigree, print.pedigreeList
kinship2::pedigree.shrink
                        Shrink pedigree object
  Aliases: print.pedigree.shrink
knitr::knit_meta        Metadata about objects to be printed
knitr::knit_print       A custom printing function
  Aliases: knit_print, normal_print
lattice::equal.count    shingles
  Aliases: print.shingle, print.shingleLevel
lattice::print.trellis
                        Plot and Summarize Trellis Objects
  Aliases: print.trellis
lme4::.prt.methTit      Print and Summary Method Utilities for Mixed
                        Effects
lme4::VarCorr           Extract Variance and Correlation Components
  Aliases: print.VarCorr.merMod
lme4::merMod-class      Class "merMod" of Fitted Mixed-Effect Models
  Aliases: print.merMod, print.summary.merMod
loo::loo_compare        Model comparison
  Aliases: print.compare.loo, print.compare.loo_ss
loo::print.loo          Print methods
  Aliases: print.loo, print.waic, print.psis_loo,
    print.importance_sampling_loo, print.psis_loo_ap, print.psis,
    print.importance_sampling
loo::print_dims         Print dimensions of log-likelihood or
                        log-weights matrix
  Aliases: print_dims, print_dims.importance_sampling,
    print_dims.psis_loo, print_dims.importance_sampling_loo,
    print_dims.waic, print_dims.kfold, print_dims.psis_loo_ss
magrittr::print.fseq    Print method for functional sequence.
  Aliases: print.fseq
methods::MethodsList    'MethodsList' Objects
  Aliases: print.MethodsList
methods::completeSubclasses
                        Utilities for Managing Class Definitions
  Aliases: print.classRepresentation
methods::traceable-class
                        Classes Used Internally to Control Tracing
  Aliases: .doTracePrint
mgcv::anova.gam         Approximate hypothesis tests related to GAM
                        fits
  Aliases: print.anova.gam
mgcv::print.gam         Print a Generalized Additive Model object.
  Aliases: print.gam
mgcv::summary.gam       Summary for a GAM fit
  Aliases: print.summary.gam
mice::mads              Multivariate amputed data set ('mads')
  Aliases: print.mads
mice::mids              Multiply imputed data set ('mids')
  Aliases: print.mids
mice::mipo              'mipo': Multiple imputation pooled object
  Aliases: print.mipo, print.mipo.summary
mice::print.mira        Print a 'mira' object
  Aliases: print.mira, print.mice.anova, print.mice.anova.summary
mitml::plot.mitml       Print diagnostic plots
nlme::VarCorr           Extract variance and correlation components
  Aliases: print.VarCorr.lme
nlme::anova.lme         Compare Likelihoods of Fitted Objects
  Aliases: print.anova.lme
nlme::compareFits       Compare Fitted Objects
  Aliases: print.compareFits
nlme::corNatural        General correlation in natural parameterization
  Aliases: print.corNatural
nlme::getVarCov         Extract variance-covariance matrix
  Aliases: print.VarCov
nlme::intervals.gls     Confidence Intervals on gls Parameters
  Aliases: print.intervals.gls
nlme::intervals.lmList
                        Confidence Intervals on lmList Coefficients
  Aliases: print.intervals.lmList
nlme::intervals.lme     Confidence Intervals on lme Parameters
  Aliases: print.intervals.lme
nlme::lmList            List of lm Objects with a Common Model
  Aliases: print.lmList
nlme::print.summary.pdMat
                        Print a summary.pdMat Object
  Aliases: print.summary.pdMat
nlme::print.varFunc     Print a varFunc Object
  Aliases: print.varFunc, print.varComb
nlme::random.effects    Extract Random Effects
  Aliases: print.ranef
nlme::ranef.lme         Extract lme Random Effects
  Aliases: print.ranef.lme
nlme::reStruct          Random Effects Structure
  Aliases: print.reStruct
nlme::simulate.lme      Simulate Results from 'lme' Models
  Aliases: print.simulate.lme
nlme::summary.lme       Summarize an lme Object
  Aliases: print.summary.lme
nloptr::nloptr.print.options
                        Print description of nloptr options
  Aliases: nloptr.print.options
nloptr::print.nloptr    Print results after running nloptr
  Aliases: print.nloptr
nnet::multinom          Fit Multinomial Log-linear Models
  Aliases: print.multinom, print.summary.multinom
nnet::nnet              Fit Neural Networks
  Aliases: print.nnet, print.summary.nnet
openssl::fingerprint    OpenSSH fingerprint
  Aliases: fingerprint
openxlsx::pageSetup     Set page margins, orientation and print scaling
ordinal::convergence    Check convergence of cumulative link models
  Aliases: print.convergence.clm
pillar::format_glimpse
                        Format a vector for horizontal printing
pillar::format_tbl      Formatting of tbl objects
  Aliases: print.tbl
pillar::pillar_shaft    Column data
  Aliases: print.pillar_shaft
pkgdown::pkgdown_print
                        Print object in pkgdown output
  Aliases: pkgdown_print
plotly::knit_print.api_grid
                        Embed a plotly grid as an iframe in a knitr doc
  Aliases: knit_print.api_grid
plotly::knit_print.api_grid_local
                        Embed a plotly grid as an iframe in a knitr doc
  Aliases: knit_print.api_grid_local
plotly::knit_print.api_plot
                        Embed a plotly figure as an iframe in a knitr
                        doc
  Aliases: knit_print.api_plot
plotly::print.api       Print method for a 'generic' API response
  Aliases: print.api
plotly::print.api_grid
                        Print a plotly grid object
  Aliases: print.api_grid
plotly::print.api_grid_local
                        Print a plotly grid object
  Aliases: print.api_grid_local
plotly::print.api_plot
                        Print a plot on plotly's platform
  Aliases: print.api_plot
plotly::print.kaleidoScope
                        Print method for kaleido
  Aliases: print.kaleidoScope
plyr::print.quoted      Print quoted variables.
  Aliases: print.quoted
plyr::print.split       Print split.
  Aliases: print.split
polspline::summary.hare
                        Hare: hazard regression
  Aliases: print.hare
polspline::summary.heft
                        Heft: hazard estimation with flexible tails
  Aliases: print.heft
polspline::summary.logspline
                        Logspline Density Estimation
  Aliases: print.logspline
polspline::summary.lspec
                        Lspec: logspline estimation of a spectral
                        distribution
  Aliases: print.lspec
polspline::summary.oldlogspline
                        Logspline Density Estimation - 1992 version
  Aliases: print.oldlogspline
polspline::summary.polyclass
                        Polyclass: polychotomous regression and
                        multiple classification
  Aliases: print.polyclass
polspline::summary.polymars
                        Polymars: multivariate adaptive polynomial
                        spline regression
  Aliases: print.polymars
posterior::print.draws_array
                        Print 'draws_array' objects
  Aliases: print.draws_array
posterior::print.draws_df
                        Print 'draws_df' objects
  Aliases: print.draws_df
posterior::print.draws_list
                        Print 'draws_list' objects
  Aliases: print.draws_list
posterior::print.draws_matrix
                        Print 'draws_matrix' objects
  Aliases: print.draws_matrix
posterior::print.draws_rvars
                        Print 'draws_rvars' objects
  Aliases: print.draws_rvars
posterior::print.draws_summary
                        Print summaries of 'draws' objects
  Aliases: print.draws_summary
posterior::print.rvar   Print or format a random variable
  Aliases: print.rvar
prettyunits::pretty_round
                        Round a value to a defined number of digits
                        printing out trailing zeros, if applicable
prettyunits::pretty_signif
                        Round a value to a defined number of
                        significant digits printing out trailing zeros,
                        if applicable
profvis::print.profvis
                        Print a profvis object
  Aliases: print.profvis
ps::ps_handle           Create a process handle
  Aliases: print.ps_handle
quantreg::ParetoTest    Estimation and Inference on the Pareto Tail
                        Exponent for Linear Models
  Aliases: print.Hill, print.summary.Hill, print.Pickands,
    print.summary.Pickands
quantreg::anova.rq      Anova function for quantile regression fits
  Aliases: print.anova.rq
quantreg::crq           Functions to fit censored quantile regression
                        models
  Aliases: print.crq
quantreg::dynrq         Dynamic Linear Quantile Regression
  Aliases: print.dynrq, print.dynrqs, print.summary.dynrq,
    print.summary.dynrqs
quantreg::nlrq          Function to compute nonlinear quantile
                        regression estimates
  Aliases: print.nlrq, print.summary.nlrq
quantreg::print.KhmaladzeTest
                        Print a KhmaladzeTest object
  Aliases: print.KhmaladzeTest
quantreg::print.rq      Print an rq object
  Aliases: print.rq, print.rqs
quantreg::print.summary.rq
                        Print Quantile Regression Summary Object
  Aliases: print.summary.rq, print.summary.rqs
quantreg::rqss.object   RQSS Objects and Summarization Thereof
  Aliases: print.rqss
quantreg::summary.crq   Summary methods for Censored Quantile
                        Regression
  Aliases: print.summary.crq, print.summary.crqs
quantreg::summary.rqss
                        Summary of rqss fit
  Aliases: print.summary.rqss
rcmdcheck::print.rcmdcheck
                        Print R CMD check results
  Aliases: print.rcmdcheck
rcmdcheck::print.rcmdcheck_comparison
                        Print R CMD check result comparisons
  Aliases: print.rcmdcheck_comparison
reactable::knit_print.reactable
                        Print a reactable widget for knitr
  Aliases: knit_print.reactable
renv::diagnostics       Print a diagnostics report
rex::as.character.regex
                        Regular Expression
  Aliases: print.regex
rlang::env_print        Pretty-print an environment
  Aliases: env_print
rlang::expr_print       Print an expression
  Aliases: expr_print
rlang::quo_label        Format quosures for printing or labelling
rms::Gls                Fit Linear Model Using Generalized Least
                        Squares
  Aliases: print.Gls
rms::Predict            Compute Predicted Values and Confidence Limits
  Aliases: print.Predict
rms::Rq                 rms Package Interface to quantreg Package
  Aliases: print.Rq
rms::anova.rms          Analysis of Variance (Wald, LR, and F
                        Statistics)
  Aliases: print.anova.rms
rms::bj                 Buckley-James Multiple Regression Model
  Aliases: print.bj
rms::calibrate          Resampling Model Calibration
  Aliases: print.calibrate, print.calibrate.default
rms::contrast.rms       General Contrasts of Regression Coefficients
  Aliases: print.contrast.rms
rms::datadist           Distribution Summaries for Predictor Variables
  Aliases: print.datadist
rms::fastbw             Fast Backward Variable Selection
  Aliases: print.fastbw
rms::gIndex             Calculate Total and Partial g-indexes for an
                        rms Fit
  Aliases: print.gIndex
rms::lrm                Logistic Regression Model
  Aliases: print.lrm
rms::nomogram           Draw a Nomogram Representing a Regression Fit
  Aliases: print.nomogram
rms::orm                Ordinal Regression Model
  Aliases: print.orm
rms::pentrace           Trace AIC and BIC vs. Penalty
  Aliases: print.pentrace
rms::pphsm              Parametric Proportional Hazards form of AFT
                        Models
  Aliases: print.pphsm
rms::print.Glm          print.glm
  Aliases: print.Glm
rms::print.cph          Print cph Results
  Aliases: print.cph
rms::print.impactPO     Print Result from impactPO
  Aliases: print.impactPO
rms::print.ols          Print ols
  Aliases: print.ols
rms::print.rexVar       print.rexVar
  Aliases: print.rexVar
rms::psm                Parametric Survival Model
  Aliases: print.psm
rms::rmsMisc            Miscellaneous Design Attributes and Utility
                        Functions
  Aliases: print.rms, print.lrtest, latex.naprint.delete,
    html.naprint.delete
rms::specs.rms          rms Specifications for Models
  Aliases: print.specs.rms
rms::summary.rms        Summary of Effects in Model
  Aliases: print.summary.rms
rms::survest.psm        Parametric Survival Estimates
  Aliases: print.survest.psm
rms::val.prob           Validate Predicted Probabilities
  Aliases: print.val.prob
rms::val.surv           Validate Predicted Probabilities Against
                        Observed Survival Times
  Aliases: print.val.survh
rms::validate           Resampling Validation of a Fitted Model's
                        Indexes of Fit
  Aliases: print.validate
rms::validate.rpart     Dxy and Mean Squared Error by Cross-validating
                        a Tree Sequence
  Aliases: print.validate.rpart
rmsb::print.blrm        Print 'blrm()' Results
  Aliases: print.blrm
rmsb::print.blrmStats   Print Details for 'blrmStats' Predictive
                        Accuracy Measures
  Aliases: print.blrmStats
rmsb::print.predict.blrm
                        Print Predictions for 'blrm()'
  Aliases: print.predict.blrm
rmsb::print.rmsb        Basic Print for Bayesian Parameter Summary
  Aliases: print.rmsb
rmsb::stanDx            Print Stan Diagnostics
rpart::print.rpart      Print an Rpart Object
  Aliases: print.rpart
rpart::printcp          Displays CP table for Fitted Rpart Object
  Aliases: printcp
rpart::solder.balance   Soldering of Components on Printed-Circuit
                        Boards
rstan::monitor          Compute summaries of MCMC draws and monitor
                        convergence
  Aliases: print.simsummary
rstan::print.stanfit    Print a summary for a fitted model represented
                        by a 'stanfit' object
  Aliases: print.stanfit
rstan::sbc              Simulation Based Calibration (sbc)
  Aliases: print.sbc
sessioninfo::session_info
                        Print session information
shades::shade           The shade class
  Aliases: print.shade
shiny::knitr_methods    Knitr S3 methods
  Aliases: knit_print.shiny.appobj, knit_print.shiny.render.function,
    knit_print.reactive
shiny::renderPrint      Text Output
  Aliases: renderPrint
shiny::shiny.appobj     Shiny App object
  Aliases: print.shiny.appobj
shiny::shinyDeprecated
                        Print message for deprecated functions in Shiny
shiny::stacktrace       Stack trace manipulation functions
  Aliases: printError, printStackTrace
sp::CRS-class           Class "CRS" of coordinate reference system
                        arguments
  Aliases: print.CRS
sp::DMS-class           Class "DMS" for degree, minute, decimal second
                        values
  Aliases: print.DMS
sp::GridTopology-class
                        Class "GridTopology"
  Aliases: print.summary.GridTopology
sp::Spatial-class       Class "Spatial"
  Aliases: print.summary.Spatial
sp::SpatialGrid-class   Class "SpatialGrid"
  Aliases: print.summary.SpatialGrid
sp::SpatialGridDataFrame-class
                        Class "SpatialGridDataFrame"
  Aliases: print.summary.SpatialGridDataFrame
sp::SpatialMultiPoints-class
                        Class "SpatialMultiPoints"
  Aliases: print.SpatialMultiPoints
sp::SpatialMultiPointsDataFrame-class
                        Class "SpatialMultiPointsDataFrame"
  Aliases: print.SpatialMultiPointsDataFrame
sp::SpatialPixels-class
                        Class "SpatialPixels"
  Aliases: print.summary.SpatialPixels
sp::SpatialPixelsDataFrame-class
                        Class "SpatialPixelsDataFrame"
  Aliases: print.summary.SpatialPixelsDataFrame
sp::SpatialPoints-class
                        Class "SpatialPoints"
  Aliases: print.SpatialPoints
sp::SpatialPointsDataFrame-class
                        Class "SpatialPointsDataFrame"
  Aliases: print.SpatialPointsDataFrame
sp::bpy.colors          blue-pink-yellow color scheme, which also
                        prints well on black/white printers
stats::HoltWinters      Holt-Winters Filtering
  Aliases: print.HoltWinters
stats::StructTS         Fit Structural Time Series
  Aliases: print.StructTS
stats::`stats-defunct`
                        Defunct Functions in Package 'stats'
  Aliases: print.coefmat
stats::aov              Fit an Analysis of Variance Model
  Aliases: print.aov, print.aovlist
stats::ar               Fit Autoregressive Models to Time Series
  Aliases: print.ar
stats::arima0           ARIMA Modelling of Time Series - Preliminary
                        Version
  Aliases: print.arima0
stats::dendrogram       General Tree Structures
  Aliases: print.dendrogram
stats::dist             Distance Matrix Computation
  Aliases: print.dist
stats::ecdf             Empirical Cumulative Distribution Function
  Aliases: print.ecdf
stats::formula          Model Formulae
  Aliases: print.formula
stats::hclust           Hierarchical Clustering
  Aliases: print.hclust
stats::integrate        Integration of One-Dimensional Functions
  Aliases: print.integrate
stats::kmeans           K-Means Clustering
  Aliases: print.kmeans
stats::lm               Fitting Linear Models
  Aliases: print.lm
stats::loadings         Print Loadings in Factor Analysis
  Aliases: print.loadings, print.factanal
stats::ls.print         Print 'lsfit' Regression Results
  Aliases: ls.print
stats::naprint          Adjust for Missing Values
  Aliases: naprint, naprint.default, naprint.exclude, naprint.omit
stats::prcomp           Principal Components Analysis
  Aliases: print.prcomp, print.summary.prcomp
stats::princomp         Principal Components Analysis
  Aliases: print.princomp
stats::print.power.htest
                        Print Methods for Hypothesis Tests and Power
                        Calculation Objects
  Aliases: print.htest, print.power.htest
stats::print.ts         Printing and Formatting of Time-Series Objects
  Aliases: print.ts
stats::printCoefmat     Print Coefficient Matrices
  Aliases: printCoefmat
stats::read.ftable      Manipulate Flat Contingency Tables
  Aliases: print.ftable
stats::stepfun          Step Functions - Creation and Class
  Aliases: print.stepfun
stats::summary.aov      Summarize an Analysis of Variance Model
  Aliases: print.summary.aov, print.summary.aovlist
stats::summary.glm      Summarizing Generalized Linear Model Fits
  Aliases: print.summary.glm
stats::summary.lm       Summarizing Linear Model Fits
  Aliases: print.summary.lm
stats::summary.manova   Summary Method for Multivariate Analysis of
                        Variance
  Aliases: print.summary.manova
stats::summary.nls      Summarizing Non-Linear Least-Squares Model Fits
  Aliases: print.summary.nls
stats::summary.princomp
                        Summary method for Principal Components
                        Analysis
  Aliases: print.summary.princomp
stats::xtabs            Cross Tabulation
  Aliases: print.xtabs
stringi::`%s$%`         C-Style Formatting with 'stri_sprintf' as a
                        Binary Operator
stringi::stri_sprintf   Format Strings
  Aliases: stri_sprintf, stri_printf
survival::cox.zph       Test the Proportional Hazards Assumption of a
                        Cox Regression
  Aliases: print.cox.zph
survival::coxph         Fit Proportional Hazards Regression Model
  Aliases: print.coxph.null, print.coxph.penal
survival::coxph.object
                        Proportional Hazards Regression Object
  Aliases: print.coxph
survival::print.aareg   Print an aareg object
  Aliases: print.aareg
survival::print.summary.coxph
                        Print method for summary.coxph objects
  Aliases: print.summary.coxph
survival::print.summary.survexp
                        Print Survexp Summary
  Aliases: print.summary.survexp
survival::print.summary.survfit
                        Print Survfit Summary
  Aliases: print.summary.survfit
survival::print.survfit
                        Print a Short Summary of a Survival Curve
  Aliases: print.survfit
survival::survdiff      Test Survival Curve Differences
  Aliases: print.survdiff
survival::survexp       Compute Expected Survival
  Aliases: print.survexp
survival::survreg       Regression for a Parametric Survival Model
  Aliases: print.survreg.penal, print.summary.survreg
survival::survreg.object
                        Parametric Survival Model Object
  Aliases: print.survreg
tcltk::TclInterface     Low-level Tcl/Tk Interface
  Aliases: print.tclObj
tensorA::ftable.tensor
                        Pretty printing of tensors
testthat::capture_output
                        Capture output to console
  Aliases: testthat_print
testthat::expect_output
                        Does code print output to the console?
testthat::oldskool      Old-style expectations.
  Aliases: prints_text
tibble::formatting      Printing tibbles
  Aliases: print.tbl, print.tbl_df
tibble::trunc_mat       Legacy printing
tools::.print.via.format
                        Printing Utilities
  Aliases: .print.via.format
tools::QC               QC Checks for R Code and/or Documentation
  Aliases: print.checkDocFiles, print.checkDocStyle,
    print.checkReplaceFuns, print.checkS3methods, print.checkRdContents
tools::checkFF          Check Foreign Function Calls
  Aliases: print.checkFF
tools::checkTnF         Check R Packages or Code for T/F
  Aliases: print.checkTnF
tools::checkVignettes   Check Package Vignettes
  Aliases: print.checkVignettes
tools::codoc            Check Code/Documentation Consistency
  Aliases: print.codoc, print.codocClasses, print.codocData
tools::parse_Rd         Parse an Rd File
  Aliases: print.Rd
tools::undoc            Find Undocumented Objects
  Aliases: print.undoc
utf8::utf8_encode       Encode Character Object as for UTF-8 Printing
utf8::utf8_print        Print UTF-8 Text
  Aliases: utf8_print
utils::bibentry         Bibliography Entries
  Aliases: print.bibentry, print.citation
utils::browseVignettes
                        List Vignettes in an HTML Browser
  Aliases: print.browseVignettes
utils::changedFiles     Detect which Files Have Changed
  Aliases: print.changedFiles, print.fileSnapshot
utils::data             Data Sets
  Aliases: print.packageIQR
utils::getAnywhere      Retrieve an R Object, Including from a
                        Namespace
  Aliases: print.getAnywhere
utils::hashtab          Hash Tables (Experimental)
  Aliases: print.hashtab
utils::help.search      Search the Help System
  Aliases: print.hsearch
utils::ls.str           List Objects and their Structure
  Aliases: print.ls_str
utils::make.socket      Create a Socket Connection
  Aliases: print.socket
utils::methods          List Methods for S3 Generic Functions or
                        Classes
  Aliases: print.MethodsFunction
utils::news             Build and Query R or Package News Information
  Aliases: print.news_db
utils::object.size      Report the Space Allocated for an Object
  Aliases: print.object_size
utils::packageDescription
                        Package Description
  Aliases: print.packageDescription
utils::packageStatus    Package Management Tools
  Aliases: print.packageStatus
utils::person           Persons
  Aliases: print.person
utils::sessionInfo      Collect Information About the Current R Session
  Aliases: print.sessionInfo
utils::toLatex          Converting R Objects to BibTeX or LaTeX
  Aliases: print.Latex, print.Bibtex
utils::vignette         View, List or Get R Source of Package Vignettes
  Aliases: print.vignette
vctrs::obj_print        'print()' and 'str()' generics.
  Aliases: obj_print, obj_print_header, obj_print_data,
    obj_print_footer
xfun::raw_string        Print a character vector in its raw form
  Aliases: print.xfun_raw_string
xfun::record            Run R code and record the results
  Aliases: print.xfun_record_results
xfun::record_print      Print methods for 'record()'
  Aliases: record_print, record_print.default, record_print.record_asis
xfun::session_info      An alternative to sessionInfo() to print
                        session information
xfun::strict_list       Strict lists
  Aliases: print.xfun_strict_list
xtable::print.xtable    Print Export Tables
  Aliases: print.xtable
xtable::print.xtableMatharray
                        Print Math Array
  Aliases: print.xtableMatharray
xtable::string          String handling functions
  Aliases: print.string
xtable::xtableFtable    Create and Export Flat Tables
  Aliases: print.xtableFtable
xtable::xtableList      Create and Export Lists of Tables
  Aliases: print.xtableList
zoo::yearmon            An Index Class for Monthly Data
  Aliases: print.yearmon
zoo::yearqtr            An Index Class for Quarterly Data
  Aliases: print.yearqtr
zoo::zoo                Z's Ordered Observations
  Aliases: print.zoo


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> ## Help pages with documented topics starting with 'try':
hlp.sr> help.search("^try", fields = "alias")
Help files with alias matching '^try' using regular expression
matching:


base::conditions        Condition Handling and Recovery
  Aliases: tryInvokeRestart, tryCatch
base::try               Try an Expression Allowing Error Recovery
  Aliases: try
evaluate::try_capture_stack
                        Try, capturing stack on error
  Aliases: try_capture_stack
methods::`methods-defunct`
                        Defunct Functions in Package 'methods'
  Aliases: trySilent
methods::completeSubclasses
                        Utilities for Managing Class Definitions
  Aliases: tryNew
plyr::try_default       Try, with default in case of error.
  Aliases: try_default, tryNULL
plyr::tryapply          Apply with built in try. Uses compact, lapply
                        and tryNULL
  Aliases: tryapply
rlang::try_fetch        Try an expression with condition handlers
  Aliases: try_fetch
testthat::try_again     Try evaluating an expressing multiple times
                        until it succeeds.
  Aliases: try_again
xfun::try_error         Try an expression and see if it throws an error
  Aliases: try_error
xfun::try_silent        Try to evaluate an expression silently
  Aliases: try_silent


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> alias??"^try"  # the same
Help files with alias matching '^try' using regular expression
matching:


base::conditions        Condition Handling and Recovery
  Aliases: tryInvokeRestart, tryCatch
base::try               Try an Expression Allowing Error Recovery
  Aliases: try
evaluate::try_capture_stack
                        Try, capturing stack on error
  Aliases: try_capture_stack
methods::`methods-defunct`
                        Defunct Functions in Package 'methods'
  Aliases: trySilent
methods::completeSubclasses
                        Utilities for Managing Class Definitions
  Aliases: tryNew
plyr::try_default       Try, with default in case of error.
  Aliases: try_default, tryNULL
plyr::tryapply          Apply with built in try. Uses compact, lapply
                        and tryNULL
  Aliases: tryapply
rlang::try_fetch        Try an expression with condition handlers
  Aliases: try_fetch
testthat::try_again     Try evaluating an expressing multiple times
                        until it succeeds.
  Aliases: try_again
xfun::try_error         Try an expression and see if it throws an error
  Aliases: try_error
xfun::try_silent        Try to evaluate an expression silently
  Aliases: try_silent


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> ## Help pages documenting high-level plots:
hlp.sr> help.search(keyword = "hplot")
Help files with keyword matching 'hplot' using regular expression
matching:


Hmisc::Ecdf             Empirical Cumulative Distribution Plot
  Keywords: hplot
Hmisc::bpplot           Box-percentile plots
  Keywords: hplot
Hmisc::colorFacet       Miscellaneous ggplot2 and grid Helper Functions
  Keywords: hplot
Hmisc::curveRep         Representative Curves
  Keywords: hplot
Hmisc::describe         Concise Statistical Description of a Vector,
                        Matrix, Data Frame, or Formula
  Keywords: hplot
Hmisc::dotchart2        Enhanced Dot Chart
  Keywords: hplot
Hmisc::dotchart3        Enhanced Version of dotchart Function
  Keywords: hplot
Hmisc::dotchartpl       Enhanced Version of dotchart Function for
                        plotly
  Keywords: hplot
Hmisc::errbar           Plot Error Bars
  Keywords: hplot
Hmisc::event.chart      Flexible Event Chart for Time-to-Event Data
  Keywords: hplot
Hmisc::event.convert    Event Conversion for Time-to-Event Data
  Keywords: hplot
Hmisc::ggfreqScatter    Frequency Scatterplot
  Keywords: hplot
Hmisc::hist.data.frame
                        Histograms for Variables in a Data Frame
  Keywords: hplot
Hmisc::histbackback     Back to Back Histograms
  Keywords: hplot
Hmisc::histboxp         Use plotly to Draw Stratified Spike Histogram
                        and Box Plot Statistics
  Keywords: hplot
Hmisc::labcurve         Label Curves, Make Keys, and Interactively Draw
                        Points and Curves
  Keywords: hplot
Hmisc::latexDotchart    Enhanced Dot Chart for LaTeX Picture
                        Environment with epic
  Keywords: hplot
Hmisc::minor.tick       Minor Tick Marks
  Keywords: hplot
Hmisc::mtitle           Margin Titles
  Keywords: hplot
Hmisc::multLines        Plot Multiple Lines
  Keywords: hplot
Hmisc::panel.bpplot     Box-Percentile Panel Function for Trellis
  Keywords: hplot
Hmisc::plsmo            Plot smoothed estimates
  Keywords: hplot
Hmisc::rm.boot          Bootstrap Repeated Measurements Model
  Keywords: hplot
Hmisc::scat1d           One-Dimensional Scatter Diagram, Spike
                        Histogram, or Density
  Keywords: hplot
Hmisc::showPsfrag       Display image from psfrag LaTeX strings
  Keywords: hplot
Hmisc::summary.formula
                        Summarize Data for Making Tables and Plots
  Keywords: hplot
Hmisc::summaryM         Summarize Mixed Data Types vs. Groups
  Keywords: hplot
Hmisc::summaryP         Multi-way Summary of Proportions
  Keywords: hplot
Hmisc::summaryRc        Graphical Summarization of Continuous Variables
                        Against a Response
  Keywords: hplot
Hmisc::summaryS         Summarize Multiple Response Variables and Make
                        Multipanel Scatter or Dot Plot
  Keywords: hplot
Hmisc::symbol.freq      Graphic Representation of a Frequency Table
  Keywords: hplot
Hmisc::tex              function for use in graphs that are used with
                        the psfrag package in LaTeX
  Keywords: hplot
Hmisc::xYplot           xyplot and dotplot with Matrix Variables to
                        Plot Error Bars and Bands
  Keywords: hplot
MASS::boxcox            Box-Cox Transformations for Linear Models
  Keywords: hplot
MASS::eqscplot          Plots with Geometrically Equal Scales
  Keywords: hplot
MASS::hist.scott        Plot a Histogram with Automatic Bin Width
                        Selection
  Keywords: hplot
MASS::ldahist           Histograms or Density Plots of Multiple Groups
  Keywords: hplot
MASS::logtrans          Estimate log Transformation Parameter
  Keywords: hplot
MASS::pairs.lda         Produce Pairwise Scatterplots from an 'lda' Fit
  Keywords: hplot
MASS::parcoord          Parallel Coordinates Plot
  Keywords: hplot
MASS::plot.lda          Plot Method for Class 'lda'
  Keywords: hplot
MASS::plot.mca          Plot Method for Objects of Class 'mca'
  Keywords: hplot
MASS::truehist          Plot a Histogram
  Keywords: hplot
Matrix::`image-methods`
                        Methods for image() in Package 'Matrix'
  Keywords: hplot
SparseM::SparseM.image
                        Image Plot for Sparse Matrices
  Keywords: hplot
VGAM::biplot,rrvglm-method
                        Biplot of Constrained Regression Models
  Keywords: hplot
VGAM::deplot.lmscreg    Density Plot for LMS Quantile Regression
  Keywords: hplot
VGAM::dgaitdplot        Plotting the GAITD Combo Density
  Keywords: hplot
VGAM::guplot            Gumbel Plot
  Keywords: hplot
VGAM::lvplot            Latent Variable Plot
  Keywords: hplot
VGAM::lvplot.qrrvglm    Latent Variable Plot for QO models
  Keywords: hplot
VGAM::lvplot.rrvglm     Latent Variable Plot for RR-VGLMs
  Keywords: hplot
VGAM::meplot            Mean Excess Plot
  Keywords: hplot
VGAM::plotdeplot.lmscreg
                        Density Plot for LMS Quantile Regression
  Keywords: hplot
VGAM::plotdgaitd.vglm   Plotting the GAITD Combo Density from a GAITD
                        Regression Object
  Keywords: hplot
VGAM::plotqrrvglm       Model Diagnostic Plots for QRR-VGLMs
  Keywords: hplot
VGAM::plotqtplot.lmscreg
                        Quantile Plot for LMS Quantile Regression
  Keywords: hplot
VGAM::plotrcim0         Main Effects Plot for a Row-Column Interaction
                        Model (RCIM)
  Keywords: hplot
VGAM::plotvgam          Default VGAM Plotting
  Keywords: hplot
VGAM::plotvglm          Plots for VGLMs
  Keywords: hplot
VGAM::prplot            Probability Plots for Categorical Data Analysis
  Keywords: hplot
VGAM::qtplot.gumbel     Quantile Plot for Gumbel Regression
  Keywords: hplot
VGAM::qtplot.lmscreg    Quantile Plot for LMS Quantile Regression
  Keywords: hplot
VGAM::rlplot.gevff      Return Level Plot for GEV Fits
  Keywords: hplot
VGAM::spikeplot         Spike Plot
  Keywords: hplot
VGAM::trplot            Trajectory Plot
  Keywords: hplot
VGAM::trplot.qrrvglm    Trajectory plot for QRR-VGLMs
  Keywords: hplot
VGAM::vplot.profile     Plotting Functions for 'profile' Objects
  Keywords: hplot
base::plot              Generic X-Y Plotting
  Keywords: hplot
boot::glm.diag.plots    Diagnostics plots for generalized linear models
  Keywords: hplot
boot::jack.after.boot   Jackknife-after-Bootstrap Plots
  Keywords: hplot
boot::plot.boot         Plots of the Output of a Bootstrap Simulation
  Keywords: hplot
cluster::bannerplot     Plot Banner (of Hierarchical Clustering)
  Keywords: hplot
cluster::clusplot       Bivariate Cluster Plot (of a Partitioning
                        Object)
  Keywords: hplot
cluster::clusplot.default
                        Bivariate Cluster Plot (clusplot) Default
                        Method
  Keywords: hplot
cluster::ellipsoidhull
                        Compute the Ellipsoid Hull or Spanning
                        Ellipsoid of a Point Set
  Keywords: hplot
cluster::plot.agnes     Plots of an Agglomerative Hierarchical
                        Clustering
  Keywords: hplot
cluster::plot.diana     Plots of a Divisive Hierarchical Clustering
  Keywords: hplot
cluster::plot.mona      Banner of Monothetic Divisive Hierarchical
                        Clusterings
  Keywords: hplot
cluster::plot.partition
                        Plot of a Partition of the Data Set
  Keywords: hplot
cluster::pltree         Plot Clustering Tree of a Hierarchical
                        Clustering
  Keywords: hplot
colorspace::demoplot    Color Palette Demonstration Plot
  Keywords: hplot
colorspace::hclplot     Palette Plot in HCL Space
  Keywords: hplot
colorspace::specplot    Color Spectrum Plot
  Keywords: hplot
colorspace::swatchplot
                        Palette Swatch Plot
  Keywords: hplot
ggplot2::print.ggplot   Explicitly draw plot
  Keywords: hplot
graphics::assocplot     Association Plots
  Keywords: hplot
graphics::barplot       Bar Plots
  Keywords: hplot
graphics::boxplot       Box Plots
  Keywords: hplot
graphics::boxplot.matrix
                        Draw a Boxplot for each Column (Row) of a
                        Matrix
  Keywords: hplot
graphics::cdplot        Conditional Density Plots
  Keywords: hplot
graphics::contour       Display Contours
  Keywords: hplot
graphics::coplot        Conditioning Plots
  Keywords: hplot
graphics::curve         Draw Function Plots
  Keywords: hplot
graphics::dotchart      Cleveland's Dot Plots
  Keywords: hplot
graphics::filled.contour
                        Level (Contour) Plots
  Keywords: hplot
graphics::fourfoldplot
                        Fourfold Plots
  Keywords: hplot
graphics::hist          Histograms
  Keywords: hplot
graphics::hist.POSIXt   Histogram of a Date or Date-Time Object
  Keywords: hplot
graphics::image         Display a Color Image
  Keywords: hplot
graphics::matplot       Plot Columns of Matrices
  Keywords: hplot
graphics::mosaicplot    Mosaic Plots
  Keywords: hplot
graphics::pairs         Scatterplot Matrices
  Keywords: hplot
graphics::panel.smooth
                        Simple Panel Plot
  Keywords: hplot
graphics::persp         Perspective Plots
  Keywords: hplot
graphics::pie           Pie Charts
  Keywords: hplot
graphics::plot.data.frame
                        Plot Method for Data Frames
  Keywords: hplot
graphics::plot.default
                        The Default Scatterplot Function
  Keywords: hplot
graphics::plot.design   Plot Univariate Effects of a Design or Model
  Keywords: hplot
graphics::plot.factor   Plotting Factor Variables
  Keywords: hplot
graphics::plot.formula
                        Formula Notation for Scatterplots
  Keywords: hplot
graphics::plot.histogram
                        Plot Histograms
  Keywords: hplot
graphics::plot.raster   Plotting Raster Images
  Keywords: hplot
graphics::plot.table    Plot Methods for 'table' Objects
  Keywords: hplot
graphics::smoothScatter
                        Scatterplots with Smoothed Densities Color
                        Representation
  Keywords: hplot
graphics::spineplot     Spine Plots and Spinograms
  Keywords: hplot
graphics::stars         Star (Spider/Radar) Plots and Segment Diagrams
  Keywords: hplot
graphics::stripchart    1-D Scatter Plots
  Keywords: hplot
graphics::sunflowerplot
                        Produce a Sunflower Scatter Plot
  Keywords: hplot
graphics::symbols       Draw Symbols (Circles, Squares, Stars,
                        Thermometers, Boxplots)
  Keywords: hplot
lattice::barchart.table
                        table methods for barchart and dotplot
  Keywords: hplot
lattice::cloud          3d Scatter Plot and Wireframe Surface Plot
  Keywords: hplot
lattice::equal.count    shingles
  Keywords: hplot
lattice::histogram      Histograms and Kernel Density Plots
  Keywords: hplot
lattice::levelplot      Level plots and contour plots
  Keywords: hplot
lattice::panel.smoothScatter
                        Lattice panel function analogous to
                        smoothScatter
  Keywords: hplot
lattice::print.trellis
                        Plot and Summarize Trellis Objects
  Keywords: hplot
lattice::splom          Scatter Plot Matrices
  Keywords: hplot
lattice::xyplot         Common Bivariate Trellis Plots
  Keywords: hplot
lattice::xyplot.ts      Time series plotting methods
  Keywords: hplot
mgcv::exclude.too.far   Exclude prediction grid points too far from
                        data
  Keywords: hplot
mgcv::plot.gam          Default GAM plotting
  Keywords: hplot
mgcv::polys.plot        Plot geographic regions defined as polygons
  Keywords: hplot
mgcv::vis.gam           Visualization of GAM objects
  Keywords: hplot
mice::bwplot.mids       Box-and-whisker plot of observed and imputed
                        data
  Keywords: hplot
mice::densityplot.mids
                        Density plot of observed and imputed data
  Keywords: hplot
mice::mdc               Graphical parameter for missing data plots
  Keywords: hplot
mice::stripplot.mids    Stripplot of observed and imputed data
  Keywords: hplot
mice::supports.transparent
                        Supports semi-transparent foreground colors?
  Keywords: hplot
mice::xyplot.mids       Scatterplot of observed and imputed data
  Keywords: hplot
multcomp::plot.cld      Plot a cld object
  Keywords: hplot
nlme::plot.lme          Plot an lme or nls object
  Keywords: hplot
quantreg::plot.rq.process
                        plot the coordinates of the quantile regression
                        process
  Keywords: hplot
quantreg::plot.rqs      Visualizing sequences of quantile regressions
  Keywords: hplot
quantreg::plot.summary.rqs
                        Visualizing sequences of quantile regression
                        summaries
  Keywords: hplot
rms::bootcov            Bootstrap Covariance and Distribution for
                        Regression Coefficients
  Keywords: hplot
rms::bplot              3-D Plots Showing Effects of Two Continuous
                        Predictors in a Regression Model Fit
  Keywords: hplot
rms::calibrate          Resampling Model Calibration
  Keywords: hplot
rms::ggplot.Predict     Plot Effects of Variables Estimated by a
                        Regression Model Fit Using ggplot2
  Keywords: hplot
rms::nomogram           Draw a Nomogram Representing a Regression Fit
  Keywords: hplot
rms::plot.Predict       Plot Effects of Variables Estimated by a
                        Regression Model Fit
  Keywords: hplot
rms::plot.xmean.ordinaly
                        Plot Mean X vs. Ordinal Y
  Keywords: hplot
rms::plotp.Predict      Plot Effects of Variables Estimated by a
                        Regression Model Fit Using plotly
  Keywords: hplot
rms::summary.rms        Summary of Effects in Model
  Keywords: hplot
rms::survplot           Plot Survival Curves and Hazard Functions
  Keywords: hplot
shape::emptyplot        open a plot without axes, labels,...
  Keywords: hplot
stats::biplot           Biplot of Multivariate Data
  Keywords: hplot
stats::biplot.princomp
                        Biplot for Principal Components
  Keywords: hplot
stats::cpgram           Plot Cumulative Periodogram
  Keywords: hplot
stats::dendrogram       General Tree Structures
  Keywords: hplot
stats::ecdf             Empirical Cumulative Distribution Function
  Keywords: hplot
stats::heatmap          Draw a Heat Map
  Keywords: hplot
stats::interaction.plot
                        Two-way Interaction Plot
  Keywords: hplot
stats::lag.plot         Time Series Lag Plots
  Keywords: hplot
stats::monthplot        Plot a Seasonal or other Subseries from a Time
                        Series
  Keywords: hplot
stats::plot.acf         Plot Autocovariance and Autocorrelation
                        Functions
  Keywords: hplot
stats::plot.isoreg      Plot Method for 'isoreg' Objects
  Keywords: hplot
stats::plot.lm          Plot Diagnostics for an 'lm' Object
  Keywords: hplot
stats::plot.ppr         Plot Ridge Functions for Projection Pursuit
                        Regression Fit
  Keywords: hplot
stats::plot.profile     Plotting Functions for 'profile' Objects
  Keywords: hplot
stats::plot.spec        Plotting Spectral Densities
  Keywords: hplot
stats::plot.stepfun     Plot Step Functions
  Keywords: hplot
stats::plot.ts          Plotting Time-Series Objects
  Keywords: hplot
stats::qqnorm           Quantile-Quantile Plots
  Keywords: hplot
stats::termplot         Plot Regression Terms
  Keywords: hplot
survival::plot.survfit
                        Plot method for 'survfit' objects
  Keywords: hplot
survival::statefig      Draw a state space figure.
  Keywords: hplot
zoo::xyplot.zoo         Plot zoo Series with Lattice
  Keywords: hplot


Type '?PKG::FOO' to inspect entries 'PKG::FOO', or 'TYPE?PKG::FOO' for
entries like 'PKG::FOO-TYPE'.





hlp.sr> ## End(No test)
hlp.sr> RShowDoc("KEYWORDS")  # show all keywords
GROUPED Keywords
----------------

Graphics
	aplot		&	Add to Existing Plot / internal plot
	dplot		&	Computations Related to Plotting
	hplot		&	High-Level Plots
	iplot		&	Interacting with Plots
	color		&	Color, Palettes etc
	dynamic		&	Dynamic Graphics
	device		&	Graphical Devices

Basics
	sysdata		&	Basic System Variables		[!= S]
	datasets	&	Datasets available by data(.)	[!= S]
	data		&	Environments, Scoping, Packages [~= S]
	manip		&	Data Manipulation
	attribute	&	Data Attributes
	classes		&	Data Types (not OO)
	    & character	&	Character Data ("String") Operations
	    & complex	&	Complex Numbers
	    & category	&	Categorical Data
	    & NA	&	Missing Values			[!= S]
	list		&	Lists
	chron		&	Dates and Times
	package		&	Package Summaries

Mathematics
	array		&	Matrices and Arrays
	      & algebra &	Linear Algebra
	arith		&	Basic Arithmetic and Sorting	[!= S]
	math		&	Mathematical Calculus etc.	[!= S]
	logic		&	Logical Operators
	optimize	&	Optimization
	symbolmath	&	"Symbolic Math", as polynomials, fractions
	graphs		&	Graphs, (not graphics), e.g. dendrograms

Programming, Input/Ouput, and Miscellaneous

	programming	&	Programming
	     & interface&	Interfaces to Other Languages
	IO		&	Input/output
	     & file	&	Files
	     & connection&	Connections
	     & database	&	Interfaces to databases
	iteration	&	Looping and Iteration
	methods		&	Methods and Generic Functions
	print		&	Printing
	error		&	Error Handling

	environment	&	Session Environment
	internal	&	Internal Objects (not part of API)
	utilities	&	Utilities
	misc		&	Miscellaneous
	documentation	&	Documentation
	debugging	&	Debugging Tools

Statistics

	datagen		&	Functions for generating data sets
	distribution	&	Probability Distributions and Random Numbers
	univar		&	simple univariate statistics  [!= S]
	htest		&	Statistical Inference
	models		&	Statistical Models
	    & regression&	Regression
	    & &nonlinear&	Non-linear Regression (only?)
	robust		&	Robust/Resistant Techniques
	design		&	Designed Experiments
	multivariate	&	Multivariate Techniques
	ts		&	Time Series
	survival	&	Survival Analysis
	nonparametric	&	Nonparametric Statistics [w/o 'smooth']
	smooth		&	Curve (and Surface) Smoothing
	     & loess	&	Loess Objects
	cluster		&	Clustering
	tree		&	Regression and Classification Trees
	survey		&	Complex survey samples


MASS (2, 1997)
--------------

add the following keywords :

	classif		&	Classification	['class' package]
	spatial		&	Spatial Statistics ['spatial' package]
	neural		&	Neural Networks ['nnet'	 package]

> example(news, run.donttest = TRUE)

news> ## Build a db of all R news entries.
news> db <- news()

news> ## Don't show: 
news>   vv <- capture.output(print(db, doBrowse=FALSE))  # without an error

news>   stopifnot(is.character(vv), length(vv) >= 3) # was wrong (for weeks during devel.)

news> ## End(Don't show)
news> ## Bug fixes with PR number in 4.0.0.
news> db4 <- news(Version == "4.0.0" & grepl("^BUG", Category) & grepl("PR#", Text),
news+             db = db)

news> nrow(db4)
[1] 25

news> ## Don't show: 
news> stopifnot(is.null(attr(db4, "bad")) && nrow(db4) == 25 )

news> ## End(Don't show)
news> ## print db4 to show in an HTML browser.
news> 
news> ## News from a date range ('Matrix' is there in a regular R installation):
news> if(length(iM <- find.package("Matrix", quiet = TRUE)) && nzchar(iM)) {
news+    dM <- news(package="Matrix")
news+    stopifnot(identical(dM, news(db=dM)))
news+    dM2014 <- news("2014-01-01" <= Date & Date <= "2014-12-31", db = dM)
news+    stopifnot(paste0("1.1-", 2:4) %in% dM2014[,"Version"])
news+ }

news> ## Which categories have been in use? % R-core maybe should standardize a bit more
news> sort(table(db[, "Category"]), decreasing = TRUE)

                             BUG FIXES                           NEW FEATURES 
                                   402                                    293 
                             UTILITIES                     C-LEVEL FACILITIES 
                                    49                                     40 
          INSTALLATION on a UNIX-ALIKE                 DEPRECATED AND DEFUNCT 
                                    33                                     32 
                               WINDOWS                               GRAPHICS 
                                    18                                     15 
                       DATES and TIMES       SIGNIFICANT USER-VISIBLE CHANGES 
                                    13                                     13 
                  BUG FIXES on Windows                   PACKAGE INSTALLATION 
                                    12                                     12 
              ENCODING-RELATED CHANGES                    BUG FIXES (Windows) 
                                     8                                      7 
                               Windows                           INSTALLATION 
                                     6                                      5 
               INSTALLATION on WINDOWS LINK-TIME OPTIMIZATION on a UNIX-ALIKE 
                                     5                                      5 
                    MIGRATION TO PCRE2                  BUILDING R on Windows 
                                     4                                      3 
                         FORTRAN FLAGS                      FUTURE DIRECTIONS 
                                     1                                      1 
                 INSTALLATION on macOS        PACKAGE INSTALLATION on Windows 
                                     1                                      1 
         PACKAGE INSTALLATION on macOS                     REFERENCE COUNTING 
                                     1                                      1 

news> ## Entries with version >= 4.0.0
news> table(news(Version >= "4.0.0", db = db)$Version)

4.0.0 4.0.1 4.0.2 4.0.3 4.0.4 4.0.5 4.1.0 4.1.1 4.1.2 4.1.3 4.2.0 4.2.1 4.2.2 
  156    11     6    26    18     2   127    19    17    20   143    21    25 
4.2.3 4.3.0 4.3.1 4.3.2 4.3.3 4.4.0 4.4.1 4.4.2 
   17   148    10    25    23   149    12     6 

news> ## No test: 
news> ## do the same for R 3.x.y, more slowly
news> db3 <- news(package = "R-3")

news> sort(table(db3[, "Category"]), decreasing = TRUE)

                         BUG FIXES                       NEW FEATURES 
                               773                                653 
                         UTILITIES             DEPRECATED AND DEFUNCT 
                                90                                 79 
                C-LEVEL FACILITIES INSTALLATION and INCLUDED SOFTWARE 
                                58                                 55 
              PACKAGE INSTALLATION       INSTALLATION on a UNIX-ALIKE 
                                41                                 34 
  SIGNIFICANT USER-VISIBLE CHANGES                       LONG VECTORS 
                                18                                 13 
                      INSTALLATION           PERFORMANCE IMPROVEMENTS 
                                10                                  7 
                         DEBUGGING               INTERNATIONALIZATION 
                                 5                                  5 
             WINDOWS BUILD CHANGES                     CODE MIGRATION 
                                 4                                  3 
                  PACKAGE parallel                  INCLUDED SOFTWARE 
                                 3                                  2 
                     DOCUMENTATION                            TESTING 
                                 1                                  1 
                           Windows 
                                 1 

news> ## Entries with version >= 3.6.0
news> table(news(Version >= "3.6.0", db = db3)$Version)

3.6.0 3.6.1 3.6.2 3.6.3 
  174    19    32     8 

news> ## End(No test)
news> 
news> 
news> 
> example(packageDescription, run.donttest = TRUE)

pckgDs> ## No test: 
pckgDs> packageDescription("stats")
Package: stats
Version: 4.4.2
Priority: base
Title: The R Stats Package
Author: R Core Team and contributors worldwide
Maintainer: R Core Team <do-use-Contact-address@r-project.org>
Contact: R-help mailing list <r-help@r-project.org>
Description: R statistical functions.
License: Part of R 4.4.2
Imports: utils, grDevices, graphics
Suggests: MASS, Matrix, SuppDists, methods, stats4
NeedsCompilation: yes
Encoding: UTF-8
Enhances: Kendall, coin, multcomp, pcaPP, pspearman, robustbase
Built: R 4.4.2; x86_64-pc-linux-gnu; 2024-12-17 13:34:05 UTC; unix

-- File: /usr/local/lib/R/library/stats/Meta/package.rds 

pckgDs> packageDescription("stats", fields = c("Package", "Version"))
Package: stats
Version: 4.4.2

-- File: /usr/local/lib/R/library/stats/Meta/package.rds 
-- Fields read: Package, Version

pckgDs> packageDescription("stats", fields = "Version")
[1] "4.4.2"

pckgDs> packageDescription("stats", fields = "Version", drop = FALSE)
Version: 4.4.2

-- File: /usr/local/lib/R/library/stats/Meta/package.rds 
-- Fields read: Version

pckgDs> ## End(No test)
pckgDs> if(requireNamespace("MASS") && packageVersion("MASS") < "7.3.29")
pckgDs+   message("you need to update 'MASS'")
Loading required namespace: MASS

pckgDs> pu <- packageDate("utils")

pckgDs> ## No test: 
pckgDs> str(pu)
 Date[1:1], format: "2024-12-17"

pckgDs> ## End(No test)
pckgDs> stopifnot(identical(pu, packageDate(desc = packageDescription("utils"))),
pckgDs+           identical(pu, packageDate("stats"))) # as "utils" and "stats" are

pckgDs>                                    # both 'base R' and "Built" at same time
pckgDs> 
pckgDs> 
pckgDs> 
> example(sessionInfo, run.donttest = TRUE)

sssnIn> ## No test: 
sssnIn> sI <- sessionInfo()

sssnIn> sI
R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Ubuntu 24.04.1 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0

locale:
[1] C

time zone: Etc/UTC
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] MASS_7.3-61    compiler_4.4.2 tools_4.4.2   

sssnIn> # The same, showing the RNGkind, but not the locale :
sssnIn>   print(sI, RNG = TRUE, locale = FALSE)
R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Ubuntu 24.04.1 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0

Random number generation:
 RNG:     Mersenne-Twister 
 Normal:  Inversion 
 Sample:  Rejection 
 
attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] MASS_7.3-61    compiler_4.4.2 tools_4.4.2   

sssnIn> toLatex(sI, locale = FALSE) # shortest; possibly desirable at end of report
\begin{itemize}\raggedright
  \item R version 4.4.2 (2024-10-31), \verb|x86_64-pc-linux-gnu|
  \item Running under: \verb|Ubuntu 24.04.1 LTS|
  \item Matrix products: default
  \item BLAS:   \verb|/usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3|
  \item LAPACK: \verb|/usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so|
; \quad\ LAPACK version3.12.0
  \item Base packages: base, datasets, grDevices, graphics, methods,
    stats, utils
  \item Loaded via a namespace (and not attached): MASS~7.3-61,
    compiler~4.4.2, tools~4.4.2
\end{itemize}

sssnIn> ## End(No test)
sssnIn> 
sssnIn> 
> 
> ## datasets
> example(JohnsonJohnson, run.donttest = TRUE)

JhnsnJ> ## No test: 
JhnsnJ> require(stats); require(graphics)

JhnsnJ> JJ <- log10(JohnsonJohnson)

JhnsnJ> plot(JJ)

JhnsnJ> ## This example gives a possible-non-convergence warning on some
JhnsnJ> ## platforms, but does seem to converge on x86 Linux and Windows.
JhnsnJ> (fit <- StructTS(JJ, type = "BSM"))

Call:
StructTS(x = JJ, type = "BSM")

Variances:
    level      slope       seas    epsilon  
1.948e-04  6.548e-06  4.138e-04  2.647e-04  

JhnsnJ> tsdiag(fit)

JhnsnJ> sm <- tsSmooth(fit)

JhnsnJ> plot(cbind(JJ, sm[, 1], sm[, 3]-0.5), plot.type = "single",
JhnsnJ+      col = c("black", "green", "blue"))

JhnsnJ> abline(h = -0.5, col = "grey60")

JhnsnJ> monthplot(fit)

JhnsnJ> ## End(No test)
JhnsnJ> 
JhnsnJ> 
> example(ability.cov, run.donttest = TRUE)

ablty.> ## No test: 
ablty.> require(stats)

ablty.> (ability.FA <- factanal(factors = 1, covmat = ability.cov))

Call:
factanal(factors = 1, covmat = ability.cov)

Uniquenesses:
general picture  blocks    maze reading   vocab 
  0.535   0.853   0.748   0.910   0.232   0.280 

Loadings:
        Factor1
general 0.682  
picture 0.384  
blocks  0.502  
maze    0.300  
reading 0.877  
vocab   0.849  

               Factor1
SS loadings      2.443
Proportion Var   0.407

Test of the hypothesis that 1 factor is sufficient.
The chi square statistic is 75.18 on 9 degrees of freedom.
The p-value is 1.46e-12 

ablty.> update(ability.FA, factors = 2)

Call:
factanal(factors = 2, covmat = ability.cov)

Uniquenesses:
general picture  blocks    maze reading   vocab 
  0.455   0.589   0.218   0.769   0.052   0.334 

Loadings:
        Factor1 Factor2
general 0.499   0.543  
picture 0.156   0.622  
blocks  0.206   0.860  
maze    0.109   0.468  
reading 0.956   0.182  
vocab   0.785   0.225  

               Factor1 Factor2
SS loadings      1.858   1.724
Proportion Var   0.310   0.287
Cumulative Var   0.310   0.597

Test of the hypothesis that 2 factors are sufficient.
The chi square statistic is 6.11 on 4 degrees of freedom.
The p-value is 0.191 

ablty.> ## The signs of factors and hence the signs of correlations are
ablty.> ## arbitrary with promax rotation.
ablty.> update(ability.FA, factors = 2, rotation = "promax")

Call:
factanal(factors = 2, covmat = ability.cov, rotation = "promax")

Uniquenesses:
general picture  blocks    maze reading   vocab 
  0.455   0.589   0.218   0.769   0.052   0.334 

Loadings:
        Factor1 Factor2
general  0.364   0.470 
picture          0.671 
blocks           0.932 
maze             0.508 
reading  1.023         
vocab    0.811         

               Factor1 Factor2
SS loadings      1.853   1.807
Proportion Var   0.309   0.301
Cumulative Var   0.309   0.610

Factor Correlations:
        Factor1 Factor2
Factor1   1.000   0.557
Factor2   0.557   1.000

Test of the hypothesis that 2 factors are sufficient.
The chi square statistic is 6.11 on 4 degrees of freedom.
The p-value is 0.191 

ablty.> ## End(No test)
ablty.> 
ablty.> 
> example(npk, run.donttest = TRUE)

npk> ## No test: 
npk> options(contrasts = c("contr.sum", "contr.poly"))

npk> npk.aov <- aov(yield ~ block + N*P*K, npk)

npk> npk.aov
Call:
   aov(formula = yield ~ block + N * P * K, data = npk)

Terms:
                   block        N        P        K      N:P      N:K      P:K
Sum of Squares  343.2950 189.2817   8.4017  95.2017  21.2817  33.1350   0.4817
Deg. of Freedom        5        1        1        1        1        1        1
                Residuals
Sum of Squares   185.2867
Deg. of Freedom        12

Residual standard error: 3.929447
1 out of 13 effects not estimable
Estimated effects may be unbalanced

npk> summary(npk.aov)
            Df Sum Sq Mean Sq F value  Pr(>F)   
block        5  343.3   68.66   4.447 0.01594 * 
N            1  189.3  189.28  12.259 0.00437 **
P            1    8.4    8.40   0.544 0.47490   
K            1   95.2   95.20   6.166 0.02880 * 
N:P          1   21.3   21.28   1.378 0.26317   
N:K          1   33.1   33.14   2.146 0.16865   
P:K          1    0.5    0.48   0.031 0.86275   
Residuals   12  185.3   15.44                   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

npk> coef(npk.aov)
(Intercept)      block1      block2      block3      block4      block5 
 54.8750000  -0.8500000   2.5750000   5.9000000  -4.7500000  -4.3500000 
         N1          P1          K1       N1:P1       N1:K1       P1:K1 
 -2.8083333   0.5916667   1.9916667  -0.9416667  -1.1750000   0.1416667 

npk> options(contrasts = c("contr.treatment", "contr.poly"))

npk> npk.aov1 <- aov(yield ~ block + N + K, data = npk)

npk> summary.lm(npk.aov1)

Call:
aov(formula = yield ~ block + N + K, data = npk)

Residuals:
    Min      1Q  Median      3Q     Max 
-6.4083 -2.1438  0.2042  2.3292  7.0750 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   53.208      2.276  23.381  8.5e-14 ***
block2         3.425      2.787   1.229  0.23690    
block3         6.750      2.787   2.422  0.02769 *  
block4        -3.900      2.787  -1.399  0.18082    
block5        -3.500      2.787  -1.256  0.22723    
block6         2.325      2.787   0.834  0.41646    
N1             5.617      1.609   3.490  0.00302 ** 
K1            -3.983      1.609  -2.475  0.02487 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.942 on 16 degrees of freedom
Multiple R-squared:  0.7163,	Adjusted R-squared:  0.5922 
F-statistic: 5.772 on 7 and 16 DF,  p-value: 0.001805


npk> se.contrast(npk.aov1, list(N=="0", N=="1"), data = npk)
[1] 1.609175

npk> model.tables(npk.aov1, type = "means", se = TRUE)
Tables of means
Grand mean
       
54.875 

 block 
block
    1     2     3     4     5     6 
54.03 57.45 60.77 50.12 50.52 56.35 

 N 
N
    0     1 
52.07 57.68 

 K 
K
    0     1 
56.87 52.88 

Standard errors for differences of means
        block     N     K
        2.787 1.609 1.609
replic.     4    12    12

npk> ## End(No test)
npk> 
npk> 
> 
> ## grDevices
> example(grSoftVersion, run.donttest = TRUE)

grSftV> ## No test: 
grSftV> grSoftVersion()
                   cairo                  cairoFT                    pango 
                "1.18.0"                       ""                 "1.52.1" 
                  libpng                     jpeg                  libtiff 
                "1.6.43"                    "8.0" "LIBTIFF, Version 4.5.1" 

grSftV> ## End(No test)
grSftV> 
grSftV> 
grSftV> 
> if(.Platform$OS.type == "windows") {
+     example(windowsFonts, run.donttest = TRUE)
+ } else {
+     example(quartzFonts, run.donttest = TRUE)
+ }

qrtzFn> ## No test: 
qrtzFn> if(.Platform$OS.type == "unix") { # includes macOS
qrtzFn+ 
qrtzFn+   utils::str( quartzFonts() )  # a list(serif = .., sans = .., mono = ..)
qrtzFn+   quartzFonts("mono")          # the list(mono = ..) sublist of quartzFonts()
qrtzFn+ 
qrtzFn+ ## Not run: 
qrtzFn+ ##D   ## for East Asian locales you can use something like
qrtzFn+ ##D   quartzFonts(sans = quartzFont(rep("AppleGothic", 4)),
qrtzFn+ ##D 	      serif = quartzFont(rep("AppleMyungjp", 4)))
qrtzFn+ ##D   ## since the default fonts may well not have the glyphs needed
qrtzFn+ ## End(Not run)
qrtzFn+ }
List of 3
 $ serif: chr [1:4] "Times-Roman" "Times-Bold" "Times-Italic" "Times-BoldItalic"
 $ sans : chr [1:4] "Helvetica" "Helvetica-Bold" "Helvetica-Oblique" "Helvetica-BoldOblique"
 $ mono : chr [1:4] "Courier" "Courier-Bold" "Courier-Oblique" "Courier-BoldOblique"
$mono
[1] "Courier"             "Courier-Bold"        "Courier-Oblique"    
[4] "Courier-BoldOblique"


qrtzFn> ## End(No test)
qrtzFn> 
qrtzFn> 
> 
> library(tools)
> example(Rd_db, run.donttest = TRUE) # Rdutils.Rd

Rd_db> ## No test: 
Rd_db> ## Build the Rd db for the (installed) base package.
Rd_db> db <- Rd_db("base")

Rd_db> ## Keyword metadata per Rd object.
Rd_db> keywords <- lapply(db, tools:::.Rd_get_metadata, "keyword")

Rd_db> ## Tabulate the keyword entries.
Rd_db> kw_table <- sort(table(unlist(keywords)))

Rd_db> ## The 5 most frequent ones:
Rd_db> rev(kw_table)[1 : 5]

  utilities programming        file       array       manip 
         85          78          45          43          36 

Rd_db> ## The "most informative" ones:
Rd_db> kw_table[kw_table == 1]

complex  device   files   hplot package 
      1       1       1       1       1 

Rd_db> ## Concept metadata per Rd file.
Rd_db> concepts <- lapply(db, tools:::.Rd_get_metadata, "concept")

Rd_db> ## How many files already have \concept metadata?
Rd_db> sum(sapply(concepts, length) > 0)
[1] 34

Rd_db> ## How many concept entries altogether?
Rd_db> length(unlist(concepts))
[1] 74

Rd_db> ## End(No test)
Rd_db> 
Rd_db> 
> example(file_ext, run.donttest = TRUE) # fileutils.Rd

fil_xt> ## No test: 
fil_xt> dir <- file.path(R.home(), "library", "stats")

fil_xt> list_files_with_exts(file.path(dir, "demo"), "R")
[1] "/usr/local/lib/R/library/stats/demo/glm.vr.R"
[2] "/usr/local/lib/R/library/stats/demo/lm.glm.R"
[3] "/usr/local/lib/R/library/stats/demo/nlm.R"   
[4] "/usr/local/lib/R/library/stats/demo/smooth.R"

fil_xt> list_files_with_type(file.path(dir, "demo"), "demo") # the same
[1] "/usr/local/lib/R/library/stats/demo/glm.vr.R"
[2] "/usr/local/lib/R/library/stats/demo/lm.glm.R"
[3] "/usr/local/lib/R/library/stats/demo/nlm.R"   
[4] "/usr/local/lib/R/library/stats/demo/smooth.R"

fil_xt> file_path_sans_ext(list.files(file.path(R.home("modules"))))
[1] "R_X11"    "R_de"     "internet" "lapack"  

fil_xt> ## End(No test)
fil_xt> 
fil_xt> 
> example(getVignetteInfo, run.donttest = TRUE)

gtVgnI> ## No test: 
gtVgnI> getVignetteInfo("grid")
      Package Dir                             Topic         File             
 [1,] "grid"  "/usr/local/lib/R/library/grid" "moveline"    "moveline.Rnw"   
 [2,] "grid"  "/usr/local/lib/R/library/grid" "displaylist" "displaylist.Rnw"
 [3,] "grid"  "/usr/local/lib/R/library/grid" "interactive" "interactive.Rnw"
 [4,] "grid"  "/usr/local/lib/R/library/grid" "frame"       "frame.Rnw"      
 [5,] "grid"  "/usr/local/lib/R/library/grid" "grid"        "grid.Rnw"       
 [6,] "grid"  "/usr/local/lib/R/library/grid" "locndimn"    "locndimn.Rnw"   
 [7,] "grid"  "/usr/local/lib/R/library/grid" "sharing"     "sharing.Rnw"    
 [8,] "grid"  "/usr/local/lib/R/library/grid" "nonfinite"   "nonfinite.Rnw"  
 [9,] "grid"  "/usr/local/lib/R/library/grid" "saveload"    "saveload.Rnw"   
[10,] "grid"  "/usr/local/lib/R/library/grid" "rotated"     "rotated.Rnw"    
[11,] "grid"  "/usr/local/lib/R/library/grid" "grobs"       "grobs.Rnw"      
[12,] "grid"  "/usr/local/lib/R/library/grid" "viewports"   "viewports.Rnw"  
[13,] "grid"  "/usr/local/lib/R/library/grid" "plotexample" "plotexample.Rnw"
      Title                                     R              
 [1,] "Demonstrating move-to and line-to"       "moveline.R"   
 [2,] "Display Lists in grid"                   "displaylist.R"
 [3,] "Editing grid Graphics"                   "interactive.R"
 [4,] "Frames and packing grobs"                "frame.R"      
 [5,] "Introduction to grid"                    "grid.R"       
 [6,] "Locations versus Dimensions"             "locndimn.R"   
 [7,] "Modifying multiple grobs simultaneously" "sharing.R"    
 [8,] "Non-finite values"                       "nonfinite.R"  
 [9,] "Persistent representations"              "saveload.R"   
[10,] "Rotated Viewports"                       "rotated.R"    
[11,] "Working with grid grobs"                 "grobs.R"      
[12,] "Working with viewports"                  "viewports.R"  
[13,] "Writing grid Code"                       "plotexample.R"
      PDF              
 [1,] "moveline.pdf"   
 [2,] "displaylist.pdf"
 [3,] "interactive.pdf"
 [4,] "frame.pdf"      
 [5,] "grid.pdf"       
 [6,] "locndimn.pdf"   
 [7,] "sharing.pdf"    
 [8,] "nonfinite.pdf"  
 [9,] "saveload.pdf"   
[10,] "rotated.pdf"    
[11,] "grobs.pdf"      
[12,] "viewports.pdf"  
[13,] "plotexample.pdf"

gtVgnI> ## End(No test)
gtVgnI> 
gtVgnI> 
gtVgnI> 
> example(parseLatex, run.donttest = TRUE) # charset-specific

prsLtx> ## No test: 
prsLtx> latex <- parseLatex("fran\\c{c}ais")

prsLtx> deparseLatex(latexToUtf8(latex))
[1] "fran<U+00E7>ais"

prsLtx> ## End(No test)
prsLtx> 
prsLtx> 
> 
> ## part of example(buildVignettes) at one time
> gVigns <- pkgVignettes("grid")
> str(gVigns) # contains paths
List of 8
 $ docs     : chr [1:13] "/usr/local/lib/R/library/grid/doc/displaylist.Rnw" "/usr/local/lib/R/library/grid/doc/frame.Rnw" "/usr/local/lib/R/library/grid/doc/grid.Rnw" "/usr/local/lib/R/library/grid/doc/grobs.Rnw" ...
 $ names    : chr [1:13] "displaylist" "frame" "grid" "grobs" ...
 $ engines  : chr [1:13] "utils::Sweave" "utils::Sweave" "utils::Sweave" "utils::Sweave" ...
 $ patterns : chr [1:13] "[.][rRsS](nw|tex)$" "[.][rRsS](nw|tex)$" "[.][rRsS](nw|tex)$" "[.][rRsS](nw|tex)$" ...
 $ encodings: Named chr [1:13] "" "" "" "" ...
  ..- attr(*, "names")= chr [1:13] "/usr/local/lib/R/library/grid/doc/displaylist.Rnw" "/usr/local/lib/R/library/grid/doc/frame.Rnw" "/usr/local/lib/R/library/grid/doc/grid.Rnw" "/usr/local/lib/R/library/grid/doc/grobs.Rnw" ...
 $ dir      : chr "/usr/local/lib/R/library/grid/doc"
 $ pkgdir   : chr "/usr/local/lib/R/library/grid"
 $ msg      : chr(0) 
 - attr(*, "class")= chr "pkgVignettes"
> 
> vind <- system.file(package = "grid", "doc", "index.html")
> if(nzchar(vind)) { # so vignettes have been installed
+     `%=f=%` <- function(a, b) normalizePath(a) == normalizePath(b)
+     with(gVigns,
+          stopifnot(engines == "utils::Sweave",
+                    pkgdir %=f=% system.file(package="grid"),
+                    dir    %=f=% system.file(package = "grid", "doc"),
+                    (n. <- length(docs)) >= 12, # have 13
+                    n. == length(names), n. == length(engines),
+                    length(msg) == 0) ) # as it is a 'base' package
+     stopifnot("grid" %in% gVigns$names, inherits(gVigns, "pkgVignettes"))
+ }
> 
> ## This might leave collation changed, so do not put other things after it.
> example(icuSetCollate, run.donttest = TRUE)

icStCl> ## No test: 
icStCl> ## These examples depend on having ICU available, and on the locale.
icStCl> ## As we don't know the current settings, we can only reset to the default.
icStCl> if(capabilities("ICU")) withAutoprint({
icStCl+     icuGetCollate()
icStCl+     icuGetCollate("valid")
icStCl+     x <- c("Aarhus", "aarhus", "safe", "test", "Zoo")
icStCl+     sort(x)
icStCl+     icuSetCollate(case_first = "upper"); sort(x)
icStCl+     icuSetCollate(case_first = "lower"); sort(x)
icStCl+ 
icStCl+     ## Danish collates upper-case-first and with 'aa' as a single letter
icStCl+     icuSetCollate(locale = "da_DK", case_first = "default"); sort(x) 
icStCl+     ## Estonian collates Z between S and T
icStCl+     icuSetCollate(locale = "et_EE"); sort(x)
icStCl+     icuSetCollate(locale = "default"); icuGetCollate("valid")
icStCl+ })
>     icuGetCollate()
[1] "ICU not in use"
>     icuGetCollate("valid")
[1] "ICU not in use"
>     x <- c("Aarhus", "aarhus", "safe", "test", "Zoo")
>     sort(x)
[1] "Aarhus" "Zoo"    "aarhus" "safe"   "test"  
>     icuSetCollate(case_first = "upper"); sort(x)
[1] "Aarhus" "Zoo"    "aarhus" "safe"   "test"  
>     icuSetCollate(case_first = "lower"); sort(x)
[1] "Aarhus" "Zoo"    "aarhus" "safe"   "test"  
>     ## Danish collates upper-case-first and with 'aa' as a single letter
>     icuSetCollate(locale = "da_DK", case_first = "default"); sort(x) 
[1] "safe"   "test"   "Zoo"    "Aarhus" "aarhus"
>     ## Estonian collates Z between S and T
>     icuSetCollate(locale = "et_EE"); sort(x)
[1] "aarhus" "Aarhus" "safe"   "Zoo"    "test"  
>     icuSetCollate(locale = "default"); icuGetCollate("valid")
[1] "root"

icStCl> ## End(No test)
icStCl> 
icStCl> 
> proc.time()
   user  system elapsed 
  8.524   0.644  12.532 
> 
