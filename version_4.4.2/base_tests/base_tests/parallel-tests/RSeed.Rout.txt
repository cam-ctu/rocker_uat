
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> Sys.unsetenv("R_PARALLEL_PORT")
> 
> check.RS <- function(verbose = TRUE) {
+     s1 <- get0(".Random.seed", envir = .GlobalEnv, inherits = FALSE)
+     if(verbose) { cat("current .Random.seed :\n"); utils::str(s1) }
+     if(any("parallel" == loadedNamespaces())) unloadNamespace("parallel")
+     loadNamespace("parallel")
+     s2 <- get0(".Random.seed", envir = .GlobalEnv, inherits = FALSE)
+     stopifnot(all.equal(s1, s2)) ## both NULL (if there was none); equal also otherwise
+     unloadNamespace("parallel")
+     invisible(s1)
+ }
> 
> s1 <- check.RS()
current .Random.seed :
 NULL
> for(n in 1:3) check.RS(verbose=FALSE)
> 
> if(is.null(s1)) { ## create one
+     runif(1)
+ } else { # remove it
+     rm(.Random.seed)
+ }
[1] 0.06978888
> s2 <- check.RS()
current .Random.seed :
 int [1:626] 10403 1 -598853970 1519410952 -1233158901 -783483927 -628360008 18971494 -292261887 -72442221 ...
Error in cleanup(kill = tools::SIGKILL, detach = TRUE, shutdown = TRUE) : 
  object 'C_mc_cleanup' not found
Calls: <Anonymous> -> cleanup
Error in cleanup(kill = tools::SIGKILL, detach = TRUE, shutdown = TRUE) : 
  object 'C_mc_cleanup' not found
Calls: <Anonymous> -> cleanup
Error in cleanup(kill = tools::SIGKILL, detach = TRUE, shutdown = TRUE) : 
  object 'C_mc_cleanup' not found
Calls: <Anonymous> -> cleanup
> 
> stopifnot(xor(is.null(s1),
+ 	      is.null(s2)))
> 
