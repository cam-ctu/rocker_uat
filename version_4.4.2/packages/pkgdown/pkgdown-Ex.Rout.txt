
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "pkgdown"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('pkgdown')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("autolink_html")
> ### * autolink_html
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: autolink_html
> ### Title: Automatically link references and articles in an HTML page
> ### Aliases: autolink_html
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D autolink_html("path/to/file.html",
> ##D   local_packages = c(
> ##D     shiny = "shiny",
> ##D     shinydashboard = "shinydashboard"
> ##D   )
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("build_site")
> ### * build_site
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: build_site
> ### Title: Build a complete pkgdown website
> ### Aliases: build_site
> 
> ### ** Examples
> 
> ## Not run: 
> ##D build_site()
> ##D 
> ##D build_site(override = list(destination = tempdir()))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("in_pkgdown")
> ### * in_pkgdown
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: in_pkgdown
> ### Title: Determine if code is executed by pkgdown
> ### Aliases: in_pkgdown
> 
> ### ** Examples
> 
> in_pkgdown()
[1] FALSE
> 
> 
> 
> cleanEx()
> nameEx("rd2html")
> ### * rd2html
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rd2html
> ### Title: Translate an Rd string to its HTML output
> ### Aliases: rd2html
> 
> ### ** Examples
> 
> rd2html("a\n%b\nc")
[1] "a"           "<!-- %b -->" "c"          
> 
> rd2html("a & b")
[1] "a &amp; b"
> 
> rd2html("\\strong{\\emph{x}}")
[1] "<strong><em>x</em></strong>"
> 
> 
> 
> 
> cleanEx()
> nameEx("templates")
> ### * templates
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: template_navbar
> ### Title: Generate YAML templates
> ### Aliases: template_navbar template_reference template_articles
> 
> ### ** Examples
> 
> ## Not run: 
> ##D pkgdown::template_navbar()
> ## End(Not run)
> 
> ## Not run: 
> ##D pkgdown::template_reference()
> ## End(Not run)
> 
> ## Not run: 
> ##D pkgdown::template_articles()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("test-crayon")
> ### * test-crayon
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-crayon
> ### Title: Test case: crayon
> ### Aliases: test-crayon
> ### Keywords: internal
> 
> ### ** Examples
> 
> cat(cli::col_red("This is red"), "\n")
This is red 
> cat(cli::col_blue("This is blue"), "\n")
This is blue 
> 
> message(cli::col_green("This is green"))
This is green
> 
> warning(cli::style_bold("This is bold"))
Warning: This is bold
> 
> 
> 
> cleanEx()
> nameEx("test-dont")
> ### * test-dont
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-dont
> ### Title: Test case: don't
> ### Aliases: test-dont
> ### Keywords: internal
> 
> ### ** Examples
> 
> # \dontrun{} --------------------------------------------------------
> # always shown; never run
> 
> x <- 1
> ## Not run: x <- 2
> ## Not run: 
> ##D   x <- 3
> ##D   x <- 4
> ## End(Not run)
> x # should be 1
[1] 1
> 
> # \donttest{} -------------------------------------------------------
> # only multiline are shown; always run
> 
> x <- 1
> x # should be 4
[1] 1
> 
> # \testonly{} -----------------------------------------------------
> # never shown, never run
> 
> x <- 1
> ## Don't show: 
> x <- 2
> ## End(Don't show)
> ## Don't show: 
>   x <- 3
>   x <- 4
> ## End(Don't show)
> x # should be 1
[1] 4
> 
> # \dontshow{} -------------------------------------------------------
> # never shown, always run
> 
> x <- 1
> ## Don't show: 
> x <- 2
> ## End(Don't show)
> ## Don't show: 
>   x <- 3
>   x <- 4
> ## End(Don't show)
> x # should be 4
[1] 4
> 
> # @examplesIf ------------------------------------------------------
> # If FALSE, wrapped in if; if TRUE, not seen
> 
> x <- 1
> 
> ## Don't show: 
> if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ x <- 2
+ ## Don't show: 
+ }) # examplesIf
> ## End(Don't show)
> ## Don't show: 
> if (TRUE) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ x <- 3
+ ## Don't show: 
+ }) # examplesIf
> x <- 3
> ## End(Don't show)
> x # should be 3
[1] 3
> 
> 
> 
> cleanEx()
> nameEx("test-figures")
> ### * test-figures
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-figures
> ### Title: Test case: figures
> ### Aliases: test-figures
> ### Keywords: internal
> 
> ### ** Examples
> 
> x <- seq(0, 2 * pi, length.out = 25)
> plot(x, sin(x))
> 
> plot(1:10)
> lines(1:10)
> text(2, 5, "Hello", srt = 30, cex = 2)
> 
> 
> 
> cleanEx()
> nameEx("test-links")
> ### * test-links
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-links
> ### Title: Test case: links
> ### Aliases: test-links
> ### Keywords: internal
> 
> ### ** Examples
> 
> jsonlite::minify("{}")
{} 
> 
> library(jsonlite, warn.conflicts = FALSE)
> minify("{}")
{} 
> 
> 
> 
> cleanEx()

detaching ‘package:jsonlite’

> nameEx("test-long-lines")
> ### * test-long-lines
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-long-lines
> ### Title: Test case: long-lines
> ### Aliases: test-long-lines
> ### Keywords: internal
> 
> ### ** Examples
> 
> pkgdown:::ruler()
----+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8
12345678901234567890123456789012345678901234567890123456789012345678901234567890
> 
> cat(rep("x ", 100), sep = "")
x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x > cat(rep("xy", 100), sep = "")
xyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxy> cat(rep("x ", 100), sep = "")
x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x > cat(rep("xy", 100), sep = "")
xyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxyxy> 
> 
> 
> cleanEx()
> nameEx("test-output-styles")
> ### * test-output-styles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-output-styles
> ### Title: Test case: output styles
> ### Aliases: test-output-styles
> ### Keywords: internal
> 
> ### ** Examples
> 
> # This example illustrates some important output types
> # The following output should be wrapped over multiple lines
> a <- 1:100
> a
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18
 [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36
 [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54
 [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72
 [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90
 [91]  91  92  93  94  95  96  97  98  99 100
> 
> cat("This some text!\n")
This some text!
> message("This is a message!")
This is a message!
> warning("This is a warning!")
Warning: This is a warning!
> 
> # This is a multi-line block
> {
+   1 + 2
+   2 + 2
+ }
[1] 4
> 
> 
> 
> cleanEx()
> nameEx("test-tables")
> ### * test-tables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: test-tables
> ### Title: Test case: tables
> ### Aliases: test-tables
> ### Keywords: internal
> 
> ### ** Examples
> 
> gt::gt(head(mtcars))
<div id="ydgabwknrs" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
  <style>#ydgabwknrs table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ydgabwknrs thead, #ydgabwknrs tbody, #ydgabwknrs tfoot, #ydgabwknrs tr, #ydgabwknrs td, #ydgabwknrs th {
  border-style: none;
}

#ydgabwknrs p {
  margin: 0;
  padding: 0;
}

#ydgabwknrs .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ydgabwknrs .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ydgabwknrs .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ydgabwknrs .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ydgabwknrs .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ydgabwknrs .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ydgabwknrs .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ydgabwknrs .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ydgabwknrs .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ydgabwknrs .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ydgabwknrs .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ydgabwknrs .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ydgabwknrs .gt_spanner_row {
  border-bottom-style: hidden;
}

#ydgabwknrs .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ydgabwknrs .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ydgabwknrs .gt_from_md > :first-child {
  margin-top: 0;
}

#ydgabwknrs .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ydgabwknrs .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ydgabwknrs .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#ydgabwknrs .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ydgabwknrs .gt_row_group_first td {
  border-top-width: 2px;
}

#ydgabwknrs .gt_row_group_first th {
  border-top-width: 2px;
}

#ydgabwknrs .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ydgabwknrs .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ydgabwknrs .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ydgabwknrs .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ydgabwknrs .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ydgabwknrs .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ydgabwknrs .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ydgabwknrs .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ydgabwknrs .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ydgabwknrs .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ydgabwknrs .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ydgabwknrs .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ydgabwknrs .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ydgabwknrs .gt_left {
  text-align: left;
}

#ydgabwknrs .gt_center {
  text-align: center;
}

#ydgabwknrs .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ydgabwknrs .gt_font_normal {
  font-weight: normal;
}

#ydgabwknrs .gt_font_bold {
  font-weight: bold;
}

#ydgabwknrs .gt_font_italic {
  font-style: italic;
}

#ydgabwknrs .gt_super {
  font-size: 65%;
}

#ydgabwknrs .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ydgabwknrs .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ydgabwknrs .gt_indent_1 {
  text-indent: 5px;
}

#ydgabwknrs .gt_indent_2 {
  text-indent: 10px;
}

#ydgabwknrs .gt_indent_3 {
  text-indent: 15px;
}

#ydgabwknrs .gt_indent_4 {
  text-indent: 20px;
}

#ydgabwknrs .gt_indent_5 {
  text-indent: 25px;
}

#ydgabwknrs .katex-display {
  display: inline-flex !important;
  margin-bottom: 0.75em !important;
}

#ydgabwknrs div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {
  height: 0px !important;
}
</style>
  <table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="mpg">mpg</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="cyl">cyl</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="disp">disp</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="hp">hp</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="drat">drat</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="wt">wt</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="qsec">qsec</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="vs">vs</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="am">am</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="gear">gear</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="carb">carb</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="mpg" class="gt_row gt_right">21.0</td>
<td headers="cyl" class="gt_row gt_right">6</td>
<td headers="disp" class="gt_row gt_right">160</td>
<td headers="hp" class="gt_row gt_right">110</td>
<td headers="drat" class="gt_row gt_right">3.90</td>
<td headers="wt" class="gt_row gt_right">2.620</td>
<td headers="qsec" class="gt_row gt_right">16.46</td>
<td headers="vs" class="gt_row gt_right">0</td>
<td headers="am" class="gt_row gt_right">1</td>
<td headers="gear" class="gt_row gt_right">4</td>
<td headers="carb" class="gt_row gt_right">4</td></tr>
    <tr><td headers="mpg" class="gt_row gt_right">21.0</td>
<td headers="cyl" class="gt_row gt_right">6</td>
<td headers="disp" class="gt_row gt_right">160</td>
<td headers="hp" class="gt_row gt_right">110</td>
<td headers="drat" class="gt_row gt_right">3.90</td>
<td headers="wt" class="gt_row gt_right">2.875</td>
<td headers="qsec" class="gt_row gt_right">17.02</td>
<td headers="vs" class="gt_row gt_right">0</td>
<td headers="am" class="gt_row gt_right">1</td>
<td headers="gear" class="gt_row gt_right">4</td>
<td headers="carb" class="gt_row gt_right">4</td></tr>
    <tr><td headers="mpg" class="gt_row gt_right">22.8</td>
<td headers="cyl" class="gt_row gt_right">4</td>
<td headers="disp" class="gt_row gt_right">108</td>
<td headers="hp" class="gt_row gt_right">93</td>
<td headers="drat" class="gt_row gt_right">3.85</td>
<td headers="wt" class="gt_row gt_right">2.320</td>
<td headers="qsec" class="gt_row gt_right">18.61</td>
<td headers="vs" class="gt_row gt_right">1</td>
<td headers="am" class="gt_row gt_right">1</td>
<td headers="gear" class="gt_row gt_right">4</td>
<td headers="carb" class="gt_row gt_right">1</td></tr>
    <tr><td headers="mpg" class="gt_row gt_right">21.4</td>
<td headers="cyl" class="gt_row gt_right">6</td>
<td headers="disp" class="gt_row gt_right">258</td>
<td headers="hp" class="gt_row gt_right">110</td>
<td headers="drat" class="gt_row gt_right">3.08</td>
<td headers="wt" class="gt_row gt_right">3.215</td>
<td headers="qsec" class="gt_row gt_right">19.44</td>
<td headers="vs" class="gt_row gt_right">1</td>
<td headers="am" class="gt_row gt_right">0</td>
<td headers="gear" class="gt_row gt_right">3</td>
<td headers="carb" class="gt_row gt_right">1</td></tr>
    <tr><td headers="mpg" class="gt_row gt_right">18.7</td>
<td headers="cyl" class="gt_row gt_right">8</td>
<td headers="disp" class="gt_row gt_right">360</td>
<td headers="hp" class="gt_row gt_right">175</td>
<td headers="drat" class="gt_row gt_right">3.15</td>
<td headers="wt" class="gt_row gt_right">3.440</td>
<td headers="qsec" class="gt_row gt_right">17.02</td>
<td headers="vs" class="gt_row gt_right">0</td>
<td headers="am" class="gt_row gt_right">0</td>
<td headers="gear" class="gt_row gt_right">3</td>
<td headers="carb" class="gt_row gt_right">2</td></tr>
    <tr><td headers="mpg" class="gt_row gt_right">18.1</td>
<td headers="cyl" class="gt_row gt_right">6</td>
<td headers="disp" class="gt_row gt_right">225</td>
<td headers="hp" class="gt_row gt_right">105</td>
<td headers="drat" class="gt_row gt_right">2.76</td>
<td headers="wt" class="gt_row gt_right">3.460</td>
<td headers="qsec" class="gt_row gt_right">20.22</td>
<td headers="vs" class="gt_row gt_right">1</td>
<td headers="am" class="gt_row gt_right">0</td>
<td headers="gear" class="gt_row gt_right">3</td>
<td headers="carb" class="gt_row gt_right">1</td></tr>
  </tbody>
  
  
</table>
</div>
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.531 0.047 0.577 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
