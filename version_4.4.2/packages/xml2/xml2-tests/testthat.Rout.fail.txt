
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This file is part of the standard setup for testthat.
> # It is recommended that you do not modify it.
> #
> # Where should you do additional test configuration?
> # Learn more about the roles of various files in:
> # * https://r-pkgs.org/testing-design.html#sec-tests-files-overview
> # * https://testthat.r-lib.org/articles/special-files.html
> 
> library(testthat)
> library(xml2)
> 
> is_solaris <- tolower(Sys.info()[["sysname"]]) == "sunos"
> 
> if (!is_solaris) {
+   test_check("xml2")
+ }
This is libxml2 version 2.9.14 
[ FAIL 1 | WARN 0 | SKIP 20 | PASS 372 ]

══ Skipped tests (20) ══════════════════════════════════════════════════════════
• how to test error with `check_installed()`? (1): 'test-xml_parse.R:2:3'
• httpbin is unreliable (2): 'test-xml_parse.R:67:3', 'test-xml_parse.R:76:3'
• libxml2-dependent (1): 'test-xml_url.R:15:3'
• On CRAN (16): 'test-xml_attr.R:103:3', 'test-xml_children.R:14:3',
  'test-xml_document.R:4:3', 'test-xml_find.R:65:3', 'test-xml_find.R:91:3',
  'test-xml_find.R:109:3', 'test-xml_find.R:137:3', 'test-xml_name.R:32:3',
  'test-xml_node.R:4:3', 'test-xml_nodeset.R:79:3', 'test-xml_parse.R:12:3',
  'test-xml_parse.R:108:3', 'test-xml_structure.R:35:3',
  'test-xml_write.R:7:3', 'test-xml_write.R:77:3', 'test-xml_write.R:93:3'

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-xml_parse.R:27:3'): parse_options errors when given an invalid option ──
Error in `eval(code, test_env)`: x `options` "INVALID" is not a valid option.
i Valid options are one of "RECOVER", "NOENT", "DTDLOAD", "DTDATTR", "DTDVALID", "NOERROR", "NOWARNING", "PEDANTIC", "NOBLANKS", "SAX1", "XINCLUDE", "NONET", "NODICT", "NSCLEAN", "NOCDATA", "NOXINCNODE", "COMPACT", "OLD10", ..., "IGNORE_ENC", or "BIG_LINES".
i See read_html (`?xml2::read_html()`) for all options.
Backtrace:
    ▆
 1. ├─testthat::expect_error(...) at test-xml_parse.R:27:3
 2. │ └─testthat:::expect_condition_matching(...)
 3. │   └─testthat:::quasi_capture(...)
 4. │     ├─testthat (local) .capture(...)
 5. │     │ └─base::withCallingHandlers(...)
 6. │     └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
 7. └─xml2:::parse_options("INVALID", xml_parse_options())
 8.   └─cli::cli_abort(...)
 9.     └─rlang::abort(...)

[ FAIL 1 | WARN 0 | SKIP 20 | PASS 372 ]
Error: Test failures
Execution halted
