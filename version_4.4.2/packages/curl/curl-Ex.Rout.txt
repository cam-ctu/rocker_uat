
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "curl"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('curl')
Using libcurl 8.5.0 with OpenSSL/3.0.13
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("curl")
> ### * curl
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl
> ### Title: Curl connection interface
> ### Aliases: curl
> 
> ### ** Examples
> 
> ## Not run: 
> ##D con <- curl("https://hb.cran.dev/get")
> ##D readLines(con)
> ##D 
> ##D # Auto-opened connections can be recycled
> ##D open(con, "rb")
> ##D bin <- readBin(con, raw(), 999)
> ##D close(con)
> ##D rawToChar(bin)
> ##D 
> ##D # HTTP error
> ##D curl("https://hb.cran.dev/status/418", "r")
> ##D 
> ##D # Follow redirects
> ##D readLines(curl("https://hb.cran.dev/redirect/3"))
> ##D 
> ##D # Error after redirect
> ##D curl("https://hb.cran.dev/redirect-to?url=https://hb.cran.dev/status/418", "r")
> ##D 
> ##D # Auto decompress Accept-Encoding: gzip / deflate (rfc2616 #14.3)
> ##D readLines(curl("https://hb.cran.dev/gzip"))
> ##D readLines(curl("https://hb.cran.dev/deflate"))
> ##D 
> ##D # Binary support
> ##D buf <- readBin(curl("https://hb.cran.dev/bytes/98765", "rb"), raw(), 1e5)
> ##D length(buf)
> ##D 
> ##D # Read file from disk
> ##D test <- paste0("file://", system.file("DESCRIPTION"))
> ##D readLines(curl(test))
> ##D 
> ##D # Other protocols
> ##D read.csv(curl("ftp://cran.r-project.org/pub/R/CRAN_mirrors.csv"))
> ##D readLines(curl("ftps://test.rebex.net:990/readme.txt"))
> ##D readLines(curl("gopher://quux.org/1"))
> ##D 
> ##D # Streaming data
> ##D con <- curl("http://jeroen.github.io/data/diamonds.json", "r")
> ##D while(length(x <- readLines(con, n = 5))){
> ##D   print(x)
> ##D }
> ##D 
> ##D # Stream large dataset over https with gzip
> ##D library(jsonlite)
> ##D con <- gzcon(curl("https://jeroen.github.io/data/nycflights13.json.gz"))
> ##D nycflights <- stream_in(con)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("curl_download")
> ### * curl_download
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_download
> ### Title: Download file to disk
> ### Aliases: curl_download
> 
> ### ** Examples
> 
> # Download large file
> ## Not run: 
> ##D url <- "http://www2.census.gov/acs2011_5yr/pums/csv_pus.zip"
> ##D tmp <- tempfile()
> ##D curl_download(url, tmp)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("curl_echo")
> ### * curl_echo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_echo
> ### Title: Echo Service
> ### Aliases: curl_echo find_port
> 
> ### ** Examples
> 
> if(require('httpuv')){
+ h <- new_handle(url = 'https://hb.cran.dev/post')
+ handle_setform(h, foo = "blabla", bar = charToRaw("test"),
+   myfile = form_file(system.file("DESCRIPTION"), "text/description"))
+ 
+ # Echo the POST request data
+ formdata <- curl_echo(h)
+ 
+ # Show the multipart body
+ cat(rawToChar(formdata$body))
+ 
+ # Parse multipart
+ webutils::parse_http(formdata$body, formdata$content_type)
+ }
Loading required package: httpuv
--------------------------Zek37IJwLG356XIGfYZ7Qe
Content-Disposition: form-data; name="foo"

blabla
--------------------------Zek37IJwLG356XIGfYZ7Qe
Content-Disposition: form-data; name="bar"

test
--------------------------Zek37IJwLG356XIGfYZ7Qe
Content-Disposition: form-data; name="myfile"; filename="DESCRIPTION"
Content-Type: text/description

Package: base
Version: 4.4.2
Priority: base
Title: The R Base Package
Author: R Core Team and contributors worldwide
Maintainer: R Core Team <do-use-Contact-address@r-project.org>
Contact: R-help mailing list <r-help@r-project.org>
Description: Base R functions.
License: Part of R 4.4.2
Suggests: methods
Enhances: chron, date, round
Built: R 4.4.2; ; 2025-03-03 08:47:53 UTC; unix

--------------------------Zek37IJwLG356XIGfYZ7Qe--
$foo
$foo$value
[1] 62 6c 61 62 6c 61

$foo$content_disposition
[1] "form-data"

$foo$name
[1] "foo"


$bar
$bar$value
[1] 74 65 73 74

$bar$content_disposition
[1] "form-data"

$bar$name
[1] "bar"


$myfile
$myfile$value
  [1] 50 61 63 6b 61 67 65 3a 20 62 61 73 65 0a 56 65 72 73 69 6f 6e 3a 20 34 2e
 [26] 34 2e 32 0a 50 72 69 6f 72 69 74 79 3a 20 62 61 73 65 0a 54 69 74 6c 65 3a
 [51] 20 54 68 65 20 52 20 42 61 73 65 20 50 61 63 6b 61 67 65 0a 41 75 74 68 6f
 [76] 72 3a 20 52 20 43 6f 72 65 20 54 65 61 6d 20 61 6e 64 20 63 6f 6e 74 72 69
[101] 62 75 74 6f 72 73 20 77 6f 72 6c 64 77 69 64 65 0a 4d 61 69 6e 74 61 69 6e
[126] 65 72 3a 20 52 20 43 6f 72 65 20 54 65 61 6d 20 3c 64 6f 2d 75 73 65 2d 43
[151] 6f 6e 74 61 63 74 2d 61 64 64 72 65 73 73 40 72 2d 70 72 6f 6a 65 63 74 2e
[176] 6f 72 67 3e 0a 43 6f 6e 74 61 63 74 3a 20 52 2d 68 65 6c 70 20 6d 61 69 6c
[201] 69 6e 67 20 6c 69 73 74 20 3c 72 2d 68 65 6c 70 40 72 2d 70 72 6f 6a 65 63
[226] 74 2e 6f 72 67 3e 0a 44 65 73 63 72 69 70 74 69 6f 6e 3a 20 42 61 73 65 20
[251] 52 20 66 75 6e 63 74 69 6f 6e 73 2e 0a 4c 69 63 65 6e 73 65 3a 20 50 61 72
[276] 74 20 6f 66 20 52 20 34 2e 34 2e 32 0a 53 75 67 67 65 73 74 73 3a 20 6d 65
[301] 74 68 6f 64 73 0a 45 6e 68 61 6e 63 65 73 3a 20 63 68 72 6f 6e 2c 20 64 61
[326] 74 65 2c 20 72 6f 75 6e 64 0a 42 75 69 6c 74 3a 20 52 20 34 2e 34 2e 32 3b
[351] 20 3b 20 32 30 32 35 2d 30 33 2d 30 33 20 30 38 3a 34 37 3a 35 33 20 55 54
[376] 43 3b 20 75 6e 69 78 0a

$myfile$content_disposition
[1] "form-data"

$myfile$content_type
[1] "text/description"

$myfile$name
[1] "myfile"

$myfile$filename
[1] "DESCRIPTION"


> 
> 
> 
> cleanEx()

detaching ‘package:httpuv’

> nameEx("curl_escape")
> ### * curl_escape
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_escape
> ### Title: URL encoding
> ### Aliases: curl_escape curl_unescape
> 
> ### ** Examples
> 
> # Escape strings
> out <- curl_escape("foo = bar + 5")
> curl_unescape(out)
[1] "foo = bar + 5"
> 
> # All non-ascii characters are encoded
> mu <- "\u00b5"
> curl_escape(mu)
[1] "%C2%B5"
> curl_unescape(curl_escape(mu))
[1] "µ"
> 
> 
> 
> cleanEx()
> nameEx("curl_fetch")
> ### * curl_fetch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_fetch_memory
> ### Title: Fetch the contents of a URL
> ### Aliases: curl_fetch_memory curl_fetch_disk curl_fetch_stream
> ###   curl_fetch_multi curl_fetch_echo
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("curl_options")
> ### * curl_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_options
> ### Title: List curl version and options.
> ### Aliases: curl_options curl_symbols curl_version
> 
> ### ** Examples
> 
> # Available options
> curl_options()
      abstract_unix_socket           accepttimeout_ms 
                     10264                        212 
           accept_encoding              address_scope 
                     10102                        171 
                    altsvc                altsvc_ctrl 
                     10287                        286 
                    append                autoreferer 
                        50                         58 
                 aws_sigv4                 buffersize 
                     10305                         98 
                    cainfo                cainfo_blob 
                     10065                      40309 
                    capath           ca_cache_timeout 
                     10097                        321 
                  certinfo         chunk_bgn_function 
                       172                      20198 
                chunk_data         chunk_end_function 
                     10201                      20199 
           closesocketdata        closesocketfunction 
                     10209                      20208 
            connecttimeout          connecttimeout_ms 
                        78                        156 
              connect_only                 connect_to 
                       141                      10243 
conv_from_network_function    conv_from_utf8_function 
                     20142                      20144 
  conv_to_network_function                     cookie 
                     20143                      10022 
                cookiefile                  cookiejar 
                     10031                      10082 
                cookielist              cookiesession 
                     10135                         96 
            copypostfields                       crlf 
                     10165                         27 
                   crlfile                      curlu 
                     10169                      10282 
             customrequest                  debugdata 
                     10036                      10095 
             debugfunction           default_protocol 
                     20094                      10238 
               dirlistonly   disallow_username_in_url 
                        48                        278 
         dns_cache_timeout              dns_interface 
                        92                      10221 
             dns_local_ip4              dns_local_ip6 
                     10222                      10223 
               dns_servers      dns_shuffle_addresses 
                     10211                        275 
      dns_use_global_cache         doh_ssl_verifyhost 
                        91                        307 
        doh_ssl_verifypeer       doh_ssl_verifystatus 
                       306                        308 
                   doh_url                  egdsocket 
                     10279                      10077 
               errorbuffer      expect_100_timeout_ms 
                     10010                        227 
               failonerror                   filetime 
                        45                         69 
              fnmatch_data           fnmatch_function 
                     10202                      20200 
            followlocation               forbid_reuse 
                        52                         75 
             fresh_connect                    ftpport 
                        74                      10017 
                ftpsslauth                ftp_account 
                       129                      10134 
   ftp_alternative_to_user    ftp_create_missing_dirs 
                     10147                        110 
            ftp_filemethod           ftp_skip_pasv_ip 
                       138                        137 
               ftp_ssl_ccc               ftp_use_eprt 
                       154                        106 
              ftp_use_epsv               ftp_use_pret 
                        85                        188 
         gssapi_delegation  happy_eyeballs_timeout_ms 
                       210                        271 
           haproxyprotocol          haproxy_client_ip 
                       274                      10323 
                    header                 headerdata 
                        42                      10029 
            headerfunction                  headeropt 
                     20079                        229 
                      hsts               hstsreaddata 
                     10300                      10302 
          hstsreadfunction              hstswritedata 
                     20301                      10304 
         hstswritefunction                  hsts_ctrl 
                     20303                        299 
            http09_allowed             http200aliases 
                       285                      10104 
                  httpauth                    httpget 
                       107                         80 
                httpheader                   httppost 
                     10023                      10024 
           httpproxytunnel      http_content_decoding 
                        61                        158 
    http_transfer_decoding               http_version 
                       157                         84 
     ignore_content_length                 infilesize 
                       136                         14 
          infilesize_large                  interface 
                     30115                      10062 
            interleavedata         interleavefunction 
                     10195                      20196 
                 ioctldata              ioctlfunction 
                     10131                      20130 
                 ipresolve                 issuercert 
                       113                      10170 
           issuercert_blob      keep_sending_on_error 
                     40295                        245 
                 keypasswd                   krblevel 
                     10026                      10063 
                 localport             localportrange 
                       139                        140 
             login_options            low_speed_limit 
                     10224                         19 
            low_speed_time                  mail_auth 
                        20                      10217 
                 mail_from                  mail_rcpt 
                     10186                      10187 
      mail_rcpt_allowfails                maxage_conn 
                       290                        288 
               maxconnects                maxfilesize 
                        71                        114 
         maxfilesize_large           maxlifetime_conn 
                     30117                        314 
                 maxredirs       max_recv_speed_large 
                        68                      30146 
      max_send_speed_large                   mimepost 
                     30145                      10269 
              mime_options                      netrc 
                       315                         51 
                netrc_file        new_directory_perms 
                     10118                        160 
            new_file_perms                     nobody 
                       159                         44 
                noprogress                    noproxy 
                        43                      10177 
                  nosignal             opensocketdata 
                        99                      10164 
        opensocketfunction                   password 
                     20163                      10174 
                path_as_is            pinnedpublickey 
                       234                      10230 
                  pipewait                       port 
                       237                          3 
                      post                 postfields 
                        47                      10015 
             postfieldsize        postfieldsize_large 
                        60                      30120 
                 postquote                  postredir 
                     10039                        161 
                  prequote                 prereqdata 
                     10093                      10313 
            prereqfunction                  pre_proxy 
                     20312                      10262 
                   private           progressfunction 
                     10103                      20056 
                 protocols              protocols_str 
                       181                      10318 
                     proxy                  proxyauth 
                     10004                        111 
               proxyheader              proxypassword 
                     10228                      10176 
                 proxyport                  proxytype 
                        59                        101 
             proxyusername               proxyuserpwd 
                     10175                      10006 
              proxy_cainfo          proxy_cainfo_blob 
                     10246                      40310 
              proxy_capath              proxy_crlfile 
                     10247                      10260 
          proxy_issuercert      proxy_issuercert_blob 
                     10296                      40297 
           proxy_keypasswd      proxy_pinnedpublickey 
                     10258                      10263 
        proxy_service_name              proxy_sslcert 
                     10235                      10254 
         proxy_sslcerttype         proxy_sslcert_blob 
                     10255                      40293 
              proxy_sslkey           proxy_sslkeytype 
                     10256                      10257 
         proxy_sslkey_blob           proxy_sslversion 
                     40294                        250 
     proxy_ssl_cipher_list          proxy_ssl_options 
                     10259                        261 
      proxy_ssl_verifyhost       proxy_ssl_verifypeer 
                       249                        248 
       proxy_tls13_ciphers     proxy_tlsauth_password 
                     10277                      10252 
        proxy_tlsauth_type     proxy_tlsauth_username 
                     10253                      10251 
       proxy_transfer_mode                        put 
                       166                         54 
                quick_exit                      quote 
                       322                      10028 
               random_file                      range 
                     10076                      10007 
                  readdata               readfunction 
                     10009                      20012 
           redir_protocols        redir_protocols_str 
                       182                      10319 
                   referer             request_target 
                     10016                      10266 
                   resolve        resolver_start_data 
                     10203                      10273 
   resolver_start_function                resume_from 
                     20272                         21 
         resume_from_large           rtsp_client_cseq 
                     30116                        193 
              rtsp_request           rtsp_server_cseq 
                       189                        194 
           rtsp_session_id            rtsp_stream_uri 
                     10190                      10191 
            rtsp_transport               sasl_authzid 
                     10192                      10289 
                   sasl_ir                   seekdata 
                       218                      10168 
              seekfunction    server_response_timeout 
                     20167                        112 
              service_name                      share 
                     10236                      10100 
               sockoptdata            sockoptfunction 
                     10149                      20148 
               socks5_auth          socks5_gssapi_nec 
                       267                        180 
     socks5_gssapi_service             ssh_auth_types 
                     10179                        151 
           ssh_compression            ssh_hostkeydata 
                       268                      10317 
       ssh_hostkeyfunction    ssh_host_public_key_md5 
                     20316                      10162 
ssh_host_public_key_sha256                ssh_keydata 
                     10311                      10185 
           ssh_keyfunction             ssh_knownhosts 
                     20184                      10183 
       ssh_private_keyfile         ssh_public_keyfile 
                     10153                      10152 
                   sslcert                sslcerttype 
                     10025                      10086 
              sslcert_blob                  sslengine 
                     40291                      10089 
         sslengine_default                     sslkey 
                        90                      10087 
                sslkeytype                sslkey_blob 
                     10088                      40292 
                sslversion            ssl_cipher_list 
                        32                      10083 
              ssl_ctx_data           ssl_ctx_function 
                     10109                      20108 
             ssl_ec_curves            ssl_enable_alpn 
                     10298                        226 
            ssl_enable_npn             ssl_falsestart 
                       225                        233 
               ssl_options        ssl_sessionid_cache 
                       216                        150 
            ssl_verifyhost             ssl_verifypeer 
                        81                         64 
          ssl_verifystatus                     stderr 
                       232                      10037 
            stream_depends           stream_depends_e 
                     10240                      10241 
             stream_weight   suppress_connect_headers 
                       239                        265 
              tcp_fastopen              tcp_keepalive 
                       244                        213 
              tcp_keepidle              tcp_keepintvl 
                       214                        215 
               tcp_nodelay              telnetoptions 
                       121                      10070 
              tftp_blksize            tftp_no_options 
                       178                        242 
             timecondition                    timeout 
                        33                         13 
                timeout_ms                  timevalue 
                       155                         34 
           timevalue_large              tls13_ciphers 
                     30270                      10276 
          tlsauth_password               tlsauth_type 
                     10205                      10206 
          tlsauth_username                trailerdata 
                     10204                      10284 
           trailerfunction               transfertext 
                     20283                         53 
         transfer_encoding           unix_socket_path 
                       207                      10231 
         unrestricted_auth         upkeep_interval_ms 
                       105                        281 
                    upload          upload_buffersize 
                        46                        280 
                       url                  useragent 
                     10002                      10018 
                  username                    userpwd 
                     10173                      10005 
                   use_ssl                    verbose 
                       119                         41 
             wildcardmatch                  writedata 
                       197                      10001 
             writefunction                 ws_options 
                     20011                        320 
              xferinfodata           xferinfofunction 
                     10057                      20219 
            xoauth2_bearer 
                     10220 
> 
> # List proxy options
> curl_options("proxy")
       haproxyprotocol      haproxy_client_ip        httpproxytunnel 
                   274                  10323                     61 
               noproxy              pre_proxy                  proxy 
                 10177                  10262                  10004 
             proxyauth            proxyheader          proxypassword 
                   111                  10228                  10176 
             proxyport              proxytype          proxyusername 
                    59                    101                  10175 
          proxyuserpwd           proxy_cainfo      proxy_cainfo_blob 
                 10006                  10246                  40310 
          proxy_capath          proxy_crlfile       proxy_issuercert 
                 10247                  10260                  10296 
 proxy_issuercert_blob        proxy_keypasswd  proxy_pinnedpublickey 
                 40297                  10258                  10263 
    proxy_service_name          proxy_sslcert      proxy_sslcerttype 
                 10235                  10254                  10255 
    proxy_sslcert_blob           proxy_sslkey       proxy_sslkeytype 
                 40293                  10256                  10257 
     proxy_sslkey_blob       proxy_sslversion  proxy_ssl_cipher_list 
                 40294                    250                  10259 
     proxy_ssl_options   proxy_ssl_verifyhost   proxy_ssl_verifypeer 
                   261                    249                    248 
   proxy_tls13_ciphers proxy_tlsauth_password     proxy_tlsauth_type 
                 10277                  10252                  10253 
proxy_tlsauth_username    proxy_transfer_mode 
                 10251                    166 
> 
> # Symbol table
> curl_symbols("proxy")
                               name introduced deprecated removed   value
157        CURL_VERSION_HTTPS_PROXY     7.52.0       <NA>    <NA> 2097152
221     CURLE_COULDNT_RESOLVE_PROXY        7.1       <NA>    <NA>       5
277                     CURLE_PROXY     7.73.0       <NA>    <NA>      97
457            CURLINFO_PROXY_ERROR     7.73.0       <NA>    <NA> 2097211
458 CURLINFO_PROXY_SSL_VERIFYRESULT     7.52.0       <NA>    <NA> 2097199
459        CURLINFO_PROXYAUTH_AVAIL     7.10.8       <NA>    <NA> 2097176
498             CURLINFO_USED_PROXY      8.7.0       <NA>    <NA> 2097218
640       CURLOPT_HAPROXY_CLIENT_IP      8.2.0       <NA>    <NA>   10323
641         CURLOPT_HAPROXYPROTOCOL     7.60.0       <NA>    <NA>     274
661         CURLOPT_HTTPPROXYTUNNEL        7.3       <NA>    <NA>      61
706                 CURLOPT_NOPROXY     7.19.4       <NA>    <NA>   10177
726               CURLOPT_PRE_PROXY     7.52.0       <NA>    <NA>   10262
735                   CURLOPT_PROXY        7.1       <NA>    <NA>   10004
736            CURLOPT_PROXY_CAINFO     7.52.0       <NA>    <NA>   10246
737       CURLOPT_PROXY_CAINFO_BLOB     7.77.0       <NA>    <NA>   40310
738            CURLOPT_PROXY_CAPATH     7.52.0       <NA>    <NA>   10247
739           CURLOPT_PROXY_CRLFILE     7.52.0       <NA>    <NA>   10260
740        CURLOPT_PROXY_ISSUERCERT     7.71.0       <NA>    <NA>   10296
741   CURLOPT_PROXY_ISSUERCERT_BLOB     7.71.0       <NA>    <NA>   40297
742         CURLOPT_PROXY_KEYPASSWD     7.52.0       <NA>    <NA>   10258
743   CURLOPT_PROXY_PINNEDPUBLICKEY     7.52.0       <NA>    <NA>   10263
744      CURLOPT_PROXY_SERVICE_NAME     7.43.0       <NA>    <NA>   10235
745   CURLOPT_PROXY_SSL_CIPHER_LIST     7.52.0       <NA>    <NA>   10259
746       CURLOPT_PROXY_SSL_OPTIONS     7.52.0       <NA>    <NA>     261
747    CURLOPT_PROXY_SSL_VERIFYHOST     7.52.0       <NA>    <NA>     249
748    CURLOPT_PROXY_SSL_VERIFYPEER     7.52.0       <NA>    <NA>     248
749           CURLOPT_PROXY_SSLCERT     7.52.0       <NA>    <NA>   10254
750      CURLOPT_PROXY_SSLCERT_BLOB     7.71.0       <NA>    <NA>   40293
751       CURLOPT_PROXY_SSLCERTTYPE     7.52.0       <NA>    <NA>   10255
752            CURLOPT_PROXY_SSLKEY     7.52.0       <NA>    <NA>   10256
753       CURLOPT_PROXY_SSLKEY_BLOB     7.71.0       <NA>    <NA>   40294
754        CURLOPT_PROXY_SSLKEYTYPE     7.52.0       <NA>    <NA>   10257
755        CURLOPT_PROXY_SSLVERSION     7.52.0       <NA>    <NA>     250
756     CURLOPT_PROXY_TLS13_CIPHERS     7.61.0       <NA>    <NA>   10277
757  CURLOPT_PROXY_TLSAUTH_PASSWORD     7.52.0       <NA>    <NA>   10252
758      CURLOPT_PROXY_TLSAUTH_TYPE     7.52.0       <NA>    <NA>   10253
759  CURLOPT_PROXY_TLSAUTH_USERNAME     7.52.0       <NA>    <NA>   10251
760     CURLOPT_PROXY_TRANSFER_MODE     7.18.0       <NA>    <NA>     166
761               CURLOPT_PROXYAUTH     7.10.7       <NA>    <NA>     111
762             CURLOPT_PROXYHEADER     7.37.0       <NA>    <NA>   10228
763           CURLOPT_PROXYPASSWORD     7.19.1       <NA>    <NA>   10176
764               CURLOPT_PROXYPORT        7.1       <NA>    <NA>      59
765               CURLOPT_PROXYTYPE       7.10       <NA>    <NA>     101
766           CURLOPT_PROXYUSERNAME     7.19.1       <NA>    <NA>   10175
767            CURLOPT_PROXYUSERPWD        7.1       <NA>    <NA>   10006
953                  CURLPROXY_HTTP       7.10       <NA>    <NA>       0
954              CURLPROXY_HTTP_1_0     7.19.4       <NA>    <NA>       1
955                 CURLPROXY_HTTPS     7.52.0       <NA>    <NA>       2
956                CURLPROXY_HTTPS2      8.1.0       <NA>    <NA>       3
957                CURLPROXY_SOCKS4       7.10       <NA>    <NA>       4
958               CURLPROXY_SOCKS4A     7.18.0       <NA>    <NA>       6
959                CURLPROXY_SOCKS5       7.10       <NA>    <NA>       5
960       CURLPROXY_SOCKS5_HOSTNAME     7.18.0       <NA>    <NA>       7
       type
157    <NA>
221    <NA>
277    <NA>
457    <NA>
458    <NA>
459    <NA>
498    <NA>
640  string
641 integer
661 integer
706  string
726  string
735  string
736  string
737 unknown
738  string
739  string
740  string
741 unknown
742  string
743  string
744  string
745  string
746 integer
747 integer
748 integer
749  string
750 unknown
751  string
752  string
753 unknown
754  string
755 integer
756  string
757  string
758  string
759  string
760 integer
761 integer
762  string
763  string
764 integer
765 integer
766  string
767  string
953    <NA>
954    <NA>
955    <NA>
956    <NA>
957    <NA>
958    <NA>
959    <NA>
960    <NA>
> # Curl/ssl version info
> curl_version()
$version
[1] "8.5.0"

$headers
[1] "8.5.0"

$ssl_version
[1] "OpenSSL/3.0.13"

$libz_version
[1] "1.3"

$libssh_version
[1] "libssh/0.10.6/openssl/zlib"

$libidn_version
[1] "2.3.7"

$host
[1] "x86_64-pc-linux-gnu"

$protocols
 [1] "dict"    "file"    "ftp"     "ftps"    "gopher"  "gophers" "http"   
 [8] "https"   "imap"    "imaps"   "ldap"    "ldaps"   "mqtt"    "pop3"   
[15] "pop3s"   "rtmp"    "rtmpe"   "rtmps"   "rtmpt"   "rtmpte"  "rtmpts" 
[22] "rtsp"    "scp"     "sftp"    "smb"     "smbs"    "smtp"    "smtps"  
[29] "telnet"  "tftp"   

$ipv6
[1] TRUE

$http2
[1] TRUE

$idn
[1] TRUE

$url_parser
[1] TRUE

> 
> 
> 
> cleanEx()
> nameEx("curl_parse_url")
> ### * curl_parse_url
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_parse_url
> ### Title: Normalizing URL parser
> ### Aliases: curl_parse_url
> 
> ### ** Examples
> 
> url <- "https://jerry:secret@google.com:888/foo/bar?test=123#bla"
> curl_parse_url(url)
$url
[1] "https://jerry:secret@google.com:888/foo/bar?test=123#bla"

$scheme
[1] "https"

$host
[1] "google.com"

$port
[1] "888"

$path
[1] "/foo/bar"

$query
[1] "test=123"

$fragment
[1] "bla"

$user
[1] "jerry"

$password
[1] "secret"

$params
 test 
"123" 

> 
> # Resolve relative links from a baseurl
> curl_parse_url("/somelink", baseurl = url)
$url
[1] "https://jerry:secret@google.com:888/somelink"

$scheme
[1] "https"

$host
[1] "google.com"

$port
[1] "888"

$path
[1] "/somelink"

$query
NULL

$fragment
NULL

$user
[1] "jerry"

$password
[1] "secret"

$params
character(0)

> 
> # Paths get normalized
> curl_parse_url("https://foobar.com/foo/bar/../baz/../yolo")$url
[1] "https://foobar.com/foo/yolo"
> 
> # Also normalizes URL-encoding (these URLs are equivalent):
> url1 <- "https://ja.wikipedia.org/wiki/\u5bff\u53f8"
> url2 <- "https://ja.wikipedia.org/wiki/%e5%af%bf%e5%8f%b8"
> curl_parse_url(url1)$path
[1] "/wiki/寿司"
> curl_parse_url(url2)$path
[1] "/wiki/寿司"
> curl_parse_url(url1, decode = FALSE)$path
[1] "/wiki/%e5%af%bf%e5%8f%b8"
> curl_parse_url(url1, decode = FALSE)$path
[1] "/wiki/%e5%af%bf%e5%8f%b8"
> 
> 
> 
> cleanEx()
> nameEx("curl_upload")
> ### * curl_upload
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: curl_upload
> ### Title: Upload a File
> ### Aliases: curl_upload
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Upload package to winbuilder:
> ##D curl_upload('mypkg_1.3.tar.gz', 'ftp://win-builder.r-project.org/R-devel/')
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("file_writer")
> ### * file_writer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: file_writer
> ### Title: Lazy File Writer
> ### Aliases: file_writer
> 
> ### ** Examples
> 
> # Doesn't open yet
> tmp <- tempfile()
> writer <- file_writer(tmp)
> 
> # Now it opens
> writer(charToRaw("Hello!\n"))
[1] 7
> writer(charToRaw("How are you?\n"))
[1] 13
> 
> # Close it!
> writer(charToRaw("All done!\n"), close = TRUE)
[1] 10
> 
> # Check it worked
> readLines(tmp)
[1] "Hello!"       "How are you?" "All done!"   
> 
> 
> 
> cleanEx()
> nameEx("handle")
> ### * handle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: handle
> ### Title: Create and configure a curl handle
> ### Aliases: handle new_handle handle_setopt handle_setheaders
> ###   handle_getheaders handle_setform handle_reset handle_data
> 
> ### ** Examples
> 
> h <- new_handle()
> handle_setopt(h, customrequest = "PUT")
> handle_setform(h, a = "1", b = "2")
> r <- curl_fetch_memory("https://hb.cran.dev/put", h)
> cat(rawToChar(r$content))
{
  "args": {}, 
  "data": "", 
  "files": {}, 
  "form": {
    "a": "1", 
    "b": "2"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, br", 
    "Cdn-Loop": "cloudflare; loops=1", 
    "Cf-Connecting-Ip": "20.43.247.163", 
    "Cf-Ipcountry": "US", 
    "Cf-Ray": "91b0776c9e5bcf13-EWR", 
    "Cf-Visitor": "{\"scheme\":\"https\"}", 
    "Connection": "close", 
    "Content-Length": "246", 
    "Content-Type": "multipart/form-data; boundary=------------------------ozthXbOaNWbLnbiXoCLZ0f", 
    "Host": "httpbin:8080", 
    "User-Agent": "R (4.4.2 x86_64-pc-linux-gnu x86_64 linux-gnu)"
  }, 
  "json": null, 
  "origin": "20.43.247.163", 
  "url": "https://httpbin:8080/put"
}
> 
> # Or use the list form
> h <- new_handle()
> handle_setopt(h, .list = list(customrequest = "PUT"))
> handle_setform(h, .list = list(a = "1", b = "2"))
> r <- curl_fetch_memory("https://hb.cran.dev/put", h)
> cat(rawToChar(r$content))
{
  "args": {}, 
  "data": "", 
  "files": {}, 
  "form": {
    "a": "1", 
    "b": "2"
  }, 
  "headers": {
    "Accept": "*/*", 
    "Accept-Encoding": "gzip, br", 
    "Cdn-Loop": "cloudflare; loops=1", 
    "Cf-Connecting-Ip": "20.43.247.163", 
    "Cf-Ipcountry": "US", 
    "Cf-Ray": "91b0776d2f22cf13-EWR", 
    "Cf-Visitor": "{\"scheme\":\"https\"}", 
    "Connection": "close", 
    "Content-Length": "246", 
    "Content-Type": "multipart/form-data; boundary=------------------------dcIyN8QJ0Kw9is9WW0wW5D", 
    "Host": "httpbin:8080", 
    "User-Agent": "R (4.4.2 x86_64-pc-linux-gnu x86_64 linux-gnu)"
  }, 
  "json": null, 
  "origin": "20.43.247.163", 
  "url": "https://httpbin:8080/put"
}
> 
> 
> 
> cleanEx()
> nameEx("handle_cookies")
> ### * handle_cookies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: handle_cookies
> ### Title: Extract cookies from a handle
> ### Aliases: handle_cookies
> 
> ### ** Examples
> 
> h <- new_handle()
> handle_cookies(h)
[1] domain     flag       path       secure     expiration name       value     
<0 rows> (or 0-length row.names)
> 
> # Server sets cookies
> req <- curl_fetch_memory("https://hb.cran.dev/cookies/set?foo=123&bar=ftw", handle = h)
> handle_cookies(h)
       domain  flag path secure expiration name value
1 hb.cran.dev FALSE    /  FALSE        Inf  foo   123
2 hb.cran.dev FALSE    /  FALSE        Inf  bar   ftw
> 
> # Server deletes cookies
> req <- curl_fetch_memory("https://hb.cran.dev/cookies/delete?foo", handle = h)
> handle_cookies(h)
       domain  flag path secure expiration name value
1 hb.cran.dev FALSE    /  FALSE        Inf  bar   ftw
> 
> # Cookies will survive a reset!
> handle_reset(h)
> handle_cookies(h)
       domain  flag path secure expiration name value
1 hb.cran.dev FALSE    /  FALSE        Inf  bar   ftw
> 
> 
> 
> cleanEx()
> nameEx("multi")
> ### * multi
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multi
> ### Title: Async Concurrent Requests
> ### Aliases: multi multi_add multi_run multi_set multi_list multi_cancel
> ###   new_pool multi_fdset
> 
> ### ** Examples
> 
> results <- list()
> success <- function(x){
+   results <<- append(results, list(x))
+ }
> failure <- function(str){
+   cat(paste("Failed request:", str), file = stderr())
+ }
> # This handle will take longest (3sec)
> h1 <- new_handle(url = "https://hb.cran.dev/delay/3")
> multi_add(h1, done = success, fail = failure)
<curl handle> (https://hb.cran.dev/delay/3)
> 
> # This handle writes data to a file
> con <- file("output.txt")
> h2 <- new_handle(url = "https://hb.cran.dev/post", postfields = "bla bla")
> multi_add(h2, done = success, fail = failure, data = con)
<curl handle> (https://hb.cran.dev/post)
> 
> # This handle raises an error
> h3 <- new_handle(url = "https://urldoesnotexist.xyz")
> multi_add(h3, done = success, fail = failure)
<curl handle> (https://urldoesnotexist.xyz)
> 
> # Actually perform the requests
> multi_run(timeout = 2)
Failed request: Couldn't resolve host name [urldoesnotexist.xyz]: Could not resolve host: urldoesnotexist.xyz$success
[1] 1

$error
[1] 1

$pending
[1] 1

> multi_run()
$success
[1] 1

$error
[1] 0

$pending
[1] 0

> 
> # Check the file
> readLines("output.txt")
 [1] "{"                                                                     
 [2] "  \"args\": {}, "                                                      
 [3] "  \"data\": \"\", "                                                    
 [4] "  \"files\": {}, "                                                     
 [5] "  \"form\": {"                                                         
 [6] "    \"bla bla\": \"\""                                                 
 [7] "  }, "                                                                 
 [8] "  \"headers\": {"                                                      
 [9] "    \"Accept\": \"*/*\", "                                             
[10] "    \"Accept-Encoding\": \"gzip, br\", "                               
[11] "    \"Cdn-Loop\": \"cloudflare; loops=1\", "                           
[12] "    \"Cf-Connecting-Ip\": \"20.43.247.163\", "                         
[13] "    \"Cf-Ipcountry\": \"US\", "                                        
[14] "    \"Cf-Ray\": \"91b077700b16d015-EWR\", "                            
[15] "    \"Cf-Visitor\": \"{\\\"scheme\\\":\\\"https\\\"}\", "              
[16] "    \"Connection\": \"close\", "                                       
[17] "    \"Content-Length\": \"7\", "                                       
[18] "    \"Content-Type\": \"application/x-www-form-urlencoded\", "         
[19] "    \"Host\": \"httpbin:8080\", "                                      
[20] "    \"User-Agent\": \"R (4.4.2 x86_64-pc-linux-gnu x86_64 linux-gnu)\""
[21] "  }, "                                                                 
[22] "  \"json\": null, "                                                    
[23] "  \"origin\": \"20.43.247.163\", "                                     
[24] "  \"url\": \"https://httpbin:8080/post\""                              
[25] "}"                                                                     
> unlink("output.txt")
> 
> 
> 
> cleanEx()
> nameEx("multi_download")
> ### * multi_download
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: multi_download
> ### Title: Advanced download interface
> ### Aliases: multi_download
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Example: some large files
> ##D urls <- sprintf(
> ##D   "https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-%02d.parquet", 1:12)
> ##D res <- multi_download(urls, resume = TRUE) # You can interrupt (ESC) and resume
> ##D 
> ##D # Example: revdep checker
> ##D # Download all reverse dependencies for the 'curl' package from CRAN:
> ##D pkg <- 'curl'
> ##D mirror <- 'https://cloud.r-project.org'
> ##D db <- available.packages(repos = mirror)
> ##D packages <- c(pkg, tools::package_dependencies(pkg, db = db, reverse = TRUE)[[pkg]])
> ##D versions <- db[packages,'Version']
> ##D urls <- sprintf("%s/src/contrib/%s_%s.tar.gz", mirror, packages,  versions)
> ##D res <- multi_download(urls)
> ##D all.equal(unname(tools::md5sum(res$destfile)), unname(db[packages, 'MD5sum']))
> ##D # And then you could use e.g.: tools:::check_packages_in_dir()
> ##D 
> ##D # Example: URL checker
> ##D pkg_url_checker <- function(dir){
> ##D   db <- tools:::url_db_from_package_sources(dir)
> ##D   res <- multi_download(db$URL, rep('/dev/null', nrow(db)), nobody=TRUE)
> ##D   db$OK <- res$status_code == 200
> ##D   db
> ##D }
> ##D 
> ##D # Use a local package source directory
> ##D pkg_url_checker(".")
> ##D 
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("nslookup")
> ### * nslookup
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nslookup
> ### Title: Lookup a hostname
> ### Aliases: nslookup has_internet
> 
> ### ** Examples
> 
> # Should always work if we are online
> nslookup("www.r-project.org")
[1] "137.208.57.37"
> 
> # If your OS supports IPv6
> nslookup("ipv6.test-ipv6.com", ipv4_only = FALSE, error = FALSE)
[1] "2a01:7e03::f03c:94ff:fef0:e823"
> 
> 
> 
> cleanEx()
> nameEx("parse_date")
> ### * parse_date
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_date
> ### Title: Parse date/time
> ### Aliases: parse_date
> 
> ### ** Examples
> 
> # Parse dates in many formats
> parse_date("Sunday, 06-Nov-94 08:49:37 GMT")
[1] "1994-11-06 08:49:37 UTC"
> parse_date("06 Nov 1994 08:49:37")
[1] "1994-11-06 08:49:37 UTC"
> parse_date("20040911 +0200")
[1] "2004-09-10 22:00:00 UTC"
> 
> 
> 
> cleanEx()
> nameEx("parse_headers")
> ### * parse_headers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_headers
> ### Title: Parse response headers
> ### Aliases: parse_headers parse_headers_list
> 
> ### ** Examples
> 
> req <- curl_fetch_memory("https://hb.cran.dev/redirect/3")
> parse_headers(req$headers)
 [1] "HTTP/2 200 "                                                                                                                                                                                                                                                                     
 [2] "date: Tue, 04 Mar 2025 09:50:01 GMT"                                                                                                                                                                                                                                             
 [3] "content-type: application/json"                                                                                                                                                                                                                                                  
 [4] "access-control-allow-origin: *"                                                                                                                                                                                                                                                  
 [5] "access-control-allow-credentials: true"                                                                                                                                                                                                                                          
 [6] "x-powered-by: Flask"                                                                                                                                                                                                                                                             
 [7] "x-processed-time: 0"                                                                                                                                                                                                                                                             
 [8] "cf-cache-status: DYNAMIC"                                                                                                                                                                                                                                                        
 [9] "report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=6VU%2FoeDtGxyLstKWaz5F3epfaYM32zE9DYFYf3w20238dxtD6Dh%2F6L7%2FBBIQJ2NkhwF0iaafOiX%2FaFW5pYJtBKDvJSiwUNxKfYposNslfWifthVnRjSr1sLpo777Sw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
[10] "nel: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"                                                                                                                                                                                                       
[11] "server: cloudflare"                                                                                                                                                                                                                                                              
[12] "cf-ray: 91b0778de8c0cf13-SJC"                                                                                                                                                                                                                                                    
[13] "content-encoding: zstd"                                                                                                                                                                                                                                                          
[14] "alt-svc: h3=\":443\"; ma=86400"                                                                                                                                                                                                                                                  
[15] "server-timing: cfL4;desc=\"?proto=TCP&rtt=1463&min_rtt=1273&rtt_var=107&sent=42&recv=28&lost=0&retrans=0&sent_bytes=9930&recv_bytes=1992&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5430&x=0\""                                                       
> parse_headers(req$headers, multiple = TRUE)
[[1]]
 [1] "HTTP/2 302 "                                                                                                                                                                                                                                                                     
 [2] "date: Tue, 04 Mar 2025 09:50:01 GMT"                                                                                                                                                                                                                                             
 [3] "content-type: text/html; charset=utf-8"                                                                                                                                                                                                                                          
 [4] "cf-ray: 91b0778c2e78cf13-SJC"                                                                                                                                                                                                                                                    
 [5] "server: cloudflare"                                                                                                                                                                                                                                                              
 [6] "location: /relative-redirect/2"                                                                                                                                                                                                                                                  
 [7] "access-control-allow-origin: *"                                                                                                                                                                                                                                                  
 [8] "access-control-allow-credentials: true"                                                                                                                                                                                                                                          
 [9] "x-powered-by: Flask"                                                                                                                                                                                                                                                             
[10] "x-processed-time: 0"                                                                                                                                                                                                                                                             
[11] "cf-cache-status: DYNAMIC"                                                                                                                                                                                                                                                        
[12] "report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=%2FbuYHe3WHiuYx0laEq8fEprxm6ESaufuzCI%2FXpY66WqdSjk2MhH8O6nnYnYE2cqljK0Orn%2B2oR9PnegxzhAxzoVBGXxj65bm0L%2Fp3ssCLeVk5o74KMNaM5fjD9ZdeA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
[13] "nel: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"                                                                                                                                                                                                       
[14] "alt-svc: h3=\":443\"; ma=86400"                                                                                                                                                                                                                                                  
[15] "server-timing: cfL4;desc=\"?proto=TCP&rtt=1418&min_rtt=1273&rtt_var=107&sent=32&recv=22&lost=0&retrans=0&sent_bytes=8047&recv_bytes=1844&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5166&x=0\""                                                       

[[2]]
 [1] "HTTP/2 302 "                                                                                                                                                                                                                                                                         
 [2] "date: Tue, 04 Mar 2025 09:50:01 GMT"                                                                                                                                                                                                                                                 
 [3] "content-type: text/html; charset=utf-8"                                                                                                                                                                                                                                              
 [4] "location: /relative-redirect/1"                                                                                                                                                                                                                                                      
 [5] "access-control-allow-origin: *"                                                                                                                                                                                                                                                      
 [6] "access-control-allow-credentials: true"                                                                                                                                                                                                                                              
 [7] "x-powered-by: Flask"                                                                                                                                                                                                                                                                 
 [8] "x-processed-time: 0"                                                                                                                                                                                                                                                                 
 [9] "cf-cache-status: DYNAMIC"                                                                                                                                                                                                                                                            
[10] "report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=hPnJCZcr7OO7lZ7BD8HWKErCt14IifPW9nLyf82DgcOVCHWkwdNan8MN%2B%2BR00%2B%2BhJCJ5Ugz18F2Yvj4E4DTHMHjhQEyCgRXTIZb4P62hDd%2BlTw%2FCdPuqWnImW10Z4g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
[11] "nel: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"                                                                                                                                                                                                           
[12] "server: cloudflare"                                                                                                                                                                                                                                                                  
[13] "cf-ray: 91b0778ccf46cf13-SJC"                                                                                                                                                                                                                                                        
[14] "alt-svc: h3=\":443\"; ma=86400"                                                                                                                                                                                                                                                      
[15] "server-timing: cfL4;desc=\"?proto=TCP&rtt=1438&min_rtt=1273&rtt_var=120&sent=36&recv=24&lost=0&retrans=0&sent_bytes=8970&recv_bytes=1897&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5264&x=0\""                                                           

[[3]]
 [1] "HTTP/2 302 "                                                                                                                                                                                                                                                                 
 [2] "date: Tue, 04 Mar 2025 09:50:01 GMT"                                                                                                                                                                                                                                         
 [3] "content-type: text/html; charset=utf-8"                                                                                                                                                                                                                                      
 [4] "location: /get"                                                                                                                                                                                                                                                              
 [5] "access-control-allow-origin: *"                                                                                                                                                                                                                                              
 [6] "access-control-allow-credentials: true"                                                                                                                                                                                                                                      
 [7] "x-powered-by: Flask"                                                                                                                                                                                                                                                         
 [8] "x-processed-time: 0"                                                                                                                                                                                                                                                         
 [9] "cf-cache-status: DYNAMIC"                                                                                                                                                                                                                                                    
[10] "report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=xdJsMUdPCrVRZr2tpmKlQLYvtw1YNckw2GU3Y3C1gWe2pNy4Jx48GolpcZ22RhPIX41Uit1oNv8wIl%2FfJim8HYG2eEvikR6UPMU9Fjt6wu4BhhQCQXbJwu%2FzlMjYOQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
[11] "nel: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"                                                                                                                                                                                                   
[12] "server: cloudflare"                                                                                                                                                                                                                                                          
[13] "cf-ray: 91b0778d6813cf13-SJC"                                                                                                                                                                                                                                                
[14] "alt-svc: h3=\":443\"; ma=86400"                                                                                                                                                                                                                                              
[15] "server-timing: cfL4;desc=\"?proto=TCP&rtt=1458&min_rtt=1273&rtt_var=129&sent=39&recv=26&lost=0&retrans=0&sent_bytes=9452&recv_bytes=1950&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5349&x=0\""                                                   

[[4]]
 [1] "HTTP/2 200 "                                                                                                                                                                                                                                                                     
 [2] "date: Tue, 04 Mar 2025 09:50:01 GMT"                                                                                                                                                                                                                                             
 [3] "content-type: application/json"                                                                                                                                                                                                                                                  
 [4] "access-control-allow-origin: *"                                                                                                                                                                                                                                                  
 [5] "access-control-allow-credentials: true"                                                                                                                                                                                                                                          
 [6] "x-powered-by: Flask"                                                                                                                                                                                                                                                             
 [7] "x-processed-time: 0"                                                                                                                                                                                                                                                             
 [8] "cf-cache-status: DYNAMIC"                                                                                                                                                                                                                                                        
 [9] "report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=6VU%2FoeDtGxyLstKWaz5F3epfaYM32zE9DYFYf3w20238dxtD6Dh%2F6L7%2FBBIQJ2NkhwF0iaafOiX%2FaFW5pYJtBKDvJSiwUNxKfYposNslfWifthVnRjSr1sLpo777Sw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
[10] "nel: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"                                                                                                                                                                                                       
[11] "server: cloudflare"                                                                                                                                                                                                                                                              
[12] "cf-ray: 91b0778de8c0cf13-SJC"                                                                                                                                                                                                                                                    
[13] "content-encoding: zstd"                                                                                                                                                                                                                                                          
[14] "alt-svc: h3=\":443\"; ma=86400"                                                                                                                                                                                                                                                  
[15] "server-timing: cfL4;desc=\"?proto=TCP&rtt=1463&min_rtt=1273&rtt_var=107&sent=42&recv=28&lost=0&retrans=0&sent_bytes=9930&recv_bytes=1992&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5430&x=0\""                                                       

> 
> # Parse into named list
> parse_headers_list(req$headers)
$date
[1] "Tue, 04 Mar 2025 09:50:01 GMT"

$`content-type`
[1] "application/json"

$`access-control-allow-origin`
[1] "*"

$`access-control-allow-credentials`
[1] "true"

$`x-powered-by`
[1] "Flask"

$`x-processed-time`
[1] "0"

$`cf-cache-status`
[1] "DYNAMIC"

$`report-to`
[1] "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=6VU%2FoeDtGxyLstKWaz5F3epfaYM32zE9DYFYf3w20238dxtD6Dh%2F6L7%2FBBIQJ2NkhwF0iaafOiX%2FaFW5pYJtBKDvJSiwUNxKfYposNslfWifthVnRjSr1sLpo777Sw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"

$nel
[1] "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"

$server
[1] "cloudflare"

$`cf-ray`
[1] "91b0778de8c0cf13-SJC"

$`content-encoding`
[1] "zstd"

$`alt-svc`
[1] "h3=\":443\"; ma=86400"

$`server-timing`
[1] "cfL4;desc=\"?proto=TCP&rtt=1463&min_rtt=1273&rtt_var=107&sent=42&recv=28&lost=0&retrans=0&sent_bytes=9930&recv_bytes=1992&delivery_rate=3108853&cwnd=255&unsent_bytes=0&cid=07413d477c79a231&ts=5430&x=0\""

> 
> 
> 
> cleanEx()
> nameEx("send_mail")
> ### * send_mail
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: send_mail
> ### Title: Send email
> ### Aliases: send_mail
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Set sender and recipients (email addresses only)
> ##D recipients <- readline("Enter your email address to receive test: ")
> ##D sender <- 'test@noreply.com'
> ##D 
> ##D # Full email message in RFC2822 format
> ##D message <- 'From: "R (curl package)" <test@noreply.com>
> ##D To: "Roger Recipient" <roger@noreply.com>
> ##D Subject: Hello R user!
> ##D 
> ##D Dear R user,
> ##D 
> ##D I am sending this email using curl.'
> ##D 
> ##D # Send the email
> ##D send_mail(sender, recipients, message, smtp_server = 'smtps://smtp.gmail.com',
> ##D   username = 'curlpackage', password  = 'qyyjddvphjsrbnlm')
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.47 0.484 5.7 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
