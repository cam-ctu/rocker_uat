
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gridExtra"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gridExtra')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("arrangeGrob")
> ### * arrangeGrob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: arrangeGrob
> ### Title: Arrange multiple grobs on a page
> ### Aliases: arrangeGrob grid.arrange marrangeGrob grid.arrange
> ###   marrangeGrob
> 
> ### ** Examples
> 
> library(grid)
> grid.arrange(rectGrob(), rectGrob())
> ## Not run: 
> ##D  
> ##D library(ggplot2)
> ##D pl <- lapply(1:11, function(.x) qplot(1:10, rnorm(10), main=paste("plot", .x)))
> ##D ml <- marrangeGrob(pl, nrow=2, ncol=2)
> ##D ## non-interactive use, multipage pdf
> ##D ggsave("multipage.pdf", ml)
> ##D ## interactive use; open new devices
> ##D ml
> ## End(Not run)
> 
> 
> 
> cleanEx()

detaching ‘package:grid’

> nameEx("ngonGrob")
> ### * ngonGrob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ngonGrob
> ### Title: Regular polygon grob
> ### Aliases: ngonGrob grid.ngon ellipseGrob grid.ellipse grid.ngon
> ###   ellipseGrob grid.ellipse polygon_regular
> 
> ### ** Examples
> 
> library(grid)
> N <- 5
> xy <- polygon_regular(N)*2
> 
> # draw multiple polygons
> g <- ngonGrob(unit(xy[,1],"cm") + unit(0.5,"npc"), 
+               unit(xy[,2],"cm") + unit(0.5,"npc"),
+               n = seq_len(N) + 2, gp = gpar(fill=1:N))
> 
> grid.newpage()
> grid.draw(g)
> 
> # rotated and stretched
> g2 <- ngonGrob(unit(xy[,1],"cm") + unit(0.5,"npc"), 
+               unit(xy[,2],"cm") + unit(0.5,"npc"),
+               n = seq_len(N) + 2, ar = seq_len(N),
+               phase = 0, angle = pi/(seq_len(N) + 2),
+               size = 1:N + 5)
> 
> grid.newpage()
> grid.draw(g2)
> 
> # ellipse
> g3 <- ellipseGrob(unit(xy[,1],"cm") + unit(0.5,"npc"), 
+                   unit(xy[,2],"cm") + unit(0.5,"npc"),
+                   angle = -2*seq(0,N-1)*pi/5 + pi/2,
+                   size = 5, ar = 1/3)
> 
> grid.newpage()
> grid.draw(g3)
> 
> 
> 
> cleanEx()

detaching ‘package:grid’

> nameEx("tableGrob")
> ### * tableGrob
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tableGrob
> ### Title: Graphical display of a textual table
> ### Aliases: tableGrob grid.table ttheme_default ttheme_minimal grid.table
> ###   ttheme_default ttheme_minimal
> 
> ### ** Examples
> 
> library(grid)
> d <- head(iris, 3)
> g <- tableGrob(d)
> grid.newpage()
> grid.draw(g)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:grid’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.264 0.017 0.28 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
