
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "sparkline"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('sparkline')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("spk_add_deps")
> ### * spk_add_deps
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spk_add_deps
> ### Title: Add Sparkline Dependencies to Tag or 'htmlwidget'
> ### Aliases: spk_add_deps
> 
> ### ** Examples
> 
> # use spk_add_deps with other htmlwidgets
> 
> library(sparkline)
> library(formattable)
> 
> fw <- as.htmlwidget(
+   formattable(
+     data.frame(
+       id = c("a", "b"),
+       sparkline = c(
+         spk_chr(runif(10,0,10), type="bar"),
+         spk_chr(runif(10,0,5), type="bar")
+       ),
+       stringsAsFactors = FALSE
+     )
+   )
+ )
> 
> spk_add_deps(fw)
> 
> # use spk_add_deps with htmltools/shiny tags
> 
> library(sparkline)
> library(htmltools)
> 
> div <- tags$div(
+   spk_chr(1:10, type="bar")
+ )
> 
> spk_add_deps(div)
<div><span id="htmlwidget-29a56e939b13f92b7856" class="sparkline html-widget"></span>
<script type="application/json" data-for="htmlwidget-29a56e939b13f92b7856">{"x":{"values":[1,2,3,4,5,6,7,8,9,10],"options":{"type":"bar","height":20,"width":60},"width":60,"height":20},"evals":[],"jsHooks":[]}</script></div>
> 
> 
> 
> cleanEx()

detaching ‘package:htmltools’, ‘package:formattable’

> nameEx("spk_chr")
> ### * spk_chr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spk_chr
> ### Title: Character Version of Sparklines
> ### Aliases: spk_chr
> 
> ### ** Examples
> 
> ## Not run: 
> ##D   #spk_chr works well with dplyr summarise
> ##D   
> ##D   library(dplyr)
> ##D   library(sparkline)
> ##D   library(formattable)
> ##D   
> ##D   mtcars %>%
> ##D     group_by(cyl) %>%
> ##D     summarise(
> ##D       hp = spk_chr(
> ##D         hp, type="box",
> ##D         chartRangeMin=0, chartRangeMax=max(mtcars$hp)
> ##D       ),
> ##D       mpg = spk_chr(
> ##D         mpg, type="box",
> ##D         chartRangeMin=0, chartRangeMax=max(mtcars$mpg)
> ##D       )
> ##D     ) %>%
> ##D     formattable() %>%
> ##D     formattable::as.htmlwidget() %>%
> ##D     spk_add_deps()
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("spk_composite")
> ### * spk_composite
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spk_composite
> ### Title: Add a Composite to an Existing Sparkline
> ### Aliases: spk_composite
> 
> ### ** Examples
> 
> library(sparkline)
> 
> sl1 <- sparkline(
+   c(5,4,5,-2,0,3),
+   type='bar',
+   barColor="#aaf",
+   chartRangeMin=-5,
+   chartRangeMax=10,
+   # set an id that will make it easier to refer
+   #  in the next sparkline
+   elementId="sparkline-for-composite"
+ )
> 
> sl2 <- sparkline(
+   c(4,1,5,7,9,9,8,7,6,6,4,7,8,4,3,2,2,5,6,7),
+   type="line",
+   fillColor = FALSE,
+   lineColor ='red',
+   chartRangeMin = -5,
+   chartRangeMax = 10
+ )
> 
> # add sparkline as a composite
> spk_composite(sl1, sl2)
> 
> # add values and options as a composite
> spk_composite(
+   sl1,
+   values=c(4,1,5,7,9,9,8,7,6,6,4,7,8,4,3,2,2,5,6,7),
+   options = list(
+     type="line",
+     fillColor = FALSE,
+     lineColor ='red',
+     chartRangeMin = -5,
+     chartRangeMax = 10
+   )
+ )
> 
> # add combination of sparkline and options as a composite
> spk_composite(
+   sl1,
+   sl2,
+   options = list(
+     type="box"
+   )
+ )
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.35 0.03 0.381 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
