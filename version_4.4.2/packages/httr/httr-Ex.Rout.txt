
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "httr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('httr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("BROWSE")
> ### * BROWSE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BROWSE
> ### Title: Open specified url in browser.
> ### Aliases: BROWSE
> 
> ### ** Examples
> 
> BROWSE("http://google.com")
Please point your browser to the following url: 
http://google.com
> BROWSE("http://had.co.nz")
Please point your browser to the following url: 
http://had.co.nz
> 
> 
> 
> cleanEx()
> nameEx("DELETE")
> ### * DELETE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DELETE
> ### Title: Send a DELETE request.
> ### Aliases: DELETE
> 
> ### ** Examples
> 
> ## Not run: 
> ##D DELETE("http://httpbin.org/delete")
> ##D POST("http://httpbin.org/delete")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("GET")
> ### * GET
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GET
> ### Title: GET a url.
> ### Aliases: GET
> 
> ### ** Examples
> 
> GET("http://google.com/")
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> ## Not run: 
> ##D GET("http://google.com/", path = "search")
> ##D GET("http://google.com/", path = "search", query = list(q = "ham"))
> ## End(Not run)
> 
> # See what GET is doing with httpbin.org
> ## Not run: 
> ##D url <- "http://httpbin.org/get"
> ##D GET(url)
> ##D GET(url, add_headers(a = 1, b = 2))
> ##D GET(url, set_cookies(a = 1, b = 2))
> ##D GET(url, add_headers(a = 1, b = 2), set_cookies(a = 1, b = 2))
> ##D GET(url, authenticate("username", "password"))
> ##D GET(url, verbose())
> ## End(Not run)
> 
> # You might want to manually specify the handle so you can have multiple
> # independent logins to the same website.
> ## Not run: 
> ##D google <- handle("http://google.com")
> ##D GET(handle = google, path = "/")
> ##D GET(handle = google, path = "search")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("HEAD")
> ### * HEAD
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HEAD
> ### Title: Get url HEADers.
> ### Aliases: HEAD
> 
> ### ** Examples
> 
> HEAD("http://google.com")
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> headers(HEAD("http://google.com"))
$`content-type`
[1] "text/html; charset=ISO-8859-1"

$`content-security-policy-report-only`
[1] "object-src 'none';base-uri 'self';script-src 'nonce-moX4YvaClONtTUHw3T_cpw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp"

$date
[1] "Thu, 19 Dec 2024 09:32:03 GMT"

$server
[1] "gws"

$`x-xss-protection`
[1] "0"

$`x-frame-options`
[1] "SAMEORIGIN"

$`transfer-encoding`
[1] "chunked"

$expires
[1] "Thu, 19 Dec 2024 09:32:03 GMT"

$`cache-control`
[1] "private"

$`set-cookie`
[1] "AEC=AZ6Zc-XYnOvP595AgGmzRM9HXoCJM_tdCdHKaWmB8vQW1PG93o-dSRTeVM4; expires=Tue, 17-Jun-2025 09:32:03 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax"

attr(,"class")
[1] "insensitive" "list"       
> 
> 
> 
> cleanEx()
> nameEx("POST")
> ### * POST
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: POST
> ### Title: POST file to a server.
> ### Aliases: POST
> 
> ### ** Examples
> 
> ## Not run: 
> ##D b2 <- "http://httpbin.org/post"
> ##D POST(b2, body = "A simple text string")
> ##D POST(b2, body = list(x = "A simple text string"))
> ##D POST(b2, body = list(y = upload_file(system.file("CITATION"))))
> ##D POST(b2, body = list(x = "A simple text string"), encode = "json")
> ##D 
> ##D # body can also be provided as a json string directly to deal
> ##D # with specific case, like an empty element in the json string.
> ##D # passing as string directly
> ##D POST(b2, body = '{"a":1,"b":{}}', encode = "raw")
> ##D # or building the json string before
> ##D json_body <- jsonlite::toJSON(list(a = 1, b = NULL), auto_unbox = TRUE)
> ##D POST(b2, body = json_body, encode = "raw")
> ##D 
> ##D # Various types of empty body:
> ##D POST(b2, body = NULL, verbose())
> ##D POST(b2, body = FALSE, verbose())
> ##D POST(b2, body = "", verbose())
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("PUT")
> ### * PUT
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: PUT
> ### Title: Send PUT request to server.
> ### Aliases: PUT
> 
> ### ** Examples
> 
> ## Not run: 
> ##D POST("http://httpbin.org/put")
> ##D PUT("http://httpbin.org/put")
> ##D 
> ##D b2 <- "http://httpbin.org/put"
> ##D PUT(b2, body = "A simple text string")
> ##D PUT(b2, body = list(x = "A simple text string"))
> ##D PUT(b2, body = list(y = upload_file(system.file("CITATION"))))
> ##D PUT(b2, body = list(x = "A simple text string"), encode = "json")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("RETRY")
> ### * RETRY
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RETRY
> ### Title: Retry a request until it succeeds.
> ### Aliases: RETRY
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Succeeds straight away
> ##D RETRY("GET", "http://httpbin.org/status/200")
> ##D # Never succeeds
> ##D RETRY("GET", "http://httpbin.org/status/500")
> ##D # Invalid hostname generates curl error condition and is retried but eventually
> ##D # raises an error condition.
> ##D RETRY("GET", "http://invalidhostname/")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("VERB")
> ### * VERB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: VERB
> ### Title: VERB a url.
> ### Aliases: VERB
> 
> ### ** Examples
> 
> r <- VERB(
+   "PROPFIND", "http://svn.r-project.org/R/tags/",
+   add_headers(depth = 1), verbose()
+ )
-> PROPFIND /R/tags/ HTTP/1.1
-> Host: svn.r-project.org
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> depth: 1
-> Content-Length: 0
-> 
<- HTTP/1.1 207 Multi-Status
<- Date: Thu, 19 Dec 2024 09:32:04 GMT
<- Server: Apache/2.4.61 (Debian)
<- Upgrade: h2,h2c
<- Connection: Upgrade
<- Transfer-Encoding: chunked
<- Content-Type: text/xml; charset="utf-8"
<- 
> stop_for_status(r)
> content(r)
{xml_document}
<multistatus xmlns:D="DAV:">
 [1] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [2] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [3] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [4] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [5] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
 [6] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [7] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [8] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [9] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[10] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[11] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
[12] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[13] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[14] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
[15] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[16] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[17] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[18] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[19] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[20] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
...
> 
> ## Not run: 
> ##D VERB("POST", url = "http://httpbin.org/post")
> ##D VERB("POST", url = "http://httpbin.org/post", body = "foobar")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("add_headers")
> ### * add_headers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_headers
> ### Title: Add additional headers to a request.
> ### Aliases: add_headers
> 
> ### ** Examples
> 
> add_headers(a = 1, b = 2)
<request>
Headers:
* a: 1
* b: 2
> add_headers(.headers = c(a = "1", b = "2"))
<request>
Headers:
* a: 1
* b: 2
> 
> ## Not run: 
> ##D GET("http://httpbin.org/headers")
> ##D 
> ##D # Add arbitrary headers
> ##D GET(
> ##D   "http://httpbin.org/headers",
> ##D   add_headers(version = version$version.string)
> ##D )
> ##D 
> ##D # Override default headers with empty strings
> ##D GET("http://httpbin.org/headers", add_headers(Accept = ""))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("authenticate")
> ### * authenticate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: authenticate
> ### Title: Use http authentication.
> ### Aliases: authenticate
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/basic-auth/user/passwd")
> ##D GET(
> ##D   "http://httpbin.org/basic-auth/user/passwd",
> ##D   authenticate("user", "passwd")
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("cache_info")
> ### * cache_info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cache_info
> ### Title: Compute caching information for a response.
> ### Aliases: cache_info rerequest
> 
> ### ** Examples
> 
> # Never cached, always causes redownload
> r1 <- GET("https://www.google.com")
> cache_info(r1)
<cache_info>  https://www.google.com/
  Cacheable:     TRUE
  Expires:       Thu, 19 Dec 2024 09:32:04 GMT <expired>
  Last-Modified: 
  Etag:          
> r1$date
[1] "2024-12-19 09:32:04 GMT"
> rerequest(r1)$date
[1] "2024-12-19 09:32:05 GMT"
> 
> # Expires in a year
> r2 <- GET("https://www.google.com/images/srpr/logo11w.png")
> cache_info(r2)
<cache_info>  https://www.google.com/images/srpr/logo11w.png
  Cacheable:     TRUE
  Expires:       Fri, 19 Dec 2025 09:32:05 GMT
  Last-Modified: Tue, 22 Oct 2019 18:30:00 GMT
  Etag:          
> r2$date
[1] "2024-12-19 09:32:05 GMT"
> rerequest(r2)$date
[1] "2024-12-19 09:32:05 GMT"
> 
> ## Not run: 
> ##D # Has last-modified and etag, so does revalidation
> ##D r3 <- GET("http://httpbin.org/cache")
> ##D cache_info(r3)
> ##D r3$date
> ##D rerequest(r3)$date
> ##D 
> ##D # Expires after 5 seconds
> ##D r4 <- GET("http://httpbin.org/cache/5")
> ##D cache_info(r4)
> ##D r4$date
> ##D rerequest(r4)$date
> ##D Sys.sleep(5)
> ##D cache_info(r4)
> ##D rerequest(r4)$date
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("config")
> ### * config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: config
> ### Title: Set curl options.
> ### Aliases: config
> 
> ### ** Examples
> 
> # There are a number of ways to modify the configuration of a request
> # * you can add directly to a request
> HEAD("https://www.google.com", verbose())
-> HEAD / HTTP/2
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=TOwZRmnv5-7PzXd8RyHDMB44jTs4BpI4v-vIVaDK2d6kdrF2YRbkmqT8XUXIaWcVdhaaG4hk0Uk2YIi7AsiEafnwWwi8TaZ-ew1hNtIF95r2EAathMBwIkos4JJGR1Mmf9DDwDiZNiv9v1Pr-1JvWaPeOs7NQROrkqVXoDFqtjvhgorlSh1cMqgwFn_DWB-9KL_NaY5NycZqW7dA; AEC=AZ6Zc-UUw_AobmJoZ3RIPcLov0M-j3Ka0dG5u4zzANJKGkJczcL6bgg3quM
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-1IcjymrbAnCAD47FuSHDQQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Thu, 19 Dec 2024 09:32:05 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> # * you can wrap with with_config()
> with_config(verbose(), HEAD("https://www.google.com"))
-> HEAD / HTTP/2
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=TOwZRmnv5-7PzXd8RyHDMB44jTs4BpI4v-vIVaDK2d6kdrF2YRbkmqT8XUXIaWcVdhaaG4hk0Uk2YIi7AsiEafnwWwi8TaZ-ew1hNtIF95r2EAathMBwIkos4JJGR1Mmf9DDwDiZNiv9v1Pr-1JvWaPeOs7NQROrkqVXoDFqtjvhgorlSh1cMqgwFn_DWB-9KL_NaY5NycZqW7dA; AEC=AZ6Zc-UUw_AobmJoZ3RIPcLov0M-j3Ka0dG5u4zzANJKGkJczcL6bgg3quM
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-Iqq9vu6wF7E_QTvJ_HakNQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Thu, 19 Dec 2024 09:32:05 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> # * you can set global with set_config()
> old <- set_config(verbose())
> HEAD("https://www.google.com")
-> HEAD / HTTP/2
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=TOwZRmnv5-7PzXd8RyHDMB44jTs4BpI4v-vIVaDK2d6kdrF2YRbkmqT8XUXIaWcVdhaaG4hk0Uk2YIi7AsiEafnwWwi8TaZ-ew1hNtIF95r2EAathMBwIkos4JJGR1Mmf9DDwDiZNiv9v1Pr-1JvWaPeOs7NQROrkqVXoDFqtjvhgorlSh1cMqgwFn_DWB-9KL_NaY5NycZqW7dA; AEC=AZ6Zc-UUw_AobmJoZ3RIPcLov0M-j3Ka0dG5u4zzANJKGkJczcL6bgg3quM
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-JUwKLWL40TQI5Qy8-2PQCg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Thu, 19 Dec 2024 09:32:05 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> # and re-establish the previous settings with
> set_config(old, override = TRUE)
> HEAD("https://www.google.com")
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> # or
> reset_config()
> HEAD("https://www.google.com")
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> # If available, you should use a friendly httr wrapper over RCurl
> # options. But you can pass Curl options (as listed in httr_options())
> # in config
> HEAD("https://www.google.com/", config(verbose = TRUE))
* WARNING: failed to open cookie file ""
* Found bundle for host: 0x556f56c47a20 [can multiplex]
* Re-using existing connection with host www.google.com
* [HTTP/2] [17] OPENED stream for https://www.google.com/
* [HTTP/2] [17] [:method: HEAD]
* [HTTP/2] [17] [:scheme: https]
* [HTTP/2] [17] [:authority: www.google.com]
* [HTTP/2] [17] [:path: /]
* [HTTP/2] [17] [user-agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7]
* [HTTP/2] [17] [accept-encoding: deflate, gzip, br, zstd]
* [HTTP/2] [17] [cookie: NID=520=TOwZRmnv5-7PzXd8RyHDMB44jTs4BpI4v-vIVaDK2d6kdrF2YRbkmqT8XUXIaWcVdhaaG4hk0Uk2YIi7AsiEafnwWwi8TaZ-ew1hNtIF95r2EAathMBwIkos4JJGR1Mmf9DDwDiZNiv9v1Pr-1JvWaPeOs7NQROrkqVXoDFqtjvhgorlSh1cMqgwFn_DWB-9KL_NaY5NycZqW7dA; AEC=AZ6Zc-UUw_AobmJoZ3RIPcLov0M-j3Ka0dG5u4zzANJKGkJczcL6bgg3quM]
* [HTTP/2] [17] [accept: application/json, text/xml, application/xml, */*]
> HEAD / HTTP/2
Host: www.google.com
User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
Accept-Encoding: deflate, gzip, br, zstd
Cookie: NID=520=TOwZRmnv5-7PzXd8RyHDMB44jTs4BpI4v-vIVaDK2d6kdrF2YRbkmqT8XUXIaWcVdhaaG4hk0Uk2YIi7AsiEafnwWwi8TaZ-ew1hNtIF95r2EAathMBwIkos4JJGR1Mmf9DDwDiZNiv9v1Pr-1JvWaPeOs7NQROrkqVXoDFqtjvhgorlSh1cMqgwFn_DWB-9KL_NaY5NycZqW7dA; AEC=AZ6Zc-UUw_AobmJoZ3RIPcLov0M-j3Ka0dG5u4zzANJKGkJczcL6bgg3quM
Accept: application/json, text/xml, application/xml, */*

< HTTP/2 200 
< content-type: text/html; charset=ISO-8859-1
< content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-zOZLd2kqUjpt_V9n7HNzow' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
< accept-ch: Sec-CH-Prefers-Color-Scheme
< date: Thu, 19 Dec 2024 09:32:05 GMT
< server: gws
< x-xss-protection: 0
< x-frame-options: SAMEORIGIN
< alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
< 
* Connection #3 to host www.google.com left intact
Response [https://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> 
> 
> cleanEx()
> nameEx("content")
> ### * content
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: content
> ### Title: Extract content from a request.
> ### Aliases: content text_content parsed_content
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- POST("http://httpbin.org/post", body = list(a = 1, b = 2))
> ##D content(r) # automatically parses JSON
> ##D cat(content(r, "text"), "\n") # text content
> ##D content(r, "raw") # raw bytes from server
> ##D 
> ##D rlogo <- content(GET("https://httpbin.org/image/png"))
> ##D plot(0:1, 0:1, type = "n")
> ##D rasterImage(rlogo, 0, 0, 1, 1)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("content_type")
> ### * content_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: content_type
> ### Title: Set content-type and accept headers.
> ### Aliases: content_type content_type_json content_type_xml accept
> ###   accept_json accept_xml
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/headers")
> ##D 
> ##D GET("http://httpbin.org/headers", accept_json())
> ##D GET("http://httpbin.org/headers", accept("text/csv"))
> ##D GET("http://httpbin.org/headers", accept(".doc"))
> ##D 
> ##D GET("http://httpbin.org/headers", content_type_xml())
> ##D GET("http://httpbin.org/headers", content_type("text/csv"))
> ##D GET("http://httpbin.org/headers", content_type(".xml"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("cookies")
> ### * cookies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cookies
> ### Title: Access cookies in a response.
> ### Aliases: cookies
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- GET("http://httpbin.org/cookies/set", query = list(a = 1, b = 2))
> ##D cookies(r)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("get_callback")
> ### * get_callback
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_callback
> ### Title: Install or uninstall a callback function
> ### Aliases: get_callback set_callback
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Log all HTTP requests to the screeen
> ##D req_logger <- function(req) {
> ##D   cat("HTTP request to", sQuote(req$url), "\n")
> ##D }
> ##D 
> ##D old <- set_callback("request", req_logger)
> ##D g1 <- GET("https://httpbin.org")
> ##D g2 <- GET("https://httpbin.org/ip")
> ##D set_callback("request", old)
> ##D 
> ##D ## Log all HTTP requests and response status codes as well
> ##D req_logger2 <- function(req) {
> ##D   cat("HTTP request to", sQuote(req$url), "... ")
> ##D }
> ##D res_logger <- function(req, res) {
> ##D   cat(res$status_code, "\n")
> ##D }
> ##D 
> ##D old_req <- set_callback("request", req_logger2)
> ##D old_res <- set_callback("response", res_logger)
> ##D g3 <- GET("https://httpbin.org")
> ##D g4 <- GET("https://httpbin.org/ip")
> ##D set_callback("request", old_req)
> ##D set_callback("response", old_res)
> ##D 
> ##D ## Return a recorded response, without performing the HTTP request
> ##D replay <- function(req) {
> ##D   if (req$url == "https://httpbin.org") g3
> ##D }
> ##D old_req <- set_callback("request", replay)
> ##D grec <- GET("https://httpbin.org")
> ##D grec$date == g3$date
> ##D set_callback("request", old_req)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("handle")
> ### * handle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: handle
> ### Title: Create a handle tied to a particular host.
> ### Aliases: handle
> 
> ### ** Examples
> 
> handle("http://google.com")
Host: http://google.com <NA>
> handle("https://google.com")
Host: https://google.com <NA>
> 
> h <- handle("http://google.com")
> GET(handle = h)
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> # Should see cookies sent back to server
> GET(handle = h, config = verbose())
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=P6xsyzW8KED4P3aw_rO-BhxPWG7CrENvW0nQcDkp7aWP0Nrswhuz8tGrAUWRCgsn0XChRMx8eHody1m-nKKcYVRbxd89gb18Bynr-QyvFmvJVhiTz-nX3OVsrhGDdljHAvN0jdYksFkkdhg3o8n_JpuxLUsszGhtig2J7Y3jWeBatI9XA_8_pYrKEtLvjtYmiPTOueIg
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-ltEXQd4-vERn9rMk2z6M0A' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Thu, 19 Dec 2024 09:32:05 GMT
<- Expires: Sat, 18 Jan 2025 09:32:05 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=P6xsyzW8KED4P3aw_rO-BhxPWG7CrENvW0nQcDkp7aWP0Nrswhuz8tGrAUWRCgsn0XChRMx8eHody1m-nKKcYVRbxd89gb18Bynr-QyvFmvJVhiTz-nX3OVsrhGDdljHAvN0jdYksFkkdhg3o8n_JpuxLUsszGhtig2J7Y3jWeBatI9XA_8_pYrKEtLvjtYmiPTOueIg
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Thu, 19 Dec 2024 09:32:05 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce--V3JF9087eO4qkmN8Ya1Yg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8116
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-VSf3ZtT2nt3-Y-v_PR9LpJg32r6BVkd412Di0Nb_t5Tpo-RRWd4nA; expires=Tue, 17-Jun-2025 09:32:05 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> h <- handle("http://google.com", cookies = FALSE)
Warning: Cookies argument is deprecated
> GET(handle = h)$cookies
                 domain flag path secure          expiration name
1 #HttpOnly_.google.com TRUE    /  FALSE 2025-06-20 09:32:05  NID
                                                                                                                                                                                                         value
1 520=fcAlotREaUXE55vn7YXOHtDIZNtrPU2dgmzD2pJ9m9kQ6WqyhOoUrabsfqru79Q9yNdE4NG0AZvgHV0rKIdq3KTO0rP4NpGu2X6Z_wo0QpAIs3SGJWvnIg-RJhAoE3ZLUchts7O1lsr86Ul-1UxOmjkRy05pFLjFp4D_2sjUCwY0CpBRP7YpW_M1glW8nMhiHEdoQ293
> ## Not run: 
> ##D # Using the preferred way of configuring the http methods
> ##D # will not work when using handle():
> ##D GET(handle = h, timeout(10))
> ##D # Passing named arguments will work properly:
> ##D GET(handle = h, config = list(timeout(10), add_headers(Accept = "")))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("has_content")
> ### * has_content
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: has_content
> ### Title: Does the request have content associated with it?
> ### Aliases: has_content
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D has_content(POST("http://httpbin.org/post", body = FALSE))
> ##D has_content(HEAD("http://httpbin.org/headers"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("headers")
> ### * headers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: headers
> ### Title: Extract the headers from a response
> ### Aliases: headers
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- GET("http://httpbin.org/get")
> ##D headers(r)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_condition")
> ### * http_condition
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_condition
> ### Title: Generate a classed http condition.
> ### Aliases: http_condition
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # You can use tryCatch to take different actions based on the type
> ##D # of error. Note that tryCatch will call the first handler that
> ##D # matches any classes of the condition, not the best matching, so
> ##D # always list handlers from most specific to least specific
> ##D f <- function(url) {
> ##D   tryCatch(stop_for_status(GET(url)),
> ##D     http_404 = function(c) "That url doesn't exist",
> ##D     http_403 = function(c) "You need to authenticate!",
> ##D     http_400 = function(c) "You made a mistake!",
> ##D     http_500 = function(c) "The server screwed up"
> ##D   )
> ##D }
> ##D f("http://httpbin.org/status/404")
> ##D f("http://httpbin.org/status/403")
> ##D f("http://httpbin.org/status/505")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_error")
> ### * http_error
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_error
> ### Title: Check for an http error.
> ### Aliases: http_error url_success url_ok
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # You can pass a url:
> ##D http_error("http://www.google.com")
> ##D http_error("http://httpbin.org/status/404")
> ##D 
> ##D # Or a request
> ##D r <- GET("http://httpbin.org/status/201")
> ##D http_error(r)
> ## End(Not run)
> 
> # Or an (integer) status code
> http_error(200L)
[1] FALSE
> http_error(404L)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("http_status")
> ### * http_status
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_status
> ### Title: Give information on the status of a request.
> ### Aliases: http_status
> 
> ### ** Examples
> 
> http_status(100)
$category
[1] "Information"

$reason
[1] "Continue"

$message
[1] "Information: (100) Continue"

> http_status(404)
$category
[1] "Client error"

$reason
[1] "Not Found"

$message
[1] "Client error: (404) Not Found"

> 
> ## Not run: 
> ##D x <- GET("http://httpbin.org/status/200")
> ##D http_status(x)
> ##D 
> ##D http_status(GET("http://httpbin.org/status/300"))
> ##D http_status(GET("http://httpbin.org/status/301"))
> ##D http_status(GET("http://httpbin.org/status/404"))
> ##D 
> ##D # errors out on unknown status
> ##D http_status(GET("http://httpbin.org/status/320"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_type")
> ### * http_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_type
> ### Title: Extract the content type of a response
> ### Aliases: http_type
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r1 <- GET("http://httpbin.org/image/png")
> ##D http_type(r1)
> ##D headers(r1)[["Content-Type"]]
> ##D 
> ##D r2 <- GET("http://httpbin.org/ip")
> ##D http_type(r2)
> ##D headers(r2)[["Content-Type"]]
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("httr_options")
> ### * httr_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: httr_options
> ### Title: List available options.
> ### Aliases: httr_options curl_docs
> 
> ### ** Examples
> 
> httr_options()
                          httr                            libcurl     type
1         abstract_unix_socket       CURLOPT_ABSTRACT_UNIX_SOCKET   string
2              accept_encoding            CURLOPT_ACCEPT_ENCODING   string
3             accepttimeout_ms           CURLOPT_ACCEPTTIMEOUT_MS  integer
4                address_scope              CURLOPT_ADDRESS_SCOPE  integer
5                       altsvc                     CURLOPT_ALTSVC   string
6                  altsvc_ctrl                CURLOPT_ALTSVC_CTRL  integer
7                       append                     CURLOPT_APPEND  integer
8                  autoreferer                CURLOPT_AUTOREFERER  integer
9                    aws_sigv4                  CURLOPT_AWS_SIGV4   string
10                  buffersize                 CURLOPT_BUFFERSIZE  integer
11            ca_cache_timeout           CURLOPT_CA_CACHE_TIMEOUT  integer
12                      cainfo                     CURLOPT_CAINFO   string
13                 cainfo_blob                CURLOPT_CAINFO_BLOB     <NA>
14                      capath                     CURLOPT_CAPATH   string
15                    certinfo                   CURLOPT_CERTINFO  integer
16          chunk_bgn_function         CURLOPT_CHUNK_BGN_FUNCTION function
17                  chunk_data                 CURLOPT_CHUNK_DATA   string
18          chunk_end_function         CURLOPT_CHUNK_END_FUNCTION function
19             closesocketdata            CURLOPT_CLOSESOCKETDATA   string
20         closesocketfunction        CURLOPT_CLOSESOCKETFUNCTION function
21                connect_only               CURLOPT_CONNECT_ONLY  integer
22                  connect_to                 CURLOPT_CONNECT_TO   string
23              connecttimeout             CURLOPT_CONNECTTIMEOUT  integer
24           connecttimeout_ms          CURLOPT_CONNECTTIMEOUT_MS  integer
25  conv_from_network_function CURLOPT_CONV_FROM_NETWORK_FUNCTION function
26     conv_from_utf8_function    CURLOPT_CONV_FROM_UTF8_FUNCTION function
27    conv_to_network_function   CURLOPT_CONV_TO_NETWORK_FUNCTION function
28                      cookie                     CURLOPT_COOKIE   string
29                  cookiefile                 CURLOPT_COOKIEFILE   string
30                   cookiejar                  CURLOPT_COOKIEJAR   string
31                  cookielist                 CURLOPT_COOKIELIST   string
32               cookiesession              CURLOPT_COOKIESESSION  integer
33              copypostfields             CURLOPT_COPYPOSTFIELDS   string
34                        crlf                       CURLOPT_CRLF  integer
35                     crlfile                    CURLOPT_CRLFILE   string
36                       curlu                      CURLOPT_CURLU   string
37               customrequest              CURLOPT_CUSTOMREQUEST   string
38                   debugdata                  CURLOPT_DEBUGDATA   string
39               debugfunction              CURLOPT_DEBUGFUNCTION function
40            default_protocol           CURLOPT_DEFAULT_PROTOCOL   string
41                 dirlistonly                CURLOPT_DIRLISTONLY  integer
42    disallow_username_in_url   CURLOPT_DISALLOW_USERNAME_IN_URL  integer
43           dns_cache_timeout          CURLOPT_DNS_CACHE_TIMEOUT  integer
44               dns_interface              CURLOPT_DNS_INTERFACE   string
45               dns_local_ip4              CURLOPT_DNS_LOCAL_IP4   string
46               dns_local_ip6              CURLOPT_DNS_LOCAL_IP6   string
47                 dns_servers                CURLOPT_DNS_SERVERS   string
48       dns_shuffle_addresses      CURLOPT_DNS_SHUFFLE_ADDRESSES  integer
49        dns_use_global_cache       CURLOPT_DNS_USE_GLOBAL_CACHE  integer
50          doh_ssl_verifyhost         CURLOPT_DOH_SSL_VERIFYHOST  integer
51          doh_ssl_verifypeer         CURLOPT_DOH_SSL_VERIFYPEER  integer
52        doh_ssl_verifystatus       CURLOPT_DOH_SSL_VERIFYSTATUS  integer
53                     doh_url                    CURLOPT_DOH_URL   string
54                   egdsocket                  CURLOPT_EGDSOCKET   string
55                 errorbuffer                CURLOPT_ERRORBUFFER   string
56       expect_100_timeout_ms      CURLOPT_EXPECT_100_TIMEOUT_MS  integer
57                 failonerror                CURLOPT_FAILONERROR  integer
58                    filetime                   CURLOPT_FILETIME  integer
59                fnmatch_data               CURLOPT_FNMATCH_DATA   string
60            fnmatch_function           CURLOPT_FNMATCH_FUNCTION function
61              followlocation             CURLOPT_FOLLOWLOCATION  integer
62                forbid_reuse               CURLOPT_FORBID_REUSE  integer
63               fresh_connect              CURLOPT_FRESH_CONNECT  integer
64                 ftp_account                CURLOPT_FTP_ACCOUNT   string
65     ftp_alternative_to_user    CURLOPT_FTP_ALTERNATIVE_TO_USER   string
66     ftp_create_missing_dirs    CURLOPT_FTP_CREATE_MISSING_DIRS  integer
67              ftp_filemethod             CURLOPT_FTP_FILEMETHOD  integer
68            ftp_skip_pasv_ip           CURLOPT_FTP_SKIP_PASV_IP  integer
69                 ftp_ssl_ccc                CURLOPT_FTP_SSL_CCC  integer
70                ftp_use_eprt               CURLOPT_FTP_USE_EPRT  integer
71                ftp_use_epsv               CURLOPT_FTP_USE_EPSV  integer
72                ftp_use_pret               CURLOPT_FTP_USE_PRET  integer
73                     ftpport                    CURLOPT_FTPPORT   string
74                  ftpsslauth                 CURLOPT_FTPSSLAUTH  integer
75           gssapi_delegation          CURLOPT_GSSAPI_DELEGATION  integer
76   happy_eyeballs_timeout_ms  CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS  integer
77           haproxy_client_ip          CURLOPT_HAPROXY_CLIENT_IP   string
78             haproxyprotocol            CURLOPT_HAPROXYPROTOCOL  integer
79                      header                     CURLOPT_HEADER  integer
80                  headerdata                 CURLOPT_HEADERDATA   string
81              headerfunction             CURLOPT_HEADERFUNCTION function
82                   headeropt                  CURLOPT_HEADEROPT  integer
83                        hsts                       CURLOPT_HSTS   string
84                   hsts_ctrl                  CURLOPT_HSTS_CTRL  integer
85                hstsreaddata               CURLOPT_HSTSREADDATA   string
86            hstsreadfunction           CURLOPT_HSTSREADFUNCTION function
87               hstswritedata              CURLOPT_HSTSWRITEDATA   string
88           hstswritefunction          CURLOPT_HSTSWRITEFUNCTION function
89       http_content_decoding      CURLOPT_HTTP_CONTENT_DECODING  integer
90      http_transfer_decoding     CURLOPT_HTTP_TRANSFER_DECODING  integer
91                http_version               CURLOPT_HTTP_VERSION  integer
92              http09_allowed             CURLOPT_HTTP09_ALLOWED  integer
93              http200aliases             CURLOPT_HTTP200ALIASES   string
94                    httpauth                   CURLOPT_HTTPAUTH  integer
95                     httpget                    CURLOPT_HTTPGET  integer
96                  httpheader                 CURLOPT_HTTPHEADER   string
97                    httppost                   CURLOPT_HTTPPOST   string
98             httpproxytunnel            CURLOPT_HTTPPROXYTUNNEL  integer
99       ignore_content_length      CURLOPT_IGNORE_CONTENT_LENGTH  integer
100                 infilesize                 CURLOPT_INFILESIZE  integer
101           infilesize_large           CURLOPT_INFILESIZE_LARGE   number
102                  interface                  CURLOPT_INTERFACE   string
103             interleavedata             CURLOPT_INTERLEAVEDATA   string
104         interleavefunction         CURLOPT_INTERLEAVEFUNCTION function
105                  ioctldata                  CURLOPT_IOCTLDATA   string
106              ioctlfunction              CURLOPT_IOCTLFUNCTION function
107                  ipresolve                  CURLOPT_IPRESOLVE  integer
108                 issuercert                 CURLOPT_ISSUERCERT   string
109            issuercert_blob            CURLOPT_ISSUERCERT_BLOB     <NA>
110      keep_sending_on_error      CURLOPT_KEEP_SENDING_ON_ERROR  integer
111                  keypasswd                  CURLOPT_KEYPASSWD   string
112                   krblevel                   CURLOPT_KRBLEVEL   string
113                  localport                  CURLOPT_LOCALPORT  integer
114             localportrange             CURLOPT_LOCALPORTRANGE  integer
115              login_options              CURLOPT_LOGIN_OPTIONS   string
116            low_speed_limit            CURLOPT_LOW_SPEED_LIMIT  integer
117             low_speed_time             CURLOPT_LOW_SPEED_TIME  integer
118                  mail_auth                  CURLOPT_MAIL_AUTH   string
119                  mail_from                  CURLOPT_MAIL_FROM   string
120                  mail_rcpt                  CURLOPT_MAIL_RCPT   string
121       mail_rcpt_allowfails       CURLOPT_MAIL_RCPT_ALLOWFAILS  integer
122       max_recv_speed_large       CURLOPT_MAX_RECV_SPEED_LARGE   number
123       max_send_speed_large       CURLOPT_MAX_SEND_SPEED_LARGE   number
124                maxage_conn                CURLOPT_MAXAGE_CONN  integer
125                maxconnects                CURLOPT_MAXCONNECTS  integer
126                maxfilesize                CURLOPT_MAXFILESIZE  integer
127          maxfilesize_large          CURLOPT_MAXFILESIZE_LARGE   number
128           maxlifetime_conn           CURLOPT_MAXLIFETIME_CONN  integer
129                  maxredirs                  CURLOPT_MAXREDIRS  integer
130               mime_options               CURLOPT_MIME_OPTIONS  integer
131                   mimepost                   CURLOPT_MIMEPOST   string
132                      netrc                      CURLOPT_NETRC  integer
133                 netrc_file                 CURLOPT_NETRC_FILE   string
134        new_directory_perms        CURLOPT_NEW_DIRECTORY_PERMS  integer
135             new_file_perms             CURLOPT_NEW_FILE_PERMS  integer
136                     nobody                     CURLOPT_NOBODY  integer
137                 noprogress                 CURLOPT_NOPROGRESS  integer
138                    noproxy                    CURLOPT_NOPROXY   string
139                   nosignal                   CURLOPT_NOSIGNAL  integer
140             opensocketdata             CURLOPT_OPENSOCKETDATA   string
141         opensocketfunction         CURLOPT_OPENSOCKETFUNCTION function
142                   password                   CURLOPT_PASSWORD   string
143                 path_as_is                 CURLOPT_PATH_AS_IS  integer
144            pinnedpublickey            CURLOPT_PINNEDPUBLICKEY   string
145                   pipewait                   CURLOPT_PIPEWAIT  integer
146                       port                       CURLOPT_PORT  integer
147                       post                       CURLOPT_POST  integer
148                 postfields                 CURLOPT_POSTFIELDS   string
149              postfieldsize              CURLOPT_POSTFIELDSIZE  integer
150        postfieldsize_large        CURLOPT_POSTFIELDSIZE_LARGE   number
151                  postquote                  CURLOPT_POSTQUOTE   string
152                  postredir                  CURLOPT_POSTREDIR  integer
153                  pre_proxy                  CURLOPT_PRE_PROXY   string
154                   prequote                   CURLOPT_PREQUOTE   string
155                 prereqdata                 CURLOPT_PREREQDATA   string
156             prereqfunction             CURLOPT_PREREQFUNCTION function
157                    private                    CURLOPT_PRIVATE   string
158           progressfunction           CURLOPT_PROGRESSFUNCTION function
159                  protocols                  CURLOPT_PROTOCOLS  integer
160              protocols_str              CURLOPT_PROTOCOLS_STR   string
161                      proxy                      CURLOPT_PROXY   string
162               proxy_cainfo               CURLOPT_PROXY_CAINFO   string
163          proxy_cainfo_blob          CURLOPT_PROXY_CAINFO_BLOB     <NA>
164               proxy_capath               CURLOPT_PROXY_CAPATH   string
165              proxy_crlfile              CURLOPT_PROXY_CRLFILE   string
166           proxy_issuercert           CURLOPT_PROXY_ISSUERCERT   string
167      proxy_issuercert_blob      CURLOPT_PROXY_ISSUERCERT_BLOB     <NA>
168            proxy_keypasswd            CURLOPT_PROXY_KEYPASSWD   string
169      proxy_pinnedpublickey      CURLOPT_PROXY_PINNEDPUBLICKEY   string
170         proxy_service_name         CURLOPT_PROXY_SERVICE_NAME   string
171      proxy_ssl_cipher_list      CURLOPT_PROXY_SSL_CIPHER_LIST   string
172          proxy_ssl_options          CURLOPT_PROXY_SSL_OPTIONS  integer
173       proxy_ssl_verifyhost       CURLOPT_PROXY_SSL_VERIFYHOST  integer
174       proxy_ssl_verifypeer       CURLOPT_PROXY_SSL_VERIFYPEER  integer
175              proxy_sslcert              CURLOPT_PROXY_SSLCERT   string
176         proxy_sslcert_blob         CURLOPT_PROXY_SSLCERT_BLOB     <NA>
177          proxy_sslcerttype          CURLOPT_PROXY_SSLCERTTYPE   string
178               proxy_sslkey               CURLOPT_PROXY_SSLKEY   string
179          proxy_sslkey_blob          CURLOPT_PROXY_SSLKEY_BLOB     <NA>
180           proxy_sslkeytype           CURLOPT_PROXY_SSLKEYTYPE   string
181           proxy_sslversion           CURLOPT_PROXY_SSLVERSION  integer
182        proxy_tls13_ciphers        CURLOPT_PROXY_TLS13_CIPHERS   string
183     proxy_tlsauth_password     CURLOPT_PROXY_TLSAUTH_PASSWORD   string
184         proxy_tlsauth_type         CURLOPT_PROXY_TLSAUTH_TYPE   string
185     proxy_tlsauth_username     CURLOPT_PROXY_TLSAUTH_USERNAME   string
186        proxy_transfer_mode        CURLOPT_PROXY_TRANSFER_MODE  integer
187                  proxyauth                  CURLOPT_PROXYAUTH  integer
188                proxyheader                CURLOPT_PROXYHEADER   string
189              proxypassword              CURLOPT_PROXYPASSWORD   string
190                  proxyport                  CURLOPT_PROXYPORT  integer
191                  proxytype                  CURLOPT_PROXYTYPE  integer
192              proxyusername              CURLOPT_PROXYUSERNAME   string
193               proxyuserpwd               CURLOPT_PROXYUSERPWD   string
194                        put                        CURLOPT_PUT  integer
195                 quick_exit                 CURLOPT_QUICK_EXIT  integer
196                      quote                      CURLOPT_QUOTE   string
197                random_file                CURLOPT_RANDOM_FILE   string
198                      range                      CURLOPT_RANGE   string
199                   readdata                   CURLOPT_READDATA   string
200               readfunction               CURLOPT_READFUNCTION function
201            redir_protocols            CURLOPT_REDIR_PROTOCOLS  integer
202        redir_protocols_str        CURLOPT_REDIR_PROTOCOLS_STR   string
203                    referer                    CURLOPT_REFERER   string
204             request_target             CURLOPT_REQUEST_TARGET   string
205                    resolve                    CURLOPT_RESOLVE   string
206        resolver_start_data        CURLOPT_RESOLVER_START_DATA   string
207    resolver_start_function    CURLOPT_RESOLVER_START_FUNCTION function
208                resume_from                CURLOPT_RESUME_FROM  integer
209          resume_from_large          CURLOPT_RESUME_FROM_LARGE   number
210           rtsp_client_cseq           CURLOPT_RTSP_CLIENT_CSEQ  integer
211               rtsp_request               CURLOPT_RTSP_REQUEST  integer
212           rtsp_server_cseq           CURLOPT_RTSP_SERVER_CSEQ  integer
213            rtsp_session_id            CURLOPT_RTSP_SESSION_ID   string
214            rtsp_stream_uri            CURLOPT_RTSP_STREAM_URI   string
215             rtsp_transport             CURLOPT_RTSP_TRANSPORT   string
216               sasl_authzid               CURLOPT_SASL_AUTHZID   string
217                    sasl_ir                    CURLOPT_SASL_IR  integer
218                   seekdata                   CURLOPT_SEEKDATA   string
219               seekfunction               CURLOPT_SEEKFUNCTION function
220    server_response_timeout    CURLOPT_SERVER_RESPONSE_TIMEOUT  integer
221               service_name               CURLOPT_SERVICE_NAME   string
222                      share                      CURLOPT_SHARE   string
223                sockoptdata                CURLOPT_SOCKOPTDATA   string
224            sockoptfunction            CURLOPT_SOCKOPTFUNCTION function
225                socks5_auth                CURLOPT_SOCKS5_AUTH  integer
226          socks5_gssapi_nec          CURLOPT_SOCKS5_GSSAPI_NEC  integer
227      socks5_gssapi_service      CURLOPT_SOCKS5_GSSAPI_SERVICE   string
228             ssh_auth_types             CURLOPT_SSH_AUTH_TYPES  integer
229            ssh_compression            CURLOPT_SSH_COMPRESSION  integer
230    ssh_host_public_key_md5    CURLOPT_SSH_HOST_PUBLIC_KEY_MD5   string
231 ssh_host_public_key_sha256 CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256   string
232            ssh_hostkeydata            CURLOPT_SSH_HOSTKEYDATA   string
233        ssh_hostkeyfunction        CURLOPT_SSH_HOSTKEYFUNCTION function
234                ssh_keydata                CURLOPT_SSH_KEYDATA   string
235            ssh_keyfunction            CURLOPT_SSH_KEYFUNCTION function
236             ssh_knownhosts             CURLOPT_SSH_KNOWNHOSTS   string
237        ssh_private_keyfile        CURLOPT_SSH_PRIVATE_KEYFILE   string
238         ssh_public_keyfile         CURLOPT_SSH_PUBLIC_KEYFILE   string
239            ssl_cipher_list            CURLOPT_SSL_CIPHER_LIST   string
240               ssl_ctx_data               CURLOPT_SSL_CTX_DATA   string
241           ssl_ctx_function           CURLOPT_SSL_CTX_FUNCTION function
242              ssl_ec_curves              CURLOPT_SSL_EC_CURVES   string
243            ssl_enable_alpn            CURLOPT_SSL_ENABLE_ALPN  integer
244             ssl_enable_npn             CURLOPT_SSL_ENABLE_NPN  integer
245             ssl_falsestart             CURLOPT_SSL_FALSESTART  integer
246                ssl_options                CURLOPT_SSL_OPTIONS  integer
247        ssl_sessionid_cache        CURLOPT_SSL_SESSIONID_CACHE  integer
248             ssl_verifyhost             CURLOPT_SSL_VERIFYHOST  integer
249             ssl_verifypeer             CURLOPT_SSL_VERIFYPEER  integer
250           ssl_verifystatus           CURLOPT_SSL_VERIFYSTATUS  integer
251                    sslcert                    CURLOPT_SSLCERT   string
252               sslcert_blob               CURLOPT_SSLCERT_BLOB     <NA>
253                sslcerttype                CURLOPT_SSLCERTTYPE   string
254                  sslengine                  CURLOPT_SSLENGINE   string
255          sslengine_default          CURLOPT_SSLENGINE_DEFAULT  integer
256                     sslkey                     CURLOPT_SSLKEY   string
257                sslkey_blob                CURLOPT_SSLKEY_BLOB     <NA>
258                 sslkeytype                 CURLOPT_SSLKEYTYPE   string
259                 sslversion                 CURLOPT_SSLVERSION  integer
260                     stderr                     CURLOPT_STDERR   string
261             stream_depends             CURLOPT_STREAM_DEPENDS   string
262           stream_depends_e           CURLOPT_STREAM_DEPENDS_E   string
263              stream_weight              CURLOPT_STREAM_WEIGHT  integer
264   suppress_connect_headers   CURLOPT_SUPPRESS_CONNECT_HEADERS  integer
265               tcp_fastopen               CURLOPT_TCP_FASTOPEN  integer
266              tcp_keepalive              CURLOPT_TCP_KEEPALIVE  integer
267               tcp_keepidle               CURLOPT_TCP_KEEPIDLE  integer
268              tcp_keepintvl              CURLOPT_TCP_KEEPINTVL  integer
269                tcp_nodelay                CURLOPT_TCP_NODELAY  integer
270              telnetoptions              CURLOPT_TELNETOPTIONS   string
271               tftp_blksize               CURLOPT_TFTP_BLKSIZE  integer
272            tftp_no_options            CURLOPT_TFTP_NO_OPTIONS  integer
273              timecondition              CURLOPT_TIMECONDITION  integer
274                    timeout                    CURLOPT_TIMEOUT  integer
275                 timeout_ms                 CURLOPT_TIMEOUT_MS  integer
276                  timevalue                  CURLOPT_TIMEVALUE  integer
277            timevalue_large            CURLOPT_TIMEVALUE_LARGE   number
278              tls13_ciphers              CURLOPT_TLS13_CIPHERS   string
279           tlsauth_password           CURLOPT_TLSAUTH_PASSWORD   string
280               tlsauth_type               CURLOPT_TLSAUTH_TYPE   string
281           tlsauth_username           CURLOPT_TLSAUTH_USERNAME   string
282                trailerdata                CURLOPT_TRAILERDATA   string
283            trailerfunction            CURLOPT_TRAILERFUNCTION function
284          transfer_encoding          CURLOPT_TRANSFER_ENCODING  integer
285               transfertext               CURLOPT_TRANSFERTEXT  integer
286           unix_socket_path           CURLOPT_UNIX_SOCKET_PATH   string
287          unrestricted_auth          CURLOPT_UNRESTRICTED_AUTH  integer
288         upkeep_interval_ms         CURLOPT_UPKEEP_INTERVAL_MS  integer
289                     upload                     CURLOPT_UPLOAD  integer
290          upload_buffersize          CURLOPT_UPLOAD_BUFFERSIZE  integer
291                        url                        CURLOPT_URL   string
292                    use_ssl                    CURLOPT_USE_SSL  integer
293                  useragent                  CURLOPT_USERAGENT   string
294                   username                   CURLOPT_USERNAME   string
295                    userpwd                    CURLOPT_USERPWD   string
296                    verbose                    CURLOPT_VERBOSE  integer
297              wildcardmatch              CURLOPT_WILDCARDMATCH  integer
298                  writedata                  CURLOPT_WRITEDATA   string
299              writefunction              CURLOPT_WRITEFUNCTION function
300                 ws_options                 CURLOPT_WS_OPTIONS  integer
301               xferinfodata               CURLOPT_XFERINFODATA   string
302           xferinfofunction           CURLOPT_XFERINFOFUNCTION function
303             xoauth2_bearer             CURLOPT_XOAUTH2_BEARER   string
> httr_options("post")
                   httr                     libcurl    type
33       copypostfields      CURLOPT_COPYPOSTFIELDS  string
97             httppost            CURLOPT_HTTPPOST  string
131            mimepost            CURLOPT_MIMEPOST  string
147                post                CURLOPT_POST integer
148          postfields          CURLOPT_POSTFIELDS  string
149       postfieldsize       CURLOPT_POSTFIELDSIZE integer
150 postfieldsize_large CURLOPT_POSTFIELDSIZE_LARGE  number
151           postquote           CURLOPT_POSTQUOTE  string
152           postredir           CURLOPT_POSTREDIR integer
> 
> # Use curl_docs to read the curl documentation for each option.
> # You can use either the httr or curl option name.
> curl_docs("userpwd")
Please point your browser to the following url: 
http://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html
> curl_docs("CURLOPT_USERPWD")
Please point your browser to the following url: 
http://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html
> 
> 
> 
> cleanEx()
> nameEx("insensitive")
> ### * insensitive
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: insensitive
> ### Title: Create a vector with case insensitive name matching.
> ### Aliases: insensitive
> ### Keywords: internal
> 
> ### ** Examples
> 
> x <- c("abc" = 1, "def" = 2)
> x["ABC"]
<NA> 
  NA 
> y <- insensitive(x)
> y["ABC"]
abc 
  1 
> y[["ABC"]]
[1] 1
> 
> 
> 
> cleanEx()
> nameEx("jwt_signature")
> ### * jwt_signature
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: jwt_signature
> ### Title: Generate a JWT signature given credentials.
> ### Aliases: jwt_signature
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D cred <- jsonlite::fromJSON("~/Desktop/httrtest-45693cbfac92.json")
> ##D jwt_signature(cred, "https://www.googleapis.com/auth/userinfo.profile")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("oauth_app")
> ### * oauth_app
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_app
> ### Title: Create an OAuth application.
> ### Aliases: oauth_app
> 
> ### ** Examples
> 
> ## Not run: 
> ##D google_app <- oauth_app(
> ##D   "google",
> ##D   key = "123456789.apps.googleusercontent.com",
> ##D   secret = "abcdefghijklmnopqrstuvwxyz"
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("oauth_endpoint")
> ### * oauth_endpoint
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_endpoint
> ### Title: Describe an OAuth endpoint.
> ### Aliases: oauth_endpoint
> 
> ### ** Examples
> 
> linkedin <- oauth_endpoint("requestToken", "authorize", "accessToken",
+   base_url = "https://api.linkedin.com/uas/oauth"
+ )
> github <- oauth_endpoint(NULL, "authorize", "access_token",
+   base_url = "https://github.com/login/oauth"
+ )
> facebook <- oauth_endpoint(
+   authorize = "https://www.facebook.com/dialog/oauth",
+   access = "https://graph.facebook.com/oauth/access_token"
+ )
> 
> oauth_endpoints
function (name) 
{
    switch(name, linkedin = oauth_endpoint(base_url = "https://www.linkedin.com/uas/oauth2", 
        authorize = "authorization", access = "accessToken"), 
        twitter = oauth_endpoint(base_url = "https://api.twitter.com/oauth", 
            request = "request_token", authorize = "authenticate", 
            access = "access_token"), vimeo = oauth_endpoint(base_url = "https://api.vimeo.com/oauth", 
            request = "request_token", authorize = "authorize", 
            access = "access_token"), yahoo = oauth_endpoint(base_url = "https://api.login.yahoo.com/oauth2", 
            request = "get_request_token", authorize = "request_auth", 
            access = "get_token"), google = oauth_endpoint(base_url = "https://accounts.google.com/o/oauth2", 
            authorize = "auth", access = "token", validate = "https://www.googleapis.com/oauth2/v1/tokeninfo", 
            revoke = "revoke"), tumblr = oauth_endpoint(base_url = "http://www.tumblr.com/oauth/", 
            request = "request_token", authorize = "authorize", 
            access = "access_token"), facebook = oauth_endpoint(authorize = "https://www.facebook.com/dialog/oauth", 
            access = "https://graph.facebook.com/oauth/access_token"), 
        github = oauth_endpoint(base_url = "https://github.com/login/oauth", 
            request = NULL, authorize = "authorize", access = "access_token"), 
        azure = oauth_endpoint(base_url = "https://login.windows.net/common/oauth2", 
            authorize = "authorize", access = "token"), meetup = oauth_endpoint(base_url = "https://secure.meetup.com/oauth2", 
            authorize = "authorize", access = "access"), stop("Unknown endpoint", 
            call. = FALSE))
}
<bytecode: 0x556f58ea2898>
<environment: namespace:httr>
> 
> 
> 
> cleanEx()
> nameEx("oauth_endpoints")
> ### * oauth_endpoints
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_endpoints
> ### Title: Popular oauth endpoints.
> ### Aliases: oauth_endpoints
> 
> ### ** Examples
> 
> oauth_endpoints("twitter")
<oauth_endpoint>
 request:   https://api.twitter.com/oauth/request_token
 authorize: https://api.twitter.com/oauth/authenticate
 access:    https://api.twitter.com/oauth/access_token
> 
> 
> 
> cleanEx()
> nameEx("oauth_service_token")
> ### * oauth_service_token
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_service_token
> ### Title: Generate OAuth token for service accounts.
> ### Aliases: oauth_service_token
> 
> ### ** Examples
> 
> ## Not run: 
> ##D endpoint <- oauth_endpoints("google")
> ##D secrets <- jsonlite::fromJSON("~/Desktop/httrtest-45693cbfac92.json")
> ##D scope <- "https://www.googleapis.com/auth/bigquery.readonly"
> ##D 
> ##D token <- oauth_service_token(endpoint, secrets, scope)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("parse_http_date")
> ### * parse_http_date
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_http_date
> ### Title: Parse and print http dates.
> ### Aliases: parse_http_date http_date
> 
> ### ** Examples
> 
> parse_http_date("Sun, 06 Nov 1994 08:49:37 GMT")
[1] "1994-11-06 08:49:37 GMT"
> parse_http_date("Sunday, 06-Nov-94 08:49:37 GMT")
[1] "1994-11-06 08:49:37 GMT"
> parse_http_date("Sun Nov  6 08:49:37 1994")
[1] "1994-11-06 08:49:37 GMT"
> 
> http_date(Sys.time())
[1] "Thu, 19 Dec 2024 09:32:05 GMT"
> 
> 
> 
> cleanEx()
> nameEx("parse_media")
> ### * parse_media
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_media
> ### Title: Parse a media type.
> ### Aliases: parse_media
> ### Keywords: internal
> 
> ### ** Examples
> 
> parse_media("text/plain")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
list()

> parse_media("text/plain; charset=utf-8")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$charset
[1] "utf-8"


> parse_media("text/plain; charset=\"utf-8\"")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$charset
[1] "utf-8"


> parse_media("text/plain; randomparam=\";=;=\"")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$randomparam
[1] ";=;="


> 
> 
> 
> cleanEx()
> nameEx("parse_url")
> ### * parse_url
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_url
> ### Title: Parse and build urls according to RFC3986.
> ### Aliases: parse_url build_url
> 
> ### ** Examples
> 
> parse_url("http://google.com/")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
NULL

$path
[1] ""

$query
NULL

$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> parse_url("http://google.com:80/")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
[1] "80"

$path
[1] ""

$query
NULL

$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> parse_url("http://google.com:80/?a=1&b=2")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
[1] "80"

$path
[1] ""

$query
$query$a
[1] "1"

$query$b
[1] "2"


$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> 
> url <- parse_url("http://google.com/")
> url$scheme <- "https"
> url$query <- list(q = "hello")
> build_url(url)
[1] "https://google.com/?q=hello"
> 
> 
> 
> cleanEx()
> nameEx("progress")
> ### * progress
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: progress
> ### Title: Add a progress bar.
> ### Aliases: progress
> 
> ### ** Examples
> 
> cap_speed <- config(max_recv_speed_large = 10000)
> ## Not run: 
> ##D # If file size is known, you get a progress bar:
> ##D x <- GET("http://httpbin.org/bytes/102400", progress(), cap_speed)
> ##D # Otherwise you get the number of bytes downloaded:
> ##D x <- GET("http://httpbin.org/stream-bytes/102400", progress(), cap_speed)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("set_config")
> ### * set_config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_config
> ### Title: Set (and reset) global httr configuration.
> ### Aliases: set_config reset_config
> 
> ### ** Examples
> 
> GET("http://google.com")
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> set_config(verbose())
> GET("http://google.com")
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-8aRsTdsaZLap9z68_P9dzQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Thu, 19 Dec 2024 09:32:05 GMT
<- Expires: Sat, 18 Jan 2025 09:32:05 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Thu, 19 Dec 2024 09:32:05 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-lmF73DVmtwMfLfKKMQJHeQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8170
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-UjR73cE6F2l38IIXLQ8CZdlA_u_rFRE_rikKVq_J3JHvbKlYxNjBQ; expires=Tue, 17-Jun-2025 09:32:05 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> reset_config()
> GET("http://google.com")
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> 
> 
> cleanEx()
> nameEx("set_cookies")
> ### * set_cookies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_cookies
> ### Title: Set cookies.
> ### Aliases: set_cookies
> 
> ### ** Examples
> 
> set_cookies(a = 1, b = 2)
<request>
Options:
* cookie: a=1;b=2
> set_cookies(.cookies = c(a = "1", b = "2"))
<request>
Options:
* cookie: a=1;b=2
> 
> ## Not run: 
> ##D GET("http://httpbin.org/cookies")
> ##D GET("http://httpbin.org/cookies", set_cookies(a = 1, b = 2))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("stop_for_status")
> ### * stop_for_status
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stop_for_status
> ### Title: Take action on http error.
> ### Aliases: stop_for_status warn_for_status message_for_status
> 
> ### ** Examples
> 
> ## Not run: 
> ##D x <- GET("http://httpbin.org/status/200")
> ##D stop_for_status(x) # nothing happens
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D x <- GET("http://httpbin.org/status/300")
> ##D stop_for_status(x)
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D x <- GET("http://httpbin.org/status/404")
> ##D stop_for_status(x)
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D # You can provide more information with the task argument
> ##D warn_for_status(x, "download spreadsheet")
> ##D message_for_status(x, "download spreadsheet")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("timeout")
> ### * timeout
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: timeout
> ### Title: Set maximum request time.
> ### Aliases: timeout
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/delay/3", timeout(1))
> ##D GET("http://httpbin.org/delay/1", timeout(2))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("upload_file")
> ### * upload_file
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: upload_file
> ### Title: Upload a file with 'POST()' or 'PUT()'.
> ### Aliases: upload_file
> 
> ### ** Examples
> 
> citation <- upload_file(system.file("CITATION"))
> ## Not run: 
> ##D POST("http://httpbin.org/post", body = citation)
> ##D POST("http://httpbin.org/post", body = list(y = citation))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("use_proxy")
> ### * use_proxy
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: use_proxy
> ### Title: Use a proxy to connect to the internet.
> ### Aliases: use_proxy
> 
> ### ** Examples
> 
> # See http://www.hidemyass.com/proxy-list for a list of public proxies
> # to test with
> # GET("http://had.co.nz", use_proxy("64.251.21.73", 8080), verbose())
> 
> 
> 
> cleanEx()
> nameEx("user_agent")
> ### * user_agent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: user_agent
> ### Title: Set user agent.
> ### Aliases: user_agent
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/user-agent")
> ##D GET("http://httpbin.org/user-agent", user_agent("httr"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("verbose")
> ### * verbose
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: verbose
> ### Title: Give verbose output.
> ### Aliases: verbose
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org", verbose())
> ##D GET("http://httpbin.org", verbose(info = TRUE))
> ##D 
> ##D f <- function() {
> ##D   GET("http://httpbin.org")
> ##D }
> ##D with_verbose(f())
> ##D with_verbose(f(), info = TRUE)
> ##D 
> ##D # verbose() makes it easy to see exactly what POST requests send
> ##D POST_verbose <- function(body, ...) {
> ##D   POST("https://httpbin.org/post", body = body, verbose(), ...)
> ##D   invisible()
> ##D }
> ##D POST_verbose(list(x = "a", y = "b"))
> ##D POST_verbose(list(x = "a", y = "b"), encode = "form")
> ##D POST_verbose(FALSE)
> ##D POST_verbose(NULL)
> ##D POST_verbose("")
> ##D POST_verbose("xyz")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("with_config")
> ### * with_config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: with_config
> ### Title: Execute code with configuration set.
> ### Aliases: with_config with_verbose
> 
> ### ** Examples
> 
> with_config(verbose(), {
+   GET("http://had.co.nz")
+   GET("http://google.com")
+ })
-> GET / HTTP/1.1
-> Host: had.co.nz
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- x-amz-id-2: lDzdOlNSGL+rjSzEME34vxIiG+iH3rukfLrGZe2dEgQmJueudMoUdl7eB6I/xVmvQGez8Ok4e4E=
<- x-amz-request-id: BHF3RRV9QFKC6Y2C
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Location: http://hadley.nz
<- Content-Length: 0
<- Server: AmazonS3
<- 
-> GET / HTTP/1.1
-> Host: hadley.nz
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Connection: keep-alive
<- Content-Length: 162
<- Server: GitHub.com
<- Content-Type: text/html
<- Location: https://hadley.nz/
<- X-GitHub-Request-Id: 25BC:CF7ED:2BC4404:3082706:6763E374
<- Accept-Ranges: bytes
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Via: 1.1 varnish
<- Age: 1186
<- X-Served-By: cache-iad-kcgs7200054-IAD
<- X-Cache: HIT
<- X-Cache-Hits: 1
<- X-Timer: S1734600726.010873,VS0,VE1
<- Vary: Accept-Encoding
<- X-Fastly-Request-ID: c5680659f032bb9025db29cfe516118d456dfba9
<- 
-> GET / HTTP/2
-> Host: hadley.nz
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- server: GitHub.com
<- content-type: text/html; charset=utf-8
<- last-modified: Mon, 11 Nov 2024 22:22:40 GMT
<- access-control-allow-origin: *
<- etag: W/"673283b0-50e3"
<- expires: Thu, 19 Dec 2024 09:41:49 GMT
<- cache-control: max-age=600
<- content-encoding: gzip
<- x-proxy-cache: MISS
<- x-github-request-id: 4F4D:1D56A9:2BA8DB0:3072BB1:6763E805
<- accept-ranges: bytes
<- date: Thu, 19 Dec 2024 09:32:06 GMT
<- via: 1.1 varnish
<- age: 16
<- x-served-by: cache-iad-kcgs7200085-IAD
<- x-cache: HIT
<- x-cache-hits: 1
<- x-timer: S1734600726.050598,VS0,VE1
<- vary: Accept-Encoding
<- x-fastly-request-id: 9cb4b3969778b67a0edc25e30aeaf4a8f73ba809
<- content-length: 6331
<- 
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-EkQl7ysY5n82HoZwucY1yA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Expires: Sat, 18 Jan 2025 09:32:06 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-9wnNuYnlv_0WaFfE7Gl2LA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8167
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-V09rgfjyz403VXbz4qFc_f9SdukrjRcmpWYjXPKA3tGirtkNjGww; expires=Tue, 17-Jun-2025 09:32:06 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> # Or even easier:
> with_verbose(GET("http://google.com"))
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-n157cVJr3KumOrpNcRqIlw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Expires: Sat, 18 Jan 2025 09:32:06 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/8.5.0 r-curl/6.0.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=520=dzT7SNvprFgbTieHeU39FXwvUr267iKQpGCK8gjZRiBdMQAeVwzicVRucyCdUuQYi0uEAjSofTZsiVOdtyeOYtPVQNepg1YWlK_V4GKoCF-PfLhGnJnqyzUWE1bvJUR5DgO9McD8pWUdNbiWTgsEySZc_F_XSLTmM6rqYjmBbw5e9SqbK84q5zt2oQPBrFPC0vhP2eYt
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Thu, 19 Dec 2024 09:32:06 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-cKubWOok6pnWtU7M-eV70g' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8168
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-XaerC225Cdv7ovUUEP2ZDk_v5G51SSoR1hK7otUgry7qYOTN8eym4; expires=Tue, 17-Jun-2025 09:32:06 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.7 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=...
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> 
> 
> cleanEx()
> nameEx("write_disk")
> ### * write_disk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_disk
> ### Title: Control where the response body is written.
> ### Aliases: write_disk write_memory
> 
> ### ** Examples
> 
> tmp <- tempfile()
> r1 <- GET("https://www.google.com", write_disk(tmp))
> readLines(tmp)
Warning in readLines(tmp) :
  incomplete final line found on '/tmp/RtmpleyE8i/file56906c8cc22c'
 [1] "<!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><head><meta content=\"Search the world's information, including webpages, images, videos and more. Google has many special features to help you find exactly what you're looking for.\" name=\"description\"><meta content=\"noodp, \" name=\"robots\"><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"><meta content=\"/logos/doodles/2024/seasonal-holidays-2024-6753651837110333-law.gif\" itemprop=\"image\"><meta content=\"Seasonal Holidays 2024\" property=\"twitter:title\"><meta content=\"Happy Holidays! #GoogleDoodle\" property=\"twitter:description\"><meta content=\"Happy Holidays! #GoogleDoodle\" property=\"og:description\"><meta content=\"summary_large_image\" property=\"twitter:card\"><meta content=\"@GoogleDoodles\" property=\"twitter:site\"><meta content=\"https://www.google.com/logos/doodles/2024/seasonal-holidays-2024-6753651837110333-2xa.gif\" property=\"twitter:image\"><meta content=\"https://www.google.com/logos/doodles/2024/seasonal-holidays-2024-6753651837110333-2xa.gif\" property=\"og:image\"><meta content=\"1000\" property=\"og:image:width\"><meta content=\"400\" property=\"og:image:height\"><meta content=\"https://www.google.com/logos/doodles/2024/seasonal-holidays-2024-6753651837110333-2xa.gif\" property=\"og:url\"><meta content=\"video.other\" property=\"og:type\"><title>Google</title><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){var _g={kEI:'FuhjZ5eQD_Gv5NoPjaU9',kEXPI:'0,202746,590362,15773,2891377,691,435,541533,2891,89155,344796,45786,9779,99404,3801,2412,50869,7734,19360,8175,11813,1635,13493,15783,21778,5305,5203197,10477,582,182,5992089,2842486,227,6,10,31,27977954,25224045,4636,11730,4706,29947,54098,11643,10979,885,14280,8182,5933,22913,20583,9235,9776,2661,50,3383,3319,23878,9139,740,1,3,2335,1521,328,4456,1769,23407,6,10211,687,7850,22,21982,1134,212,13703,356,7854,893,1,2,2390,2795,1339,8139,1,9675,1822,1669,33,9041,17667,10666,4145,6848,2,5128,4929,3279,5354,41,5595,6286,1281,477,1,4875,663,1203,726,3,2164,1212,304,2314,1840,905,2,1,6,6662,2906,3665,697,2,837,309,4653,1572,1528,3427,1180,7,880,4894,1789,2390,131,1379,83,1028,1144,2,183,503,52,1029,1020,1844,7,4,2440,2851,2030,4642,178,1824,1058,415,127,369,1652,932,943,510,2,3,2,848,1,2,549,1,3267,1146,452,3,173,23,1,386,3,558,1147,1278,1602,129,134,61,38,3028,459,152,52,3,306,784,5,4,4,4,325,204,93,70,77,2,2,4,438,8,7,1,901,85,329,345,2,189,60,204,286,484,1261,3,255,738,160,254,388,93,97,170,1,654,239,584,32,409,1,53,1,820,7,1,83,141,1,701,527,424,4,5,935,2,346,636,2,201,523,5,920,1,681,884,23,639,13,34,23,379,8,233,3,11,452,41,874,424,575,152,243,29,1,89,713,353,2,254,888,254,33,109,570,32,475,229,79,15,87,275,58,3,207,225,339,143,114,696,1957,1586,6,943,2424,376,2,21349005,37198,18,2780,702,868,5240,40,159,373,181,1774,8,2065,3,1202,1247,5985392,2038088',kBL:'3LxN',kOPI:89978449};(function(){var a;((a=window.google)==null?0:a.stvsc)?google.kEI=_g.kEI:window.google=_g;}).call(this);})();(function(){google.sn='webhp';google.kHL='en';})();(function(){"                                                                                                                                                                                                                                                                                                                                                                                                     
 [2] "var g=this||self;function k(){return window.google&&window.google.kOPI||null};var l,m=[];function n(a){for(var b;a&&(!a.getAttribute||!(b=a.getAttribute(\"eid\")));)a=a.parentNode;return b||l}function p(a){for(var b=null;a&&(!a.getAttribute||!(b=a.getAttribute(\"leid\")));)a=a.parentNode;return b}function q(a){/^http:/i.test(a)&&window.location.protocol===\"https:\"&&(google.ml&&google.ml(Error(\"a\"),!1,{src:a,glmm:1}),a=\"\");return a}
 [3] "function r(a,b,d,c,h){var e=\"\";b.search(\"&ei=\")===-1&&(e=\"&ei=\"+n(c),b.search(\"&lei=\")===-1&&(c=p(c))&&(e+=\"&lei=\"+c));var f=b.search(\"&cshid=\")===-1&&a!==\"slh\";c=\"&zx=\"+Date.now().toString();g._cshid&&f&&(c+=\"&cshid=\"+g._cshid);(d=d())&&(c+=\"&opi=\"+d);return\"/\"+(h||\"gen_204\")+\"?atyp=i&ct=\"+String(a)+\"&cad=\"+(b+e+c)};l=google.kEI;google.getEI=n;google.getLEI=p;google.ml=function(){return null};google.log=function(a,b,d,c,h,e){e=e===void 0?k:e;d||(d=r(a,b,e,c,h));if(d=q(d)){a=new Image;var f=m.length;m[f]=a;a.onerror=a.onload=a.onabort=function(){delete m[f]};a.src=d}};google.logUrl=function(a,b){b=b===void 0?k:b;return r(\"\",a,b)};}).call(this);(function(){google.y={};google.sy=[];var d;(d=google).x||(d.x=function(a,b){if(a)var c=a.id;else{do c=Math.random();while(google.y[c])}google.y[c]=[a,b];return!1});var e;(e=google).sx||(e.sx=function(a){google.sy.push(a)});google.lm=[];var f;(f=google).plm||(f.plm=function(a){google.lm.push.apply(google.lm,a)});google.lq=[];var g;(g=google).load||(g.load=function(a,b,c){google.lq.push([[a],b,c])});var h;(h=google).loadAll||(h.loadAll=function(a,b){google.lq.push([a,b])});google.bx=!1;var k;(k=google).lx||(k.lx=function(){});var l=[],m;(m=google).fce||(m.fce=function(a,b,c,n){l.push([a,b,c,n])});google.qce=l;}).call(this);google.f={};(function(){
 [4] "document.documentElement.addEventListener(\"submit\",function(b){var a;if(a=b.target){var c=a.getAttribute(\"data-submitfalse\");a=c===\"1\"||c===\"q\"&&!a.elements.q.value?!0:!1}else a=!1;a&&(b.preventDefault(),b.stopPropagation())},!0);document.documentElement.addEventListener(\"click\",function(b){var a;a:{for(a=b.target;a&&a!==document.documentElement;a=a.parentElement)if(a.tagName===\"A\"){a=a.getAttribute(\"data-nohref\")===\"1\";break a}a=!1}a&&b.preventDefault()},!0);}).call(this);</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}
 [5] "</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#1967d2}em{font-weight:bold;font-style:normal}.lst{height:25px;width:496px}.gsfi,.lst{font:18px arial,sans-serif}.gsfs{font:17px arial,sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}body{background:#fff;color:#000}a{color:#681da8;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#1967d2}a:visited{color:#681da8}.sblc{padding-top:5px}.sblc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#f8f9fa;border:solid 1px;border-color:#dadce0 #70757a #70757a #dadce0;height:30px}.lsbb{display:block}#WqQANb a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;color:#000;border:none;cursor:pointer;height:30px;margin:0;outline:0;font:15px arial,sans-serif;vertical-align:top}.lsb:active{background:#dadce0}.lst:focus{outline:none}</style><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){window.google.erd={jsr:1,bv:2133,de:true,dpf:'5PeUvv_CKpg6exsodu4Grt2o0g-mUWyfmklXbfKTfws'}
 [6] "var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=g.sdo)!=null?q:!0,t=0,u,w=google.erd,x=w.jsr;google.ml=function(a,b,d,n,e){e=e===void 0?2:e;b&&(u=a&&a.message);d===void 0&&(d={});d.cad=\"ple_\"+google.ple+\".aple_\"+google.aple;if(google.dl)return google.dl(a,e,d,!0),null;b=d;if(x<0){window.console&&console.error(a,b);if(x===-2)throw a;b=!1}else b=!a||!a.message||a.message===\"Error loading script\"||t>=l&&!n?!1:!0;if(!b)return null;t++;d=d||{};b=encodeURIComponent;var c=\"/gen_204?atyp=i&ei=\"+b(google.kEI);google.kEXPI&&(c+=\"&jexpid=\"+b(google.kEXPI));c+=\"&srcpg=\"+b(google.sn)+\"&jsr=\"+b(w.jsr
 [7] "\"&bver=\"+b(w.bv);w.dpf&&(c+=\"&dpf=\"+b(w.dpf));var f=a.lineNumber;f!==void 0&&(c+=\"&line=\"+f);var h=a.fileName;h&&(h.indexOf(\"-extension:/\")>0&&(e=3),c+=\"&script=\"+b(h),f&&h===window.location.href&&(f=document.documentElement.outerHTML.split(\"\\n\")[f],c+=\"&cad=\"+b(f?f.substring(0,300):\"No script found.\")));google.ple&&google.ple===1&&(e=2);c+=\"&jsel=\"+e;for(var v in d)c+=\"&\",c+=b(v),c+=\"=\",c+=b(d[v]);c=c+\"&emsg=\"+b(a.name+\": \"+a.message);c=c+\"&jsst=\"+b(a.stack||\"N/A\");c.length>=12288&&(c=c.substr(0,12288));a=c;n||google.log(0,\"\",a);return a};window.onerror=function(a,b,d,n,e){u!==a&&(a=e instanceof Error?e:Error(a),d===void 0||\"lineNumber\"in a||(a.lineNumber=d),b===void 0||\"fileName\"in a||(a.fileName=b),google.ml(a,!1,void 0,!1,a.name===\"SyntaxError\"||a.message.substring(0,11)===\"SyntaxError\"||a.message.indexOf(\"Script error\")!==-1?3:p));u=null;r&&t>=l&&(window.onerror=null)};})();</script></head><body bgcolor=\"#fff\"><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){var src='/images/nav_logo229.png';var iesg=false;document.body.onload = function(){window.n && window.n();if (document.images){new Image().src=src;}
 [8] "if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.focus();}
 [9] "}
[10] "})();</script><div id=\"mngb\"><div id=gbar><nobr><b class=gb1>Search</b> <a class=gb1 href=\"https://www.google.com/imghp?hl=en&tab=wi\">Images</a> <a class=gb1 href=\"https://maps.google.com/maps?hl=en&tab=wl\">Maps</a> <a class=gb1 href=\"https://play.google.com/?hl=en&tab=w8\">Play</a> <a class=gb1 href=\"https://www.youtube.com/?tab=w1\">YouTube</a> <a class=gb1 href=\"https://news.google.com/?tab=wn\">News</a> <a class=gb1 href=\"https://mail.google.com/mail/?tab=wm\">Gmail</a> <a class=gb1 href=\"https://drive.google.com/?tab=wo\">Drive</a> <a class=gb1 style=\"text-decoration:none\" href=\"https://www.google.com/intl/en/about/products?tab=wh\"><u>More</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a href=\"http://www.google.com/history/optout?hl=en\" class=gb4>Web History</a> | <a  href=\"/preferences?hl=en\" class=gb4>Settings</a> | <a target=_top id=gb_70 href=\"https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=https://www.google.com/&ec=GAZAAQ\" class=gb4>Sign in</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div></div><center><br clear=\"all\" id=\"lgpd\"><div id=\"XjhHGf\"><img alt=\"Seasonal Holidays 2024\" border=\"0\" height=\"200\" src=\"/logos/doodles/2024/seasonal-holidays-2024-6753651837110333-law.gif\" title=\"Seasonal Holidays 2024\" width=\"500\" id=\"hplogo\"><br></div><form action=\"/search\" name=\"f\"><table cellpadding=\"0\" cellspacing=\"0\"><tr valign=\"top\"><td width=\"25%\">&nbsp;</td><td align=\"center\" nowrap=\"\"><input name=\"ie\" value=\"ISO-8859-1\" type=\"hidden\"><input value=\"en\" name=\"hl\" type=\"hidden\"><input name=\"source\" type=\"hidden\" value=\"hp\"><input name=\"biw\" type=\"hidden\"><input name=\"bih\" type=\"hidden\"><div class=\"ds\" style=\"height:32px;margin:4px 0\"><input class=\"lst\" style=\"margin:0;padding:5px 8px 0 6px;vertical-align:top;color:#000\" autocomplete=\"off\" value=\"\" title=\"Google Search\" maxlength=\"2048\" name=\"q\" size=\"57\"></div><br style=\"line-height:0\"><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"Google Search\" name=\"btnG\" type=\"submit\"></span></span><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" id=\"tsuid_FuhjZ5eQD_Gv5NoPjaU9_1\" value=\"I'm Feeling Lucky\" name=\"btnI\" type=\"submit\"><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){var id='tsuid_FuhjZ5eQD_Gv5NoPjaU9_1';document.getElementById(id).onclick = function(){if (this.form.q.value){this.checked = 1;if (this.form.iflsig)this.form.iflsig.disabled = false;}
[11] "else top.location='/doodles/';};})();</script><input value=\"AL9hbdgAAAAAZ2P2JtdaYaz7gvx_pRZ1NuNCJ_60_MtQ\" name=\"iflsig\" type=\"hidden\"></span></span></td><td class=\"fl sblc\" align=\"left\" nowrap=\"\" width=\"25%\"><a href=\"/advanced_search?hl=en&amp;authuser=0\">Advanced search</a></td></tr></table><input id=\"gbv\" name=\"gbv\" type=\"hidden\" value=\"1\"><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){var a,b=\"1\";if(document&&document.getElementById)if(typeof XMLHttpRequest!=\"undefined\")b=\"2\";else if(typeof ActiveXObject!=\"undefined\"){var c,d,e=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"];for(c=0;d=e[c++];)try{new ActiveXObject(d),b=\"2\"}catch(h){}}a=b;if(a==\"2\"&&location.search.indexOf(\"&gbv=2\")==-1){var f=google.gbvu,g=document.getElementById(\"gbv\");g&&(g.value=a);f&&window.setTimeout(function(){location.href=f},0)};}).call(this);</script></form><div style=\"font-size:83%;min-height:3.5em\"><br></div><span id=\"footer\"><div style=\"font-size:10pt\"><div style=\"margin:19px auto;text-align:center\" id=\"WqQANb\"><a href=\"/intl/en/ads/\">Advertising</a><a href=\"/services/\">Business Solutions</a><a href=\"/intl/en/about.html\">About Google</a></div></div><p style=\"font-size:8pt;color:#70757a\">&copy; 2024 - <a href=\"/intl/en/policies/privacy/\">Privacy</a> - <a href=\"/intl/en/policies/terms/\">Terms</a></p></span></center><script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){window.google.cdo={height:757,width:1440};(function(){var a=window.innerWidth,b=window.innerHeight;if(!a||!b){var c=window.document,d=c.compatMode==\"CSS1Compat\"?c.documentElement:c.body;a=d.clientWidth;b=d.clientHeight}if(a&&b&&(a!=google.cdo.width||b!=google.cdo.height)){var e=google,f=e.log,g=\"/client_204?&atyp=i&biw=\"+a+\"&bih=\"+b+\"&ei=\"+google.kEI,h=\"\",k=window.google&&window.google.kOPI||null;k&&(h+=\"&opi=\"+k);f.call(e,\"\",\"\",g+h)};}).call(this);})();</script>  <script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){google.xjs={basecomb:'/xjs/_/js/k\\x3dxjs.hp.en.slN0ICFlIdc.es5.O/ck\\x3dxjs.hp.ZdvoAuacH0c.L.X.O/am\\x3dBAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAAAAAAAAAAAwCsAQAAIABAgAAAAAAAAAAAAAAAIAIAUAAQJwAAAOI7AgABsAgAAC8/d\\x3d1/ed\\x3d1/dg\\x3d0/ujg\\x3d1/rs\\x3dACT90oE_rtqVigwL0ao_oPopZIJptrYpfg',basecss:'/xjs/_/ss/k\\x3dxjs.hp.ZdvoAuacH0c.L.X.O/am\\x3dBAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAsAAAAIABAgAAAAAAAAAAAAAAAIAIAUAAQJw/rs\\x3dACT90oF1BL3ZlaLO9UErlKWVa-MwNL-zZw',basejs:'/xjs/_/js/k\\x3dxjs.hp.en.slN0ICFlIdc.es5.O/am\\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAwCAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOI7AgABsAgAAC8/dg\\x3d0/rs\\x3dACT90oGMPIbLhEbfa9cuZNWYzrj6GUW7qA',excm:[]};})();</script>       <script nonce=\"JgQ-q-5WHok9a71mR-2XOQ\">(function(){var u='/xjs/_/js/k\\x3dxjs.hp.en.slN0ICFlIdc.es5.O/am\\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAwCAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOI7AgABsAgAAC8/d\\x3d1/ed\\x3d1/dg\\x3d3/rs\\x3dACT90oGMPIbLhEbfa9cuZNWYzrj6GUW7qA/m\\x3dsb_he,d';var st=1;var amd=1000;var mmd=0;var pod=true;"                                                                                                                                                                                                                                                                                                                                                                                   
[12] "var e=this||self;function f(){var a,b,d;if(b=a=(b=window.google)==null?void 0:(d=b.ia)==null?void 0:d.r.B2Jtyd)b=a.m,b=b===1||b===5;return b&&a.cbfd!=null&&a.cbvi!=null?a:void 0};function g(){var a=[u];if(!google.dp){for(var b=0;b<a.length;b++){var d=a[b],c=document.createElement(\"link\");c.as=\"script\";c.href=d;c.rel=\"preload\";document.body.appendChild(c)}google.dp=!0}};google.ps===void 0&&(google.ps=[]);function h(){var a=u,b=function(){};google.lx=google.stvsc?b:function(){k(a);google.lx=b};google.bx||google.lx()}function l(a,b){b&&(a.src=b);var d=a.onload;a.onload=function(c){d&&d(c);google.ps=google.ps.filter(function(C){return a!==C})};google.ps.push(a);document.body.appendChild(a)}google.as=l;function k(a){google.timers&&google.timers.load&&google.tick&&google.tick(\"load\",\"xjsls\");var b=document.createElement(\"script\");b.onerror=function(){google.ple=1};b.onload=function(){google.ple=0};google.xjsus=void 0;l(b,a);google.aple=-1;google.dp=!0};function m(a){var b=a.getAttribute(\"jscontroller\");return(b===\"UBXHI\"||b===\"R3fhkb\"||b===\"TSZEqd\")&&a.hasAttribute(\"data-src\")}function n(){for(var a=document.getElementsByTagName(\"img\"),b=0,d=a.length;b<d;b++){var c=a[b];if(c.hasAttribute(\"data-lzy_\")&&Number(c.getAttribute(\"data-atf\"))&1&&!m(c))return!0}return!1}for(var p=document.getElementsByTagName(\"img\"),q=0,r=p.length;q<r;++q){var t=p[q];Number(t.getAttribute(\"data-atf\"))&1&&m(t)&&(t.src=t.getAttribute(\"data-src\"))};var w,x,y,z,A,B;function D(){google.xjsu=u;e._F_jsUrl=u;A=function(){h()};w=!1;x=(st===1||st===3)&&!!google.caft&&!n();y=f();z=(st===2||st===3)&&!!y&&!n();B=pod}function E(){w||x||z||(A(),w=!0)}setTimeout(function(){google&&google.tick&&google.timers&&google.timers.load&&google.tick(\"load\",\"xjspls\");D();if(x||z){if(x){var a=function(){x=!1;E()};google.caft(a);window.setTimeout(a,amd)}z&&(a=function(){z=!1;E()},y.cbvi.push(a),window.setTimeout(a,mmd));B&&(w||g())}else A()},0);})();window._ = window._ || {};window._DumpException = _._DumpException = function(e){throw e;};window._s = window._s || {};_s._DumpException = _._DumpException;window._qs = window._qs || {};_qs._DumpException = _._DumpException;(function(){var t=[4,131072,0,0,0,0,0,0,4259840,0,65536,721813704,603981057,33619970,655360,0,536870912,20971528,160001,251166720,813760514,1006632994,2];window._F_toggles = window._xjs_toggles = t;})();window._F_installCss = window._F_installCss || function(css){};(function(){google.jl={bfl:0,dw:false,ine:false,ubm:false,uwp:true,vs:false};})();(function(){var pmc='{\\x22d\\x22:{},\\x22sb_he\\x22:{\\x22agen\\x22:false,\\x22cgen\\x22:false,\\x22client\\x22:\\x22heirloom-hp\\x22,\\x22dh\\x22:true,\\x22ds\\x22:\\x22\\x22,\\x22fl\\x22:true,\\x22host\\x22:\\x22google.com\\x22,\\x22jsonp\\x22:true,\\x22msgs\\x22:{\\x22cibl\\x22:\\x22Clear Search\\x22,\\x22dym\\x22:\\x22Did you mean:\\x22,\\x22lcky\\x22:\\x22I\\\\u0026#39;m Feeling Lucky\\x22,\\x22lml\\x22:\\x22Learn more\\x22,\\x22psrc\\x22:\\x22This search was removed from your \\\\u003Ca href\\x3d\\\\\\x22/history\\\\\\x22\\\\u003EWeb History\\\\u003C/a\\\\u003E\\x22,\\x22psrl\\x22:\\x22Remove\\x22,\\x22sbit\\x22:\\x22Search by image\\x22,\\x22srch\\x22:\\x22Google Search\\x22},\\x22ovr\\x22:{},\\x22pq\\x22:\\x22\\x22,\\x22rfs\\x22:[],\\x22stok\\x22:\\x22puLAXLjOq5-JOiaclcaSA1wmfW0\\x22}}';google.pmc=JSON.parse(pmc);})();(function(){var b=function(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}};"
[13] "var e=this||self;var g,h;a:{for(var k=[\"CLOSURE_FLAGS\"],l=e,n=0;n<k.length;n++)if(l=l[k[n]],l==null){h=null;break a}h=l}var p=h&&h[610401301];g=p!=null?p:!1;var q,r=e.navigator;q=r?r.userAgentData||null:null;function t(a){return g?q?q.brands.some(function(c){return(c=c.brand)&&c.indexOf(a)!=-1}):!1:!1}function u(a){var c;a:{if(c=e.navigator)if(c=c.userAgent)break a;c=\"\"}return c.indexOf(a)!=-1};function v(){return g?!!q&&q.brands.length>0:!1}function w(){return u(\"Safari\")&&!(x()||(v()?0:u(\"Coast\"))||(v()?0:u(\"Opera\"))||(v()?0:u(\"Edge\"))||(v()?t(\"Microsoft Edge\"):u(\"Edg/\"))||(v()?t(\"Opera\"):u(\"OPR\"))||u(\"Firefox\")||u(\"FxiOS\")||u(\"Silk\")||u(\"Android\"))}function x(){return v()?t(\"Chromium\"):(u(\"Chrome\")||u(\"CriOS\"))&&!(v()?0:u(\"Edge\"))||u(\"Silk\")}function y(){return u(\"Android\")&&!(x()||u(\"Firefox\")||u(\"FxiOS\")||(v()?0:u(\"Opera\"))||u(\"Silk\"))};var z=v()?!1:u(\"Trident\")||u(\"MSIE\");y();x();w();var A=!z&&!w(),D=function(a){if(/-[a-z]/.test(\"ved\"))return null;if(A&&a.dataset){if(y()&&!(\"ved\"in a.dataset))return null;a=a.dataset.ved;return a===void 0?null:a}return a.getAttribute(\"data-\"+\"ved\".replace(/([A-Z])/g,\"-$1\").toLowerCase())};var E=[],F=null;function G(a){a=a.target;var c=performance.now(),f=[],H=f.concat,d=E;if(!(d instanceof Array)){var m=typeof Symbol!=\"undefined\"&&Symbol.iterator&&d[Symbol.iterator];if(m)d=m.call(d);else if(typeof d.length==\"number\")d={next:b(d)};else throw Error(\"b`\"+String(d));for(var B=[];!(m=d.next()).done;)B.push(m.value);d=B}E=H.call(f,d,[c]);if(a&&a instanceof HTMLElement)if(a===F){if(c=E.length>=4)c=(E[E.length-1]-E[E.length-4])/1E3<5;if(c){c=google.getEI(a);a.hasAttribute(\"data-ved\")?f=a?D(a)||\"\":\"\":f=(f="                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
[14] "a.closest(\"[data-ved]\"))?D(f)||\"\":\"\";f=f||\"\";if(a.hasAttribute(\"jsname\"))a=a.getAttribute(\"jsname\");else{var C;a=(C=a.closest(\"[jsname]\"))==null?void 0:C.getAttribute(\"jsname\")}google.log(\"rcm\",\"&ei=\"+c+\"&tgtved=\"+f+\"&jsname=\"+(a||\"\"))}}else F=a,E=[c]}window.document.addEventListener(\"DOMContentLoaded\",function(){document.body.addEventListener(\"click\",G)});}).call(this);</script></body></html
> 
> # The default
> r2 <- GET("https://www.google.com", write_memory())
> 
> # Save a very large file
> ## Not run: 
> ##D GET(
> ##D   "http://www2.census.gov/acs2011_5yr/pums/csv_pus.zip",
> ##D   write_disk("csv_pus.zip"), progress()
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("write_stream")
> ### * write_stream
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_stream
> ### Title: Process output in a streaming manner.
> ### Aliases: write_stream
> 
> ### ** Examples
> 
> GET(
+   "https://github.com/jeroen/data/raw/gh-pages/diamonds.json",
+   write_stream(function(x) {
+     print(length(x))
+     length(x)
+   })
+ )
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 8437
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 13422
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 10279
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 11346
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 9569
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 10441
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 25244
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 25383
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32541
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 4601
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 6852
Response [https://raw.githubusercontent.com/jeroen/data/gh-pages/diamonds.json]
  Date: 2024-12-19 09:32
  Status: 200
  Content-Type: text/plain; charset=utf-8
<EMPTY BODY>
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.424 0.069 3.166 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
