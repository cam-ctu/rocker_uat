
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #  check jacobian
> 
> if(!require("numDeriv"))stop("this test requires numDeriv.")
Loading required package: numDeriv
> 
> x <- pi
> print(j.calc <- jacobian(sin, x))
     [,1]
[1,]   -1
> cat("error: ", err <- max(abs(j.calc - cos(x))),"\n")
error:  6.618484e-12 
> if( err > 1e-11) stop("jacobian matrix test 1 FAILED") # 1e-13 with d=0.01
> 
> x <- (1:2)*2*pi/2
> print(j.calc <- jacobian(sin, x))
     [,1] [,2]
[1,]   -1    0
[2,]    0    1
> cat("error: ", err <- max(abs(j.calc -  diag(cos(x)))),"\n")
error:  6.618817e-12 
> if( err > 1e-11) stop("jacobian matrix test 2 FAILED") # 1e-13 with d=0.01
> 
> func2 <- function(x) c(sin(x), cos(x))
> 
> x <- (1:2)*2*pi/2
> print(j.calc <- jacobian(func2, x))
     [,1] [,2]
[1,]   -1    0
[2,]    0    1
[3,]    0    0
[4,]    0    0
> cat("error: ", err <- max(abs(j.calc - rbind(diag(cos(x)), diag(-sin(x))))),"\n")
error:  6.618817e-12 
> if( err > 1e-11) stop("jacobian matrix test 3 FAILED") # 1e-13 with d=0.01
> 
> x <- (0:1)*2*pi
> print(j.calc <- jacobian(func2, x))
     [,1] [,2]
[1,]    1    0
[2,]    0    1
[3,]    0    0
[4,]    0    0
> cat("error: ", err <- max(abs(j.calc - rbind(diag(cos(x)), diag(-sin(x))))),"\n")
error:  6.618817e-12 
> if( err > 1e-11) stop("jacobian matrix test 4 FAILED") # 1e-13 with d=0.01
> 
> 
> x <- (0:10)*2*pi/10
> print(j.calc <- jacobian(func2, x))
      [,1]       [,2]       [,3]       [,4]       [,5] [,6]       [,7]
 [1,]    1  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
 [2,]    0  0.8090170  0.0000000  0.0000000  0.0000000    0  0.0000000
 [3,]    0  0.0000000  0.3090170  0.0000000  0.0000000    0  0.0000000
 [4,]    0  0.0000000  0.0000000 -0.3090170  0.0000000    0  0.0000000
 [5,]    0  0.0000000  0.0000000  0.0000000 -0.8090170    0  0.0000000
 [6,]    0  0.0000000  0.0000000  0.0000000  0.0000000   -1  0.0000000
 [7,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0 -0.8090170
 [8,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
 [9,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[10,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[11,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[12,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[13,]    0 -0.5877853  0.0000000  0.0000000  0.0000000    0  0.0000000
[14,]    0  0.0000000 -0.9510565  0.0000000  0.0000000    0  0.0000000
[15,]    0  0.0000000  0.0000000 -0.9510565  0.0000000    0  0.0000000
[16,]    0  0.0000000  0.0000000  0.0000000 -0.5877853    0  0.0000000
[17,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[18,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.5877853
[19,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[20,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[21,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
[22,]    0  0.0000000  0.0000000  0.0000000  0.0000000    0  0.0000000
            [,8]      [,9]     [,10] [,11]
 [1,]  0.0000000 0.0000000 0.0000000     0
 [2,]  0.0000000 0.0000000 0.0000000     0
 [3,]  0.0000000 0.0000000 0.0000000     0
 [4,]  0.0000000 0.0000000 0.0000000     0
 [5,]  0.0000000 0.0000000 0.0000000     0
 [6,]  0.0000000 0.0000000 0.0000000     0
 [7,]  0.0000000 0.0000000 0.0000000     0
 [8,] -0.3090170 0.0000000 0.0000000     0
 [9,]  0.0000000 0.3090170 0.0000000     0
[10,]  0.0000000 0.0000000 0.8090170     0
[11,]  0.0000000 0.0000000 0.0000000     1
[12,]  0.0000000 0.0000000 0.0000000     0
[13,]  0.0000000 0.0000000 0.0000000     0
[14,]  0.0000000 0.0000000 0.0000000     0
[15,]  0.0000000 0.0000000 0.0000000     0
[16,]  0.0000000 0.0000000 0.0000000     0
[17,]  0.0000000 0.0000000 0.0000000     0
[18,]  0.0000000 0.0000000 0.0000000     0
[19,]  0.9510565 0.0000000 0.0000000     0
[20,]  0.0000000 0.9510565 0.0000000     0
[21,]  0.0000000 0.0000000 0.5877853     0
[22,]  0.0000000 0.0000000 0.0000000     0
> cat("error: ", err <- max(abs(j.calc - rbind(diag(cos(x)), diag(-sin(x))))),"\n")
error:  7.698508e-12 
> if( err > 1e-10) stop("jacobian matrix test 5 FAILED")# 1e-12 with d=0.01
> 
> func3 <- function(x) sum(sin(x)) # R^n -> R
> 
> x <- (1:2)*2*pi/2
> print(j.calc <- jacobian(func3, x))
     [,1] [,2]
[1,]   -1    1
> cat("error: ", err <- max(abs(j.calc - cos(x))),"\n")
error:  6.618817e-12 
> if( err > 1e-11) stop("jacobian matrix test 6 FAILED")# 1e-13 with d=0.01
> 
