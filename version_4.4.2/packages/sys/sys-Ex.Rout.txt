
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "sys"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('sys')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("exec")
> ### * exec
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: exec
> ### Title: Running System Commands
> ### Aliases: exec exec_wait sys exec_background exec_internal exec_status
> 
> ### ** Examples
> 
> # Run a command (interrupt with CTRL+C)
> status <- exec_wait("date")
Tue Mar  4 10:48:25 AM UTC 2025
> 
> # Capture std/out
> out <- exec_internal("date")
> print(out$status)
[1] 0
> cat(as_text(out$stdout))
Tue Mar  4 10:48:26 AM UTC 2025> 
> if(nchar(Sys.which("ping"))){
+ 
+ # Run a background process (daemon)
+ pid <- exec_background("ping", "localhost")
+ 
+ # Kill it after a while
+ Sys.sleep(2)
+ tools::pskill(pid)
+ 
+ # Cleans up the zombie proc
+ exec_status(pid)
+ rm(pid)
+ }
> 
> 
> 
> cleanEx()
> nameEx("exec_r")
> ### * exec_r
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: exec_r
> ### Title: Execute R from R
> ### Aliases: exec_r r_wait r_internal r_background
> 
> ### ** Examples
> 
> # Hello world
> r_wait("--version")
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
https://www.gnu.org/licenses/.

[1] 0
> 
> # Run some code
> r_wait(c('--vanilla', '-q', '-e', 'sessionInfo()'))
> sessionInfo()
R version 4.4.2 (2024-10-31)
Platform: x86_64-pc-linux-gnu
Running under: Ubuntu 24.04.1 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

time zone: Etc/UTC
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_4.4.2
> 
> 
[1] 0
> 
> # Run a script via stdin
> tmp <- tempfile()
> writeLines(c("x <- rnorm(100)", "mean(x)"), con = tmp)
> r_wait(std_in = tmp)

R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> x <- rnorm(100)
> mean(x)
[1] -0.007780437
> 
[1] 0
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.058 0.022 0.438 0.352 0.652 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
