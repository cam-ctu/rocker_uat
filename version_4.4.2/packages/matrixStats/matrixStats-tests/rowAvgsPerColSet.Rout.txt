
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("matrixStats")
> 
> X <- matrix(rnorm(20 * 6), nrow = 20, ncol = 6)
> rownames(X) <- LETTERS[1:nrow(X)]
> colnames(X) <- letters[1:ncol(X)]
> print(X)
            a           b          c           d           e          f
A -0.25065081  1.12957063  0.8013551 -0.22701944  0.72374072  0.8101775
B -1.61943949 -0.76760466 -0.2300737 -0.10300125  0.13238967  1.1202449
C  1.05282152  1.20785940 -1.4661776  0.71991758 -0.05141619  1.2382074
D -1.01576666  0.85836393 -1.6281664 -0.34083860  0.13144035  1.1060734
E -0.27503000  0.54398083 -0.9763929 -0.93531677  0.80478167 -0.4034636
F -1.54245937 -0.05861520  1.3067307 -0.40208178  0.21732502 -0.4657400
G -1.42731093  1.87034585  0.5084688  1.23477909  0.31640466 -1.2326489
H  0.52395630  1.13128673  0.6021216 -2.46916610  0.11684582 -0.3701461
I -1.65431610  1.39537617  0.4687511 -0.13223007 -1.47688413 -0.1634794
J -0.28147834 -0.09068882  1.1141498  1.42739266 -0.07399471 -0.3072914
K -0.67557843  1.58699426 -0.5143438 -0.15851868  0.72509614  0.3322336
L -0.69706331  0.66210520 -0.9302496 -0.85506862  0.83248153 -0.3748229
M -2.28506697  1.57451054 -0.8087753  0.41509009  1.17445517 -1.1027724
N  0.20951504  0.89778013 -1.0736876 -0.36473805  1.60164243  0.8670286
O -1.11518204  0.38127988 -0.1513516  0.61845937 -1.90750368  1.0418398
P  0.02518006  2.43824480  0.6166152  1.49447492  1.10082162 -0.1493121
Q -0.75138136  0.88777366  1.8773590 -0.05183209  1.77523813  2.0839871
R -0.52991034  0.44067819 -0.5343789  0.07217730  0.54832460  0.5492098
S  0.11274703  0.11565261 -0.6969849 -1.52777902  0.14125442 -1.2578212
T -1.44338990  0.84807778 -0.3129940 -1.09947609  0.00432659  0.1964194
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Apply rowMeans() for 3 sets of 2 columns
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 3L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3
[1,]  1  3  5
[2,]  2  4  6
> 
> Z <- rowAvgsPerColSet(X, S = S)
> print(Z)
           s1         s2          s3
A  0.43945991  0.2871678  0.76695908
B -1.19352208 -0.1665375  0.62631727
C  1.13034046 -0.3731300  0.59339563
D -0.07870137 -0.9845025  0.61875686
E  0.13447541 -0.9558548  0.20065904
F -0.80053728  0.4523245 -0.12420748
G  0.22151746  0.8716240 -0.45812210
H  0.82762152 -0.9335222 -0.12665012
I -0.12946996  0.1682605 -0.82018177
J -0.18608358  1.2707712 -0.19064307
K  0.45570792 -0.3364312  0.52866488
L -0.01747905 -0.8926591  0.22882932
M -0.35527821 -0.1968426  0.03584137
N  0.55364758 -0.7192128  1.23433553
O -0.36695108  0.2335539 -0.43283192
P  1.23171243  1.0555451  0.47575476
Q  0.06819615  0.9127635  1.92961263
R -0.04461608 -0.2311008  0.54876719
S  0.11419982 -1.1123819 -0.55828339
T -0.29765606 -0.7062350  0.10037299
> 
> # Validation
> Z0 <- cbind(s1 = rowMeans(X[, 1:2]), s2 = rowMeans(X[, 3:4]),
+             s3 = rowMeans(X[, 5:6]))
> stopifnot(identical(drop(Z), Z0))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Apply colMeans() for 5 sets of 4 rows
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 5L
> S <- matrix(1:nrow(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3 s4 s5
[1,]  1  5  9 13 17
[2,]  2  6 10 14 18
[3,]  3  7 11 15 19
[4,]  4  8 12 16 20
> 
> Z <- colAvgsPerRowSet(X, S = S)
> print(Z)
            a         b           c           d           e          f
s1 -0.4582589 0.6070473 -0.63076565  0.01226457 0.234038637  1.0686758
s2 -0.6802110 0.8717496  0.36023207 -0.64294639 0.363839291 -0.6179996
s3 -0.8271090 0.8884467  0.03457689  0.07039382 0.001674707 -0.1283400
s4 -0.7913885 1.3229538 -0.35429981  0.54082158 0.492353883  0.1641960
s5 -0.6529836 0.5730456  0.08325031 -0.65172748 0.617285936  0.3929488
> 
> # Validation
> Z0 <- rbind(s1 = colMeans(X[1:4, ]), s2 = colMeans(X[5:8, ]),
+             s3 = colMeans(X[9:12, ]), s4 = colMeans(X[13:16, ]),
+             s5 = colMeans(X[17:20, ]))
> stopifnot(identical(drop(Z), Z0))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # When there is only one "complete" set
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 1L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1
[1,]  1
[2,]  2
[3,]  3
[4,]  4
[5,]  5
[6,]  6
> 
> Z <- rowAvgsPerColSet(X, S = S, FUN = rowMeans)
> print(Z)
           s1
A  0.49786228
B -0.24458076
C  0.45020202
D -0.14814900
E -0.20690679
F -0.15747343
G  0.21167311
H -0.07751695
I -0.26046373
J  0.29801486
K  0.21598052
L -0.22710294
M -0.17209314
N  0.35625676
O -0.18874303
P  0.92100409
Q  0.97019074
R  0.09101677
S -0.51882184
T -0.30117270
> 
> Z0 <- rowMeans(X)
> stopifnot(identical(drop(Z), Z0))
> 
> 
> nbr_of_sets <- 1L
> S <- matrix(1:nrow(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
      s1
 [1,]  1
 [2,]  2
 [3,]  3
 [4,]  4
 [5,]  5
 [6,]  6
 [7,]  7
 [8,]  8
 [9,]  9
[10,] 10
[11,] 11
[12,] 12
[13,] 13
[14,] 14
[15,] 15
[16,] 16
[17,] 17
[18,] 18
[19,] 19
[20,] 20
> 
> Z <- colAvgsPerRowSet(X, S = S, FUN = colMeans)
> print(Z)
            a         b          c          d         e         f
s1 -0.6819902 0.8526486 -0.1014012 -0.1342388 0.3418385 0.1758962
> 
> Z0 <- colMeans(X)
> stopifnot(identical(drop(Z), Z0))
> 
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Use weights
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 3L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3
[1,]  1  3  5
[2,]  2  4  6
> 
> W <- matrix(runif(length(X)), nrow = nrow(X), ncol = ncol(X))
> Z1 <- rowAvgsPerColSet(X, W = W, S = S, FUN = rowWeightedMeans)
> print(Z1)
           s1         s2          s3
A  0.43945991  0.2871678  0.76695908
B -1.19352208 -0.1665375  0.62631727
C  1.13034046 -0.3731300  0.59339563
D -0.07870137 -0.9845025  0.61875686
E  0.13447541 -0.9558548  0.20065904
F -0.80053728  0.4523245 -0.12420748
G  0.22151746  0.8716240 -0.45812210
H  0.82762152 -0.9335222 -0.12665012
I -0.12946996  0.1682605 -0.82018177
J -0.18608358  1.2707712 -0.19064307
K  0.45570792 -0.3364312  0.52866488
L -0.01747905 -0.8926591  0.22882932
M -0.35527821 -0.1968426  0.03584137
N  0.55364758 -0.7192128  1.23433553
O -0.36695108  0.2335539 -0.43283192
P  1.23171243  1.0555451  0.47575476
Q  0.06819615  0.9127635  1.92961263
R -0.04461608 -0.2311008  0.54876719
S  0.11419982 -1.1123819 -0.55828339
T -0.29765606 -0.7062350  0.10037299
> Z2 <- colAvgsPerRowSet(X, W = W, S = S, FUN = colWeightedMeans)
> print(Z2)
             a         b          c          d          e          f
s1 -0.93504515 0.1809830  0.2856407 -0.1650103 0.42806519  0.9652112
s2  0.01852743 1.0331117 -1.5471720  0.1895395 0.04001208  1.1721404
s3 -0.90874469 0.2426828  0.1651689 -0.6686993 0.51105335 -0.4346018
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Result should always be a matrix, including when nrow(X) <= 1
> # (https://github.com/HenrikBengtsson/matrixStats/issues/108)
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> X <- matrix(1:3, nrow = 1L, ncol = 3L)
> S <- matrix(1, nrow = 1L, ncol = 1L)
> Z1 <- rowAvgsPerColSet(X, S = S)
> stopifnot(is.matrix(Z1))
> Z2 <- rowAvgsPerColSet(X, S = S, rows = 0)
> stopifnot(is.matrix(Z2))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Works with many, one or zero columns / rows
> # (https://github.com/HenrikBengtsson/matrixStats/issues/172)
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> S <- cbind(1:2, 3:4, 5:6)
> X <- matrix(rnorm(2 * 6), nrow = 6, ncol = 2)
> Z2 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z2_ref <- rbind(colSums2(X[S[,1], ,drop=FALSE]),
+                 colSums2(X[S[,2], ,drop=FALSE]),
+                 colSums2(X[S[,3], ,drop=FALSE]))
> stopifnot(identical(Z2, Z2_ref))
> X <- matrix(rnorm(6), nrow = 6, ncol = 1)
> Z1 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z1_ref <- rbind(colSums2(X[S[,1], ,drop=FALSE]),
+                 colSums2(X[S[,2], ,drop=FALSE]),
+                 colSums2(X[S[,3], ,drop=FALSE]))
> stopifnot(identical(Z1, Z1_ref))
> X <- matrix(numeric(0), nrow = 6, ncol = 0)
> Z0 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z0_ref <- matrix(numeric(0), nrow = ncol(S), ncol = 0)
> stopifnot(identical(Z0, unname(Z0_ref)))
> 
> 
> S <- rbind(1:4, 5:8)
> X <- matrix(rnorm(n = 2 * 8), nrow = 2, ncol = 8)
> Z2 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z2_ref <- cbind(rowMeans2(X[,S[,1],drop=FALSE]),
+                 rowMeans2(X[,S[,2],drop=FALSE]),
+                 rowMeans2(X[,S[,3],drop=FALSE]),
+                 rowMeans2(X[,S[,4],drop=FALSE]))
> stopifnot(identical(Z2, Z2_ref))
> X <- matrix(rnorm(n = 8), nrow = 1, ncol = 8)
> Z1 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z1_ref <- cbind(rowMeans2(X[,S[,1],drop=FALSE]),
+                 rowMeans2(X[,S[,2],drop=FALSE]),
+                 rowMeans2(X[,S[,3],drop=FALSE]),
+                 rowMeans2(X[,S[,4],drop=FALSE]))
> stopifnot(identical(Z1, Z1_ref))
> X <- matrix(numeric(0), nrow = 0, ncol = 8)
> Z0 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z0_ref <- matrix(numeric(0), nrow = 0, ncol = ncol(S))
> stopifnot(identical(Z0, Z0_ref))
> 
