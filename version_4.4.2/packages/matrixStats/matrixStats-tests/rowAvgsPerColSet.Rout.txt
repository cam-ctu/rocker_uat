
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("matrixStats")
> 
> X <- matrix(rnorm(20 * 6), nrow = 20, ncol = 6)
> rownames(X) <- LETTERS[1:nrow(X)]
> colnames(X) <- letters[1:ncol(X)]
> print(X)
            a          b           c           d          e          f
A -1.64698485  1.1058529 -0.99572154 -0.05890016  1.9888254 -1.5174318
B  1.53214523  0.7864189 -1.01578289  1.09724879 -0.9964199  2.0106266
C  3.03116102  0.4557613  0.48316778 -0.19639786 -0.2446263  0.6130242
D -0.66071232  1.0276915 -0.63525259 -0.75209321  0.5650583  0.6053019
E  0.04054916  0.6191576 -0.41497667  0.08844470  0.5425573 -0.3360103
F  1.31891331  0.2341281 -0.06621759 -0.61286178 -0.5136271  0.4406674
G -1.45360025  0.3356881  0.78059677 -0.24488920 -1.5062680 -0.5758731
H  0.08387393  1.2629477  1.51388603 -0.61936159 -1.1805683 -0.4298129
I  0.67493038  1.6205087 -0.27802096 -1.43944019 -1.3747463 -1.9220319
J -2.15542979  1.0484299  0.26547418 -1.08885943  0.5069913 -1.2668993
K  1.18238232  0.0306750  1.39307562  1.22128097  0.1595773  1.4214306
L -1.33273055 -0.5736351 -1.30958286 -0.24150765 -1.1329555 -0.6323198
M  0.09548416 -0.9391613 -0.40257501  0.83800014 -0.9459106  2.1548534
N  0.41580301  0.4486897  0.74638813 -0.60908698  0.1054038  0.1558291
O  1.42802210 -0.3153189  0.88751852  1.15137695  0.1084087 -1.0739930
P -0.77169944 -0.3582467 -0.11554898  1.40595850 -0.2485995 -1.4590486
Q -0.62036327  0.8002143  0.87972289  1.49309440  0.2778187 -0.5197755
R -0.20632713 -1.5000158 -0.65102639  0.12768043 -1.5522917 -2.4934316
S -0.70067963  0.9452698  1.29449365  0.98548508  0.7909130  0.1879333
T  1.85642677 -0.5431511 -1.71371709  0.21609639  1.5686100 -1.8828043
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Apply rowMeans() for 3 sets of 2 columns
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 3L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3
[1,]  1  3  5
[2,]  2  4  6
> 
> Z <- rowAvgsPerColSet(X, S = S)
> print(Z)
          s1          s2          s3
A -0.2705660 -0.52731085  0.23569678
B  1.1592821  0.04073295  0.50710337
C  1.7434612  0.14338496  0.18419894
D  0.1834896 -0.69367290  0.58518013
E  0.3298534 -0.16326598  0.10327348
F  0.7765207 -0.33953969 -0.03647986
G -0.5589561  0.26785379 -1.04107056
H  0.6734108  0.44726222 -0.80519061
I  1.1477195 -0.85873057 -1.64838911
J -0.5534999 -0.41169263 -0.37995400
K  0.6065287  1.30717829  0.79050392
L -0.9531828 -0.77554526 -0.88263762
M -0.4218386  0.21771257  0.60447138
N  0.4322464  0.06865057  0.13061645
O  0.5563516  1.01944774 -0.48279213
P -0.5649731  0.64520476 -0.85382405
Q  0.0899255  1.18640865 -0.12097844
R -0.8531715 -0.26167298 -2.02286164
S  0.1222951  1.13998937  0.48942314
T  0.6566378 -0.74881035 -0.15709716
> 
> # Validation
> Z0 <- cbind(s1 = rowMeans(X[, 1:2]), s2 = rowMeans(X[, 3:4]),
+             s3 = rowMeans(X[, 5:6]))
> stopifnot(identical(drop(Z), Z0))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Apply colMeans() for 5 sets of 4 rows
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 5L
> S <- matrix(1:nrow(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3 s4 s5
[1,]  1  5  9 13 17
[2,]  2  6 10 14 18
[3,]  3  7 11 15 19
[4,]  4  8 12 16 20
> 
> Z <- colAvgsPerRowSet(X, S = S)
> print(Z)
              a          b           c           d          e           f
s1  0.563902268  0.8439312 -0.54089731  0.02246439  0.3282094  0.42788023
s2 -0.002565961  0.6129804  0.45332214 -0.34716697 -0.6644765 -0.22525726
s3 -0.407711912  0.5314946  0.01773649 -0.38713157 -0.4602833 -0.59995512
s4  0.291902460 -0.2910093  0.27894567  0.69656215 -0.2451744 -0.05558977
s5  0.082264183 -0.0744207 -0.04763173  0.70558908  0.2712625 -1.17701952
> 
> # Validation
> Z0 <- rbind(s1 = colMeans(X[1:4, ]), s2 = colMeans(X[5:8, ]),
+             s3 = colMeans(X[9:12, ]), s4 = colMeans(X[13:16, ]),
+             s5 = colMeans(X[17:20, ]))
> stopifnot(identical(drop(Z), Z0))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # When there is only one "complete" set
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 1L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1
[1,]  1
[2,]  2
[3,]  3
[4,]  4
[5,]  5
[6,]  6
> 
> Z <- rowAvgsPerColSet(X, S = S, FUN = rowMeans)
> print(Z)
           s1
A -0.18739334
B  0.56903946
C  0.69034836
D  0.02499894
E  0.08995363
F  0.13350038
G -0.44405761
H  0.10516081
I -0.45313338
J -0.44838219
K  0.90140363
L -0.87045523
M  0.13344846
N  0.21050447
O  0.36433573
P -0.25786412
Q  0.38511857
R -1.04590203
S  0.58390254
T -0.08308989
> 
> Z0 <- rowMeans(X)
> stopifnot(identical(drop(Z), Z0))
> 
> 
> nbr_of_sets <- 1L
> S <- matrix(1:nrow(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
      s1
 [1,]  1
 [2,]  2
 [3,]  3
 [4,]  4
 [5,]  5
 [6,]  6
 [7,]  7
 [8,]  8
 [9,]  9
[10,] 10
[11,] 11
[12,] 12
[13,] 13
[14,] 14
[15,] 15
[16,] 16
[17,] 17
[18,] 18
[19,] 19
[20,] 20
> 
> Z <- colAvgsPerRowSet(X, S = S, FUN = colMeans)
> print(Z)
           a         b          c         d          e          f
s1 0.1055582 0.3245952 0.03229505 0.1380634 -0.1540925 -0.3259883
> 
> Z0 <- colMeans(X)
> stopifnot(identical(drop(Z), Z0))
> 
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Use weights
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> nbr_of_sets <- 3L
> S <- matrix(1:ncol(X), ncol = nbr_of_sets)
> colnames(S) <- sprintf("s%d", 1:nbr_of_sets)
> print(S)
     s1 s2 s3
[1,]  1  3  5
[2,]  2  4  6
> 
> W <- matrix(runif(length(X)), nrow = nrow(X), ncol = ncol(X))
> Z1 <- rowAvgsPerColSet(X, W = W, S = S, FUN = rowWeightedMeans)
> print(Z1)
          s1          s2          s3
A -0.2705660 -0.52731085  0.23569678
B  1.1592821  0.04073295  0.50710337
C  1.7434612  0.14338496  0.18419894
D  0.1834896 -0.69367290  0.58518013
E  0.3298534 -0.16326598  0.10327348
F  0.7765207 -0.33953969 -0.03647986
G -0.5589561  0.26785379 -1.04107056
H  0.6734108  0.44726222 -0.80519061
I  1.1477195 -0.85873057 -1.64838911
J -0.5534999 -0.41169263 -0.37995400
K  0.6065287  1.30717829  0.79050392
L -0.9531828 -0.77554526 -0.88263762
M -0.4218386  0.21771257  0.60447138
N  0.4322464  0.06865057  0.13061645
O  0.5563516  1.01944774 -0.48279213
P -0.5649731  0.64520476 -0.85382405
Q  0.0899255  1.18640865 -0.12097844
R -0.8531715 -0.26167298 -2.02286164
S  0.1222951  1.13998937  0.48942314
T  0.6566378 -0.74881035 -0.15709716
> Z2 <- colAvgsPerRowSet(X, W = W, S = S, FUN = colWeightedMeans)
> print(Z2)
             a         b           c          d          e          f
s1 -0.05741981 0.9461359 -1.00575221  0.5191743 0.49620276 0.24659739
s2  1.18522435 0.7417264 -0.07604241 -0.4742455 0.16021601 0.60916306
s3  0.67973124 0.4266428 -0.24059713 -0.2622085 0.01446509 0.05232853
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Result should always be a matrix, including when nrow(X) <= 1
> # (https://github.com/HenrikBengtsson/matrixStats/issues/108)
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> X <- matrix(1:3, nrow = 1L, ncol = 3L)
> S <- matrix(1, nrow = 1L, ncol = 1L)
> Z1 <- rowAvgsPerColSet(X, S = S)
> stopifnot(is.matrix(Z1))
> Z2 <- rowAvgsPerColSet(X, S = S, rows = 0)
> stopifnot(is.matrix(Z2))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Works with many, one or zero columns / rows
> # (https://github.com/HenrikBengtsson/matrixStats/issues/172)
> # - - - - - - - - - - - - - - - - - - - - - - - - - -
> S <- cbind(1:2, 3:4, 5:6)
> X <- matrix(rnorm(2 * 6), nrow = 6, ncol = 2)
> Z2 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z2_ref <- rbind(colSums2(X[S[,1], ,drop=FALSE]),
+                 colSums2(X[S[,2], ,drop=FALSE]),
+                 colSums2(X[S[,3], ,drop=FALSE]))
> stopifnot(identical(Z2, Z2_ref))
> X <- matrix(rnorm(6), nrow = 6, ncol = 1)
> Z1 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z1_ref <- rbind(colSums2(X[S[,1], ,drop=FALSE]),
+                 colSums2(X[S[,2], ,drop=FALSE]),
+                 colSums2(X[S[,3], ,drop=FALSE]))
> stopifnot(identical(Z1, Z1_ref))
> X <- matrix(numeric(0), nrow = 6, ncol = 0)
> Z0 <- colAvgsPerRowSet(X, S = S, FUN = colSums2)
> Z0_ref <- matrix(numeric(0), nrow = ncol(S), ncol = 0)
> stopifnot(identical(Z0, unname(Z0_ref)))
> 
> 
> S <- rbind(1:4, 5:8)
> X <- matrix(rnorm(n = 2 * 8), nrow = 2, ncol = 8)
> Z2 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z2_ref <- cbind(rowMeans2(X[,S[,1],drop=FALSE]),
+                 rowMeans2(X[,S[,2],drop=FALSE]),
+                 rowMeans2(X[,S[,3],drop=FALSE]),
+                 rowMeans2(X[,S[,4],drop=FALSE]))
> stopifnot(identical(Z2, Z2_ref))
> X <- matrix(rnorm(n = 8), nrow = 1, ncol = 8)
> Z1 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z1_ref <- cbind(rowMeans2(X[,S[,1],drop=FALSE]),
+                 rowMeans2(X[,S[,2],drop=FALSE]),
+                 rowMeans2(X[,S[,3],drop=FALSE]),
+                 rowMeans2(X[,S[,4],drop=FALSE]))
> stopifnot(identical(Z1, Z1_ref))
> X <- matrix(numeric(0), nrow = 0, ncol = 8)
> Z0 <- rowAvgsPerColSet(X, S = S, FUN = rowMeans2)
> Z0_ref <- matrix(numeric(0), nrow = 0, ncol = ncol(S))
> stopifnot(identical(Z0, Z0_ref))
> 
