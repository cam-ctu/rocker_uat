
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "crosstalk"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('crosstalk')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("ClientValue")
> ### * ClientValue
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ClientValue
> ### Title: ClientValue object
> ### Aliases: ClientValue
> 
> ### ** Examples
> 
> library(shiny)

Attaching package: ‘shiny’

The following object is masked from ‘package:crosstalk’:

    getDefaultReactiveDomain

> 
> server <- function(input, output, session) {
+   cv <- ClientValue$new("var1", "group1")
+ 
+   r <- reactive({
+     # Don't proceed unless cv$get() is a non-NULL value
+     validate(need(cv$get(), message = FALSE))
+ 
+     runif(cv$get())
+   })
+ 
+   observeEvent(input$click, {
+     cv$sendUpdate(NULL)
+   })
+ }
> 
> 
> 
> 
> cleanEx()

detaching ‘package:shiny’

> nameEx("bscols")
> ### * bscols
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bscols
> ### Title: Arrange HTML elements or widgets in Bootstrap columns
> ### Aliases: bscols
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("filter_select")
> ### * filter_select
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: filter_select
> ### Title: Categorical filter controls
> ### Aliases: filter_select filter_checkbox
> 
> ### ** Examples
> 
> ## Only run examples in interactive R sessions
> if (interactive()) {
+ 
+ sd <- SharedData$new(chickwts)
+ filter_select("feedtype", "Feed type", sd, "feed")
+ 
+ }
> 
> 
> 
> 
> cleanEx()
> nameEx("filter_slider")
> ### * filter_slider
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: filter_slider
> ### Title: Range filter control
> ### Aliases: filter_slider animation_options
> 
> ### ** Examples
> 
> ## Only run examples in interactive R sessions
> if (interactive()) {
+ 
+ sd <- SharedData$new(mtcars)
+ filter_slider("mpg", "Miles per gallon", sd, "mpg")
+ 
+ }
> 
> 
> 
> cleanEx()
> nameEx("scale_fill_selection")
> ### * scale_fill_selection
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: scale_fill_selection
> ### Title: ggplot2 helpers
> ### Aliases: scale_fill_selection scale_color_selection selection_factor
> 
> ### ** Examples
> 
> ## Not run: 
> ##D sd <- SharedData$new(iris)
> ##D renderPlot({
> ##D   df <- sd$data(withSelection = TRUE, withFilter = TRUE)
> ##D   ggplot(df, aes(Sepal.Length, Sepal.Width,
> ##D     color = selection_factor(df))) +
> ##D     geom_point() +
> ##D     scale_color_selection("#444444", "skyblue1")
> ##D })
> ##D 
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.319 0.025 0.343 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
