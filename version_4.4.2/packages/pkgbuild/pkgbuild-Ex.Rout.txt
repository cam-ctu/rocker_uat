
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "pkgbuild"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('pkgbuild')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compiler_flags")
> ### * compiler_flags
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compiler_flags
> ### Title: Default compiler flags used by devtools.
> ### Aliases: compiler_flags
> 
> ### ** Examples
> 
> compiler_flags()
           CFLAGS          CXXFLAGS        CXX11FLAGS        CXX14FLAGS 
"-Wall -pedantic" "-Wall -pedantic" "-Wall -pedantic" "-Wall -pedantic" 
       CXX17FLAGS        CXX20FLAGS 
"-Wall -pedantic" "-Wall -pedantic" 
> compiler_flags(TRUE)
                           CFLAGS                          CXXFLAGS 
"-UNDEBUG -Wall -pedantic -g -O0" "-UNDEBUG -Wall -pedantic -g -O0" 
                       CXX11FLAGS                        CXX14FLAGS 
"-UNDEBUG -Wall -pedantic -g -O0" "-UNDEBUG -Wall -pedantic -g -O0" 
                       CXX17FLAGS                        CXX20FLAGS 
"-UNDEBUG -Wall -pedantic -g -O0" "-UNDEBUG -Wall -pedantic -g -O0" 
                           FFLAGS                           FCFLAGS 
                         "-g -O0"                          "-g -O0" 
> 
> 
> 
> cleanEx()
> nameEx("has_build_tools")
> ### * has_build_tools
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: has_build_tools
> ### Title: Are build tools are available?
> ### Aliases: has_build_tools check_build_tools with_build_tools
> ###   local_build_tools
> 
> ### ** Examples
> 
> has_build_tools(debug = TRUE)
Trying to compile a simple C file
Running /usr/local/lib/R/bin/R CMD SHLIB foo.c
using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c foo.c -o foo.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o foo.so foo.o -L/usr/local/lib/R/lib -lR

[1] TRUE
> check_build_tools()
Your system is ready to build packages!
> 
> 
> 
> cleanEx()
> nameEx("has_compiler")
> ### * has_compiler
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: has_compiler
> ### Title: Is a compiler available?
> ### Aliases: has_compiler check_compiler has_devel
> 
> ### ** Examples
> 
> has_compiler()
[1] TRUE
> check_compiler()
[1] TRUE
> 
> with_build_tools(has_compiler())
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("has_rtools")
> ### * has_rtools
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rtools_path
> ### Title: Is Rtools installed?
> ### Aliases: rtools_path has_rtools find_rtools setup_rtools check_rtools
> ### Keywords: internal
> 
> ### ** Examples
> 
> has_rtools()
[1] FALSE
> 
> 
> 
> cleanEx()
> nameEx("rcmd_build_tools")
> ### * rcmd_build_tools
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rcmd_build_tools
> ### Title: Call R CMD 'command' with build tools active
> ### Aliases: rcmd_build_tools
> 
> ### ** Examples
> 
> # These env vars are always set
> callr::rcmd_safe_env()
            CYGWIN            R_TESTS          R_BROWSER        R_PDFVIEWER 
"nodosfilewarning"                 ""            "false"            "false" 
> 
> if (has_build_tools()) {
+   rcmd_build_tools("CONFIG", "CC")$stdout
+   rcmd_build_tools("CC", "--version")$stdout
+ }
── R CMD CONFIG ────────────────────────────────────────────────────────────────
/usr/local/lib/R/bin/Rcmd: 64: exec: CONFIG: not found
── R CMD CC ────────────────────────────────────────────────────────────────────
/usr/local/lib/R/bin/Rcmd: 64: exec: CC: not found
[1] "/usr/local/lib/R/bin/Rcmd: 64: exec: CC: not found\n"
> 
> 
> 
> cleanEx()
> nameEx("with_debug")
> ### * with_debug
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: with_debug
> ### Title: Temporarily set debugging compilation flags.
> ### Aliases: with_debug
> 
> ### ** Examples
> 
> flags <- names(compiler_flags(TRUE))
> with_debug(Sys.getenv(flags))
    CFLAGS   CXXFLAGS CXX11FLAGS CXX14FLAGS CXX17FLAGS CXX20FLAGS     FFLAGS 
        ""         ""         ""         ""         ""         ""         "" 
   FCFLAGS 
        "" 
> ## Not run: 
> ##D install("mypkg")
> ##D with_debug(install("mypkg"))
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.137 0.021 0.303 0.155 0.322 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
