Need to Loop over different image versions of new cctu

#a) use matrix within the buildfresh.yml action to loop over versions
#b) use the  -   destination_dir: subdir  -  with  option to send the different versions to subfolders
c) add an index file at the top level to link to each version/subfolder - will the links all work correctly ??

#d) automate the above to refer to a data file of versions. to also build the top-level index
e)  automate checks for a new version of cctu,  policy to only validate the penultimate version.  How to avoid re-validating all the back versions.. Add in a pull-request step to force human inspection. ADd tags to GitHub appropriately.

wget -q https://hub.docker.com/v2/repositories/shug0131/cctu/tags  -O - | jq -r '.results[].name'
 want to get the tag,  image_id,  publish date.  Only d.d.d  tags.

https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/evaluate-expressions-in-workflows-and-actions#fromjson

daily action to 
a) run generate_versions.R  which updates the versions/versions.json
c) create pull request if anything changes.

follow on actions if changes to versions.
c) builds the landing page with links to version-subdirs. Table of version, dates, digest. with.  Use quarto-landing.yml to choose what to build. 
d) re-runs the test (selectively last two, or all of them)



Follow up on Alimus suggestion to document the extra packages, versus basic and recommended. See email.






---------

reconcile this independent repo, with the validation branch and folder in rocker-versions2.

Produce a basic report 

0)  delete all previous output.
a) test base installation and packages
b) test recommended packages

c)  the extra packages shipped by default in cctu-rocker.  This uses extra_package_test.R and test_pkg.R  to grab teh extra test files and run them. The rockker default doesn't
install tests..

d) This should then be intended to be run on each persons docker installation.   The github version will .gitignore the output files, but shoudl be kept on users' versions.

commit and push to github
https://quarto.org/docs/publishing/github-pages.html#publish-command
as a static copy on gh-pages branch. 
and then use the github work flow from rocker_validate to 
try to also re-run the code. 

Question then of do we need to run this on every PC individually. Or is the single github action enough.





e)  Make it work on github via a workflow. Install rocker version xx, run teh validations,  output report  to the wiki directory? Do somethign clever each day to check if a new version has come out/rebuild the latest/ or repeat if its' not there.

f)  Go to R_validation riskassessment/riskmetric.  Build reports for each package. 

can I push

# Must avoid the PC going into sleep mode. Settings>System>Power>Make my device Sleep after> never


Maybe use blogdown  with  build.R option.  You coudl then render individual package and the basic tests, using seperate pages,  and write teh results/datestampe to an R object.  Build an index file that presents an overall table of outputs. Give flexibility to re-run failed scripts.. Maybe use parallel processing...  

Check up is .md the actual output after running R code. Or just another variation on Rmd..



https://github.com/quarto-dev/quarto-cli/discussions/439
