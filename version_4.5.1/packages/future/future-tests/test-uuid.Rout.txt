
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-uuid.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("uuid")
Test ‘uuid’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-uuid.R’

> library(future)
[08:10:18.120] Option 'future.startup.script': TRUE
[08:10:18.120] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:10:18.120] Future startup scripts found: <none>

> session_uuid <- future:::session_uuid

> message("*** session_uuid() ...")
*** session_uuid() ...

> id0 <- session_uuid()

> print(id0)
[1] "b487100fb017af0d47739f260de9b683"
attr(,"source")
attr(,"source")$host
      HOSTNAME 
"28bb34de9501" 

attr(,"source")$info
                                              sysname 
                                              "Linux" 
                                              release 
                                  "6.11.0-1015-azure" 
                                              version 
"#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" 
                                             nodename 
                                       "28bb34de9501" 
                                              machine 
                                             "x86_64" 
                                                login 
                                            "unknown" 
                                                 user 
                                               "root" 
                                       effective_user 
                                               "root" 

attr(,"source")$pid
[1] 76013

attr(,"source")$time
[1] "2025-06-17 08:10:18 UTC"

attr(,"source")$random
[1] 2147483647


> environment(session_uuid)$uuids <- list()

> id <- session_uuid()

> print(id)
[1] "a4e41cdf1a70dfd31f4c6d6413d6d785"
attr(,"source")
attr(,"source")$host
      HOSTNAME 
"28bb34de9501" 

attr(,"source")$info
                                              sysname 
                                              "Linux" 
                                              release 
                                  "6.11.0-1015-azure" 
                                              version 
"#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" 
                                             nodename 
                                       "28bb34de9501" 
                                              machine 
                                             "x86_64" 
                                                login 
                                            "unknown" 
                                                 user 
                                               "root" 
                                       effective_user 
                                               "root" 

attr(,"source")$pid
[1] 76013

attr(,"source")$time
[1] "2025-06-17 08:10:18 UTC"

attr(,"source")$random
[1] 2147483647


> stopifnot(id != id0)

> if (supportsMulticore()) {
+     plan(multicore, workers = 2)
+     fs <- lapply(1:2, FUN = function(i) {
+         future({
+             session_u .... [TRUNCATED] 
[08:10:18.123] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.123] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:10:18.124] | : all.equal() for FutureStrategyList ...
[08:10:18.124] | : . New stack:
[08:10:18.124] | : . List of 1
[08:10:18.124] | : .  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.124] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.124] | : .   ..- attr(*, "init")= logi TRUE
[08:10:18.124] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.124] | : .     ...)  
[08:10:18.124] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.124] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.124] | : .   ..- attr(*, "tweaks")=List of 1
[08:10:18.124] | : .   .. ..$ workers: int 2
[08:10:18.124] | : .   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.124] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.129] | : . Old stack:
[08:10:18.129] | : . List of 1
[08:10:18.129] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.129] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.129] | : .   ..- attr(*, "init")= logi TRUE
[08:10:18.129] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.129] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.129] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.129] | : .   ..- attr(*, "call")= language plan(sequential)
[08:10:18.129] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.133] | : . Not identical
[08:10:18.134] | : . all.equal() for future ...
[08:10:18.134] | : . ' List of 2
[08:10:18.134] | : . '  $ target :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.134] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.134] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:18.134] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.134] | : . '     ...)  
[08:10:18.134] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.134] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.134] | : . '   ..- attr(*, "tweaks")=List of 1
[08:10:18.134] | : . '   .. ..$ workers: int 2
[08:10:18.134] | : . '   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.134] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.134] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.134] | : . '   ..- attr(*, "init")= logi TRUE
[08:10:18.134] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.134] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.134] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.134] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:10:18.139] | : . ' Formals differ
[08:10:18.139] | : . all.equal() for future ... done
[08:10:18.139] | : . Future strategies differ at level 1
[08:10:18.139] | : all.equal() for FutureStrategyList ... done
[08:10:18.139] | : plan(): Setting new future backend stack:
[08:10:18.139] | : List of future strategies:
[08:10:18.139] | : 1. multicore:
[08:10:18.139] | :    - args: function (..., workers = 2L, envir = parent.frame())
[08:10:18.139] | :    - tweaked: TRUE
[08:10:18.139] | :    - call: plan(multicore, workers = 2L)
[08:10:18.140] | : List of 1
[08:10:18.140] | :  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.140] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.140] | :   ..- attr(*, "init")= logi TRUE
[08:10:18.140] | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.140] | :     ...)  
[08:10:18.140] | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.140] | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.140] | :   ..- attr(*, "tweaks")=List of 1
[08:10:18.140] | :   .. ..$ workers: int 2
[08:10:18.140] | :   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.140] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.143] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:10:18.143] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.143] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:10:18.143] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.143] | : . Legacy shutdown of cluster workers ...
[08:10:18.144] | : . ' Stopping existing cluster ...
[08:10:18.144] | : . ' , No pre-existing cluster. Skipping
[08:10:18.144] | : . ' Stopping existing cluster ... done
[08:10:18.144] | : . Legacy shutdown of cluster workers ... done
[08:10:18.144] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:10:18.144] | : plan(): plan_init() of ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:10:18.144] | : . function (..., workers = 2L, envir = parent.frame())  
[08:10:18.144] | : .  - attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.144] | : .  - attr(*, "init")= logi TRUE
[08:10:18.144] | : .  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.144] | : .     ...)  
[08:10:18.144] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.144] | : .  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.144] | : .  - attr(*, "tweaks")=List of 1
[08:10:18.144] | : .   ..$ workers: int 2
[08:10:18.144] | : .  - attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.147] | : . init: TRUE
[08:10:18.147] | : . makeFutureBackend(<tweaked>) ...
[08:10:18.147] | : . ' Backend function: <‘NULL’>
[08:10:18.147] | : . ' Evaluator tweak arguments: [n=1]
[08:10:18.147] | : . ' List of 1
[08:10:18.147] | : . '  $ workers: int 2
[08:10:18.148] | : . ' Evaluator formal arguments: [n=1]
[08:10:18.148] | : . ' List of 1
[08:10:18.148] | : . '  $ workers: int 2
[08:10:18.149] | : . ' Backend factory arguments: [n=1]
[08:10:18.149] | : . ' Dotted pair list of 1
[08:10:18.149] | : . '  $ workers: int 2
[08:10:18.150] | : . ' Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:18.150] | : . makeFutureBackend(<tweaked>) ... done
[08:10:18.150] | : plan(): plan_init() of ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:10:18.151] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.151] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.151] | : plan(): nbrOfWorkers() = 2
[08:10:18.151] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:10:18.151] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.151] future(..., label = NULL) ...
[08:10:18.151] | lazy: FALSE
[08:10:18.151] | stdout: TRUE
[08:10:18.151] | conditions: [n=1] ‘condition’
[08:10:18.152] | gc: FALSE
[08:10:18.152] | earlySignal: FALSE
[08:10:18.152] | getGlobalsAndPackages() ...
[08:10:18.152] | : Searching for globals ...
[08:10:18.218] | : . globals found: [27] ‘{’, ‘session_uuid’, ‘Sys.getpid’, ‘<-’, ‘as.character’, ‘[[’, ‘uuids’, ‘if’, ‘!’, ‘is.null’, ‘attr’, ‘attr<-’, ‘return’, ‘Sys.info’, ‘Sys.getenv’, ‘c’, ‘[’, ‘nzchar’, ‘==’, ‘length’, ‘list’, ‘Sys.time’, ‘stealth_sample’, ‘.Machine’, ‘<<-’, ‘[[<-’, ‘[[<<-’
[08:10:18.218] | : Searching for globals ... done
[08:10:18.218] | : Resolving globals: FALSE
[08:10:18.218] | : Search for packages associated with the globals ...
[08:10:18.219] | : . Packages associated with globals: [2] ‘base’, ‘future’
[08:10:18.220] | : . Packages: [2] ‘base’, ‘future’
[08:10:18.220] | : Search for packages associated with the globals ... done
[08:10:18.220] | : Packages after dropping 'base': [1] ‘future’
[08:10:18.220] | : Packages after dropping non-attached packages: [1] ‘future’
[08:10:18.220] | : globals: [3] ‘session_uuid’, ‘uuids’, ‘stealth_sample’
[08:10:18.220] | : packages: [1] ‘future’
[08:10:18.221] | getGlobalsAndPackages() ... done
[08:10:18.221] | run() for ‘Future’ (<unnamed-1>) ...
[08:10:18.221] | : state: ‘created’
[08:10:18.222] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.222] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.222] | : Using MulticoreFutureBackend ...
[08:10:18.222] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:10:18.222] | : . Launching futures ...
[08:10:18.222] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:18.223] | : . ' , getFutureData() ...
[08:10:18.223] | : . ' , ; getFutureCore() ...
[08:10:18.223] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘future’
[08:10:18.223] | : . ' , ; getFutureCore() ... done
[08:10:18.223] | : . ' , ; getFutureCapture() ...
[08:10:18.223] | : . ' , ; getFutureCapture() ... done
[08:10:18.223] | : . ' , ; getFutureContext() ...
[08:10:18.223] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.224] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:18.224] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.224] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:18.224] | : . ' , ; getFutureContext() ... done
[08:10:18.224] | : . ' , getFutureData() ... done
[08:10:18.225] | : . ' , requestCore(..., workers = 2) ...
[08:10:18.225] | : . ' , requestCore(..., workers = 2) ... done
[08:10:18.228] | : . ' , MulticoreFuture started
[08:10:18.229] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:18.229] | : . Launching futures ... done
[08:10:18.229] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:18.229] | : Using MulticoreFutureBackend ... done
[08:10:18.230] | run() for ‘Future’ (<unnamed-1>) ... done
[08:10:18.230] future(..., label = NULL) ... done
[08:10:18.233] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.233] future(..., label = NULL) ...
[08:10:18.234] | lazy: FALSE
[08:10:18.234] | : . ' , ; Getting full stack: [n=1] ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:18.234] | stdout: TRUE
[08:10:18.234] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.234] | conditions: [n=1] ‘condition’
[08:10:18.234] | gc: FALSE
[08:10:18.234] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.235] | earlySignal: FALSE
[08:10:18.235] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:18.235] | getGlobalsAndPackages() ...
[08:10:18.235] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:18.235] | : Searching for globals ...
[08:10:18.235] | : . ' , ; ` | New stack:
[08:10:18.235] | : . ' , ; ` | List of 1
[08:10:18.235] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.235] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.235] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:18.235] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.235] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.235] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.235] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.235] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.239] | : . ' , ; ` | Old stack:
[08:10:18.240] | : . ' , ; ` | List of 1
[08:10:18.240] | : . ' , ; ` |  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.240] | : . ' , ; ` |     ...)  
[08:10:18.240] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "tweaks")=List of 1
[08:10:18.240] | : . ' , ; ` |   .. ..$ workers: int 2
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.240] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.240] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.240] | : . ' , ; ` |     ...)  
[08:10:18.240] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.240] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.246] | : . ' , ; ` | Not identical
[08:10:18.246] | : . ' , ; ` | all.equal() for future ...
[08:10:18.246] | : . ' , ; ` | : List of 2
[08:10:18.246] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.246] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.246] | : . ' , ; ` | :  $ current:function (..., workers = 2L, envir = parent.frame())  
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.246] | : . ' , ; ` | :     ...)  
[08:10:18.246] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "tweaks")=List of 1
[08:10:18.246] | : . ' , ; ` | :   .. ..$ workers: int 2
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.246] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.246] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.246] | : . ' , ; ` | :     ...)  
[08:10:18.246] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.257] | : . ' , ; ` | : Formals differ
[08:10:18.257] | : . ' , ; ` | all.equal() for future ... done
[08:10:18.257] | : . ' , ; ` | Future strategies differ at level 1
[08:10:18.257] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:18.258] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:18.258] | : . ' , ; ` List of future strategies:
[08:10:18.258] | : . ' , ; ` 1. sequential:
[08:10:18.258] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:18.258] | : . ' , ; `    - tweaked: FALSE
[08:10:18.258] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.259] | : . ' , ; ` List of 1
[08:10:18.259] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.259] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.259] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:18.259] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.259] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.259] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.259] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.259] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.262] | : . ' , ; ` plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:18.262] | : . ' , ; ` plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:18.262] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.262] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:18.263] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.263] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.263] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:18.263] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.263] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.263] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.263] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.265] | : . ' , ; ` | : init: TRUE
[08:10:18.265] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:18.265] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:18.265] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:18.265] | : . ' , ; ` | : .  list()
[08:10:18.266] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:18.266] | : . ' , ; ` | : .  list()
[08:10:18.266] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:18.266] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:18.266] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:18.266] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:18.267] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:18.268] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:18.268] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:18.268] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.268] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:18.268] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:18.268] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.268] | : . ' , assign_globals() ...
[08:10:18.269] | : . ' , List of 3
[08:10:18.269] | : . ' ,  $ session_uuid  :function (pid = Sys.getpid(), attributes = TRUE)  
[08:10:18.269] | : . ' ,  $ uuids         :List of 1
[08:10:18.269] | : . ' ,   ..$ 76013: chr "a4e41cdf1a70dfd31f4c6d6413d6d785"
[08:10:18.269] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:10:18.269] | : . ' ,   .. .. ..$ host  : Named chr "28bb34de9501"
[08:10:18.269] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:18.269] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:10:18.269] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:18.269] | : . ' ,   .. .. ..$ pid   : int 76013
[08:10:18.269] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:18"
[08:10:18.269] | : . ' ,   .. .. ..$ random: int 2147483647
[08:10:18.269] | : . ' ,  $ stealth_sample:function (x, size = length(x), replace = FALSE, ...)  
[08:10:18.269] | : . ' ,  - attr(*, "where")=List of 3
[08:10:18.269] | : . ' ,   ..$ session_uuid  :<environment: R_GlobalEnv> 
[08:10:18.269] | : . ' ,   ..$ uuids         :<environment: 0x55a33e407150> 
[08:10:18.269] | : . ' ,   ..$ stealth_sample:<environment: namespace:future> 
[08:10:18.269] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:10:18.269] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:10:18.269] | : . ' ,  - attr(*, "total_size")= num NA
[08:10:18.269] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:10:18.275] | : . ' , - copied ‘session_uuid’ to environment
[08:10:18.275] | : . ' , - copied ‘uuids’ to environment
[08:10:18.275] | : . ' , - copied ‘stealth_sample’ to environment
[08:10:18.275] | : . ' , assign_globals() ... done
[08:10:18.278] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.279] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.279] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:18.279] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:18.279] | : . ' , ; ` | : New stack:
[08:10:18.279] | : . ' , ; ` | : List of 1
[08:10:18.279] | : . ' , ; ` | :  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.279] | : . ' , ; ` | :     ...)  
[08:10:18.279] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "tweaks")=List of 1
[08:10:18.279] | : . ' , ; ` | :   .. ..$ workers: int 2
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.279] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.279] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.279] | : . ' , ; ` | :     ...)  
[08:10:18.279] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.279] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.285] | : . ' , ; ` | : Old stack:
[08:10:18.285] | : . ' , ; ` | : List of 1
[08:10:18.285] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.285] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.285] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a33f9ba7c8> 
[08:10:18.285] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.285] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.285] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.288] | : . ' , ; ` | : Not identical
[08:10:18.288] | : . ' , ; ` | : all.equal() for future ...
[08:10:18.288] | : . ' , ; ` | : . List of 2
[08:10:18.288] | : . ' , ; ` | : .  $ target :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.288] | : . ' , ; ` | : .     ...)  
[08:10:18.288] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "tweaks")=List of 1
[08:10:18.288] | : . ' , ; ` | : .   .. ..$ workers: int 2
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.288] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.288] | : . ' , ; ` | : .     ...)  
[08:10:18.288] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.288] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.288] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.288] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a33f9ba7c8> 
[08:10:18.288] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.288] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.295] | : . ' , ; ` | : . Formals differ
[08:10:18.295] | : . ' , ; ` | : all.equal() for future ... done
[08:10:18.295] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:18.296] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:18.296] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:18.296] | : . ' , ; ` | List of future strategies:
[08:10:18.296] | : . ' , ; ` | 1. multicore:
[08:10:18.296] | : . ' , ; ` |    - args: function (..., workers = 2L, envir = parent.frame())
[08:10:18.296] | : . ' , ; ` |    - tweaked: TRUE
[08:10:18.296] | : . ' , ; ` |    - call: plan(multicore, workers = 2L)
[08:10:18.296] | : . ' , ; ` | List of 1
[08:10:18.296] | : . ' , ; ` |  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.296] | : . ' , ; ` |     ...)  
[08:10:18.296] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "tweaks")=List of 1
[08:10:18.296] | : . ' , ; ` |   .. ..$ workers: int 2
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.296] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.296] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.296] | : . ' , ; ` |     ...)  
[08:10:18.296] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.296] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.300] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:18.300] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:18.301] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.301] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.301] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:18.301] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:18.301] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.301] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.308] | : . globals found: [27] ‘{’, ‘session_uuid’, ‘Sys.getpid’, ‘<-’, ‘as.character’, ‘[[’, ‘uuids’, ‘if’, ‘!’, ‘is.null’, ‘attr’, ‘attr<-’, ‘return’, ‘Sys.info’, ‘Sys.getenv’, ‘c’, ‘[’, ‘nzchar’, ‘==’, ‘length’, ‘list’, ‘Sys.time’, ‘stealth_sample’, ‘.Machine’, ‘<<-’, ‘[[<-’, ‘[[<<-’
[08:10:18.308] | : Searching for globals ... done
[08:10:18.309] | : Resolving globals: FALSE
[08:10:18.309] | : Search for packages associated with the globals ...
[08:10:18.309] | : . Packages associated with globals: [2] ‘base’, ‘future’
[08:10:18.310] | : . Packages: [2] ‘base’, ‘future’
[08:10:18.310] | : Search for packages associated with the globals ... done
[08:10:18.310] | : Packages after dropping 'base': [1] ‘future’
[08:10:18.310] | : Packages after dropping non-attached packages: [1] ‘future’
[08:10:18.310] | : globals: [3] ‘session_uuid’, ‘uuids’, ‘stealth_sample’
[08:10:18.311] | : packages: [1] ‘future’
[08:10:18.311] | getGlobalsAndPackages() ... done
[08:10:18.311] | run() for ‘Future’ (<unnamed-2>) ...
[08:10:18.311] | : state: ‘created’
[08:10:18.311] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.311] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.311] | : Using MulticoreFutureBackend ...
[08:10:18.312] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:10:18.312] | : . Launching futures ...
[08:10:18.312] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:10:18.312] | : . ' , getFutureData() ...
[08:10:18.312] | : . ' , ; getFutureCore() ...
[08:10:18.312] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘future’
[08:10:18.312] | : . ' , ; getFutureCore() ... done
[08:10:18.312] | : . ' , ; getFutureCapture() ...
[08:10:18.312] | : . ' , ; getFutureCapture() ... done
[08:10:18.313] | : . ' , ; getFutureContext() ...
[08:10:18.313] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.313] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:10:18.313] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.313] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:10:18.313] | : . ' , ; getFutureContext() ... done
[08:10:18.313] | : . ' , getFutureData() ... done
[08:10:18.314] | : . ' , requestCore(..., workers = 2) ...
[08:10:18.314] | : . ' , requestCore(..., workers = 2) ... done
[08:10:18.321] | : . ' , MulticoreFuture started
[08:10:18.321] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:10:18.322] | : . Launching futures ... done
[08:10:18.322] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:10:18.322] | : Using MulticoreFutureBackend ... done
[08:10:18.322] | run() for ‘Future’ (<unnamed-2>) ... done
[08:10:18.323] future(..., label = NULL) ... done
[08:10:18.324] value() for list ...
[08:10:18.324] | recursive: 0
[08:10:18.324] | reduce: FALSE
[08:10:18.325] | length: 2

[08:10:18.326] | Number of remaining objects: 2
[08:10:18.326] | checking value #1:
[08:10:18.326] | 'obj' is MulticoreFuture
[08:10:18.327] | readImmediateCondition() ...
[08:10:18.327] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.327] | : Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.327] | : . ' , ; Getting full stack: [n=1] ‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:10:18.328] | : Number of RDS files: 0
[08:10:18.328] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.328] | : Returned conditions set:
[08:10:18.328] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.329] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:18.328] | :  list()
[08:10:18.329] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:10:18.329] | readImmediateCondition() ... done
[08:10:18.329] | : . ' , ; ` | New stack:
[08:10:18.329] | MulticoreFuture #1
[08:10:18.329] | signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:10:18.330] | : nx: 2
[08:10:18.330] | : relay: TRUE
[08:10:18.330] | : stdout: TRUE
[08:10:18.330] | : signal: TRUE
[08:10:18.330] | : resignal: FALSE
[08:10:18.330] | : force: TRUE
[08:10:18.331] | : relayed: [n=2] FALSE, FALSE
[08:10:18.331] | : queued futures: [n=2] FALSE, FALSE
[08:10:18.331] | : until=1
[08:10:18.331] | : relaying element #1
[08:10:18.332] | : value() for MulticoreFuture (<unnamed-1>) ...
[08:10:18.333] | : . result() for MulticoreFuture ...
[08:10:18.329] | : . ' , ; ` | List of 1
[08:10:18.329] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.329] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.329] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:10:18.329] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.329] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.329] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.329] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.329] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.333] | : . ' , ; ` | Old stack:
[08:10:18.334] | : . ' readImmediateCondition() ...
[08:10:18.334] | : . ' , Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.335] | : . ' , Number of RDS files: 0
[08:10:18.335] | : . ' , Returned conditions set:
[08:10:18.335] | : . ' ,  list()
[08:10:18.335] | : . ' readImmediateCondition() ... done
[08:10:18.337] | : . ' result() for MulticoreFuture ...
[08:10:18.337] | : . ' result() for MulticoreFuture ... done
[08:10:18.337] | : . ' signalConditions() ...
[08:10:18.337] | : . ' , include = ‘immediateCondition’
[08:10:18.337] | : . ' , exclude = 
[08:10:18.337] | : . ' , resignal = FALSE
[08:10:18.337] | : . ' , Number of conditions: 6
[08:10:18.338] | : . ' ,  int 6
[08:10:18.338] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.338] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.339] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.339] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.339] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.339] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.339] | : . ' signalConditions() ... done
[08:10:18.339] | : . result() for MulticoreFuture ... done
[08:10:18.339] | : . result() for MulticoreFuture ...
[08:10:18.340] | : . result() for MulticoreFuture ... done
[08:10:18.340] | : . signalConditions() ...
[08:10:18.340] | : . ' include = ‘immediateCondition’
[08:10:18.340] | : . ' exclude = 
[08:10:18.340] | : . ' resignal = FALSE
[08:10:18.340] | : . ' Number of conditions: 6
[08:10:18.340] | : . '  int 6
[08:10:18.341] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.341] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.334] | : . ' , ; ` | List of 1
[08:10:18.334] | : . ' , ; ` |  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.334] | : . ' , ; ` |     ...)  
[08:10:18.334] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "tweaks")=List of 1
[08:10:18.334] | : . ' , ; ` |   .. ..$ workers: int 2
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.334] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.334] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.334] | : . ' , ; ` |     ...)  
[08:10:18.334] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.334] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.341] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.341] | : . ' , ; ` | Not identical
[08:10:18.341] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.341] | : . ' , ; ` | all.equal() for future ...
[08:10:18.341] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.342] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.342] | : . signalConditions() ... done
[08:10:18.342] | : . relay stdout ...
[08:10:18.342] | : . relay stdout ... done
[08:10:18.342] | : . check for misuse ...
[08:10:18.342] | : . check for misuse ... done
[08:10:18.342] | : value() for MulticoreFuture (<unnamed-1>) ... done
[08:10:18.343] | : result() for MulticoreFuture ...
[08:10:18.343] | : result() for MulticoreFuture ... done
[08:10:18.343] | : signalConditions() ...
[08:10:18.343] | : . include = ‘immediateCondition’
[08:10:18.343] | : . exclude = 
[08:10:18.343] | : . resignal = FALSE
[08:10:18.343] | : . Number of conditions: 6
[08:10:18.344] | : .  int 6
[08:10:18.344] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.344] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.344] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.345] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.345] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.345] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.345] | : signalConditions() ... done
[08:10:18.345] | : result() for MulticoreFuture ...
[08:10:18.345] | : result() for MulticoreFuture ... done
[08:10:18.345] | : signalConditions() ...
[08:10:18.346] | : . include = ‘condition’
[08:10:18.346] | : . exclude = ‘error’, ‘immediateCondition’
[08:10:18.346] | : . resignal = TRUE
[08:10:18.346] | : . Number of conditions: 6
[08:10:18.346] | : .  int 6
[08:10:18.346] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.347] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.231] | : . ' , attachPackages() ...
[08:10:18.347] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.347] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.232] | : . ' , ; packages: [n=1] ‘future’
[08:10:18.347] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.347] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.232] | : . ' , attachPackages() ... done
[08:10:18.347] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.348] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.232] | : . ' , attachPackages() ...
[08:10:18.348] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.348] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.232] | : . ' , ; packages: [n=1] ‘future’
[08:10:18.348] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.348] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.233] | : . ' , attachPackages() ... done
[08:10:18.348] | : signalConditions() ... done
[08:10:18.349] | : relayed: [n=2] TRUE, FALSE
[08:10:18.349] | : queued futures: [n=2] TRUE, FALSE
[08:10:18.349] | signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:10:18.349] | value(<MulticoreFuture>, ...) ...
[08:10:18.349] | value(<MulticoreFuture>, ...) ... done
[08:10:18.349] | value() for MulticoreFuture (<unnamed-1>) ...
[08:10:18.342] | : . ' , ; ` | : List of 2
[08:10:18.342] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.342] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.342] | : . ' , ; ` | :  $ current:function (..., workers = 2L, envir = parent.frame())  
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.342] | : . ' , ; ` | :     ...)  
[08:10:18.342] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "tweaks")=List of 1
[08:10:18.342] | : . ' , ; ` | :   .. ..$ workers: int 2
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.342] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.342] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.342] | : . ' , ; ` | :     ...)  
[08:10:18.342] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.349] | : result() for MulticoreFuture ...
[08:10:18.350] | : result() for MulticoreFuture ... done
[08:10:18.350] | : result() for MulticoreFuture ...
[08:10:18.350] | : result() for MulticoreFuture ... done
[08:10:18.350] | : . ' , ; ` | : Formals differ
[08:10:18.350] | : signalConditions() ...
[08:10:18.350] | : . ' , ; ` | all.equal() for future ... done
[08:10:18.350] | : . include = ‘immediateCondition’
[08:10:18.350] | : . ' , ; ` | Future strategies differ at level 1
[08:10:18.350] | : . exclude = 
[08:10:18.350] | : . resignal = FALSE
[08:10:18.350] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:10:18.351] | : . Number of conditions: 6
[08:10:18.351] | : . ' , ; ` plan(): Setting new future backend stack:
[08:10:18.351] | : .  int 6
[08:10:18.351] | : . ' , ; ` List of future strategies:
[08:10:18.351] | : . ' , ; ` 1. sequential:
[08:10:18.351] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:10:18.351] | : . ' , ; `    - tweaked: FALSE
[08:10:18.351] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.351] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.351] | : . already signaled, skipping
[08:10:18.352] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.352] | : . already signaled, skipping
[08:10:18.352] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.352] | : . already signaled, skipping
[08:10:18.352] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.352] | : . already signaled, skipping
[08:10:18.352] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.353] | : . already signaled, skipping
[08:10:18.353] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.353] | : . already signaled, skipping
[08:10:18.353] | : signalConditions() ... done
[08:10:18.353] | : check for misuse ...
[08:10:18.353] | : check for misuse ... done
[08:10:18.353] | value() for MulticoreFuture (<unnamed-1>) ... done
[08:10:18.354] | value: <character>
[08:10:18.354] | signalConditionsASAP(MulticoreFuture, pos=1) ...
[08:10:18.354] | : nx: 2
[08:10:18.354] | : relay: TRUE
[08:10:18.354] | : stdout: TRUE
[08:10:18.354] | : signal: TRUE
[08:10:18.354] | : resignal: FALSE
[08:10:18.354] | : force: TRUE
[08:10:18.355] | : relayed: [n=2] TRUE, FALSE
[08:10:18.355] | : queued futures: [n=2] TRUE, FALSE
[08:10:18.351] | : . ' , ; ` List of 1
[08:10:18.351] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.351] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.351] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:10:18.351] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.351] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.351] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.351] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.351] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.355] | : until=2
[08:10:18.355] | : . ' , ; ` plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:18.355] | : . ' , ; ` plan(): plan_cleanup(‘tweaked’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:18.355] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.356] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:10:18.355] | : relaying element #2
[08:10:18.358] | : relayed: [n=2] TRUE, FALSE
[08:10:18.358] | : queued futures: [n=2] TRUE, FALSE
[08:10:18.359] | signalConditionsASAP(MulticoreFuture, pos=1) ... done
[08:10:18.359] | resolve() for MulticoreFuture ...
[08:10:18.359] | resolve() for MulticoreFuture ... done
[08:10:18.360] | length: 1 (resolved future 1)
[08:10:18.360] value() for list ... done
[08:10:18.360] checking value #2:
[08:10:18.360] 'obj' is MulticoreFuture
[08:10:18.356] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.356] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.356] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:10:18.356] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.356] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.356] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.356] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.362] | : . ' , ; ` | : init: TRUE
[08:10:18.362] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:10:18.362] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:10:18.362] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:10:18.362] | : . ' , ; ` | : .  list()
[08:10:18.362] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:10:18.363] | : . ' , ; ` | : .  list()
[08:10:18.363] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:10:18.363] | : . ' , ; ` | : . Dotted pair list of 2
[08:10:18.363] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:10:18.363] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:10:18.364] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:10:18.364] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:10:18.365] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:10:18.365] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.365] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:10:18.365] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:18.365] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.365] | : . ' , assign_globals() ...
[08:10:18.370] readImmediateCondition() ...
[08:10:18.371] | Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.371] | Number of RDS files: 0
[08:10:18.371] | Returned conditions set:
[08:10:18.371] |  list()
[08:10:18.371] readImmediateCondition() ... done
[08:10:18.365] | : . ' , List of 3
[08:10:18.365] | : . ' ,  $ session_uuid  :function (pid = Sys.getpid(), attributes = TRUE)  
[08:10:18.365] | : . ' ,  $ uuids         :List of 1
[08:10:18.365] | : . ' ,   ..$ 76013: chr "a4e41cdf1a70dfd31f4c6d6413d6d785"
[08:10:18.365] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:10:18.365] | : . ' ,   .. .. ..$ host  : Named chr "28bb34de9501"
[08:10:18.365] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:10:18.365] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:10:18.365] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:10:18.365] | : . ' ,   .. .. ..$ pid   : int 76013
[08:10:18.365] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:10:18"
[08:10:18.365] | : . ' ,   .. .. ..$ random: int 2147483647
[08:10:18.365] | : . ' ,  $ stealth_sample:function (x, size = length(x), replace = FALSE, ...)  
[08:10:18.365] | : . ' ,  - attr(*, "where")=List of 3
[08:10:18.365] | : . ' ,   ..$ session_uuid  :<environment: R_GlobalEnv> 
[08:10:18.365] | : . ' ,   ..$ uuids         :<environment: 0x55a33e407150> 
[08:10:18.365] | : . ' ,   ..$ stealth_sample:<environment: namespace:future> 
[08:10:18.365] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:10:18.365] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:10:18.365] | : . ' ,  - attr(*, "total_size")= num NA
[08:10:18.365] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:10:18.372] | : . ' , - copied ‘session_uuid’ to environment
[08:10:18.372] | : . ' , - copied ‘uuids’ to environment
[08:10:18.372] | : . ' , - copied ‘stealth_sample’ to environment
[08:10:18.372] | : . ' , assign_globals() ... done
[08:10:18.376] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.376] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:10:18.376] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:10:18.376] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:10:18.376] | : . ' , ; ` | : New stack:
[08:10:18.376] | : . ' , ; ` | : List of 1
[08:10:18.376] | : . ' , ; ` | :  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.376] | : . ' , ; ` | :     ...)  
[08:10:18.376] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "tweaks")=List of 1
[08:10:18.376] | : . ' , ; ` | :   .. ..$ workers: int 2
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.376] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.376] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.376] | : . ' , ; ` | :     ...)  
[08:10:18.376] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.376] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.380] | : . ' , ; ` | : Old stack:
[08:10:18.382] Number of remaining objects: 1
[08:10:18.382] checking value #2:
[08:10:18.382] 'obj' is MulticoreFuture
[08:10:18.380] | : . ' , ; ` | : List of 1
[08:10:18.380] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.380] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.380] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a33de4b658> 
[08:10:18.380] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.380] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.380] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.386] | : . ' , ; ` | : Not identical
[08:10:18.386] | : . ' , ; ` | : all.equal() for future ...
[08:10:18.386] | : . ' , ; ` | : . List of 2
[08:10:18.386] | : . ' , ; ` | : .  $ target :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.386] | : . ' , ; ` | : .     ...)  
[08:10:18.386] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "tweaks")=List of 1
[08:10:18.386] | : . ' , ; ` | : .   .. ..$ workers: int 2
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.386] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.386] | : . ' , ; ` | : .     ...)  
[08:10:18.386] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.386] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.386] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:10:18.386] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a33de4b658> 
[08:10:18.386] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:10:18.386] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:10:18.392] | : . ' , ; ` | : . Formals differ
[08:10:18.392] readImmediateCondition() ...
[08:10:18.392] | : . ' , ; ` | : all.equal() for future ... done
[08:10:18.392] | : . ' , ; ` | : Future strategies differ at level 1
[08:10:18.392] | Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.393] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:10:18.393] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:10:18.393] | Number of RDS files: 0
[08:10:18.393] | Returned conditions set:
[08:10:18.393] | : . ' , ; ` | List of future strategies:
[08:10:18.393] | : . ' , ; ` | 1. multicore:
[08:10:18.393] | : . ' , ; ` |    - args: function (..., workers = 2L, envir = parent.frame())
[08:10:18.393] | : . ' , ; ` |    - tweaked: TRUE
[08:10:18.393] | : . ' , ; ` |    - call: plan(multicore, workers = 2L)
[08:10:18.393] |  list()
[08:10:18.393] readImmediateCondition() ... done
[08:10:18.393] | : . ' , ; ` | List of 1
[08:10:18.393] | : . ' , ; ` |  $ :function (..., workers = 2L, envir = parent.frame())  
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:5] "tweaked" "multicore" "multiprocess" "future" ...
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.393] | : . ' , ; ` |     ...)  
[08:10:18.393] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "tweaks")=List of 1
[08:10:18.393] | : . ' , ; ` |   .. ..$ workers: int 2
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "call")= language plan(multicore, workers = 2L)
[08:10:18.393] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55a340240cd0> 
[08:10:18.393] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:10:18.393] | : . ' , ; ` |     ...)  
[08:10:18.393] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:10:18.393] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:10:18.397] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:10:18.397] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:10:18.397] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:10:18.397] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:10:18.398] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:10:18.398] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:10:18.398] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.398] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:10:18.403] Number of remaining objects: 1
[08:10:18.404] checking value #2:
[08:10:18.404] 'obj' is MulticoreFuture
[08:10:18.404] readImmediateCondition() ...
[08:10:18.404] | Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.404] | Number of RDS files: 0
[08:10:18.404] | Returned conditions set:
[08:10:18.404] |  list()
[08:10:18.405] readImmediateCondition() ... done
[08:10:18.405] MulticoreFuture #2
[08:10:18.405] signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:10:18.405] | nx: 2
[08:10:18.405] | relay: TRUE
[08:10:18.405] | stdout: TRUE
[08:10:18.405] | signal: TRUE
[08:10:18.405] | resignal: FALSE
[08:10:18.405] | force: TRUE
[08:10:18.406] | relayed: [n=2] TRUE, FALSE
[08:10:18.406] | queued futures: [n=2] TRUE, FALSE
[08:10:18.406] | until=2
[08:10:18.406] | relaying element #2
[08:10:18.406] | value() for MulticoreFuture (<unnamed-2>) ...
[08:10:18.406] | : result() for MulticoreFuture ...
[08:10:18.407] | : . readImmediateCondition() ...
[08:10:18.407] | : . ' Path: ‘/tmp/Rtmp7zhrYz/.future/immediateConditions’
[08:10:18.407] | : . ' Number of RDS files: 0
[08:10:18.407] | : . ' Returned conditions set:
[08:10:18.407] | : . '  list()
[08:10:18.407] | : . readImmediateCondition() ... done
[08:10:18.408] | : . result() for MulticoreFuture ...
[08:10:18.408] | : . result() for MulticoreFuture ... done
[08:10:18.408] | : . signalConditions() ...
[08:10:18.408] | : . ' include = ‘immediateCondition’
[08:10:18.408] | : . ' exclude = 
[08:10:18.408] | : . ' resignal = FALSE
[08:10:18.408] | : . ' Number of conditions: 6
[08:10:18.408] | : . '  int 6
[08:10:18.409] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.409] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.409] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.409] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.409] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.409] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.410] | : . signalConditions() ... done
[08:10:18.410] | : result() for MulticoreFuture ... done
[08:10:18.410] | : result() for MulticoreFuture ...
[08:10:18.410] | : result() for MulticoreFuture ... done
[08:10:18.410] | : signalConditions() ...
[08:10:18.410] | : . include = ‘immediateCondition’
[08:10:18.410] | : . exclude = 
[08:10:18.410] | : . resignal = FALSE
[08:10:18.410] | : . Number of conditions: 6
[08:10:18.411] | : .  int 6
[08:10:18.411] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.411] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.411] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.411] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.411] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.412] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.412] | : signalConditions() ... done
[08:10:18.412] | : relay stdout ...
[08:10:18.412] | : relay stdout ... done
[08:10:18.412] | : check for misuse ...
[08:10:18.412] | : check for misuse ... done
[08:10:18.412] | value() for MulticoreFuture (<unnamed-2>) ... done
[08:10:18.412] | result() for MulticoreFuture ...
[08:10:18.412] | result() for MulticoreFuture ... done
[08:10:18.413] | signalConditions() ...
[08:10:18.413] | : include = ‘immediateCondition’
[08:10:18.413] | : exclude = 
[08:10:18.413] | : resignal = FALSE
[08:10:18.413] | : Number of conditions: 6
[08:10:18.413] | :  int 6
[08:10:18.413] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.414] | signalConditions() ... done
[08:10:18.414] | result() for MulticoreFuture ...
[08:10:18.414] | result() for MulticoreFuture ... done
[08:10:18.414] | signalConditions() ...
[08:10:18.415] | : include = ‘condition’
[08:10:18.415] | : exclude = ‘error’, ‘immediateCondition’
[08:10:18.415] | : resignal = TRUE
[08:10:18.415] | : Number of conditions: 6
[08:10:18.415] | :  int 6
[08:10:18.415] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.415] | : Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.325] | : . ' , attachPackages() ...
[08:10:18.416] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.416] | : Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.325] | : . ' , ; packages: [n=1] ‘future’
[08:10:18.416] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.416] | : Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.326] | : . ' , attachPackages() ... done
[08:10:18.416] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.416] | : Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.326] | : . ' , attachPackages() ...
[08:10:18.416] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.417] | : Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.326] | : . ' , ; packages: [n=1] ‘future’
[08:10:18.417] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.417] | : Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:10:18.327] | : . ' , attachPackages() ... done
[08:10:18.417] | signalConditions() ... done
[08:10:18.417] | relayed: [n=2] TRUE, TRUE
[08:10:18.417] | queued futures: [n=2] TRUE, TRUE
[08:10:18.417] signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:10:18.417] value(<MulticoreFuture>, ...) ...
[08:10:18.417] value(<MulticoreFuture>, ...) ... done
[08:10:18.417] value() for MulticoreFuture (<unnamed-2>) ...
[08:10:18.418] | result() for MulticoreFuture ...
[08:10:18.418] | result() for MulticoreFuture ... done
[08:10:18.418] | result() for MulticoreFuture ...
[08:10:18.418] | result() for MulticoreFuture ... done
[08:10:18.418] | signalConditions() ...
[08:10:18.418] | : include = ‘immediateCondition’
[08:10:18.418] | : exclude = 
[08:10:18.418] | : resignal = FALSE
[08:10:18.418] | : Number of conditions: 6
[08:10:18.419] | :  int 6
[08:10:18.419] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.419] | : already signaled, skipping
[08:10:18.419] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.419] | : already signaled, skipping
[08:10:18.419] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.419] | : already signaled, skipping
[08:10:18.420] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.420] | : already signaled, skipping
[08:10:18.420] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.420] | : already signaled, skipping
[08:10:18.420] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:10:18.420] | : already signaled, skipping
[08:10:18.420] | signalConditions() ... done
[08:10:18.420] | check for misuse ...
[08:10:18.420] | check for misuse ... done
[08:10:18.420] value() for MulticoreFuture (<unnamed-2>) ... done
[08:10:18.421] value: <character>
[08:10:18.421] signalConditionsASAP(MulticoreFuture, pos=2) ...
[08:10:18.421] | nx: 2
[08:10:18.421] | relay: TRUE
[08:10:18.421] | stdout: TRUE
[08:10:18.423] | signal: TRUE
[08:10:18.423] | resignal: FALSE
[08:10:18.423] | force: TRUE
[08:10:18.423] | relayed: [n=2] TRUE, TRUE
[08:10:18.423] | queued futures: [n=2] TRUE, TRUE
[08:10:18.423] | until=2
[08:10:18.423] | relayed: [n=2] TRUE, TRUE
[08:10:18.423] | queued futures: [n=2] TRUE, TRUE
[08:10:18.423] signalConditionsASAP(MulticoreFuture, pos=2) ... done
[08:10:18.424] resolve() for MulticoreFuture ...
[08:10:18.424] resolve() for MulticoreFuture ... done
[08:10:18.424] length: 0 (resolved future 2)

[08:10:18.424] Relaying remaining futures ...
[08:10:18.424] | signalConditionsASAP(NULL, pos=0) ...
[08:10:18.424] | : nx: 2
[08:10:18.424] | : relay: TRUE
[08:10:18.424] | : stdout: TRUE
[08:10:18.424] | : signal: TRUE
[08:10:18.425] | : resignal: FALSE
[08:10:18.425] | : force: TRUE
[08:10:18.425] | : relayed: [n=2] TRUE, TRUE
[08:10:18.425] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:10:18.425] | : relayed: [n=2] TRUE, TRUE
[08:10:18.425] | : queued futures: [n=2] TRUE, TRUE
[08:10:18.425] | signalConditionsASAP(NULL, pos=0) ... done
[08:10:18.425] Relaying remaining futures ... done

[1] "603c0e5953b9f6f5f43772e00d094dff" "32332b067e3ff95f0fb7eb2099323964"

> message("*** session_uuid() ... DONE")
*** session_uuid() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.3s, sys.self=0.03s, elapsed=0.4s, user.child=0.1s, sys.child=0.03s
Test ‘uuid’ ... success
> 
