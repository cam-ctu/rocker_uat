
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-error_on_warn_2.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("error_on_warn_2")
Test ‘error_on_warn_2’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-error_on_warn_2.R’

> library(future)
[08:07:37.533] Option 'future.startup.script': TRUE
[08:07:37.534] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:07:37.534] Future startup scripts found: <none>

> message("*** options(warn = 2) relays an error ...")
*** options(warn = 2) relays an error ...

> for (strategy in supportedStrategies()) {
+     message("Type of future: ", strategy)
+     plan(strategy)
+     f <- future({
+         stopifnot(g .... [TRUNCATED] 
Type of future: sequential
[08:07:37.542] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.545] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:37.545] | : all.equal() for FutureStrategyList ...
[08:07:37.545] | : . New stack:
[08:07:37.545] | : . List of 1
[08:07:37.545] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.545] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.545] | : .   ..- attr(*, "init")= logi TRUE
[08:07:37.545] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.545] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.545] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.545] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:37.545] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.550] | : . Old stack:
[08:07:37.550] | : . List of 1
[08:07:37.550] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.550] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.550] | : .   ..- attr(*, "init")= logi TRUE
[08:07:37.550] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.550] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.550] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.550] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:37.550] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.553] | : . Not identical
[08:07:37.553] | : . all.equal() for future ...
[08:07:37.553] | : . ' List of 2
[08:07:37.553] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.553] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.553] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:37.553] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.553] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.553] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.553] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:37.553] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.553] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.553] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:37.553] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.553] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.553] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.553] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:37.558] | : . all.equal() for future ... done
[08:07:37.558] | : all.equal() for FutureStrategyList ... done
[08:07:37.559] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:37.559] | : List of future strategies:
[08:07:37.559] | : 1. sequential:
[08:07:37.559] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:37.559] | :    - tweaked: FALSE
[08:07:37.559] | :    - call: plan(sequential)
[08:07:37.559] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:37.560] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.560] future(..., label = NULL) ...
[08:07:37.560] | lazy: FALSE
[08:07:37.560] | stdout: TRUE
[08:07:37.560] | conditions: [n=1] ‘condition’
[08:07:37.560] | gc: FALSE
[08:07:37.560] | earlySignal: FALSE
[08:07:37.561] | getGlobalsAndPackages() ...
[08:07:37.561] | : Searching for globals ...
[08:07:37.592] | : . globals found: [9] ‘{’, ‘stopifnot’, ‘==’, ‘getOption’, ‘<-’, ‘options’, ‘on.exit’, ‘log’, ‘-’
[08:07:37.593] | : Searching for globals ... done
[08:07:37.593] | : Resolving globals: FALSE
[08:07:37.593] | : Search for packages associated with the globals ...
[08:07:37.593] | : . Packages associated with globals: [1] ‘base’
[08:07:37.594] | : . Packages: [1] ‘base’
[08:07:37.594] | : Search for packages associated with the globals ... done
[08:07:37.594] | : Packages after dropping 'base': [0] 
[08:07:37.594] | : globals: [0] 
[08:07:37.594] | : packages: [0] 
[08:07:37.594] | getGlobalsAndPackages() ... done
[08:07:37.595] | run() for ‘Future’ (<unnamed-1>) ...
[08:07:37.595] | : state: ‘created’
[08:07:37.595] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.596] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:37.596] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.596] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.596] | : . '  - attr(*, "init")= logi TRUE
[08:07:37.596] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.596] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.596] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.596] | : . '  - attr(*, "call")= language plan(sequential)
[08:07:37.600] | : . ' init: TRUE
[08:07:37.601] | : . ' makeFutureBackend(<sequential>) ...
[08:07:37.601] | : . ' , Backend function: <‘NULL’>
[08:07:37.601] | : . ' , Evaluator tweak arguments: [n=0]
[08:07:37.601] | : . ' ,  list()
[08:07:37.601] | : . ' , Evaluator formal arguments: [n=2]
[08:07:37.601] | : . ' ,  list()
[08:07:37.602] | : . ' , Backend factory arguments: [n=2]
[08:07:37.602] | : . ' , Dotted pair list of 2
[08:07:37.602] | : . ' ,  $ gc         : logi FALSE
[08:07:37.602] | : . ' ,  $ earlySignal: logi FALSE
[08:07:37.603] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:37.603] | : . ' makeFutureBackend(<sequential>) ... done
[08:07:37.603] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:37.603] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.603] | : Using SequentialFutureBackend ...
[08:07:37.604] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:37.604] | : . Launching futures ...
[08:07:37.604] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:37.604] | : . ' , getFutureData() ...
[08:07:37.604] | : . ' , ; getFutureCore() ...
[08:07:37.605] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:07:37.605] | : . ' , ; getFutureCore() ... done
[08:07:37.605] | : . ' , ; getFutureCapture() ...
[08:07:37.605] | : . ' , ; getFutureCapture() ... done
[08:07:37.605] | : . ' , ; getFutureContext() ...
[08:07:37.605] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.605] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:07:37.606] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.606] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:07:37.606] | : . ' , ; getFutureContext() ... done
[08:07:37.606] | : . ' , getFutureData() ... done
[08:07:37.609] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.609] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:37.609] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.609] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.609] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:37.610] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:07:37.610] | : . ' , ; ` | New stack:
[08:07:37.610] | : . ' , ; ` | List of 1
[08:07:37.610] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.610] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.610] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:37.610] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.610] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.610] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.610] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.610] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.613] | : . ' , ; ` | Old stack:
[08:07:37.613] | : . ' , ; ` | List of 1
[08:07:37.613] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.613] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:07:37.613] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.613] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.613] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.613] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.616] | : . ' , ; ` | Not identical
[08:07:37.616] | : . ' , ; ` | all.equal() for future ...
[08:07:37.616] | : . ' , ; ` | : List of 2
[08:07:37.616] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.616] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.616] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.616] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:37.616] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.616] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.616] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.622] | : . ' , ; ` | all.equal() for future ... done
[08:07:37.622] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:07:37.622] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:37.622] | : . ' , ; ` List of future strategies:
[08:07:37.622] | : . ' , ; ` 1. sequential:
[08:07:37.622] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:37.622] | : . ' , ; `    - tweaked: FALSE
[08:07:37.622] | : . ' , ; `    - call: plan(sequential)
[08:07:37.622] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:37.623] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.626] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.626] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.626] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:37.628] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:37.628] | : . ' , ; ` | : New stack:
[08:07:37.629] | : . ' , ; ` | : List of 1
[08:07:37.629] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.629] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:37.629] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.629] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.629] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.629] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.632] | : . ' , ; ` | : Old stack:
[08:07:37.632] | : . ' , ; ` | : List of 1
[08:07:37.632] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.632] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:37.632] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.632] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.632] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.632] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.635] | : . ' , ; ` | : Identical
[08:07:37.636] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:37.636] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:37.636] | : . ' , ; ` | List of future strategies:
[08:07:37.636] | : . ' , ; ` | 1. sequential:
[08:07:37.636] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:37.636] | : . ' , ; ` |    - tweaked: FALSE
[08:07:37.636] | : . ' , ; ` |    - call: plan(sequential)
[08:07:37.636] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:37.636] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.637] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.640] | : . ' , SequentialFuture started (and completed)
[08:07:37.640] | : . ' , signalConditions() ...
[08:07:37.640] | : . ' , ; include = ‘immediateCondition’
[08:07:37.640] | : . ' , ; exclude = 
[08:07:37.640] | : . ' , ; resignal = FALSE
[08:07:37.641] | : . ' , ; Number of conditions: 7
[08:07:37.641] | : . ' , ;  int 7
[08:07:37.641] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.641] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.641] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.641] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.642] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.642] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.642] | : . ' , ; Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.642] | : . ' , signalConditions() ... done
[08:07:37.642] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:37.642] | : . Launching futures ... done
[08:07:37.642] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:37.642] | : Using SequentialFutureBackend ... done
[08:07:37.643] | run() for ‘Future’ (<unnamed-1>) ... done
[08:07:37.643] future(..., label = NULL) ... done
[08:07:37.643] value() for SequentialFuture (<unnamed-1>) ...
[08:07:37.643] | signalConditions() ...
[08:07:37.643] | : include = ‘immediateCondition’
[08:07:37.644] | : exclude = 
[08:07:37.644] | : resignal = FALSE
[08:07:37.644] | : Number of conditions: 7
[08:07:37.644] | :  int 7
[08:07:37.644] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.644] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.644] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.645] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.645] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.645] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.645] | : Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.645] | signalConditions() ... done
[08:07:37.645] | relay stdout ...
[08:07:37.645] | relay stdout ... done
[08:07:37.645] | check for misuse ...
[08:07:37.645] | check for misuse ... done
[08:07:37.646] | relay conditions ...
[08:07:37.646] | : Future state: ‘finished’
[08:07:37.646] | : signalConditions() ...
[08:07:37.646] | : . include = ‘condition’
[08:07:37.646] | : . exclude = ‘immediateCondition’
[08:07:37.646] | : . resignal = TRUE
[08:07:37.646] | : . Number of conditions: 7
[08:07:37.646] | : .  int 7
[08:07:37.647] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.647] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.607] | : . ' , attachPackages() ...
[08:07:37.647] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.647] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.608] | : . ' , ; packages: [n=1] ‘future’
[08:07:37.647] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.647] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.608] | : . ' , attachPackages() ... done
[08:07:37.647] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.647] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.608] | : . ' , attachPackages() ...
[08:07:37.648] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.648] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.608] | : . ' , ; packages: [n=0] 
[08:07:37.648] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.648] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.608] | : . ' , attachPackages() ... done
[08:07:37.648] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.648] | : . Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:07:37.648] | : signalConditions() ... done
[08:07:37.649] | relay conditions ... done
<simpleError in eval(quote({    {        stopifnot(getOption("warn") == 0)        oopts <- options(warn = 2)        on.exit(options(oopts))        log(-1)        42L    }}), new.env()): getOption("warn") == 0 is not TRUE>
Type of future: multicore
[08:07:37.649] | plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.649] | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:37.649] | : . all.equal() for FutureStrategyList ...
[08:07:37.649] | : . ' New stack:
[08:07:37.649] | : . ' List of 1
[08:07:37.649] | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.649] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.649] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.649] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:37.649] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.649] | : . '     ...)  
[08:07:37.649] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.649] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.649] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:37.649] | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.654] | : . ' Old stack:
[08:07:37.654] | : . ' List of 1
[08:07:37.654] | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.654] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.654] | : . '   ..- attr(*, "init")= chr "done"
[08:07:37.654] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.654] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.654] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.654] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:37.654] | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.654] | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.654] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.654] | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.658] | : . ' Not identical
[08:07:37.658] | : . ' all.equal() for future ...
[08:07:37.658] | : . ' , List of 2
[08:07:37.658] | : . ' ,  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.658] | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.658] | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.658] | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:37.658] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.658] | : . ' ,     ...)  
[08:07:37.658] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.658] | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.658] | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:37.658] | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.658] | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.658] | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:37.658] | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.658] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.658] | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.658] | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:07:37.658] | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559566e42318> 
[08:07:37.658] | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.658] | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.663] | : . ' , Formals differ
[08:07:37.663] | : . ' all.equal() for future ... done
[08:07:37.663] | : . ' Future strategies differ at level 1
[08:07:37.663] | : . all.equal() for FutureStrategyList ... done
[08:07:37.663] | : . plan(): Setting new future backend stack:
[08:07:37.664] | : . List of future strategies:
[08:07:37.664] | : . 1. multicore:
[08:07:37.664] | : .    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:37.664] | : .    - tweaked: FALSE
[08:07:37.664] | : .    - call: plan(strategy)
[08:07:37.664] | : . List of 1
[08:07:37.664] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.664] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.664] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.664] | : .   ..- attr(*, "init")= logi TRUE
[08:07:37.664] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.664] | : .     ...)  
[08:07:37.664] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.664] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.664] | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:37.664] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.667] | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:37.667] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.667] | : . ' , Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:37.667] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.668] | : . ' Legacy shutdown of cluster workers ...
[08:07:37.668] | : . ' , Stopping existing cluster ...
[08:07:37.668] | : . ' , ; No pre-existing cluster. Skipping
[08:07:37.668] | : . ' , Stopping existing cluster ... done
[08:07:37.668] | : . ' Legacy shutdown of cluster workers ... done
[08:07:37.668] | : . plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:37.668] | : . plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:37.669] | : . ' function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.669] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.669] | : . '  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.669] | : . '  - attr(*, "init")= logi TRUE
[08:07:37.669] | : . '  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.669] | : . '     ...)  
[08:07:37.669] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.669] | : . '  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.669] | : . '  - attr(*, "call")= language plan(strategy)
[08:07:37.671] | : . ' init: TRUE
[08:07:37.671] | : . ' makeFutureBackend(<multicore>) ...
[08:07:37.671] | : . ' , Backend function: <‘NULL’>
[08:07:37.671] | : . ' , Evaluator tweak arguments: [n=0]
[08:07:37.671] | : . ' ,  list()
[08:07:37.672] | : . ' , Evaluator formal arguments: [n=3]
[08:07:37.672] | : . ' ,  list()
[08:07:37.672] | : . ' , Backend factory arguments: [n=3]
[08:07:37.672] | : . ' , Dotted pair list of 3
[08:07:37.672] | : . ' ,  $ workers    : language availableCores(constraints = "multicore")
[08:07:37.672] | : . ' ,  $ gc         : logi FALSE
[08:07:37.672] | : . ' ,  $ earlySignal: logi FALSE
[08:07:37.678] | : . ' , Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:37.678] | : . ' makeFutureBackend(<multicore>) ... done
[08:07:37.678] | : . plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:37.679] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.679] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.679] | : . plan(): nbrOfWorkers() = 2
[08:07:37.679] | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:37.679] | plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.679] | future(..., label = NULL) ...
[08:07:37.680] | : lazy: FALSE
[08:07:37.680] | : stdout: TRUE
[08:07:37.680] | : conditions: [n=1] ‘condition’
[08:07:37.680] | : gc: FALSE
[08:07:37.680] | : earlySignal: FALSE
[08:07:37.680] | : getGlobalsAndPackages() ...
[08:07:37.680] | : . Searching for globals ...
[08:07:37.706] | : . ' globals found: [9] ‘{’, ‘stopifnot’, ‘==’, ‘getOption’, ‘<-’, ‘options’, ‘on.exit’, ‘log’, ‘-’
[08:07:37.707] | : . Searching for globals ... done
[08:07:37.707] | : . Resolving globals: FALSE
[08:07:37.707] | : . Search for packages associated with the globals ...
[08:07:37.707] | : . ' Packages associated with globals: [1] ‘base’
[08:07:37.708] | : . ' Packages: [1] ‘base’
[08:07:37.708] | : . Search for packages associated with the globals ... done
[08:07:37.708] | : . Packages after dropping 'base': [0] 
[08:07:37.708] | : . globals: [0] 
[08:07:37.708] | : . packages: [0] 
[08:07:37.708] | : getGlobalsAndPackages() ... done
[08:07:37.709] | : run() for ‘Future’ (<unnamed-2>) ...
[08:07:37.709] | : . state: ‘created’
[08:07:37.709] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.709] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.709] | : . Using MulticoreFutureBackend ...
[08:07:37.709] | : . ' Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:37.709] | : . ' Launching futures ...
[08:07:37.710] | : . ' , launchFuture() for MulticoreFutureBackend ...
[08:07:37.710] | : . ' , ; getFutureData() ...
[08:07:37.710] | : . ' , ; ` getFutureCore() ...
[08:07:37.710] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:37.710] | : . ' , ; ` getFutureCore() ... done
[08:07:37.710] | : . ' , ; ` getFutureCapture() ...
[08:07:37.710] | : . ' , ; ` getFutureCapture() ... done
[08:07:37.710] | : . ' , ; ` getFutureContext() ...
[08:07:37.711] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.711] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:37.711] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.711] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:37.711] | : . ' , ; ` getFutureContext() ... done
[08:07:37.712] | : . ' , ; getFutureData() ... done
[08:07:37.712] | : . ' , ; requestCore(..., workers = 2) ...
[08:07:37.712] | : . ' , ; requestCore(..., workers = 2) ... done
[08:07:37.715] | : . ' , ; MulticoreFuture started
[08:07:37.716] | : . ' , launchFuture() for MulticoreFutureBackend ... done
[08:07:37.716] | : . ' Launching futures ... done
[08:07:37.716] | : . ' Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:37.716] | : . Using MulticoreFutureBackend ... done
[08:07:37.717] | : run() for ‘Future’ (<unnamed-2>) ... done
[08:07:37.717] | future(..., label = NULL) ... done
[08:07:37.718] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.718] | : . ' , ; ` Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:37.719] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.719] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.719] | result() for MulticoreFuture ...
[08:07:37.719] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:37.720] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:37.720] | : . ' , ; ` | : New stack:
[08:07:37.720] | : . ' , ; ` | : List of 1
[08:07:37.720] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.720] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.720] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:37.720] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.720] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.720] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.720] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.720] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.725] | : . ' , ; ` | : Old stack:
[08:07:37.725] | : . ' , ; ` | : List of 1
[08:07:37.725] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.725] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.725] | : . ' , ; ` | :     ...)  
[08:07:37.725] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:07:37.725] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.725] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.725] | : . ' , ; ` | :     ...)  
[08:07:37.725] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.725] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.733] | : . ' , ; ` | : Not identical
[08:07:37.734] | : . ' , ; ` | : all.equal() for future ...
[08:07:37.734] | : . ' , ; ` | : . List of 2
[08:07:37.734] | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.734] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.734] | : . ' , ; ` | : .  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.734] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.734] | : . ' , ; ` | : .     ...)  
[08:07:37.734] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:37.734] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.734] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.734] | : . ' , ; ` | : .     ...)  
[08:07:37.734] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.742] | : . ' , ; ` | : . Formals differ
[08:07:37.742] | : . ' , ; ` | : all.equal() for future ... done
[08:07:37.742] | : . ' , ; ` | : Future strategies differ at level 1
[08:07:37.743] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:37.743] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:07:37.743] | : . ' , ; ` | List of future strategies:
[08:07:37.743] | : . ' , ; ` | 1. sequential:
[08:07:37.743] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:37.743] | : . ' , ; ` |    - tweaked: FALSE
[08:07:37.743] | : . ' , ; ` |    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.744] | : . ' , ; ` | List of 1
[08:07:37.744] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.744] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.744] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:37.744] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.744] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.744] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.744] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.744] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.747] | : . ' , ; ` | plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:37.748] | : . ' , ; ` | plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:37.748] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.748] | : . ' , ; ` | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:37.748] | : . ' , ; ` | : . function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.748] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.748] | : . ' , ; ` | : .  - attr(*, "init")= logi TRUE
[08:07:37.748] | : . ' , ; ` | : .  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.748] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.748] | : . ' , ; ` | : .  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.748] | : . ' , ; ` | : .  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.751] | : . ' , ; ` | : . init: TRUE
[08:07:37.751] | : . ' , ; ` | : . makeFutureBackend(<sequential>) ...
[08:07:37.751] | : . ' , ; ` | : . ' Backend function: <‘NULL’>
[08:07:37.751] | : . ' , ; ` | : . ' Evaluator tweak arguments: [n=0]
[08:07:37.751] | : . ' , ; ` | : . '  list()
[08:07:37.752] | : . ' , ; ` | : . ' Evaluator formal arguments: [n=2]
[08:07:37.752] | : . ' , ; ` | : . '  list()
[08:07:37.752] | : . ' , ; ` | : . ' Backend factory arguments: [n=2]
[08:07:37.752] | : . ' , ; ` | : . ' Dotted pair list of 2
[08:07:37.752] | : . ' , ; ` | : . '  $ gc         : logi FALSE
[08:07:37.752] | : . ' , ; ` | : . '  $ earlySignal: logi FALSE
[08:07:37.754] | : . ' , ; ` | : . ' Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:37.754] | : . ' , ; ` | : . makeFutureBackend(<sequential>) ... done
[08:07:37.754] | : . ' , ; ` | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:37.754] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.754] | : . ' , ; ` | plan(): nbrOfWorkers() = 1
[08:07:37.754] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:37.754] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.757] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.757] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:37.757] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:37.757] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:37.758] | : . ' , ; ` | : . New stack:
[08:07:37.758] | : . ' , ; ` | : . List of 1
[08:07:37.758] | : . ' , ; ` | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.758] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.758] | : . ' , ; ` | : .     ...)  
[08:07:37.758] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:07:37.758] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.758] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.758] | : . ' , ; ` | : .     ...)  
[08:07:37.758] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.758] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.763] | : . ' , ; ` | : . Old stack:
[08:07:37.763] | : . ' , ; ` | : . List of 1
[08:07:37.763] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.763] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.763] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559568d33100> 
[08:07:37.763] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.763] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.763] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.766] | : . ' , ; ` | : . Not identical
[08:07:37.766] | : . ' , ; ` | : . all.equal() for future ...
[08:07:37.766] | : . ' , ; ` | : . ' List of 2
[08:07:37.766] | : . ' , ; ` | : . '  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.766] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.766] | : . ' , ; ` | : . '     ...)  
[08:07:37.766] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.766] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.766] | : . ' , ; ` | : . '     ...)  
[08:07:37.766] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.766] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.766] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:37.766] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x559568d33100> 
[08:07:37.766] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:37.766] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:37.772] | : . ' , ; ` | : . ' Formals differ
[08:07:37.772] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:37.773] | : . ' , ; ` | : . Future strategies differ at level 1
[08:07:37.773] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:37.773] | : . ' , ; ` | : plan(): Setting new future backend stack:
[08:07:37.773] | : . ' , ; ` | : List of future strategies:
[08:07:37.773] | : . ' , ; ` | : 1. multicore:
[08:07:37.773] | : . ' , ; ` | :    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:37.773] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:37.773] | : . ' , ; ` | :    - call: plan(strategy)
[08:07:37.773] | : . ' , ; ` | : List of 1
[08:07:37.773] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.773] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.773] | : . ' , ; ` | :     ...)  
[08:07:37.773] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:07:37.773] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.773] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.773] | : . ' , ; ` | :     ...)  
[08:07:37.773] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.773] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.777] | : . ' , ; ` | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:37.777] | : . ' , ; ` | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:37.777] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.777] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.777] | : . ' , ; ` | : plan(): nbrOfWorkers() = 2
[08:07:37.777] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:37.777] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.777] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:37.779] | : readImmediateCondition() ...
[08:07:37.779] | : . Path: ‘/tmp/RtmpUNtOQ9/.future/immediateConditions’
[08:07:37.779] | : . Number of RDS files: 0
[08:07:37.779] | : . Returned conditions set:
[08:07:37.780] | : .  list()
[08:07:37.780] | : readImmediateCondition() ... done
[08:07:37.781] | : result() for MulticoreFuture ...
[08:07:37.781] | : result() for MulticoreFuture ... done
[08:07:37.781] | : signalConditions() ...
[08:07:37.781] | : . include = ‘immediateCondition’
[08:07:37.781] | : . exclude = 
[08:07:37.781] | : . resignal = FALSE
[08:07:37.781] | : . Number of conditions: 7
[08:07:37.782] | : .  int 7
[08:07:37.782] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.782] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.783] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.783] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.783] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.783] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.783] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.783] | : signalConditions() ... done
[08:07:37.783] | result() for MulticoreFuture ... done
[08:07:37.784] | value() for MulticoreFuture (<unnamed-2>) ...
[08:07:37.784] | : result() for MulticoreFuture ...
[08:07:37.784] | : result() for MulticoreFuture ... done
[08:07:37.784] | : result() for MulticoreFuture ...
[08:07:37.784] | : result() for MulticoreFuture ... done
[08:07:37.784] | : signalConditions() ...
[08:07:37.784] | : . include = ‘immediateCondition’
[08:07:37.785] | : . exclude = 
[08:07:37.785] | : . resignal = FALSE
[08:07:37.787] | : . Number of conditions: 7
[08:07:37.787] | : .  int 7
[08:07:37.788] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.788] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.788] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.789] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.789] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.789] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.789] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.789] | : signalConditions() ... done
[08:07:37.789] | : relay stdout ...
[08:07:37.790] | : relay stdout ... done
[08:07:37.790] | : check for misuse ...
[08:07:37.790] | : check for misuse ... done
[08:07:37.790] | : relay conditions ...
[08:07:37.790] | : . Future state: ‘finished’
[08:07:37.790] | : . result() for MulticoreFuture ...
[08:07:37.790] | : . result() for MulticoreFuture ... done
[08:07:37.791] | : . signalConditions() ...
[08:07:37.791] | : . ' include = ‘condition’
[08:07:37.791] | : . ' exclude = ‘immediateCondition’
[08:07:37.791] | : . ' resignal = TRUE
[08:07:37.791] | : . ' Number of conditions: 7
[08:07:37.791] | : . '  int 7
[08:07:37.792] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.792] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.716] | : . ' , ; attachPackages() ...
[08:07:37.792] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.792] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.716] | : . ' , ; ` packages: [n=1] ‘future’
[08:07:37.793] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.793] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.717] | : . ' , ; attachPackages() ... done
[08:07:37.793] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.793] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.717] | : . ' , ; attachPackages() ...
[08:07:37.793] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.793] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.717] | : . ' , ; ` packages: [n=0] 
[08:07:37.794] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:37.794] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:37.717] | : . ' , ; attachPackages() ... done
[08:07:37.794] | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:37.794] | : . ' Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:07:37.794] | : . signalConditions() ... done
[08:07:37.794] | : relay conditions ... done
<simpleError in eval(quote({    {        stopifnot(getOption("warn") == 0)        oopts <- options(warn = 2)        on.exit(options(oopts))        log(-1)        42L    }}), new.env()): getOption("warn") == 0 is not TRUE>
Type of future: multisession
[08:07:37.795] | : plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.795] | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:37.795] | : . ' all.equal() for FutureStrategyList ...
[08:07:37.796] | : . ' , New stack:
[08:07:37.796] | : . ' , List of 1
[08:07:37.796] | : . ' ,  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:37.796] | : . ' ,     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.796] | : . ' ,   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:37.796] | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:37.796] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:37.796] | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:37.796] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.796] | : . ' ,   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.796] | : . ' ,   ..- attr(*, "untweakable")= chr "persistent"
[08:07:37.796] | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:37.796] | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.800] | : . ' , Old stack:
[08:07:37.800] | : . ' , List of 1
[08:07:37.800] | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.800] | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.800] | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.800] | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:37.800] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.800] | : . ' ,     ...)  
[08:07:37.800] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.800] | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.800] | : . ' ,   ..- attr(*, "call")= language plan(strategy)
[08:07:37.800] | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.800] | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.800] | : . ' ,     ...)  
[08:07:37.800] | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.800] | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.804] | : . ' , Not identical
[08:07:37.804] | : . ' , all.equal() for future ...
[08:07:37.804] | : . ' , ; List of 2
[08:07:37.804] | : . ' , ;  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:37.804] | : . ' , ;     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.804] | : . ' , ;   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:37.804] | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:07:37.804] | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:37.804] | : . ' , ;     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:37.804] | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.804] | : . ' , ;   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.804] | : . ' , ;   ..- attr(*, "untweakable")= chr "persistent"
[08:07:37.804] | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:07:37.804] | : . ' , ;  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:37.804] | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:37.804] | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:37.804] | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:37.804] | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.804] | : . ' , ;     ...)  
[08:07:37.804] | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.804] | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.804] | : . ' , ;   ..- attr(*, "call")= language plan(strategy)
[08:07:37.804] | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x559567444260> 
[08:07:37.804] | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:37.804] | : . ' , ;     ...)  
[08:07:37.804] | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:37.810] | : . ' , ; Formals differ
[08:07:37.811] | : . ' , all.equal() for future ... done
[08:07:37.811] | : . ' , Future strategies differ at level 1
[08:07:37.811] | : . ' all.equal() for FutureStrategyList ... done
[08:07:37.811] | : . ' plan(): Setting new future backend stack:
[08:07:37.811] | : . ' List of future strategies:
[08:07:37.811] | : . ' 1. multisession:
[08:07:37.811] | : . '    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:37.811] | : . '    - tweaked: FALSE
[08:07:37.811] | : . '    - call: plan(strategy)
[08:07:37.811] | : . ' List of 1
[08:07:37.811] | : . '  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:37.811] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.811] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:37.811] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:37.811] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:37.811] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:37.811] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.811] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.811] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:07:37.811] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:07:37.811] | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:37.817] | : . ' plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:37.817] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:37.817] | : . ' , ; Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:37.817] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:37.818] | : . ' , Legacy shutdown of cluster workers ...
[08:07:37.818] | : . ' , ; Stopping existing cluster ...
[08:07:37.818] | : . ' , ; ` No pre-existing cluster. Skipping
[08:07:37.818] | : . ' , ; Stopping existing cluster ... done
[08:07:37.819] | : . ' , Legacy shutdown of cluster workers ... done
[08:07:37.819] | : . ' plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:37.819] | : . ' plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:37.819] | : . ' , function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:37.819] | : . ' ,     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:37.819] | : . ' ,  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:37.819] | : . ' ,  - attr(*, "init")= logi TRUE
[08:07:37.819] | : . ' ,  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:37.819] | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:37.819] | : . ' ,   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.819] | : . ' ,  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:37.819] | : . ' ,  - attr(*, "untweakable")= chr "persistent"
[08:07:37.819] | : . ' ,  - attr(*, "call")= language plan(strategy)
[08:07:37.821] | : . ' , init: TRUE
[08:07:37.822] | : . ' , makeFutureBackend(<multisession>) ...
[08:07:37.822] | : . ' , ; Backend function: <‘NULL’>
[08:07:37.822] | : . ' , ; Evaluator tweak arguments: [n=0]
[08:07:37.822] | : . ' , ;  list()
[08:07:37.822] | : . ' , ; Evaluator formal arguments: [n=4]
[08:07:37.822] | : . ' , ;  list()
[08:07:37.823] | : . ' , ; Backend factory arguments: [n=4]
[08:07:37.823] | : . ' , ; Dotted pair list of 4
[08:07:37.823] | : . ' , ;  $ workers     : language availableCores()
[08:07:37.823] | : . ' , ;  $ rscript_libs: language .libPaths()
[08:07:37.823] | : . ' , ;  $ gc          : logi FALSE
[08:07:37.823] | : . ' , ;  $ earlySignal : logi FALSE
[08:07:37.824] | : . ' , ; MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:07:37.824] | : . ' , ; ` Arguments:
[08:07:37.824] | : . ' , ; ` List of 5
[08:07:37.824] | : . ' , ; `  $ workers     : Named int 2
[08:07:37.824] | : . ' , ; `   ..- attr(*, "names")= chr "mc.cores"
[08:07:37.824] | : . ' , ; `  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:37.824] | : . ' , ; `  $ interrupts  : logi TRUE
[08:07:37.824] | : . ' , ; `  $ gc          : logi FALSE
[08:07:37.824] | : . ' , ; `  $ earlySignal : logi FALSE
[08:07:37.829] | : . ' , ; ` ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:07:37.829] | : . ' , ; ` | workers: 2
[08:07:37.829] | : . ' , ; ` | getCluster() ...
[08:07:37.829] | : . ' , ; ` | getCluster() ... done
[08:07:37.829] | : . ' , ; ` | Stopping existing cluster ...
[08:07:37.829] | : . ' , ; ` | : No pre-existing cluster. Skipping
[08:07:37.829] | : . ' , ; ` | Stopping existing cluster ... done
[08:07:37.830] | : . ' , ; ` | Starting new cluster ...
[08:07:37.830] | : . ' , ; ` | : makeCluster(workers, ...) ...
[08:07:37.830] | : . ' , ; ` | : . Arguments:
[08:07:37.830] | : . ' , ; ` | : . List of 2
[08:07:37.830] | : . ' , ; ` | : .  $             : int 2
[08:07:37.830] | : . ' , ; ` | : .  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:37.831] | : . ' , ; ` | : . .makeCluster() ...
[08:07:37.831] | : . ' , ; ` | : . ' workers: ‘2’
[08:07:37.831] | : . ' , ; ` | : . ' R_FUTURE_PLAN: NA
[08:07:37.831] | : . ' , ; ` | : . ' parallelly::makeClusterPSOCK() arguments:
[08:07:37.832] | : . ' , ; ` | : . ' List of 2
[08:07:37.832] | : . ' , ; ` | : . '  $             : int 2
[08:07:37.832] | : . ' , ; ` | : . '  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:38.354] | : . ' , ; ` | : . ' Generated cluster UUID
[08:07:38.354] | : . ' , ; ` | : . ' Cluster UUID: ‘e2fb3b9d1a3a4a35b71753d2d03de6b6’
[08:07:38.354] | : . ' , ; ` | : . ' Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:38.357] | : . ' , ; ` | : . .makeCluster() ... done
[08:07:38.357] | : . ' , ; ` | : . Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:38.358] | : . ' , ; ` | : makeCluster(workers, ...) ... done
[08:07:38.358] | : . ' , ; ` | : Number of workers: 2
[08:07:38.358] | : . ' , ; ` | : Workers UUID: ‘e2fb3b9d1a3a4a35b71753d2d03de6b6’
[08:07:38.359] | : . ' , ; ` | Starting new cluster ... done
[08:07:38.359] | : . ' , ; ` ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:07:38.359] | : . ' , ; ` Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:38.359] | : . ' , ; MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:07:38.359] | : . ' , makeFutureBackend(<multisession>) ... done
[08:07:38.359] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:38.359] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:38.360] | : . ' , plan(): nbrOfWorkers() = 2
[08:07:38.360] | : . ' plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:38.360] | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:38.360] | : . future(..., label = NULL) ...
[08:07:38.360] | : . ' lazy: FALSE
[08:07:38.360] | : . ' stdout: TRUE
[08:07:38.360] | : . ' conditions: [n=1] ‘condition’
[08:07:38.360] | : . ' gc: FALSE
[08:07:38.360] | : . ' earlySignal: FALSE
[08:07:38.360] | : . ' getGlobalsAndPackages() ...
[08:07:38.360] | : . ' , Searching for globals ...
[08:07:38.386] | : . ' , ; globals found: [9] ‘{’, ‘stopifnot’, ‘==’, ‘getOption’, ‘<-’, ‘options’, ‘on.exit’, ‘log’, ‘-’
[08:07:38.386] | : . ' , Searching for globals ... done
[08:07:38.386] | : . ' , Resolving globals: FALSE
[08:07:38.386] | : . ' , Search for packages associated with the globals ...
[08:07:38.387] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:38.387] | : . ' , ; Packages: [1] ‘base’
[08:07:38.387] | : . ' , Search for packages associated with the globals ... done
[08:07:38.387] | : . ' , Packages after dropping 'base': [0] 
[08:07:38.387] | : . ' , globals: [0] 
[08:07:38.388] | : . ' , packages: [0] 
[08:07:38.388] | : . ' getGlobalsAndPackages() ... done
[08:07:38.388] | : . ' run() for ‘Future’ (<unnamed-3>) ...
[08:07:38.388] | : . ' , state: ‘created’
[08:07:38.388] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:38.388] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:38.389] | : . ' , Using MultisessionFutureBackend ...
[08:07:38.389] | : . ' , ; Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:38.389] | : . ' , ; Launching futures ...
[08:07:38.389] | : . ' , ; ` launchFuture() for ClusterFutureBackend ...
[08:07:38.390] | : . ' , ; ` | Workers: [n=2]
[08:07:38.390] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:38.391] | : . ' , ; ` | FutureRegistry: ‘workers-e2fb3b9d1a3a4a35b71753d2d03de6b6’
[08:07:38.392] | : . ' , ; ` | requestWorker() ...
[08:07:38.392] | : . ' , ; ` | : requestNode() ...
[08:07:38.392] | : . ' , ; ` | : . Number of workers: 2
[08:07:38.392] | : . ' , ; ` | : . Polling for a free worker ...
[08:07:38.392] | : . ' , ; ` | : . ' FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ...
[08:07:38.392] | : . ' , ; ` | : . ' , Created empty registry ‘workers-e2fb3b9d1a3a4a35b71753d2d03de6b6’
[08:07:38.392] | : . ' , ; ` | : . ' , Listing all futures
[08:07:38.393] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:38.393] | : . ' , ; ` | : . ' FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ... done
[08:07:38.393] | : . ' , ; ` | : . ' Total time: 0
[08:07:38.393] | : . ' , ; ` | : . Polling for a free worker ... done
[08:07:38.393] | : . ' , ; ` | : . FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ...
[08:07:38.393] | : . ' , ; ` | : . ' Listing all futures
[08:07:38.393] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:38.393] | : . ' , ; ` | : . FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ... done
[08:07:38.394] | : . ' , ; ` | : . avail: [n=2] ‘1’, ‘2’
[08:07:38.394] | : . ' , ; ` | : . Index of first available worker: 1
[08:07:38.394] | : . ' , ; ` | : . Validate that the worker is functional ...
[08:07:38.461] | : . ' , ; ` | : . ' Worker is functional
[08:07:38.461] | : . ' , ; ` | : . ' FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ...
[08:07:38.461] | : . ' , ; ` | : . ' , Listing all futures
[08:07:38.462] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:38.462] | : . ' , ; ` | : . ' FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'list', earlySignal = 0) ... done
[08:07:38.462] | : . ' , ; ` | : . Validate that the worker is functional ... done
[08:07:38.462] | : . ' , ; ` | : requestNode() ... done
[08:07:38.462] | : . ' , ; ` | : cluster node index: 1
[08:07:38.462] | : . ' , ; ` | requestWorker() ... done
[08:07:38.462] | : . ' , ; ` | eraseGlobalEnvironment() ...
[08:07:38.463] | : . ' , ; ` | eraseGlobalEnvironment() ... done
[08:07:38.463] | : . ' , ; ` | launchFuture() ...
[08:07:38.463] | : . ' , ; ` | : cluster node index: 1
[08:07:38.463] | : . ' , ; ` | : getFutureData() ...
[08:07:38.464] | : . ' , ; ` | : . getFutureCore() ...
[08:07:38.464] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:38.464] | : . ' , ; ` | : . getFutureCore() ... done
[08:07:38.464] | : . ' , ; ` | : . getFutureCapture() ...
[08:07:38.464] | : . ' , ; ` | : . getFutureCapture() ... done
[08:07:38.464] | : . ' , ; ` | : . getFutureContext() ...
[08:07:38.464] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:38.465] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:07:38.465] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:38.465] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:07:38.465] | : . ' , ; ` | : . getFutureContext() ... done
[08:07:38.465] | : . ' , ; ` | : getFutureData() ... done
[08:07:38.466] | : . ' , ; ` | : FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'add', earlySignal = 0) ...
[08:07:38.466] | : . ' , ; ` | : . Appended future to position #1
[08:07:38.466] | : . ' , ; ` | : . Number of registered futures: 1
[08:07:38.466] | : . ' , ; ` | : FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'add', earlySignal = 0) ... done
[08:07:38.466] | : . ' , ; ` | launchFuture() ... done
[08:07:38.467] | : . ' , ; ` | MultisessionFuture started
[08:07:38.467] | : . ' , ; ` launchFuture() for ClusterFutureBackend ... done
[08:07:38.467] | : . ' , ; Launching futures ... done
[08:07:38.467] | : . ' , ; Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:38.467] | : . ' , Using MultisessionFutureBackend ... done
[08:07:38.467] | : . ' run() for ‘Future’ (<unnamed-3>) ... done
[08:07:38.467] | : . future(..., label = NULL) ... done
[08:07:38.468] | : . result() for ClusterFuture ...
[08:07:38.468] | : . ' assertValidConnection() ...
[08:07:38.468] | : . ' , cluster node index: 1
[08:07:38.469] | : . ' assertValidConnection() ... done
[08:07:38.469] | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:38.469] | : . ' , cluster node index: 1
[08:07:38.556] | : . ' , [1] TRUE
[08:07:38.556] | : . ' , received data:
[08:07:38.556] | : . ' , List of 5
[08:07:38.556] | : . ' ,  $ type   : chr "VALUE"
[08:07:38.556] | : . ' ,  $ value  :List of 16
[08:07:38.556] | : . ' ,   ..$ value              : NULL
[08:07:38.556] | : . ' ,   ..$ visible            : logi TRUE
[08:07:38.556] | : . ' ,   ..$ stdout             : chr ""
[08:07:38.556] | : . ' ,   ..$ conditions         :List of 1
[08:07:38.556] | : . ' ,   .. ..$ :List of 5
[08:07:38.556] | : . ' ,   .. .. ..$ condition:List of 2
[08:07:38.556] | : . ' ,   .. .. .. ..$ message: chr "(converted from warning) NaNs produced"
[08:07:38.556] | : . ' ,   .. .. .. ..$ call   : language log(-1)
[08:07:38.556] | : . ' ,   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[08:07:38.556] | : . ' ,   .. .. ..$ calls    :List of 13
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language local({     { ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(expr, p)
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(expr, p)
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(quote({     { ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language eval(quote({     { ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language .signalSimpleWarning("NaNs produced", base::quote(log(-1)))
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language withRestarts({     .Internal(.signalCondition(simpleWarning(msg, call), msg, call)) ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language withOneRestart(expr, restarts[[1L]])
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language doWithOneRestart(return(expr), restart)
[08:07:38.556] | : . ' ,   .. .. .. ..$ : language log(-1)
[08:07:38.556] | : . ' ,   .. .. ..$ session  :List of 6
[08:07:38.556] | : . ' ,   .. .. .. ..$ r         :List of 14
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ arch          : chr "x86_64"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ os            : chr "linux-gnu"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ status        : chr ""
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ major         : chr "4"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ minor         : chr "5.1"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ year          : chr "2025"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ month         : chr "06"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ day           : chr "13"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ svn rev       : chr "88306"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ language      : chr "R"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ version.string: chr "R version 4.5.1 (2025-06-13)"
[08:07:38.556] | : . ' ,   .. .. .. .. ..$ nickname      : chr "Great Square Root"
[08:07:38.556] | : . ' ,   .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[08:07:38.556] | : . ' ,   .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[08:07:38.556] | : . ' ,   .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[08:07:38.556] | : . ' ,   .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:38.556] | : . ' ,   .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:38.556] | : . ' ,   .. .. ..$ timestamp: POSIXct[1:1], format: "2025-06-17 08:07:38"
[08:07:38.556] | : . ' ,   .. .. ..$ signaled : int 0
[08:07:38.556] | : . ' ,   ..$ rng                : logi FALSE
[08:07:38.556] | : . ' ,   ..$ seed               : NULL
[08:07:38.556] | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:38.556] | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:38.556] | : . ' ,   .. ..$ added   : NULL
[08:07:38.556] | : . ' ,   .. ..$ removed : NULL
[08:07:38.556] | : . ' ,   .. ..$ replaced: NULL
[08:07:38.556] | : . ' ,   ..$ misuseDevices      : NULL
[08:07:38.556] | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:38.556] | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:38"
[08:07:38.556] | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:38"
[08:07:38.556] | : . ' ,   ..$ uuid               : chr [1:2] "d78275b4e9132f6f5cec585560414d75" "3"
[08:07:38.556] | : . ' ,   ..$ session_uuid       : chr "697a0575c371a7a628ee7d9b03982433"
[08:07:38.556] | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:38.556] | : . ' ,   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:38.556] | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:38.556] | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:38.556] | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:38.556] | : . ' ,   .. .. ..$ pid   : int 67746
[08:07:38.556] | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:38"
[08:07:38.556] | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:38.556] | : . ' ,   ..$ r_info             :List of 4
[08:07:38.556] | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:38.556] | : . ' ,   .. .. ..$ : int [1:3] 4 5 1
[08:07:38.556] | : . ' ,   .. ..$ os           : chr "unix"
[08:07:38.556] | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:38.556] | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:38.556] | : . ' ,   ..$ version            : chr "1.8"
[08:07:38.556] | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:38.556] | : . ' ,  $ success: logi TRUE
[08:07:38.556] | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.048 0 0.05 0 0
[08:07:38.556] | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:38.556] | : . ' ,  $ tag    : NULL
[08:07:38.584] | : . ' , Received FutureResult
[08:07:38.584] | : . ' , FutureResult:
[08:07:38.584] | : . ' , value: ‘NULL’
[08:07:38.584] | : . ' , visible: TRUE
[08:07:38.584] | : . ' , stdout: character
[08:07:38.584] | : . ' , conditions: [n = 1] simpleError
[08:07:38.584] | : . ' , RNG used: FALSE
[08:07:38.584] | : . ' , duration: 0.04758787 secs (started 2025-06-17 08:07:38.507886)
[08:07:38.584] | : . ' , version: 1.8
[08:07:38.585] | : . ' , FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'remove', earlySignal = 0) ...
[08:07:38.585] | : . ' , ; Removed future from position #1
[08:07:38.585] | : . ' , ; Number of registered futures: 0
[08:07:38.585] | : . ' , FutureRegistry('workers-e2fb3b9d1a3a4a35b71753d2d03de6b6', action = 'remove', earlySignal = 0) ... done
[08:07:38.585] | : . ' , Erased future from future backend
[08:07:38.585] | : . ' , result() for ClusterFuture ...
[08:07:38.585] | : . ' , ; result already collected: FutureResult
[08:07:38.586] | : . ' , result() for ClusterFuture ... done
[08:07:38.586] | : . ' , signalConditions() ...
[08:07:38.586] | : . ' , ; include = ‘immediateCondition’
[08:07:38.586] | : . ' , ; exclude = 
[08:07:38.586] | : . ' , ; resignal = FALSE
[08:07:38.586] | : . ' , ; Number of conditions: 1
[08:07:38.586] | : . ' , ;  int 1
[08:07:38.587] | : . ' , ; Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:38.587] | : . ' , signalConditions() ... done
[08:07:38.587] | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:38.587] | : . result() for ClusterFuture ... done
[08:07:38.587] | : . value() for MultisessionFuture (<unnamed-3>) ...
[08:07:38.587] | : . ' result() for ClusterFuture ...
[08:07:38.587] | : . ' , result already collected: FutureResult
[08:07:38.587] | : . ' result() for ClusterFuture ... done
[08:07:38.587] | : . ' result() for ClusterFuture ...
[08:07:38.588] | : . ' , result already collected: FutureResult
[08:07:38.588] | : . ' result() for ClusterFuture ... done
[08:07:38.588] | : . ' signalConditions() ...
[08:07:38.588] | : . ' , include = ‘immediateCondition’
[08:07:38.588] | : . ' , exclude = 
[08:07:38.588] | : . ' , resignal = FALSE
[08:07:38.588] | : . ' , Number of conditions: 1
[08:07:38.588] | : . ' ,  int 1
[08:07:38.589] | : . ' , Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:38.589] | : . ' signalConditions() ... done
[08:07:38.589] | : . ' relay stdout ...
[08:07:38.589] | : . ' relay stdout ... done
[08:07:38.589] | : . ' check for misuse ...
[08:07:38.589] | : . ' check for misuse ... done
[08:07:38.589] | : . ' relay conditions ...
[08:07:38.589] | : . ' , Future state: ‘finished’
[08:07:38.589] | : . ' , result() for ClusterFuture ...
[08:07:38.590] | : . ' , ; result already collected: FutureResult
[08:07:38.590] | : . ' , result() for ClusterFuture ... done
[08:07:38.590] | : . ' , signalConditions() ...
[08:07:38.590] | : . ' , ; include = ‘condition’
[08:07:38.590] | : . ' , ; exclude = ‘immediateCondition’
[08:07:38.590] | : . ' , ; resignal = TRUE
[08:07:38.590] | : . ' , ; Number of conditions: 1
[08:07:38.590] | : . ' , ;  int 1
[08:07:38.591] | : . ' , ; Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:38.591] | : . ' , ; Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:07:38.591] | : . ' , signalConditions() ... done
[08:07:38.591] | : . ' relay conditions ... done
<simpleError in log(-1): (converted from warning) NaNs produced>

> message("*** options(warn = 2) relays an error ... done")
*** options(warn = 2) relays an error ... done
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.5s, sys.self=0.03s, elapsed=1s, user.child=0.2s, sys.child=0.3s
Test ‘error_on_warn_2’ ... success
> 
