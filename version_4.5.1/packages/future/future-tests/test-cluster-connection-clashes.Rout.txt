
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-cluster-connection-clashes.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("cluster-connection-clashes")
Test ‘cluster-connection-clashes’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-cluster-connection-clashes.R’

> library(future)
[08:07:25.334] Option 'future.startup.script': TRUE
[08:07:25.335] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:07:25.335] Future startup scripts found: <none>

> message("all.equal() for connection ...")
all.equal() for connection ...

> con1 <- rawConnection(raw())

> close(con1)

> con2 <- rawConnection(raw())

> close(con2)

> stopifnot(!isTRUE(all.equal(con1, con2)))

> message("all.equal() for connection ... done")
all.equal() for connection ... done

> message("all.equal() for cluster backend ...")
all.equal() for cluster backend ...

> for (kk in 1:3) {
+     message("Iteration #", kk)
+     cl <- parallel::makeCluster(1)
+     plan(cluster, workers = cl)
+     fs <- lapply(1:2, FU .... [TRUNCATED] 
Iteration #1
[08:07:25.520] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.521] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:25.521] | : all.equal() for FutureStrategyList ...
[08:07:25.521] | : . New stack:
[08:07:25.521] | : . List of 1
[08:07:25.521] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:25.521] | : .     envir = parent.frame())  
[08:07:25.521] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:25.521] | : .   ..- attr(*, "init")= logi TRUE
[08:07:25.521] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:25.521] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:25.521] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.521] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.521] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:25.521] | : .   .. ..$ workers:List of 1
[08:07:25.521] | : .   .. .. ..$ :List of 3
[08:07:25.521] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:25.521] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.521] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:25.521] | : .   .. .. .. ..$ rank: num 0
[08:07:25.521] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.521] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.521] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:25.521] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:25.531] | : . Old stack:
[08:07:25.531] | : . List of 1
[08:07:25.531] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:25.531] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:25.531] | : .   ..- attr(*, "init")= logi TRUE
[08:07:25.531] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:25.531] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:25.531] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:25.531] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:25.531] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:25.534] | : . Not identical
[08:07:25.534] | : . all.equal() for future ...
[08:07:25.534] | : . ' List of 2
[08:07:25.534] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:25.534] | : . '     envir = parent.frame())  
[08:07:25.534] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:25.534] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:25.534] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:25.534] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:25.534] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.534] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.534] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:25.534] | : . '   .. ..$ workers:List of 1
[08:07:25.534] | : . '   .. .. ..$ :List of 3
[08:07:25.534] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:25.534] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.534] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:25.534] | : . '   .. .. .. ..$ rank: num 0
[08:07:25.534] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.534] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.534] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:25.534] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:25.534] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:25.534] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:25.534] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:25.534] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:25.534] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:25.534] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:25.541] | : . ' Formals differ
[08:07:25.541] | : . all.equal() for future ... done
[08:07:25.542] | : . Future strategies differ at level 1
[08:07:25.542] | : all.equal() for FutureStrategyList ... done
[08:07:25.542] | : plan(): Setting new future backend stack:
[08:07:25.542] | : List of future strategies:
[08:07:25.542] | : 1. cluster:
[08:07:25.542] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:25.542] | :    - tweaked: TRUE
[08:07:25.542] | :    - call: plan(cluster, workers = cl)
[08:07:25.543] | : List of 1
[08:07:25.543] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:25.543] | :     envir = parent.frame())  
[08:07:25.543] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:25.543] | :   ..- attr(*, "init")= logi TRUE
[08:07:25.543] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:25.543] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:25.543] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.543] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.543] | :   ..- attr(*, "tweaks")=List of 1
[08:07:25.543] | :   .. ..$ workers:List of 1
[08:07:25.543] | :   .. .. ..$ :List of 3
[08:07:25.543] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:25.543] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.543] | :   .. .. .. ..$ host: chr "localhost"
[08:07:25.543] | :   .. .. .. ..$ rank: num 0
[08:07:25.543] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.543] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.543] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:25.543] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:25.548] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:25.548] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.548] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:25.548] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.548] | : . Legacy shutdown of cluster workers ...
[08:07:25.548] | : . ' Stopping existing cluster ...
[08:07:25.549] | : . ' , No pre-existing cluster. Skipping
[08:07:25.549] | : . ' Stopping existing cluster ... done
[08:07:25.549] | : . Legacy shutdown of cluster workers ... done
[08:07:25.549] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:25.549] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:25.549] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:25.549] | : .     envir = parent.frame())  
[08:07:25.549] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:25.549] | : .  - attr(*, "init")= logi TRUE
[08:07:25.549] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:25.549] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:25.549] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.549] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:25.549] | : .  - attr(*, "tweaks")=List of 1
[08:07:25.549] | : .   ..$ workers:List of 1
[08:07:25.549] | : .   .. ..$ :List of 3
[08:07:25.549] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:25.549] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.549] | : .   .. .. ..$ host: chr "localhost"
[08:07:25.549] | : .   .. .. ..$ rank: num 0
[08:07:25.549] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.549] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.549] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:25.555] | : . init: TRUE
[08:07:25.555] | : . makeFutureBackend(<tweaked>) ...
[08:07:25.555] | : . ' Backend function: <‘NULL’>
[08:07:25.555] | : . ' Evaluator tweak arguments: [n=1]
[08:07:25.556] | : . ' List of 1
[08:07:25.556] | : . '  $ workers:List of 1
[08:07:25.556] | : . '   ..$ :List of 3
[08:07:25.556] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:25.556] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.556] | : . '   .. ..$ host: chr "localhost"
[08:07:25.556] | : . '   .. ..$ rank: num 0
[08:07:25.556] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.556] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.558] | : . ' Evaluator formal arguments: [n=1]
[08:07:25.558] | : . ' List of 1
[08:07:25.558] | : . '  $ workers:List of 1
[08:07:25.558] | : . '   ..$ :List of 3
[08:07:25.558] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:25.558] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.558] | : . '   .. ..$ host: chr "localhost"
[08:07:25.558] | : . '   .. ..$ rank: num 0
[08:07:25.558] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.558] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.561] | : . ' Backend factory arguments: [n=1]
[08:07:25.561] | : . ' Dotted pair list of 1
[08:07:25.561] | : . '  $ workers:List of 1
[08:07:25.561] | : . '   ..$ :List of 3
[08:07:25.561] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:25.561] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:25.561] | : . '   .. ..$ host: chr "localhost"
[08:07:25.561] | : . '   .. ..$ rank: num 0
[08:07:25.561] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:25.561] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:25.563] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:25.564] | : . ' , Stopping existing cluster ...
[08:07:25.564] | : . ' , ; No pre-existing cluster. Skipping
[08:07:25.564] | : . ' , Stopping existing cluster ... done
[08:07:25.564] | : . ' , Number of workers: 1
[08:07:25.564] | : . ' , Generated workers UUID
[08:07:25.564] | : . ' , Workers UUID: ‘8a0e12f792e22adaf70a2a333c1338ca’
[08:07:25.565] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:25.565] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:25.565] | : . makeFutureBackend(<tweaked>) ... done
[08:07:25.565] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:25.565] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.565] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.565] | : plan(): nbrOfWorkers() = 1
[08:07:25.566] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:25.566] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.566] future(..., label = NULL) ...
[08:07:25.566] | lazy: FALSE
[08:07:25.566] | stdout: TRUE
[08:07:25.566] | conditions: [n=1] ‘condition’
[08:07:25.566] | gc: FALSE
[08:07:25.566] | earlySignal: FALSE
[08:07:25.567] | getGlobalsAndPackages() ...
[08:07:25.567] | : Searching for globals ...
[08:07:25.577] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:25.577] | : Searching for globals ... done
[08:07:25.577] | : Resolving globals: FALSE
[08:07:25.577] | : Search for packages associated with the globals ...
[08:07:25.578] | : . Packages associated with globals: [1] ‘base’
[08:07:25.578] | : . Packages: [1] ‘base’
[08:07:25.578] | : Search for packages associated with the globals ... done
[08:07:25.578] | : Packages after dropping 'base': [0] 
[08:07:25.578] | : globals: [2] ‘X’, ‘i’
[08:07:25.579] | : packages: [0] 
[08:07:25.579] | getGlobalsAndPackages() ... done
[08:07:25.581] | run() for ‘Future’ (<unnamed-1>) ...
[08:07:25.581] | : state: ‘created’
[08:07:25.581] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.581] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.581] | : Using ClusterFutureBackend ...
[08:07:25.581] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:25.582] | : . Launching futures ...
[08:07:25.582] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:25.582] | : . ' , Workers: [n=1]
[08:07:25.582] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:25.583] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:25.583] | : . ' , requestWorker() ...
[08:07:25.583] | : . ' , ; requestNode() ...
[08:07:25.583] | : . ' , ; ` Number of workers: 1
[08:07:25.583] | : . ' , ; ` Polling for a free worker ...
[08:07:25.583] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.583] | : . ' , ; ` | : Created empty registry ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:25.583] | : . ' , ; ` | : Listing all futures
[08:07:25.583] | : . ' , ; ` | : Number of registered futures: 0
[08:07:25.583] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.584] | : . ' , ; ` | Total time: 0
[08:07:25.584] | : . ' , ; ` Polling for a free worker ... done
[08:07:25.584] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.584] | : . ' , ; ` | Listing all futures
[08:07:25.584] | : . ' , ; ` | Number of registered futures: 0
[08:07:25.584] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.584] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:25.584] | : . ' , ; ` Index of first available worker: 1
[08:07:25.584] | : . ' , ; ` Validate that the worker is functional ...
[08:07:25.638] | : . ' , ; ` | Worker is functional
[08:07:25.639] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.639] | : . ' , ; ` | : Listing all futures
[08:07:25.639] | : . ' , ; ` | : Number of registered futures: 0
[08:07:25.639] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.639] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:25.639] | : . ' , ; requestNode() ... done
[08:07:25.640] | : . ' , ; cluster node index: 1
[08:07:25.640] | : . ' , requestWorker() ... done
[08:07:25.640] | : . ' , eraseGlobalEnvironment() ...
[08:07:25.640] | : . ' , eraseGlobalEnvironment() ... done
[08:07:25.640] | : . ' , launchFuture() ...
[08:07:25.640] | : . ' , ; cluster node index: 1
[08:07:25.641] | : . ' , ; getFutureData() ...
[08:07:25.641] | : . ' , ; ` getFutureCore() ...
[08:07:25.641] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:25.641] | : . ' , ; ` getFutureCore() ... done
[08:07:25.641] | : . ' , ; ` getFutureCapture() ...
[08:07:25.641] | : . ' , ; ` getFutureCapture() ... done
[08:07:25.642] | : . ' , ; ` getFutureContext() ...
[08:07:25.642] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.642] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:25.642] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.642] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:25.642] | : . ' , ; ` getFutureContext() ... done
[08:07:25.642] | : . ' , ; getFutureData() ... done
[08:07:25.643] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:25.643] | : . ' , ; ` Appended future to position #1
[08:07:25.643] | : . ' , ; ` Number of registered futures: 1
[08:07:25.643] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:25.643] | : . ' , launchFuture() ... done
[08:07:25.644] | : . ' , ClusterFuture started
[08:07:25.644] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:25.644] | : . Launching futures ... done
[08:07:25.644] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:25.644] | : Using ClusterFutureBackend ... done
[08:07:25.644] | run() for ‘Future’ (<unnamed-1>) ... done
[08:07:25.644] future(..., label = NULL) ... done
[08:07:25.644] future(..., label = NULL) ...
[08:07:25.644] | lazy: FALSE
[08:07:25.645] | stdout: TRUE
[08:07:25.645] | conditions: [n=1] ‘condition’
[08:07:25.645] | gc: FALSE
[08:07:25.645] | earlySignal: FALSE
[08:07:25.645] | getGlobalsAndPackages() ...
[08:07:25.645] | : Searching for globals ...
[08:07:25.649] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:25.649] | : Searching for globals ... done
[08:07:25.649] | : Resolving globals: FALSE
[08:07:25.649] | : Search for packages associated with the globals ...
[08:07:25.650] | : . Packages associated with globals: [1] ‘base’
[08:07:25.650] | : . Packages: [1] ‘base’
[08:07:25.650] | : Search for packages associated with the globals ... done
[08:07:25.650] | : Packages after dropping 'base': [0] 
[08:07:25.650] | : globals: [2] ‘X’, ‘i’
[08:07:25.650] | : packages: [0] 
[08:07:25.650] | getGlobalsAndPackages() ... done
[08:07:25.651] | run() for ‘Future’ (<unnamed-2>) ...
[08:07:25.651] | : state: ‘created’
[08:07:25.651] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.651] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.651] | : Using ClusterFutureBackend ...
[08:07:25.651] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:25.651] | : . Launching futures ...
[08:07:25.652] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:25.652] | : . ' , Workers: [n=1]
[08:07:25.652] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:25.652] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:25.652] | : . ' , requestWorker() ...
[08:07:25.652] | : . ' , ; requestNode() ...
[08:07:25.652] | : . ' , ; ` Number of workers: 1
[08:07:25.652] | : . ' , ; ` Polling for a free worker ...
[08:07:25.653] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.653] | : . ' , ; ` | : Listing all futures
[08:07:25.653] | : . ' , ; ` | : Number of registered futures: 1
[08:07:25.653] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.653] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:25.663] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:25.663] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:25.664] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:25.664] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=145
[08:07:25.665] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:25.665] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:25.665] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:25.676] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:25.676] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.676] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:25.676] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:25.676] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:25.676] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:25.677] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:25.677] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:25.677] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:25.677] | : . ' , ; ` | Number of registered futures: 1
[08:07:25.677] | : . ' , ; ` Polling for a free worker ... done
[08:07:25.677] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.677] | : . ' , ; ` | Listing all futures
[08:07:25.677] | : . ' , ; ` | Number of registered futures: 1
[08:07:25.677] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.678] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:25.688] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:25.717] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:25.717] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:25.718] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=145
[08:07:25.718] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:25.718] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:25.718] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:25.728] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:25.729] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.729] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:25.729] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:25.729] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:25.729] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:25.729] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:25.729] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:25.729] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:25.730] | : . ' , ; ` Number of registered futures: 1
[08:07:25.730] | : . ' , ; requestNode() ... done
[08:07:25.730] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.730] | : . ' , ; ` Listing all futures
[08:07:25.730] | : . ' , ; ` Number of registered futures: 1
[08:07:25.730] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.730] | : . ' , ; Poll #3 (0.08 secs): usedNodes() = 1, workers = 1
[08:07:25.741] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:25.741] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:25.741] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-1>) ...
[08:07:25.741] | : . ' , ; ` | : Cluster node socket connection: index=4, id=145
[08:07:25.742] | : . ' , ; ` | : assertValidConnection() ...
[08:07:25.742] | : . ' , ; ` | : . cluster node index: 1
[08:07:25.742] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:25.742] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:07:25.743] | : . ' , ; ` | : . cluster node index: 1
[08:07:25.743] | : . ' , ; ` | : . [1] TRUE
[08:07:25.743] | : . ' , ; ` | : . received data:
[08:07:25.743] | : . ' , ; ` | : . List of 5
[08:07:25.743] | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:07:25.743] | : . ' , ; ` | : .  $ value  :List of 16
[08:07:25.743] | : . ' , ; ` | : .   ..$ value              : int 1
[08:07:25.743] | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:07:25.743] | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:07:25.743] | : . ' , ; ` | : .   ..$ conditions         : list()
[08:07:25.743] | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:07:25.743] | : . ' , ; ` | : .   ..$ seed               : NULL
[08:07:25.743] | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:07:25.743] | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:07:25.743] | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:07:25.743] | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:07:25.743] | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.743] | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.743] | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "1"
[08:07:25.743] | : . ' , ; ` | : .   ..$ session_uuid       : chr "e32e94600550d3c92efcdb1a5af8ff07"
[08:07:25.743] | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:25.743] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:25.743] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ pid   : int 67133
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:07:25.743] | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:25.743] | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 1
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:07:25.743] | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:07:25.743] | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:07:25.743] | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:07:25.743] | : . ' , ; ` | : .  $ success: logi TRUE
[08:07:25.743] | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.045 0.003 0.047 0 0
[08:07:25.743] | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:25.743] | : . ' , ; ` | : .  $ tag    : NULL
[08:07:25.756] | : . ' , ; ` | : . Received FutureResult
[08:07:25.756] | : . ' , ; ` | : . FutureResult:
[08:07:25.756] | : . ' , ; ` | : . value: ‘integer’
[08:07:25.756] | : . ' , ; ` | : . visible: TRUE
[08:07:25.756] | : . ' , ; ` | : . stdout: character
[08:07:25.756] | : . ' , ; ` | : . conditions: [n = 0] 
[08:07:25.756] | : . ' , ; ` | : . RNG used: FALSE
[08:07:25.756] | : . ' , ; ` | : . duration: 0.04608893 secs (started 2025-06-17 08:07:25.684952)
[08:07:25.756] | : . ' , ; ` | : . version: 1.8
[08:07:25.757] | : . ' , ; ` | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:25.759] | : . ' , ; ` | : . ' Removed future from position #1
[08:07:25.759] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:25.759] | : . ' , ; ` | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:25.759] | : . ' , ; ` | : . Erased future from future backend
[08:07:25.760] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:25.760] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:25.760] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:25.760] | : . ' , ; ` | : . signalConditions() ...
[08:07:25.760] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:25.760] | : . ' , ; ` | : . ' exclude = 
[08:07:25.761] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:25.761] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:25.761] | : . ' , ; ` | : . '  int 0
[08:07:25.761] | : . ' , ; ` | : . signalConditions() ... done
[08:07:25.761] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:07:25.761] | : . ' , ; ` | : receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:25.761] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.762] | : . ' , ; ` | assertFutureResult() ...
[08:07:25.762] | : . ' , ; ` | : Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:25.762] | : . ' , ; ` | : Future uuid: 1
[08:07:25.762] | : . ' , ; ` | : identical; success
[08:07:25.762] | : . ' , ; ` | assertFutureResult() ... done
[08:07:25.762] | : . ' , ; ` | Future at position #1 is resolved ...
[08:07:25.763] | : . ' , ; ` | : value() for ClusterFuture (<unnamed-1>) ...
[08:07:25.763] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:25.763] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:25.763] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:25.763] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:25.763] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:25.763] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:25.763] | : . ' , ; ` | : . signalConditions() ...
[08:07:25.763] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:25.764] | : . ' , ; ` | : . ' exclude = 
[08:07:25.764] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:25.764] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:25.764] | : . ' , ; ` | : . '  int 0
[08:07:25.764] | : . ' , ; ` | : . signalConditions() ... done
[08:07:25.764] | : . ' , ; ` | : . check for misuse ...
[08:07:25.764] | : . ' , ; ` | : . check for misuse ... done
[08:07:25.765] | : . ' , ; ` | : value() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.765] | : . ' , ; ` | Future at position #1 is resolved ... done
[08:07:25.765] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:25.765] | : . ' , ; ` Remove collected futures ...
[08:07:25.765] | : . ' , ; ` | Indices of futures to drop: [n=1] ‘1’
[08:07:25.765] | : . ' , ; ` Remove collected futures ... done
[08:07:25.765] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:25.765] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:25.765] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:25.766] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:25.766] | : . ' , ; Number of registered futures: 1
[08:07:25.766] | : . ' , requestWorker() ... done
[08:07:25.766] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.766] | : . ' , ; Listing all futures
[08:07:25.766] | : . ' , ; Number of registered futures: 0
[08:07:25.766] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.766] | : . ' , Total time: 0.113292455673218
[08:07:25.766] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:25.766] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.767] | : . ' , Listing all futures
[08:07:25.767] | : . ' , Number of registered futures: 0
[08:07:25.767] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.767] | : . ' avail: [n=1] ‘1’
[08:07:25.767] | : . ' Index of first available worker: 1
[08:07:25.767] | : . ' Validate that the worker is functional ...
[08:07:25.768] | : . ' , Worker is functional
[08:07:25.768] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:25.768] | : . ' , ; Listing all futures
[08:07:25.768] | : . ' , ; Number of registered futures: 0
[08:07:25.768] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:25.768] | : . ' Validate that the worker is functional ... done
[08:07:25.769] | : . Launching futures ... done
[08:07:25.769] | : . cluster node index: 1
[08:07:25.769] | : Using ClusterFutureBackend ... done
[08:07:25.769] | : eraseGlobalEnvironment() ...
[08:07:25.769] | : eraseGlobalEnvironment() ... done
[08:07:25.769] | : launchFuture() ...
[08:07:25.769] | : . cluster node index: 1
[08:07:25.770] | : . getFutureData() ...
[08:07:25.770] | : . ' getFutureCore() ...
[08:07:25.770] | : . ' , Packages needed by the future expression (n = 0): <none>
[08:07:25.770] | : . ' getFutureCore() ... done
[08:07:25.770] | : . ' getFutureCapture() ...
[08:07:25.770] | : . ' getFutureCapture() ... done
[08:07:25.770] | : . ' getFutureContext() ...
[08:07:25.770] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:25.770] | : . ' , ; Getting stack without first backend: [n=0] 
[08:07:25.771] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:25.771] | : . ' , Packages needed by future backend (n = 0): <none>
[08:07:25.771] | : . ' getFutureContext() ... done
[08:07:25.771] | : . getFutureData() ... done
[08:07:25.771] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:25.772] | : . ' Appended future to position #1
[08:07:25.772] | : . ' Number of registered futures: 1
[08:07:25.772] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:25.772] | : launchFuture() ... done
[08:07:25.772] | : ClusterFuture started
[08:07:25.772] | run() for ‘Future’ (<unnamed-2>) ... done
[08:07:25.772] future(..., label = NULL) ... done
[08:07:25.772] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:25.773] value() for list ...
[08:07:25.773] | recursive: 0
[08:07:25.773] | reduce: FALSE
[08:07:25.774] | length: 2

[08:07:25.774] | Number of remaining objects: 2
[08:07:25.774] | checking value #1:
[08:07:25.774] | 'obj' is ClusterFuture
[08:07:25.774] | ClusterFuture #1
[08:07:25.774] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:25.774] | : nx: 2
[08:07:25.774] | : relay: TRUE
[08:07:25.775] | : stdout: TRUE
[08:07:25.775] | : signal: TRUE
[08:07:25.775] | : resignal: FALSE
[08:07:25.775] | : force: TRUE
[08:07:25.775] | : relayed: [n=2] FALSE, FALSE
[08:07:25.775] | : queued futures: [n=2] FALSE, FALSE
[08:07:25.775] | : until=1
[08:07:25.775] | : relaying element #1
[08:07:25.775] | : value() for ClusterFuture (<unnamed-1>) ...
[08:07:25.775] | : . result() for ClusterFuture ...
[08:07:25.775] | : . ' result already collected: FutureResult
[08:07:25.776] | : . result() for ClusterFuture ... done
[08:07:25.776] | : . result() for ClusterFuture ...
[08:07:25.776] | : . ' result already collected: FutureResult
[08:07:25.776] | : . result() for ClusterFuture ... done
[08:07:25.777] | : . signalConditions() ...
[08:07:25.778] | : . ' include = ‘immediateCondition’
[08:07:25.778] | : . ' exclude = 
[08:07:25.778] | : . ' resignal = FALSE
[08:07:25.778] | : . ' Number of conditions: 0
[08:07:25.778] | : . '  int 0
[08:07:25.778] | : . signalConditions() ... done
[08:07:25.778] | : . relay stdout ...
[08:07:25.779] | : . relay stdout ... done
[08:07:25.779] | : . check for misuse ...
[08:07:25.779] | : . check for misuse ... done
[08:07:25.779] | : value() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.779] | : result() for ClusterFuture ...
[08:07:25.779] | : . result already collected: FutureResult
[08:07:25.779] | : result() for ClusterFuture ... done
[08:07:25.779] | : signalConditions() ...
[08:07:25.779] | : . include = ‘immediateCondition’
[08:07:25.779] | : . exclude = 
[08:07:25.780] | : . resignal = FALSE
[08:07:25.780] | : . Number of conditions: 0
[08:07:25.780] | : .  int 0
[08:07:25.780] | : signalConditions() ... done
[08:07:25.780] | : result() for ClusterFuture ...
[08:07:25.780] | : . result already collected: FutureResult
[08:07:25.780] | : result() for ClusterFuture ... done
[08:07:25.781] | : signalConditions() ...
[08:07:25.781] | : . include = ‘condition’
[08:07:25.781] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:25.781] | : . resignal = TRUE
[08:07:25.781] | : . Number of conditions: 0
[08:07:25.781] | : .  int 0
[08:07:25.781] | : signalConditions() ... done
[08:07:25.781] | : relayed: [n=2] TRUE, FALSE
[08:07:25.782] | : queued futures: [n=2] TRUE, FALSE
[08:07:25.782] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:25.782] | value(<ClusterFuture>, ...) ...
[08:07:25.782] | value(<ClusterFuture>, ...) ... done
[08:07:25.782] | value() for ClusterFuture (<unnamed-1>) ...
[08:07:25.782] | : result() for ClusterFuture ...
[08:07:25.782] | : . result already collected: FutureResult
[08:07:25.782] | : result() for ClusterFuture ... done
[08:07:25.782] | : result() for ClusterFuture ...
[08:07:25.782] | : . result already collected: FutureResult
[08:07:25.783] | : result() for ClusterFuture ... done
[08:07:25.783] | : signalConditions() ...
[08:07:25.783] | : . include = ‘immediateCondition’
[08:07:25.783] | : . exclude = 
[08:07:25.783] | : . resignal = FALSE
[08:07:25.783] | : . Number of conditions: 0
[08:07:25.783] | : .  int 0
[08:07:25.783] | : signalConditions() ... done
[08:07:25.784] | : check for misuse ...
[08:07:25.784] | : check for misuse ... done
[08:07:25.784] | value() for ClusterFuture (<unnamed-1>) ... done
[08:07:25.784] | value: <integer>
[08:07:25.784] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:25.784] | : nx: 2
[08:07:25.784] | : relay: TRUE
[08:07:25.784] | : stdout: TRUE
[08:07:25.784] | : signal: TRUE
[08:07:25.784] | : resignal: FALSE
[08:07:25.785] | : force: TRUE
[08:07:25.785] | : relayed: [n=2] TRUE, FALSE
[08:07:25.785] | : queued futures: [n=2] TRUE, FALSE
[08:07:25.785] | : until=2
[08:07:25.785] | : relaying element #2
[08:07:25.785] | : relayed: [n=2] TRUE, FALSE
[08:07:25.785] | : queued futures: [n=2] TRUE, FALSE
[08:07:25.785] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:25.785] | resolve() for ClusterFuture ...
[08:07:25.786] | resolve() for ClusterFuture ... done
[08:07:25.786] | length: 1 (resolved future 1)
[08:07:25.786] value() for list ... done
[08:07:25.786] checking value #2:
[08:07:25.786] 'obj' is ClusterFuture
[08:07:25.786] resolved() for ClusterFuture (<unnamed-2>) ...
[08:07:25.786] | Cluster node socket connection: index=4, id=145
[08:07:25.786] | assertValidConnection() ...
[08:07:25.787] | : cluster node index: 1
[08:07:25.787] | assertValidConnection() ... done
[08:07:25.797] | socketSelect(list(<connection #4 (id=145)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:25.797] resolved() for ClusterFuture (<unnamed-2>) ... done
[08:07:25.808] Number of remaining objects: 1
[08:07:25.808] checking value #2:
[08:07:25.808] 'obj' is ClusterFuture
[08:07:25.808] resolved() for ClusterFuture (<unnamed-2>) ...
[08:07:25.808] | Cluster node socket connection: index=4, id=145
[08:07:25.809] | assertValidConnection() ...
[08:07:25.809] | : cluster node index: 1
[08:07:25.809] | assertValidConnection() ... done
[08:07:25.816] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:25.816] | : cluster node index: 1
[08:07:25.816] | : [1] TRUE
[08:07:25.816] | : received data:
[08:07:25.816] | : List of 5
[08:07:25.816] | :  $ type   : chr "VALUE"
[08:07:25.816] | :  $ value  :List of 16
[08:07:25.816] | :   ..$ value              : int 2
[08:07:25.816] | :   ..$ visible            : logi TRUE
[08:07:25.816] | :   ..$ stdout             : chr ""
[08:07:25.816] | :   ..$ conditions         : list()
[08:07:25.816] | :   ..$ rng                : logi FALSE
[08:07:25.816] | :   ..$ seed               : NULL
[08:07:25.816] | :   ..$ misuseGlobalEnv    : NULL
[08:07:25.816] | :   ..$ misuseConnections  :List of 3
[08:07:25.816] | :   .. ..$ added   : NULL
[08:07:25.816] | :   .. ..$ removed : NULL
[08:07:25.816] | :   .. ..$ replaced: NULL
[08:07:25.816] | :   ..$ misuseDevices      : NULL
[08:07:25.816] | :   ..$ misuseDefaultDevice: list()
[08:07:25.816] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.816] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.816] | :   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "2"
[08:07:25.816] | :   ..$ session_uuid       : chr "e32e94600550d3c92efcdb1a5af8ff07"
[08:07:25.816] | :   .. ..- attr(*, "source")=List of 5
[08:07:25.816] | :   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:25.816] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:25.816] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:25.816] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:25.816] | :   .. .. ..$ pid   : int 67133
[08:07:25.816] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:25"
[08:07:25.816] | :   .. .. ..$ random: int 2147483647
[08:07:25.816] | :   ..$ r_info             :List of 4
[08:07:25.816] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:25.816] | :   .. .. ..$ : int [1:3] 4 5 1
[08:07:25.816] | :   .. ..$ os           : chr "unix"
[08:07:25.816] | :   .. ..$ os_name      : chr "Linux"
[08:07:25.816] | :   .. ..$ captures_utf8: logi TRUE
[08:07:25.816] | :   ..$ version            : chr "1.8"
[08:07:25.816] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:25.816] | :  $ success: logi TRUE
[08:07:25.816] | :  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:07:25.816] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:25.816] | :  $ tag    : NULL
[08:07:25.828] | : Received FutureResult
[08:07:25.828] | : FutureResult:
[08:07:25.828] | : value: ‘integer’
[08:07:25.828] | : visible: TRUE
[08:07:25.828] | : stdout: character
[08:07:25.828] | : conditions: [n = 0] 
[08:07:25.828] | : RNG used: FALSE
[08:07:25.828] | : duration: 0.002569437 secs (started 2025-06-17 08:07:25.813013)
[08:07:25.828] | : version: 1.8
[08:07:25.829] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:25.829] | : . Removed future from position #1
[08:07:25.829] | : . Number of registered futures: 0
[08:07:25.829] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:25.829] | : Erased future from future backend
[08:07:25.830] | : result() for ClusterFuture ...
[08:07:25.830] | : . result already collected: FutureResult
[08:07:25.830] | : result() for ClusterFuture ... done
[08:07:25.830] | : signalConditions() ...
[08:07:25.830] | : . include = ‘immediateCondition’
[08:07:25.830] | : . exclude = 
[08:07:25.830] | : . resignal = FALSE
[08:07:25.830] | : . Number of conditions: 0
[08:07:25.830] | : .  int 0
[08:07:25.831] | : signalConditions() ... done
[08:07:25.831] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:25.831] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:25.831] resolved() for ClusterFuture (<unnamed-2>) ... done
[08:07:25.831] assertFutureResult() ...
[08:07:25.831] | Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:25.831] | Future uuid: 2
[08:07:25.831] | identical; success
[08:07:25.831] assertFutureResult() ... done
[08:07:25.831] ClusterFuture #2
[08:07:25.831] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:25.832] | nx: 2
[08:07:25.832] | relay: TRUE
[08:07:25.832] | stdout: TRUE
[08:07:25.832] | signal: TRUE
[08:07:25.832] | resignal: FALSE
[08:07:25.832] | force: TRUE
[08:07:25.832] | relayed: [n=2] TRUE, FALSE
[08:07:25.832] | queued futures: [n=2] TRUE, FALSE
[08:07:25.832] | until=2
[08:07:25.832] | relaying element #2
[08:07:25.832] | value() for ClusterFuture (<unnamed-2>) ...
[08:07:25.833] | : result() for ClusterFuture ...
[08:07:25.833] | : . result already collected: FutureResult
[08:07:25.833] | : result() for ClusterFuture ... done
[08:07:25.833] | : result() for ClusterFuture ...
[08:07:25.833] | : . result already collected: FutureResult
[08:07:25.833] | : result() for ClusterFuture ... done
[08:07:25.833] | : signalConditions() ...
[08:07:25.833] | : . include = ‘immediateCondition’
[08:07:25.833] | : . exclude = 
[08:07:25.833] | : . resignal = FALSE
[08:07:25.833] | : . Number of conditions: 0
[08:07:25.834] | : .  int 0
[08:07:25.834] | : signalConditions() ... done
[08:07:25.834] | : relay stdout ...
[08:07:25.834] | : relay stdout ... done
[08:07:25.834] | : check for misuse ...
[08:07:25.834] | : check for misuse ... done
[08:07:25.834] | value() for ClusterFuture (<unnamed-2>) ... done
[08:07:25.835] | result() for ClusterFuture ...
[08:07:25.835] | : result already collected: FutureResult
[08:07:25.835] | result() for ClusterFuture ... done
[08:07:25.835] | signalConditions() ...
[08:07:25.835] | : include = ‘immediateCondition’
[08:07:25.835] | : exclude = 
[08:07:25.835] | : resignal = FALSE
[08:07:25.835] | : Number of conditions: 0
[08:07:25.835] | :  int 0
[08:07:25.836] | signalConditions() ... done
[08:07:25.836] | result() for ClusterFuture ...
[08:07:25.836] | : result already collected: FutureResult
[08:07:25.836] | result() for ClusterFuture ... done
[08:07:25.836] | signalConditions() ...
[08:07:25.836] | : include = ‘condition’
[08:07:25.836] | : exclude = ‘error’, ‘immediateCondition’
[08:07:25.836] | : resignal = TRUE
[08:07:25.836] | : Number of conditions: 0
[08:07:25.837] | :  int 0
[08:07:25.837] | signalConditions() ... done
[08:07:25.837] | relayed: [n=2] TRUE, TRUE
[08:07:25.837] | queued futures: [n=2] TRUE, TRUE
[08:07:25.837] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:25.837] value(<ClusterFuture>, ...) ...
[08:07:25.837] value(<ClusterFuture>, ...) ... done
[08:07:25.838] value() for ClusterFuture (<unnamed-2>) ...
[08:07:25.838] | result() for ClusterFuture ...
[08:07:25.838] | : result already collected: FutureResult
[08:07:25.838] | result() for ClusterFuture ... done
[08:07:25.838] | result() for ClusterFuture ...
[08:07:25.838] | : result already collected: FutureResult
[08:07:25.838] | result() for ClusterFuture ... done
[08:07:25.838] | signalConditions() ...
[08:07:25.838] | : include = ‘immediateCondition’
[08:07:25.838] | : exclude = 
[08:07:25.838] | : resignal = FALSE
[08:07:25.839] | : Number of conditions: 0
[08:07:25.839] | :  int 0
[08:07:25.839] | signalConditions() ... done
[08:07:25.839] | check for misuse ...
[08:07:25.839] | check for misuse ... done
[08:07:25.839] value() for ClusterFuture (<unnamed-2>) ... done
[08:07:25.839] value: <integer>
[08:07:25.839] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:25.840] | nx: 2
[08:07:25.840] | relay: TRUE
[08:07:25.840] | stdout: TRUE
[08:07:25.840] | signal: TRUE
[08:07:25.840] | resignal: FALSE
[08:07:25.840] | force: TRUE
[08:07:25.840] | relayed: [n=2] TRUE, TRUE
[08:07:25.840] | queued futures: [n=2] TRUE, TRUE
[08:07:25.840] | until=2
[08:07:25.840] | relayed: [n=2] TRUE, TRUE
[08:07:25.840] | queued futures: [n=2] TRUE, TRUE
[08:07:25.841] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:25.841] resolve() for ClusterFuture ...
[08:07:25.841] resolve() for ClusterFuture ... done
[08:07:25.841] length: 0 (resolved future 2)

[08:07:25.841] Relaying remaining futures ...
[08:07:25.841] | signalConditionsASAP(NULL, pos=0) ...
[08:07:25.841] | : nx: 2
[08:07:25.841] | : relay: TRUE
[08:07:25.841] | : stdout: TRUE
[08:07:25.841] | : signal: TRUE
[08:07:25.842] | : resignal: FALSE
[08:07:25.842] | : force: TRUE
[08:07:25.842] | : relayed: [n=2] TRUE, TRUE
[08:07:25.842] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:25.842] | : relayed: [n=2] TRUE, TRUE
[08:07:25.842] | : queued futures: [n=2] TRUE, TRUE
[08:07:25.842] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:25.842] Relaying remaining futures ... done

Iteration #2
[08:07:26.033] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.034] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:26.034] | : all.equal() for FutureStrategyList ...
[08:07:26.034] | : . New stack:
[08:07:26.034] | : . List of 1
[08:07:26.034] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.034] | : .     envir = parent.frame())  
[08:07:26.034] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.034] | : .   ..- attr(*, "init")= logi TRUE
[08:07:26.034] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.034] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.034] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.034] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.034] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:26.034] | : .   .. ..$ workers:List of 1
[08:07:26.034] | : .   .. .. ..$ :List of 3
[08:07:26.034] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.034] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.034] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:26.034] | : .   .. .. .. ..$ rank: num 0
[08:07:26.034] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.034] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.034] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.034] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.040] | : . Old stack:
[08:07:26.040] | : . List of 1
[08:07:26.040] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.040] | : .     envir = parent.frame())  
[08:07:26.040] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.040] | : .   ..- attr(*, "init")= chr "done"
[08:07:26.040] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.040] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.040] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.040] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.040] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:26.040] | : .   .. ..$ workers:List of 1
[08:07:26.040] | : .   .. .. ..$ :List of 3
[08:07:26.040] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.040] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.040] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:26.040] | : .   .. .. .. ..$ rank: num 0
[08:07:26.040] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.040] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.040] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.040] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e97a7a4c8> 
[08:07:26.040] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.040] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.040] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.040] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.046] | : . Not identical
[08:07:26.047] | : . all.equal() for future ...
[08:07:26.047] | : . ' List of 2
[08:07:26.047] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.047] | : . '     envir = parent.frame())  
[08:07:26.047] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.047] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:26.047] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.047] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.047] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.047] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.047] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:26.047] | : . '   .. ..$ workers:List of 1
[08:07:26.047] | : . '   .. .. ..$ :List of 3
[08:07:26.047] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.047] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.047] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:26.047] | : . '   .. .. .. ..$ rank: num 0
[08:07:26.047] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.047] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.047] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.047] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.047] | : . '     envir = parent.frame())  
[08:07:26.047] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.047] | : . '   ..- attr(*, "init")= chr "done"
[08:07:26.047] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.047] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.047] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.047] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.047] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:26.047] | : . '   .. ..$ workers:List of 1
[08:07:26.047] | : . '   .. .. ..$ :List of 3
[08:07:26.047] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.047] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.047] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:26.047] | : . '   .. .. .. ..$ rank: num 0
[08:07:26.047] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.047] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.047] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.047] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e97a7a4c8> 
[08:07:26.047] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.047] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.047] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.059] | : . ' Formals differ
[08:07:26.060] | : . all.equal() for future ... done
[08:07:26.060] | : . Future strategies differ at level 1
[08:07:26.060] | : all.equal() for FutureStrategyList ... done
[08:07:26.060] | : plan(): Setting new future backend stack:
[08:07:26.060] | : List of future strategies:
[08:07:26.060] | : 1. cluster:
[08:07:26.060] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:26.060] | :    - tweaked: TRUE
[08:07:26.060] | :    - call: plan(cluster, workers = cl)
[08:07:26.061] | : List of 1
[08:07:26.061] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.061] | :     envir = parent.frame())  
[08:07:26.061] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.061] | :   ..- attr(*, "init")= logi TRUE
[08:07:26.061] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.061] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.061] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.061] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.061] | :   ..- attr(*, "tweaks")=List of 1
[08:07:26.061] | :   .. ..$ workers:List of 1
[08:07:26.061] | :   .. .. ..$ :List of 3
[08:07:26.061] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.061] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.061] | :   .. .. .. ..$ host: chr "localhost"
[08:07:26.061] | :   .. .. .. ..$ rank: num 0
[08:07:26.061] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.061] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.061] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.061] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.066] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:26.066] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.066] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:26.066] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.066] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:26.066] | : . ' Interrupt active futures ...
[08:07:26.067] | : . ' , Number of futures: 0
[08:07:26.067] | : . ' Interrupt active futures ... done
[08:07:26.067] | : . ' Clear future registry ...
[08:07:26.068] | : . ' Clear future registry ... done
[08:07:26.068] | : . ' Stop cluster workers ...
[08:07:26.068] | : . ' , Stopping existing cluster ...
[08:07:26.068] | : . ' , ; No pre-existing cluster. Skipping
[08:07:26.068] | : . ' , Stopping existing cluster ... done
[08:07:26.068] | : . ' Stop cluster workers ... done
[08:07:26.068] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:26.069] | : . Legacy shutdown of cluster workers ...
[08:07:26.069] | : . ' Stopping existing cluster ...
[08:07:26.069] | : . ' , No pre-existing cluster. Skipping
[08:07:26.069] | : . ' Stopping existing cluster ... done
[08:07:26.069] | : . Legacy shutdown of cluster workers ... done
[08:07:26.069] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:26.069] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:26.069] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.069] | : .     envir = parent.frame())  
[08:07:26.069] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.069] | : .  - attr(*, "init")= logi TRUE
[08:07:26.069] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.069] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.069] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.069] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.069] | : .  - attr(*, "tweaks")=List of 1
[08:07:26.069] | : .   ..$ workers:List of 1
[08:07:26.069] | : .   .. ..$ :List of 3
[08:07:26.069] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:26.069] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.069] | : .   .. .. ..$ host: chr "localhost"
[08:07:26.069] | : .   .. .. ..$ rank: num 0
[08:07:26.069] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.069] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.069] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.076] | : . init: TRUE
[08:07:26.076] | : . makeFutureBackend(<tweaked>) ...
[08:07:26.076] | : . ' Backend function: <‘NULL’>
[08:07:26.076] | : . ' Evaluator tweak arguments: [n=1]
[08:07:26.076] | : . ' List of 1
[08:07:26.076] | : . '  $ workers:List of 1
[08:07:26.076] | : . '   ..$ :List of 3
[08:07:26.076] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.076] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.076] | : . '   .. ..$ host: chr "localhost"
[08:07:26.076] | : . '   .. ..$ rank: num 0
[08:07:26.076] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.076] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.079] | : . ' Evaluator formal arguments: [n=1]
[08:07:26.079] | : . ' List of 1
[08:07:26.079] | : . '  $ workers:List of 1
[08:07:26.079] | : . '   ..$ :List of 3
[08:07:26.079] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.079] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.079] | : . '   .. ..$ host: chr "localhost"
[08:07:26.079] | : . '   .. ..$ rank: num 0
[08:07:26.079] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.079] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.082] | : . ' Backend factory arguments: [n=1]
[08:07:26.082] | : . ' Dotted pair list of 1
[08:07:26.082] | : . '  $ workers:List of 1
[08:07:26.082] | : . '   ..$ :List of 3
[08:07:26.082] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.082] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.082] | : . '   .. ..$ host: chr "localhost"
[08:07:26.082] | : . '   .. ..$ rank: num 0
[08:07:26.082] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.082] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.113] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:26.113] | : . ' , Stopping existing cluster ...
[08:07:26.114] | : . ' , ; No pre-existing cluster. Skipping
[08:07:26.114] | : . ' , Stopping existing cluster ... done
[08:07:26.114] | : . ' , Number of workers: 1
[08:07:26.114] | : . ' , Generated workers UUID
[08:07:26.114] | : . ' , Workers UUID: ‘8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.114] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:26.114] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:26.114] | : . makeFutureBackend(<tweaked>) ... done
[08:07:26.115] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:26.115] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.115] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.115] | : plan(): nbrOfWorkers() = 1
[08:07:26.115] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:26.115] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.115] future(..., label = NULL) ...
[08:07:26.115] | lazy: FALSE
[08:07:26.115] | stdout: TRUE
[08:07:26.116] | conditions: [n=1] ‘condition’
[08:07:26.116] | gc: FALSE
[08:07:26.116] | earlySignal: FALSE
[08:07:26.116] | getGlobalsAndPackages() ...
[08:07:26.116] | : Searching for globals ...
[08:07:26.120] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:26.120] | : Searching for globals ... done
[08:07:26.120] | : Resolving globals: FALSE
[08:07:26.120] | : Search for packages associated with the globals ...
[08:07:26.121] | : . Packages associated with globals: [1] ‘base’
[08:07:26.121] | : . Packages: [1] ‘base’
[08:07:26.121] | : Search for packages associated with the globals ... done
[08:07:26.121] | : Packages after dropping 'base': [0] 
[08:07:26.121] | : globals: [2] ‘X’, ‘i’
[08:07:26.121] | : packages: [0] 
[08:07:26.122] | getGlobalsAndPackages() ... done
[08:07:26.122] | run() for ‘Future’ (<unnamed-3>) ...
[08:07:26.122] | : state: ‘created’
[08:07:26.122] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.122] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.122] | : Using ClusterFutureBackend ...
[08:07:26.122] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:26.122] | : . Launching futures ...
[08:07:26.123] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:26.123] | : . ' , Workers: [n=1]
[08:07:26.123] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:26.123] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.123] | : . ' , requestWorker() ...
[08:07:26.123] | : . ' , ; requestNode() ...
[08:07:26.123] | : . ' , ; ` Number of workers: 1
[08:07:26.124] | : . ' , ; ` Polling for a free worker ...
[08:07:26.124] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.124] | : . ' , ; ` | : Listing all futures
[08:07:26.124] | : . ' , ; ` | : Number of registered futures: 0
[08:07:26.124] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.124] | : . ' , ; ` | Total time: 0
[08:07:26.124] | : . ' , ; ` Polling for a free worker ... done
[08:07:26.124] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.124] | : . ' , ; ` | Listing all futures
[08:07:26.124] | : . ' , ; ` | Number of registered futures: 0
[08:07:26.125] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.125] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:26.125] | : . ' , ; ` Index of first available worker: 1
[08:07:26.125] | : . ' , ; ` Validate that the worker is functional ...
[08:07:26.183] | : . ' , ; ` | Worker is functional
[08:07:26.183] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.183] | : . ' , ; ` | : Listing all futures
[08:07:26.184] | : . ' , ; ` | : Number of registered futures: 0
[08:07:26.184] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.184] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:26.184] | : . ' , ; requestNode() ... done
[08:07:26.184] | : . ' , ; cluster node index: 1
[08:07:26.184] | : . ' , requestWorker() ... done
[08:07:26.184] | : . ' , eraseGlobalEnvironment() ...
[08:07:26.185] | : . ' , eraseGlobalEnvironment() ... done
[08:07:26.185] | : . ' , launchFuture() ...
[08:07:26.185] | : . ' , ; cluster node index: 1
[08:07:26.185] | : . ' , ; getFutureData() ...
[08:07:26.185] | : . ' , ; ` getFutureCore() ...
[08:07:26.185] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:26.185] | : . ' , ; ` getFutureCore() ... done
[08:07:26.186] | : . ' , ; ` getFutureCapture() ...
[08:07:26.186] | : . ' , ; ` getFutureCapture() ... done
[08:07:26.186] | : . ' , ; ` getFutureContext() ...
[08:07:26.186] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.186] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:26.186] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.186] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:26.186] | : . ' , ; ` getFutureContext() ... done
[08:07:26.187] | : . ' , ; getFutureData() ... done
[08:07:26.187] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:26.187] | : . ' , ; ` Appended future to position #1
[08:07:26.187] | : . ' , ; ` Number of registered futures: 1
[08:07:26.188] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:26.188] | : . ' , launchFuture() ... done
[08:07:26.188] | : . ' , ClusterFuture started
[08:07:26.188] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:26.190] | : . Launching futures ... done
[08:07:26.191] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:26.191] | : Using ClusterFutureBackend ... done
[08:07:26.191] | run() for ‘Future’ (<unnamed-3>) ... done
[08:07:26.191] future(..., label = NULL) ... done
[08:07:26.191] future(..., label = NULL) ...
[08:07:26.191] | lazy: FALSE
[08:07:26.191] | stdout: TRUE
[08:07:26.191] | conditions: [n=1] ‘condition’
[08:07:26.191] | gc: FALSE
[08:07:26.192] | earlySignal: FALSE
[08:07:26.192] | getGlobalsAndPackages() ...
[08:07:26.192] | : Searching for globals ...
[08:07:26.196] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:26.196] | : Searching for globals ... done
[08:07:26.197] | : Resolving globals: FALSE
[08:07:26.197] | : Search for packages associated with the globals ...
[08:07:26.197] | : . Packages associated with globals: [1] ‘base’
[08:07:26.197] | : . Packages: [1] ‘base’
[08:07:26.197] | : Search for packages associated with the globals ... done
[08:07:26.198] | : Packages after dropping 'base': [0] 
[08:07:26.198] | : globals: [2] ‘X’, ‘i’
[08:07:26.198] | : packages: [0] 
[08:07:26.198] | getGlobalsAndPackages() ... done
[08:07:26.198] | run() for ‘Future’ (<unnamed-4>) ...
[08:07:26.198] | : state: ‘created’
[08:07:26.198] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.199] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.199] | : Using ClusterFutureBackend ...
[08:07:26.199] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:26.199] | : . Launching futures ...
[08:07:26.199] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:26.199] | : . ' , Workers: [n=1]
[08:07:26.199] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:26.200] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.200] | : . ' , requestWorker() ...
[08:07:26.200] | : . ' , ; requestNode() ...
[08:07:26.200] | : . ' , ; ` Number of workers: 1
[08:07:26.200] | : . ' , ; ` Polling for a free worker ...
[08:07:26.200] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.200] | : . ' , ; ` | : Listing all futures
[08:07:26.200] | : . ' , ; ` | : Number of registered futures: 1
[08:07:26.201] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.201] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:26.211] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.211] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.212] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:26.212] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=190
[08:07:26.212] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:26.212] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:26.213] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:26.223] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.224] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.224] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:26.224] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.224] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:26.224] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.224] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:26.225] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:26.225] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:26.225] | : . ' , ; ` | Number of registered futures: 1
[08:07:26.225] | : . ' , ; ` Polling for a free worker ... done
[08:07:26.225] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.225] | : . ' , ; ` | Listing all futures
[08:07:26.225] | : . ' , ; ` | Number of registered futures: 1
[08:07:26.225] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.226] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:26.236] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.236] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.237] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:26.237] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=190
[08:07:26.237] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:26.238] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:26.238] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:26.248] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.249] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.249] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:26.249] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.249] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:26.249] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.249] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:26.249] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:26.249] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:26.250] | : . ' , ; ` Number of registered futures: 1
[08:07:26.250] | : . ' , ; requestNode() ... done
[08:07:26.250] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.250] | : . ' , ; ` Listing all futures
[08:07:26.250] | : . ' , ; ` Number of registered futures: 1
[08:07:26.250] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.250] | : . ' , ; Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[08:07:26.261] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.261] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.261] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:26.262] | : . ' , ; ` | : Cluster node socket connection: index=4, id=190
[08:07:26.262] | : . ' , ; ` | : assertValidConnection() ...
[08:07:26.262] | : . ' , ; ` | : . cluster node index: 1
[08:07:26.262] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:26.273] | : . ' , ; ` | : socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.273] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.273] | : . ' , ; ` | Future at position #1 is not resolved
[08:07:26.273] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.273] | : . ' , ; ` Indices of futures to drop: [n=0] <none>
[08:07:26.273] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.274] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:26.274] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:26.274] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:26.274] | : . ' , ; Number of registered futures: 1
[08:07:26.274] | : . ' , requestWorker() ... done
[08:07:26.274] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.274] | : . ' , ; Listing all futures
[08:07:26.274] | : . ' , ; Number of registered futures: 1
[08:07:26.275] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.275] | : . ' , Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[08:07:26.285] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.285] | : . ' , ; collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.288] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-3>) ...
[08:07:26.288] | : . ' , ; ` | Cluster node socket connection: index=4, id=190
[08:07:26.288] | : . ' , ; ` | assertValidConnection() ...
[08:07:26.289] | : . ' , ; ` | : cluster node index: 1
[08:07:26.289] | : . ' , ; ` | assertValidConnection() ... done
[08:07:26.289] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ...
[08:07:26.289] | : . ' , ; ` | : cluster node index: 1
[08:07:26.289] | : . ' , ; ` | : [1] TRUE
[08:07:26.290] | : . ' , ; ` | : received data:
[08:07:26.290] | : . ' , ; ` | : List of 5
[08:07:26.290] | : . ' , ; ` | :  $ type   : chr "VALUE"
[08:07:26.290] | : . ' , ; ` | :  $ value  :List of 16
[08:07:26.290] | : . ' , ; ` | :   ..$ value              : int 1
[08:07:26.290] | : . ' , ; ` | :   ..$ visible            : logi TRUE
[08:07:26.290] | : . ' , ; ` | :   ..$ stdout             : chr ""
[08:07:26.290] | : . ' , ; ` | :   ..$ conditions         : list()
[08:07:26.290] | : . ' , ; ` | :   ..$ rng                : logi FALSE
[08:07:26.290] | : . ' , ; ` | :   ..$ seed               : NULL
[08:07:26.290] | : . ' , ; ` | :   ..$ misuseGlobalEnv    : NULL
[08:07:26.290] | : . ' , ; ` | :   ..$ misuseConnections  :List of 3
[08:07:26.290] | : . ' , ; ` | :   .. ..$ added   : NULL
[08:07:26.290] | : . ' , ; ` | :   .. ..$ removed : NULL
[08:07:26.290] | : . ' , ; ` | :   .. ..$ replaced: NULL
[08:07:26.290] | : . ' , ; ` | :   ..$ misuseDevices      : NULL
[08:07:26.290] | : . ' , ; ` | :   ..$ misuseDefaultDevice: list()
[08:07:26.290] | : . ' , ; ` | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.290] | : . ' , ; ` | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.290] | : . ' , ; ` | :   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "3"
[08:07:26.290] | : . ' , ; ` | :   ..$ session_uuid       : chr "40da01e229d637a590f26e3f7b049ae2"
[08:07:26.290] | : . ' , ; ` | :   .. ..- attr(*, "source")=List of 5
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:26.290] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:26.290] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ pid   : int 67153
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ random: int 2147483647
[08:07:26.290] | : . ' , ; ` | :   ..$ r_info             :List of 4
[08:07:26.290] | : . ' , ; ` | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:26.290] | : . ' , ; ` | :   .. .. ..$ : int [1:3] 4 5 1
[08:07:26.290] | : . ' , ; ` | :   .. ..$ os           : chr "unix"
[08:07:26.290] | : . ' , ; ` | :   .. ..$ os_name      : chr "Linux"
[08:07:26.290] | : . ' , ; ` | :   .. ..$ captures_utf8: logi TRUE
[08:07:26.290] | : . ' , ; ` | :   ..$ version            : chr "1.8"
[08:07:26.290] | : . ' , ; ` | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:26.290] | : . ' , ; ` | :  $ success: logi TRUE
[08:07:26.290] | : . ' , ; ` | :  $ time   : 'proc_time' Named num [1:5] 0.049 0.003 0.051 0 0
[08:07:26.290] | : . ' , ; ` | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:26.290] | : . ' , ; ` | :  $ tag    : NULL
[08:07:26.302] | : . ' , ; ` | : Received FutureResult
[08:07:26.302] | : . ' , ; ` | : FutureResult:
[08:07:26.302] | : . ' , ; ` | : value: ‘integer’
[08:07:26.302] | : . ' , ; ` | : visible: TRUE
[08:07:26.302] | : . ' , ; ` | : stdout: character
[08:07:26.302] | : . ' , ; ` | : conditions: [n = 0] 
[08:07:26.302] | : . ' , ; ` | : RNG used: FALSE
[08:07:26.302] | : . ' , ; ` | : duration: 0.04903769 secs (started 2025-06-17 08:07:26.229343)
[08:07:26.302] | : . ' , ; ` | : version: 1.8
[08:07:26.302] | : . ' , ; ` | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:26.302] | : . ' , ; ` | : . Removed future from position #1
[08:07:26.303] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:26.303] | : . ' , ; ` | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:26.303] | : . ' , ; ` | : Erased future from future backend
[08:07:26.303] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.303] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.303] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.303] | : . ' , ; ` | : signalConditions() ...
[08:07:26.303] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:26.303] | : . ' , ; ` | : . exclude = 
[08:07:26.304] | : . ' , ; ` | : . resignal = FALSE
[08:07:26.304] | : . ' , ; ` | : . Number of conditions: 0
[08:07:26.304] | : . ' , ; ` | : .  int 0
[08:07:26.304] | : . ' , ; ` | : signalConditions() ... done
[08:07:26.304] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:26.304] | : . ' , ; ` | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:26.304] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.305] | : . ' , ; ` assertFutureResult() ...
[08:07:26.305] | : . ' , ; ` | Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:26.305] | : . ' , ; ` | Future uuid: 3
[08:07:26.305] | : . ' , ; ` | identical; success
[08:07:26.305] | : . ' , ; ` assertFutureResult() ... done
[08:07:26.305] | : . ' , ; ` Future at position #1 is resolved ...
[08:07:26.305] | : . ' , ; ` | value() for ClusterFuture (<unnamed-3>) ...
[08:07:26.305] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.305] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.305] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.306] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.306] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.306] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.306] | : . ' , ; ` | : signalConditions() ...
[08:07:26.306] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:26.306] | : . ' , ; ` | : . exclude = 
[08:07:26.306] | : . ' , ; ` | : . resignal = FALSE
[08:07:26.306] | : . ' , ; ` | : . Number of conditions: 0
[08:07:26.306] | : . ' , ; ` | : .  int 0
[08:07:26.309] | : . ' , ; ` | : signalConditions() ... done
[08:07:26.309] | : . ' , ; ` | : check for misuse ...
[08:07:26.309] | : . ' , ; ` | : check for misuse ... done
[08:07:26.309] | : . ' , ; ` | value() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.309] | : . ' , ; ` Future at position #1 is resolved ... done
[08:07:26.309] | : . ' , ; collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.310] | : . ' , ; Remove collected futures ...
[08:07:26.310] | : . ' , ; ` Indices of futures to drop: [n=1] ‘1’
[08:07:26.310] | : . ' , ; Remove collected futures ... done
[08:07:26.310] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.310] | : . ' , Early signaling of 1 future candidates ...
[08:07:26.310] | : . ' , Number of futures with early signaling requested: 0
[08:07:26.310] | : . ' , Early signaling of 1 future candidates ... done
[08:07:26.310] | : . ' , Number of registered futures: 1
[08:07:26.310] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:26.311] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.311] | : . ' , Listing all futures
[08:07:26.311] | : . ' , Number of registered futures: 0
[08:07:26.311] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.311] | : . ' Total time: 0.110293865203857
[08:07:26.311] | : . Launching futures ... done
[08:07:26.311] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.311] | : . ' Listing all futures
[08:07:26.311] | : . ' Number of registered futures: 0
[08:07:26.311] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.312] | : . avail: [n=1] ‘1’
[08:07:26.312] | : . Index of first available worker: 1
[08:07:26.312] | : . Validate that the worker is functional ...
[08:07:26.354] | : . ' Worker is functional
[08:07:26.354] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.354] | : . ' , Listing all futures
[08:07:26.354] | : . ' , Number of registered futures: 0
[08:07:26.354] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.354] | : . Validate that the worker is functional ... done
[08:07:26.354] | : Using ClusterFutureBackend ... done
[08:07:26.355] | : cluster node index: 1
[08:07:26.355] | run() for ‘Future’ (<unnamed-4>) ... done
[08:07:26.355] | eraseGlobalEnvironment() ...
[08:07:26.355] | eraseGlobalEnvironment() ... done
[08:07:26.355] | launchFuture() ...
[08:07:26.356] | : cluster node index: 1
[08:07:26.356] | : getFutureData() ...
[08:07:26.356] | : . getFutureCore() ...
[08:07:26.356] | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:26.356] | : . getFutureCore() ... done
[08:07:26.356] | : . getFutureCapture() ...
[08:07:26.356] | : . getFutureCapture() ... done
[08:07:26.356] | : . getFutureContext() ...
[08:07:26.356] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.357] | : . ' , Getting stack without first backend: [n=0] 
[08:07:26.357] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.357] | : . ' Packages needed by future backend (n = 0): <none>
[08:07:26.357] | : . getFutureContext() ... done
[08:07:26.357] | : getFutureData() ... done
[08:07:26.358] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:26.358] | : . Appended future to position #1
[08:07:26.358] | : . Number of registered futures: 1
[08:07:26.358] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:26.358] | launchFuture() ... done
[08:07:26.358] | ClusterFuture started
[08:07:26.358] future(..., label = NULL) ... done

[08:07:26.358] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:26.359] value() for list ...
[08:07:26.359] | recursive: 0
[08:07:26.359] | reduce: FALSE
[08:07:26.359] | length: 2

[08:07:26.359] | Number of remaining objects: 2
[08:07:26.360] | checking value #1:
[08:07:26.360] | 'obj' is ClusterFuture
[08:07:26.360] | ClusterFuture #1
[08:07:26.360] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:26.360] | : nx: 2
[08:07:26.360] | : relay: TRUE
[08:07:26.360] | : stdout: TRUE
[08:07:26.360] | : signal: TRUE
[08:07:26.360] | : resignal: FALSE
[08:07:26.360] | : force: TRUE
[08:07:26.361] | : relayed: [n=2] FALSE, FALSE
[08:07:26.361] | : queued futures: [n=2] FALSE, FALSE
[08:07:26.361] | : until=1
[08:07:26.361] | : relaying element #1
[08:07:26.361] | : value() for ClusterFuture (<unnamed-3>) ...
[08:07:26.361] | : . result() for ClusterFuture ...
[08:07:26.361] | : . ' result already collected: FutureResult
[08:07:26.361] | : . result() for ClusterFuture ... done
[08:07:26.361] | : . result() for ClusterFuture ...
[08:07:26.362] | : . ' result already collected: FutureResult
[08:07:26.362] | : . result() for ClusterFuture ... done
[08:07:26.362] | : . signalConditions() ...
[08:07:26.362] | : . ' include = ‘immediateCondition’
[08:07:26.362] | : . ' exclude = 
[08:07:26.362] | : . ' resignal = FALSE
[08:07:26.362] | : . ' Number of conditions: 0
[08:07:26.362] | : . '  int 0
[08:07:26.363] | : . signalConditions() ... done
[08:07:26.363] | : . relay stdout ...
[08:07:26.363] | : . relay stdout ... done
[08:07:26.363] | : . check for misuse ...
[08:07:26.363] | : . check for misuse ... done
[08:07:26.363] | : value() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.364] | : result() for ClusterFuture ...
[08:07:26.364] | : . result already collected: FutureResult
[08:07:26.364] | : result() for ClusterFuture ... done
[08:07:26.364] | : signalConditions() ...
[08:07:26.364] | : . include = ‘immediateCondition’
[08:07:26.364] | : . exclude = 
[08:07:26.364] | : . resignal = FALSE
[08:07:26.364] | : . Number of conditions: 0
[08:07:26.364] | : .  int 0
[08:07:26.365] | : signalConditions() ... done
[08:07:26.365] | : result() for ClusterFuture ...
[08:07:26.365] | : . result already collected: FutureResult
[08:07:26.365] | : result() for ClusterFuture ... done
[08:07:26.365] | : signalConditions() ...
[08:07:26.365] | : . include = ‘condition’
[08:07:26.365] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:26.366] | : . resignal = TRUE
[08:07:26.366] | : . Number of conditions: 0
[08:07:26.366] | : .  int 0
[08:07:26.366] | : signalConditions() ... done
[08:07:26.366] | : relayed: [n=2] TRUE, FALSE
[08:07:26.366] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.367] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:26.367] | value(<ClusterFuture>, ...) ...
[08:07:26.367] | value(<ClusterFuture>, ...) ... done
[08:07:26.367] | value() for ClusterFuture (<unnamed-3>) ...
[08:07:26.367] | : result() for ClusterFuture ...
[08:07:26.367] | : . result already collected: FutureResult
[08:07:26.367] | : result() for ClusterFuture ... done
[08:07:26.367] | : result() for ClusterFuture ...
[08:07:26.367] | : . result already collected: FutureResult
[08:07:26.367] | : result() for ClusterFuture ... done
[08:07:26.368] | : signalConditions() ...
[08:07:26.368] | : . include = ‘immediateCondition’
[08:07:26.368] | : . exclude = 
[08:07:26.368] | : . resignal = FALSE
[08:07:26.368] | : . Number of conditions: 0
[08:07:26.368] | : .  int 0
[08:07:26.369] | : signalConditions() ... done
[08:07:26.369] | : check for misuse ...
[08:07:26.369] | : check for misuse ... done
[08:07:26.369] | value() for ClusterFuture (<unnamed-3>) ... done
[08:07:26.369] | value: <integer>
[08:07:26.369] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:26.369] | : nx: 2
[08:07:26.369] | : relay: TRUE
[08:07:26.369] | : stdout: TRUE
[08:07:26.369] | : signal: TRUE
[08:07:26.370] | : resignal: FALSE
[08:07:26.370] | : force: TRUE
[08:07:26.370] | : relayed: [n=2] TRUE, FALSE
[08:07:26.370] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.372] | : until=2
[08:07:26.372] | : relaying element #2
[08:07:26.372] | : relayed: [n=2] TRUE, FALSE
[08:07:26.372] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.372] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:26.373] | resolve() for ClusterFuture ...
[08:07:26.373] | resolve() for ClusterFuture ... done
[08:07:26.373] | length: 1 (resolved future 1)
[08:07:26.373] value() for list ... done
[08:07:26.373] checking value #2:
[08:07:26.373] 'obj' is ClusterFuture
[08:07:26.373] resolved() for ClusterFuture (<unnamed-4>) ...
[08:07:26.374] | Cluster node socket connection: index=4, id=190
[08:07:26.374] | assertValidConnection() ...
[08:07:26.374] | : cluster node index: 1
[08:07:26.374] | assertValidConnection() ... done
[08:07:26.385] | socketSelect(list(<connection #4 (id=190)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.385] resolved() for ClusterFuture (<unnamed-4>) ... done
[08:07:26.395] Number of remaining objects: 1
[08:07:26.395] checking value #2:
[08:07:26.395] 'obj' is ClusterFuture
[08:07:26.396] resolved() for ClusterFuture (<unnamed-4>) ...
[08:07:26.396] | Cluster node socket connection: index=4, id=190
[08:07:26.396] | assertValidConnection() ...
[08:07:26.396] | : cluster node index: 1
[08:07:26.397] | assertValidConnection() ... done
[08:07:26.402] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:26.403] | : cluster node index: 1
[08:07:26.403] | : [1] TRUE
[08:07:26.403] | : received data:
[08:07:26.403] | : List of 5
[08:07:26.403] | :  $ type   : chr "VALUE"
[08:07:26.403] | :  $ value  :List of 16
[08:07:26.403] | :   ..$ value              : int 2
[08:07:26.403] | :   ..$ visible            : logi TRUE
[08:07:26.403] | :   ..$ stdout             : chr ""
[08:07:26.403] | :   ..$ conditions         : list()
[08:07:26.403] | :   ..$ rng                : logi FALSE
[08:07:26.403] | :   ..$ seed               : NULL
[08:07:26.403] | :   ..$ misuseGlobalEnv    : NULL
[08:07:26.403] | :   ..$ misuseConnections  :List of 3
[08:07:26.403] | :   .. ..$ added   : NULL
[08:07:26.403] | :   .. ..$ removed : NULL
[08:07:26.403] | :   .. ..$ replaced: NULL
[08:07:26.403] | :   ..$ misuseDevices      : NULL
[08:07:26.403] | :   ..$ misuseDefaultDevice: list()
[08:07:26.403] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.403] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.403] | :   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "4"
[08:07:26.403] | :   ..$ session_uuid       : chr "40da01e229d637a590f26e3f7b049ae2"
[08:07:26.403] | :   .. ..- attr(*, "source")=List of 5
[08:07:26.403] | :   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:26.403] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:26.403] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:26.403] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:26.403] | :   .. .. ..$ pid   : int 67153
[08:07:26.403] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.403] | :   .. .. ..$ random: int 2147483647
[08:07:26.403] | :   ..$ r_info             :List of 4
[08:07:26.403] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:26.403] | :   .. .. ..$ : int [1:3] 4 5 1
[08:07:26.403] | :   .. ..$ os           : chr "unix"
[08:07:26.403] | :   .. ..$ os_name      : chr "Linux"
[08:07:26.403] | :   .. ..$ captures_utf8: logi TRUE
[08:07:26.403] | :   ..$ version            : chr "1.8"
[08:07:26.403] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:26.403] | :  $ success: logi TRUE
[08:07:26.403] | :  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:07:26.403] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:26.403] | :  $ tag    : NULL
[08:07:26.416] | : Received FutureResult
[08:07:26.416] | : FutureResult:
[08:07:26.416] | : value: ‘integer’
[08:07:26.416] | : visible: TRUE
[08:07:26.416] | : stdout: character
[08:07:26.416] | : conditions: [n = 0] 
[08:07:26.416] | : RNG used: FALSE
[08:07:26.416] | : duration: 0.002915859 secs (started 2025-06-17 08:07:26.399154)
[08:07:26.416] | : version: 1.8
[08:07:26.417] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:26.417] | : . Removed future from position #1
[08:07:26.417] | : . Number of registered futures: 0
[08:07:26.417] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:26.418] | : Erased future from future backend
[08:07:26.418] | : result() for ClusterFuture ...
[08:07:26.418] | : . result already collected: FutureResult
[08:07:26.418] | : result() for ClusterFuture ... done
[08:07:26.418] | : signalConditions() ...
[08:07:26.418] | : . include = ‘immediateCondition’
[08:07:26.418] | : . exclude = 
[08:07:26.418] | : . resignal = FALSE
[08:07:26.418] | : . Number of conditions: 0
[08:07:26.421] | : .  int 0
[08:07:26.421] | : signalConditions() ... done
[08:07:26.422] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:26.422] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:26.422] resolved() for ClusterFuture (<unnamed-4>) ... done
[08:07:26.422] assertFutureResult() ...
[08:07:26.422] | Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:26.422] | Future uuid: 4
[08:07:26.422] | identical; success
[08:07:26.422] assertFutureResult() ... done
[08:07:26.422] ClusterFuture #2
[08:07:26.422] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:26.422] | nx: 2
[08:07:26.423] | relay: TRUE
[08:07:26.423] | stdout: TRUE
[08:07:26.423] | signal: TRUE
[08:07:26.423] | resignal: FALSE
[08:07:26.423] | force: TRUE
[08:07:26.423] | relayed: [n=2] TRUE, FALSE
[08:07:26.423] | queued futures: [n=2] TRUE, FALSE
[08:07:26.423] | until=2
[08:07:26.423] | relaying element #2
[08:07:26.423] | value() for ClusterFuture (<unnamed-4>) ...
[08:07:26.424] | : result() for ClusterFuture ...
[08:07:26.424] | : . result already collected: FutureResult
[08:07:26.424] | : result() for ClusterFuture ... done
[08:07:26.424] | : result() for ClusterFuture ...
[08:07:26.424] | : . result already collected: FutureResult
[08:07:26.424] | : result() for ClusterFuture ... done
[08:07:26.424] | : signalConditions() ...
[08:07:26.424] | : . include = ‘immediateCondition’
[08:07:26.424] | : . exclude = 
[08:07:26.425] | : . resignal = FALSE
[08:07:26.425] | : . Number of conditions: 0
[08:07:26.425] | : .  int 0
[08:07:26.425] | : signalConditions() ... done
[08:07:26.425] | : relay stdout ...
[08:07:26.426] | : relay stdout ... done
[08:07:26.426] | : check for misuse ...
[08:07:26.426] | : check for misuse ... done
[08:07:26.426] | value() for ClusterFuture (<unnamed-4>) ... done
[08:07:26.426] | result() for ClusterFuture ...
[08:07:26.426] | : result already collected: FutureResult
[08:07:26.426] | result() for ClusterFuture ... done
[08:07:26.426] | signalConditions() ...
[08:07:26.426] | : include = ‘immediateCondition’
[08:07:26.427] | : exclude = 
[08:07:26.427] | : resignal = FALSE
[08:07:26.427] | : Number of conditions: 0
[08:07:26.427] | :  int 0
[08:07:26.427] | signalConditions() ... done
[08:07:26.427] | result() for ClusterFuture ...
[08:07:26.428] | : result already collected: FutureResult
[08:07:26.428] | result() for ClusterFuture ... done
[08:07:26.428] | signalConditions() ...
[08:07:26.428] | : include = ‘condition’
[08:07:26.428] | : exclude = ‘error’, ‘immediateCondition’
[08:07:26.428] | : resignal = TRUE
[08:07:26.428] | : Number of conditions: 0
[08:07:26.428] | :  int 0
[08:07:26.429] | signalConditions() ... done
[08:07:26.429] | relayed: [n=2] TRUE, TRUE
[08:07:26.429] | queued futures: [n=2] TRUE, TRUE
[08:07:26.429] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:26.429] value(<ClusterFuture>, ...) ...
[08:07:26.429] value(<ClusterFuture>, ...) ... done
[08:07:26.429] value() for ClusterFuture (<unnamed-4>) ...
[08:07:26.430] | result() for ClusterFuture ...
[08:07:26.430] | : result already collected: FutureResult
[08:07:26.430] | result() for ClusterFuture ... done
[08:07:26.430] | result() for ClusterFuture ...
[08:07:26.430] | : result already collected: FutureResult
[08:07:26.430] | result() for ClusterFuture ... done
[08:07:26.430] | signalConditions() ...
[08:07:26.430] | : include = ‘immediateCondition’
[08:07:26.430] | : exclude = 
[08:07:26.430] | : resignal = FALSE
[08:07:26.431] | : Number of conditions: 0
[08:07:26.431] | :  int 0
[08:07:26.431] | signalConditions() ... done
[08:07:26.431] | check for misuse ...
[08:07:26.431] | check for misuse ... done
[08:07:26.432] value() for ClusterFuture (<unnamed-4>) ... done
[08:07:26.432] value: <integer>
[08:07:26.432] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:26.432] | nx: 2
[08:07:26.432] | relay: TRUE
[08:07:26.432] | stdout: TRUE
[08:07:26.432] | signal: TRUE
[08:07:26.432] | resignal: FALSE
[08:07:26.432] | force: TRUE
[08:07:26.432] | relayed: [n=2] TRUE, TRUE
[08:07:26.432] | queued futures: [n=2] TRUE, TRUE
[08:07:26.433] | until=2
[08:07:26.433] | relayed: [n=2] TRUE, TRUE
[08:07:26.433] | queued futures: [n=2] TRUE, TRUE
[08:07:26.433] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:26.433] resolve() for ClusterFuture ...
[08:07:26.433] resolve() for ClusterFuture ... done
[08:07:26.433] length: 0 (resolved future 2)

[08:07:26.433] Relaying remaining futures ...
[08:07:26.434] | signalConditionsASAP(NULL, pos=0) ...
[08:07:26.434] | : nx: 2
[08:07:26.434] | : relay: TRUE
[08:07:26.434] | : stdout: TRUE
[08:07:26.434] | : signal: TRUE
[08:07:26.434] | : resignal: FALSE
[08:07:26.434] | : force: TRUE
[08:07:26.434] | : relayed: [n=2] TRUE, TRUE
[08:07:26.434] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:26.435] | : relayed: [n=2] TRUE, TRUE
[08:07:26.435] | : queued futures: [n=2] TRUE, TRUE
[08:07:26.435] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:26.435] Relaying remaining futures ... done

Iteration #3
[08:07:26.625] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.625] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:26.626] | : all.equal() for FutureStrategyList ...
[08:07:26.626] | : . New stack:
[08:07:26.626] | : . List of 1
[08:07:26.626] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.626] | : .     envir = parent.frame())  
[08:07:26.626] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.626] | : .   ..- attr(*, "init")= logi TRUE
[08:07:26.626] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.626] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.626] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.626] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.626] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:26.626] | : .   .. ..$ workers:List of 1
[08:07:26.626] | : .   .. .. ..$ :List of 3
[08:07:26.626] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.626] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.626] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:26.626] | : .   .. .. .. ..$ rank: num 0
[08:07:26.626] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.626] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.626] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.626] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.667] | : . Old stack:
[08:07:26.667] | : . List of 1
[08:07:26.667] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.667] | : .     envir = parent.frame())  
[08:07:26.667] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.667] | : .   ..- attr(*, "init")= chr "done"
[08:07:26.667] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.667] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.667] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.667] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.667] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:26.667] | : .   .. ..$ workers:List of 1
[08:07:26.667] | : .   .. .. ..$ :List of 3
[08:07:26.667] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.667] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.667] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:26.667] | : .   .. .. .. ..$ rank: num 0
[08:07:26.667] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.667] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.667] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.667] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e96440df8> 
[08:07:26.667] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.667] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.667] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.667] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.674] | : . Not identical
[08:07:26.674] | : . all.equal() for future ...
[08:07:26.674] | : . ' List of 2
[08:07:26.674] | : . '  $ target :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.674] | : . '     envir = parent.frame())  
[08:07:26.674] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.674] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:26.674] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.674] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.674] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.674] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.674] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:26.674] | : . '   .. ..$ workers:List of 1
[08:07:26.674] | : . '   .. .. ..$ :List of 3
[08:07:26.674] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.674] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.674] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:26.674] | : . '   .. .. .. ..$ rank: num 0
[08:07:26.674] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.674] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.674] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.674] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.674] | : . '     envir = parent.frame())  
[08:07:26.674] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.674] | : . '   ..- attr(*, "init")= chr "done"
[08:07:26.674] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.674] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.674] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.674] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.674] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:26.674] | : . '   .. ..$ workers:List of 1
[08:07:26.674] | : . '   .. .. ..$ :List of 3
[08:07:26.674] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.674] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.674] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:26.674] | : . '   .. .. .. ..$ rank: num 0
[08:07:26.674] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.674] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.674] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.674] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e96440df8> 
[08:07:26.674] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.674] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.674] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.685] | : . ' Formals differ
[08:07:26.685] | : . all.equal() for future ... done
[08:07:26.685] | : . Future strategies differ at level 1
[08:07:26.687] | : all.equal() for FutureStrategyList ... done
[08:07:26.687] | : plan(): Setting new future backend stack:
[08:07:26.687] | : List of future strategies:
[08:07:26.687] | : 1. cluster:
[08:07:26.687] | :    - args: function (..., workers = "<socket cluster with 1 nodes on host ‘localhost’>", envir = parent.frame())
[08:07:26.687] | :    - tweaked: TRUE
[08:07:26.687] | :    - call: plan(cluster, workers = cl)
[08:07:26.688] | : List of 1
[08:07:26.688] | :  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.688] | :     envir = parent.frame())  
[08:07:26.688] | :   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.688] | :   ..- attr(*, "init")= logi TRUE
[08:07:26.688] | :   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.688] | :     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.688] | :   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.688] | :   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.688] | :   ..- attr(*, "tweaks")=List of 1
[08:07:26.688] | :   .. ..$ workers:List of 1
[08:07:26.688] | :   .. .. ..$ :List of 3
[08:07:26.688] | :   .. .. .. ..$ con : 'sockconn' int 4
[08:07:26.688] | :   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.688] | :   .. .. .. ..$ host: chr "localhost"
[08:07:26.688] | :   .. .. .. ..$ rank: num 0
[08:07:26.688] | :   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.688] | :   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.688] | :   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.688] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:26.694] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:26.694] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.694] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:26.694] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.694] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:26.694] | : . ' Interrupt active futures ...
[08:07:26.695] | : . ' , Number of futures: 0
[08:07:26.695] | : . ' Interrupt active futures ... done
[08:07:26.695] | : . ' Clear future registry ...
[08:07:26.696] | : . ' Clear future registry ... done
[08:07:26.696] | : . ' Stop cluster workers ...
[08:07:26.696] | : . ' , Stopping existing cluster ...
[08:07:26.696] | : . ' , ; No pre-existing cluster. Skipping
[08:07:26.696] | : . ' , Stopping existing cluster ... done
[08:07:26.696] | : . ' Stop cluster workers ... done
[08:07:26.696] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:26.696] | : . Legacy shutdown of cluster workers ...
[08:07:26.696] | : . ' Stopping existing cluster ...
[08:07:26.696] | : . ' , No pre-existing cluster. Skipping
[08:07:26.697] | : . ' Stopping existing cluster ... done
[08:07:26.697] | : . Legacy shutdown of cluster workers ... done
[08:07:26.697] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:26.697] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:26.697] | : . function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:26.697] | : .     envir = parent.frame())  
[08:07:26.697] | : .  - attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:26.697] | : .  - attr(*, "init")= logi TRUE
[08:07:26.697] | : .  - attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:26.697] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:26.697] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.697] | : .  - attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:26.697] | : .  - attr(*, "tweaks")=List of 1
[08:07:26.697] | : .   ..$ workers:List of 1
[08:07:26.697] | : .   .. ..$ :List of 3
[08:07:26.697] | : .   .. .. ..$ con : 'sockconn' int 4
[08:07:26.697] | : .   .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.697] | : .   .. .. ..$ host: chr "localhost"
[08:07:26.697] | : .   .. .. ..$ rank: num 0
[08:07:26.697] | : .   .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.697] | : .   .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.697] | : .  - attr(*, "call")= language plan(cluster, workers = cl)
[08:07:26.702] | : . init: TRUE
[08:07:26.702] | : . makeFutureBackend(<tweaked>) ...
[08:07:26.702] | : . ' Backend function: <‘NULL’>
[08:07:26.702] | : . ' Evaluator tweak arguments: [n=1]
[08:07:26.702] | : . ' List of 1
[08:07:26.702] | : . '  $ workers:List of 1
[08:07:26.702] | : . '   ..$ :List of 3
[08:07:26.702] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.702] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.702] | : . '   .. ..$ host: chr "localhost"
[08:07:26.702] | : . '   .. ..$ rank: num 0
[08:07:26.702] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.702] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.705] | : . ' Evaluator formal arguments: [n=1]
[08:07:26.705] | : . ' List of 1
[08:07:26.705] | : . '  $ workers:List of 1
[08:07:26.705] | : . '   ..$ :List of 3
[08:07:26.705] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.705] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.705] | : . '   .. ..$ host: chr "localhost"
[08:07:26.705] | : . '   .. ..$ rank: num 0
[08:07:26.705] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.705] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.710] | : . ' Backend factory arguments: [n=1]
[08:07:26.710] | : . ' Dotted pair list of 1
[08:07:26.710] | : . '  $ workers:List of 1
[08:07:26.710] | : . '   ..$ :List of 3
[08:07:26.710] | : . '   .. ..$ con : 'sockconn' int 4
[08:07:26.710] | : . '   .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:26.710] | : . '   .. ..$ host: chr "localhost"
[08:07:26.710] | : . '   .. ..$ rank: num 0
[08:07:26.710] | : . '   .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:26.710] | : . '   ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:26.713] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ...
[08:07:26.713] | : . ' , Stopping existing cluster ...
[08:07:26.713] | : . ' , ; No pre-existing cluster. Skipping
[08:07:26.713] | : . ' , Stopping existing cluster ... done
[08:07:26.713] | : . ' , Number of workers: 1
[08:07:26.713] | : . ' , Generated workers UUID
[08:07:26.714] | : . ' , Workers UUID: ‘8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.714] | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = TRUE, earlySignal = TRUE) ... done
[08:07:26.714] | : . ' Backend: <‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:26.714] | : . makeFutureBackend(<tweaked>) ... done
[08:07:26.714] | : plan(): plan_init() of ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:26.714] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.714] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.715] | : plan(): nbrOfWorkers() = 1
[08:07:26.715] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:26.715] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.715] future(..., label = NULL) ...
[08:07:26.715] | lazy: FALSE
[08:07:26.715] | stdout: TRUE
[08:07:26.715] | conditions: [n=1] ‘condition’
[08:07:26.715] | gc: FALSE
[08:07:26.715] | earlySignal: FALSE
[08:07:26.715] | getGlobalsAndPackages() ...
[08:07:26.716] | : Searching for globals ...
[08:07:26.720] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:26.720] | : Searching for globals ... done
[08:07:26.720] | : Resolving globals: FALSE
[08:07:26.720] | : Search for packages associated with the globals ...
[08:07:26.720] | : . Packages associated with globals: [1] ‘base’
[08:07:26.721] | : . Packages: [1] ‘base’
[08:07:26.721] | : Search for packages associated with the globals ... done
[08:07:26.721] | : Packages after dropping 'base': [0] 
[08:07:26.721] | : globals: [2] ‘X’, ‘i’
[08:07:26.721] | : packages: [0] 
[08:07:26.721] | getGlobalsAndPackages() ... done
[08:07:26.721] | run() for ‘Future’ (<unnamed-5>) ...
[08:07:26.721] | : state: ‘created’
[08:07:26.722] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.722] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.722] | : Using ClusterFutureBackend ...
[08:07:26.722] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:26.722] | : . Launching futures ...
[08:07:26.722] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:26.722] | : . ' , Workers: [n=1]
[08:07:26.722] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:26.723] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.723] | : . ' , requestWorker() ...
[08:07:26.723] | : . ' , ; requestNode() ...
[08:07:26.723] | : . ' , ; ` Number of workers: 1
[08:07:26.723] | : . ' , ; ` Polling for a free worker ...
[08:07:26.723] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.723] | : . ' , ; ` | : Listing all futures
[08:07:26.723] | : . ' , ; ` | : Number of registered futures: 0
[08:07:26.724] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.724] | : . ' , ; ` | Total time: 0
[08:07:26.724] | : . ' , ; ` Polling for a free worker ... done
[08:07:26.724] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.724] | : . ' , ; ` | Listing all futures
[08:07:26.724] | : . ' , ; ` | Number of registered futures: 0
[08:07:26.724] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.724] | : . ' , ; ` avail: [n=1] ‘1’
[08:07:26.724] | : . ' , ; ` Index of first available worker: 1
[08:07:26.725] | : . ' , ; ` Validate that the worker is functional ...
[08:07:26.781] | : . ' , ; ` | Worker is functional
[08:07:26.781] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.781] | : . ' , ; ` | : Listing all futures
[08:07:26.782] | : . ' , ; ` | : Number of registered futures: 0
[08:07:26.782] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.782] | : . ' , ; ` Validate that the worker is functional ... done
[08:07:26.782] | : . ' , ; requestNode() ... done
[08:07:26.782] | : . ' , ; cluster node index: 1
[08:07:26.782] | : . ' , requestWorker() ... done
[08:07:26.782] | : . ' , eraseGlobalEnvironment() ...
[08:07:26.783] | : . ' , eraseGlobalEnvironment() ... done
[08:07:26.783] | : . ' , launchFuture() ...
[08:07:26.783] | : . ' , ; cluster node index: 1
[08:07:26.783] | : . ' , ; getFutureData() ...
[08:07:26.783] | : . ' , ; ` getFutureCore() ...
[08:07:26.783] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:26.783] | : . ' , ; ` getFutureCore() ... done
[08:07:26.784] | : . ' , ; ` getFutureCapture() ...
[08:07:26.784] | : . ' , ; ` getFutureCapture() ... done
[08:07:26.784] | : . ' , ; ` getFutureContext() ...
[08:07:26.784] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.784] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:26.784] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.784] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:26.784] | : . ' , ; ` getFutureContext() ... done
[08:07:26.784] | : . ' , ; getFutureData() ... done
[08:07:26.785] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:26.785] | : . ' , ; ` Appended future to position #1
[08:07:26.785] | : . ' , ; ` Number of registered futures: 1
[08:07:26.785] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:26.785] | : . ' , launchFuture() ... done
[08:07:26.786] | : . ' , ClusterFuture started
[08:07:26.786] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:26.786] | : . Launching futures ... done
[08:07:26.786] | : . Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:26.786] | : Using ClusterFutureBackend ... done
[08:07:26.786] | run() for ‘Future’ (<unnamed-5>) ... done
[08:07:26.786] future(..., label = NULL) ... done
[08:07:26.786] future(..., label = NULL) ...
[08:07:26.786] | lazy: FALSE
[08:07:26.786] | stdout: TRUE
[08:07:26.787] | conditions: [n=1] ‘condition’
[08:07:26.787] | gc: FALSE
[08:07:26.787] | earlySignal: FALSE
[08:07:26.787] | getGlobalsAndPackages() ...
[08:07:26.787] | : Searching for globals ...
[08:07:26.793] | : . globals found: [3] ‘[[’, ‘X’, ‘i’
[08:07:26.793] | : Searching for globals ... done
[08:07:26.793] | : Resolving globals: FALSE
[08:07:26.793] | : Search for packages associated with the globals ...
[08:07:26.794] | : . Packages associated with globals: [1] ‘base’
[08:07:26.794] | : . Packages: [1] ‘base’
[08:07:26.794] | : Search for packages associated with the globals ... done
[08:07:26.794] | : Packages after dropping 'base': [0] 
[08:07:26.794] | : globals: [2] ‘X’, ‘i’
[08:07:26.794] | : packages: [0] 
[08:07:26.795] | getGlobalsAndPackages() ... done
[08:07:26.795] | run() for ‘Future’ (<unnamed-6>) ...
[08:07:26.795] | : state: ‘created’
[08:07:26.795] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.795] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.795] | : Using ClusterFutureBackend ...
[08:07:26.795] | : . Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:07:26.795] | : . Launching futures ...
[08:07:26.796] | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:26.796] | : . ' , Workers: [n=1]
[08:07:26.796] | : . ' , socket cluster with 1 nodes on host ‘localhost’
[08:07:26.796] | : . ' , FutureRegistry: ‘workers-8a0e12f792e22adaf70a2a333c1338ca’
[08:07:26.796] | : . ' , requestWorker() ...
[08:07:26.796] | : . ' , ; requestNode() ...
[08:07:26.796] | : . ' , ; ` Number of workers: 1
[08:07:26.797] | : . ' , ; ` Polling for a free worker ...
[08:07:26.797] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.797] | : . ' , ; ` | : Listing all futures
[08:07:26.797] | : . ' , ; ` | : Number of registered futures: 1
[08:07:26.797] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.797] | : . ' , ; ` | Poll #1 (0): usedNodes() = 1, workers = 1
[08:07:26.807] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.807] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.808] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:26.808] | : . ' , ; ` | : . ' Cluster node socket connection: index=4, id=237
[08:07:26.808] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:26.808] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:26.809] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:26.819] | : . ' , ; ` | : . ' socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.819] | : . ' , ; ` | : . resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.819] | : . ' , ; ` | : . Future at position #1 is not resolved
[08:07:26.820] | : . ' , ; ` | : collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.820] | : . ' , ; ` | : Indices of futures to drop: [n=0] <none>
[08:07:26.820] | : . ' , ; ` | FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.820] | : . ' , ; ` | Early signaling of 1 future candidates ...
[08:07:26.820] | : . ' , ; ` | Number of futures with early signaling requested: 0
[08:07:26.820] | : . ' , ; ` | Early signaling of 1 future candidates ... done
[08:07:26.820] | : . ' , ; ` | Number of registered futures: 1
[08:07:26.820] | : . ' , ; ` Polling for a free worker ... done
[08:07:26.820] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.821] | : . ' , ; ` | Listing all futures
[08:07:26.821] | : . ' , ; ` | Number of registered futures: 1
[08:07:26.821] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.821] | : . ' , ; ` Poll #2 (0.02 secs): usedNodes() = 1, workers = 1
[08:07:26.831] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.831] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.832] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:26.832] | : . ' , ; ` | : . Cluster node socket connection: index=4, id=237
[08:07:26.832] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:26.832] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:26.832] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:26.843] | : . ' , ; ` | : . socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.843] | : . ' , ; ` | : resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.843] | : . ' , ; ` | : Future at position #1 is not resolved
[08:07:26.843] | : . ' , ; ` | collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.843] | : . ' , ; ` | Indices of futures to drop: [n=0] <none>
[08:07:26.843] | : . ' , ; ` FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.843] | : . ' , ; ` Early signaling of 1 future candidates ...
[08:07:26.844] | : . ' , ; ` Number of futures with early signaling requested: 0
[08:07:26.844] | : . ' , ; ` Early signaling of 1 future candidates ... done
[08:07:26.844] | : . ' , ; ` Number of registered futures: 1
[08:07:26.844] | : . ' , ; requestNode() ... done
[08:07:26.844] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.844] | : . ' , ; ` Listing all futures
[08:07:26.844] | : . ' , ; ` Number of registered futures: 1
[08:07:26.844] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.844] | : . ' , ; Poll #3 (0.05 secs): usedNodes() = 1, workers = 1
[08:07:26.855] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.855] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.855] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:26.856] | : . ' , ; ` | : Cluster node socket connection: index=4, id=237
[08:07:26.856] | : . ' , ; ` | : assertValidConnection() ...
[08:07:26.856] | : . ' , ; ` | : . cluster node index: 1
[08:07:26.856] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:26.866] | : . ' , ; ` | : socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.866] | : . ' , ; ` | resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.867] | : . ' , ; ` | Future at position #1 is not resolved
[08:07:26.867] | : . ' , ; ` collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.867] | : . ' , ; ` Indices of futures to drop: [n=0] <none>
[08:07:26.867] | : . ' , ; FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.867] | : . ' , ; Early signaling of 1 future candidates ...
[08:07:26.867] | : . ' , ; Number of futures with early signaling requested: 0
[08:07:26.867] | : . ' , ; Early signaling of 1 future candidates ... done
[08:07:26.867] | : . ' , ; Number of registered futures: 1
[08:07:26.867] | : . ' , requestWorker() ... done
[08:07:26.868] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.868] | : . ' , ; Listing all futures
[08:07:26.868] | : . ' , ; Number of registered futures: 1
[08:07:26.868] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.868] | : . ' , Poll #4 (0.07 secs): usedNodes() = 1, workers = 1
[08:07:26.879] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ...
[08:07:26.879] | : . ' , ; collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ...
[08:07:26.879] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-5>) ...
[08:07:26.879] | : . ' , ; ` | Cluster node socket connection: index=4, id=237
[08:07:26.879] | : . ' , ; ` | assertValidConnection() ...
[08:07:26.880] | : . ' , ; ` | : cluster node index: 1
[08:07:26.880] | : . ' , ; ` | assertValidConnection() ... done
[08:07:26.880] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ...
[08:07:26.880] | : . ' , ; ` | : cluster node index: 1
[08:07:26.880] | : . ' , ; ` | : [1] TRUE
[08:07:26.881] | : . ' , ; ` | : received data:
[08:07:26.881] | : . ' , ; ` | : List of 5
[08:07:26.881] | : . ' , ; ` | :  $ type   : chr "VALUE"
[08:07:26.881] | : . ' , ; ` | :  $ value  :List of 16
[08:07:26.881] | : . ' , ; ` | :   ..$ value              : int 1
[08:07:26.881] | : . ' , ; ` | :   ..$ visible            : logi TRUE
[08:07:26.881] | : . ' , ; ` | :   ..$ stdout             : chr ""
[08:07:26.881] | : . ' , ; ` | :   ..$ conditions         : list()
[08:07:26.881] | : . ' , ; ` | :   ..$ rng                : logi FALSE
[08:07:26.881] | : . ' , ; ` | :   ..$ seed               : NULL
[08:07:26.881] | : . ' , ; ` | :   ..$ misuseGlobalEnv    : NULL
[08:07:26.881] | : . ' , ; ` | :   ..$ misuseConnections  :List of 3
[08:07:26.881] | : . ' , ; ` | :   .. ..$ added   : NULL
[08:07:26.881] | : . ' , ; ` | :   .. ..$ removed : NULL
[08:07:26.881] | : . ' , ; ` | :   .. ..$ replaced: NULL
[08:07:26.881] | : . ' , ; ` | :   ..$ misuseDevices      : NULL
[08:07:26.881] | : . ' , ; ` | :   ..$ misuseDefaultDevice: list()
[08:07:26.881] | : . ' , ; ` | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.881] | : . ' , ; ` | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.881] | : . ' , ; ` | :   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "5"
[08:07:26.881] | : . ' , ; ` | :   ..$ session_uuid       : chr "ead3027fe1562ca3ece5fb4b3c9f5dc9"
[08:07:26.881] | : . ' , ; ` | :   .. ..- attr(*, "source")=List of 5
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:26.881] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:26.881] | : . ' , ; ` | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ pid   : int 67173
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ random: int 2147483647
[08:07:26.881] | : . ' , ; ` | :   ..$ r_info             :List of 4
[08:07:26.881] | : . ' , ; ` | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:26.881] | : . ' , ; ` | :   .. .. ..$ : int [1:3] 4 5 1
[08:07:26.881] | : . ' , ; ` | :   .. ..$ os           : chr "unix"
[08:07:26.881] | : . ' , ; ` | :   .. ..$ os_name      : chr "Linux"
[08:07:26.881] | : . ' , ; ` | :   .. ..$ captures_utf8: logi TRUE
[08:07:26.881] | : . ' , ; ` | :   ..$ version            : chr "1.8"
[08:07:26.881] | : . ' , ; ` | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:26.881] | : . ' , ; ` | :  $ success: logi TRUE
[08:07:26.881] | : . ' , ; ` | :  $ time   : 'proc_time' Named num [1:5] 0.046 0.001 0.048 0 0
[08:07:26.881] | : . ' , ; ` | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:26.881] | : . ' , ; ` | :  $ tag    : NULL
[08:07:26.894] | : . ' , ; ` | : Received FutureResult
[08:07:26.894] | : . ' , ; ` | : FutureResult:
[08:07:26.894] | : . ' , ; ` | : value: ‘integer’
[08:07:26.894] | : . ' , ; ` | : visible: TRUE
[08:07:26.894] | : . ' , ; ` | : stdout: character
[08:07:26.894] | : . ' , ; ` | : conditions: [n = 0] 
[08:07:26.894] | : . ' , ; ` | : RNG used: FALSE
[08:07:26.894] | : . ' , ; ` | : duration: 0.04598737 secs (started 2025-06-17 08:07:26.827041)
[08:07:26.894] | : . ' , ; ` | : version: 1.8
[08:07:26.895] | : . ' , ; ` | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:26.895] | : . ' , ; ` | : . Removed future from position #1
[08:07:26.895] | : . ' , ; ` | : . Number of registered futures: 0
[08:07:26.895] | : . ' , ; ` | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:26.895] | : . ' , ; ` | : Erased future from future backend
[08:07:26.895] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.895] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.895] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.896] | : . ' , ; ` | : signalConditions() ...
[08:07:26.896] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:26.896] | : . ' , ; ` | : . exclude = 
[08:07:26.896] | : . ' , ; ` | : . resignal = FALSE
[08:07:26.896] | : . ' , ; ` | : . Number of conditions: 0
[08:07:26.896] | : . ' , ; ` | : .  int 0
[08:07:26.896] | : . ' , ; ` | : signalConditions() ... done
[08:07:26.897] | : . ' , ; ` | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:26.897] | : . ' , ; ` | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:26.897] | : . ' , ; ` resolved() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.897] | : . ' , ; ` assertFutureResult() ...
[08:07:26.897] | : . ' , ; ` | Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:26.897] | : . ' , ; ` | Future uuid: 5
[08:07:26.897] | : . ' , ; ` | identical; success
[08:07:26.897] | : . ' , ; ` assertFutureResult() ... done
[08:07:26.897] | : . ' , ; ` Future at position #1 is resolved ...
[08:07:26.897] | : . ' , ; ` | value() for ClusterFuture (<unnamed-5>) ...
[08:07:26.898] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.898] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.898] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.898] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:26.898] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:26.898] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:26.898] | : . ' , ; ` | : signalConditions() ...
[08:07:26.898] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:26.898] | : . ' , ; ` | : . exclude = 
[08:07:26.898] | : . ' , ; ` | : . resignal = FALSE
[08:07:26.899] | : . ' , ; ` | : . Number of conditions: 0
[08:07:26.899] | : . ' , ; ` | : .  int 0
[08:07:26.899] | : . ' , ; ` | : signalConditions() ... done
[08:07:26.899] | : . ' , ; ` | : check for misuse ...
[08:07:26.899] | : . ' , ; ` | : check for misuse ... done
[08:07:26.899] | : . ' , ; ` | value() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.900] | : . ' , ; ` Future at position #1 is resolved ... done
[08:07:26.900] | : . ' , ; collectValues('workers-8a0e12f792e22adaf70a2a333c1338ca', firstOnly = TRUE) ... done
[08:07:26.900] | : . ' , ; Remove collected futures ...
[08:07:26.900] | : . ' , ; ` Indices of futures to drop: [n=1] ‘1’
[08:07:26.900] | : . ' , ; Remove collected futures ... done
[08:07:26.900] | : . ' , FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'collect-first', earlySignal = 1) ... done
[08:07:26.900] | : . ' , Early signaling of 1 future candidates ...
[08:07:26.900] | : . ' , Number of futures with early signaling requested: 0
[08:07:26.901] | : . ' , Early signaling of 1 future candidates ... done
[08:07:26.901] | : . ' , Number of registered futures: 1
[08:07:26.901] | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:26.901] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.901] | : . ' , Listing all futures
[08:07:26.901] | : . ' , Number of registered futures: 0
[08:07:26.901] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.901] | : . ' Total time: 0.104172229766846
[08:07:26.901] | : . Launching futures ... done
[08:07:26.901] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.902] | : . ' Listing all futures
[08:07:26.902] | : . ' Number of registered futures: 0
[08:07:26.902] | : . FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.902] | : . avail: [n=1] ‘1’
[08:07:26.902] | : . Index of first available worker: 1
[08:07:26.902] | : . Validate that the worker is functional ...
[08:07:26.943] | : . ' Worker is functional
[08:07:26.944] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ...
[08:07:26.944] | : . ' , Listing all futures
[08:07:26.944] | : . ' , Number of registered futures: 0
[08:07:26.944] | : . ' FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'list', earlySignal = 0) ... done
[08:07:26.944] | : . Validate that the worker is functional ... done
[08:07:26.944] | : Using ClusterFutureBackend ... done
[08:07:26.944] | : cluster node index: 1
[08:07:26.944] | run() for ‘Future’ (<unnamed-6>) ... done
[08:07:26.945] | eraseGlobalEnvironment() ...
[08:07:26.945] | eraseGlobalEnvironment() ... done
[08:07:26.945] | launchFuture() ...
[08:07:26.945] | : cluster node index: 1
[08:07:26.946] | : getFutureData() ...
[08:07:26.946] | : . getFutureCore() ...
[08:07:26.947] | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:26.947] | : . getFutureCore() ... done
[08:07:26.947] | : . getFutureCapture() ...
[08:07:26.947] | : . getFutureCapture() ... done
[08:07:26.947] | : . getFutureContext() ...
[08:07:26.947] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:26.947] | : . ' , Getting stack without first backend: [n=0] 
[08:07:26.947] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:26.947] | : . ' Packages needed by future backend (n = 0): <none>
[08:07:26.948] | : . getFutureContext() ... done
[08:07:26.948] | : getFutureData() ... done
[08:07:26.948] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ...
[08:07:26.948] | : . Appended future to position #1
[08:07:26.948] | : . Number of registered futures: 1
[08:07:26.949] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'add', earlySignal = 0) ... done
[08:07:26.949] | launchFuture() ... done
[08:07:26.949] | ClusterFuture started
[08:07:26.949] future(..., label = NULL) ... done

[08:07:26.949] Future launched: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’



[08:07:26.949] value() for list ...
[08:07:26.949] | recursive: 0
[08:07:26.950] | reduce: FALSE
[08:07:26.950] | length: 2

[08:07:26.950] | Number of remaining objects: 2
[08:07:26.950] | checking value #1:
[08:07:26.950] | 'obj' is ClusterFuture
[08:07:26.950] | ClusterFuture #1
[08:07:26.950] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:26.950] | : nx: 2
[08:07:26.950] | : relay: TRUE
[08:07:26.951] | : stdout: TRUE
[08:07:26.951] | : signal: TRUE
[08:07:26.951] | : resignal: FALSE
[08:07:26.951] | : force: TRUE
[08:07:26.951] | : relayed: [n=2] FALSE, FALSE
[08:07:26.951] | : queued futures: [n=2] FALSE, FALSE
[08:07:26.951] | : until=1
[08:07:26.951] | : relaying element #1
[08:07:26.951] | : value() for ClusterFuture (<unnamed-5>) ...
[08:07:26.951] | : . result() for ClusterFuture ...
[08:07:26.951] | : . ' result already collected: FutureResult
[08:07:26.952] | : . result() for ClusterFuture ... done
[08:07:26.952] | : . result() for ClusterFuture ...
[08:07:26.952] | : . ' result already collected: FutureResult
[08:07:26.952] | : . result() for ClusterFuture ... done
[08:07:26.952] | : . signalConditions() ...
[08:07:26.952] | : . ' include = ‘immediateCondition’
[08:07:26.952] | : . ' exclude = 
[08:07:26.952] | : . ' resignal = FALSE
[08:07:26.952] | : . ' Number of conditions: 0
[08:07:26.952] | : . '  int 0
[08:07:26.953] | : . signalConditions() ... done
[08:07:26.953] | : . relay stdout ...
[08:07:26.953] | : . relay stdout ... done
[08:07:26.953] | : . check for misuse ...
[08:07:26.953] | : . check for misuse ... done
[08:07:26.953] | : value() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.953] | : result() for ClusterFuture ...
[08:07:26.954] | : . result already collected: FutureResult
[08:07:26.954] | : result() for ClusterFuture ... done
[08:07:26.954] | : signalConditions() ...
[08:07:26.954] | : . include = ‘immediateCondition’
[08:07:26.954] | : . exclude = 
[08:07:26.954] | : . resignal = FALSE
[08:07:26.954] | : . Number of conditions: 0
[08:07:26.954] | : .  int 0
[08:07:26.955] | : signalConditions() ... done
[08:07:26.955] | : result() for ClusterFuture ...
[08:07:26.955] | : . result already collected: FutureResult
[08:07:26.955] | : result() for ClusterFuture ... done
[08:07:26.955] | : signalConditions() ...
[08:07:26.955] | : . include = ‘condition’
[08:07:26.955] | : . exclude = ‘error’, ‘immediateCondition’
[08:07:26.955] | : . resignal = TRUE
[08:07:26.955] | : . Number of conditions: 0
[08:07:26.955] | : .  int 0
[08:07:26.956] | : signalConditions() ... done
[08:07:26.956] | : relayed: [n=2] TRUE, FALSE
[08:07:26.956] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.956] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:26.956] | value(<ClusterFuture>, ...) ...
[08:07:26.956] | value(<ClusterFuture>, ...) ... done
[08:07:26.956] | value() for ClusterFuture (<unnamed-5>) ...
[08:07:26.957] | : result() for ClusterFuture ...
[08:07:26.957] | : . result already collected: FutureResult
[08:07:26.957] | : result() for ClusterFuture ... done
[08:07:26.957] | : result() for ClusterFuture ...
[08:07:26.957] | : . result already collected: FutureResult
[08:07:26.957] | : result() for ClusterFuture ... done
[08:07:26.957] | : signalConditions() ...
[08:07:26.957] | : . include = ‘immediateCondition’
[08:07:26.957] | : . exclude = 
[08:07:26.957] | : . resignal = FALSE
[08:07:26.957] | : . Number of conditions: 0
[08:07:26.958] | : .  int 0
[08:07:26.958] | : signalConditions() ... done
[08:07:26.958] | : check for misuse ...
[08:07:26.958] | : check for misuse ... done
[08:07:26.958] | value() for ClusterFuture (<unnamed-5>) ... done
[08:07:26.958] | value: <integer>
[08:07:26.958] | signalConditionsASAP(ClusterFuture, pos=1) ...
[08:07:26.959] | : nx: 2
[08:07:26.959] | : relay: TRUE
[08:07:26.959] | : stdout: TRUE
[08:07:26.959] | : signal: TRUE
[08:07:26.959] | : resignal: FALSE
[08:07:26.959] | : force: TRUE
[08:07:26.959] | : relayed: [n=2] TRUE, FALSE
[08:07:26.959] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.959] | : until=2
[08:07:26.959] | : relaying element #2
[08:07:26.959] | : relayed: [n=2] TRUE, FALSE
[08:07:26.959] | : queued futures: [n=2] TRUE, FALSE
[08:07:26.960] | signalConditionsASAP(ClusterFuture, pos=1) ... done
[08:07:26.960] | resolve() for ClusterFuture ...
[08:07:26.960] | resolve() for ClusterFuture ... done
[08:07:26.960] | length: 1 (resolved future 1)
[08:07:26.960] value() for list ... done
[08:07:26.960] checking value #2:
[08:07:26.960] 'obj' is ClusterFuture
[08:07:26.960] resolved() for ClusterFuture (<unnamed-6>) ...
[08:07:26.961] | Cluster node socket connection: index=4, id=237
[08:07:26.961] | assertValidConnection() ...
[08:07:26.961] | : cluster node index: 1
[08:07:26.961] | assertValidConnection() ... done
[08:07:26.971] | socketSelect(list(<connection #4 (id=237)>), timeout = 0.01, write = FALSE) returned FALSE; not resolved
[08:07:26.972] resolved() for ClusterFuture (<unnamed-6>) ... done
[08:07:26.982] Number of remaining objects: 1
[08:07:26.982] checking value #2:
[08:07:26.982] 'obj' is ClusterFuture
[08:07:26.982] resolved() for ClusterFuture (<unnamed-6>) ...
[08:07:26.983] | Cluster node socket connection: index=4, id=237
[08:07:26.983] | assertValidConnection() ...
[08:07:26.983] | : cluster node index: 1
[08:07:26.983] | assertValidConnection() ... done
[08:07:26.992] | receiveMessageFromWorker() for ClusterFuture ...
[08:07:26.992] | : cluster node index: 1
[08:07:26.992] | : [1] TRUE
[08:07:26.992] | : received data:
[08:07:26.992] | : List of 5
[08:07:26.992] | :  $ type   : chr "VALUE"
[08:07:26.992] | :  $ value  :List of 16
[08:07:26.992] | :   ..$ value              : int 2
[08:07:26.992] | :   ..$ visible            : logi TRUE
[08:07:26.992] | :   ..$ stdout             : chr ""
[08:07:26.992] | :   ..$ conditions         : list()
[08:07:26.992] | :   ..$ rng                : logi FALSE
[08:07:26.992] | :   ..$ seed               : NULL
[08:07:26.992] | :   ..$ misuseGlobalEnv    : NULL
[08:07:26.992] | :   ..$ misuseConnections  :List of 3
[08:07:26.992] | :   .. ..$ added   : NULL
[08:07:26.992] | :   .. ..$ removed : NULL
[08:07:26.992] | :   .. ..$ replaced: NULL
[08:07:26.992] | :   ..$ misuseDevices      : NULL
[08:07:26.992] | :   ..$ misuseDefaultDevice: list()
[08:07:26.992] | :   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.992] | :   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.992] | :   ..$ uuid               : chr [1:2] "244b415770dd7f3cfa7ad087bc56e649" "6"
[08:07:26.992] | :   ..$ session_uuid       : chr "ead3027fe1562ca3ece5fb4b3c9f5dc9"
[08:07:26.992] | :   .. ..- attr(*, "source")=List of 5
[08:07:26.992] | :   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:26.992] | :   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:26.992] | :   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:26.992] | :   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:26.992] | :   .. .. ..$ pid   : int 67173
[08:07:26.992] | :   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:26"
[08:07:26.992] | :   .. .. ..$ random: int 2147483647
[08:07:26.992] | :   ..$ r_info             :List of 4
[08:07:26.992] | :   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:26.992] | :   .. .. ..$ : int [1:3] 4 5 1
[08:07:26.992] | :   .. ..$ os           : chr "unix"
[08:07:26.992] | :   .. ..$ os_name      : chr "Linux"
[08:07:26.992] | :   .. ..$ captures_utf8: logi TRUE
[08:07:26.992] | :   ..$ version            : chr "1.8"
[08:07:26.992] | :   ..- attr(*, "class")= chr "FutureResult"
[08:07:26.992] | :  $ success: logi TRUE
[08:07:26.992] | :  $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.003 0 0
[08:07:26.992] | :   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:26.992] | :  $ tag    : NULL
[08:07:27.004] | : Received FutureResult
[08:07:27.005] | : FutureResult:
[08:07:27.005] | : value: ‘integer’
[08:07:27.005] | : visible: TRUE
[08:07:27.005] | : stdout: character
[08:07:27.005] | : conditions: [n = 0] 
[08:07:27.005] | : RNG used: FALSE
[08:07:27.005] | : duration: 0.002657652 secs (started 2025-06-17 08:07:26.989025)
[08:07:27.005] | : version: 1.8
[08:07:27.005] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ...
[08:07:27.005] | : . Removed future from position #1
[08:07:27.005] | : . Number of registered futures: 0
[08:07:27.005] | : FutureRegistry('workers-8a0e12f792e22adaf70a2a333c1338ca', action = 'remove', earlySignal = 0) ... done
[08:07:27.006] | : Erased future from future backend
[08:07:27.006] | : result() for ClusterFuture ...
[08:07:27.006] | : . result already collected: FutureResult
[08:07:27.006] | : result() for ClusterFuture ... done
[08:07:27.006] | : signalConditions() ...
[08:07:27.006] | : . include = ‘immediateCondition’
[08:07:27.006] | : . exclude = 
[08:07:27.006] | : . resignal = FALSE
[08:07:27.006] | : . Number of conditions: 0
[08:07:27.006] | : .  int 0
[08:07:27.007] | : signalConditions() ... done
[08:07:27.007] | receiveMessageFromWorker() for ClusterFuture ... done
[08:07:27.007] | receiveMessageFromWorker() returned object of class FutureResult; resolved
[08:07:27.007] resolved() for ClusterFuture (<unnamed-6>) ... done
[08:07:27.007] assertFutureResult() ...
[08:07:27.007] | Future uuid: 244b415770dd7f3cfa7ad087bc56e649[08:07:27.007] | Future uuid: 6
[08:07:27.007] | identical; success
[08:07:27.007] assertFutureResult() ... done
[08:07:27.007] ClusterFuture #2
[08:07:27.008] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:27.008] | nx: 2
[08:07:27.008] | relay: TRUE
[08:07:27.008] | stdout: TRUE
[08:07:27.008] | signal: TRUE
[08:07:27.008] | resignal: FALSE
[08:07:27.008] | force: TRUE
[08:07:27.008] | relayed: [n=2] TRUE, FALSE
[08:07:27.008] | queued futures: [n=2] TRUE, FALSE
[08:07:27.008] | until=2
[08:07:27.008] | relaying element #2
[08:07:27.009] | value() for ClusterFuture (<unnamed-6>) ...
[08:07:27.009] | : result() for ClusterFuture ...
[08:07:27.009] | : . result already collected: FutureResult
[08:07:27.009] | : result() for ClusterFuture ... done
[08:07:27.009] | : result() for ClusterFuture ...
[08:07:27.009] | : . result already collected: FutureResult
[08:07:27.009] | : result() for ClusterFuture ... done
[08:07:27.009] | : signalConditions() ...
[08:07:27.009] | : . include = ‘immediateCondition’
[08:07:27.009] | : . exclude = 
[08:07:27.009] | : . resignal = FALSE
[08:07:27.010] | : . Number of conditions: 0
[08:07:27.010] | : .  int 0
[08:07:27.010] | : signalConditions() ... done
[08:07:27.010] | : relay stdout ...
[08:07:27.010] | : relay stdout ... done
[08:07:27.010] | : check for misuse ...
[08:07:27.010] | : check for misuse ... done
[08:07:27.011] | value() for ClusterFuture (<unnamed-6>) ... done
[08:07:27.011] | result() for ClusterFuture ...
[08:07:27.011] | : result already collected: FutureResult
[08:07:27.011] | result() for ClusterFuture ... done
[08:07:27.011] | signalConditions() ...
[08:07:27.011] | : include = ‘immediateCondition’
[08:07:27.011] | : exclude = 
[08:07:27.011] | : resignal = FALSE
[08:07:27.011] | : Number of conditions: 0
[08:07:27.011] | :  int 0
[08:07:27.012] | signalConditions() ... done
[08:07:27.012] | result() for ClusterFuture ...
[08:07:27.012] | : result already collected: FutureResult
[08:07:27.012] | result() for ClusterFuture ... done
[08:07:27.012] | signalConditions() ...
[08:07:27.012] | : include = ‘condition’
[08:07:27.012] | : exclude = ‘error’, ‘immediateCondition’
[08:07:27.012] | : resignal = TRUE
[08:07:27.013] | : Number of conditions: 0
[08:07:27.013] | :  int 0
[08:07:27.013] | signalConditions() ... done
[08:07:27.013] | relayed: [n=2] TRUE, TRUE
[08:07:27.013] | queued futures: [n=2] TRUE, TRUE
[08:07:27.013] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:27.013] value(<ClusterFuture>, ...) ...
[08:07:27.013] value(<ClusterFuture>, ...) ... done
[08:07:27.014] value() for ClusterFuture (<unnamed-6>) ...
[08:07:27.014] | result() for ClusterFuture ...
[08:07:27.014] | : result already collected: FutureResult
[08:07:27.015] | result() for ClusterFuture ... done
[08:07:27.015] | result() for ClusterFuture ...
[08:07:27.015] | : result already collected: FutureResult
[08:07:27.015] | result() for ClusterFuture ... done
[08:07:27.015] | signalConditions() ...
[08:07:27.015] | : include = ‘immediateCondition’
[08:07:27.015] | : exclude = 
[08:07:27.015] | : resignal = FALSE
[08:07:27.015] | : Number of conditions: 0
[08:07:27.016] | :  int 0
[08:07:27.016] | signalConditions() ... done
[08:07:27.016] | check for misuse ...
[08:07:27.016] | check for misuse ... done
[08:07:27.016] value() for ClusterFuture (<unnamed-6>) ... done
[08:07:27.016] value: <integer>
[08:07:27.016] signalConditionsASAP(ClusterFuture, pos=2) ...
[08:07:27.017] | nx: 2
[08:07:27.017] | relay: TRUE
[08:07:27.017] | stdout: TRUE
[08:07:27.017] | signal: TRUE
[08:07:27.017] | resignal: FALSE
[08:07:27.017] | force: TRUE
[08:07:27.017] | relayed: [n=2] TRUE, TRUE
[08:07:27.017] | queued futures: [n=2] TRUE, TRUE
[08:07:27.017] | until=2
[08:07:27.017] | relayed: [n=2] TRUE, TRUE
[08:07:27.017] | queued futures: [n=2] TRUE, TRUE
[08:07:27.018] signalConditionsASAP(ClusterFuture, pos=2) ... done
[08:07:27.018] resolve() for ClusterFuture ...
[08:07:27.018] resolve() for ClusterFuture ... done
[08:07:27.018] length: 0 (resolved future 2)

[08:07:27.018] Relaying remaining futures ...
[08:07:27.018] | signalConditionsASAP(NULL, pos=0) ...
[08:07:27.018] | : nx: 2
[08:07:27.018] | : relay: TRUE
[08:07:27.018] | : stdout: TRUE
[08:07:27.018] | : signal: TRUE
[08:07:27.019] | : resignal: FALSE
[08:07:27.019] | : force: TRUE
[08:07:27.019] | : relayed: [n=2] TRUE, TRUE
[08:07:27.019] | : queued futures: [n=2] TRUE, TRUE
 - flush all
[08:07:27.019] | : relayed: [n=2] TRUE, TRUE
[08:07:27.019] | : queued futures: [n=2] TRUE, TRUE
[08:07:27.019] | signalConditionsASAP(NULL, pos=0) ... done
[08:07:27.019] Relaying remaining futures ... done


> plan(sequential)
[08:07:27.027] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:27.028] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:27.028] | : all.equal() for FutureStrategyList ...
[08:07:27.028] | : . New stack:
[08:07:27.028] | : . List of 1
[08:07:27.028] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:27.028] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:27.028] | : .   ..- attr(*, "init")= logi TRUE
[08:07:27.028] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:27.028] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.028] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.028] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:27.028] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:27.031] | : . Old stack:
[08:07:27.031] | : . List of 1
[08:07:27.031] | : .  $ :function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:27.031] | : .     envir = parent.frame())  
[08:07:27.031] | : .   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:27.031] | : .   ..- attr(*, "init")= chr "done"
[08:07:27.031] | : .   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:27.031] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:27.031] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.031] | : .   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.031] | : .   ..- attr(*, "tweaks")=List of 1
[08:07:27.031] | : .   .. ..$ workers:List of 1
[08:07:27.031] | : .   .. .. ..$ :List of 3
[08:07:27.031] | : .   .. .. .. ..$ con : 'sockconn' int 4
[08:07:27.031] | : .   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:27.031] | : .   .. .. .. ..$ host: chr "localhost"
[08:07:27.031] | : .   .. .. .. ..$ rank: num 0
[08:07:27.031] | : .   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:27.031] | : .   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:27.031] | : .   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:27.031] | : .   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e968684f8> 
[08:07:27.031] | : .   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:27.031] | : .     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:27.031] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.031] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:27.036] | : . Not identical
[08:07:27.036] | : . all.equal() for future ...
[08:07:27.037] | : . ' List of 2
[08:07:27.037] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:27.037] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:27.037] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:27.037] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:27.037] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.037] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.037] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:27.037] | : . '  $ current:function (..., workers = list(list(con = 4L, host = "localhost", rank = 0)), 
[08:07:27.037] | : . '     envir = parent.frame())  
[08:07:27.037] | : . '   ..- attr(*, "class")= chr [1:5] "tweaked" "cluster" "multiprocess" "future" ...
[08:07:27.037] | : . '   ..- attr(*, "init")= chr "done"
[08:07:27.037] | : . '   ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:27.037] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:27.037] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.037] | : . '   ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.037] | : . '   ..- attr(*, "tweaks")=List of 1
[08:07:27.037] | : . '   .. ..$ workers:List of 1
[08:07:27.037] | : . '   .. .. ..$ :List of 3
[08:07:27.037] | : . '   .. .. .. ..$ con : 'sockconn' int 4
[08:07:27.037] | : . '   .. .. .. .. ..- attr(*, "conn_id")=<externalptr> 
[08:07:27.037] | : . '   .. .. .. ..$ host: chr "localhost"
[08:07:27.037] | : . '   .. .. .. ..$ rank: num 0
[08:07:27.037] | : . '   .. .. .. ..- attr(*, "class")= chr "SOCKnode"
[08:07:27.037] | : . '   .. .. ..- attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
[08:07:27.037] | : . '   ..- attr(*, "call")= language plan(cluster, workers = cl)
[08:07:27.037] | : . '   ..- attr(*, "backend")=Classes 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x560e968684f8> 
[08:07:27.037] | : . '   .. ..- attr(*, "factory")=function (workers = availableWorkers(constraints = "connections"), gc = TRUE, 
[08:07:27.037] | : . '     earlySignal = TRUE, interrupts = FALSE, persistent = FALSE, ...)  
[08:07:27.037] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "gc" "earlySignal" "interrupts" "persistent" ...
[08:07:27.045] | : . ' Formals differ
[08:07:27.046] | : . all.equal() for future ... done
[08:07:27.046] | : . Future strategies differ at level 1
[08:07:27.046] | : all.equal() for FutureStrategyList ... done
[08:07:27.046] | : plan(): Setting new future backend stack:
[08:07:27.046] | : List of future strategies:
[08:07:27.046] | : 1. sequential:
[08:07:27.046] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:27.046] | :    - tweaked: FALSE
[08:07:27.046] | :    - call: plan(sequential)
[08:07:27.046] | : List of 1
[08:07:27.046] | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:27.046] | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:27.046] | :   ..- attr(*, "init")= logi TRUE
[08:07:27.046] | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:27.046] | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.046] | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.046] | :   ..- attr(*, "call")= language plan(sequential)
[08:07:27.046] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:27.049] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:27.049] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:27.049] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:07:27.049] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:27.049] | : . stopWorkers() for ClusterFutureBackend ...
[08:07:27.049] | : . ' Interrupt active futures ...
[08:07:27.050] | : . ' , Number of futures: 0
[08:07:27.050] | : . ' Interrupt active futures ... done
[08:07:27.050] | : . ' Clear future registry ...
[08:07:27.051] | : . ' Clear future registry ... done
[08:07:27.051] | : . ' Stop cluster workers ...
[08:07:27.051] | : . ' , Stopping existing cluster ...
[08:07:27.051] | : . ' , ; No pre-existing cluster. Skipping
[08:07:27.051] | : . ' , Stopping existing cluster ... done
[08:07:27.051] | : . ' Stop cluster workers ... done
[08:07:27.051] | : . stopWorkers() for ClusterFutureBackend ... done
[08:07:27.051] | : . Legacy shutdown of cluster workers ...
[08:07:27.051] | : . ' Stopping existing cluster ...
[08:07:27.051] | : . ' , No pre-existing cluster. Skipping
[08:07:27.051] | : . ' Stopping existing cluster ... done
[08:07:27.052] | : . Legacy shutdown of cluster workers ... done
[08:07:27.052] | : plan(): plan_cleanup(‘tweaked’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:27.052] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:27.052] | : . function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:27.052] | : .  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:27.052] | : .  - attr(*, "init")= logi TRUE
[08:07:27.052] | : .  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:27.052] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.052] | : .  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:27.052] | : .  - attr(*, "call")= language plan(sequential)
[08:07:27.054] | : . init: TRUE
[08:07:27.054] | : . makeFutureBackend(<sequential>) ...
[08:07:27.054] | : . ' Backend function: <‘NULL’>
[08:07:27.054] | : . ' Evaluator tweak arguments: [n=0]
[08:07:27.054] | : . '  list()
[08:07:27.054] | : . ' Evaluator formal arguments: [n=2]
[08:07:27.055] | : . '  list()
[08:07:27.055] | : . ' Backend factory arguments: [n=2]
[08:07:27.055] | : . ' Dotted pair list of 2
[08:07:27.055] | : . '  $ gc         : logi FALSE
[08:07:27.055] | : . '  $ earlySignal: logi FALSE
[08:07:27.056] | : . ' Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:27.056] | : . makeFutureBackend(<sequential>) ... done
[08:07:27.056] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:27.056] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:27.056] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:27.056] | : plan(): nbrOfWorkers() = 1
[08:07:27.057] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:27.057] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done

> message("all.equal() for cluster backend ... done")
all.equal() for cluster backend ... done
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.7s, sys.self=0.01s, elapsed=2s, user.child=0.003s, sys.child=0.005s
Test ‘cluster-connection-clashes’ ... success
> 
