
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-globals,formulas.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("globals,formulas")
Test ‘globals,formulas’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-globals,formulas.R’

> library(future)
[08:08:13.163] Option 'future.startup.script': TRUE
[08:08:13.163] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:13.163] Future startup scripts found: <none>

> library(datasets)

> library(stats)

> message("*** Globals - formulas ...")
*** Globals - formulas ...

> ctl <- c(4.17, 5.58, 5.18, 6.11, 4.5, 4.61, 5.17, 
+     4.53, 5.33, 5.14)

> trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 
+     4.89, 4.32, 4.69)

> group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))

> weight <- c(ctl, trt)

> ctl <- trt <- NULL

> fit_i <- lm(weight ~ group - 1)

> print(fit_i)

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  


> x <- c(1, 1, 2, 2, 2)

> tbl_ii <- xtabs(~x)

> print(tbl_ii)
x
1 2 
2 3 

> exprs <- list(a = substitute({
+     lm(dist ~ . - 1, data = cars)
+ }), b = substitute({
+     lm(dist ~ . + 0, data = cars)
+ }), c = substitute({ .... [TRUNCATED] 

> map <- function(.x, .f, ...) {
+     if (inherits(.f, "formula")) {
+         expr <- .f[[-1]]
+         .f <- eval(bquote(function(...) {
+         .... [TRUNCATED] 

> inner_function <- function(x) {
+     x + 1
+ }

> outer_function <- function(x) {
+     map(1:2, ~inner_function(.x))
+ }

> y_iv <- outer_function(1)

> str(y_iv)
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("availableCor ..." ... [TRUNCATED] 
Testing with 1 cores ...
availableCores(): 1
- plan('sequential') ...
[08:08:13.205] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.205] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:13.206] | : all.equal() for FutureStrategyList ...
[08:08:13.206] | : . New stack:
[08:08:13.206] | : . List of 1
[08:08:13.206] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.206] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.206] | : .   ..- attr(*, "init")= logi TRUE
[08:08:13.206] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.206] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.206] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.206] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:13.206] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.208] | : . Old stack:
[08:08:13.209] | : . List of 1
[08:08:13.209] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.209] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.209] | : .   ..- attr(*, "init")= logi TRUE
[08:08:13.209] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.209] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.209] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.209] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:13.209] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.211] | : . Not identical
[08:08:13.211] | : . all.equal() for future ...
[08:08:13.211] | : . ' List of 2
[08:08:13.211] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.211] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.211] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:13.211] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.211] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.211] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.211] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:13.211] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.211] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.211] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:13.211] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.211] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.211] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.211] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:13.216] | : . all.equal() for future ... done
[08:08:13.216] | : all.equal() for FutureStrategyList ... done
[08:08:13.216] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.216] | : List of future strategies:
[08:08:13.216] | : 1. sequential:
[08:08:13.216] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.216] | :    - tweaked: FALSE
[08:08:13.216] | :    - call: plan(sequential)
[08:08:13.216] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:13.217] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[08:08:13.217] future(..., label = NULL) ...
[08:08:13.217] | lazy: FALSE
[08:08:13.217] | stdout: TRUE
[08:08:13.217] | conditions: [n=1] ‘condition’
[08:08:13.217] | gc: FALSE
[08:08:13.217] | earlySignal: FALSE
[08:08:13.218] | getGlobalsAndPackages() ...
[08:08:13.218] | : Searching for globals ...
[08:08:13.236] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:13.236] | : Searching for globals ... done
[08:08:13.237] | : Resolving globals: FALSE
[08:08:13.237] | : Search for packages associated with the globals ...
[08:08:13.237] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.237] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.238] | : Search for packages associated with the globals ... done
[08:08:13.238] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.238] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.238] | : globals: [2] ‘weight’, ‘group’
[08:08:13.238] | : packages: [1] ‘stats’
[08:08:13.238] | getGlobalsAndPackages() ... done
[08:08:13.239] | run() for ‘Future’ (<unnamed-1>) ...
[08:08:13.239] | : state: ‘created’
[08:08:13.239] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.239] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:13.239] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.239] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.239] | : . '  - attr(*, "init")= logi TRUE
[08:08:13.239] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.239] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.239] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.239] | : . '  - attr(*, "call")= language plan(sequential)
[08:08:13.242] | : . ' init: TRUE
[08:08:13.243] | : . ' makeFutureBackend(<sequential>) ...
[08:08:13.243] | : . ' , Backend function: <‘NULL’>
[08:08:13.243] | : . ' , Evaluator tweak arguments: [n=0]
[08:08:13.243] | : . ' ,  list()
[08:08:13.243] | : . ' , Evaluator formal arguments: [n=2]
[08:08:13.243] | : . ' ,  list()
[08:08:13.244] | : . ' , Backend factory arguments: [n=2]
[08:08:13.244] | : . ' , Dotted pair list of 2
[08:08:13.244] | : . ' ,  $ gc         : logi FALSE
[08:08:13.244] | : . ' ,  $ earlySignal: logi FALSE
[08:08:13.245] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:13.245] | : . ' makeFutureBackend(<sequential>) ... done
[08:08:13.245] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:13.245] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.245] | : Using SequentialFutureBackend ...
[08:08:13.245] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:13.246] | : . Launching futures ...
[08:08:13.246] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.246] | : . ' , getFutureData() ...
[08:08:13.246] | : . ' , ; getFutureCore() ...
[08:08:13.246] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.246] | : . ' , ; getFutureCore() ... done
[08:08:13.246] | : . ' , ; getFutureCapture() ...
[08:08:13.247] | : . ' , ; getFutureCapture() ... done
[08:08:13.247] | : . ' , ; getFutureContext() ...
[08:08:13.247] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.247] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.247] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.247] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.247] | : . ' , ; getFutureContext() ... done
[08:08:13.247] | : . ' , getFutureData() ... done
[08:08:13.250] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.250] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.250] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.250] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.251] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.251] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.251] | : . ' , ; ` | New stack:
[08:08:13.251] | : . ' , ; ` | List of 1
[08:08:13.251] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.251] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.251] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.251] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.251] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.251] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.251] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.251] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.253] | : . ' , ; ` | Old stack:
[08:08:13.254] | : . ' , ; ` | List of 1
[08:08:13.254] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.254] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.254] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.254] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.254] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.254] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.257] | : . ' , ; ` | Not identical
[08:08:13.257] | : . ' , ; ` | all.equal() for future ...
[08:08:13.257] | : . ' , ; ` | : List of 2
[08:08:13.257] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.257] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.257] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.257] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.257] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.257] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.257] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.262] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.262] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.262] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.262] | : . ' , ; ` List of future strategies:
[08:08:13.262] | : . ' , ; ` 1. sequential:
[08:08:13.262] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.262] | : . ' , ; `    - tweaked: FALSE
[08:08:13.262] | : . ' , ; `    - call: plan(sequential)
[08:08:13.263] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.263] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.263] | : . ' , assign_globals() ...
[08:08:13.264] | : . ' , List of 2
[08:08:13.264] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:13.264] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:13.264] | : . ' ,  - attr(*, "where")=List of 2
[08:08:13.264] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:13.264] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:13.264] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.264] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.264] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.264] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.267] | : . ' , - copied ‘weight’ to environment
[08:08:13.267] | : . ' , - copied ‘group’ to environment
[08:08:13.267] | : . ' , assign_globals() ... done
[08:08:13.270] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.270] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.270] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.271] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.271] | : . ' , ; ` | : New stack:
[08:08:13.271] | : . ' , ; ` | : List of 1
[08:08:13.271] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.271] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.271] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.271] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.271] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.271] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.274] | : . ' , ; ` | : Old stack:
[08:08:13.274] | : . ' , ; ` | : List of 1
[08:08:13.274] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.274] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.274] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.274] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.274] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.274] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.277] | : . ' , ; ` | : Identical
[08:08:13.277] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.277] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.277] | : . ' , ; ` | List of future strategies:
[08:08:13.277] | : . ' , ; ` | 1. sequential:
[08:08:13.277] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.277] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.277] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.278] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.278] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.278] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.281] | : . ' , SequentialFuture started (and completed)
[08:08:13.281] | : . ' , signalConditions() ...
[08:08:13.281] | : . ' , ; include = ‘immediateCondition’
[08:08:13.282] | : . ' , ; exclude = 
[08:08:13.282] | : . ' , ; resignal = FALSE
[08:08:13.282] | : . ' , ; Number of conditions: 6
[08:08:13.282] | : . ' , ;  int 6
[08:08:13.282] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.282] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.282] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.283] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.283] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.283] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.283] | : . ' , signalConditions() ... done
[08:08:13.283] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.283] | : . Launching futures ... done
[08:08:13.283] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.283] | : Using SequentialFutureBackend ... done
[08:08:13.283] | run() for ‘Future’ (<unnamed-1>) ... done
[08:08:13.284] future(..., label = NULL) ... done
[08:08:13.285] value() for SequentialFuture (<unnamed-1>) ...
[08:08:13.285] | signalConditions() ...
[08:08:13.285] | : include = ‘immediateCondition’
[08:08:13.285] | : exclude = 
[08:08:13.286] | : resignal = FALSE
[08:08:13.286] | : Number of conditions: 6
[08:08:13.286] | :  int 6
[08:08:13.286] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.286] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.286] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.286] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.287] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.287] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.287] | signalConditions() ... done
[08:08:13.287] | relay stdout ...
[08:08:13.287] | relay stdout ... done
[08:08:13.287] | check for misuse ...
[08:08:13.287] | check for misuse ... done
[08:08:13.287] | relay conditions ...
[08:08:13.287] | : Future state: ‘finished’
[08:08:13.287] | : signalConditions() ...
[08:08:13.288] | : . include = ‘condition’
[08:08:13.288] | : . exclude = ‘immediateCondition’
[08:08:13.288] | : . resignal = TRUE
[08:08:13.288] | : . Number of conditions: 6
[08:08:13.288] | : .  int 6
[08:08:13.288] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.288] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , attachPackages() ...
[08:08:13.289] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.289] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.289] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.289] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , attachPackages() ... done
[08:08:13.289] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.289] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , attachPackages() ...
[08:08:13.289] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.289] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.290] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.290] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.249] | : . ' , attachPackages() ... done
[08:08:13.290] | : signalConditions() ... done
[08:08:13.290] | relay conditions ... done
[08:08:13.290] value() for SequentialFuture (<unnamed-1>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:13.292] future(..., label = NULL) ...
[08:08:13.292] | lazy: TRUE
[08:08:13.292] | stdout: TRUE
[08:08:13.292] | conditions: [n=1] ‘condition’
[08:08:13.292] | gc: FALSE
[08:08:13.292] | earlySignal: FALSE
[08:08:13.292] | getGlobalsAndPackages() ...
[08:08:13.292] | : Searching for globals ...
[08:08:13.304] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:13.305] | : Searching for globals ... done
[08:08:13.305] | : Resolving globals: FALSE
[08:08:13.305] | : Search for packages associated with the globals ...
[08:08:13.305] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.305] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.305] | : Search for packages associated with the globals ... done
[08:08:13.306] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.306] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.306] | : globals: [2] ‘weight’, ‘group’
[08:08:13.306] | : packages: [1] ‘stats’
[08:08:13.306] | getGlobalsAndPackages() ... done
[08:08:13.306] future(..., label = NULL) ... done
[08:08:13.306] value() for Future (<unnamed-2>) ...
[08:08:13.306] | run() for ‘Future’ (<unnamed-2>) ...
[08:08:13.307] | : state: ‘created’
[08:08:13.307] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.307] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.307] | : Using SequentialFutureBackend ...
[08:08:13.307] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:13.307] | : . Launching futures ...
[08:08:13.307] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.307] | : . ' , getFutureData() ...
[08:08:13.307] | : . ' , ; getFutureCore() ...
[08:08:13.308] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.308] | : . ' , ; getFutureCore() ... done
[08:08:13.308] | : . ' , ; getFutureCapture() ...
[08:08:13.308] | : . ' , ; getFutureCapture() ... done
[08:08:13.308] | : . ' , ; getFutureContext() ...
[08:08:13.308] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.308] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.308] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.308] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.309] | : . ' , ; getFutureContext() ... done
[08:08:13.309] | : . ' , getFutureData() ... done
[08:08:13.310] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.310] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.310] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.310] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.310] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.311] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.311] | : . ' , ; ` | New stack:
[08:08:13.311] | : . ' , ; ` | List of 1
[08:08:13.311] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.311] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.311] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.311] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.311] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.311] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.311] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.311] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.313] | : . ' , ; ` | Old stack:
[08:08:13.313] | : . ' , ; ` | List of 1
[08:08:13.313] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.313] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.313] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.313] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.313] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.313] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.316] | : . ' , ; ` | Not identical
[08:08:13.316] | : . ' , ; ` | all.equal() for future ...
[08:08:13.317] | : . ' , ; ` | : List of 2
[08:08:13.317] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.317] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.317] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.317] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.317] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.317] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.317] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.322] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.323] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.323] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.323] | : . ' , ; ` List of future strategies:
[08:08:13.323] | : . ' , ; ` 1. sequential:
[08:08:13.323] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.323] | : . ' , ; `    - tweaked: FALSE
[08:08:13.323] | : . ' , ; `    - call: plan(sequential)
[08:08:13.323] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.323] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.323] | : . ' , assign_globals() ...
[08:08:13.323] | : . ' , List of 2
[08:08:13.323] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:13.323] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:13.323] | : . ' ,  - attr(*, "where")=List of 2
[08:08:13.323] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:13.323] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:13.323] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.323] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.323] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.323] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.327] | : . ' , - copied ‘weight’ to environment
[08:08:13.327] | : . ' , - copied ‘group’ to environment
[08:08:13.327] | : . ' , assign_globals() ... done
[08:08:13.329] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.329] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.329] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.329] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.329] | : . ' , ; ` | : New stack:
[08:08:13.329] | : . ' , ; ` | : List of 1
[08:08:13.329] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.329] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.329] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.329] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.329] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.329] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.332] | : . ' , ; ` | : Old stack:
[08:08:13.333] | : . ' , ; ` | : List of 1
[08:08:13.333] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.333] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.333] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.333] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.333] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.333] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.336] | : . ' , ; ` | : Identical
[08:08:13.336] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.336] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.336] | : . ' , ; ` | List of future strategies:
[08:08:13.336] | : . ' , ; ` | 1. sequential:
[08:08:13.336] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.336] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.336] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.336] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.336] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.337] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.337] | : . ' , SequentialFuture started (and completed)
[08:08:13.338] | : . ' , signalConditions() ...
[08:08:13.338] | : . ' , ; include = ‘immediateCondition’
[08:08:13.338] | : . ' , ; exclude = 
[08:08:13.338] | : . ' , ; resignal = FALSE
[08:08:13.338] | : . ' , ; Number of conditions: 6
[08:08:13.338] | : . ' , ;  int 6
[08:08:13.339] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.339] | : . ' , signalConditions() ... done
[08:08:13.339] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.339] | : . Launching futures ... done
[08:08:13.340] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.340] | : Using SequentialFutureBackend ... done
[08:08:13.340] | run() for ‘Future’ (<unnamed-2>) ... done
[08:08:13.340] | signalConditions() ...
[08:08:13.340] | : include = ‘immediateCondition’
[08:08:13.340] | : exclude = 
[08:08:13.340] | : resignal = FALSE
[08:08:13.340] | : Number of conditions: 6
[08:08:13.340] | :  int 6
[08:08:13.341] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.341] | signalConditions() ... done
[08:08:13.341] | relay stdout ...
[08:08:13.342] | relay stdout ... done
[08:08:13.342] | check for misuse ...
[08:08:13.342] | check for misuse ... done
[08:08:13.342] | relay conditions ...
[08:08:13.342] | : Future state: ‘finished’
[08:08:13.342] | : signalConditions() ...
[08:08:13.342] | : . include = ‘condition’
[08:08:13.342] | : . exclude = ‘immediateCondition’
[08:08:13.342] | : . resignal = TRUE
[08:08:13.342] | : . Number of conditions: 6
[08:08:13.343] | : .  int 6
[08:08:13.343] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.343] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.309] | : . ' , attachPackages() ...
[08:08:13.343] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.343] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.309] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.343] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.343] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.309] | : . ' , attachPackages() ... done
[08:08:13.344] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.344] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.309] | : . ' , attachPackages() ...
[08:08:13.344] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.344] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.309] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.344] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.344] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.310] | : . ' , attachPackages() ... done
[08:08:13.344] | : signalConditions() ... done
[08:08:13.344] | relay conditions ... done
[08:08:13.344] value() for Future (<unnamed-2>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:13.347] future(..., label = NULL) ...
[08:08:13.347] | lazy: FALSE
[08:08:13.347] | stdout: TRUE
[08:08:13.347] | conditions: [n=1] ‘condition’
[08:08:13.347] | gc: FALSE
[08:08:13.347] | earlySignal: FALSE
[08:08:13.347] | getGlobalsAndPackages() ...
[08:08:13.347] | : Searching for globals ...
[08:08:13.359] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:13.359] | : Searching for globals ... done
[08:08:13.359] | : Resolving globals: FALSE
[08:08:13.360] | : Search for packages associated with the globals ...
[08:08:13.360] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.360] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.360] | : Search for packages associated with the globals ... done
[08:08:13.360] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.360] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.361] | : globals: [2] ‘weight’, ‘group’
[08:08:13.361] | : packages: [1] ‘stats’
[08:08:13.361] | getGlobalsAndPackages() ... done
[08:08:13.361] | run() for ‘Future’ (<unnamed-3>) ...
[08:08:13.361] | : state: ‘created’
[08:08:13.361] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.361] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.361] | : Using SequentialFutureBackend ...
[08:08:13.361] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:13.362] | : . Launching futures ...
[08:08:13.362] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.362] | : . ' , getFutureData() ...
[08:08:13.362] | : . ' , ; getFutureCore() ...
[08:08:13.362] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.362] | : . ' , ; getFutureCore() ... done
[08:08:13.362] | : . ' , ; getFutureCapture() ...
[08:08:13.362] | : . ' , ; getFutureCapture() ... done
[08:08:13.362] | : . ' , ; getFutureContext() ...
[08:08:13.363] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.363] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.363] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.363] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.363] | : . ' , ; getFutureContext() ... done
[08:08:13.363] | : . ' , getFutureData() ... done
[08:08:13.364] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.364] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.365] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.365] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.365] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.365] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.365] | : . ' , ; ` | New stack:
[08:08:13.365] | : . ' , ; ` | List of 1
[08:08:13.365] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.365] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.365] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.365] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.365] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.365] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.365] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.365] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.368] | : . ' , ; ` | Old stack:
[08:08:13.368] | : . ' , ; ` | List of 1
[08:08:13.368] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.368] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.368] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.368] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.368] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.368] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.372] | : . ' , ; ` | Not identical
[08:08:13.372] | : . ' , ; ` | all.equal() for future ...
[08:08:13.372] | : . ' , ; ` | : List of 2
[08:08:13.372] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.372] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.372] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.372] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.372] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.372] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.372] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.377] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.377] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.377] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.377] | : . ' , ; ` List of future strategies:
[08:08:13.377] | : . ' , ; ` 1. sequential:
[08:08:13.377] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.377] | : . ' , ; `    - tweaked: FALSE
[08:08:13.377] | : . ' , ; `    - call: plan(sequential)
[08:08:13.377] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.377] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.378] | : . ' , assign_globals() ...
[08:08:13.378] | : . ' , List of 2
[08:08:13.378] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:13.378] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:13.378] | : . ' ,  - attr(*, "where")=List of 2
[08:08:13.378] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:13.378] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:13.378] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.378] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.378] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.378] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.381] | : . ' , - copied ‘weight’ to environment
[08:08:13.381] | : . ' , - copied ‘group’ to environment
[08:08:13.381] | : . ' , assign_globals() ... done
[08:08:13.383] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.383] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.383] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.383] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.384] | : . ' , ; ` | : New stack:
[08:08:13.384] | : . ' , ; ` | : List of 1
[08:08:13.384] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.384] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.384] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.384] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.384] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.384] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.387] | : . ' , ; ` | : Old stack:
[08:08:13.387] | : . ' , ; ` | : List of 1
[08:08:13.387] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.387] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.387] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.387] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.387] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.387] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.391] | : . ' , ; ` | : Identical
[08:08:13.391] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.391] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.391] | : . ' , ; ` | List of future strategies:
[08:08:13.391] | : . ' , ; ` | 1. sequential:
[08:08:13.391] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.391] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.391] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.391] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.392] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.392] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.392] | : . ' , SequentialFuture started (and completed)
[08:08:13.392] | : . ' , signalConditions() ...
[08:08:13.392] | : . ' , ; include = ‘immediateCondition’
[08:08:13.392] | : . ' , ; exclude = 
[08:08:13.392] | : . ' , ; resignal = FALSE
[08:08:13.392] | : . ' , ; Number of conditions: 6
[08:08:13.393] | : . ' , ;  int 6
[08:08:13.393] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.393] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.393] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.393] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.393] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.393] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.394] | : . ' , signalConditions() ... done
[08:08:13.394] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.394] | : . Launching futures ... done
[08:08:13.394] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.394] | : Using SequentialFutureBackend ... done
[08:08:13.394] | run() for ‘Future’ (<unnamed-3>) ... done
[08:08:13.394] future(..., label = NULL) ... done
[08:08:13.394] value() for SequentialFuture (<unnamed-3>) ...
[08:08:13.394] | signalConditions() ...
[08:08:13.395] | : include = ‘immediateCondition’
[08:08:13.395] | : exclude = 
[08:08:13.395] | : resignal = FALSE
[08:08:13.395] | : Number of conditions: 6
[08:08:13.395] | :  int 6
[08:08:13.395] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.395] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.396] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.396] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.396] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.396] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.396] | signalConditions() ... done
[08:08:13.396] | relay stdout ...
[08:08:13.396] | relay stdout ... done
[08:08:13.396] | check for misuse ...
[08:08:13.396] | check for misuse ... done
[08:08:13.396] | relay conditions ...
[08:08:13.397] | : Future state: ‘finished’
[08:08:13.397] | : signalConditions() ...
[08:08:13.397] | : . include = ‘condition’
[08:08:13.397] | : . exclude = ‘immediateCondition’
[08:08:13.397] | : . resignal = TRUE
[08:08:13.397] | : . Number of conditions: 6
[08:08:13.397] | : .  int 6
[08:08:13.397] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.398] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.363] | : . ' , attachPackages() ...
[08:08:13.398] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.398] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.363] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.398] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.398] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.364] | : . ' , attachPackages() ... done
[08:08:13.398] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.398] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.364] | : . ' , attachPackages() ...
[08:08:13.398] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.399] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.364] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.399] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.399] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.364] | : . ' , attachPackages() ... done
[08:08:13.399] | : signalConditions() ... done
[08:08:13.399] | relay conditions ... done
[08:08:13.399] value() for SequentialFuture (<unnamed-3>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:13.401] future(..., label = NULL) ...
[08:08:13.401] | lazy: FALSE
[08:08:13.401] | stdout: TRUE
[08:08:13.401] | conditions: [n=1] ‘condition’
[08:08:13.401] | gc: FALSE
[08:08:13.401] | earlySignal: FALSE
[08:08:13.401] | getGlobalsAndPackages() ...
[08:08:13.401] | : Searching for globals ...
[08:08:13.413] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:13.414] | : Searching for globals ... done
[08:08:13.414] | : Resolving globals: FALSE
[08:08:13.414] | : Search for packages associated with the globals ...
[08:08:13.414] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.414] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.414] | : Search for packages associated with the globals ... done
[08:08:13.415] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.415] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.415] | : globals: [2] ‘weight’, ‘group’
[08:08:13.415] | : packages: [1] ‘stats’
[08:08:13.415] | getGlobalsAndPackages() ... done
[08:08:13.415] | run() for ‘Future’ (<unnamed-4>) ...
[08:08:13.415] | : state: ‘created’
[08:08:13.416] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.416] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.416] | : Using SequentialFutureBackend ...
[08:08:13.416] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:13.416] | : . Launching futures ...
[08:08:13.416] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.416] | : . ' , getFutureData() ...
[08:08:13.416] | : . ' , ; getFutureCore() ...
[08:08:13.416] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.416] | : . ' , ; getFutureCore() ... done
[08:08:13.417] | : . ' , ; getFutureCapture() ...
[08:08:13.417] | : . ' , ; getFutureCapture() ... done
[08:08:13.417] | : . ' , ; getFutureContext() ...
[08:08:13.417] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.417] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.417] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.417] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.417] | : . ' , ; getFutureContext() ... done
[08:08:13.417] | : . ' , getFutureData() ... done
[08:08:13.419] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.419] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.419] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.419] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.419] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.419] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.419] | : . ' , ; ` | New stack:
[08:08:13.420] | : . ' , ; ` | List of 1
[08:08:13.420] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.420] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.420] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.420] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.420] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.420] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.420] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.420] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.423] | : . ' , ; ` | Old stack:
[08:08:13.423] | : . ' , ; ` | List of 1
[08:08:13.423] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.423] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.423] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.423] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.423] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.423] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.426] | : . ' , ; ` | Not identical
[08:08:13.426] | : . ' , ; ` | all.equal() for future ...
[08:08:13.426] | : . ' , ; ` | : List of 2
[08:08:13.426] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.426] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.426] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.426] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.426] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.426] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.426] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.431] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.431] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.431] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.431] | : . ' , ; ` List of future strategies:
[08:08:13.431] | : . ' , ; ` 1. sequential:
[08:08:13.431] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.431] | : . ' , ; `    - tweaked: FALSE
[08:08:13.431] | : . ' , ; `    - call: plan(sequential)
[08:08:13.432] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.432] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.432] | : . ' , assign_globals() ...
[08:08:13.432] | : . ' , List of 2
[08:08:13.432] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:13.432] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:13.432] | : . ' ,  - attr(*, "where")=List of 2
[08:08:13.432] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:13.432] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:13.432] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.432] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.432] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.432] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.435] | : . ' , - copied ‘weight’ to environment
[08:08:13.435] | : . ' , - copied ‘group’ to environment
[08:08:13.435] | : . ' , assign_globals() ... done
[08:08:13.438] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.438] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.439] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.439] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.439] | : . ' , ; ` | : New stack:
[08:08:13.439] | : . ' , ; ` | : List of 1
[08:08:13.439] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.439] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.439] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.439] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.439] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.439] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.442] | : . ' , ; ` | : Old stack:
[08:08:13.442] | : . ' , ; ` | : List of 1
[08:08:13.442] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.442] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.442] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.442] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.442] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.442] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.445] | : . ' , ; ` | : Identical
[08:08:13.445] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.445] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.445] | : . ' , ; ` | List of future strategies:
[08:08:13.445] | : . ' , ; ` | 1. sequential:
[08:08:13.445] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.445] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.445] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.446] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.446] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.446] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.446] | : . ' , SequentialFuture started (and completed)
[08:08:13.447] | : . ' , signalConditions() ...
[08:08:13.447] | : . ' , ; include = ‘immediateCondition’
[08:08:13.447] | : . ' , ; exclude = 
[08:08:13.447] | : . ' , ; resignal = FALSE
[08:08:13.447] | : . ' , ; Number of conditions: 6
[08:08:13.447] | : . ' , ;  int 6
[08:08:13.447] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.448] | : . ' , signalConditions() ... done
[08:08:13.448] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.448] | : . Launching futures ... done
[08:08:13.448] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.448] | : Using SequentialFutureBackend ... done
[08:08:13.449] | run() for ‘Future’ (<unnamed-4>) ... done
[08:08:13.449] future(..., label = NULL) ... done
[08:08:13.449] value() for SequentialFuture (<unnamed-4>) ...
[08:08:13.449] | signalConditions() ...
[08:08:13.449] | : include = ‘immediateCondition’
[08:08:13.449] | : exclude = 
[08:08:13.449] | : resignal = FALSE
[08:08:13.449] | : Number of conditions: 6
[08:08:13.449] | :  int 6
[08:08:13.450] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.450] | signalConditions() ... done
[08:08:13.450] | relay stdout ...
[08:08:13.451] | relay stdout ... done
[08:08:13.451] | check for misuse ...
[08:08:13.451] | check for misuse ... done
[08:08:13.451] | relay conditions ...
[08:08:13.451] | : Future state: ‘finished’
[08:08:13.451] | : signalConditions() ...
[08:08:13.451] | : . include = ‘condition’
[08:08:13.451] | : . exclude = ‘immediateCondition’
[08:08:13.451] | : . resignal = TRUE
[08:08:13.451] | : . Number of conditions: 6
[08:08:13.452] | : .  int 6
[08:08:13.452] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.452] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , attachPackages() ...
[08:08:13.452] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.452] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.452] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.452] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , attachPackages() ... done
[08:08:13.453] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.453] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , attachPackages() ...
[08:08:13.453] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.453] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.453] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.453] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.418] | : . ' , attachPackages() ... done
[08:08:13.453] | : signalConditions() ... done
[08:08:13.453] | relay conditions ... done
[08:08:13.453] value() for SequentialFuture (<unnamed-4>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:13.456] future(..., label = NULL) ...
[08:08:13.456] | lazy: TRUE
[08:08:13.456] | stdout: TRUE
[08:08:13.456] | conditions: [n=1] ‘condition’
[08:08:13.456] | gc: FALSE
[08:08:13.456] | earlySignal: FALSE
[08:08:13.456] | getGlobalsAndPackages() ...
[08:08:13.456] | : Searching for globals ...
[08:08:13.468] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:13.468] | : Searching for globals ... done
[08:08:13.468] | : Resolving globals: FALSE
[08:08:13.469] | : Search for packages associated with the globals ...
[08:08:13.469] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.469] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.469] | : Search for packages associated with the globals ... done
[08:08:13.469] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.469] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.470] | : globals: [2] ‘weight’, ‘group’
[08:08:13.470] | : packages: [1] ‘stats’
[08:08:13.470] | getGlobalsAndPackages() ... done
[08:08:13.470] future(..., label = NULL) ... done
[08:08:13.470] value() for Future (<unnamed-5>) ...
[08:08:13.470] | run() for ‘Future’ (<unnamed-5>) ...
[08:08:13.470] | : state: ‘created’
[08:08:13.470] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.471] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.471] | : Using SequentialFutureBackend ...
[08:08:13.471] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:13.471] | : . Launching futures ...
[08:08:13.471] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.471] | : . ' , getFutureData() ...
[08:08:13.471] | : . ' , ; getFutureCore() ...
[08:08:13.471] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.471] | : . ' , ; getFutureCore() ... done
[08:08:13.471] | : . ' , ; getFutureCapture() ...
[08:08:13.472] | : . ' , ; getFutureCapture() ... done
[08:08:13.472] | : . ' , ; getFutureContext() ...
[08:08:13.472] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.472] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.472] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.472] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.472] | : . ' , ; getFutureContext() ... done
[08:08:13.472] | : . ' , getFutureData() ... done
[08:08:13.474] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.474] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.474] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.474] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.474] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.474] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.474] | : . ' , ; ` | New stack:
[08:08:13.475] | : . ' , ; ` | List of 1
[08:08:13.475] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.475] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.475] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.475] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.475] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.475] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.475] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.475] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.477] | : . ' , ; ` | Old stack:
[08:08:13.477] | : . ' , ; ` | List of 1
[08:08:13.477] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.477] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.477] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.477] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.477] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.477] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.480] | : . ' , ; ` | Not identical
[08:08:13.480] | : . ' , ; ` | all.equal() for future ...
[08:08:13.480] | : . ' , ; ` | : List of 2
[08:08:13.480] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.480] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.480] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.480] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.480] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.480] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.480] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.486] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.486] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.486] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.487] | : . ' , ; ` List of future strategies:
[08:08:13.487] | : . ' , ; ` 1. sequential:
[08:08:13.487] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.487] | : . ' , ; `    - tweaked: FALSE
[08:08:13.487] | : . ' , ; `    - call: plan(sequential)
[08:08:13.487] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.487] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.487] | : . ' , assign_globals() ...
[08:08:13.487] | : . ' , List of 2
[08:08:13.487] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:13.487] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:13.487] | : . ' ,  - attr(*, "where")=List of 2
[08:08:13.487] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:13.487] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:13.487] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.487] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.487] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.487] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.490] | : . ' , - copied ‘weight’ to environment
[08:08:13.491] | : . ' , - copied ‘group’ to environment
[08:08:13.491] | : . ' , assign_globals() ... done
[08:08:13.493] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.493] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.493] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.493] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.493] | : . ' , ; ` | : New stack:
[08:08:13.493] | : . ' , ; ` | : List of 1
[08:08:13.493] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.493] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.493] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.493] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.493] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.493] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.496] | : . ' , ; ` | : Old stack:
[08:08:13.496] | : . ' , ; ` | : List of 1
[08:08:13.496] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.496] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.496] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.496] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.496] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.496] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.499] | : . ' , ; ` | : Identical
[08:08:13.500] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.500] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.500] | : . ' , ; ` | List of future strategies:
[08:08:13.500] | : . ' , ; ` | 1. sequential:
[08:08:13.500] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.500] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.500] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.500] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.500] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.500] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.501] | : . ' , SequentialFuture started (and completed)
[08:08:13.501] | : . ' , signalConditions() ...
[08:08:13.501] | : . ' , ; include = ‘immediateCondition’
[08:08:13.501] | : . ' , ; exclude = 
[08:08:13.501] | : . ' , ; resignal = FALSE
[08:08:13.526] | : . ' , ; Number of conditions: 6
[08:08:13.526] | : . ' , ;  int 6
[08:08:13.527] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.527] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.527] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.527] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.528] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.528] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.528] | : . ' , signalConditions() ... done
[08:08:13.528] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.528] | : . Launching futures ... done
[08:08:13.528] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.528] | : Using SequentialFutureBackend ... done
[08:08:13.528] | run() for ‘Future’ (<unnamed-5>) ... done
[08:08:13.529] | signalConditions() ...
[08:08:13.529] | : include = ‘immediateCondition’
[08:08:13.529] | : exclude = 
[08:08:13.529] | : resignal = FALSE
[08:08:13.529] | : Number of conditions: 6
[08:08:13.529] | :  int 6
[08:08:13.529] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.530] | signalConditions() ... done
[08:08:13.530] | relay stdout ...
[08:08:13.530] | relay stdout ... done
[08:08:13.530] | check for misuse ...
[08:08:13.530] | check for misuse ... done
[08:08:13.531] | relay conditions ...
[08:08:13.531] | : Future state: ‘finished’
[08:08:13.531] | : signalConditions() ...
[08:08:13.531] | : . include = ‘condition’
[08:08:13.531] | : . exclude = ‘immediateCondition’
[08:08:13.531] | : . resignal = TRUE
[08:08:13.531] | : . Number of conditions: 6
[08:08:13.531] | : .  int 6
[08:08:13.532] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.532] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , attachPackages() ...
[08:08:13.532] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.532] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.532] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.532] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , attachPackages() ... done
[08:08:13.532] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.533] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , attachPackages() ...
[08:08:13.533] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.533] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.533] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.533] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.473] | : . ' , attachPackages() ... done
[08:08:13.533] | : signalConditions() ... done
[08:08:13.533] | relay conditions ... done
[08:08:13.533] value() for Future (<unnamed-5>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:13.535] future(..., label = NULL) ...
[08:08:13.535] | lazy: FALSE
[08:08:13.535] | stdout: TRUE
[08:08:13.535] | conditions: [n=1] ‘condition’
[08:08:13.535] | gc: FALSE
[08:08:13.536] | earlySignal: FALSE
[08:08:13.536] | getGlobalsAndPackages() ...
[08:08:13.536] | : Searching for globals ...
[08:08:13.544] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:13.544] | : Searching for globals ... done
[08:08:13.544] | : Resolving globals: FALSE
[08:08:13.544] | : Search for packages associated with the globals ...
[08:08:13.545] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.546] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.546] | : Search for packages associated with the globals ... done
[08:08:13.546] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.546] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.546] | : globals: [1] ‘x’
[08:08:13.546] | : packages: [1] ‘stats’
[08:08:13.546] | getGlobalsAndPackages() ... done
[08:08:13.547] | run() for ‘Future’ (<unnamed-6>) ...
[08:08:13.547] | : state: ‘created’
[08:08:13.547] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.547] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.547] | : Using SequentialFutureBackend ...
[08:08:13.547] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:13.547] | : . Launching futures ...
[08:08:13.548] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.548] | : . ' , getFutureData() ...
[08:08:13.548] | : . ' , ; getFutureCore() ...
[08:08:13.548] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.548] | : . ' , ; getFutureCore() ... done
[08:08:13.548] | : . ' , ; getFutureCapture() ...
[08:08:13.548] | : . ' , ; getFutureCapture() ... done
[08:08:13.548] | : . ' , ; getFutureContext() ...
[08:08:13.548] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.549] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.549] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.549] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.549] | : . ' , ; getFutureContext() ... done
[08:08:13.549] | : . ' , getFutureData() ... done
[08:08:13.550] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.550] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.551] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.551] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.551] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.551] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.551] | : . ' , ; ` | New stack:
[08:08:13.551] | : . ' , ; ` | List of 1
[08:08:13.551] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.551] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.551] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.551] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.551] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.551] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.551] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.551] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.554] | : . ' , ; ` | Old stack:
[08:08:13.554] | : . ' , ; ` | List of 1
[08:08:13.554] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.554] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.554] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.554] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.554] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.554] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.557] | : . ' , ; ` | Not identical
[08:08:13.557] | : . ' , ; ` | all.equal() for future ...
[08:08:13.557] | : . ' , ; ` | : List of 2
[08:08:13.557] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.557] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.557] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.557] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.557] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.557] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.557] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.562] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.562] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.562] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.563] | : . ' , ; ` List of future strategies:
[08:08:13.563] | : . ' , ; ` 1. sequential:
[08:08:13.563] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.563] | : . ' , ; `    - tweaked: FALSE
[08:08:13.563] | : . ' , ; `    - call: plan(sequential)
[08:08:13.563] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.563] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.563] | : . ' , assign_globals() ...
[08:08:13.563] | : . ' , List of 1
[08:08:13.563] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:13.563] | : . ' ,  - attr(*, "where")=List of 1
[08:08:13.563] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:13.563] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.563] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.563] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.563] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.567] | : . ' , - copied ‘x’ to environment
[08:08:13.567] | : . ' , assign_globals() ... done
[08:08:13.569] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.569] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.569] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.569] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.569] | : . ' , ; ` | : New stack:
[08:08:13.569] | : . ' , ; ` | : List of 1
[08:08:13.569] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.569] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.569] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.569] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.569] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.569] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.573] | : . ' , ; ` | : Old stack:
[08:08:13.573] | : . ' , ; ` | : List of 1
[08:08:13.573] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.573] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.573] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.573] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.573] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.573] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.576] | : . ' , ; ` | : Identical
[08:08:13.576] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.576] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.576] | : . ' , ; ` | List of future strategies:
[08:08:13.576] | : . ' , ; ` | 1. sequential:
[08:08:13.576] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.576] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.576] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.576] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.576] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.577] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.577] | : . ' , SequentialFuture started (and completed)
[08:08:13.577] | : . ' , signalConditions() ...
[08:08:13.577] | : . ' , ; include = ‘immediateCondition’
[08:08:13.577] | : . ' , ; exclude = 
[08:08:13.577] | : . ' , ; resignal = FALSE
[08:08:13.577] | : . ' , ; Number of conditions: 6
[08:08:13.577] | : . ' , ;  int 6
[08:08:13.578] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.578] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.578] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.578] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.578] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.578] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.579] | : . ' , signalConditions() ... done
[08:08:13.579] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.579] | : . Launching futures ... done
[08:08:13.579] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.579] | : Using SequentialFutureBackend ... done
[08:08:13.579] | run() for ‘Future’ (<unnamed-6>) ... done
[08:08:13.579] future(..., label = NULL) ... done
[08:08:13.579] value() for SequentialFuture (<unnamed-6>) ...
[08:08:13.579] | signalConditions() ...
[08:08:13.579] | : include = ‘immediateCondition’
[08:08:13.580] | : exclude = 
[08:08:13.580] | : resignal = FALSE
[08:08:13.580] | : Number of conditions: 6
[08:08:13.580] | :  int 6
[08:08:13.580] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.580] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.580] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.580] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.581] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.581] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.581] | signalConditions() ... done
[08:08:13.581] | relay stdout ...
[08:08:13.581] | relay stdout ... done
[08:08:13.581] | check for misuse ...
[08:08:13.581] | check for misuse ... done
[08:08:13.581] | relay conditions ...
[08:08:13.581] | : Future state: ‘finished’
[08:08:13.582] | : signalConditions() ...
[08:08:13.582] | : . include = ‘condition’
[08:08:13.582] | : . exclude = ‘immediateCondition’
[08:08:13.582] | : . resignal = TRUE
[08:08:13.582] | : . Number of conditions: 6
[08:08:13.582] | : .  int 6
[08:08:13.582] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.582] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.549] | : . ' , attachPackages() ...
[08:08:13.583] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.583] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.549] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.583] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.583] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.550] | : . ' , attachPackages() ... done
[08:08:13.583] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.583] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.550] | : . ' , attachPackages() ...
[08:08:13.584] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.584] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.550] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.584] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.585] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.550] | : . ' , attachPackages() ... done
[08:08:13.585] | : signalConditions() ... done
[08:08:13.585] | relay conditions ... done
[08:08:13.585] value() for SequentialFuture (<unnamed-6>) ... done
x
1 2 
2 3 
[08:08:13.585] future(..., label = NULL) ...
[08:08:13.586] | lazy: FALSE
[08:08:13.586] | stdout: TRUE
[08:08:13.586] | conditions: [n=1] ‘condition’
[08:08:13.586] | gc: FALSE
[08:08:13.586] | earlySignal: FALSE
[08:08:13.586] | getGlobalsAndPackages() ...
[08:08:13.586] | : Searching for globals ...
[08:08:13.593] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:13.594] | : Searching for globals ... done
[08:08:13.594] | : Resolving globals: FALSE
[08:08:13.594] | : Search for packages associated with the globals ...
[08:08:13.594] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:13.594] | : . Packages: [2] ‘base’, ‘stats’
[08:08:13.594] | : Search for packages associated with the globals ... done
[08:08:13.595] | : Packages after dropping 'base': [1] ‘stats’
[08:08:13.595] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:13.595] | : globals: [1] ‘x’
[08:08:13.595] | : packages: [1] ‘stats’
[08:08:13.595] | getGlobalsAndPackages() ... done
[08:08:13.595] | run() for ‘Future’ (<unnamed-7>) ...
[08:08:13.595] | : state: ‘created’
[08:08:13.595] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.596] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.596] | : Using SequentialFutureBackend ...
[08:08:13.596] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:13.596] | : . Launching futures ...
[08:08:13.596] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.596] | : . ' , getFutureData() ...
[08:08:13.596] | : . ' , ; getFutureCore() ...
[08:08:13.596] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:13.596] | : . ' , ; getFutureCore() ... done
[08:08:13.597] | : . ' , ; getFutureCapture() ...
[08:08:13.597] | : . ' , ; getFutureCapture() ... done
[08:08:13.597] | : . ' , ; getFutureContext() ...
[08:08:13.597] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.597] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.597] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.597] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.597] | : . ' , ; getFutureContext() ... done
[08:08:13.597] | : . ' , getFutureData() ... done
[08:08:13.599] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.599] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.599] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.599] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.599] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.599] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.599] | : . ' , ; ` | New stack:
[08:08:13.600] | : . ' , ; ` | List of 1
[08:08:13.600] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.600] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.600] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.600] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.600] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.600] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.600] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.600] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.603] | : . ' , ; ` | Old stack:
[08:08:13.603] | : . ' , ; ` | List of 1
[08:08:13.603] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.603] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.603] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.603] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.603] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.603] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.607] | : . ' , ; ` | Not identical
[08:08:13.607] | : . ' , ; ` | all.equal() for future ...
[08:08:13.607] | : . ' , ; ` | : List of 2
[08:08:13.607] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.607] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.607] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.607] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.607] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.607] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.607] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.612] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.612] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.612] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.612] | : . ' , ; ` List of future strategies:
[08:08:13.612] | : . ' , ; ` 1. sequential:
[08:08:13.612] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.612] | : . ' , ; `    - tweaked: FALSE
[08:08:13.612] | : . ' , ; `    - call: plan(sequential)
[08:08:13.612] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.613] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.613] | : . ' , assign_globals() ...
[08:08:13.613] | : . ' , List of 1
[08:08:13.613] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:13.613] | : . ' ,  - attr(*, "where")=List of 1
[08:08:13.613] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:13.613] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.613] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.613] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.613] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.615] | : . ' , - copied ‘x’ to environment
[08:08:13.615] | : . ' , assign_globals() ... done
[08:08:13.617] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.617] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.617] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.618] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.618] | : . ' , ; ` | : New stack:
[08:08:13.618] | : . ' , ; ` | : List of 1
[08:08:13.618] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.618] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.618] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.618] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.618] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.618] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.622] | : . ' , ; ` | : Old stack:
[08:08:13.622] | : . ' , ; ` | : List of 1
[08:08:13.622] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.622] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.622] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.622] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.622] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.622] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.625] | : . ' , ; ` | : Identical
[08:08:13.625] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.625] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.625] | : . ' , ; ` | List of future strategies:
[08:08:13.625] | : . ' , ; ` | 1. sequential:
[08:08:13.625] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.625] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.625] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.626] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.626] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.626] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.626] | : . ' , SequentialFuture started (and completed)
[08:08:13.626] | : . ' , signalConditions() ...
[08:08:13.626] | : . ' , ; include = ‘immediateCondition’
[08:08:13.627] | : . ' , ; exclude = 
[08:08:13.627] | : . ' , ; resignal = FALSE
[08:08:13.627] | : . ' , ; Number of conditions: 6
[08:08:13.627] | : . ' , ;  int 6
[08:08:13.627] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.627] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.627] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.628] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.628] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.628] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.628] | : . ' , signalConditions() ... done
[08:08:13.628] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.628] | : . Launching futures ... done
[08:08:13.628] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.628] | : Using SequentialFutureBackend ... done
[08:08:13.628] | run() for ‘Future’ (<unnamed-7>) ... done
[08:08:13.629] future(..., label = NULL) ... done
[08:08:13.629] value() for SequentialFuture (<unnamed-7>) ...
[08:08:13.629] | signalConditions() ...
[08:08:13.629] | : include = ‘immediateCondition’
[08:08:13.629] | : exclude = 
[08:08:13.629] | : resignal = FALSE
[08:08:13.629] | : Number of conditions: 6
[08:08:13.629] | :  int 6
[08:08:13.630] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.630] | signalConditions() ... done
[08:08:13.630] | relay stdout ...
[08:08:13.630] | relay stdout ... done
[08:08:13.631] | check for misuse ...
[08:08:13.631] | check for misuse ... done
[08:08:13.631] | relay conditions ...
[08:08:13.631] | : Future state: ‘finished’
[08:08:13.631] | : signalConditions() ...
[08:08:13.631] | : . include = ‘condition’
[08:08:13.631] | : . exclude = ‘immediateCondition’
[08:08:13.631] | : . resignal = TRUE
[08:08:13.631] | : . Number of conditions: 6
[08:08:13.631] | : .  int 6
[08:08:13.632] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.632] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , attachPackages() ...
[08:08:13.632] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.632] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.632] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.632] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , attachPackages() ... done
[08:08:13.632] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.633] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , attachPackages() ...
[08:08:13.633] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.633] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , ; packages: [n=1] ‘stats’
[08:08:13.633] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.633] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.598] | : . ' , attachPackages() ... done
[08:08:13.633] | : signalConditions() ... done
[08:08:13.633] | relay conditions ... done
[08:08:13.633] value() for SequentialFuture (<unnamed-7>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:13.635] future(..., label = NULL) ...
[08:08:13.635] | lazy: FALSE
[08:08:13.635] | stdout: TRUE
[08:08:13.635] | conditions: [n=1] ‘condition’
[08:08:13.635] | gc: FALSE
[08:08:13.636] | earlySignal: FALSE
[08:08:13.636] | getGlobalsAndPackages() ...
[08:08:13.636] | : Searching for globals ...
[08:08:13.649] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:13.649] | : Searching for globals ... done
[08:08:13.649] | : Resolving globals: FALSE
[08:08:13.649] | : Search for packages associated with the globals ...
[08:08:13.650] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.650] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.650] | : Search for packages associated with the globals ... done
[08:08:13.650] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:13.650] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:13.651] | : globals: [0] 
[08:08:13.651] | : packages: [2] ‘stats’, ‘datasets’
[08:08:13.651] | getGlobalsAndPackages() ... done
[08:08:13.651] | run() for ‘Future’ (<unnamed-8>) ...
[08:08:13.651] | : state: ‘created’
[08:08:13.651] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.651] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.651] | : Using SequentialFutureBackend ...
[08:08:13.652] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:13.652] | : . Launching futures ...
[08:08:13.652] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.652] | : . ' , getFutureData() ...
[08:08:13.652] | : . ' , ; getFutureCore() ...
[08:08:13.652] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:13.652] | : . ' , ; getFutureCore() ... done
[08:08:13.652] | : . ' , ; getFutureCapture() ...
[08:08:13.653] | : . ' , ; getFutureCapture() ... done
[08:08:13.653] | : . ' , ; getFutureContext() ...
[08:08:13.653] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.653] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.653] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.653] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.653] | : . ' , ; getFutureContext() ... done
[08:08:13.653] | : . ' , getFutureData() ... done
[08:08:13.655] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.655] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.655] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.655] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.655] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.655] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.656] | : . ' , ; ` | New stack:
[08:08:13.656] | : . ' , ; ` | List of 1
[08:08:13.656] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.656] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.656] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.656] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.656] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.656] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.656] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.656] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.659] | : . ' , ; ` | Old stack:
[08:08:13.659] | : . ' , ; ` | List of 1
[08:08:13.659] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.659] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.659] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.659] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.659] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.659] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.662] | : . ' , ; ` | Not identical
[08:08:13.662] | : . ' , ; ` | all.equal() for future ...
[08:08:13.662] | : . ' , ; ` | : List of 2
[08:08:13.662] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.662] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.662] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.662] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.662] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.662] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.662] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.667] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.667] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.668] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.668] | : . ' , ; ` List of future strategies:
[08:08:13.668] | : . ' , ; ` 1. sequential:
[08:08:13.668] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.668] | : . ' , ; `    - tweaked: FALSE
[08:08:13.668] | : . ' , ; `    - call: plan(sequential)
[08:08:13.668] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.668] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.670] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.670] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.671] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.671] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.671] | : . ' , ; ` | : New stack:
[08:08:13.671] | : . ' , ; ` | : List of 1
[08:08:13.671] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.671] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.671] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.671] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.671] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.671] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.675] | : . ' , ; ` | : Old stack:
[08:08:13.675] | : . ' , ; ` | : List of 1
[08:08:13.675] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.675] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.675] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.675] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.675] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.675] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.678] | : . ' , ; ` | : Identical
[08:08:13.678] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.678] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.678] | : . ' , ; ` | List of future strategies:
[08:08:13.678] | : . ' , ; ` | 1. sequential:
[08:08:13.678] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.678] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.678] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.679] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.679] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.679] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.679] | : . ' , SequentialFuture started (and completed)
[08:08:13.679] | : . ' , signalConditions() ...
[08:08:13.679] | : . ' , ; include = ‘immediateCondition’
[08:08:13.680] | : . ' , ; exclude = 
[08:08:13.680] | : . ' , ; resignal = FALSE
[08:08:13.680] | : . ' , ; Number of conditions: 6
[08:08:13.680] | : . ' , ;  int 6
[08:08:13.680] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.680] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.680] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.681] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.681] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.681] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.681] | : . ' , signalConditions() ... done
[08:08:13.681] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.681] | : . Launching futures ... done
[08:08:13.681] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.681] | : Using SequentialFutureBackend ... done
[08:08:13.681] | run() for ‘Future’ (<unnamed-8>) ... done
[08:08:13.682] future(..., label = NULL) ... done
[08:08:13.682] value() for SequentialFuture (<unnamed-8>) ...
[08:08:13.682] | signalConditions() ...
[08:08:13.682] | : include = ‘immediateCondition’
[08:08:13.682] | : exclude = 
[08:08:13.682] | : resignal = FALSE
[08:08:13.682] | : Number of conditions: 6
[08:08:13.682] | :  int 6
[08:08:13.683] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.683] | signalConditions() ... done
[08:08:13.683] | relay stdout ...
[08:08:13.683] | relay stdout ... done
[08:08:13.684] | check for misuse ...
[08:08:13.684] | check for misuse ... done
[08:08:13.684] | relay conditions ...
[08:08:13.684] | : Future state: ‘finished’
[08:08:13.684] | : signalConditions() ...
[08:08:13.684] | : . include = ‘condition’
[08:08:13.684] | : . exclude = ‘immediateCondition’
[08:08:13.684] | : . resignal = TRUE
[08:08:13.684] | : . Number of conditions: 6
[08:08:13.684] | : .  int 6
[08:08:13.685] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.685] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.653] | : . ' , attachPackages() ...
[08:08:13.685] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.685] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.654] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.685] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.685] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.654] | : . ' , attachPackages() ... done
[08:08:13.685] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.686] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.654] | : . ' , attachPackages() ...
[08:08:13.686] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.686] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.654] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:13.686] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.686] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.654] | : . ' , attachPackages() ... done
[08:08:13.686] | : signalConditions() ... done
[08:08:13.686] | relay conditions ... done
[08:08:13.686] value() for SequentialFuture (<unnamed-8>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:13.688] future(..., label = NULL) ...
[08:08:13.689] | lazy: FALSE
[08:08:13.689] | stdout: TRUE
[08:08:13.689] | conditions: [n=1] ‘condition’
[08:08:13.689] | gc: FALSE
[08:08:13.689] | earlySignal: FALSE
[08:08:13.689] | getGlobalsAndPackages() ...
[08:08:13.689] | : Searching for globals ...
[08:08:13.702] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:13.702] | : Searching for globals ... done
[08:08:13.702] | : Resolving globals: FALSE
[08:08:13.702] | : Search for packages associated with the globals ...
[08:08:13.703] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.703] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.703] | : Search for packages associated with the globals ... done
[08:08:13.703] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:13.703] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:13.703] | : globals: [0] 
[08:08:13.703] | : packages: [2] ‘stats’, ‘datasets’
[08:08:13.704] | getGlobalsAndPackages() ... done
[08:08:13.704] | run() for ‘Future’ (<unnamed-9>) ...
[08:08:13.704] | : state: ‘created’
[08:08:13.704] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.704] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.704] | : Using SequentialFutureBackend ...
[08:08:13.704] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:13.704] | : . Launching futures ...
[08:08:13.705] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.705] | : . ' , getFutureData() ...
[08:08:13.705] | : . ' , ; getFutureCore() ...
[08:08:13.705] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:13.705] | : . ' , ; getFutureCore() ... done
[08:08:13.705] | : . ' , ; getFutureCapture() ...
[08:08:13.705] | : . ' , ; getFutureCapture() ... done
[08:08:13.705] | : . ' , ; getFutureContext() ...
[08:08:13.705] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.705] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.706] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.706] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.706] | : . ' , ; getFutureContext() ... done
[08:08:13.706] | : . ' , getFutureData() ... done
[08:08:13.708] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.708] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.708] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.708] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.709] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.709] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.709] | : . ' , ; ` | New stack:
[08:08:13.709] | : . ' , ; ` | List of 1
[08:08:13.709] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.709] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.709] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.709] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.709] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.709] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.709] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.709] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.711] | : . ' , ; ` | Old stack:
[08:08:13.711] | : . ' , ; ` | List of 1
[08:08:13.711] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.711] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.711] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.711] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.711] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.711] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.714] | : . ' , ; ` | Not identical
[08:08:13.715] | : . ' , ; ` | all.equal() for future ...
[08:08:13.715] | : . ' , ; ` | : List of 2
[08:08:13.715] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.715] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.715] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.715] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.715] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.715] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.715] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.720] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.720] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.720] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.720] | : . ' , ; ` List of future strategies:
[08:08:13.720] | : . ' , ; ` 1. sequential:
[08:08:13.720] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.720] | : . ' , ; `    - tweaked: FALSE
[08:08:13.720] | : . ' , ; `    - call: plan(sequential)
[08:08:13.720] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.720] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.722] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.723] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.723] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.723] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.723] | : . ' , ; ` | : New stack:
[08:08:13.723] | : . ' , ; ` | : List of 1
[08:08:13.723] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.723] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.723] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.723] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.723] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.723] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.727] | : . ' , ; ` | : Old stack:
[08:08:13.727] | : . ' , ; ` | : List of 1
[08:08:13.727] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.727] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.727] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.727] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.727] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.727] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.730] | : . ' , ; ` | : Identical
[08:08:13.730] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.730] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.730] | : . ' , ; ` | List of future strategies:
[08:08:13.730] | : . ' , ; ` | 1. sequential:
[08:08:13.730] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.730] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.730] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.731] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.731] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.731] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.731] | : . ' , SequentialFuture started (and completed)
[08:08:13.731] | : . ' , signalConditions() ...
[08:08:13.732] | : . ' , ; include = ‘immediateCondition’
[08:08:13.732] | : . ' , ; exclude = 
[08:08:13.732] | : . ' , ; resignal = FALSE
[08:08:13.732] | : . ' , ; Number of conditions: 6
[08:08:13.732] | : . ' , ;  int 6
[08:08:13.732] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.732] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.733] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.733] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.733] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.733] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.733] | : . ' , signalConditions() ... done
[08:08:13.733] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.733] | : . Launching futures ... done
[08:08:13.733] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.733] | : Using SequentialFutureBackend ... done
[08:08:13.733] | run() for ‘Future’ (<unnamed-9>) ... done
[08:08:13.734] future(..., label = NULL) ... done
[08:08:13.734] value() for SequentialFuture (<unnamed-9>) ...
[08:08:13.734] | signalConditions() ...
[08:08:13.734] | : include = ‘immediateCondition’
[08:08:13.734] | : exclude = 
[08:08:13.734] | : resignal = FALSE
[08:08:13.734] | : Number of conditions: 6
[08:08:13.734] | :  int 6
[08:08:13.735] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.735] | signalConditions() ... done
[08:08:13.735] | relay stdout ...
[08:08:13.736] | relay stdout ... done
[08:08:13.736] | check for misuse ...
[08:08:13.736] | check for misuse ... done
[08:08:13.736] | relay conditions ...
[08:08:13.736] | : Future state: ‘finished’
[08:08:13.736] | : signalConditions() ...
[08:08:13.736] | : . include = ‘condition’
[08:08:13.736] | : . exclude = ‘immediateCondition’
[08:08:13.736] | : . resignal = TRUE
[08:08:13.736] | : . Number of conditions: 6
[08:08:13.736] | : .  int 6
[08:08:13.737] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.737] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.706] | : . ' , attachPackages() ...
[08:08:13.737] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.737] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.706] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.737] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.737] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.707] | : . ' , attachPackages() ... done
[08:08:13.738] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.738] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.707] | : . ' , attachPackages() ...
[08:08:13.738] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.738] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.707] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:13.738] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.738] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.708] | : . ' , attachPackages() ... done
[08:08:13.738] | : signalConditions() ... done
[08:08:13.738] | relay conditions ... done
[08:08:13.738] value() for SequentialFuture (<unnamed-9>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:13.741] future(..., label = NULL) ...
[08:08:13.741] | lazy: FALSE
[08:08:13.741] | stdout: TRUE
[08:08:13.741] | conditions: [n=1] ‘condition’
[08:08:13.741] | gc: FALSE
[08:08:13.741] | earlySignal: FALSE
[08:08:13.741] | getGlobalsAndPackages() ...
[08:08:13.741] | : Searching for globals ...
[08:08:13.758] | : . globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:13.758] | : Searching for globals ... done
[08:08:13.758] | : Resolving globals: FALSE
[08:08:13.759] | : Search for packages associated with the globals ...
[08:08:13.759] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.759] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.759] | : Search for packages associated with the globals ... done
[08:08:13.759] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:13.759] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:13.760] | : globals: [0] 
[08:08:13.760] | : packages: [2] ‘stats’, ‘datasets’
[08:08:13.760] | getGlobalsAndPackages() ... done
[08:08:13.760] | run() for ‘Future’ (<unnamed-10>) ...
[08:08:13.760] | : state: ‘created’
[08:08:13.760] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.760] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.760] | : Using SequentialFutureBackend ...
[08:08:13.761] | : . Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:13.761] | : . Launching futures ...
[08:08:13.761] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.761] | : . ' , getFutureData() ...
[08:08:13.761] | : . ' , ; getFutureCore() ...
[08:08:13.761] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:13.761] | : . ' , ; getFutureCore() ... done
[08:08:13.761] | : . ' , ; getFutureCapture() ...
[08:08:13.761] | : . ' , ; getFutureCapture() ... done
[08:08:13.762] | : . ' , ; getFutureContext() ...
[08:08:13.762] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.762] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.762] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.762] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.762] | : . ' , ; getFutureContext() ... done
[08:08:13.762] | : . ' , getFutureData() ... done
[08:08:13.763] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.764] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.764] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.764] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.764] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.764] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.764] | : . ' , ; ` | New stack:
[08:08:13.764] | : . ' , ; ` | List of 1
[08:08:13.764] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.764] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.764] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.764] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.764] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.764] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.764] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.764] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.767] | : . ' , ; ` | Old stack:
[08:08:13.767] | : . ' , ; ` | List of 1
[08:08:13.767] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.767] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.767] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.767] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.767] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.767] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.770] | : . ' , ; ` | Not identical
[08:08:13.770] | : . ' , ; ` | all.equal() for future ...
[08:08:13.770] | : . ' , ; ` | : List of 2
[08:08:13.770] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.770] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.770] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.770] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.770] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.770] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.770] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.776] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.776] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.776] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.776] | : . ' , ; ` List of future strategies:
[08:08:13.776] | : . ' , ; ` 1. sequential:
[08:08:13.776] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.776] | : . ' , ; `    - tweaked: FALSE
[08:08:13.776] | : . ' , ; `    - call: plan(sequential)
[08:08:13.777] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.777] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.779] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.779] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.779] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.779] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.779] | : . ' , ; ` | : New stack:
[08:08:13.780] | : . ' , ; ` | : List of 1
[08:08:13.780] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.780] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.780] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.780] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.780] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.780] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.783] | : . ' , ; ` | : Old stack:
[08:08:13.783] | : . ' , ; ` | : List of 1
[08:08:13.783] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.783] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.783] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.783] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.783] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.783] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.786] | : . ' , ; ` | : Identical
[08:08:13.786] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.786] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.786] | : . ' , ; ` | List of future strategies:
[08:08:13.786] | : . ' , ; ` | 1. sequential:
[08:08:13.786] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.786] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.786] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.787] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.787] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.787] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.787] | : . ' , SequentialFuture started (and completed)
[08:08:13.787] | : . ' , signalConditions() ...
[08:08:13.787] | : . ' , ; include = ‘immediateCondition’
[08:08:13.787] | : . ' , ; exclude = 
[08:08:13.788] | : . ' , ; resignal = FALSE
[08:08:13.788] | : . ' , ; Number of conditions: 6
[08:08:13.788] | : . ' , ;  int 6
[08:08:13.788] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.788] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.788] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.789] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.789] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.789] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.789] | : . ' , signalConditions() ... done
[08:08:13.789] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.789] | : . Launching futures ... done
[08:08:13.789] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.789] | : Using SequentialFutureBackend ... done
[08:08:13.789] | run() for ‘Future’ (<unnamed-10>) ... done
[08:08:13.789] future(..., label = NULL) ... done
[08:08:13.790] value() for SequentialFuture (<unnamed-10>) ...
[08:08:13.790] | signalConditions() ...
[08:08:13.790] | : include = ‘immediateCondition’
[08:08:13.790] | : exclude = 
[08:08:13.790] | : resignal = FALSE
[08:08:13.790] | : Number of conditions: 6
[08:08:13.790] | :  int 6
[08:08:13.792] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.792] | signalConditions() ... done
[08:08:13.793] | relay stdout ...
[08:08:13.793] | relay stdout ... done
[08:08:13.793] | check for misuse ...
[08:08:13.793] | check for misuse ... done
[08:08:13.793] | relay conditions ...
[08:08:13.793] | : Future state: ‘finished’
[08:08:13.793] | : signalConditions() ...
[08:08:13.793] | : . include = ‘condition’
[08:08:13.793] | : . exclude = ‘immediateCondition’
[08:08:13.794] | : . resignal = TRUE
[08:08:13.794] | : . Number of conditions: 6
[08:08:13.794] | : .  int 6
[08:08:13.794] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.794] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.762] | : . ' , attachPackages() ...
[08:08:13.794] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.795] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.763] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.795] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.795] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.763] | : . ' , attachPackages() ... done
[08:08:13.795] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.795] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.763] | : . ' , attachPackages() ...
[08:08:13.795] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.795] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.763] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:13.795] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.795] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.763] | : . ' , attachPackages() ... done
[08:08:13.796] | : signalConditions() ... done
[08:08:13.796] | relay conditions ... done
[08:08:13.796] value() for SequentialFuture (<unnamed-10>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:13.798] future(..., label = NULL) ...
[08:08:13.798] | lazy: FALSE
[08:08:13.798] | stdout: TRUE
[08:08:13.798] | conditions: [n=1] ‘condition’
[08:08:13.799] | gc: FALSE
[08:08:13.799] | earlySignal: FALSE
[08:08:13.799] | getGlobalsAndPackages() ...
[08:08:13.799] | : Searching for globals ...
[08:08:13.817] | : . globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:13.817] | : Searching for globals ... done
[08:08:13.817] | : Resolving globals: FALSE
[08:08:13.818] | : Search for packages associated with the globals ...
[08:08:13.818] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.818] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.818] | : Search for packages associated with the globals ... done
[08:08:13.818] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:13.819] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:13.819] | : globals: [0] 
[08:08:13.819] | : packages: [2] ‘stats’, ‘datasets’
[08:08:13.819] | getGlobalsAndPackages() ... done
[08:08:13.819] | run() for ‘Future’ (<unnamed-11>) ...
[08:08:13.819] | : state: ‘created’
[08:08:13.819] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.819] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.820] | : Using SequentialFutureBackend ...
[08:08:13.820] | : . Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:13.820] | : . Launching futures ...
[08:08:13.820] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.820] | : . ' , getFutureData() ...
[08:08:13.820] | : . ' , ; getFutureCore() ...
[08:08:13.820] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:13.820] | : . ' , ; getFutureCore() ... done
[08:08:13.820] | : . ' , ; getFutureCapture() ...
[08:08:13.821] | : . ' , ; getFutureCapture() ... done
[08:08:13.821] | : . ' , ; getFutureContext() ...
[08:08:13.821] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.821] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.821] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.821] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.821] | : . ' , ; getFutureContext() ... done
[08:08:13.822] | : . ' , getFutureData() ... done
[08:08:13.823] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.824] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.824] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.824] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.824] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.824] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.824] | : . ' , ; ` | New stack:
[08:08:13.824] | : . ' , ; ` | List of 1
[08:08:13.824] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.824] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.824] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.824] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.824] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.824] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.824] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.824] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.827] | : . ' , ; ` | Old stack:
[08:08:13.827] | : . ' , ; ` | List of 1
[08:08:13.827] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.827] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.827] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.827] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.827] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.827] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.830] | : . ' , ; ` | Not identical
[08:08:13.830] | : . ' , ; ` | all.equal() for future ...
[08:08:13.830] | : . ' , ; ` | : List of 2
[08:08:13.830] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.830] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.830] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.830] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.830] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.830] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.830] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.835] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.835] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.836] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.836] | : . ' , ; ` List of future strategies:
[08:08:13.836] | : . ' , ; ` 1. sequential:
[08:08:13.836] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.836] | : . ' , ; `    - tweaked: FALSE
[08:08:13.836] | : . ' , ; `    - call: plan(sequential)
[08:08:13.836] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.836] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.838] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.838] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.839] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.840] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.840] | : . ' , ; ` | : New stack:
[08:08:13.840] | : . ' , ; ` | : List of 1
[08:08:13.840] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.840] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.840] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.840] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.840] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.840] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.843] | : . ' , ; ` | : Old stack:
[08:08:13.843] | : . ' , ; ` | : List of 1
[08:08:13.843] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.843] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.843] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.843] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.843] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.843] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.846] | : . ' , ; ` | : Identical
[08:08:13.846] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.846] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.846] | : . ' , ; ` | List of future strategies:
[08:08:13.846] | : . ' , ; ` | 1. sequential:
[08:08:13.846] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.846] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.846] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.847] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.847] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.847] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.847] | : . ' , SequentialFuture started (and completed)
[08:08:13.847] | : . ' , signalConditions() ...
[08:08:13.848] | : . ' , ; include = ‘immediateCondition’
[08:08:13.848] | : . ' , ; exclude = 
[08:08:13.848] | : . ' , ; resignal = FALSE
[08:08:13.848] | : . ' , ; Number of conditions: 6
[08:08:13.848] | : . ' , ;  int 6
[08:08:13.848] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.848] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.849] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.849] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.849] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.849] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.849] | : . ' , signalConditions() ... done
[08:08:13.849] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.849] | : . Launching futures ... done
[08:08:13.849] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.849] | : Using SequentialFutureBackend ... done
[08:08:13.849] | run() for ‘Future’ (<unnamed-11>) ... done
[08:08:13.850] future(..., label = NULL) ... done
[08:08:13.850] value() for SequentialFuture (<unnamed-11>) ...
[08:08:13.850] | signalConditions() ...
[08:08:13.850] | : include = ‘immediateCondition’
[08:08:13.850] | : exclude = 
[08:08:13.850] | : resignal = FALSE
[08:08:13.850] | : Number of conditions: 6
[08:08:13.850] | :  int 6
[08:08:13.851] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.851] | signalConditions() ... done
[08:08:13.851] | relay stdout ...
[08:08:13.851] | relay stdout ... done
[08:08:13.852] | check for misuse ...
[08:08:13.852] | check for misuse ... done
[08:08:13.852] | relay conditions ...
[08:08:13.852] | : Future state: ‘finished’
[08:08:13.852] | : signalConditions() ...
[08:08:13.852] | : . include = ‘condition’
[08:08:13.852] | : . exclude = ‘immediateCondition’
[08:08:13.852] | : . resignal = TRUE
[08:08:13.852] | : . Number of conditions: 6
[08:08:13.852] | : .  int 6
[08:08:13.853] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.853] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.822] | : . ' , attachPackages() ...
[08:08:13.853] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.853] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.822] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.853] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.853] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.823] | : . ' , attachPackages() ... done
[08:08:13.853] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.854] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.823] | : . ' , attachPackages() ...
[08:08:13.854] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.854] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.823] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:13.854] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.854] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.823] | : . ' , attachPackages() ... done
[08:08:13.854] | : signalConditions() ... done
[08:08:13.854] | relay conditions ... done
[08:08:13.854] value() for SequentialFuture (<unnamed-11>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:13.858] future(..., label = NULL) ...
[08:08:13.858] | lazy: FALSE
[08:08:13.858] | stdout: TRUE
[08:08:13.859] | conditions: [n=1] ‘condition’
[08:08:13.859] | gc: FALSE
[08:08:13.859] | earlySignal: FALSE
[08:08:13.859] | getGlobalsAndPackages() ...
[08:08:13.859] | : Searching for globals ...
[08:08:13.872] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:13.872] | : Searching for globals ... done
[08:08:13.872] | : Resolving globals: FALSE
[08:08:13.872] | : Search for packages associated with the globals ...
[08:08:13.872] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.872] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:13.873] | : Search for packages associated with the globals ... done
[08:08:13.873] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:13.873] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:13.873] | : globals: [0] 
[08:08:13.873] | : packages: [2] ‘stats’, ‘datasets’
[08:08:13.873] | getGlobalsAndPackages() ... done
[08:08:13.873] | run() for ‘Future’ (<unnamed-12>) ...
[08:08:13.874] | : state: ‘created’
[08:08:13.874] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.874] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.874] | : Using SequentialFutureBackend ...
[08:08:13.874] | : . Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:13.874] | : . Launching futures ...
[08:08:13.874] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.874] | : . ' , getFutureData() ...
[08:08:13.874] | : . ' , ; getFutureCore() ...
[08:08:13.874] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:13.875] | : . ' , ; getFutureCore() ... done
[08:08:13.875] | : . ' , ; getFutureCapture() ...
[08:08:13.875] | : . ' , ; getFutureCapture() ... done
[08:08:13.875] | : . ' , ; getFutureContext() ...
[08:08:13.875] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.875] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.875] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.875] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.875] | : . ' , ; getFutureContext() ... done
[08:08:13.876] | : . ' , getFutureData() ... done
[08:08:13.877] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.877] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.877] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.877] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.877] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.878] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.878] | : . ' , ; ` | New stack:
[08:08:13.878] | : . ' , ; ` | List of 1
[08:08:13.878] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.878] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.878] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.878] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.878] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.878] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.878] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.878] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.880] | : . ' , ; ` | Old stack:
[08:08:13.880] | : . ' , ; ` | List of 1
[08:08:13.880] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.880] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.880] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.880] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.880] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.880] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.883] | : . ' , ; ` | Not identical
[08:08:13.883] | : . ' , ; ` | all.equal() for future ...
[08:08:13.883] | : . ' , ; ` | : List of 2
[08:08:13.883] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.883] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.883] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.883] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.883] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.883] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.883] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.890] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.890] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.891] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.891] | : . ' , ; ` List of future strategies:
[08:08:13.891] | : . ' , ; ` 1. sequential:
[08:08:13.891] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.891] | : . ' , ; `    - tweaked: FALSE
[08:08:13.891] | : . ' , ; `    - call: plan(sequential)
[08:08:13.891] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.891] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.893] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.894] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.894] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.894] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.894] | : . ' , ; ` | : New stack:
[08:08:13.894] | : . ' , ; ` | : List of 1
[08:08:13.894] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.894] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.894] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.894] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.894] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.894] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.897] | : . ' , ; ` | : Old stack:
[08:08:13.897] | : . ' , ; ` | : List of 1
[08:08:13.897] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.897] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.897] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.897] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.897] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.897] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.900] | : . ' , ; ` | : Identical
[08:08:13.900] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.901] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.901] | : . ' , ; ` | List of future strategies:
[08:08:13.901] | : . ' , ; ` | 1. sequential:
[08:08:13.901] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.901] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.901] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.901] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.901] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.901] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.902] | : . ' , SequentialFuture started (and completed)
[08:08:13.902] | : . ' , signalConditions() ...
[08:08:13.902] | : . ' , ; include = ‘immediateCondition’
[08:08:13.902] | : . ' , ; exclude = 
[08:08:13.902] | : . ' , ; resignal = FALSE
[08:08:13.902] | : . ' , ; Number of conditions: 6
[08:08:13.902] | : . ' , ;  int 6
[08:08:13.903] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.903] | : . ' , signalConditions() ... done
[08:08:13.903] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.903] | : . Launching futures ... done
[08:08:13.904] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.904] | : Using SequentialFutureBackend ... done
[08:08:13.904] | run() for ‘Future’ (<unnamed-12>) ... done
[08:08:13.904] future(..., label = NULL) ... done
[08:08:13.904] value() for SequentialFuture (<unnamed-12>) ...
[08:08:13.904] | signalConditions() ...
[08:08:13.904] | : include = ‘immediateCondition’
[08:08:13.904] | : exclude = 
[08:08:13.904] | : resignal = FALSE
[08:08:13.904] | : Number of conditions: 6
[08:08:13.905] | :  int 6
[08:08:13.905] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.905] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.905] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.905] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.905] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.905] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.906] | signalConditions() ... done
[08:08:13.906] | relay stdout ...
[08:08:13.906] | relay stdout ... done
[08:08:13.906] | check for misuse ...
[08:08:13.906] | check for misuse ... done
[08:08:13.907] | relay conditions ...
[08:08:13.907] | : Future state: ‘finished’
[08:08:13.907] | : signalConditions() ...
[08:08:13.907] | : . include = ‘condition’
[08:08:13.907] | : . exclude = ‘immediateCondition’
[08:08:13.907] | : . resignal = TRUE
[08:08:13.908] | : . Number of conditions: 6
[08:08:13.908] | : .  int 6
[08:08:13.908] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.908] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , attachPackages() ...
[08:08:13.908] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.908] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.909] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.909] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , attachPackages() ... done
[08:08:13.909] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.909] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , attachPackages() ...
[08:08:13.909] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.909] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:13.909] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.909] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.876] | : . ' , attachPackages() ... done
[08:08:13.910] | : signalConditions() ... done
[08:08:13.910] | relay conditions ... done
[08:08:13.910] value() for SequentialFuture (<unnamed-12>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:13.911] future(..., label = NULL) ...
[08:08:13.912] | lazy: FALSE
[08:08:13.912] | stdout: TRUE
[08:08:13.912] | conditions: [n=1] ‘condition’
[08:08:13.912] | gc: FALSE
[08:08:13.912] | earlySignal: FALSE
[08:08:13.912] | getGlobalsAndPackages() ...
[08:08:13.912] | : Searching for globals ...
[08:08:13.945] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:13.945] | : Searching for globals ... done
[08:08:13.945] | : Resolving globals: FALSE
[08:08:13.945] | : Search for packages associated with the globals ...
[08:08:13.946] | : . Packages associated with globals: [1] ‘base’
[08:08:13.946] | : . Packages: [1] ‘base’
[08:08:13.946] | : Search for packages associated with the globals ... done
[08:08:13.946] | : Packages after dropping 'base': [0] 
[08:08:13.947] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:13.947] | : packages: [0] 
[08:08:13.947] | getGlobalsAndPackages() ... done
[08:08:13.947] | run() for ‘Future’ (<unnamed-13>) ...
[08:08:13.947] | : state: ‘created’
[08:08:13.947] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.947] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.947] | : Using SequentialFutureBackend ...
[08:08:13.947] | : . Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:13.948] | : . Launching futures ...
[08:08:13.948] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:13.948] | : . ' , getFutureData() ...
[08:08:13.948] | : . ' , ; getFutureCore() ...
[08:08:13.948] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:13.948] | : . ' , ; getFutureCore() ... done
[08:08:13.948] | : . ' , ; getFutureCapture() ...
[08:08:13.948] | : . ' , ; getFutureCapture() ... done
[08:08:13.948] | : . ' , ; getFutureContext() ...
[08:08:13.949] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.949] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:13.949] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.949] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:13.949] | : . ' , ; getFutureContext() ... done
[08:08:13.949] | : . ' , getFutureData() ... done
[08:08:13.950] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:13.950] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:13.951] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:13.951] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.951] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.951] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:13.951] | : . ' , ; ` | New stack:
[08:08:13.951] | : . ' , ; ` | List of 1
[08:08:13.951] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.951] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.951] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:13.951] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.951] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.951] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.951] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.951] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.955] | : . ' , ; ` | Old stack:
[08:08:13.955] | : . ' , ; ` | List of 1
[08:08:13.955] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.955] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:13.955] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.955] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.955] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.955] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.958] | : . ' , ; ` | Not identical
[08:08:13.958] | : . ' , ; ` | all.equal() for future ...
[08:08:13.958] | : . ' , ; ` | : List of 2
[08:08:13.958] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.958] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:13.958] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.958] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.958] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.958] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.958] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.963] | : . ' , ; ` | all.equal() for future ... done
[08:08:13.963] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:13.963] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.963] | : . ' , ; ` List of future strategies:
[08:08:13.963] | : . ' , ; ` 1. sequential:
[08:08:13.963] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.963] | : . ' , ; `    - tweaked: FALSE
[08:08:13.963] | : . ' , ; `    - call: plan(sequential)
[08:08:13.964] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.964] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.964] | : . ' , assign_globals() ...
[08:08:13.964] | : . ' , List of 3
[08:08:13.964] | : . ' ,  $ outer_function:function (x)  
[08:08:13.964] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:13.964] | : . ' ,  $ inner_function:function (x)  
[08:08:13.964] | : . ' ,  - attr(*, "where")=List of 3
[08:08:13.964] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:13.964] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:13.964] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:13.964] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:13.964] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:13.964] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:13.964] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:13.967] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:13.967] | : . ' , - copied ‘outer_function’ to environment
[08:08:13.968] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:13.968] | : . ' , - copied ‘map’ to environment
[08:08:13.968] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:13.968] | : . ' , - copied ‘inner_function’ to environment
[08:08:13.968] | : . ' , assign_globals() ... done
[08:08:13.975] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.975] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:13.975] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:13.975] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:13.975] | : . ' , ; ` | : New stack:
[08:08:13.975] | : . ' , ; ` | : List of 1
[08:08:13.975] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.975] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.975] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.975] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.975] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.975] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.978] | : . ' , ; ` | : Old stack:
[08:08:13.978] | : . ' , ; ` | : List of 1
[08:08:13.978] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.978] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:13.978] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:13.978] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:13.978] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:13.978] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:13.981] | : . ' , ; ` | : Identical
[08:08:13.981] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:13.982] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:13.982] | : . ' , ; ` | List of future strategies:
[08:08:13.982] | : . ' , ; ` | 1. sequential:
[08:08:13.982] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:13.982] | : . ' , ; ` |    - tweaked: FALSE
[08:08:13.982] | : . ' , ; ` |    - call: plan(sequential)
[08:08:13.982] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:13.982] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.982] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:13.983] | : . ' , SequentialFuture started (and completed)
[08:08:13.983] | : . ' , signalConditions() ...
[08:08:13.983] | : . ' , ; include = ‘immediateCondition’
[08:08:13.983] | : . ' , ; exclude = 
[08:08:13.983] | : . ' , ; resignal = FALSE
[08:08:13.983] | : . ' , ; Number of conditions: 6
[08:08:13.983] | : . ' , ;  int 6
[08:08:13.984] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.984] | : . ' , signalConditions() ... done
[08:08:13.984] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:13.984] | : . Launching futures ... done
[08:08:13.984] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:13.985] | : Using SequentialFutureBackend ... done
[08:08:13.985] | run() for ‘Future’ (<unnamed-13>) ... done
[08:08:13.985] future(..., label = NULL) ... done
[08:08:13.985] value() for SequentialFuture (<unnamed-13>) ...
[08:08:13.985] | signalConditions() ...
[08:08:13.985] | : include = ‘immediateCondition’
[08:08:13.985] | : exclude = 
[08:08:13.985] | : resignal = FALSE
[08:08:13.985] | : Number of conditions: 6
[08:08:13.985] | :  int 6
[08:08:13.986] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.986] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.986] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.986] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.987] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.987] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.987] | signalConditions() ... done
[08:08:13.987] | relay stdout ...
[08:08:13.987] | relay stdout ... done
[08:08:13.988] | check for misuse ...
[08:08:13.988] | check for misuse ... done
[08:08:13.988] | relay conditions ...
[08:08:13.988] | : Future state: ‘finished’
[08:08:13.988] | : signalConditions() ...
[08:08:13.988] | : . include = ‘condition’
[08:08:13.988] | : . exclude = ‘immediateCondition’
[08:08:13.988] | : . resignal = TRUE
[08:08:13.988] | : . Number of conditions: 6
[08:08:13.988] | : .  int 6
[08:08:13.989] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.989] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.949] | : . ' , attachPackages() ...
[08:08:13.989] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.989] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.949] | : . ' , ; packages: [n=1] ‘future’
[08:08:13.989] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.989] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.950] | : . ' , attachPackages() ... done
[08:08:13.990] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.990] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.950] | : . ' , attachPackages() ...
[08:08:13.990] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.990] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.950] | : . ' , ; packages: [n=0] 
[08:08:13.990] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:13.990] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:13.950] | : . ' , attachPackages() ... done
[08:08:13.990] | : signalConditions() ... done
[08:08:13.990] | relay conditions ... done
[08:08:13.990] value() for SequentialFuture (<unnamed-13>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:13.992] future(..., label = NULL) ...
[08:08:13.992] | lazy: FALSE
[08:08:13.992] | stdout: TRUE
[08:08:13.992] | conditions: [n=1] ‘condition’
[08:08:13.992] | gc: FALSE
[08:08:13.992] | earlySignal: FALSE
[08:08:13.992] | getGlobalsAndPackages() ...
[08:08:13.992] | : Searching for globals ...
[08:08:14.024] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:14.024] | : Searching for globals ... done
[08:08:14.024] | : Resolving globals: FALSE
[08:08:14.024] | : Search for packages associated with the globals ...
[08:08:14.024] | : . Packages associated with globals: [1] ‘base’
[08:08:14.025] | : . Packages: [1] ‘base’
[08:08:14.025] | : Search for packages associated with the globals ... done
[08:08:14.025] | : Packages after dropping 'base': [0] 
[08:08:14.025] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:14.025] | : packages: [0] 
[08:08:14.025] | getGlobalsAndPackages() ... done
[08:08:14.026] | run() for ‘Future’ (<unnamed-14>) ...
[08:08:14.026] | : state: ‘created’
[08:08:14.026] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.026] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.026] | : Using SequentialFutureBackend ...
[08:08:14.026] | : . Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:14.026] | : . Launching futures ...
[08:08:14.026] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:08:14.026] | : . ' , getFutureData() ...
[08:08:14.027] | : . ' , ; getFutureCore() ...
[08:08:14.027] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:14.027] | : . ' , ; getFutureCore() ... done
[08:08:14.027] | : . ' , ; getFutureCapture() ...
[08:08:14.027] | : . ' , ; getFutureCapture() ... done
[08:08:14.027] | : . ' , ; getFutureContext() ...
[08:08:14.027] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.027] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.027] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.027] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.028] | : . ' , ; getFutureContext() ... done
[08:08:14.028] | : . ' , getFutureData() ... done
[08:08:14.029] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.029] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:14.029] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.029] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.029] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.030] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.030] | : . ' , ; ` | New stack:
[08:08:14.030] | : . ' , ; ` | List of 1
[08:08:14.030] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.030] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.030] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.030] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.030] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.030] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.030] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.030] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.033] | : . ' , ; ` | Old stack:
[08:08:14.033] | : . ' , ; ` | List of 1
[08:08:14.033] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.033] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:08:14.033] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.033] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.033] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.033] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.036] | : . ' , ; ` | Not identical
[08:08:14.036] | : . ' , ; ` | all.equal() for future ...
[08:08:14.036] | : . ' , ; ` | : List of 2
[08:08:14.036] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.036] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.036] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.036] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:14.036] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.036] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.036] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.041] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.041] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.041] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:14.042] | : . ' , ; ` List of future strategies:
[08:08:14.042] | : . ' , ; ` 1. sequential:
[08:08:14.042] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.042] | : . ' , ; `    - tweaked: FALSE
[08:08:14.042] | : . ' , ; `    - call: plan(sequential)
[08:08:14.042] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.042] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.042] | : . ' , assign_globals() ...
[08:08:14.042] | : . ' , List of 3
[08:08:14.042] | : . ' ,  $ outer_function:function (x)  
[08:08:14.042] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:14.042] | : . ' ,  $ inner_function:function (x)  
[08:08:14.042] | : . ' ,  - attr(*, "where")=List of 3
[08:08:14.042] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:14.042] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:14.042] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:14.042] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.042] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.042] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.042] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.046] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:14.046] | : . ' , - copied ‘outer_function’ to environment
[08:08:14.046] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:14.046] | : . ' , - copied ‘map’ to environment
[08:08:14.046] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:14.046] | : . ' , - copied ‘inner_function’ to environment
[08:08:14.047] | : . ' , assign_globals() ... done
[08:08:14.049] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.049] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.049] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.049] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.049] | : . ' , ; ` | : New stack:
[08:08:14.049] | : . ' , ; ` | : List of 1
[08:08:14.049] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.049] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:14.049] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.049] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.049] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.049] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.053] | : . ' , ; ` | : Old stack:
[08:08:14.053] | : . ' , ; ` | : List of 1
[08:08:14.053] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.053] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:08:14.053] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.053] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.053] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.053] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.056] | : . ' , ; ` | : Identical
[08:08:14.056] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.056] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:08:14.056] | : . ' , ; ` | List of future strategies:
[08:08:14.056] | : . ' , ; ` | 1. sequential:
[08:08:14.056] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.056] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.056] | : . ' , ; ` |    - call: plan(sequential)
[08:08:14.057] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.057] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.057] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.057] | : . ' , SequentialFuture started (and completed)
[08:08:14.057] | : . ' , signalConditions() ...
[08:08:14.057] | : . ' , ; include = ‘immediateCondition’
[08:08:14.058] | : . ' , ; exclude = 
[08:08:14.058] | : . ' , ; resignal = FALSE
[08:08:14.058] | : . ' , ; Number of conditions: 6
[08:08:14.058] | : . ' , ;  int 6
[08:08:14.058] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.058] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.058] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.059] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.059] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.059] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.059] | : . ' , signalConditions() ... done
[08:08:14.059] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:08:14.059] | : . Launching futures ... done
[08:08:14.059] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:08:14.059] | : Using SequentialFutureBackend ... done
[08:08:14.059] | run() for ‘Future’ (<unnamed-14>) ... done
[08:08:14.059] future(..., label = NULL) ... done
[08:08:14.060] value() for SequentialFuture (<unnamed-14>) ...
[08:08:14.060] | signalConditions() ...
[08:08:14.060] | : include = ‘immediateCondition’
[08:08:14.060] | : exclude = 
[08:08:14.060] | : resignal = FALSE
[08:08:14.060] | : Number of conditions: 6
[08:08:14.060] | :  int 6
[08:08:14.061] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.061] | signalConditions() ... done
[08:08:14.061] | relay stdout ...
[08:08:14.061] | relay stdout ... done
[08:08:14.061] | check for misuse ...
[08:08:14.062] | check for misuse ... done
[08:08:14.062] | relay conditions ...
[08:08:14.062] | : Future state: ‘finished’
[08:08:14.062] | : signalConditions() ...
[08:08:14.062] | : . include = ‘condition’
[08:08:14.062] | : . exclude = ‘immediateCondition’
[08:08:14.062] | : . resignal = TRUE
[08:08:14.062] | : . Number of conditions: 6
[08:08:14.062] | : .  int 6
[08:08:14.063] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.063] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.028] | : . ' , attachPackages() ...
[08:08:14.063] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.063] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.028] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.063] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.063] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.028] | : . ' , attachPackages() ... done
[08:08:14.063] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.064] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.028] | : . ' , attachPackages() ...
[08:08:14.064] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.064] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.028] | : . ' , ; packages: [n=0] 
[08:08:14.065] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.065] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.029] | : . ' , attachPackages() ... done
[08:08:14.065] | : signalConditions() ... done
[08:08:14.065] | relay conditions ... done
[08:08:14.065] value() for SequentialFuture (<unnamed-14>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 1 cores ... DONE
Testing with 2 cores ...
availableCores(): 2
- plan('multicore') ...
[08:08:14.068] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.068] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:14.068] | : all.equal() for FutureStrategyList ...
[08:08:14.069] | : . New stack:
[08:08:14.069] | : . List of 1
[08:08:14.069] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.069] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.069] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.069] | : .   ..- attr(*, "init")= logi TRUE
[08:08:14.069] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.069] | : .     ...)  
[08:08:14.069] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.069] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.069] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.069] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.071] | : . Old stack:
[08:08:14.071] | : . List of 1
[08:08:14.071] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.071] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.071] | : .   ..- attr(*, "init")= chr "done"
[08:08:14.071] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.071] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.071] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.071] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:14.071] | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.071] | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.071] | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.071] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.074] | : . Not identical
[08:08:14.074] | : . all.equal() for future ...
[08:08:14.074] | : . ' List of 2
[08:08:14.074] | : . '  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.074] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.074] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.074] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:14.074] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.074] | : . '     ...)  
[08:08:14.074] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.074] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.074] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:14.074] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.074] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.074] | : . '   ..- attr(*, "init")= chr "done"
[08:08:14.074] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.074] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.074] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.074] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:14.074] | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0644d90> 
[08:08:14.074] | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.074] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.079] | : . ' Formals differ
[08:08:14.079] | : . all.equal() for future ... done
[08:08:14.079] | : . Future strategies differ at level 1
[08:08:14.080] | : all.equal() for FutureStrategyList ... done
[08:08:14.080] | : plan(): Setting new future backend stack:
[08:08:14.080] | : List of future strategies:
[08:08:14.080] | : 1. multicore:
[08:08:14.080] | :    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.080] | :    - tweaked: FALSE
[08:08:14.080] | :    - call: plan(strategy)
[08:08:14.080] | : List of 1
[08:08:14.080] | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.080] | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.080] | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.080] | :   ..- attr(*, "init")= logi TRUE
[08:08:14.080] | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.080] | :     ...)  
[08:08:14.080] | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.080] | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.080] | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.080] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.084] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:14.084] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.084] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:14.084] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.084] | : . Legacy shutdown of cluster workers ...
[08:08:14.085] | : . ' Stopping existing cluster ...
[08:08:14.085] | : . ' , No pre-existing cluster. Skipping
[08:08:14.085] | : . ' Stopping existing cluster ... done
[08:08:14.085] | : . Legacy shutdown of cluster workers ... done
[08:08:14.085] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:14.085] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:14.085] | : . function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.085] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.085] | : .  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.085] | : .  - attr(*, "init")= logi TRUE
[08:08:14.085] | : .  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.085] | : .     ...)  
[08:08:14.085] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.085] | : .  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.085] | : .  - attr(*, "call")= language plan(strategy)
[08:08:14.087] | : . init: TRUE
[08:08:14.088] | : . makeFutureBackend(<multicore>) ...
[08:08:14.088] | : . ' Backend function: <‘NULL’>
[08:08:14.088] | : . ' Evaluator tweak arguments: [n=0]
[08:08:14.088] | : . '  list()
[08:08:14.088] | : . ' Evaluator formal arguments: [n=3]
[08:08:14.088] | : . '  list()
[08:08:14.088] | : . ' Backend factory arguments: [n=3]
[08:08:14.089] | : . ' Dotted pair list of 3
[08:08:14.089] | : . '  $ workers    : language availableCores(constraints = "multicore")
[08:08:14.089] | : . '  $ gc         : logi FALSE
[08:08:14.089] | : . '  $ earlySignal: logi FALSE
[08:08:14.091] | : . ' Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.092] | : . makeFutureBackend(<multicore>) ... done
[08:08:14.092] | : plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:14.092] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.092] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.092] | : plan(): nbrOfWorkers() = 2
[08:08:14.092] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:14.092] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
- lm(<formula>) ...
[08:08:14.093] future(..., label = NULL) ...
[08:08:14.093] | lazy: FALSE
[08:08:14.093] | stdout: TRUE
[08:08:14.093] | conditions: [n=1] ‘condition’
[08:08:14.093] | gc: FALSE
[08:08:14.093] | earlySignal: FALSE
[08:08:14.093] | getGlobalsAndPackages() ...
[08:08:14.093] | : Searching for globals ...
[08:08:14.106] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:14.106] | : Searching for globals ... done
[08:08:14.106] | : Resolving globals: FALSE
[08:08:14.106] | : Search for packages associated with the globals ...
[08:08:14.106] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.106] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.107] | : Search for packages associated with the globals ... done
[08:08:14.107] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.107] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.107] | : globals: [2] ‘weight’, ‘group’
[08:08:14.107] | : packages: [1] ‘stats’
[08:08:14.107] | getGlobalsAndPackages() ... done
[08:08:14.107] | run() for ‘Future’ (<unnamed-15>) ...
[08:08:14.108] | : state: ‘created’
[08:08:14.108] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.108] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.108] | : Using MulticoreFutureBackend ...
[08:08:14.108] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:14.108] | : . Launching futures ...
[08:08:14.108] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.108] | : . ' , getFutureData() ...
[08:08:14.109] | : . ' , ; getFutureCore() ...
[08:08:14.109] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.109] | : . ' , ; getFutureCore() ... done
[08:08:14.109] | : . ' , ; getFutureCapture() ...
[08:08:14.109] | : . ' , ; getFutureCapture() ... done
[08:08:14.109] | : . ' , ; getFutureContext() ...
[08:08:14.109] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.109] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.109] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.109] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.110] | : . ' , ; getFutureContext() ... done
[08:08:14.110] | : . ' , getFutureData() ... done
[08:08:14.110] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.111] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.113] | : . ' , MulticoreFuture started
[08:08:14.114] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.114] | : . Launching futures ... done
[08:08:14.114] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.115] | : Using MulticoreFutureBackend ... done
[08:08:14.115] | run() for ‘Future’ (<unnamed-15>) ... done
[08:08:14.115] future(..., label = NULL) ... done
[08:08:14.115] value() for MulticoreFuture (<unnamed-15>) ...
[08:08:14.117] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.117] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.117] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.117] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.118] | result() for MulticoreFuture ...
[08:08:14.118] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.118] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.118] | : . ' , ; ` | New stack:
[08:08:14.118] | : . ' , ; ` | List of 1
[08:08:14.118] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.118] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.118] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.118] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.118] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.118] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.118] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.118] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.126] | : . ' , ; ` | Old stack:
[08:08:14.127] | : . ' , ; ` | List of 1
[08:08:14.127] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.127] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.127] | : . ' , ; ` |     ...)  
[08:08:14.127] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.127] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.127] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.127] | : . ' , ; ` |     ...)  
[08:08:14.127] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.127] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.134] | : . ' , ; ` | Not identical
[08:08:14.134] | : . ' , ; ` | all.equal() for future ...
[08:08:14.134] | : . ' , ; ` | : List of 2
[08:08:14.134] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.134] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.134] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.134] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.134] | : . ' , ; ` | :     ...)  
[08:08:14.134] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.134] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.134] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.134] | : . ' , ; ` | :     ...)  
[08:08:14.134] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.142] | : . ' , ; ` | : Formals differ
[08:08:14.142] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.142] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.142] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.143] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.143] | : . ' , ; ` List of future strategies:
[08:08:14.143] | : . ' , ; ` 1. sequential:
[08:08:14.143] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.143] | : . ' , ; `    - tweaked: FALSE
[08:08:14.143] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.144] | : . ' , ; ` List of 1
[08:08:14.144] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.144] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.144] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.144] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.144] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.144] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.144] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.144] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.147] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.147] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.147] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.147] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.147] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.147] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.147] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.147] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.147] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.147] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.147] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.149] | : . ' , ; ` | : init: TRUE
[08:08:14.149] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.150] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.150] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.150] | : . ' , ; ` | : .  list()
[08:08:14.151] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.152] | : . ' , ; ` | : .  list()
[08:08:14.152] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.152] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.152] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.152] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.153] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.153] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.154] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.154] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.154] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.154] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.154] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.154] | : . ' , assign_globals() ...
[08:08:14.154] | : . ' , List of 2
[08:08:14.154] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:14.154] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:14.154] | : . ' ,  - attr(*, "where")=List of 2
[08:08:14.154] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:14.154] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:14.154] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.154] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.154] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.154] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.158] | : . ' , - copied ‘weight’ to environment
[08:08:14.158] | : . ' , - copied ‘group’ to environment
[08:08:14.158] | : . ' , assign_globals() ... done
[08:08:14.161] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.161] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.162] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.162] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.162] | : . ' , ; ` | : New stack:
[08:08:14.162] | : . ' , ; ` | : List of 1
[08:08:14.162] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.162] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.162] | : . ' , ; ` | :     ...)  
[08:08:14.162] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.162] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.162] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.162] | : . ' , ; ` | :     ...)  
[08:08:14.162] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.162] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.166] | : . ' , ; ` | : Old stack:
[08:08:14.166] | : . ' , ; ` | : List of 1
[08:08:14.166] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.166] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.166] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0ba2740> 
[08:08:14.166] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.166] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.166] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.170] | : . ' , ; ` | : Not identical
[08:08:14.170] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.170] | : . ' , ; ` | : . List of 2
[08:08:14.170] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.170] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.170] | : . ' , ; ` | : .     ...)  
[08:08:14.170] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.170] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.170] | : . ' , ; ` | : .     ...)  
[08:08:14.170] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.170] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.170] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.170] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0ba2740> 
[08:08:14.170] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.170] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.177] | : . ' , ; ` | : . Formals differ
[08:08:14.178] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.178] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.178] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.178] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.178] | : . ' , ; ` | List of future strategies:
[08:08:14.178] | : . ' , ; ` | 1. multicore:
[08:08:14.178] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.178] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.178] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.178] | : . ' , ; ` | List of 1
[08:08:14.178] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.178] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.178] | : . ' , ; ` |     ...)  
[08:08:14.178] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.178] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.178] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.178] | : . ' , ; ` |     ...)  
[08:08:14.178] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.178] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.182] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.182] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.182] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.182] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.182] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.182] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.183] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.183] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.184] | : readImmediateCondition() ...
[08:08:14.184] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.184] | : . Number of RDS files: 0
[08:08:14.184] | : . Returned conditions set:
[08:08:14.185] | : .  list()
[08:08:14.185] | : readImmediateCondition() ... done
[08:08:14.186] | : result() for MulticoreFuture ...
[08:08:14.186] | : result() for MulticoreFuture ... done
[08:08:14.186] | : signalConditions() ...
[08:08:14.186] | : . include = ‘immediateCondition’
[08:08:14.186] | : . exclude = 
[08:08:14.186] | : . resignal = FALSE
[08:08:14.186] | : . Number of conditions: 6
[08:08:14.187] | : .  int 6
[08:08:14.187] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.187] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.188] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.188] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.188] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.190] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.190] | : signalConditions() ... done
[08:08:14.191] | result() for MulticoreFuture ... done
[08:08:14.191] | result() for MulticoreFuture ...
[08:08:14.191] | result() for MulticoreFuture ... done
[08:08:14.191] | signalConditions() ...
[08:08:14.191] | : include = ‘immediateCondition’
[08:08:14.192] | : exclude = 
[08:08:14.192] | : resignal = FALSE
[08:08:14.192] | : Number of conditions: 6
[08:08:14.192] | :  int 6
[08:08:14.193] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.193] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.194] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.194] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.194] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.194] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.195] | signalConditions() ... done
[08:08:14.195] | relay stdout ...
[08:08:14.195] | relay stdout ... done
[08:08:14.195] | check for misuse ...
[08:08:14.195] | check for misuse ... done
[08:08:14.195] | relay conditions ...
[08:08:14.196] | : Future state: ‘finished’
[08:08:14.196] | : result() for MulticoreFuture ...
[08:08:14.196] | : result() for MulticoreFuture ... done
[08:08:14.196] | : signalConditions() ...
[08:08:14.196] | : . include = ‘condition’
[08:08:14.196] | : . exclude = ‘immediateCondition’
[08:08:14.196] | : . resignal = TRUE
[08:08:14.197] | : . Number of conditions: 6
[08:08:14.197] | : .  int 6
[08:08:14.197] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.197] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.114] | : . ' , attachPackages() ...
[08:08:14.197] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.198] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.114] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.198] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.198] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.115] | : . ' , attachPackages() ... done
[08:08:14.198] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.198] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.115] | : . ' , attachPackages() ...
[08:08:14.198] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.199] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.115] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.199] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.199] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.116] | : . ' , attachPackages() ... done
[08:08:14.199] | : signalConditions() ... done
[08:08:14.199] | relay conditions ... done
[08:08:14.199] value() for MulticoreFuture (<unnamed-15>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:14.201] future(..., label = NULL) ...
[08:08:14.201] | lazy: TRUE
[08:08:14.202] | stdout: TRUE
[08:08:14.202] | conditions: [n=1] ‘condition’
[08:08:14.202] | gc: FALSE
[08:08:14.202] | earlySignal: FALSE
[08:08:14.202] | getGlobalsAndPackages() ...
[08:08:14.202] | : Searching for globals ...
[08:08:14.217] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:14.217] | : Searching for globals ... done
[08:08:14.218] | : Resolving globals: FALSE
[08:08:14.218] | : Search for packages associated with the globals ...
[08:08:14.218] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.218] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.218] | : Search for packages associated with the globals ... done
[08:08:14.219] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.219] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.219] | : globals: [2] ‘weight’, ‘group’
[08:08:14.219] | : packages: [1] ‘stats’
[08:08:14.219] | getGlobalsAndPackages() ... done
[08:08:14.219] future(..., label = NULL) ... done
[08:08:14.219] value() for Future (<unnamed-16>) ...
[08:08:14.220] | run() for ‘Future’ (<unnamed-16>) ...
[08:08:14.220] | : state: ‘created’
[08:08:14.220] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.220] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.220] | : Using MulticoreFutureBackend ...
[08:08:14.220] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:14.220] | : . Launching futures ...
[08:08:14.220] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.220] | : . ' , getFutureData() ...
[08:08:14.221] | : . ' , ; getFutureCore() ...
[08:08:14.221] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.221] | : . ' , ; getFutureCore() ... done
[08:08:14.221] | : . ' , ; getFutureCapture() ...
[08:08:14.221] | : . ' , ; getFutureCapture() ... done
[08:08:14.221] | : . ' , ; getFutureContext() ...
[08:08:14.221] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.221] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.221] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.222] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.222] | : . ' , ; getFutureContext() ... done
[08:08:14.222] | : . ' , getFutureData() ... done
[08:08:14.222] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.222] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.224] | : . ' , MulticoreFuture started
[08:08:14.225] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.225] | : . Launching futures ... done
[08:08:14.225] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.225] | : Using MulticoreFutureBackend ... done
[08:08:14.225] | run() for ‘Future’ (<unnamed-16>) ... done
[08:08:14.226] | result() for MulticoreFuture ...
[08:08:14.228] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.228] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.228] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.228] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.229] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.229] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.229] | : . ' , ; ` | New stack:
[08:08:14.229] | : . ' , ; ` | List of 1
[08:08:14.229] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.229] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.229] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.229] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.229] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.229] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.229] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.229] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.235] | : . ' , ; ` | Old stack:
[08:08:14.235] | : . ' , ; ` | List of 1
[08:08:14.235] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.235] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.235] | : . ' , ; ` |     ...)  
[08:08:14.235] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.235] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.235] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.235] | : . ' , ; ` |     ...)  
[08:08:14.235] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.235] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.246] | : . ' , ; ` | Not identical
[08:08:14.246] | : . ' , ; ` | all.equal() for future ...
[08:08:14.246] | : . ' , ; ` | : List of 2
[08:08:14.246] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.246] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.246] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.246] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.246] | : . ' , ; ` | :     ...)  
[08:08:14.246] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.246] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.246] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.246] | : . ' , ; ` | :     ...)  
[08:08:14.246] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.254] | : . ' , ; ` | : Formals differ
[08:08:14.254] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.254] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.255] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.255] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.255] | : . ' , ; ` List of future strategies:
[08:08:14.255] | : . ' , ; ` 1. sequential:
[08:08:14.255] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.255] | : . ' , ; `    - tweaked: FALSE
[08:08:14.255] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.255] | : . ' , ; ` List of 1
[08:08:14.255] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.255] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.255] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.255] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.255] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.255] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.255] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.255] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.259] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.259] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.259] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.259] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.259] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.259] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.259] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.259] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.259] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.259] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.259] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.262] | : . ' , ; ` | : init: TRUE
[08:08:14.262] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.262] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.262] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.262] | : . ' , ; ` | : .  list()
[08:08:14.262] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.263] | : . ' , ; ` | : .  list()
[08:08:14.263] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.263] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.263] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.263] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.266] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.266] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.266] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.266] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.266] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.266] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.266] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.267] | : . ' , assign_globals() ...
[08:08:14.267] | : . ' , List of 2
[08:08:14.267] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:14.267] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:14.267] | : . ' ,  - attr(*, "where")=List of 2
[08:08:14.267] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:14.267] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:14.267] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.267] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.267] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.267] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.270] | : . ' , - copied ‘weight’ to environment
[08:08:14.271] | : . ' , - copied ‘group’ to environment
[08:08:14.271] | : . ' , assign_globals() ... done
[08:08:14.274] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.274] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.274] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.274] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.274] | : . ' , ; ` | : New stack:
[08:08:14.275] | : . ' , ; ` | : List of 1
[08:08:14.275] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.275] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.275] | : . ' , ; ` | :     ...)  
[08:08:14.275] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.275] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.275] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.275] | : . ' , ; ` | :     ...)  
[08:08:14.275] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.275] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.278] | : . ' , ; ` | : Old stack:
[08:08:14.278] | : . ' , ; ` | : List of 1
[08:08:14.278] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.278] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.278] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa06d34a8> 
[08:08:14.278] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.278] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.278] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.281] | : . ' , ; ` | : Not identical
[08:08:14.281] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.281] | : . ' , ; ` | : . List of 2
[08:08:14.281] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.281] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.281] | : . ' , ; ` | : .     ...)  
[08:08:14.281] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.281] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.281] | : . ' , ; ` | : .     ...)  
[08:08:14.281] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.281] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.281] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.281] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa06d34a8> 
[08:08:14.281] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.281] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.288] | : . ' , ; ` | : . Formals differ
[08:08:14.288] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.289] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.289] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.289] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.289] | : . ' , ; ` | List of future strategies:
[08:08:14.289] | : . ' , ; ` | 1. multicore:
[08:08:14.289] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.289] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.289] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.289] | : . ' , ; ` | List of 1
[08:08:14.289] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.289] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.289] | : . ' , ; ` |     ...)  
[08:08:14.289] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.289] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.289] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.289] | : . ' , ; ` |     ...)  
[08:08:14.289] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.289] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.292] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.293] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.293] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.293] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.293] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.293] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.293] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.293] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.294] | : readImmediateCondition() ...
[08:08:14.294] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.295] | : . Number of RDS files: 0
[08:08:14.295] | : . Returned conditions set:
[08:08:14.295] | : .  list()
[08:08:14.295] | : readImmediateCondition() ... done
[08:08:14.296] | : result() for MulticoreFuture ...
[08:08:14.296] | : result() for MulticoreFuture ... done
[08:08:14.296] | : signalConditions() ...
[08:08:14.296] | : . include = ‘immediateCondition’
[08:08:14.296] | : . exclude = 
[08:08:14.297] | : . resignal = FALSE
[08:08:14.297] | : . Number of conditions: 6
[08:08:14.297] | : .  int 6
[08:08:14.297] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.298] | : signalConditions() ... done
[08:08:14.299] | result() for MulticoreFuture ... done
[08:08:14.299] | result() for MulticoreFuture ...
[08:08:14.299] | result() for MulticoreFuture ... done
[08:08:14.299] | signalConditions() ...
[08:08:14.299] | : include = ‘immediateCondition’
[08:08:14.299] | : exclude = 
[08:08:14.299] | : resignal = FALSE
[08:08:14.300] | : Number of conditions: 6
[08:08:14.300] | :  int 6
[08:08:14.302] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.302] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.302] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.303] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.303] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.303] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.303] | signalConditions() ... done
[08:08:14.304] | relay stdout ...
[08:08:14.304] | relay stdout ... done
[08:08:14.304] | check for misuse ...
[08:08:14.304] | check for misuse ... done
[08:08:14.304] | relay conditions ...
[08:08:14.305] | : Future state: ‘finished’
[08:08:14.305] | : result() for MulticoreFuture ...
[08:08:14.305] | : result() for MulticoreFuture ... done
[08:08:14.305] | : signalConditions() ...
[08:08:14.305] | : . include = ‘condition’
[08:08:14.305] | : . exclude = ‘immediateCondition’
[08:08:14.306] | : . resignal = TRUE
[08:08:14.306] | : . Number of conditions: 6
[08:08:14.306] | : .  int 6
[08:08:14.307] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.307] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.225] | : . ' , attachPackages() ...
[08:08:14.307] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.307] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.226] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.308] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.308] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.226] | : . ' , attachPackages() ... done
[08:08:14.308] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.309] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.226] | : . ' , attachPackages() ...
[08:08:14.309] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.309] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.226] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.309] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.310] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.227] | : . ' , attachPackages() ... done
[08:08:14.310] | : signalConditions() ... done
[08:08:14.310] | relay conditions ... done
[08:08:14.310] value() for Future (<unnamed-16>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:14.313] future(..., label = NULL) ...
[08:08:14.313] | lazy: FALSE
[08:08:14.313] | stdout: TRUE
[08:08:14.313] | conditions: [n=1] ‘condition’
[08:08:14.313] | gc: FALSE
[08:08:14.313] | earlySignal: FALSE
[08:08:14.314] | getGlobalsAndPackages() ...
[08:08:14.314] | : Searching for globals ...
[08:08:14.328] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:14.328] | : Searching for globals ... done
[08:08:14.328] | : Resolving globals: FALSE
[08:08:14.328] | : Search for packages associated with the globals ...
[08:08:14.329] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.329] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.329] | : Search for packages associated with the globals ... done
[08:08:14.329] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.330] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.330] | : globals: [2] ‘weight’, ‘group’
[08:08:14.330] | : packages: [1] ‘stats’
[08:08:14.330] | getGlobalsAndPackages() ... done
[08:08:14.330] | run() for ‘Future’ (<unnamed-17>) ...
[08:08:14.330] | : state: ‘created’
[08:08:14.330] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.331] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.331] | : Using MulticoreFutureBackend ...
[08:08:14.331] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:14.331] | : . Launching futures ...
[08:08:14.331] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.331] | : . ' , getFutureData() ...
[08:08:14.331] | : . ' , ; getFutureCore() ...
[08:08:14.331] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.331] | : . ' , ; getFutureCore() ... done
[08:08:14.332] | : . ' , ; getFutureCapture() ...
[08:08:14.332] | : . ' , ; getFutureCapture() ... done
[08:08:14.332] | : . ' , ; getFutureContext() ...
[08:08:14.332] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.332] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.332] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.332] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.332] | : . ' , ; getFutureContext() ... done
[08:08:14.333] | : . ' , getFutureData() ... done
[08:08:14.333] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.333] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.335] | : . ' , MulticoreFuture started
[08:08:14.335] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.336] | : . Launching futures ... done
[08:08:14.336] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.336] | : Using MulticoreFutureBackend ... done
[08:08:14.336] | run() for ‘Future’ (<unnamed-17>) ... done
[08:08:14.336] future(..., label = NULL) ... done
[08:08:14.337] value() for MulticoreFuture (<unnamed-17>) ...
[08:08:14.337] | result() for MulticoreFuture ...
[08:08:14.338] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.339] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.339] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.339] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.340] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.340] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.340] | : . ' , ; ` | New stack:
[08:08:14.340] | : . ' , ; ` | List of 1
[08:08:14.340] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.340] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.340] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.340] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.340] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.340] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.340] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.340] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.345] | : . ' , ; ` | Old stack:
[08:08:14.345] | : . ' , ; ` | List of 1
[08:08:14.345] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.345] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.345] | : . ' , ; ` |     ...)  
[08:08:14.345] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.345] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.345] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.345] | : . ' , ; ` |     ...)  
[08:08:14.345] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.345] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.354] | : . ' , ; ` | Not identical
[08:08:14.355] | : . ' , ; ` | all.equal() for future ...
[08:08:14.355] | : . ' , ; ` | : List of 2
[08:08:14.355] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.355] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.355] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.355] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.355] | : . ' , ; ` | :     ...)  
[08:08:14.355] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.355] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.355] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.355] | : . ' , ; ` | :     ...)  
[08:08:14.355] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.364] | : . ' , ; ` | : Formals differ
[08:08:14.364] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.364] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.365] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.365] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.365] | : . ' , ; ` List of future strategies:
[08:08:14.365] | : . ' , ; ` 1. sequential:
[08:08:14.365] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.365] | : . ' , ; `    - tweaked: FALSE
[08:08:14.365] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.366] | : . ' , ; ` List of 1
[08:08:14.366] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.366] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.366] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.366] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.366] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.366] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.366] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.366] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.369] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.369] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.369] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.369] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.369] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.369] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.369] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.369] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.369] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.369] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.369] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.371] | : . ' , ; ` | : init: TRUE
[08:08:14.372] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.372] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.372] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.372] | : . ' , ; ` | : .  list()
[08:08:14.372] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.372] | : . ' , ; ` | : .  list()
[08:08:14.373] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.373] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.373] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.373] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.374] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.374] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.374] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.374] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.374] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.375] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.375] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.375] | : . ' , assign_globals() ...
[08:08:14.375] | : . ' , List of 2
[08:08:14.375] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:14.375] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:14.375] | : . ' ,  - attr(*, "where")=List of 2
[08:08:14.375] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:14.375] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:14.375] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.375] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.375] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.375] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.380] | : . ' , - copied ‘weight’ to environment
[08:08:14.380] | : . ' , - copied ‘group’ to environment
[08:08:14.380] | : . ' , assign_globals() ... done
[08:08:14.384] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.384] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.384] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.384] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.384] | : . ' , ; ` | : New stack:
[08:08:14.384] | : . ' , ; ` | : List of 1
[08:08:14.384] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.384] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.384] | : . ' , ; ` | :     ...)  
[08:08:14.384] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.384] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.384] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.384] | : . ' , ; ` | :     ...)  
[08:08:14.384] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.384] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.388] | : . ' , ; ` | : Old stack:
[08:08:14.388] | : . ' , ; ` | : List of 1
[08:08:14.388] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.388] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.388] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa223a9f0> 
[08:08:14.388] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.388] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.388] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.391] | : . ' , ; ` | : Not identical
[08:08:14.391] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.391] | : . ' , ; ` | : . List of 2
[08:08:14.391] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.391] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.391] | : . ' , ; ` | : .     ...)  
[08:08:14.391] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.391] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.391] | : . ' , ; ` | : .     ...)  
[08:08:14.391] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.391] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.391] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.391] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa223a9f0> 
[08:08:14.391] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.391] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.399] | : . ' , ; ` | : . Formals differ
[08:08:14.399] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.399] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.399] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.399] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.400] | : . ' , ; ` | List of future strategies:
[08:08:14.400] | : . ' , ; ` | 1. multicore:
[08:08:14.400] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.400] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.400] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.400] | : . ' , ; ` | List of 1
[08:08:14.400] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.400] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.400] | : . ' , ; ` |     ...)  
[08:08:14.400] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.400] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.400] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.400] | : . ' , ; ` |     ...)  
[08:08:14.400] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.400] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.403] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.403] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.404] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.404] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.404] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.404] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.404] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.404] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.405] | : readImmediateCondition() ...
[08:08:14.405] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.405] | : . Number of RDS files: 0
[08:08:14.406] | : . Returned conditions set:
[08:08:14.406] | : .  list()
[08:08:14.406] | : readImmediateCondition() ... done
[08:08:14.407] | : result() for MulticoreFuture ...
[08:08:14.407] | : result() for MulticoreFuture ... done
[08:08:14.407] | : signalConditions() ...
[08:08:14.407] | : . include = ‘immediateCondition’
[08:08:14.407] | : . exclude = 
[08:08:14.407] | : . resignal = FALSE
[08:08:14.407] | : . Number of conditions: 6
[08:08:14.408] | : .  int 6
[08:08:14.408] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.408] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.409] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.409] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.409] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.409] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.409] | : signalConditions() ... done
[08:08:14.409] | result() for MulticoreFuture ... done
[08:08:14.409] | result() for MulticoreFuture ...
[08:08:14.410] | result() for MulticoreFuture ... done
[08:08:14.410] | signalConditions() ...
[08:08:14.410] | : include = ‘immediateCondition’
[08:08:14.410] | : exclude = 
[08:08:14.410] | : resignal = FALSE
[08:08:14.410] | : Number of conditions: 6
[08:08:14.410] | :  int 6
[08:08:14.411] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.411] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.411] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.411] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.411] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.412] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.412] | signalConditions() ... done
[08:08:14.412] | relay stdout ...
[08:08:14.412] | relay stdout ... done
[08:08:14.412] | check for misuse ...
[08:08:14.412] | check for misuse ... done
[08:08:14.412] | relay conditions ...
[08:08:14.413] | : Future state: ‘finished’
[08:08:14.413] | : result() for MulticoreFuture ...
[08:08:14.413] | : result() for MulticoreFuture ... done
[08:08:14.413] | : signalConditions() ...
[08:08:14.413] | : . include = ‘condition’
[08:08:14.413] | : . exclude = ‘immediateCondition’
[08:08:14.413] | : . resignal = TRUE
[08:08:14.415] | : . Number of conditions: 6
[08:08:14.416] | : .  int 6
[08:08:14.416] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.417] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.336] | : . ' , attachPackages() ...
[08:08:14.417] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.417] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.336] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.417] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.418] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.337] | : . ' , attachPackages() ... done
[08:08:14.418] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.418] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.337] | : . ' , attachPackages() ...
[08:08:14.418] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.418] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.337] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.419] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.419] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.337] | : . ' , attachPackages() ... done
[08:08:14.419] | : signalConditions() ... done
[08:08:14.419] | relay conditions ... done
[08:08:14.419] value() for MulticoreFuture (<unnamed-17>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:14.422] future(..., label = NULL) ...
[08:08:14.423] | lazy: FALSE
[08:08:14.423] | stdout: TRUE
[08:08:14.423] | conditions: [n=1] ‘condition’
[08:08:14.423] | gc: FALSE
[08:08:14.423] | earlySignal: FALSE
[08:08:14.423] | getGlobalsAndPackages() ...
[08:08:14.423] | : Searching for globals ...
[08:08:14.439] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:14.439] | : Searching for globals ... done
[08:08:14.439] | : Resolving globals: FALSE
[08:08:14.439] | : Search for packages associated with the globals ...
[08:08:14.439] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.440] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.440] | : Search for packages associated with the globals ... done
[08:08:14.440] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.440] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.440] | : globals: [2] ‘weight’, ‘group’
[08:08:14.441] | : packages: [1] ‘stats’
[08:08:14.441] | getGlobalsAndPackages() ... done
[08:08:14.441] | run() for ‘Future’ (<unnamed-18>) ...
[08:08:14.441] | : state: ‘created’
[08:08:14.441] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.441] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.441] | : Using MulticoreFutureBackend ...
[08:08:14.442] | : . Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:14.442] | : . Launching futures ...
[08:08:14.442] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.442] | : . ' , getFutureData() ...
[08:08:14.442] | : . ' , ; getFutureCore() ...
[08:08:14.442] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.442] | : . ' , ; getFutureCore() ... done
[08:08:14.442] | : . ' , ; getFutureCapture() ...
[08:08:14.442] | : . ' , ; getFutureCapture() ... done
[08:08:14.443] | : . ' , ; getFutureContext() ...
[08:08:14.443] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.443] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.443] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.443] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.443] | : . ' , ; getFutureContext() ... done
[08:08:14.443] | : . ' , getFutureData() ... done
[08:08:14.443] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.444] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.446] | : . ' , MulticoreFuture started
[08:08:14.446] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.447] | : . Launching futures ... done
[08:08:14.447] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.447] | : Using MulticoreFutureBackend ... done
[08:08:14.447] | run() for ‘Future’ (<unnamed-18>) ... done
[08:08:14.448] future(..., label = NULL) ... done
[08:08:14.448] value() for MulticoreFuture (<unnamed-18>) ...
[08:08:14.448] | result() for MulticoreFuture ...
[08:08:14.449] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.450] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.450] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.450] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.451] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.451] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.451] | : . ' , ; ` | New stack:
[08:08:14.451] | : . ' , ; ` | List of 1
[08:08:14.451] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.451] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.451] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.451] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.451] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.451] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.451] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.451] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.456] | : . ' , ; ` | Old stack:
[08:08:14.456] | : . ' , ; ` | List of 1
[08:08:14.456] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.456] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.456] | : . ' , ; ` |     ...)  
[08:08:14.456] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.456] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.456] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.456] | : . ' , ; ` |     ...)  
[08:08:14.456] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.456] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.462] | : . ' , ; ` | Not identical
[08:08:14.462] | : . ' , ; ` | all.equal() for future ...
[08:08:14.462] | : . ' , ; ` | : List of 2
[08:08:14.462] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.462] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.462] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.462] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.462] | : . ' , ; ` | :     ...)  
[08:08:14.462] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.462] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.462] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.462] | : . ' , ; ` | :     ...)  
[08:08:14.462] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.474] | : . ' , ; ` | : Formals differ
[08:08:14.474] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.475] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.475] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.475] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.475] | : . ' , ; ` List of future strategies:
[08:08:14.475] | : . ' , ; ` 1. sequential:
[08:08:14.475] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.475] | : . ' , ; `    - tweaked: FALSE
[08:08:14.475] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.476] | : . ' , ; ` List of 1
[08:08:14.476] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.476] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.476] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.476] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.476] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.476] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.476] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.476] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.479] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.479] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.479] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.480] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.480] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.480] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.480] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.480] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.480] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.480] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.480] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.482] | : . ' , ; ` | : init: TRUE
[08:08:14.482] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.482] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.482] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.482] | : . ' , ; ` | : .  list()
[08:08:14.483] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.483] | : . ' , ; ` | : .  list()
[08:08:14.483] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.483] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.483] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.483] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.484] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.484] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.484] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.485] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.485] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.485] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.485] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.485] | : . ' , assign_globals() ...
[08:08:14.485] | : . ' , List of 2
[08:08:14.485] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:14.485] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:14.485] | : . ' ,  - attr(*, "where")=List of 2
[08:08:14.485] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:14.485] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:14.485] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.485] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.485] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.485] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.490] | : . ' , - copied ‘weight’ to environment
[08:08:14.490] | : . ' , - copied ‘group’ to environment
[08:08:14.490] | : . ' , assign_globals() ... done
[08:08:14.494] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.494] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.494] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.494] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.494] | : . ' , ; ` | : New stack:
[08:08:14.494] | : . ' , ; ` | : List of 1
[08:08:14.494] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.494] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.494] | : . ' , ; ` | :     ...)  
[08:08:14.494] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.494] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.494] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.494] | : . ' , ; ` | :     ...)  
[08:08:14.494] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.494] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.497] | : . ' , ; ` | : Old stack:
[08:08:14.498] | : . ' , ; ` | : List of 1
[08:08:14.498] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.498] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.498] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1d16a90> 
[08:08:14.498] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.498] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.498] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.501] | : . ' , ; ` | : Not identical
[08:08:14.501] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.501] | : . ' , ; ` | : . List of 2
[08:08:14.501] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.501] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.501] | : . ' , ; ` | : .     ...)  
[08:08:14.501] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.501] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.501] | : . ' , ; ` | : .     ...)  
[08:08:14.501] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.501] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.501] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.501] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1d16a90> 
[08:08:14.501] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.501] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.508] | : . ' , ; ` | : . Formals differ
[08:08:14.508] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.508] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.508] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.508] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.509] | : . ' , ; ` | List of future strategies:
[08:08:14.509] | : . ' , ; ` | 1. multicore:
[08:08:14.509] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.509] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.509] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.509] | : . ' , ; ` | List of 1
[08:08:14.509] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.509] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.509] | : . ' , ; ` |     ...)  
[08:08:14.509] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.509] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.509] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.509] | : . ' , ; ` |     ...)  
[08:08:14.509] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.509] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.512] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.512] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.512] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.513] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.513] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.513] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.513] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.513] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.514] | : readImmediateCondition() ...
[08:08:14.514] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.514] | : . Number of RDS files: 0
[08:08:14.515] | : . Returned conditions set:
[08:08:14.515] | : .  list()
[08:08:14.515] | : readImmediateCondition() ... done
[08:08:14.516] | : result() for MulticoreFuture ...
[08:08:14.516] | : result() for MulticoreFuture ... done
[08:08:14.516] | : signalConditions() ...
[08:08:14.516] | : . include = ‘immediateCondition’
[08:08:14.516] | : . exclude = 
[08:08:14.516] | : . resignal = FALSE
[08:08:14.517] | : . Number of conditions: 6
[08:08:14.517] | : .  int 6
[08:08:14.517] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.517] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.518] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.518] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.518] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.518] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.518] | : signalConditions() ... done
[08:08:14.518] | result() for MulticoreFuture ... done
[08:08:14.518] | result() for MulticoreFuture ...
[08:08:14.519] | result() for MulticoreFuture ... done
[08:08:14.519] | signalConditions() ...
[08:08:14.519] | : include = ‘immediateCondition’
[08:08:14.519] | : exclude = 
[08:08:14.519] | : resignal = FALSE
[08:08:14.519] | : Number of conditions: 6
[08:08:14.519] | :  int 6
[08:08:14.520] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.520] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.520] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.520] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.520] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.521] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.521] | signalConditions() ... done
[08:08:14.521] | relay stdout ...
[08:08:14.521] | relay stdout ... done
[08:08:14.521] | check for misuse ...
[08:08:14.521] | check for misuse ... done
[08:08:14.521] | relay conditions ...
[08:08:14.522] | : Future state: ‘finished’
[08:08:14.522] | : result() for MulticoreFuture ...
[08:08:14.522] | : result() for MulticoreFuture ... done
[08:08:14.522] | : signalConditions() ...
[08:08:14.522] | : . include = ‘condition’
[08:08:14.522] | : . exclude = ‘immediateCondition’
[08:08:14.522] | : . resignal = TRUE
[08:08:14.523] | : . Number of conditions: 6
[08:08:14.523] | : .  int 6
[08:08:14.523] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.523] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.447] | : . ' , attachPackages() ...
[08:08:14.524] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.524] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.447] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.524] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.524] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.448] | : . ' , attachPackages() ... done
[08:08:14.524] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.524] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.448] | : . ' , attachPackages() ...
[08:08:14.525] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.526] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.448] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.527] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.527] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.448] | : . ' , attachPackages() ... done
[08:08:14.527] | : signalConditions() ... done
[08:08:14.527] | relay conditions ... done
[08:08:14.527] value() for MulticoreFuture (<unnamed-18>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:14.531] future(..., label = NULL) ...
[08:08:14.531] | lazy: TRUE
[08:08:14.531] | stdout: TRUE
[08:08:14.531] | conditions: [n=1] ‘condition’
[08:08:14.531] | gc: FALSE
[08:08:14.531] | earlySignal: FALSE
[08:08:14.532] | getGlobalsAndPackages() ...
[08:08:14.532] | : Searching for globals ...
[08:08:14.546] | : . globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:14.546] | : Searching for globals ... done
[08:08:14.546] | : Resolving globals: FALSE
[08:08:14.546] | : Search for packages associated with the globals ...
[08:08:14.546] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.547] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.547] | : Search for packages associated with the globals ... done
[08:08:14.547] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.547] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.547] | : globals: [2] ‘weight’, ‘group’
[08:08:14.547] | : packages: [1] ‘stats’
[08:08:14.548] | getGlobalsAndPackages() ... done
[08:08:14.548] future(..., label = NULL) ... done
[08:08:14.548] value() for Future (<unnamed-19>) ...
[08:08:14.548] | run() for ‘Future’ (<unnamed-19>) ...
[08:08:14.548] | : state: ‘created’
[08:08:14.548] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.548] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.549] | : Using MulticoreFutureBackend ...
[08:08:14.549] | : . Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:14.549] | : . Launching futures ...
[08:08:14.549] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.549] | : . ' , getFutureData() ...
[08:08:14.549] | : . ' , ; getFutureCore() ...
[08:08:14.549] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.549] | : . ' , ; getFutureCore() ... done
[08:08:14.549] | : . ' , ; getFutureCapture() ...
[08:08:14.550] | : . ' , ; getFutureCapture() ... done
[08:08:14.550] | : . ' , ; getFutureContext() ...
[08:08:14.550] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.550] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.550] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.550] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.550] | : . ' , ; getFutureContext() ... done
[08:08:14.550] | : . ' , getFutureData() ... done
[08:08:14.550] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.551] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.553] | : . ' , MulticoreFuture started
[08:08:14.553] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.553] | : . Launching futures ... done
[08:08:14.553] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.554] | : Using MulticoreFutureBackend ... done
[08:08:14.554] | run() for ‘Future’ (<unnamed-19>) ... done
[08:08:14.554] | result() for MulticoreFuture ...
[08:08:14.556] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.556] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.557] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.557] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.558] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.558] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.558] | : . ' , ; ` | New stack:
[08:08:14.558] | : . ' , ; ` | List of 1
[08:08:14.558] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.558] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.558] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.558] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.558] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.558] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.558] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.558] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.563] | : . ' , ; ` | Old stack:
[08:08:14.563] | : . ' , ; ` | List of 1
[08:08:14.563] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.563] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.563] | : . ' , ; ` |     ...)  
[08:08:14.563] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.563] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.563] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.563] | : . ' , ; ` |     ...)  
[08:08:14.563] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.563] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.569] | : . ' , ; ` | Not identical
[08:08:14.569] | : . ' , ; ` | all.equal() for future ...
[08:08:14.569] | : . ' , ; ` | : List of 2
[08:08:14.569] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.569] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.569] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.569] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.569] | : . ' , ; ` | :     ...)  
[08:08:14.569] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.569] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.569] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.569] | : . ' , ; ` | :     ...)  
[08:08:14.569] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.581] | : . ' , ; ` | : Formals differ
[08:08:14.581] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.582] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.582] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.582] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.582] | : . ' , ; ` List of future strategies:
[08:08:14.582] | : . ' , ; ` 1. sequential:
[08:08:14.582] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.582] | : . ' , ; `    - tweaked: FALSE
[08:08:14.582] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.583] | : . ' , ; ` List of 1
[08:08:14.583] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.583] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.583] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.583] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.583] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.583] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.583] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.583] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.586] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.586] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.587] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.587] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.587] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.587] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.587] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.587] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.587] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.587] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.587] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.589] | : . ' , ; ` | : init: TRUE
[08:08:14.589] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.589] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.589] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.589] | : . ' , ; ` | : .  list()
[08:08:14.590] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.590] | : . ' , ; ` | : .  list()
[08:08:14.590] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.590] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.590] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.590] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.591] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.591] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.592] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.592] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.592] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.592] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.592] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.592] | : . ' , assign_globals() ...
[08:08:14.592] | : . ' , List of 2
[08:08:14.592] | : . ' ,  $ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:14.592] | : . ' ,  $ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:14.592] | : . ' ,  - attr(*, "where")=List of 2
[08:08:14.592] | : . ' ,   ..$ weight:<environment: R_GlobalEnv> 
[08:08:14.592] | : . ' ,   ..$ group :<environment: R_GlobalEnv> 
[08:08:14.592] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.592] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.592] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.592] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.597] | : . ' , - copied ‘weight’ to environment
[08:08:14.597] | : . ' , - copied ‘group’ to environment
[08:08:14.597] | : . ' , assign_globals() ... done
[08:08:14.600] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.601] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.601] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.601] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.601] | : . ' , ; ` | : New stack:
[08:08:14.601] | : . ' , ; ` | : List of 1
[08:08:14.601] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.601] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.601] | : . ' , ; ` | :     ...)  
[08:08:14.601] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.601] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.601] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.601] | : . ' , ; ` | :     ...)  
[08:08:14.601] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.601] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.604] | : . ' , ; ` | : Old stack:
[08:08:14.605] | : . ' , ; ` | : List of 1
[08:08:14.605] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.605] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.605] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1b8bcd8> 
[08:08:14.605] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.605] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.605] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.608] | : . ' , ; ` | : Not identical
[08:08:14.608] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.608] | : . ' , ; ` | : . List of 2
[08:08:14.608] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.608] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.608] | : . ' , ; ` | : .     ...)  
[08:08:14.608] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.608] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.608] | : . ' , ; ` | : .     ...)  
[08:08:14.608] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.608] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.608] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.608] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1b8bcd8> 
[08:08:14.608] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.608] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.614] | : . ' , ; ` | : . Formals differ
[08:08:14.614] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.614] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.614] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.615] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.615] | : . ' , ; ` | List of future strategies:
[08:08:14.615] | : . ' , ; ` | 1. multicore:
[08:08:14.615] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.615] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.615] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.615] | : . ' , ; ` | List of 1
[08:08:14.615] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.615] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.615] | : . ' , ; ` |     ...)  
[08:08:14.615] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.615] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.615] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.615] | : . ' , ; ` |     ...)  
[08:08:14.615] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.615] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.618] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.618] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.619] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.619] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.619] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.619] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.619] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.619] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.620] | : readImmediateCondition() ...
[08:08:14.620] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.621] | : . Number of RDS files: 0
[08:08:14.621] | : . Returned conditions set:
[08:08:14.621] | : .  list()
[08:08:14.621] | : readImmediateCondition() ... done
[08:08:14.622] | : result() for MulticoreFuture ...
[08:08:14.622] | : result() for MulticoreFuture ... done
[08:08:14.622] | : signalConditions() ...
[08:08:14.622] | : . include = ‘immediateCondition’
[08:08:14.622] | : . exclude = 
[08:08:14.623] | : . resignal = FALSE
[08:08:14.623] | : . Number of conditions: 6
[08:08:14.623] | : .  int 6
[08:08:14.623] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.624] | : signalConditions() ... done
[08:08:14.624] | result() for MulticoreFuture ... done
[08:08:14.625] | result() for MulticoreFuture ...
[08:08:14.625] | result() for MulticoreFuture ... done
[08:08:14.625] | signalConditions() ...
[08:08:14.625] | : include = ‘immediateCondition’
[08:08:14.625] | : exclude = 
[08:08:14.625] | : resignal = FALSE
[08:08:14.625] | : Number of conditions: 6
[08:08:14.626] | :  int 6
[08:08:14.626] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.626] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.626] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.627] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.627] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.627] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.627] | signalConditions() ... done
[08:08:14.627] | relay stdout ...
[08:08:14.627] | relay stdout ... done
[08:08:14.627] | check for misuse ...
[08:08:14.627] | check for misuse ... done
[08:08:14.628] | relay conditions ...
[08:08:14.628] | : Future state: ‘finished’
[08:08:14.628] | : result() for MulticoreFuture ...
[08:08:14.628] | : result() for MulticoreFuture ... done
[08:08:14.628] | : signalConditions() ...
[08:08:14.628] | : . include = ‘condition’
[08:08:14.628] | : . exclude = ‘immediateCondition’
[08:08:14.629] | : . resignal = TRUE
[08:08:14.629] | : . Number of conditions: 6
[08:08:14.629] | : .  int 6
[08:08:14.629] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.629] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.554] | : . ' , attachPackages() ...
[08:08:14.630] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.630] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.554] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.630] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.630] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.555] | : . ' , attachPackages() ... done
[08:08:14.630] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.630] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.555] | : . ' , attachPackages() ...
[08:08:14.631] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.631] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.555] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.631] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.631] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.555] | : . ' , attachPackages() ... done
[08:08:14.631] | : signalConditions() ... done
[08:08:14.631] | relay conditions ... done
[08:08:14.632] value() for Future (<unnamed-19>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:14.637] future(..., label = NULL) ...
[08:08:14.637] | lazy: FALSE
[08:08:14.637] | stdout: TRUE
[08:08:14.637] | conditions: [n=1] ‘condition’
[08:08:14.637] | gc: FALSE
[08:08:14.638] | earlySignal: FALSE
[08:08:14.638] | getGlobalsAndPackages() ...
[08:08:14.638] | : Searching for globals ...
[08:08:14.648] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:14.648] | : Searching for globals ... done
[08:08:14.648] | : Resolving globals: FALSE
[08:08:14.648] | : Search for packages associated with the globals ...
[08:08:14.648] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.649] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.649] | : Search for packages associated with the globals ... done
[08:08:14.649] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.649] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.649] | : globals: [1] ‘x’
[08:08:14.649] | : packages: [1] ‘stats’
[08:08:14.649] | getGlobalsAndPackages() ... done
[08:08:14.650] | run() for ‘Future’ (<unnamed-20>) ...
[08:08:14.650] | : state: ‘created’
[08:08:14.650] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.650] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.650] | : Using MulticoreFutureBackend ...
[08:08:14.650] | : . Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:14.650] | : . Launching futures ...
[08:08:14.651] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.651] | : . ' , getFutureData() ...
[08:08:14.651] | : . ' , ; getFutureCore() ...
[08:08:14.651] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.651] | : . ' , ; getFutureCore() ... done
[08:08:14.651] | : . ' , ; getFutureCapture() ...
[08:08:14.651] | : . ' , ; getFutureCapture() ... done
[08:08:14.651] | : . ' , ; getFutureContext() ...
[08:08:14.651] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.652] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.652] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.652] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.652] | : . ' , ; getFutureContext() ... done
[08:08:14.652] | : . ' , getFutureData() ... done
[08:08:14.652] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.653] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.654] | : . ' , MulticoreFuture started
[08:08:14.655] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.655] | : . Launching futures ... done
[08:08:14.655] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.656] | : Using MulticoreFutureBackend ... done
[08:08:14.656] | run() for ‘Future’ (<unnamed-20>) ... done
[08:08:14.658] future(..., label = NULL) ... done
[08:08:14.658] value() for MulticoreFuture (<unnamed-20>) ...
[08:08:14.659] | result() for MulticoreFuture ...
[08:08:14.660] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.661] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.661] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.662] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.662] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.663] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.663] | : . ' , ; ` | New stack:
[08:08:14.664] | : . ' , ; ` | List of 1
[08:08:14.664] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.664] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.664] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.664] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.664] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.664] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.664] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.664] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.670] | : . ' , ; ` | Old stack:
[08:08:14.670] | : . ' , ; ` | List of 1
[08:08:14.670] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.670] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.670] | : . ' , ; ` |     ...)  
[08:08:14.670] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.670] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.670] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.670] | : . ' , ; ` |     ...)  
[08:08:14.670] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.670] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.676] | : . ' , ; ` | Not identical
[08:08:14.676] | : . ' , ; ` | all.equal() for future ...
[08:08:14.676] | : . ' , ; ` | : List of 2
[08:08:14.676] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.676] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.676] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.676] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.676] | : . ' , ; ` | :     ...)  
[08:08:14.676] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.676] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.676] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.676] | : . ' , ; ` | :     ...)  
[08:08:14.676] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.683] | : . ' , ; ` | : Formals differ
[08:08:14.683] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.683] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.683] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.683] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.683] | : . ' , ; ` List of future strategies:
[08:08:14.683] | : . ' , ; ` 1. sequential:
[08:08:14.683] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.683] | : . ' , ; `    - tweaked: FALSE
[08:08:14.683] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.684] | : . ' , ; ` List of 1
[08:08:14.684] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.684] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.684] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.684] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.684] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.684] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.684] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.684] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.688] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.689] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.689] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.689] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.689] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.689] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.689] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.689] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.689] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.689] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.689] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.691] | : . ' , ; ` | : init: TRUE
[08:08:14.691] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.692] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.692] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.692] | : . ' , ; ` | : .  list()
[08:08:14.692] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.692] | : . ' , ; ` | : .  list()
[08:08:14.693] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.693] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.693] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.693] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.694] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.694] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.694] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.694] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.694] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.694] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.695] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.695] | : . ' , assign_globals() ...
[08:08:14.695] | : . ' , List of 1
[08:08:14.695] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:14.695] | : . ' ,  - attr(*, "where")=List of 1
[08:08:14.695] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:14.695] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.695] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.695] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.695] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.697] | : . ' , - copied ‘x’ to environment
[08:08:14.698] | : . ' , assign_globals() ... done
[08:08:14.700] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.700] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.700] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.701] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.701] | : . ' , ; ` | : New stack:
[08:08:14.701] | : . ' , ; ` | : List of 1
[08:08:14.701] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.701] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.701] | : . ' , ; ` | :     ...)  
[08:08:14.701] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.701] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.701] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.701] | : . ' , ; ` | :     ...)  
[08:08:14.701] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.701] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.704] | : . ' , ; ` | : Old stack:
[08:08:14.704] | : . ' , ; ` | : List of 1
[08:08:14.704] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.704] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.704] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0b1ed10> 
[08:08:14.704] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.704] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.704] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.708] | : . ' , ; ` | : Not identical
[08:08:14.708] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.709] | : . ' , ; ` | : . List of 2
[08:08:14.709] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.709] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.709] | : . ' , ; ` | : .     ...)  
[08:08:14.709] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.709] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.709] | : . ' , ; ` | : .     ...)  
[08:08:14.709] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.709] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.709] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.709] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0b1ed10> 
[08:08:14.709] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.709] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.714] | : . ' , ; ` | : . Formals differ
[08:08:14.715] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.715] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.715] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.715] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.715] | : . ' , ; ` | List of future strategies:
[08:08:14.715] | : . ' , ; ` | 1. multicore:
[08:08:14.715] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.715] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.715] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.715] | : . ' , ; ` | List of 1
[08:08:14.715] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.715] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.715] | : . ' , ; ` |     ...)  
[08:08:14.715] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.715] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.715] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.715] | : . ' , ; ` |     ...)  
[08:08:14.715] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.715] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.718] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.719] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.719] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.719] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.719] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.719] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.719] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.719] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.720] | : readImmediateCondition() ...
[08:08:14.720] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.721] | : . Number of RDS files: 0
[08:08:14.721] | : . Returned conditions set:
[08:08:14.721] | : .  list()
[08:08:14.722] | : readImmediateCondition() ... done
[08:08:14.723] | : result() for MulticoreFuture ...
[08:08:14.723] | : result() for MulticoreFuture ... done
[08:08:14.723] | : signalConditions() ...
[08:08:14.723] | : . include = ‘immediateCondition’
[08:08:14.724] | : . exclude = 
[08:08:14.724] | : . resignal = FALSE
[08:08:14.724] | : . Number of conditions: 6
[08:08:14.724] | : .  int 6
[08:08:14.725] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.725] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.725] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.726] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.726] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.726] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.726] | : signalConditions() ... done
[08:08:14.726] | result() for MulticoreFuture ... done
[08:08:14.727] | result() for MulticoreFuture ...
[08:08:14.727] | result() for MulticoreFuture ... done
[08:08:14.727] | signalConditions() ...
[08:08:14.727] | : include = ‘immediateCondition’
[08:08:14.728] | : exclude = 
[08:08:14.728] | : resignal = FALSE
[08:08:14.728] | : Number of conditions: 6
[08:08:14.728] | :  int 6
[08:08:14.728] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.729] | signalConditions() ... done
[08:08:14.729] | relay stdout ...
[08:08:14.730] | relay stdout ... done
[08:08:14.730] | check for misuse ...
[08:08:14.730] | check for misuse ... done
[08:08:14.730] | relay conditions ...
[08:08:14.730] | : Future state: ‘finished’
[08:08:14.730] | : result() for MulticoreFuture ...
[08:08:14.730] | : result() for MulticoreFuture ... done
[08:08:14.731] | : signalConditions() ...
[08:08:14.731] | : . include = ‘condition’
[08:08:14.731] | : . exclude = ‘immediateCondition’
[08:08:14.731] | : . resignal = TRUE
[08:08:14.731] | : . Number of conditions: 6
[08:08:14.731] | : .  int 6
[08:08:14.732] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.732] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.655] | : . ' , attachPackages() ...
[08:08:14.732] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.732] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.656] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.732] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.732] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.656] | : . ' , attachPackages() ... done
[08:08:14.733] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.733] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.657] | : . ' , attachPackages() ...
[08:08:14.733] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.733] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.658] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.733] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.733] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.659] | : . ' , attachPackages() ... done
[08:08:14.733] | : signalConditions() ... done
[08:08:14.734] | relay conditions ... done
[08:08:14.734] value() for MulticoreFuture (<unnamed-20>) ... done
x
1 2 
2 3 
[08:08:14.735] future(..., label = NULL) ...
[08:08:14.735] | lazy: FALSE
[08:08:14.735] | stdout: TRUE
[08:08:14.735] | conditions: [n=1] ‘condition’
[08:08:14.735] | gc: FALSE
[08:08:14.735] | earlySignal: FALSE
[08:08:14.735] | getGlobalsAndPackages() ...
[08:08:14.735] | : Searching for globals ...
[08:08:14.747] | : . globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:14.747] | : Searching for globals ... done
[08:08:14.747] | : Resolving globals: FALSE
[08:08:14.747] | : Search for packages associated with the globals ...
[08:08:14.748] | : . Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:14.748] | : . Packages: [2] ‘base’, ‘stats’
[08:08:14.748] | : Search for packages associated with the globals ... done
[08:08:14.748] | : Packages after dropping 'base': [1] ‘stats’
[08:08:14.749] | : Packages after dropping non-attached packages: [1] ‘stats’
[08:08:14.749] | : globals: [1] ‘x’
[08:08:14.749] | : packages: [1] ‘stats’
[08:08:14.749] | getGlobalsAndPackages() ... done
[08:08:14.749] | run() for ‘Future’ (<unnamed-21>) ...
[08:08:14.749] | : state: ‘created’
[08:08:14.750] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.750] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.750] | : Using MulticoreFutureBackend ...
[08:08:14.750] | : . Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:14.750] | : . Launching futures ...
[08:08:14.750] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.750] | : . ' , getFutureData() ...
[08:08:14.750] | : . ' , ; getFutureCore() ...
[08:08:14.751] | : . ' , ; ` Packages needed by the future expression (n = 1): ‘stats’
[08:08:14.751] | : . ' , ; getFutureCore() ... done
[08:08:14.751] | : . ' , ; getFutureCapture() ...
[08:08:14.751] | : . ' , ; getFutureCapture() ... done
[08:08:14.751] | : . ' , ; getFutureContext() ...
[08:08:14.751] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.751] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.751] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.751] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.752] | : . ' , ; getFutureContext() ... done
[08:08:14.752] | : . ' , getFutureData() ... done
[08:08:14.752] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.752] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.754] | : . ' , MulticoreFuture started
[08:08:14.755] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.755] | : . Launching futures ... done
[08:08:14.755] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.755] | : Using MulticoreFutureBackend ... done
[08:08:14.756] | run() for ‘Future’ (<unnamed-21>) ... done
[08:08:14.756] future(..., label = NULL) ... done
[08:08:14.756] value() for MulticoreFuture (<unnamed-21>) ...
[08:08:14.757] | result() for MulticoreFuture ...
[08:08:14.758] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.758] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.758] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.759] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.759] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.759] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.760] | : . ' , ; ` | New stack:
[08:08:14.760] | : . ' , ; ` | List of 1
[08:08:14.760] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.760] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.760] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.760] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.760] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.760] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.760] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.760] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.765] | : . ' , ; ` | Old stack:
[08:08:14.765] | : . ' , ; ` | List of 1
[08:08:14.765] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.765] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.765] | : . ' , ; ` |     ...)  
[08:08:14.765] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.765] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.765] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.765] | : . ' , ; ` |     ...)  
[08:08:14.765] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.765] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.770] | : . ' , ; ` | Not identical
[08:08:14.770] | : . ' , ; ` | all.equal() for future ...
[08:08:14.771] | : . ' , ; ` | : List of 2
[08:08:14.771] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.771] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.771] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.771] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.771] | : . ' , ; ` | :     ...)  
[08:08:14.771] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.771] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.771] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.771] | : . ' , ; ` | :     ...)  
[08:08:14.771] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.783] | : . ' , ; ` | : Formals differ
[08:08:14.783] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.783] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.783] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.783] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.783] | : . ' , ; ` List of future strategies:
[08:08:14.783] | : . ' , ; ` 1. sequential:
[08:08:14.783] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.783] | : . ' , ; `    - tweaked: FALSE
[08:08:14.783] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.784] | : . ' , ; ` List of 1
[08:08:14.784] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.784] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.784] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.784] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.784] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.784] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.784] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.784] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.788] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.788] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.788] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.788] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.788] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.788] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.788] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.788] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.788] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.788] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.788] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.790] | : . ' , ; ` | : init: TRUE
[08:08:14.790] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.791] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.791] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.791] | : . ' , ; ` | : .  list()
[08:08:14.791] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.791] | : . ' , ; ` | : .  list()
[08:08:14.791] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.792] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.792] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.792] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.793] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.793] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.793] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.793] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.793] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.793] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.793] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.794] | : . ' , assign_globals() ...
[08:08:14.794] | : . ' , List of 1
[08:08:14.794] | : . ' ,  $ x: num [1:5] 1 1 2 2 2
[08:08:14.794] | : . ' ,  - attr(*, "where")=List of 1
[08:08:14.794] | : . ' ,   ..$ x:<environment: R_GlobalEnv> 
[08:08:14.794] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:14.794] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:14.794] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:14.794] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:14.796] | : . ' , - copied ‘x’ to environment
[08:08:14.798] | : . ' , assign_globals() ... done
[08:08:14.801] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.801] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.801] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.801] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.801] | : . ' , ; ` | : New stack:
[08:08:14.801] | : . ' , ; ` | : List of 1
[08:08:14.801] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.801] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.801] | : . ' , ; ` | :     ...)  
[08:08:14.801] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.801] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.801] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.801] | : . ' , ; ` | :     ...)  
[08:08:14.801] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.801] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.805] | : . ' , ; ` | : Old stack:
[08:08:14.805] | : . ' , ; ` | : List of 1
[08:08:14.805] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.805] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.805] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1bb12c8> 
[08:08:14.805] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.805] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.805] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.808] | : . ' , ; ` | : Not identical
[08:08:14.808] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.808] | : . ' , ; ` | : . List of 2
[08:08:14.808] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.808] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.808] | : . ' , ; ` | : .     ...)  
[08:08:14.808] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.808] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.808] | : . ' , ; ` | : .     ...)  
[08:08:14.808] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.808] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.808] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.808] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1bb12c8> 
[08:08:14.808] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.808] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.814] | : . ' , ; ` | : . Formals differ
[08:08:14.814] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.814] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.814] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.815] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.815] | : . ' , ; ` | List of future strategies:
[08:08:14.815] | : . ' , ; ` | 1. multicore:
[08:08:14.815] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.815] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.815] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.816] | : . ' , ; ` | List of 1
[08:08:14.816] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.816] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.816] | : . ' , ; ` |     ...)  
[08:08:14.816] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.816] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.816] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.816] | : . ' , ; ` |     ...)  
[08:08:14.816] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.816] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.819] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.820] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.820] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.820] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.820] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.820] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.820] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.820] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.821] | : readImmediateCondition() ...
[08:08:14.821] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.822] | : . Number of RDS files: 0
[08:08:14.822] | : . Returned conditions set:
[08:08:14.822] | : .  list()
[08:08:14.822] | : readImmediateCondition() ... done
[08:08:14.823] | : result() for MulticoreFuture ...
[08:08:14.823] | : result() for MulticoreFuture ... done
[08:08:14.823] | : signalConditions() ...
[08:08:14.823] | : . include = ‘immediateCondition’
[08:08:14.824] | : . exclude = 
[08:08:14.824] | : . resignal = FALSE
[08:08:14.824] | : . Number of conditions: 6
[08:08:14.824] | : .  int 6
[08:08:14.825] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.825] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.825] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.825] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.825] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.825] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.826] | : signalConditions() ... done
[08:08:14.826] | result() for MulticoreFuture ... done
[08:08:14.826] | result() for MulticoreFuture ...
[08:08:14.826] | result() for MulticoreFuture ... done
[08:08:14.826] | signalConditions() ...
[08:08:14.826] | : include = ‘immediateCondition’
[08:08:14.826] | : exclude = 
[08:08:14.826] | : resignal = FALSE
[08:08:14.827] | : Number of conditions: 6
[08:08:14.827] | :  int 6
[08:08:14.827] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.827] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.828] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.828] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.828] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.828] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.828] | signalConditions() ... done
[08:08:14.828] | relay stdout ...
[08:08:14.828] | relay stdout ... done
[08:08:14.828] | check for misuse ...
[08:08:14.829] | check for misuse ... done
[08:08:14.829] | relay conditions ...
[08:08:14.829] | : Future state: ‘finished’
[08:08:14.829] | : result() for MulticoreFuture ...
[08:08:14.829] | : result() for MulticoreFuture ... done
[08:08:14.829] | : signalConditions() ...
[08:08:14.829] | : . include = ‘condition’
[08:08:14.830] | : . exclude = ‘immediateCondition’
[08:08:14.830] | : . resignal = TRUE
[08:08:14.830] | : . Number of conditions: 6
[08:08:14.830] | : .  int 6
[08:08:14.830] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.831] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.755] | : . ' , attachPackages() ...
[08:08:14.831] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.831] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.756] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.831] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.831] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.756] | : . ' , attachPackages() ... done
[08:08:14.831] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.832] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.756] | : . ' , attachPackages() ...
[08:08:14.832] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.832] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.757] | : . ' , ; packages: [n=1] ‘stats’
[08:08:14.832] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.832] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.757] | : . ' , attachPackages() ... done
[08:08:14.832] | : signalConditions() ... done
[08:08:14.833] | relay conditions ... done
[08:08:14.833] value() for MulticoreFuture (<unnamed-21>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:14.837] future(..., label = NULL) ...
[08:08:14.837] | lazy: FALSE
[08:08:14.837] | stdout: TRUE
[08:08:14.837] | conditions: [n=1] ‘condition’
[08:08:14.838] | gc: FALSE
[08:08:14.838] | earlySignal: FALSE
[08:08:14.838] | getGlobalsAndPackages() ...
[08:08:14.838] | : Searching for globals ...
[08:08:14.854] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:14.854] | : Searching for globals ... done
[08:08:14.854] | : Resolving globals: FALSE
[08:08:14.854] | : Search for packages associated with the globals ...
[08:08:14.855] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:14.855] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:14.855] | : Search for packages associated with the globals ... done
[08:08:14.855] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:14.855] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:14.856] | : globals: [0] 
[08:08:14.856] | : packages: [2] ‘stats’, ‘datasets’
[08:08:14.856] | getGlobalsAndPackages() ... done
[08:08:14.856] | run() for ‘Future’ (<unnamed-22>) ...
[08:08:14.856] | : state: ‘created’
[08:08:14.856] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.857] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.857] | : Using MulticoreFutureBackend ...
[08:08:14.857] | : . Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:14.857] | : . Launching futures ...
[08:08:14.857] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.857] | : . ' , getFutureData() ...
[08:08:14.857] | : . ' , ; getFutureCore() ...
[08:08:14.857] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:14.858] | : . ' , ; getFutureCore() ... done
[08:08:14.858] | : . ' , ; getFutureCapture() ...
[08:08:14.858] | : . ' , ; getFutureCapture() ... done
[08:08:14.858] | : . ' , ; getFutureContext() ...
[08:08:14.858] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.858] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.858] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.858] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.858] | : . ' , ; getFutureContext() ... done
[08:08:14.859] | : . ' , getFutureData() ... done
[08:08:14.859] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.859] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.861] | : . ' , MulticoreFuture started
[08:08:14.861] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.862] | : . Launching futures ... done
[08:08:14.862] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.862] | : Using MulticoreFutureBackend ... done
[08:08:14.863] | run() for ‘Future’ (<unnamed-22>) ... done
[08:08:14.863] future(..., label = NULL) ... done
[08:08:14.863] value() for MulticoreFuture (<unnamed-22>) ...
[08:08:14.863] | result() for MulticoreFuture ...
[08:08:14.864] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.865] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.865] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.865] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.866] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.866] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.866] | : . ' , ; ` | New stack:
[08:08:14.867] | : . ' , ; ` | List of 1
[08:08:14.867] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.867] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.867] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.867] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.867] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.867] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.867] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.867] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.871] | : . ' , ; ` | Old stack:
[08:08:14.872] | : . ' , ; ` | List of 1
[08:08:14.872] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.872] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.872] | : . ' , ; ` |     ...)  
[08:08:14.872] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.872] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.872] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.872] | : . ' , ; ` |     ...)  
[08:08:14.872] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.872] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.877] | : . ' , ; ` | Not identical
[08:08:14.877] | : . ' , ; ` | all.equal() for future ...
[08:08:14.877] | : . ' , ; ` | : List of 2
[08:08:14.877] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.877] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.877] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.877] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.877] | : . ' , ; ` | :     ...)  
[08:08:14.877] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.877] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.877] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.877] | : . ' , ; ` | :     ...)  
[08:08:14.877] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.890] | : . ' , ; ` | : Formals differ
[08:08:14.890] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.890] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.890] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.890] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.890] | : . ' , ; ` List of future strategies:
[08:08:14.890] | : . ' , ; ` 1. sequential:
[08:08:14.890] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.890] | : . ' , ; `    - tweaked: FALSE
[08:08:14.890] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.891] | : . ' , ; ` List of 1
[08:08:14.891] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.891] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.891] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.891] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.891] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.891] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.891] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.891] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.894] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.895] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.895] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.895] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:14.895] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.895] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.895] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:14.895] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.895] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.895] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.895] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.897] | : . ' , ; ` | : init: TRUE
[08:08:14.897] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:14.897] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:14.897] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:14.898] | : . ' , ; ` | : .  list()
[08:08:14.898] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:14.898] | : . ' , ; ` | : .  list()
[08:08:14.898] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:14.898] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:14.898] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:14.898] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:14.899] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:14.900] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:14.900] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:14.900] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.900] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:14.900] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.900] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.903] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.903] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.904] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.904] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:14.904] | : . ' , ; ` | : New stack:
[08:08:14.904] | : . ' , ; ` | : List of 1
[08:08:14.904] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.904] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.904] | : . ' , ; ` | :     ...)  
[08:08:14.904] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.904] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.904] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.904] | : . ' , ; ` | :     ...)  
[08:08:14.904] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.904] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.909] | : . ' , ; ` | : Old stack:
[08:08:14.909] | : . ' , ; ` | : List of 1
[08:08:14.909] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.909] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.909] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1ac87a8> 
[08:08:14.909] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.909] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.909] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.912] | : . ' , ; ` | : Not identical
[08:08:14.912] | : . ' , ; ` | : all.equal() for future ...
[08:08:14.913] | : . ' , ; ` | : . List of 2
[08:08:14.913] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.913] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.913] | : . ' , ; ` | : .     ...)  
[08:08:14.913] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.913] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.913] | : . ' , ; ` | : .     ...)  
[08:08:14.913] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.913] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.913] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.913] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1ac87a8> 
[08:08:14.913] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.913] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.918] | : . ' , ; ` | : . Formals differ
[08:08:14.918] | : . ' , ; ` | : all.equal() for future ... done
[08:08:14.918] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:14.918] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:14.919] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:14.919] | : . ' , ; ` | List of future strategies:
[08:08:14.919] | : . ' , ; ` | 1. multicore:
[08:08:14.919] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:14.919] | : . ' , ; ` |    - tweaked: FALSE
[08:08:14.919] | : . ' , ; ` |    - call: plan(strategy)
[08:08:14.919] | : . ' , ; ` | List of 1
[08:08:14.919] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.919] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.919] | : . ' , ; ` |     ...)  
[08:08:14.919] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.919] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.919] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.919] | : . ' , ; ` |     ...)  
[08:08:14.919] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.919] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.923] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:14.924] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:14.924] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.924] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.924] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:14.924] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:14.924] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.924] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:14.925] | : readImmediateCondition() ...
[08:08:14.925] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:14.925] | : . Number of RDS files: 0
[08:08:14.926] | : . Returned conditions set:
[08:08:14.926] | : .  list()
[08:08:14.926] | : readImmediateCondition() ... done
[08:08:14.927] | : result() for MulticoreFuture ...
[08:08:14.927] | : result() for MulticoreFuture ... done
[08:08:14.927] | : signalConditions() ...
[08:08:14.927] | : . include = ‘immediateCondition’
[08:08:14.927] | : . exclude = 
[08:08:14.928] | : . resignal = FALSE
[08:08:14.928] | : . Number of conditions: 6
[08:08:14.928] | : .  int 6
[08:08:14.928] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.929] | : signalConditions() ... done
[08:08:14.930] | result() for MulticoreFuture ... done
[08:08:14.930] | result() for MulticoreFuture ...
[08:08:14.930] | result() for MulticoreFuture ... done
[08:08:14.930] | signalConditions() ...
[08:08:14.930] | : include = ‘immediateCondition’
[08:08:14.930] | : exclude = 
[08:08:14.930] | : resignal = FALSE
[08:08:14.930] | : Number of conditions: 6
[08:08:14.931] | :  int 6
[08:08:14.931] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.931] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.931] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.932] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.932] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.932] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.932] | signalConditions() ... done
[08:08:14.932] | relay stdout ...
[08:08:14.932] | relay stdout ... done
[08:08:14.932] | check for misuse ...
[08:08:14.933] | check for misuse ... done
[08:08:14.933] | relay conditions ...
[08:08:14.933] | : Future state: ‘finished’
[08:08:14.933] | : result() for MulticoreFuture ...
[08:08:14.933] | : result() for MulticoreFuture ... done
[08:08:14.933] | : signalConditions() ...
[08:08:14.933] | : . include = ‘condition’
[08:08:14.933] | : . exclude = ‘immediateCondition’
[08:08:14.934] | : . resignal = TRUE
[08:08:14.934] | : . Number of conditions: 6
[08:08:14.934] | : .  int 6
[08:08:14.934] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.934] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.862] | : . ' , attachPackages() ...
[08:08:14.935] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.935] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.862] | : . ' , ; packages: [n=1] ‘future’
[08:08:14.935] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.935] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.863] | : . ' , attachPackages() ... done
[08:08:14.935] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.935] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.863] | : . ' , attachPackages() ...
[08:08:14.936] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.936] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.863] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:14.936] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:14.936] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.863] | : . ' , attachPackages() ... done
[08:08:14.936] | : signalConditions() ... done
[08:08:14.936] | relay conditions ... done
[08:08:14.937] value() for MulticoreFuture (<unnamed-22>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:14.942] future(..., label = NULL) ...
[08:08:14.942] | lazy: FALSE
[08:08:14.942] | stdout: TRUE
[08:08:14.942] | conditions: [n=1] ‘condition’
[08:08:14.943] | gc: FALSE
[08:08:14.943] | earlySignal: FALSE
[08:08:14.943] | getGlobalsAndPackages() ...
[08:08:14.943] | : Searching for globals ...
[08:08:14.959] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:14.959] | : Searching for globals ... done
[08:08:14.959] | : Resolving globals: FALSE
[08:08:14.959] | : Search for packages associated with the globals ...
[08:08:14.959] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:14.960] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:14.960] | : Search for packages associated with the globals ... done
[08:08:14.960] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:14.960] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:14.960] | : globals: [0] 
[08:08:14.960] | : packages: [2] ‘stats’, ‘datasets’
[08:08:14.961] | getGlobalsAndPackages() ... done
[08:08:14.961] | run() for ‘Future’ (<unnamed-23>) ...
[08:08:14.961] | : state: ‘created’
[08:08:14.961] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.961] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.961] | : Using MulticoreFutureBackend ...
[08:08:14.961] | : . Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:14.962] | : . Launching futures ...
[08:08:14.962] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:14.962] | : . ' , getFutureData() ...
[08:08:14.962] | : . ' , ; getFutureCore() ...
[08:08:14.962] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:14.962] | : . ' , ; getFutureCore() ... done
[08:08:14.962] | : . ' , ; getFutureCapture() ...
[08:08:14.962] | : . ' , ; getFutureCapture() ... done
[08:08:14.962] | : . ' , ; getFutureContext() ...
[08:08:14.963] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.963] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:14.963] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.963] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:14.963] | : . ' , ; getFutureContext() ... done
[08:08:14.963] | : . ' , getFutureData() ... done
[08:08:14.963] | : . ' , requestCore(..., workers = 2) ...
[08:08:14.964] | : . ' , requestCore(..., workers = 2) ... done
[08:08:14.966] | : . ' , MulticoreFuture started
[08:08:14.966] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:14.966] | : . Launching futures ... done
[08:08:14.967] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:14.967] | : Using MulticoreFutureBackend ... done
[08:08:14.967] | run() for ‘Future’ (<unnamed-23>) ... done
[08:08:14.968] future(..., label = NULL) ... done
[08:08:14.968] value() for MulticoreFuture (<unnamed-23>) ...
[08:08:14.968] | result() for MulticoreFuture ...
[08:08:14.969] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:14.970] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:14.970] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:14.970] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:14.971] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:14.971] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:14.971] | : . ' , ; ` | New stack:
[08:08:14.971] | : . ' , ; ` | List of 1
[08:08:14.971] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.971] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.971] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:14.971] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.971] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.971] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.971] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.971] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.976] | : . ' , ; ` | Old stack:
[08:08:14.976] | : . ' , ; ` | List of 1
[08:08:14.976] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.976] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.976] | : . ' , ; ` |     ...)  
[08:08:14.976] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:14.976] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.976] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.976] | : . ' , ; ` |     ...)  
[08:08:14.976] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.976] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.982] | : . ' , ; ` | Not identical
[08:08:14.982] | : . ' , ; ` | all.equal() for future ...
[08:08:14.982] | : . ' , ; ` | : List of 2
[08:08:14.982] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.982] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.982] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:14.982] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.982] | : . ' , ; ` | :     ...)  
[08:08:14.982] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:14.982] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:14.982] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:14.982] | : . ' , ; ` | :     ...)  
[08:08:14.982] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:14.994] | : . ' , ; ` | : Formals differ
[08:08:14.995] | : . ' , ; ` | all.equal() for future ... done
[08:08:14.995] | : . ' , ; ` | Future strategies differ at level 1
[08:08:14.995] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:14.995] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:14.995] | : . ' , ; ` List of future strategies:
[08:08:14.995] | : . ' , ; ` 1. sequential:
[08:08:14.995] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:14.995] | : . ' , ; `    - tweaked: FALSE
[08:08:14.995] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.996] | : . ' , ; ` List of 1
[08:08:14.996] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:14.996] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:14.996] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:14.996] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:14.996] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.996] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:14.996] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:14.996] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:14.999] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.000] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.000] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.000] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.000] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.000] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.000] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.000] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.000] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.000] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.000] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.002] | : . ' , ; ` | : init: TRUE
[08:08:15.002] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.002] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.002] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.002] | : . ' , ; ` | : .  list()
[08:08:15.003] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.003] | : . ' , ; ` | : .  list()
[08:08:15.003] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.003] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.003] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.003] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.004] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.005] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.005] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.005] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.005] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.005] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.005] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.008] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.008] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.008] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.009] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.009] | : . ' , ; ` | : New stack:
[08:08:15.009] | : . ' , ; ` | : List of 1
[08:08:15.009] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.009] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.009] | : . ' , ; ` | :     ...)  
[08:08:15.009] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.009] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.009] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.009] | : . ' , ; ` | :     ...)  
[08:08:15.009] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.009] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.014] | : . ' , ; ` | : Old stack:
[08:08:15.014] | : . ' , ; ` | : List of 1
[08:08:15.014] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.014] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.014] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1b61f78> 
[08:08:15.014] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.014] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.014] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.018] | : . ' , ; ` | : Not identical
[08:08:15.018] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.018] | : . ' , ; ` | : . List of 2
[08:08:15.018] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.018] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.018] | : . ' , ; ` | : .     ...)  
[08:08:15.018] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.018] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.018] | : . ' , ; ` | : .     ...)  
[08:08:15.018] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.018] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.018] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.018] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1b61f78> 
[08:08:15.018] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.018] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.023] | : . ' , ; ` | : . Formals differ
[08:08:15.023] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.024] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.024] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.024] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.024] | : . ' , ; ` | List of future strategies:
[08:08:15.024] | : . ' , ; ` | 1. multicore:
[08:08:15.024] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.024] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.024] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.024] | : . ' , ; ` | List of 1
[08:08:15.024] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.024] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.024] | : . ' , ; ` |     ...)  
[08:08:15.024] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.024] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.024] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.024] | : . ' , ; ` |     ...)  
[08:08:15.024] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.024] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.028] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.029] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.029] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.029] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.029] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.029] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.029] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.029] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.030] | : readImmediateCondition() ...
[08:08:15.030] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.031] | : . Number of RDS files: 0
[08:08:15.031] | : . Returned conditions set:
[08:08:15.031] | : .  list()
[08:08:15.031] | : readImmediateCondition() ... done
[08:08:15.032] | : result() for MulticoreFuture ...
[08:08:15.032] | : result() for MulticoreFuture ... done
[08:08:15.032] | : signalConditions() ...
[08:08:15.032] | : . include = ‘immediateCondition’
[08:08:15.033] | : . exclude = 
[08:08:15.033] | : . resignal = FALSE
[08:08:15.033] | : . Number of conditions: 6
[08:08:15.033] | : .  int 6
[08:08:15.034] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.034] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.034] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.034] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.034] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.034] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.035] | : signalConditions() ... done
[08:08:15.035] | result() for MulticoreFuture ... done
[08:08:15.035] | result() for MulticoreFuture ...
[08:08:15.035] | result() for MulticoreFuture ... done
[08:08:15.035] | signalConditions() ...
[08:08:15.035] | : include = ‘immediateCondition’
[08:08:15.035] | : exclude = 
[08:08:15.036] | : resignal = FALSE
[08:08:15.036] | : Number of conditions: 6
[08:08:15.036] | :  int 6
[08:08:15.036] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.036] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.037] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.037] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.037] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.037] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.037] | signalConditions() ... done
[08:08:15.037] | relay stdout ...
[08:08:15.037] | relay stdout ... done
[08:08:15.038] | check for misuse ...
[08:08:15.038] | check for misuse ... done
[08:08:15.038] | relay conditions ...
[08:08:15.038] | : Future state: ‘finished’
[08:08:15.038] | : result() for MulticoreFuture ...
[08:08:15.038] | : result() for MulticoreFuture ... done
[08:08:15.038] | : signalConditions() ...
[08:08:15.039] | : . include = ‘condition’
[08:08:15.039] | : . exclude = ‘immediateCondition’
[08:08:15.039] | : . resignal = TRUE
[08:08:15.039] | : . Number of conditions: 6
[08:08:15.039] | : .  int 6
[08:08:15.040] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.040] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.967] | : . ' , attachPackages() ...
[08:08:15.040] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.040] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.967] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.040] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.040] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.968] | : . ' , attachPackages() ... done
[08:08:15.041] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.041] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.968] | : . ' , attachPackages() ...
[08:08:15.041] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.041] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.968] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:15.041] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.041] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:14.968] | : . ' , attachPackages() ... done
[08:08:15.042] | : signalConditions() ... done
[08:08:15.042] | relay conditions ... done
[08:08:15.042] value() for MulticoreFuture (<unnamed-23>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:15.048] future(..., label = NULL) ...
[08:08:15.048] | lazy: FALSE
[08:08:15.048] | stdout: TRUE
[08:08:15.048] | conditions: [n=1] ‘condition’
[08:08:15.048] | gc: FALSE
[08:08:15.048] | earlySignal: FALSE
[08:08:15.048] | getGlobalsAndPackages() ...
[08:08:15.049] | : Searching for globals ...
[08:08:15.068] | : . globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:15.068] | : Searching for globals ... done
[08:08:15.068] | : Resolving globals: FALSE
[08:08:15.069] | : Search for packages associated with the globals ...
[08:08:15.069] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.069] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.069] | : Search for packages associated with the globals ... done
[08:08:15.070] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:15.070] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:15.070] | : globals: [0] 
[08:08:15.070] | : packages: [2] ‘stats’, ‘datasets’
[08:08:15.070] | getGlobalsAndPackages() ... done
[08:08:15.070] | run() for ‘Future’ (<unnamed-24>) ...
[08:08:15.070] | : state: ‘created’
[08:08:15.071] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.071] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.071] | : Using MulticoreFutureBackend ...
[08:08:15.071] | : . Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:15.071] | : . Launching futures ...
[08:08:15.071] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:15.071] | : . ' , getFutureData() ...
[08:08:15.071] | : . ' , ; getFutureCore() ...
[08:08:15.071] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:15.072] | : . ' , ; getFutureCore() ... done
[08:08:15.072] | : . ' , ; getFutureCapture() ...
[08:08:15.072] | : . ' , ; getFutureCapture() ... done
[08:08:15.072] | : . ' , ; getFutureContext() ...
[08:08:15.072] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.072] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:15.072] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.072] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:15.072] | : . ' , ; getFutureContext() ... done
[08:08:15.073] | : . ' , getFutureData() ... done
[08:08:15.073] | : . ' , requestCore(..., workers = 2) ...
[08:08:15.073] | : . ' , requestCore(..., workers = 2) ... done
[08:08:15.075] | : . ' , MulticoreFuture started
[08:08:15.075] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:15.076] | : . Launching futures ... done
[08:08:15.076] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:15.076] | : Using MulticoreFutureBackend ... done
[08:08:15.076] | run() for ‘Future’ (<unnamed-24>) ... done
[08:08:15.077] future(..., label = NULL) ... done
[08:08:15.077] value() for MulticoreFuture (<unnamed-24>) ...
[08:08:15.077] | result() for MulticoreFuture ...
[08:08:15.078] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.079] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.079] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.079] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.080] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.080] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:15.080] | : . ' , ; ` | New stack:
[08:08:15.080] | : . ' , ; ` | List of 1
[08:08:15.080] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.080] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.080] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:15.080] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.080] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.080] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.080] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.080] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.085] | : . ' , ; ` | Old stack:
[08:08:15.085] | : . ' , ; ` | List of 1
[08:08:15.085] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.085] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.085] | : . ' , ; ` |     ...)  
[08:08:15.085] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.085] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.085] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.085] | : . ' , ; ` |     ...)  
[08:08:15.085] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.085] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.096] | : . ' , ; ` | Not identical
[08:08:15.096] | : . ' , ; ` | all.equal() for future ...
[08:08:15.097] | : . ' , ; ` | : List of 2
[08:08:15.097] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.097] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.097] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.097] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.097] | : . ' , ; ` | :     ...)  
[08:08:15.097] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.097] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.097] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.097] | : . ' , ; ` | :     ...)  
[08:08:15.097] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.105] | : . ' , ; ` | : Formals differ
[08:08:15.105] | : . ' , ; ` | all.equal() for future ... done
[08:08:15.105] | : . ' , ; ` | Future strategies differ at level 1
[08:08:15.105] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:15.105] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:15.105] | : . ' , ; ` List of future strategies:
[08:08:15.105] | : . ' , ; ` 1. sequential:
[08:08:15.105] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:15.105] | : . ' , ; `    - tweaked: FALSE
[08:08:15.105] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.106] | : . ' , ; ` List of 1
[08:08:15.106] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.106] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.106] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:15.106] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.106] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.106] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.106] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.106] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.109] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.109] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.109] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.110] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.110] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.110] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.110] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.110] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.110] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.110] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.110] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.112] | : . ' , ; ` | : init: TRUE
[08:08:15.112] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.112] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.112] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.112] | : . ' , ; ` | : .  list()
[08:08:15.113] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.113] | : . ' , ; ` | : .  list()
[08:08:15.113] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.113] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.113] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.113] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.116] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.116] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.116] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.116] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.116] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.117] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.117] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.120] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.120] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.120] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.120] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.121] | : . ' , ; ` | : New stack:
[08:08:15.121] | : . ' , ; ` | : List of 1
[08:08:15.121] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.121] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.121] | : . ' , ; ` | :     ...)  
[08:08:15.121] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.121] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.121] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.121] | : . ' , ; ` | :     ...)  
[08:08:15.121] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.121] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.124] | : . ' , ; ` | : Old stack:
[08:08:15.124] | : . ' , ; ` | : List of 1
[08:08:15.124] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.124] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.124] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa08a1a40> 
[08:08:15.124] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.124] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.124] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.127] | : . ' , ; ` | : Not identical
[08:08:15.127] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.127] | : . ' , ; ` | : . List of 2
[08:08:15.127] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.127] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.127] | : . ' , ; ` | : .     ...)  
[08:08:15.127] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.127] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.127] | : . ' , ; ` | : .     ...)  
[08:08:15.127] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.127] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.127] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.127] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa08a1a40> 
[08:08:15.127] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.127] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.135] | : . ' , ; ` | : . Formals differ
[08:08:15.135] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.135] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.135] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.135] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.135] | : . ' , ; ` | List of future strategies:
[08:08:15.135] | : . ' , ; ` | 1. multicore:
[08:08:15.135] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.135] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.135] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.135] | : . ' , ; ` | List of 1
[08:08:15.135] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.135] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.135] | : . ' , ; ` |     ...)  
[08:08:15.135] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.135] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.135] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.135] | : . ' , ; ` |     ...)  
[08:08:15.135] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.135] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.139] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.139] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.139] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.139] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.139] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.140] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.140] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.140] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.140] | : readImmediateCondition() ...
[08:08:15.141] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.141] | : . Number of RDS files: 0
[08:08:15.141] | : . Returned conditions set:
[08:08:15.141] | : .  list()
[08:08:15.142] | : readImmediateCondition() ... done
[08:08:15.142] | : result() for MulticoreFuture ...
[08:08:15.143] | : result() for MulticoreFuture ... done
[08:08:15.143] | : signalConditions() ...
[08:08:15.143] | : . include = ‘immediateCondition’
[08:08:15.143] | : . exclude = 
[08:08:15.143] | : . resignal = FALSE
[08:08:15.143] | : . Number of conditions: 6
[08:08:15.143] | : .  int 6
[08:08:15.144] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.144] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.144] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.144] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.145] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.145] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.145] | : signalConditions() ... done
[08:08:15.145] | result() for MulticoreFuture ... done
[08:08:15.145] | result() for MulticoreFuture ...
[08:08:15.145] | result() for MulticoreFuture ... done
[08:08:15.146] | signalConditions() ...
[08:08:15.146] | : include = ‘immediateCondition’
[08:08:15.146] | : exclude = 
[08:08:15.146] | : resignal = FALSE
[08:08:15.146] | : Number of conditions: 6
[08:08:15.146] | :  int 6
[08:08:15.147] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.149] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.149] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.149] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.149] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.150] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.150] | signalConditions() ... done
[08:08:15.150] | relay stdout ...
[08:08:15.150] | relay stdout ... done
[08:08:15.151] | check for misuse ...
[08:08:15.151] | check for misuse ... done
[08:08:15.151] | relay conditions ...
[08:08:15.151] | : Future state: ‘finished’
[08:08:15.151] | : result() for MulticoreFuture ...
[08:08:15.152] | : result() for MulticoreFuture ... done
[08:08:15.152] | : signalConditions() ...
[08:08:15.152] | : . include = ‘condition’
[08:08:15.152] | : . exclude = ‘immediateCondition’
[08:08:15.152] | : . resignal = TRUE
[08:08:15.153] | : . Number of conditions: 6
[08:08:15.153] | : .  int 6
[08:08:15.153] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.153] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.076] | : . ' , attachPackages() ...
[08:08:15.154] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.154] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.076] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.154] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.154] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.077] | : . ' , attachPackages() ... done
[08:08:15.155] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.155] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.077] | : . ' , attachPackages() ...
[08:08:15.155] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.155] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.077] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:15.155] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.156] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.077] | : . ' , attachPackages() ... done
[08:08:15.156] | : signalConditions() ... done
[08:08:15.156] | relay conditions ... done
[08:08:15.156] value() for MulticoreFuture (<unnamed-24>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:15.159] future(..., label = NULL) ...
[08:08:15.160] | lazy: FALSE
[08:08:15.160] | stdout: TRUE
[08:08:15.160] | conditions: [n=1] ‘condition’
[08:08:15.160] | gc: FALSE
[08:08:15.160] | earlySignal: FALSE
[08:08:15.160] | getGlobalsAndPackages() ...
[08:08:15.160] | : Searching for globals ...
[08:08:15.180] | : . globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:15.180] | : Searching for globals ... done
[08:08:15.181] | : Resolving globals: FALSE
[08:08:15.181] | : Search for packages associated with the globals ...
[08:08:15.181] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.181] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.181] | : Search for packages associated with the globals ... done
[08:08:15.182] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:15.182] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:15.182] | : globals: [0] 
[08:08:15.182] | : packages: [2] ‘stats’, ‘datasets’
[08:08:15.182] | getGlobalsAndPackages() ... done
[08:08:15.183] | run() for ‘Future’ (<unnamed-25>) ...
[08:08:15.183] | : state: ‘created’
[08:08:15.184] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.184] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.184] | : Using MulticoreFutureBackend ...
[08:08:15.184] | : . Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:15.184] | : . Launching futures ...
[08:08:15.184] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:15.184] | : . ' , getFutureData() ...
[08:08:15.184] | : . ' , ; getFutureCore() ...
[08:08:15.184] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:15.185] | : . ' , ; getFutureCore() ... done
[08:08:15.185] | : . ' , ; getFutureCapture() ...
[08:08:15.185] | : . ' , ; getFutureCapture() ... done
[08:08:15.185] | : . ' , ; getFutureContext() ...
[08:08:15.185] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.185] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:15.185] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.185] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:15.185] | : . ' , ; getFutureContext() ... done
[08:08:15.186] | : . ' , getFutureData() ... done
[08:08:15.186] | : . ' , requestCore(..., workers = 2) ...
[08:08:15.186] | : . ' , requestCore(..., workers = 2) ... done
[08:08:15.188] | : . ' , MulticoreFuture started
[08:08:15.189] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:15.190] | : . Launching futures ... done
[08:08:15.190] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:15.191] | : Using MulticoreFutureBackend ... done
[08:08:15.191] | run() for ‘Future’ (<unnamed-25>) ... done
[08:08:15.192] future(..., label = NULL) ... done
[08:08:15.192] value() for MulticoreFuture (<unnamed-25>) ...
[08:08:15.193] | result() for MulticoreFuture ...
[08:08:15.194] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.194] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.195] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.195] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.196] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.196] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:15.196] | : . ' , ; ` | New stack:
[08:08:15.197] | : . ' , ; ` | List of 1
[08:08:15.197] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.197] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.197] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:15.197] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.197] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.197] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.197] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.197] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.202] | : . ' , ; ` | Old stack:
[08:08:15.202] | : . ' , ; ` | List of 1
[08:08:15.202] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.202] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.202] | : . ' , ; ` |     ...)  
[08:08:15.202] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.202] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.202] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.202] | : . ' , ; ` |     ...)  
[08:08:15.202] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.202] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.207] | : . ' , ; ` | Not identical
[08:08:15.207] | : . ' , ; ` | all.equal() for future ...
[08:08:15.207] | : . ' , ; ` | : List of 2
[08:08:15.207] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.207] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.207] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.207] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.207] | : . ' , ; ` | :     ...)  
[08:08:15.207] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.207] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.207] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.207] | : . ' , ; ` | :     ...)  
[08:08:15.207] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.216] | : . ' , ; ` | : Formals differ
[08:08:15.217] | : . ' , ; ` | all.equal() for future ... done
[08:08:15.217] | : . ' , ; ` | Future strategies differ at level 1
[08:08:15.217] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:15.217] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:15.217] | : . ' , ; ` List of future strategies:
[08:08:15.217] | : . ' , ; ` 1. sequential:
[08:08:15.217] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:15.217] | : . ' , ; `    - tweaked: FALSE
[08:08:15.217] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.218] | : . ' , ; ` List of 1
[08:08:15.218] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.218] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.218] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:15.218] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.218] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.218] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.218] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.218] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.221] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.221] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.222] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.222] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.222] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.222] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.222] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.222] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.222] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.222] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.222] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.224] | : . ' , ; ` | : init: TRUE
[08:08:15.224] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.224] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.224] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.224] | : . ' , ; ` | : .  list()
[08:08:15.225] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.225] | : . ' , ; ` | : .  list()
[08:08:15.225] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.225] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.225] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.225] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.226] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.226] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.226] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.227] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.227] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.227] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.227] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.230] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.230] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.230] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.231] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.231] | : . ' , ; ` | : New stack:
[08:08:15.231] | : . ' , ; ` | : List of 1
[08:08:15.231] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.231] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.231] | : . ' , ; ` | :     ...)  
[08:08:15.231] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.231] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.231] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.231] | : . ' , ; ` | :     ...)  
[08:08:15.231] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.231] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.234] | : . ' , ; ` | : Old stack:
[08:08:15.234] | : . ' , ; ` | : List of 1
[08:08:15.234] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.234] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.234] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0c7e210> 
[08:08:15.234] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.234] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.234] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.279] | : . ' , ; ` | : Not identical
[08:08:15.279] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.279] | : . ' , ; ` | : . List of 2
[08:08:15.279] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.279] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.279] | : . ' , ; ` | : .     ...)  
[08:08:15.279] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.279] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.279] | : . ' , ; ` | : .     ...)  
[08:08:15.279] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.279] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.279] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.279] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa0c7e210> 
[08:08:15.279] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.279] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.285] | : . ' , ; ` | : . Formals differ
[08:08:15.285] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.285] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.285] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.285] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.286] | : . ' , ; ` | List of future strategies:
[08:08:15.286] | : . ' , ; ` | 1. multicore:
[08:08:15.286] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.286] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.286] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.286] | : . ' , ; ` | List of 1
[08:08:15.286] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.286] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.286] | : . ' , ; ` |     ...)  
[08:08:15.286] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.286] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.286] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.286] | : . ' , ; ` |     ...)  
[08:08:15.286] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.286] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.289] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.289] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.289] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.289] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.290] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.290] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.290] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.290] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.291] | : readImmediateCondition() ...
[08:08:15.291] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.291] | : . Number of RDS files: 0
[08:08:15.292] | : . Returned conditions set:
[08:08:15.292] | : .  list()
[08:08:15.292] | : readImmediateCondition() ... done
[08:08:15.293] | : result() for MulticoreFuture ...
[08:08:15.293] | : result() for MulticoreFuture ... done
[08:08:15.293] | : signalConditions() ...
[08:08:15.293] | : . include = ‘immediateCondition’
[08:08:15.293] | : . exclude = 
[08:08:15.294] | : . resignal = FALSE
[08:08:15.294] | : . Number of conditions: 6
[08:08:15.294] | : .  int 6
[08:08:15.295] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.295] | : signalConditions() ... done
[08:08:15.296] | result() for MulticoreFuture ... done
[08:08:15.296] | result() for MulticoreFuture ...
[08:08:15.296] | result() for MulticoreFuture ... done
[08:08:15.296] | signalConditions() ...
[08:08:15.296] | : include = ‘immediateCondition’
[08:08:15.296] | : exclude = 
[08:08:15.296] | : resignal = FALSE
[08:08:15.297] | : Number of conditions: 6
[08:08:15.297] | :  int 6
[08:08:15.297] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.297] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.297] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.298] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.298] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.298] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.298] | signalConditions() ... done
[08:08:15.298] | relay stdout ...
[08:08:15.298] | relay stdout ... done
[08:08:15.298] | check for misuse ...
[08:08:15.299] | check for misuse ... done
[08:08:15.299] | relay conditions ...
[08:08:15.299] | : Future state: ‘finished’
[08:08:15.299] | : result() for MulticoreFuture ...
[08:08:15.299] | : result() for MulticoreFuture ... done
[08:08:15.299] | : signalConditions() ...
[08:08:15.299] | : . include = ‘condition’
[08:08:15.299] | : . exclude = ‘immediateCondition’
[08:08:15.300] | : . resignal = TRUE
[08:08:15.300] | : . Number of conditions: 6
[08:08:15.300] | : .  int 6
[08:08:15.300] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.300] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.189] | : . ' , attachPackages() ...
[08:08:15.301] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.301] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.190] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.301] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.301] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.191] | : . ' , attachPackages() ... done
[08:08:15.301] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.301] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.192] | : . ' , attachPackages() ...
[08:08:15.301] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.302] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.192] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:15.302] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.302] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.193] | : . ' , attachPackages() ... done
[08:08:15.302] | : signalConditions() ... done
[08:08:15.302] | relay conditions ... done
[08:08:15.302] value() for MulticoreFuture (<unnamed-25>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:15.306] future(..., label = NULL) ...
[08:08:15.306] | lazy: FALSE
[08:08:15.306] | stdout: TRUE
[08:08:15.306] | conditions: [n=1] ‘condition’
[08:08:15.306] | gc: FALSE
[08:08:15.307] | earlySignal: FALSE
[08:08:15.307] | getGlobalsAndPackages() ...
[08:08:15.307] | : Searching for globals ...
[08:08:15.323] | : . globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:15.323] | : Searching for globals ... done
[08:08:15.323] | : Resolving globals: FALSE
[08:08:15.323] | : Search for packages associated with the globals ...
[08:08:15.324] | : . Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.359] | : . Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:15.360] | : Search for packages associated with the globals ... done
[08:08:15.360] | : Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:15.360] | : Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:15.360] | : globals: [0] 
[08:08:15.360] | : packages: [2] ‘stats’, ‘datasets’
[08:08:15.360] | getGlobalsAndPackages() ... done
[08:08:15.361] | run() for ‘Future’ (<unnamed-26>) ...
[08:08:15.361] | : state: ‘created’
[08:08:15.361] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.361] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.361] | : Using MulticoreFutureBackend ...
[08:08:15.361] | : . Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:15.361] | : . Launching futures ...
[08:08:15.361] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:15.362] | : . ' , getFutureData() ...
[08:08:15.362] | : . ' , ; getFutureCore() ...
[08:08:15.362] | : . ' , ; ` Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:15.362] | : . ' , ; getFutureCore() ... done
[08:08:15.362] | : . ' , ; getFutureCapture() ...
[08:08:15.362] | : . ' , ; getFutureCapture() ... done
[08:08:15.362] | : . ' , ; getFutureContext() ...
[08:08:15.362] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.362] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:15.362] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.363] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:15.363] | : . ' , ; getFutureContext() ... done
[08:08:15.363] | : . ' , getFutureData() ... done
[08:08:15.363] | : . ' , requestCore(..., workers = 2) ...
[08:08:15.363] | : . ' , requestCore(..., workers = 2) ... done
[08:08:15.365] | : . ' , MulticoreFuture started
[08:08:15.366] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:15.366] | : . Launching futures ... done
[08:08:15.366] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:15.366] | : Using MulticoreFutureBackend ... done
[08:08:15.367] | run() for ‘Future’ (<unnamed-26>) ... done
[08:08:15.367] future(..., label = NULL) ... done
[08:08:15.367] value() for MulticoreFuture (<unnamed-26>) ...
[08:08:15.367] | result() for MulticoreFuture ...
[08:08:15.369] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.369] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.369] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.370] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.370] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.370] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:15.370] | : . ' , ; ` | New stack:
[08:08:15.370] | : . ' , ; ` | List of 1
[08:08:15.370] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.370] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.370] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:15.370] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.370] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.370] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.370] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.370] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.375] | : . ' , ; ` | Old stack:
[08:08:15.375] | : . ' , ; ` | List of 1
[08:08:15.375] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.375] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.375] | : . ' , ; ` |     ...)  
[08:08:15.375] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.375] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.375] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.375] | : . ' , ; ` |     ...)  
[08:08:15.375] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.375] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.380] | : . ' , ; ` | Not identical
[08:08:15.381] | : . ' , ; ` | all.equal() for future ...
[08:08:15.381] | : . ' , ; ` | : List of 2
[08:08:15.381] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.381] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.381] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.381] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.381] | : . ' , ; ` | :     ...)  
[08:08:15.381] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.381] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.381] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.381] | : . ' , ; ` | :     ...)  
[08:08:15.381] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.389] | : . ' , ; ` | : Formals differ
[08:08:15.389] | : . ' , ; ` | all.equal() for future ... done
[08:08:15.389] | : . ' , ; ` | Future strategies differ at level 1
[08:08:15.389] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:15.390] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:15.390] | : . ' , ; ` List of future strategies:
[08:08:15.390] | : . ' , ; ` 1. sequential:
[08:08:15.390] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:15.390] | : . ' , ; `    - tweaked: FALSE
[08:08:15.390] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.390] | : . ' , ; ` List of 1
[08:08:15.390] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.390] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.390] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:15.390] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.390] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.390] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.390] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.390] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.395] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.395] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.395] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.396] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.396] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.396] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.396] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.396] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.396] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.396] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.396] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.399] | : . ' , ; ` | : init: TRUE
[08:08:15.399] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.399] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.400] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.400] | : . ' , ; ` | : .  list()
[08:08:15.400] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.400] | : . ' , ; ` | : .  list()
[08:08:15.401] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.401] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.401] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.401] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.402] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.403] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.403] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.403] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.403] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.403] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.403] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.408] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.408] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.408] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.408] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.408] | : . ' , ; ` | : New stack:
[08:08:15.409] | : . ' , ; ` | : List of 1
[08:08:15.409] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.409] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.409] | : . ' , ; ` | :     ...)  
[08:08:15.409] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.409] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.409] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.409] | : . ' , ; ` | :     ...)  
[08:08:15.409] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.409] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.413] | : . ' , ; ` | : Old stack:
[08:08:15.413] | : . ' , ; ` | : List of 1
[08:08:15.413] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.413] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.413] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa30108e0> 
[08:08:15.413] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.413] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.413] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.418] | : . ' , ; ` | : Not identical
[08:08:15.418] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.418] | : . ' , ; ` | : . List of 2
[08:08:15.418] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.418] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.418] | : . ' , ; ` | : .     ...)  
[08:08:15.418] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.418] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.418] | : . ' , ; ` | : .     ...)  
[08:08:15.418] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.418] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.418] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.418] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa30108e0> 
[08:08:15.418] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.418] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.426] | : . ' , ; ` | : . Formals differ
[08:08:15.426] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.426] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.426] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.426] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.427] | : . ' , ; ` | List of future strategies:
[08:08:15.427] | : . ' , ; ` | 1. multicore:
[08:08:15.427] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.427] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.427] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.427] | : . ' , ; ` | List of 1
[08:08:15.427] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.427] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.427] | : . ' , ; ` |     ...)  
[08:08:15.427] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.427] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.427] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.427] | : . ' , ; ` |     ...)  
[08:08:15.427] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.427] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.432] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.432] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.432] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.432] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.432] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.433] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.433] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.433] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.434] | : readImmediateCondition() ...
[08:08:15.434] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.434] | : . Number of RDS files: 0
[08:08:15.434] | : . Returned conditions set:
[08:08:15.434] | : .  list()
[08:08:15.435] | : readImmediateCondition() ... done
[08:08:15.435] | : result() for MulticoreFuture ...
[08:08:15.436] | : result() for MulticoreFuture ... done
[08:08:15.436] | : signalConditions() ...
[08:08:15.436] | : . include = ‘immediateCondition’
[08:08:15.436] | : . exclude = 
[08:08:15.436] | : . resignal = FALSE
[08:08:15.436] | : . Number of conditions: 6
[08:08:15.436] | : .  int 6
[08:08:15.437] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.437] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.437] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.437] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.437] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.438] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.438] | : signalConditions() ... done
[08:08:15.438] | result() for MulticoreFuture ... done
[08:08:15.438] | result() for MulticoreFuture ...
[08:08:15.438] | result() for MulticoreFuture ... done
[08:08:15.438] | signalConditions() ...
[08:08:15.438] | : include = ‘immediateCondition’
[08:08:15.439] | : exclude = 
[08:08:15.439] | : resignal = FALSE
[08:08:15.439] | : Number of conditions: 6
[08:08:15.439] | :  int 6
[08:08:15.439] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.440] | signalConditions() ... done
[08:08:15.440] | relay stdout ...
[08:08:15.441] | relay stdout ... done
[08:08:15.441] | check for misuse ...
[08:08:15.441] | check for misuse ... done
[08:08:15.441] | relay conditions ...
[08:08:15.441] | : Future state: ‘finished’
[08:08:15.441] | : result() for MulticoreFuture ...
[08:08:15.441] | : result() for MulticoreFuture ... done
[08:08:15.441] | : signalConditions() ...
[08:08:15.442] | : . include = ‘condition’
[08:08:15.442] | : . exclude = ‘immediateCondition’
[08:08:15.442] | : . resignal = TRUE
[08:08:15.442] | : . Number of conditions: 6
[08:08:15.442] | : .  int 6
[08:08:15.443] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.443] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.366] | : . ' , attachPackages() ...
[08:08:15.443] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.443] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.367] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.443] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.443] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.367] | : . ' , attachPackages() ... done
[08:08:15.443] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.444] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.367] | : . ' , attachPackages() ...
[08:08:15.444] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.444] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.367] | : . ' , ; packages: [n=2] ‘stats’, ‘datasets’
[08:08:15.444] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.444] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.368] | : . ' , attachPackages() ... done
[08:08:15.444] | : signalConditions() ... done
[08:08:15.445] | relay conditions ... done
[08:08:15.445] value() for MulticoreFuture (<unnamed-26>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:15.447] future(..., label = NULL) ...
[08:08:15.447] | lazy: FALSE
[08:08:15.447] | stdout: TRUE
[08:08:15.447] | conditions: [n=1] ‘condition’
[08:08:15.448] | gc: FALSE
[08:08:15.448] | earlySignal: FALSE
[08:08:15.448] | getGlobalsAndPackages() ...
[08:08:15.448] | : Searching for globals ...
[08:08:15.491] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:15.492] | : Searching for globals ... done
[08:08:15.492] | : Resolving globals: FALSE
[08:08:15.492] | : Search for packages associated with the globals ...
[08:08:15.492] | : . Packages associated with globals: [1] ‘base’
[08:08:15.493] | : . Packages: [1] ‘base’
[08:08:15.493] | : Search for packages associated with the globals ... done
[08:08:15.493] | : Packages after dropping 'base': [0] 
[08:08:15.493] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:15.494] | : packages: [0] 
[08:08:15.494] | getGlobalsAndPackages() ... done
[08:08:15.494] | run() for ‘Future’ (<unnamed-27>) ...
[08:08:15.494] | : state: ‘created’
[08:08:15.494] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.494] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.495] | : Using MulticoreFutureBackend ...
[08:08:15.495] | : . Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:15.495] | : . Launching futures ...
[08:08:15.495] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:15.495] | : . ' , getFutureData() ...
[08:08:15.495] | : . ' , ; getFutureCore() ...
[08:08:15.496] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:15.496] | : . ' , ; getFutureCore() ... done
[08:08:15.496] | : . ' , ; getFutureCapture() ...
[08:08:15.496] | : . ' , ; getFutureCapture() ... done
[08:08:15.496] | : . ' , ; getFutureContext() ...
[08:08:15.496] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.496] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:15.497] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.497] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:15.497] | : . ' , ; getFutureContext() ... done
[08:08:15.497] | : . ' , getFutureData() ... done
[08:08:15.497] | : . ' , requestCore(..., workers = 2) ...
[08:08:15.497] | : . ' , requestCore(..., workers = 2) ... done
[08:08:15.500] | : . ' , MulticoreFuture started
[08:08:15.500] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:15.501] | : . Launching futures ... done
[08:08:15.501] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:15.501] | : Using MulticoreFutureBackend ... done
[08:08:15.501] | run() for ‘Future’ (<unnamed-27>) ... done
[08:08:15.501] future(..., label = NULL) ... done
[08:08:15.502] value() for MulticoreFuture (<unnamed-27>) ...
[08:08:15.502] | result() for MulticoreFuture ...
[08:08:15.503] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.503] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.504] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.504] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.504] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.505] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:15.505] | : . ' , ; ` | New stack:
[08:08:15.505] | : . ' , ; ` | List of 1
[08:08:15.505] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.505] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.505] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:15.505] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.505] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.505] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.505] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.505] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.509] | : . ' , ; ` | Old stack:
[08:08:15.509] | : . ' , ; ` | List of 1
[08:08:15.509] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.509] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.509] | : . ' , ; ` |     ...)  
[08:08:15.509] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.509] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.509] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.509] | : . ' , ; ` |     ...)  
[08:08:15.509] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.509] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.514] | : . ' , ; ` | Not identical
[08:08:15.514] | : . ' , ; ` | all.equal() for future ...
[08:08:15.514] | : . ' , ; ` | : List of 2
[08:08:15.514] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.514] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.514] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.514] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.514] | : . ' , ; ` | :     ...)  
[08:08:15.514] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.514] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.514] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.514] | : . ' , ; ` | :     ...)  
[08:08:15.514] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.521] | : . ' , ; ` | : Formals differ
[08:08:15.521] | : . ' , ; ` | all.equal() for future ... done
[08:08:15.521] | : . ' , ; ` | Future strategies differ at level 1
[08:08:15.521] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:15.521] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:15.521] | : . ' , ; ` List of future strategies:
[08:08:15.521] | : . ' , ; ` 1. sequential:
[08:08:15.521] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:15.521] | : . ' , ; `    - tweaked: FALSE
[08:08:15.521] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.522] | : . ' , ; ` List of 1
[08:08:15.522] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.522] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.522] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:15.522] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.522] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.522] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.522] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.522] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.528] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.528] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.529] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.529] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.529] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.529] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.529] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.529] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.529] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.529] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.529] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.532] | : . ' , ; ` | : init: TRUE
[08:08:15.532] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.532] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.532] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.532] | : . ' , ; ` | : .  list()
[08:08:15.533] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.533] | : . ' , ; ` | : .  list()
[08:08:15.533] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.533] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.533] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.533] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.535] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.535] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.535] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.535] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.536] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.536] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.536] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.536] | : . ' , assign_globals() ...
[08:08:15.536] | : . ' , List of 3
[08:08:15.536] | : . ' ,  $ outer_function:function (x)  
[08:08:15.536] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:15.536] | : . ' ,  $ inner_function:function (x)  
[08:08:15.536] | : . ' ,  - attr(*, "where")=List of 3
[08:08:15.536] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:15.536] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:15.536] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:15.536] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:15.536] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:15.536] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:15.536] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:15.542] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:15.542] | : . ' , - copied ‘outer_function’ to environment
[08:08:15.542] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:15.542] | : . ' , - copied ‘map’ to environment
[08:08:15.542] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:15.543] | : . ' , - copied ‘inner_function’ to environment
[08:08:15.543] | : . ' , assign_globals() ... done
[08:08:15.546] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.546] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.546] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.546] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.547] | : . ' , ; ` | : New stack:
[08:08:15.547] | : . ' , ; ` | : List of 1
[08:08:15.547] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.547] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.547] | : . ' , ; ` | :     ...)  
[08:08:15.547] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.547] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.547] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.547] | : . ' , ; ` | :     ...)  
[08:08:15.547] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.547] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.552] | : . ' , ; ` | : Old stack:
[08:08:15.552] | : . ' , ; ` | : List of 1
[08:08:15.552] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.552] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.552] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa250b588> 
[08:08:15.552] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.552] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.552] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.557] | : . ' , ; ` | : Not identical
[08:08:15.557] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.558] | : . ' , ; ` | : . List of 2
[08:08:15.558] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.558] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.558] | : . ' , ; ` | : .     ...)  
[08:08:15.558] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.558] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.558] | : . ' , ; ` | : .     ...)  
[08:08:15.558] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.558] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.558] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.558] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa250b588> 
[08:08:15.558] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.558] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.566] | : . ' , ; ` | : . Formals differ
[08:08:15.566] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.566] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.567] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.567] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.567] | : . ' , ; ` | List of future strategies:
[08:08:15.567] | : . ' , ; ` | 1. multicore:
[08:08:15.567] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.567] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.567] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.567] | : . ' , ; ` | List of 1
[08:08:15.567] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.567] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.567] | : . ' , ; ` |     ...)  
[08:08:15.567] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.567] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.567] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.567] | : . ' , ; ` |     ...)  
[08:08:15.567] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.567] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.572] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.572] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.572] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.572] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.573] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.573] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.573] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.573] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.574] | : readImmediateCondition() ...
[08:08:15.574] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.574] | : . Number of RDS files: 0
[08:08:15.574] | : . Returned conditions set:
[08:08:15.575] | : .  list()
[08:08:15.575] | : readImmediateCondition() ... done
[08:08:15.576] | : result() for MulticoreFuture ...
[08:08:15.576] | : result() for MulticoreFuture ... done
[08:08:15.576] | : signalConditions() ...
[08:08:15.576] | : . include = ‘immediateCondition’
[08:08:15.576] | : . exclude = 
[08:08:15.576] | : . resignal = FALSE
[08:08:15.576] | : . Number of conditions: 6
[08:08:15.576] | : .  int 6
[08:08:15.577] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.577] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.577] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.578] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.578] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.578] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.578] | : signalConditions() ... done
[08:08:15.578] | result() for MulticoreFuture ... done
[08:08:15.578] | result() for MulticoreFuture ...
[08:08:15.578] | result() for MulticoreFuture ... done
[08:08:15.579] | signalConditions() ...
[08:08:15.579] | : include = ‘immediateCondition’
[08:08:15.579] | : exclude = 
[08:08:15.579] | : resignal = FALSE
[08:08:15.579] | : Number of conditions: 6
[08:08:15.579] | :  int 6
[08:08:15.580] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.580] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.580] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.580] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.580] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.580] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.581] | signalConditions() ... done
[08:08:15.581] | relay stdout ...
[08:08:15.581] | relay stdout ... done
[08:08:15.581] | check for misuse ...
[08:08:15.581] | check for misuse ... done
[08:08:15.581] | relay conditions ...
[08:08:15.581] | : Future state: ‘finished’
[08:08:15.582] | : result() for MulticoreFuture ...
[08:08:15.582] | : result() for MulticoreFuture ... done
[08:08:15.582] | : signalConditions() ...
[08:08:15.582] | : . include = ‘condition’
[08:08:15.582] | : . exclude = ‘immediateCondition’
[08:08:15.582] | : . resignal = TRUE
[08:08:15.582] | : . Number of conditions: 6
[08:08:15.582] | : .  int 6
[08:08:15.583] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.583] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.501] | : . ' , attachPackages() ...
[08:08:15.583] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.583] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.501] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.584] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.584] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.502] | : . ' , attachPackages() ... done
[08:08:15.584] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.584] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.502] | : . ' , attachPackages() ...
[08:08:15.584] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.584] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.502] | : . ' , ; packages: [n=0] 
[08:08:15.585] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.585] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.502] | : . ' , attachPackages() ... done
[08:08:15.585] | : signalConditions() ... done
[08:08:15.585] | relay conditions ... done
[08:08:15.585] value() for MulticoreFuture (<unnamed-27>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:15.587] future(..., label = NULL) ...
[08:08:15.587] | lazy: FALSE
[08:08:15.587] | stdout: TRUE
[08:08:15.587] | conditions: [n=1] ‘condition’
[08:08:15.587] | gc: FALSE
[08:08:15.587] | earlySignal: FALSE
[08:08:15.588] | getGlobalsAndPackages() ...
[08:08:15.588] | : Searching for globals ...
[08:08:15.630] | : . globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:15.630] | : Searching for globals ... done
[08:08:15.631] | : Resolving globals: FALSE
[08:08:15.631] | : Search for packages associated with the globals ...
[08:08:15.631] | : . Packages associated with globals: [1] ‘base’
[08:08:15.632] | : . Packages: [1] ‘base’
[08:08:15.632] | : Search for packages associated with the globals ... done
[08:08:15.632] | : Packages after dropping 'base': [0] 
[08:08:15.632] | : globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:15.632] | : packages: [0] 
[08:08:15.632] | getGlobalsAndPackages() ... done
[08:08:15.633] | run() for ‘Future’ (<unnamed-28>) ...
[08:08:15.633] | : state: ‘created’
[08:08:15.633] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.633] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.633] | : Using MulticoreFutureBackend ...
[08:08:15.633] | : . Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:15.633] | : . Launching futures ...
[08:08:15.634] | : . ' launchFuture() for MulticoreFutureBackend ...
[08:08:15.634] | : . ' , getFutureData() ...
[08:08:15.634] | : . ' , ; getFutureCore() ...
[08:08:15.634] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:08:15.634] | : . ' , ; getFutureCore() ... done
[08:08:15.634] | : . ' , ; getFutureCapture() ...
[08:08:15.634] | : . ' , ; getFutureCapture() ... done
[08:08:15.635] | : . ' , ; getFutureContext() ...
[08:08:15.635] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.635] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:08:15.635] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.635] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:08:15.635] | : . ' , ; getFutureContext() ... done
[08:08:15.635] | : . ' , getFutureData() ... done
[08:08:15.636] | : . ' , requestCore(..., workers = 2) ...
[08:08:15.636] | : . ' , requestCore(..., workers = 2) ... done
[08:08:15.638] | : . ' , MulticoreFuture started
[08:08:15.639] | : . ' launchFuture() for MulticoreFutureBackend ... done
[08:08:15.639] | : . Launching futures ... done
[08:08:15.639] | : . Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:15.639] | : Using MulticoreFutureBackend ... done
[08:08:15.640] | run() for ‘Future’ (<unnamed-28>) ... done
[08:08:15.640] future(..., label = NULL) ... done
[08:08:15.640] value() for MulticoreFuture (<unnamed-28>) ...
[08:08:15.640] | result() for MulticoreFuture ...
[08:08:15.642] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.642] | : . ' , ; Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.642] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.643] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.643] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.643] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:08:15.643] | : . ' , ; ` | New stack:
[08:08:15.643] | : . ' , ; ` | List of 1
[08:08:15.643] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.643] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.643] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:08:15.643] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.643] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.643] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.643] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.643] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.648] | : . ' , ; ` | Old stack:
[08:08:15.648] | : . ' , ; ` | List of 1
[08:08:15.648] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.648] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.648] | : . ' , ; ` |     ...)  
[08:08:15.648] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.648] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.648] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.648] | : . ' , ; ` |     ...)  
[08:08:15.648] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.648] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.653] | : . ' , ; ` | Not identical
[08:08:15.653] | : . ' , ; ` | all.equal() for future ...
[08:08:15.653] | : . ' , ; ` | : List of 2
[08:08:15.653] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.653] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.653] | : . ' , ; ` | :  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.653] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.653] | : . ' , ; ` | :     ...)  
[08:08:15.653] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.653] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.653] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.653] | : . ' , ; ` | :     ...)  
[08:08:15.653] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.660] | : . ' , ; ` | : Formals differ
[08:08:15.660] | : . ' , ; ` | all.equal() for future ... done
[08:08:15.660] | : . ' , ; ` | Future strategies differ at level 1
[08:08:15.660] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:08:15.661] | : . ' , ; ` plan(): Setting new future backend stack:
[08:08:15.661] | : . ' , ; ` List of future strategies:
[08:08:15.661] | : . ' , ; ` 1. sequential:
[08:08:15.661] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:15.661] | : . ' , ; `    - tweaked: FALSE
[08:08:15.661] | : . ' , ; `    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.661] | : . ' , ; ` List of 1
[08:08:15.661] | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.661] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.661] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:08:15.661] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.661] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.661] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.661] | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.661] | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.665] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.665] | : . ' , ; ` plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.665] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.666] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:15.666] | : . ' , ; ` | : function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.666] | : . ' , ; ` | :  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.666] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:08:15.666] | : . ' , ; ` | :  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.666] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.666] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.666] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.669] | : . ' , ; ` | : init: TRUE
[08:08:15.669] | : . ' , ; ` | : makeFutureBackend(<sequential>) ...
[08:08:15.669] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:08:15.669] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:08:15.669] | : . ' , ; ` | : .  list()
[08:08:15.670] | : . ' , ; ` | : . Evaluator formal arguments: [n=2]
[08:08:15.670] | : . ' , ; ` | : .  list()
[08:08:15.670] | : . ' , ; ` | : . Backend factory arguments: [n=2]
[08:08:15.670] | : . ' , ; ` | : . Dotted pair list of 2
[08:08:15.670] | : . ' , ; ` | : .  $ gc         : logi FALSE
[08:08:15.670] | : . ' , ; ` | : .  $ earlySignal: logi FALSE
[08:08:15.672] | : . ' , ; ` | : . Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:15.672] | : . ' , ; ` | : makeFutureBackend(<sequential>) ... done
[08:08:15.672] | : . ' , ; ` | plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:15.672] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.672] | : . ' , ; ` plan(): nbrOfWorkers() = 1
[08:08:15.673] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.673] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.673] | : . ' , assign_globals() ...
[08:08:15.673] | : . ' , List of 3
[08:08:15.673] | : . ' ,  $ outer_function:function (x)  
[08:08:15.673] | : . ' ,  $ map           :function (.x, .f, ...)  
[08:08:15.673] | : . ' ,  $ inner_function:function (x)  
[08:08:15.673] | : . ' ,  - attr(*, "where")=List of 3
[08:08:15.673] | : . ' ,   ..$ outer_function:<environment: R_GlobalEnv> 
[08:08:15.673] | : . ' ,   ..$ map           :<environment: R_GlobalEnv> 
[08:08:15.673] | : . ' ,   ..$ inner_function:<environment: R_GlobalEnv> 
[08:08:15.673] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:08:15.673] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:08:15.673] | : . ' ,  - attr(*, "total_size")= num NA
[08:08:15.673] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:08:15.678] | : . ' , - reassign environment for ‘outer_function’ [where=globalenv()]
[08:08:15.678] | : . ' , - copied ‘outer_function’ to environment
[08:08:15.678] | : . ' , - reassign environment for ‘map’ [where=globalenv()]
[08:08:15.679] | : . ' , - copied ‘map’ to environment
[08:08:15.679] | : . ' , - reassign environment for ‘inner_function’ [where=globalenv()]
[08:08:15.679] | : . ' , - copied ‘inner_function’ to environment
[08:08:15.679] | : . ' , assign_globals() ... done
[08:08:15.682] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.682] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:08:15.683] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:08:15.683] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:08:15.683] | : . ' , ; ` | : New stack:
[08:08:15.683] | : . ' , ; ` | : List of 1
[08:08:15.683] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.683] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.683] | : . ' , ; ` | :     ...)  
[08:08:15.683] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.683] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.683] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.683] | : . ' , ; ` | :     ...)  
[08:08:15.683] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.683] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.688] | : . ' , ; ` | : Old stack:
[08:08:15.688] | : . ' , ; ` | : List of 1
[08:08:15.688] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.688] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.688] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa445e058> 
[08:08:15.688] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.688] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.688] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.694] | : . ' , ; ` | : Not identical
[08:08:15.695] | : . ' , ; ` | : all.equal() for future ...
[08:08:15.695] | : . ' , ; ` | : . List of 2
[08:08:15.695] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.695] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.695] | : . ' , ; ` | : .     ...)  
[08:08:15.695] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.695] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.695] | : . ' , ; ` | : .     ...)  
[08:08:15.695] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.695] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.695] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:08:15.695] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa445e058> 
[08:08:15.695] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:15.695] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:15.703] | : . ' , ; ` | : . Formals differ
[08:08:15.703] | : . ' , ; ` | : all.equal() for future ... done
[08:08:15.704] | : . ' , ; ` | : Future strategies differ at level 1
[08:08:15.704] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:08:15.704] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:08:15.704] | : . ' , ; ` | List of future strategies:
[08:08:15.704] | : . ' , ; ` | 1. multicore:
[08:08:15.704] | : . ' , ; ` |    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.704] | : . ' , ; ` |    - tweaked: FALSE
[08:08:15.704] | : . ' , ; ` |    - call: plan(strategy)
[08:08:15.705] | : . ' , ; ` | List of 1
[08:08:15.705] | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.705] | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.705] | : . ' , ; ` |     ...)  
[08:08:15.705] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy)
[08:08:15.705] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.705] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.705] | : . ' , ; ` |     ...)  
[08:08:15.705] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.705] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.709] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:08:15.710] | : . ' , ; ` | plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:08:15.710] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.710] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.710] | : . ' , ; ` | plan(): nbrOfWorkers() = 2
[08:08:15.710] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:08:15.711] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.711] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:08:15.711] | : readImmediateCondition() ...
[08:08:15.712] | : . Path: ‘/tmp/RtmpTM6nES/.future/immediateConditions’
[08:08:15.712] | : . Number of RDS files: 0
[08:08:15.712] | : . Returned conditions set:
[08:08:15.712] | : .  list()
[08:08:15.713] | : readImmediateCondition() ... done
[08:08:15.713] | : result() for MulticoreFuture ...
[08:08:15.713] | : result() for MulticoreFuture ... done
[08:08:15.714] | : signalConditions() ...
[08:08:15.714] | : . include = ‘immediateCondition’
[08:08:15.714] | : . exclude = 
[08:08:15.714] | : . resignal = FALSE
[08:08:15.714] | : . Number of conditions: 6
[08:08:15.714] | : .  int 6
[08:08:15.715] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.715] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.715] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.715] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.715] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.715] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.716] | : signalConditions() ... done
[08:08:15.716] | result() for MulticoreFuture ... done
[08:08:15.716] | result() for MulticoreFuture ...
[08:08:15.716] | result() for MulticoreFuture ... done
[08:08:15.716] | signalConditions() ...
[08:08:15.716] | : include = ‘immediateCondition’
[08:08:15.716] | : exclude = 
[08:08:15.716] | : resignal = FALSE
[08:08:15.717] | : Number of conditions: 6
[08:08:15.717] | :  int 6
[08:08:15.717] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.717] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.717] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.718] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.718] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.718] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.718] | signalConditions() ... done
[08:08:15.718] | relay stdout ...
[08:08:15.718] | relay stdout ... done
[08:08:15.718] | check for misuse ...
[08:08:15.718] | check for misuse ... done
[08:08:15.719] | relay conditions ...
[08:08:15.719] | : Future state: ‘finished’
[08:08:15.719] | : result() for MulticoreFuture ...
[08:08:15.719] | : result() for MulticoreFuture ... done
[08:08:15.719] | : signalConditions() ...
[08:08:15.719] | : . include = ‘condition’
[08:08:15.719] | : . exclude = ‘immediateCondition’
[08:08:15.719] | : . resignal = TRUE
[08:08:15.720] | : . Number of conditions: 6
[08:08:15.720] | : .  int 6
[08:08:15.720] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.720] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.639] | : . ' , attachPackages() ...
[08:08:15.720] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.721] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.640] | : . ' , ; packages: [n=1] ‘future’
[08:08:15.721] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.721] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.640] | : . ' , attachPackages() ... done
[08:08:15.721] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.721] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.640] | : . ' , attachPackages() ...
[08:08:15.721] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.721] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.641] | : . ' , ; packages: [n=0] 
[08:08:15.722] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:15.722] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:08:15.641] | : . ' , attachPackages() ... done
[08:08:15.722] | : signalConditions() ... done
[08:08:15.722] | relay conditions ... done
[08:08:15.722] value() for MulticoreFuture (<unnamed-28>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
- plan('multisession') ...
[08:08:15.724] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.724] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:15.724] | : all.equal() for FutureStrategyList ...
[08:08:15.724] | : . New stack:
[08:08:15.724] | : . List of 1
[08:08:15.724] | : .  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:15.724] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.724] | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:15.724] | : .   ..- attr(*, "init")= logi TRUE
[08:08:15.724] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:15.724] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:15.724] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.724] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.724] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:08:15.724] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.724] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.728] | : . Old stack:
[08:08:15.728] | : . List of 1
[08:08:15.728] | : .  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.728] | : .     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.728] | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.728] | : .   ..- attr(*, "init")= chr "done"
[08:08:15.728] | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.728] | : .     ...)  
[08:08:15.728] | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.728] | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.728] | : .   ..- attr(*, "call")= language plan(strategy)
[08:08:15.728] | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.728] | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.728] | : .     ...)  
[08:08:15.728] | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.728] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.732] | : . Not identical
[08:08:15.732] | : . all.equal() for future ...
[08:08:15.732] | : . ' List of 2
[08:08:15.732] | : . '  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:15.732] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.732] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:15.732] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:15.732] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:15.732] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:15.732] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.732] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.732] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:15.732] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:15.732] | : . '  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:08:15.732] | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:08:15.732] | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:08:15.732] | : . '   ..- attr(*, "init")= chr "done"
[08:08:15.732] | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.732] | : . '     ...)  
[08:08:15.732] | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.732] | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.732] | : . '   ..- attr(*, "call")= language plan(strategy)
[08:08:15.732] | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x55ffa1761d00> 
[08:08:15.732] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:08:15.732] | : . '     ...)  
[08:08:15.732] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:08:15.739] | : . ' Formals differ
[08:08:15.739] | : . all.equal() for future ... done
[08:08:15.739] | : . Future strategies differ at level 1
[08:08:15.739] | : all.equal() for FutureStrategyList ... done
[08:08:15.739] | : plan(): Setting new future backend stack:
[08:08:15.740] | : List of future strategies:
[08:08:15.740] | : 1. multisession:
[08:08:15.740] | :    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:15.740] | :    - tweaked: FALSE
[08:08:15.740] | :    - call: plan(strategy)
[08:08:15.740] | : List of 1
[08:08:15.740] | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:15.740] | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.740] | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:15.740] | :   ..- attr(*, "init")= logi TRUE
[08:08:15.740] | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:15.740] | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:15.740] | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.740] | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.740] | :   ..- attr(*, "untweakable")= chr "persistent"
[08:08:15.740] | :   ..- attr(*, "call")= language plan(strategy)
[08:08:15.740] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:15.743] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:15.743] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:15.744] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:08:15.744] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:15.745] | : . Legacy shutdown of cluster workers ...
[08:08:15.745] | : . ' Stopping existing cluster ...
[08:08:15.745] | : . ' , No pre-existing cluster. Skipping
[08:08:15.745] | : . ' Stopping existing cluster ... done
[08:08:15.745] | : . Legacy shutdown of cluster workers ... done
[08:08:15.745] | : plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:15.746] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:15.746] | : . function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:15.746] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:15.746] | : .  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:15.746] | : .  - attr(*, "init")= logi TRUE
[08:08:15.746] | : .  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:15.746] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:15.746] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.746] | : .  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:15.746] | : .  - attr(*, "untweakable")= chr "persistent"
[08:08:15.746] | : .  - attr(*, "call")= language plan(strategy)
[08:08:15.748] | : . init: TRUE
[08:08:15.749] | : . makeFutureBackend(<multisession>) ...
[08:08:15.749] | : . ' Backend function: <‘NULL’>
[08:08:15.749] | : . ' Evaluator tweak arguments: [n=0]
[08:08:15.749] | : . '  list()
[08:08:15.749] | : . ' Evaluator formal arguments: [n=4]
[08:08:15.749] | : . '  list()
[08:08:15.750] | : . ' Backend factory arguments: [n=4]
[08:08:15.750] | : . ' Dotted pair list of 4
[08:08:15.750] | : . '  $ workers     : language availableCores()
[08:08:15.750] | : . '  $ rscript_libs: language .libPaths()
[08:08:15.750] | : . '  $ gc          : logi FALSE
[08:08:15.750] | : . '  $ earlySignal : logi FALSE
[08:08:15.752] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:08:15.752] | : . ' , Arguments:
[08:08:15.752] | : . ' , List of 5
[08:08:15.752] | : . ' ,  $ workers     : Named int 2
[08:08:15.752] | : . ' ,   ..- attr(*, "names")= chr "mc.cores"
[08:08:15.752] | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:15.752] | : . ' ,  $ interrupts  : logi TRUE
[08:08:15.752] | : . ' ,  $ gc          : logi FALSE
[08:08:15.752] | : . ' ,  $ earlySignal : logi FALSE
[08:08:15.758] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:08:15.758] | : . ' , ; workers: 2
[08:08:15.759] | : . ' , ; getCluster() ...
[08:08:15.759] | : . ' , ; getCluster() ... done
[08:08:15.759] | : . ' , ; Stopping existing cluster ...
[08:08:15.759] | : . ' , ; ` No pre-existing cluster. Skipping
[08:08:15.759] | : . ' , ; Stopping existing cluster ... done
[08:08:15.759] | : . ' , ; Starting new cluster ...
[08:08:15.759] | : . ' , ; ` makeCluster(workers, ...) ...
[08:08:15.759] | : . ' , ; ` | Arguments:
[08:08:15.759] | : . ' , ; ` | List of 2
[08:08:15.759] | : . ' , ; ` |  $             : int 2
[08:08:15.759] | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:15.761] | : . ' , ; ` | .makeCluster() ...
[08:08:15.761] | : . ' , ; ` | : workers: ‘2’
[08:08:15.761] | : . ' , ; ` | : R_FUTURE_PLAN: NA
[08:08:15.761] | : . ' , ; ` | : parallelly::makeClusterPSOCK() arguments:
[08:08:15.761] | : . ' , ; ` | : List of 2
[08:08:15.761] | : . ' , ; ` | :  $             : int 2
[08:08:15.761] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:16.277] | : . ' , ; ` | : Generated cluster UUID
[08:08:16.277] | : . ' , ; ` | : Cluster UUID: ‘6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.277] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.279] | : . ' , ; ` | .makeCluster() ... done
[08:08:16.279] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.281] | : . ' , ; ` makeCluster(workers, ...) ... done
[08:08:16.281] | : . ' , ; ` Number of workers: 2
[08:08:16.281] | : . ' , ; ` Workers UUID: ‘6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.281] | : . ' , ; Starting new cluster ... done
[08:08:16.281] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:08:16.282] | : . ' , Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:16.282] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:08:16.282] | : . makeFutureBackend(<multisession>) ... done
[08:08:16.282] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.282] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.282] | : . plan(): nbrOfWorkers() = 2
[08:08:16.282] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:16.282] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
- lm(<formula>) ...
[08:08:16.283] | future(..., label = NULL) ...
[08:08:16.283] | : lazy: FALSE
[08:08:16.283] | : stdout: TRUE
[08:08:16.283] | : conditions: [n=1] ‘condition’
[08:08:16.283] | : gc: FALSE
[08:08:16.283] | : earlySignal: FALSE
[08:08:16.283] | : getGlobalsAndPackages() ...
[08:08:16.283] | : . Searching for globals ...
[08:08:16.295] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:16.295] | : . Searching for globals ... done
[08:08:16.295] | : . Resolving globals: FALSE
[08:08:16.295] | : . Search for packages associated with the globals ...
[08:08:16.295] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:16.296] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:16.296] | : . Search for packages associated with the globals ... done
[08:08:16.296] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:16.296] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:16.296] | : . globals: [2] ‘weight’, ‘group’
[08:08:16.296] | : . packages: [1] ‘stats’
[08:08:16.296] | : getGlobalsAndPackages() ... done
[08:08:16.297] | : run() for ‘Future’ (<unnamed-29>) ...
[08:08:16.297] | : . state: ‘created’
[08:08:16.297] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.297] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.297] | : . Using MultisessionFutureBackend ...
[08:08:16.297] | : . ' Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:16.297] | : . ' Launching futures ...
[08:08:16.298] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:16.298] | : . ' , ; Workers: [n=2]
[08:08:16.298] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.299] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.299] | : . ' , ; requestWorker() ...
[08:08:16.299] | : . ' , ; ` requestNode() ...
[08:08:16.300] | : . ' , ; ` | Number of workers: 2
[08:08:16.300] | : . ' , ; ` | Polling for a free worker ...
[08:08:16.300] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.300] | : . ' , ; ` | : . Created empty registry ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.300] | : . ' , ; ` | : . Listing all futures
[08:08:16.300] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.300] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.300] | : . ' , ; ` | : Total time: 0
[08:08:16.300] | : . ' , ; ` | Polling for a free worker ... done
[08:08:16.301] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.301] | : . ' , ; ` | : Listing all futures
[08:08:16.301] | : . ' , ; ` | : Number of registered futures: 0
[08:08:16.301] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.301] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:16.301] | : . ' , ; ` | Index of first available worker: 1
[08:08:16.301] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:16.367] | : . ' , ; ` | : Worker is functional
[08:08:16.368] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.368] | : . ' , ; ` | : . Listing all futures
[08:08:16.368] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.368] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.368] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:16.368] | : . ' , ; ` requestNode() ... done
[08:08:16.369] | : . ' , ; ` cluster node index: 1
[08:08:16.369] | : . ' , ; requestWorker() ... done
[08:08:16.369] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:16.370] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:16.370] | : . ' , ; launchFuture() ...
[08:08:16.370] | : . ' , ; ` cluster node index: 1
[08:08:16.370] | : . ' , ; ` getFutureData() ...
[08:08:16.370] | : . ' , ; ` | getFutureCore() ...
[08:08:16.371] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:16.371] | : . ' , ; ` | getFutureCore() ... done
[08:08:16.371] | : . ' , ; ` | getFutureCapture() ...
[08:08:16.371] | : . ' , ; ` | getFutureCapture() ... done
[08:08:16.371] | : . ' , ; ` | getFutureContext() ...
[08:08:16.371] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.371] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:16.371] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.371] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:16.372] | : . ' , ; ` | getFutureContext() ... done
[08:08:16.372] | : . ' , ; ` getFutureData() ... done
[08:08:16.372] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:16.372] | : . ' , ; ` | Appended future to position #1
[08:08:16.372] | : . ' , ; ` | Number of registered futures: 1
[08:08:16.373] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:16.373] | : . ' , ; launchFuture() ... done
[08:08:16.373] | : . ' , ; MultisessionFuture started
[08:08:16.373] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:16.373] | : . ' Launching futures ... done
[08:08:16.373] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:16.373] | : . Using MultisessionFutureBackend ... done
[08:08:16.373] | : run() for ‘Future’ (<unnamed-29>) ... done
[08:08:16.373] | future(..., label = NULL) ... done
[08:08:16.374] | value() for MultisessionFuture (<unnamed-29>) ...
[08:08:16.374] | : result() for ClusterFuture ...
[08:08:16.374] | : . assertValidConnection() ...
[08:08:16.374] | : . ' cluster node index: 1
[08:08:16.375] | : . assertValidConnection() ... done
[08:08:16.375] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:16.375] | : . ' cluster node index: 1
[08:08:16.466] | : . ' [1] TRUE
[08:08:16.466] | : . ' received data:
[08:08:16.466] | : . ' List of 5
[08:08:16.466] | : . '  $ type   : chr "VALUE"
[08:08:16.466] | : . '  $ value  :List of 16
[08:08:16.466] | : . '   ..$ value              :List of 13
[08:08:16.466] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:16.466] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:16.466] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:16.466] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.466] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:16.466] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:16.466] | : . '   .. ..$ rank         : int 2
[08:08:16.466] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:16.466] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.466] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:16.466] | : . '   .. ..$ qr           :List of 5
[08:08:16.466] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.466] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:16.466] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:16.466] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:16.466] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:16.466] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:16.466] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:16.466] | : . '   .. .. ..$ rank : int 2
[08:08:16.466] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:16.466] | : . '   .. ..$ df.residual  : int 18
[08:08:16.466] | : . '   .. ..$ contrasts    :List of 1
[08:08:16.466] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:16.466] | : . '   .. ..$ xlevels      :List of 1
[08:08:16.466] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:16.466] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:16.466] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.466] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.466] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:16.466] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa34e6ea0> 
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.466] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:16.466] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:16.466] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:16.466] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.466] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.466] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.466] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa34e6ea0> 
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.466] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.466] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.466] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:16.466] | : . '   ..$ visible            : logi TRUE
[08:08:16.466] | : . '   ..$ stdout             : chr ""
[08:08:16.466] | : . '   ..$ conditions         : list()
[08:08:16.466] | : . '   ..$ rng                : logi FALSE
[08:08:16.466] | : . '   ..$ seed               : NULL
[08:08:16.466] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:16.466] | : . '   ..$ misuseConnections  :List of 3
[08:08:16.466] | : . '   .. ..$ added   : NULL
[08:08:16.466] | : . '   .. ..$ removed : NULL
[08:08:16.466] | : . '   .. ..$ replaced: NULL
[08:08:16.466] | : . '   ..$ misuseDevices      : NULL
[08:08:16.466] | : . '   ..$ misuseDefaultDevice: list()
[08:08:16.466] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.466] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.466] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "29"
[08:08:16.466] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:16.466] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:16.466] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:16.466] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:16.466] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:16.466] | : . '   .. .. ..$ pid   : int 69362
[08:08:16.466] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.466] | : . '   .. .. ..$ random: int 2147483647
[08:08:16.466] | : . '   ..$ r_info             :List of 4
[08:08:16.466] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:16.466] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:16.466] | : . '   .. ..$ os           : chr "unix"
[08:08:16.466] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:16.466] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:16.466] | : . '   ..$ version            : chr "1.8"
[08:08:16.466] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:16.466] | : . '  $ success: logi TRUE
[08:08:16.466] | : . '  $ time   : 'proc_time' Named num [1:5] 0.05 0.002 0.052 0 0
[08:08:16.466] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:16.466] | : . '  $ tag    : NULL
[08:08:16.498] | : . ' Received FutureResult
[08:08:16.498] | : . ' FutureResult:
[08:08:16.498] | : . ' value: ‘lm’
[08:08:16.498] | : . ' visible: TRUE
[08:08:16.498] | : . ' stdout: character
[08:08:16.498] | : . ' conditions: [n = 0] 
[08:08:16.498] | : . ' RNG used: FALSE
[08:08:16.498] | : . ' duration: 0.05069089 secs (started 2025-06-17 08:08:16.414996)
[08:08:16.498] | : . ' version: 1.8
[08:08:16.499] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:16.499] | : . ' , Removed future from position #1
[08:08:16.499] | : . ' , Number of registered futures: 0
[08:08:16.499] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:16.499] | : . ' Erased future from future backend
[08:08:16.499] | : . ' result() for ClusterFuture ...
[08:08:16.499] | : . ' , result already collected: FutureResult
[08:08:16.499] | : . ' result() for ClusterFuture ... done
[08:08:16.499] | : . ' signalConditions() ...
[08:08:16.500] | : . ' , include = ‘immediateCondition’
[08:08:16.500] | : . ' , exclude = 
[08:08:16.500] | : . ' , resignal = FALSE
[08:08:16.500] | : . ' , Number of conditions: 0
[08:08:16.500] | : . ' ,  int 0
[08:08:16.500] | : . ' signalConditions() ... done
[08:08:16.500] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:16.501] | : result() for ClusterFuture ... done
[08:08:16.501] | : result() for ClusterFuture ...
[08:08:16.501] | : . result already collected: FutureResult
[08:08:16.501] | : result() for ClusterFuture ... done
[08:08:16.501] | : signalConditions() ...
[08:08:16.501] | : . include = ‘immediateCondition’
[08:08:16.501] | : . exclude = 
[08:08:16.501] | : . resignal = FALSE
[08:08:16.501] | : . Number of conditions: 0
[08:08:16.501] | : .  int 0
[08:08:16.502] | : signalConditions() ... done
[08:08:16.502] | : relay stdout ...
[08:08:16.502] | : relay stdout ... done
[08:08:16.502] | : check for misuse ...
[08:08:16.502] | : check for misuse ... done
[08:08:16.502] | value() for MultisessionFuture (<unnamed-29>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:16.504] | future(..., label = NULL) ...
[08:08:16.504] | : lazy: TRUE
[08:08:16.504] | : stdout: TRUE
[08:08:16.504] | : conditions: [n=1] ‘condition’
[08:08:16.504] | : gc: FALSE
[08:08:16.504] | : earlySignal: FALSE
[08:08:16.505] | : getGlobalsAndPackages() ...
[08:08:16.505] | : . Searching for globals ...
[08:08:16.516] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:16.516] | : . Searching for globals ... done
[08:08:16.516] | : . Resolving globals: FALSE
[08:08:16.517] | : . Search for packages associated with the globals ...
[08:08:16.517] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:16.517] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:16.517] | : . Search for packages associated with the globals ... done
[08:08:16.517] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:16.518] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:16.518] | : . globals: [2] ‘weight’, ‘group’
[08:08:16.518] | : . packages: [1] ‘stats’
[08:08:16.518] | : getGlobalsAndPackages() ... done
[08:08:16.518] | future(..., label = NULL) ... done
[08:08:16.518] | value() for Future (<unnamed-30>) ...
[08:08:16.518] | : run() for ‘Future’ (<unnamed-30>) ...
[08:08:16.518] | : . state: ‘created’
[08:08:16.519] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.519] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.519] | : . Using MultisessionFutureBackend ...
[08:08:16.519] | : . ' Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:08:16.519] | : . ' Launching futures ...
[08:08:16.519] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:16.519] | : . ' , ; Workers: [n=2]
[08:08:16.519] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.521] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.521] | : . ' , ; requestWorker() ...
[08:08:16.521] | : . ' , ; ` requestNode() ...
[08:08:16.521] | : . ' , ; ` | Number of workers: 2
[08:08:16.521] | : . ' , ; ` | Polling for a free worker ...
[08:08:16.521] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.522] | : . ' , ; ` | : . Listing all futures
[08:08:16.522] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.522] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.522] | : . ' , ; ` | : Total time: 0
[08:08:16.522] | : . ' , ; ` | Polling for a free worker ... done
[08:08:16.522] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.522] | : . ' , ; ` | : Listing all futures
[08:08:16.522] | : . ' , ; ` | : Number of registered futures: 0
[08:08:16.522] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.523] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:16.523] | : . ' , ; ` | Index of first available worker: 1
[08:08:16.523] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:16.579] | : . ' , ; ` | : Worker is functional
[08:08:16.579] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.579] | : . ' , ; ` | : . Listing all futures
[08:08:16.579] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.579] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.579] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:16.579] | : . ' , ; ` requestNode() ... done
[08:08:16.580] | : . ' , ; ` cluster node index: 1
[08:08:16.580] | : . ' , ; requestWorker() ... done
[08:08:16.580] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:16.580] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:16.580] | : . ' , ; launchFuture() ...
[08:08:16.580] | : . ' , ; ` cluster node index: 1
[08:08:16.580] | : . ' , ; ` getFutureData() ...
[08:08:16.581] | : . ' , ; ` | getFutureCore() ...
[08:08:16.581] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:16.581] | : . ' , ; ` | getFutureCore() ... done
[08:08:16.581] | : . ' , ; ` | getFutureCapture() ...
[08:08:16.581] | : . ' , ; ` | getFutureCapture() ... done
[08:08:16.581] | : . ' , ; ` | getFutureContext() ...
[08:08:16.581] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.581] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:16.581] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.582] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:16.582] | : . ' , ; ` | getFutureContext() ... done
[08:08:16.582] | : . ' , ; ` getFutureData() ... done
[08:08:16.582] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:16.582] | : . ' , ; ` | Appended future to position #1
[08:08:16.582] | : . ' , ; ` | Number of registered futures: 1
[08:08:16.582] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:16.583] | : . ' , ; launchFuture() ... done
[08:08:16.583] | : . ' , ; MultisessionFuture started
[08:08:16.583] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:16.583] | : . ' Launching futures ... done
[08:08:16.583] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:16.583] | : . Using MultisessionFutureBackend ... done
[08:08:16.583] | : run() for ‘Future’ (<unnamed-30>) ... done
[08:08:16.583] | : result() for ClusterFuture ...
[08:08:16.583] | : . assertValidConnection() ...
[08:08:16.584] | : . ' cluster node index: 1
[08:08:16.584] | : . assertValidConnection() ... done
[08:08:16.584] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:16.584] | : . ' cluster node index: 1
[08:08:16.627] | : . ' [1] TRUE
[08:08:16.627] | : . ' received data:
[08:08:16.627] | : . ' List of 5
[08:08:16.627] | : . '  $ type   : chr "VALUE"
[08:08:16.627] | : . '  $ value  :List of 16
[08:08:16.627] | : . '   ..$ value              :List of 13
[08:08:16.627] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:16.627] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:16.627] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:16.627] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.627] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:16.627] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:16.627] | : . '   .. ..$ rank         : int 2
[08:08:16.627] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:16.627] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.627] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:16.627] | : . '   .. ..$ qr           :List of 5
[08:08:16.627] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.627] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:16.627] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:16.627] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:16.627] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:16.627] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:16.627] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:16.627] | : . '   .. .. ..$ rank : int 2
[08:08:16.627] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:16.627] | : . '   .. ..$ df.residual  : int 18
[08:08:16.627] | : . '   .. ..$ contrasts    :List of 1
[08:08:16.627] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:16.627] | : . '   .. ..$ xlevels      :List of 1
[08:08:16.627] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:16.627] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:16.627] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.627] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.627] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:16.627] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa35ca1b0> 
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.627] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:16.627] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:16.627] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:16.627] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.627] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.627] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.627] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa35ca1b0> 
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.627] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.627] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.627] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:16.627] | : . '   ..$ visible            : logi TRUE
[08:08:16.627] | : . '   ..$ stdout             : chr ""
[08:08:16.627] | : . '   ..$ conditions         : list()
[08:08:16.627] | : . '   ..$ rng                : logi FALSE
[08:08:16.627] | : . '   ..$ seed               : NULL
[08:08:16.627] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:16.627] | : . '   ..$ misuseConnections  :List of 3
[08:08:16.627] | : . '   .. ..$ added   : NULL
[08:08:16.627] | : . '   .. ..$ removed : NULL
[08:08:16.627] | : . '   .. ..$ replaced: NULL
[08:08:16.627] | : . '   ..$ misuseDevices      : NULL
[08:08:16.627] | : . '   ..$ misuseDefaultDevice: list()
[08:08:16.627] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.627] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.627] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "30"
[08:08:16.627] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:16.627] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:16.627] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:16.627] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:16.627] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:16.627] | : . '   .. .. ..$ pid   : int 69362
[08:08:16.627] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.627] | : . '   .. .. ..$ random: int 2147483647
[08:08:16.627] | : . '   ..$ r_info             :List of 4
[08:08:16.627] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:16.627] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:16.627] | : . '   .. ..$ os           : chr "unix"
[08:08:16.627] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:16.627] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:16.627] | : . '   ..$ version            : chr "1.8"
[08:08:16.627] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:16.627] | : . '  $ success: logi TRUE
[08:08:16.627] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:16.627] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:16.627] | : . '  $ tag    : NULL
[08:08:16.658] | : . ' Received FutureResult
[08:08:16.658] | : . ' FutureResult:
[08:08:16.658] | : . ' value: ‘lm’
[08:08:16.658] | : . ' visible: TRUE
[08:08:16.658] | : . ' stdout: character
[08:08:16.658] | : . ' conditions: [n = 0] 
[08:08:16.658] | : . ' RNG used: FALSE
[08:08:16.658] | : . ' duration: 0.003492355 secs (started 2025-06-17 08:08:16.622852)
[08:08:16.658] | : . ' version: 1.8
[08:08:16.658] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:16.659] | : . ' , Removed future from position #1
[08:08:16.659] | : . ' , Number of registered futures: 0
[08:08:16.659] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:16.659] | : . ' Erased future from future backend
[08:08:16.659] | : . ' result() for ClusterFuture ...
[08:08:16.659] | : . ' , result already collected: FutureResult
[08:08:16.659] | : . ' result() for ClusterFuture ... done
[08:08:16.659] | : . ' signalConditions() ...
[08:08:16.659] | : . ' , include = ‘immediateCondition’
[08:08:16.660] | : . ' , exclude = 
[08:08:16.660] | : . ' , resignal = FALSE
[08:08:16.660] | : . ' , Number of conditions: 0
[08:08:16.660] | : . ' ,  int 0
[08:08:16.660] | : . ' signalConditions() ... done
[08:08:16.660] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:16.660] | : result() for ClusterFuture ... done
[08:08:16.661] | : result() for ClusterFuture ...
[08:08:16.661] | : . result already collected: FutureResult
[08:08:16.661] | : result() for ClusterFuture ... done
[08:08:16.661] | : signalConditions() ...
[08:08:16.661] | : . include = ‘immediateCondition’
[08:08:16.661] | : . exclude = 
[08:08:16.661] | : . resignal = FALSE
[08:08:16.661] | : . Number of conditions: 0
[08:08:16.661] | : .  int 0
[08:08:16.662] | : signalConditions() ... done
[08:08:16.662] | : relay stdout ...
[08:08:16.662] | : relay stdout ... done
[08:08:16.662] | : check for misuse ...
[08:08:16.662] | : check for misuse ... done
[08:08:16.662] | value() for Future (<unnamed-30>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:16.664] | future(..., label = NULL) ...
[08:08:16.664] | : lazy: FALSE
[08:08:16.664] | : stdout: TRUE
[08:08:16.664] | : conditions: [n=1] ‘condition’
[08:08:16.664] | : gc: FALSE
[08:08:16.664] | : earlySignal: FALSE
[08:08:16.665] | : getGlobalsAndPackages() ...
[08:08:16.665] | : . Searching for globals ...
[08:08:16.676] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:16.676] | : . Searching for globals ... done
[08:08:16.676] | : . Resolving globals: FALSE
[08:08:16.676] | : . Search for packages associated with the globals ...
[08:08:16.677] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:16.677] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:16.677] | : . Search for packages associated with the globals ... done
[08:08:16.677] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:16.677] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:16.678] | : . globals: [2] ‘weight’, ‘group’
[08:08:16.678] | : . packages: [1] ‘stats’
[08:08:16.678] | : getGlobalsAndPackages() ... done
[08:08:16.678] | : run() for ‘Future’ (<unnamed-31>) ...
[08:08:16.678] | : . state: ‘created’
[08:08:16.678] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.678] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.678] | : . Using MultisessionFutureBackend ...
[08:08:16.679] | : . ' Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:16.679] | : . ' Launching futures ...
[08:08:16.679] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:16.679] | : . ' , ; Workers: [n=2]
[08:08:16.679] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.680] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.681] | : . ' , ; requestWorker() ...
[08:08:16.681] | : . ' , ; ` requestNode() ...
[08:08:16.681] | : . ' , ; ` | Number of workers: 2
[08:08:16.681] | : . ' , ; ` | Polling for a free worker ...
[08:08:16.681] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.681] | : . ' , ; ` | : . Listing all futures
[08:08:16.681] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.681] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.681] | : . ' , ; ` | : Total time: 0
[08:08:16.682] | : . ' , ; ` | Polling for a free worker ... done
[08:08:16.682] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.682] | : . ' , ; ` | : Listing all futures
[08:08:16.682] | : . ' , ; ` | : Number of registered futures: 0
[08:08:16.682] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.682] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:16.682] | : . ' , ; ` | Index of first available worker: 1
[08:08:16.682] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:16.778] | : . ' , ; ` | : Worker is functional
[08:08:16.778] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.778] | : . ' , ; ` | : . Listing all futures
[08:08:16.778] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.778] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.778] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:16.778] | : . ' , ; ` requestNode() ... done
[08:08:16.779] | : . ' , ; ` cluster node index: 1
[08:08:16.779] | : . ' , ; requestWorker() ... done
[08:08:16.779] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:16.779] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:16.779] | : . ' , ; launchFuture() ...
[08:08:16.779] | : . ' , ; ` cluster node index: 1
[08:08:16.780] | : . ' , ; ` getFutureData() ...
[08:08:16.780] | : . ' , ; ` | getFutureCore() ...
[08:08:16.780] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:16.780] | : . ' , ; ` | getFutureCore() ... done
[08:08:16.780] | : . ' , ; ` | getFutureCapture() ...
[08:08:16.780] | : . ' , ; ` | getFutureCapture() ... done
[08:08:16.780] | : . ' , ; ` | getFutureContext() ...
[08:08:16.780] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.780] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:16.781] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.781] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:16.781] | : . ' , ; ` | getFutureContext() ... done
[08:08:16.781] | : . ' , ; ` getFutureData() ... done
[08:08:16.781] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:16.781] | : . ' , ; ` | Appended future to position #1
[08:08:16.781] | : . ' , ; ` | Number of registered futures: 1
[08:08:16.782] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:16.782] | : . ' , ; launchFuture() ... done
[08:08:16.782] | : . ' , ; MultisessionFuture started
[08:08:16.782] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:16.782] | : . ' Launching futures ... done
[08:08:16.782] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:16.782] | : . Using MultisessionFutureBackend ... done
[08:08:16.782] | : run() for ‘Future’ (<unnamed-31>) ... done
[08:08:16.782] | future(..., label = NULL) ... done
[08:08:16.783] | value() for MultisessionFuture (<unnamed-31>) ...
[08:08:16.783] | : result() for ClusterFuture ...
[08:08:16.783] | : . assertValidConnection() ...
[08:08:16.783] | : . ' cluster node index: 1
[08:08:16.783] | : . assertValidConnection() ... done
[08:08:16.783] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:16.784] | : . ' cluster node index: 1
[08:08:16.830] | : . ' [1] TRUE
[08:08:16.831] | : . ' received data:
[08:08:16.831] | : . ' List of 5
[08:08:16.831] | : . '  $ type   : chr "VALUE"
[08:08:16.831] | : . '  $ value  :List of 16
[08:08:16.831] | : . '   ..$ value              :List of 13
[08:08:16.831] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:16.831] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:16.831] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:16.831] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.831] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:16.831] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:16.831] | : . '   .. ..$ rank         : int 2
[08:08:16.831] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:16.831] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:16.831] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:16.831] | : . '   .. ..$ qr           :List of 5
[08:08:16.831] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.831] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:16.831] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:16.831] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:16.831] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:16.831] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:16.831] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:16.831] | : . '   .. .. ..$ rank : int 2
[08:08:16.831] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:16.831] | : . '   .. ..$ df.residual  : int 18
[08:08:16.831] | : . '   .. ..$ contrasts    :List of 1
[08:08:16.831] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:16.831] | : . '   .. ..$ xlevels      :List of 1
[08:08:16.831] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:16.831] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:16.831] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.831] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.831] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:16.831] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3689d80> 
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.831] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:16.831] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:16.831] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:16.831] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:16.831] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:16.831] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:16.831] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3689d80> 
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:16.831] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:16.831] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:16.831] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:16.831] | : . '   ..$ visible            : logi TRUE
[08:08:16.831] | : . '   ..$ stdout             : chr ""
[08:08:16.831] | : . '   ..$ conditions         : list()
[08:08:16.831] | : . '   ..$ rng                : logi FALSE
[08:08:16.831] | : . '   ..$ seed               : NULL
[08:08:16.831] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:16.831] | : . '   ..$ misuseConnections  :List of 3
[08:08:16.831] | : . '   .. ..$ added   : NULL
[08:08:16.831] | : . '   .. ..$ removed : NULL
[08:08:16.831] | : . '   .. ..$ replaced: NULL
[08:08:16.831] | : . '   ..$ misuseDevices      : NULL
[08:08:16.831] | : . '   ..$ misuseDefaultDevice: list()
[08:08:16.831] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.831] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.831] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "31"
[08:08:16.831] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:16.831] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:16.831] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:16.831] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:16.831] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:16.831] | : . '   .. .. ..$ pid   : int 69362
[08:08:16.831] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:16.831] | : . '   .. .. ..$ random: int 2147483647
[08:08:16.831] | : . '   ..$ r_info             :List of 4
[08:08:16.831] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:16.831] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:16.831] | : . '   .. ..$ os           : chr "unix"
[08:08:16.831] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:16.831] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:16.831] | : . '   ..$ version            : chr "1.8"
[08:08:16.831] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:16.831] | : . '  $ success: logi TRUE
[08:08:16.831] | : . '  $ time   : 'proc_time' Named num [1:5] 0.008 0 0.008 0 0
[08:08:16.831] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:16.831] | : . '  $ tag    : NULL
[08:08:16.862] | : . ' Received FutureResult
[08:08:16.862] | : . ' FutureResult:
[08:08:16.862] | : . ' value: ‘lm’
[08:08:16.862] | : . ' visible: TRUE
[08:08:16.862] | : . ' stdout: character
[08:08:16.862] | : . ' conditions: [n = 0] 
[08:08:16.862] | : . ' RNG used: FALSE
[08:08:16.862] | : . ' duration: 0.006826162 secs (started 2025-06-17 08:08:16.822995)
[08:08:16.862] | : . ' version: 1.8
[08:08:16.863] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:16.863] | : . ' , Removed future from position #1
[08:08:16.863] | : . ' , Number of registered futures: 0
[08:08:16.863] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:16.863] | : . ' Erased future from future backend
[08:08:16.863] | : . ' result() for ClusterFuture ...
[08:08:16.863] | : . ' , result already collected: FutureResult
[08:08:16.864] | : . ' result() for ClusterFuture ... done
[08:08:16.864] | : . ' signalConditions() ...
[08:08:16.864] | : . ' , include = ‘immediateCondition’
[08:08:16.864] | : . ' , exclude = 
[08:08:16.864] | : . ' , resignal = FALSE
[08:08:16.864] | : . ' , Number of conditions: 0
[08:08:16.864] | : . ' ,  int 0
[08:08:16.865] | : . ' signalConditions() ... done
[08:08:16.865] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:16.865] | : result() for ClusterFuture ... done
[08:08:16.865] | : result() for ClusterFuture ...
[08:08:16.865] | : . result already collected: FutureResult
[08:08:16.865] | : result() for ClusterFuture ... done
[08:08:16.865] | : signalConditions() ...
[08:08:16.865] | : . include = ‘immediateCondition’
[08:08:16.865] | : . exclude = 
[08:08:16.865] | : . resignal = FALSE
[08:08:16.866] | : . Number of conditions: 0
[08:08:16.866] | : .  int 0
[08:08:16.866] | : signalConditions() ... done
[08:08:16.866] | : relay stdout ...
[08:08:16.866] | : relay stdout ... done
[08:08:16.866] | : check for misuse ...
[08:08:16.866] | : check for misuse ... done
[08:08:16.867] | value() for MultisessionFuture (<unnamed-31>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:16.868] | future(..., label = NULL) ...
[08:08:16.868] | : lazy: FALSE
[08:08:16.869] | : stdout: TRUE
[08:08:16.869] | : conditions: [n=1] ‘condition’
[08:08:16.869] | : gc: FALSE
[08:08:16.869] | : earlySignal: FALSE
[08:08:16.869] | : getGlobalsAndPackages() ...
[08:08:16.869] | : . Searching for globals ...
[08:08:16.881] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:16.881] | : . Searching for globals ... done
[08:08:16.881] | : . Resolving globals: FALSE
[08:08:16.881] | : . Search for packages associated with the globals ...
[08:08:16.882] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:16.882] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:16.882] | : . Search for packages associated with the globals ... done
[08:08:16.882] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:16.883] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:16.883] | : . globals: [2] ‘weight’, ‘group’
[08:08:16.883] | : . packages: [1] ‘stats’
[08:08:16.883] | : getGlobalsAndPackages() ... done
[08:08:16.883] | : run() for ‘Future’ (<unnamed-32>) ...
[08:08:16.883] | : . state: ‘created’
[08:08:16.883] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.884] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.884] | : . Using MultisessionFutureBackend ...
[08:08:16.884] | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:08:16.884] | : . ' Launching futures ...
[08:08:16.884] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:16.884] | : . ' , ; Workers: [n=2]
[08:08:16.884] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:16.886] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:16.886] | : . ' , ; requestWorker() ...
[08:08:16.886] | : . ' , ; ` requestNode() ...
[08:08:16.886] | : . ' , ; ` | Number of workers: 2
[08:08:16.887] | : . ' , ; ` | Polling for a free worker ...
[08:08:16.887] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.887] | : . ' , ; ` | : . Listing all futures
[08:08:16.887] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.887] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.887] | : . ' , ; ` | : Total time: 0
[08:08:16.887] | : . ' , ; ` | Polling for a free worker ... done
[08:08:16.887] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.887] | : . ' , ; ` | : Listing all futures
[08:08:16.888] | : . ' , ; ` | : Number of registered futures: 0
[08:08:16.888] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.888] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:16.888] | : . ' , ; ` | Index of first available worker: 1
[08:08:16.888] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:16.986] | : . ' , ; ` | : Worker is functional
[08:08:16.986] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:16.986] | : . ' , ; ` | : . Listing all futures
[08:08:16.986] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:16.986] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:16.986] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:16.986] | : . ' , ; ` requestNode() ... done
[08:08:16.987] | : . ' , ; ` cluster node index: 1
[08:08:16.987] | : . ' , ; requestWorker() ... done
[08:08:16.987] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:16.987] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:16.987] | : . ' , ; launchFuture() ...
[08:08:16.987] | : . ' , ; ` cluster node index: 1
[08:08:16.988] | : . ' , ; ` getFutureData() ...
[08:08:16.988] | : . ' , ; ` | getFutureCore() ...
[08:08:16.988] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:16.988] | : . ' , ; ` | getFutureCore() ... done
[08:08:16.988] | : . ' , ; ` | getFutureCapture() ...
[08:08:16.988] | : . ' , ; ` | getFutureCapture() ... done
[08:08:16.988] | : . ' , ; ` | getFutureContext() ...
[08:08:16.988] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:16.988] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:16.989] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:16.989] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:16.989] | : . ' , ; ` | getFutureContext() ... done
[08:08:16.989] | : . ' , ; ` getFutureData() ... done
[08:08:16.989] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:16.989] | : . ' , ; ` | Appended future to position #1
[08:08:16.989] | : . ' , ; ` | Number of registered futures: 1
[08:08:16.990] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:16.990] | : . ' , ; launchFuture() ... done
[08:08:16.990] | : . ' , ; MultisessionFuture started
[08:08:16.990] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:16.990] | : . ' Launching futures ... done
[08:08:16.990] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:16.990] | : . Using MultisessionFutureBackend ... done
[08:08:16.990] | : run() for ‘Future’ (<unnamed-32>) ... done
[08:08:16.990] | future(..., label = NULL) ... done
[08:08:16.991] | value() for MultisessionFuture (<unnamed-32>) ...
[08:08:16.991] | : result() for ClusterFuture ...
[08:08:16.991] | : . assertValidConnection() ...
[08:08:16.991] | : . ' cluster node index: 1
[08:08:16.991] | : . assertValidConnection() ... done
[08:08:16.991] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:16.992] | : . ' cluster node index: 1
[08:08:17.035] | : . ' [1] TRUE
[08:08:17.036] | : . ' received data:
[08:08:17.036] | : . ' List of 5
[08:08:17.036] | : . '  $ type   : chr "VALUE"
[08:08:17.036] | : . '  $ value  :List of 16
[08:08:17.036] | : . '   ..$ value              :List of 13
[08:08:17.036] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:17.036] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:17.036] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:17.036] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:17.036] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:17.036] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:17.036] | : . '   .. ..$ rank         : int 2
[08:08:17.036] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:17.036] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:17.036] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:17.036] | : . '   .. ..$ qr           :List of 5
[08:08:17.036] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.036] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:17.036] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:17.036] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:17.036] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:17.036] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:17.036] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:17.036] | : . '   .. .. ..$ rank : int 2
[08:08:17.036] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:17.036] | : . '   .. ..$ df.residual  : int 18
[08:08:17.036] | : . '   .. ..$ contrasts    :List of 1
[08:08:17.036] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:17.036] | : . '   .. ..$ xlevels      :List of 1
[08:08:17.036] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:17.036] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:17.036] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.036] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:17.036] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:17.036] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3729860> 
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:17.036] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:17.036] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:17.036] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:17.036] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.036] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.036] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:17.036] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3729860> 
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:17.036] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:17.036] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:17.036] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:17.036] | : . '   ..$ visible            : logi TRUE
[08:08:17.036] | : . '   ..$ stdout             : chr ""
[08:08:17.036] | : . '   ..$ conditions         : list()
[08:08:17.036] | : . '   ..$ rng                : logi FALSE
[08:08:17.036] | : . '   ..$ seed               : NULL
[08:08:17.036] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.036] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.036] | : . '   .. ..$ added   : NULL
[08:08:17.036] | : . '   .. ..$ removed : NULL
[08:08:17.036] | : . '   .. ..$ replaced: NULL
[08:08:17.036] | : . '   ..$ misuseDevices      : NULL
[08:08:17.036] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.036] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.036] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.036] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "32"
[08:08:17.036] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.036] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.036] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.036] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.036] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.036] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.036] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.036] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.036] | : . '   ..$ r_info             :List of 4
[08:08:17.036] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.036] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.036] | : . '   .. ..$ os           : chr "unix"
[08:08:17.036] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.036] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.036] | : . '   ..$ version            : chr "1.8"
[08:08:17.036] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.036] | : . '  $ success: logi TRUE
[08:08:17.036] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.005 0 0
[08:08:17.036] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.036] | : . '  $ tag    : NULL
[08:08:17.065] | : . ' Received FutureResult
[08:08:17.065] | : . ' FutureResult:
[08:08:17.065] | : . ' value: ‘lm’
[08:08:17.065] | : . ' visible: TRUE
[08:08:17.065] | : . ' stdout: character
[08:08:17.065] | : . ' conditions: [n = 0] 
[08:08:17.065] | : . ' RNG used: FALSE
[08:08:17.065] | : . ' duration: 0.003804684 secs (started 2025-06-17 08:08:17.031062)
[08:08:17.065] | : . ' version: 1.8
[08:08:17.066] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:17.068] | : . ' , Removed future from position #1
[08:08:17.068] | : . ' , Number of registered futures: 0
[08:08:17.068] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:17.068] | : . ' Erased future from future backend
[08:08:17.069] | : . ' result() for ClusterFuture ...
[08:08:17.069] | : . ' , result already collected: FutureResult
[08:08:17.069] | : . ' result() for ClusterFuture ... done
[08:08:17.069] | : . ' signalConditions() ...
[08:08:17.069] | : . ' , include = ‘immediateCondition’
[08:08:17.069] | : . ' , exclude = 
[08:08:17.069] | : . ' , resignal = FALSE
[08:08:17.069] | : . ' , Number of conditions: 0
[08:08:17.069] | : . ' ,  int 0
[08:08:17.070] | : . ' signalConditions() ... done
[08:08:17.070] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:17.070] | : result() for ClusterFuture ... done
[08:08:17.070] | : result() for ClusterFuture ...
[08:08:17.070] | : . result already collected: FutureResult
[08:08:17.070] | : result() for ClusterFuture ... done
[08:08:17.070] | : signalConditions() ...
[08:08:17.071] | : . include = ‘immediateCondition’
[08:08:17.071] | : . exclude = 
[08:08:17.071] | : . resignal = FALSE
[08:08:17.071] | : . Number of conditions: 0
[08:08:17.071] | : .  int 0
[08:08:17.071] | : signalConditions() ... done
[08:08:17.071] | : relay stdout ...
[08:08:17.072] | : relay stdout ... done
[08:08:17.072] | : check for misuse ...
[08:08:17.072] | : check for misuse ... done
[08:08:17.072] | value() for MultisessionFuture (<unnamed-32>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

[08:08:17.074] | future(..., label = NULL) ...
[08:08:17.074] | : lazy: TRUE
[08:08:17.074] | : stdout: TRUE
[08:08:17.074] | : conditions: [n=1] ‘condition’
[08:08:17.074] | : gc: FALSE
[08:08:17.074] | : earlySignal: FALSE
[08:08:17.074] | : getGlobalsAndPackages() ...
[08:08:17.074] | : . Searching for globals ...
[08:08:17.086] | : . ' globals found: [6] ‘{’, ‘lm’, ‘weight’, ‘-’, ‘group’, ‘~’
[08:08:17.087] | : . Searching for globals ... done
[08:08:17.087] | : . Resolving globals: FALSE
[08:08:17.087] | : . Search for packages associated with the globals ...
[08:08:17.087] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:17.087] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:17.088] | : . Search for packages associated with the globals ... done
[08:08:17.088] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:17.088] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:17.088] | : . globals: [2] ‘weight’, ‘group’
[08:08:17.088] | : . packages: [1] ‘stats’
[08:08:17.088] | : getGlobalsAndPackages() ... done
[08:08:17.089] | future(..., label = NULL) ... done
[08:08:17.089] | value() for Future (<unnamed-33>) ...
[08:08:17.089] | : run() for ‘Future’ (<unnamed-33>) ...
[08:08:17.089] | : . state: ‘created’
[08:08:17.089] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.089] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.089] | : . Using MultisessionFutureBackend ...
[08:08:17.089] | : . ' Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:17.090] | : . ' Launching futures ...
[08:08:17.090] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:17.090] | : . ' , ; Workers: [n=2]
[08:08:17.090] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:17.092] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:17.092] | : . ' , ; requestWorker() ...
[08:08:17.092] | : . ' , ; ` requestNode() ...
[08:08:17.092] | : . ' , ; ` | Number of workers: 2
[08:08:17.092] | : . ' , ; ` | Polling for a free worker ...
[08:08:17.092] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.092] | : . ' , ; ` | : . Listing all futures
[08:08:17.092] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.093] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.093] | : . ' , ; ` | : Total time: 0
[08:08:17.093] | : . ' , ; ` | Polling for a free worker ... done
[08:08:17.093] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.093] | : . ' , ; ` | : Listing all futures
[08:08:17.093] | : . ' , ; ` | : Number of registered futures: 0
[08:08:17.093] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.093] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:17.093] | : . ' , ; ` | Index of first available worker: 1
[08:08:17.093] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:17.192] | : . ' , ; ` | : Worker is functional
[08:08:17.192] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.192] | : . ' , ; ` | : . Listing all futures
[08:08:17.192] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.193] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.193] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:17.193] | : . ' , ; ` requestNode() ... done
[08:08:17.193] | : . ' , ; ` cluster node index: 1
[08:08:17.193] | : . ' , ; requestWorker() ... done
[08:08:17.193] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:17.194] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:17.194] | : . ' , ; launchFuture() ...
[08:08:17.194] | : . ' , ; ` cluster node index: 1
[08:08:17.194] | : . ' , ; ` getFutureData() ...
[08:08:17.194] | : . ' , ; ` | getFutureCore() ...
[08:08:17.194] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:17.194] | : . ' , ; ` | getFutureCore() ... done
[08:08:17.194] | : . ' , ; ` | getFutureCapture() ...
[08:08:17.194] | : . ' , ; ` | getFutureCapture() ... done
[08:08:17.195] | : . ' , ; ` | getFutureContext() ...
[08:08:17.195] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.195] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:17.195] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.195] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:17.195] | : . ' , ; ` | getFutureContext() ... done
[08:08:17.195] | : . ' , ; ` getFutureData() ... done
[08:08:17.196] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:17.196] | : . ' , ; ` | Appended future to position #1
[08:08:17.196] | : . ' , ; ` | Number of registered futures: 1
[08:08:17.196] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:17.196] | : . ' , ; launchFuture() ... done
[08:08:17.196] | : . ' , ; MultisessionFuture started
[08:08:17.196] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:17.196] | : . ' Launching futures ... done
[08:08:17.196] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:17.197] | : . Using MultisessionFutureBackend ... done
[08:08:17.197] | : run() for ‘Future’ (<unnamed-33>) ... done
[08:08:17.197] | : result() for ClusterFuture ...
[08:08:17.197] | : . assertValidConnection() ...
[08:08:17.197] | : . ' cluster node index: 1
[08:08:17.197] | : . assertValidConnection() ... done
[08:08:17.198] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:17.198] | : . ' cluster node index: 1
[08:08:17.241] | : . ' [1] TRUE
[08:08:17.241] | : . ' received data:
[08:08:17.241] | : . ' List of 5
[08:08:17.241] | : . '  $ type   : chr "VALUE"
[08:08:17.241] | : . '  $ value  :List of 16
[08:08:17.241] | : . '   ..$ value              :List of 13
[08:08:17.241] | : . '   .. ..$ coefficients : Named num [1:2] 5.03 4.66
[08:08:17.241] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "groupCtl" "groupTrt"
[08:08:17.241] | : . '   .. ..$ residuals    : Named num [1:20] -0.862 0.548 0.148 1.078 -0.532 ...
[08:08:17.241] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:17.241] | : . '   .. ..$ effects      : Named num [1:20] -15.913 -14.739 0.355 1.285 -0.325 ...
[08:08:17.241] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "groupCtl" "groupTrt" "" "" ...
[08:08:17.241] | : . '   .. ..$ rank         : int 2
[08:08:17.241] | : . '   .. ..$ fitted.values: Named num [1:20] 5.03 5.03 5.03 5.03 5.03 ...
[08:08:17.241] | : . '   .. .. ..- attr(*, "names")= chr [1:20] "1" "2" "3" "4" ...
[08:08:17.241] | : . '   .. ..$ assign       : int [1:2] 1 1
[08:08:17.241] | : . '   .. ..$ qr           :List of 5
[08:08:17.241] | : . '   .. .. ..$ qr   : num [1:20, 1:2] -3.162 0.316 0.316 0.316 0.316 ...
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.241] | : . '   .. .. .. .. ..$ : chr [1:20] "1" "2" "3" "4" ...
[08:08:17.241] | : . '   .. .. .. .. ..$ : chr [1:2] "groupCtl" "groupTrt"
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 1 1
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "contrasts")=List of 1
[08:08:17.241] | : . '   .. .. .. .. ..$ group: chr "contr.treatment"
[08:08:17.241] | : . '   .. .. ..$ qraux: num [1:2] 1.32 1
[08:08:17.241] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:17.241] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:17.241] | : . '   .. .. ..$ rank : int 2
[08:08:17.241] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:17.241] | : . '   .. ..$ df.residual  : int 18
[08:08:17.241] | : . '   .. ..$ contrasts    :List of 1
[08:08:17.241] | : . '   .. .. ..$ group: chr "contr.treatment"
[08:08:17.241] | : . '   .. ..$ xlevels      :List of 1
[08:08:17.241] | : . '   .. .. ..$ group: chr [1:2] "Ctl" "Trt"
[08:08:17.241] | : . '   .. ..$ call         : language lm(formula = weight ~ group - 1)
[08:08:17.241] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.241] | : . '   .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:17.241] | : . '   .. .. .. .. .. ..$ : chr "group"
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:17.241] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa37af330> 
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:17.241] | : . '   .. ..$ model        :'data.frame':	20 obs. of  2 variables:
[08:08:17.241] | : . '   .. .. ..$ weight: num [1:20] 4.17 5.58 5.18 6.11 4.5 4.61 5.17 4.53 5.33 5.14 ...
[08:08:17.241] | : . '   .. .. ..$ group : Factor w/ 2 levels "Ctl","Trt": 1 1 1 1 1 1 1 1 1 1 ...
[08:08:17.241] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language weight ~ group - 1
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(weight, group)
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.241] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.241] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "weight" "group"
[08:08:17.241] | : . '   .. .. .. .. .. .. ..$ : chr "group"
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "group"
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa37af330> 
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(weight, group)
[08:08:17.241] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "factor"
[08:08:17.241] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "weight" "group"
[08:08:17.241] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:17.241] | : . '   ..$ visible            : logi TRUE
[08:08:17.241] | : . '   ..$ stdout             : chr ""
[08:08:17.241] | : . '   ..$ conditions         : list()
[08:08:17.241] | : . '   ..$ rng                : logi FALSE
[08:08:17.241] | : . '   ..$ seed               : NULL
[08:08:17.241] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.241] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.241] | : . '   .. ..$ added   : NULL
[08:08:17.241] | : . '   .. ..$ removed : NULL
[08:08:17.241] | : . '   .. ..$ replaced: NULL
[08:08:17.241] | : . '   ..$ misuseDevices      : NULL
[08:08:17.241] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.241] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.241] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.241] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "33"
[08:08:17.241] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.241] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.241] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.241] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.241] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.241] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.241] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.241] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.241] | : . '   ..$ r_info             :List of 4
[08:08:17.241] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.241] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.241] | : . '   .. ..$ os           : chr "unix"
[08:08:17.241] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.241] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.241] | : . '   ..$ version            : chr "1.8"
[08:08:17.241] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.241] | : . '  $ success: logi TRUE
[08:08:17.241] | : . '  $ time   : 'proc_time' Named num [1:5] 0.005 0 0.004 0 0
[08:08:17.241] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.241] | : . '  $ tag    : NULL
[08:08:17.270] | : . ' Received FutureResult
[08:08:17.270] | : . ' FutureResult:
[08:08:17.270] | : . ' value: ‘lm’
[08:08:17.270] | : . ' visible: TRUE
[08:08:17.270] | : . ' stdout: character
[08:08:17.270] | : . ' conditions: [n = 0] 
[08:08:17.270] | : . ' RNG used: FALSE
[08:08:17.270] | : . ' duration: 0.003816605 secs (started 2025-06-17 08:08:17.236847)
[08:08:17.270] | : . ' version: 1.8
[08:08:17.270] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:17.271] | : . ' , Removed future from position #1
[08:08:17.271] | : . ' , Number of registered futures: 0
[08:08:17.271] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:17.271] | : . ' Erased future from future backend
[08:08:17.271] | : . ' result() for ClusterFuture ...
[08:08:17.271] | : . ' , result already collected: FutureResult
[08:08:17.271] | : . ' result() for ClusterFuture ... done
[08:08:17.271] | : . ' signalConditions() ...
[08:08:17.273] | : . ' , include = ‘immediateCondition’
[08:08:17.273] | : . ' , exclude = 
[08:08:17.273] | : . ' , resignal = FALSE
[08:08:17.273] | : . ' , Number of conditions: 0
[08:08:17.273] | : . ' ,  int 0
[08:08:17.274] | : . ' signalConditions() ... done
[08:08:17.274] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:17.274] | : result() for ClusterFuture ... done
[08:08:17.274] | : result() for ClusterFuture ...
[08:08:17.274] | : . result already collected: FutureResult
[08:08:17.274] | : result() for ClusterFuture ... done
[08:08:17.275] | : signalConditions() ...
[08:08:17.275] | : . include = ‘immediateCondition’
[08:08:17.275] | : . exclude = 
[08:08:17.275] | : . resignal = FALSE
[08:08:17.275] | : . Number of conditions: 0
[08:08:17.275] | : .  int 0
[08:08:17.275] | : signalConditions() ... done
[08:08:17.275] | : relay stdout ...
[08:08:17.276] | : relay stdout ... done
[08:08:17.276] | : check for misuse ...
[08:08:17.276] | : check for misuse ... done
[08:08:17.276] | value() for Future (<unnamed-33>) ... done

Call:
lm(formula = weight ~ group - 1)

Coefficients:
groupCtl  groupTrt  
   5.032     4.661  

- Globals - one-side formulas, e.g. xtabs(~ x) ...
[08:08:17.278] | future(..., label = NULL) ...
[08:08:17.278] | : lazy: FALSE
[08:08:17.278] | : stdout: TRUE
[08:08:17.278] | : conditions: [n=1] ‘condition’
[08:08:17.278] | : gc: FALSE
[08:08:17.278] | : earlySignal: FALSE
[08:08:17.278] | : getGlobalsAndPackages() ...
[08:08:17.278] | : . Searching for globals ...
[08:08:17.286] | : . ' globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:17.286] | : . Searching for globals ... done
[08:08:17.286] | : . Resolving globals: FALSE
[08:08:17.286] | : . Search for packages associated with the globals ...
[08:08:17.286] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:17.286] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:17.287] | : . Search for packages associated with the globals ... done
[08:08:17.287] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:17.287] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:17.287] | : . globals: [1] ‘x’
[08:08:17.287] | : . packages: [1] ‘stats’
[08:08:17.287] | : getGlobalsAndPackages() ... done
[08:08:17.287] | : run() for ‘Future’ (<unnamed-34>) ...
[08:08:17.288] | : . state: ‘created’
[08:08:17.288] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.288] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.288] | : . Using MultisessionFutureBackend ...
[08:08:17.288] | : . ' Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:08:17.288] | : . ' Launching futures ...
[08:08:17.288] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:17.288] | : . ' , ; Workers: [n=2]
[08:08:17.288] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:17.290] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:17.290] | : . ' , ; requestWorker() ...
[08:08:17.290] | : . ' , ; ` requestNode() ...
[08:08:17.290] | : . ' , ; ` | Number of workers: 2
[08:08:17.290] | : . ' , ; ` | Polling for a free worker ...
[08:08:17.290] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.291] | : . ' , ; ` | : . Listing all futures
[08:08:17.291] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.291] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.291] | : . ' , ; ` | : Total time: 0
[08:08:17.291] | : . ' , ; ` | Polling for a free worker ... done
[08:08:17.291] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.291] | : . ' , ; ` | : Listing all futures
[08:08:17.291] | : . ' , ; ` | : Number of registered futures: 0
[08:08:17.291] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.291] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:17.292] | : . ' , ; ` | Index of first available worker: 1
[08:08:17.292] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:17.387] | : . ' , ; ` | : Worker is functional
[08:08:17.387] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.387] | : . ' , ; ` | : . Listing all futures
[08:08:17.387] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.387] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.387] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:17.388] | : . ' , ; ` requestNode() ... done
[08:08:17.388] | : . ' , ; ` cluster node index: 1
[08:08:17.388] | : . ' , ; requestWorker() ... done
[08:08:17.388] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:17.388] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:17.388] | : . ' , ; launchFuture() ...
[08:08:17.388] | : . ' , ; ` cluster node index: 1
[08:08:17.389] | : . ' , ; ` getFutureData() ...
[08:08:17.389] | : . ' , ; ` | getFutureCore() ...
[08:08:17.389] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:17.389] | : . ' , ; ` | getFutureCore() ... done
[08:08:17.389] | : . ' , ; ` | getFutureCapture() ...
[08:08:17.389] | : . ' , ; ` | getFutureCapture() ... done
[08:08:17.389] | : . ' , ; ` | getFutureContext() ...
[08:08:17.389] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.389] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:17.390] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.390] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:17.390] | : . ' , ; ` | getFutureContext() ... done
[08:08:17.390] | : . ' , ; ` getFutureData() ... done
[08:08:17.390] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:17.390] | : . ' , ; ` | Appended future to position #1
[08:08:17.390] | : . ' , ; ` | Number of registered futures: 1
[08:08:17.391] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:17.391] | : . ' , ; launchFuture() ... done
[08:08:17.391] | : . ' , ; MultisessionFuture started
[08:08:17.391] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:17.391] | : . ' Launching futures ... done
[08:08:17.391] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:17.391] | : . Using MultisessionFutureBackend ... done
[08:08:17.391] | : run() for ‘Future’ (<unnamed-34>) ... done
[08:08:17.391] | future(..., label = NULL) ... done
[08:08:17.392] | value() for MultisessionFuture (<unnamed-34>) ...
[08:08:17.392] | : result() for ClusterFuture ...
[08:08:17.392] | : . assertValidConnection() ...
[08:08:17.392] | : . ' cluster node index: 1
[08:08:17.392] | : . assertValidConnection() ... done
[08:08:17.392] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:17.392] | : . ' cluster node index: 1
[08:08:17.435] | : . ' [1] TRUE
[08:08:17.436] | : . ' received data:
[08:08:17.436] | : . ' List of 5
[08:08:17.436] | : . '  $ type   : chr "VALUE"
[08:08:17.436] | : . '  $ value  :List of 16
[08:08:17.436] | : . '   ..$ value              : 'xtabs' int [1:2(1d)] 2 3
[08:08:17.436] | : . '   .. ..- attr(*, "dimnames")=List of 1
[08:08:17.436] | : . '   .. .. ..$ x: chr [1:2] "1" "2"
[08:08:17.436] | : . '   .. ..- attr(*, "call")= language xtabs(formula = ~x)
[08:08:17.436] | : . '   ..$ visible            : logi TRUE
[08:08:17.436] | : . '   ..$ stdout             : chr ""
[08:08:17.436] | : . '   ..$ conditions         : list()
[08:08:17.436] | : . '   ..$ rng                : logi FALSE
[08:08:17.436] | : . '   ..$ seed               : NULL
[08:08:17.436] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.436] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.436] | : . '   .. ..$ added   : NULL
[08:08:17.436] | : . '   .. ..$ removed : NULL
[08:08:17.436] | : . '   .. ..$ replaced: NULL
[08:08:17.436] | : . '   ..$ misuseDevices      : NULL
[08:08:17.436] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.436] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.436] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.436] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "34"
[08:08:17.436] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.436] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.436] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.436] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.436] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.436] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.436] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.436] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.436] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.436] | : . '   ..$ r_info             :List of 4
[08:08:17.436] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.436] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.436] | : . '   .. ..$ os           : chr "unix"
[08:08:17.436] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.436] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.436] | : . '   ..$ version            : chr "1.8"
[08:08:17.436] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.436] | : . '  $ success: logi TRUE
[08:08:17.436] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:17.436] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.436] | : . '  $ tag    : NULL
[08:08:17.448] | : . ' Received FutureResult
[08:08:17.448] | : . ' FutureResult:
[08:08:17.448] | : . ' value: ‘xtabs’, ‘table’
[08:08:17.448] | : . ' visible: TRUE
[08:08:17.448] | : . ' stdout: character
[08:08:17.448] | : . ' conditions: [n = 0] 
[08:08:17.448] | : . ' RNG used: FALSE
[08:08:17.448] | : . ' duration: 0.003513575 secs (started 2025-06-17 08:08:17.431852)
[08:08:17.448] | : . ' version: 1.8
[08:08:17.448] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:17.449] | : . ' , Removed future from position #1
[08:08:17.449] | : . ' , Number of registered futures: 0
[08:08:17.449] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:17.449] | : . ' Erased future from future backend
[08:08:17.449] | : . ' result() for ClusterFuture ...
[08:08:17.449] | : . ' , result already collected: FutureResult
[08:08:17.449] | : . ' result() for ClusterFuture ... done
[08:08:17.449] | : . ' signalConditions() ...
[08:08:17.449] | : . ' , include = ‘immediateCondition’
[08:08:17.450] | : . ' , exclude = 
[08:08:17.450] | : . ' , resignal = FALSE
[08:08:17.450] | : . ' , Number of conditions: 0
[08:08:17.450] | : . ' ,  int 0
[08:08:17.450] | : . ' signalConditions() ... done
[08:08:17.450] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:17.450] | : result() for ClusterFuture ... done
[08:08:17.451] | : result() for ClusterFuture ...
[08:08:17.451] | : . result already collected: FutureResult
[08:08:17.451] | : result() for ClusterFuture ... done
[08:08:17.451] | : signalConditions() ...
[08:08:17.451] | : . include = ‘immediateCondition’
[08:08:17.451] | : . exclude = 
[08:08:17.451] | : . resignal = FALSE
[08:08:17.451] | : . Number of conditions: 0
[08:08:17.451] | : .  int 0
[08:08:17.452] | : signalConditions() ... done
[08:08:17.452] | : relay stdout ...
[08:08:17.452] | : relay stdout ... done
[08:08:17.452] | : check for misuse ...
[08:08:17.452] | : check for misuse ... done
[08:08:17.452] | value() for MultisessionFuture (<unnamed-34>) ... done
x
1 2 
2 3 
[08:08:17.453] | future(..., label = NULL) ...
[08:08:17.453] | : lazy: FALSE
[08:08:17.453] | : stdout: TRUE
[08:08:17.453] | : conditions: [n=1] ‘condition’
[08:08:17.453] | : gc: FALSE
[08:08:17.453] | : earlySignal: FALSE
[08:08:17.454] | : getGlobalsAndPackages() ...
[08:08:17.454] | : . Searching for globals ...
[08:08:17.461] | : . ' globals found: [4] ‘{’, ‘xtabs’, ‘x’, ‘~’
[08:08:17.461] | : . Searching for globals ... done
[08:08:17.462] | : . Resolving globals: FALSE
[08:08:17.462] | : . Search for packages associated with the globals ...
[08:08:17.462] | : . ' Packages associated with globals: [2] ‘base’, ‘stats’
[08:08:17.462] | : . ' Packages: [2] ‘base’, ‘stats’
[08:08:17.462] | : . Search for packages associated with the globals ... done
[08:08:17.462] | : . Packages after dropping 'base': [1] ‘stats’
[08:08:17.463] | : . Packages after dropping non-attached packages: [1] ‘stats’
[08:08:17.463] | : . globals: [1] ‘x’
[08:08:17.463] | : . packages: [1] ‘stats’
[08:08:17.463] | : getGlobalsAndPackages() ... done
[08:08:17.463] | : run() for ‘Future’ (<unnamed-35>) ...
[08:08:17.463] | : . state: ‘created’
[08:08:17.463] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.464] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.464] | : . Using MultisessionFutureBackend ...
[08:08:17.464] | : . ' Number of futures since start: 6 (6 created, 6 launched, 6 finished)
[08:08:17.464] | : . ' Launching futures ...
[08:08:17.464] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:17.464] | : . ' , ; Workers: [n=2]
[08:08:17.464] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:17.466] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:17.466] | : . ' , ; requestWorker() ...
[08:08:17.466] | : . ' , ; ` requestNode() ...
[08:08:17.466] | : . ' , ; ` | Number of workers: 2
[08:08:17.466] | : . ' , ; ` | Polling for a free worker ...
[08:08:17.466] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.467] | : . ' , ; ` | : . Listing all futures
[08:08:17.467] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.467] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.467] | : . ' , ; ` | : Total time: 0
[08:08:17.467] | : . ' , ; ` | Polling for a free worker ... done
[08:08:17.467] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.467] | : . ' , ; ` | : Listing all futures
[08:08:17.467] | : . ' , ; ` | : Number of registered futures: 0
[08:08:17.467] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.467] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:17.468] | : . ' , ; ` | Index of first available worker: 1
[08:08:17.468] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:17.531] | : . ' , ; ` | : Worker is functional
[08:08:17.531] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.532] | : . ' , ; ` | : . Listing all futures
[08:08:17.532] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.532] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.532] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:17.532] | : . ' , ; ` requestNode() ... done
[08:08:17.532] | : . ' , ; ` cluster node index: 1
[08:08:17.532] | : . ' , ; requestWorker() ... done
[08:08:17.532] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:17.533] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:17.533] | : . ' , ; launchFuture() ...
[08:08:17.533] | : . ' , ; ` cluster node index: 1
[08:08:17.533] | : . ' , ; ` getFutureData() ...
[08:08:17.533] | : . ' , ; ` | getFutureCore() ...
[08:08:17.533] | : . ' , ; ` | : Packages needed by the future expression (n = 1): ‘stats’
[08:08:17.534] | : . ' , ; ` | getFutureCore() ... done
[08:08:17.534] | : . ' , ; ` | getFutureCapture() ...
[08:08:17.534] | : . ' , ; ` | getFutureCapture() ... done
[08:08:17.534] | : . ' , ; ` | getFutureContext() ...
[08:08:17.534] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.534] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:17.534] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.534] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:17.534] | : . ' , ; ` | getFutureContext() ... done
[08:08:17.535] | : . ' , ; ` getFutureData() ... done
[08:08:17.535] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:17.535] | : . ' , ; ` | Appended future to position #1
[08:08:17.535] | : . ' , ; ` | Number of registered futures: 1
[08:08:17.535] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:17.535] | : . ' , ; launchFuture() ... done
[08:08:17.535] | : . ' , ; MultisessionFuture started
[08:08:17.535] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:17.536] | : . ' Launching futures ... done
[08:08:17.536] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:17.536] | : . Using MultisessionFutureBackend ... done
[08:08:17.536] | : run() for ‘Future’ (<unnamed-35>) ... done
[08:08:17.536] | future(..., label = NULL) ... done
[08:08:17.536] | value() for MultisessionFuture (<unnamed-35>) ...
[08:08:17.536] | : result() for ClusterFuture ...
[08:08:17.536] | : . assertValidConnection() ...
[08:08:17.537] | : . ' cluster node index: 1
[08:08:17.537] | : . assertValidConnection() ... done
[08:08:17.537] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:17.537] | : . ' cluster node index: 1
[08:08:17.579] | : . ' [1] TRUE
[08:08:17.579] | : . ' received data:
[08:08:17.579] | : . ' List of 5
[08:08:17.579] | : . '  $ type   : chr "VALUE"
[08:08:17.579] | : . '  $ value  :List of 16
[08:08:17.579] | : . '   ..$ value              : 'xtabs' int [1:2(1d)] 2 3
[08:08:17.579] | : . '   .. ..- attr(*, "dimnames")=List of 1
[08:08:17.579] | : . '   .. .. ..$ x: chr [1:2] "1" "2"
[08:08:17.579] | : . '   .. ..- attr(*, "call")= language xtabs(formula = ~x)
[08:08:17.579] | : . '   ..$ visible            : logi TRUE
[08:08:17.579] | : . '   ..$ stdout             : chr ""
[08:08:17.579] | : . '   ..$ conditions         : list()
[08:08:17.579] | : . '   ..$ rng                : logi FALSE
[08:08:17.579] | : . '   ..$ seed               : NULL
[08:08:17.579] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.579] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.579] | : . '   .. ..$ added   : NULL
[08:08:17.579] | : . '   .. ..$ removed : NULL
[08:08:17.579] | : . '   .. ..$ replaced: NULL
[08:08:17.579] | : . '   ..$ misuseDevices      : NULL
[08:08:17.579] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.579] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.579] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.579] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "35"
[08:08:17.579] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.579] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.579] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.579] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.579] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.579] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.579] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.579] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.579] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.579] | : . '   ..$ r_info             :List of 4
[08:08:17.579] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.579] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.579] | : . '   .. ..$ os           : chr "unix"
[08:08:17.579] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.579] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.579] | : . '   ..$ version            : chr "1.8"
[08:08:17.579] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.579] | : . '  $ success: logi TRUE
[08:08:17.579] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0.001 0.004 0 0
[08:08:17.579] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.579] | : . '  $ tag    : NULL
[08:08:17.591] | : . ' Received FutureResult
[08:08:17.591] | : . ' FutureResult:
[08:08:17.591] | : . ' value: ‘xtabs’, ‘table’
[08:08:17.591] | : . ' visible: TRUE
[08:08:17.591] | : . ' stdout: character
[08:08:17.591] | : . ' conditions: [n = 0] 
[08:08:17.591] | : . ' RNG used: FALSE
[08:08:17.591] | : . ' duration: 0.003145933 secs (started 2025-06-17 08:08:17.575847)
[08:08:17.591] | : . ' version: 1.8
[08:08:17.592] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:17.592] | : . ' , Removed future from position #1
[08:08:17.592] | : . ' , Number of registered futures: 0
[08:08:17.592] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:17.592] | : . ' Erased future from future backend
[08:08:17.592] | : . ' result() for ClusterFuture ...
[08:08:17.592] | : . ' , result already collected: FutureResult
[08:08:17.592] | : . ' result() for ClusterFuture ... done
[08:08:17.592] | : . ' signalConditions() ...
[08:08:17.593] | : . ' , include = ‘immediateCondition’
[08:08:17.593] | : . ' , exclude = 
[08:08:17.593] | : . ' , resignal = FALSE
[08:08:17.593] | : . ' , Number of conditions: 0
[08:08:17.593] | : . ' ,  int 0
[08:08:17.593] | : . ' signalConditions() ... done
[08:08:17.593] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:17.593] | : result() for ClusterFuture ... done
[08:08:17.594] | : result() for ClusterFuture ...
[08:08:17.594] | : . result already collected: FutureResult
[08:08:17.594] | : result() for ClusterFuture ... done
[08:08:17.594] | : signalConditions() ...
[08:08:17.594] | : . include = ‘immediateCondition’
[08:08:17.594] | : . exclude = 
[08:08:17.594] | : . resignal = FALSE
[08:08:17.594] | : . Number of conditions: 0
[08:08:17.594] | : .  int 0
[08:08:17.595] | : signalConditions() ... done
[08:08:17.595] | : relay stdout ...
[08:08:17.595] | : relay stdout ... done
[08:08:17.595] | : check for misuse ...
[08:08:17.595] | : check for misuse ... done
[08:08:17.595] | value() for MultisessionFuture (<unnamed-35>) ... done
x
1 2 
2 3 
- Globals - lm(<formula>, data = cars) ...
- Globals - lm(<formula #1 (‘a’)>, data = cars) ...

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

[08:08:17.597] | future(..., label = NULL) ...
[08:08:17.597] | : lazy: FALSE
[08:08:17.597] | : stdout: TRUE
[08:08:17.597] | : conditions: [n=1] ‘condition’
[08:08:17.597] | : gc: FALSE
[08:08:17.597] | : earlySignal: FALSE
[08:08:17.597] | : getGlobalsAndPackages() ...
[08:08:17.597] | : . Searching for globals ...
[08:08:17.610] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘-’, ‘.’, ‘~’, ‘cars’
[08:08:17.610] | : . Searching for globals ... done
[08:08:17.610] | : . Resolving globals: FALSE
[08:08:17.610] | : . Search for packages associated with the globals ...
[08:08:17.610] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:17.611] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:17.611] | : . Search for packages associated with the globals ... done
[08:08:17.611] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:17.611] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:17.611] | : . globals: [0] 
[08:08:17.611] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:17.611] | : getGlobalsAndPackages() ... done
[08:08:17.612] | : run() for ‘Future’ (<unnamed-36>) ...
[08:08:17.612] | : . state: ‘created’
[08:08:17.612] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.612] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.612] | : . Using MultisessionFutureBackend ...
[08:08:17.612] | : . ' Number of futures since start: 7 (7 created, 7 launched, 7 finished)
[08:08:17.612] | : . ' Launching futures ...
[08:08:17.612] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:17.612] | : . ' , ; Workers: [n=2]
[08:08:17.613] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:17.614] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:17.614] | : . ' , ; requestWorker() ...
[08:08:17.614] | : . ' , ; ` requestNode() ...
[08:08:17.614] | : . ' , ; ` | Number of workers: 2
[08:08:17.615] | : . ' , ; ` | Polling for a free worker ...
[08:08:17.615] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.615] | : . ' , ; ` | : . Listing all futures
[08:08:17.615] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.615] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.615] | : . ' , ; ` | : Total time: 0
[08:08:17.615] | : . ' , ; ` | Polling for a free worker ... done
[08:08:17.615] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.615] | : . ' , ; ` | : Listing all futures
[08:08:17.615] | : . ' , ; ` | : Number of registered futures: 0
[08:08:17.616] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.616] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:17.616] | : . ' , ; ` | Index of first available worker: 1
[08:08:17.616] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:17.712] | : . ' , ; ` | : Worker is functional
[08:08:17.712] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.712] | : . ' , ; ` | : . Listing all futures
[08:08:17.712] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.712] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.712] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:17.713] | : . ' , ; ` requestNode() ... done
[08:08:17.713] | : . ' , ; ` cluster node index: 1
[08:08:17.713] | : . ' , ; requestWorker() ... done
[08:08:17.713] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:17.713] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:17.713] | : . ' , ; launchFuture() ...
[08:08:17.714] | : . ' , ; ` cluster node index: 1
[08:08:17.714] | : . ' , ; ` getFutureData() ...
[08:08:17.714] | : . ' , ; ` | getFutureCore() ...
[08:08:17.714] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:17.714] | : . ' , ; ` | getFutureCore() ... done
[08:08:17.714] | : . ' , ; ` | getFutureCapture() ...
[08:08:17.714] | : . ' , ; ` | getFutureCapture() ... done
[08:08:17.714] | : . ' , ; ` | getFutureContext() ...
[08:08:17.714] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.714] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:17.715] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.715] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:17.715] | : . ' , ; ` | getFutureContext() ... done
[08:08:17.715] | : . ' , ; ` getFutureData() ... done
[08:08:17.715] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:17.715] | : . ' , ; ` | Appended future to position #1
[08:08:17.715] | : . ' , ; ` | Number of registered futures: 1
[08:08:17.716] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:17.716] | : . ' , ; launchFuture() ... done
[08:08:17.716] | : . ' , ; MultisessionFuture started
[08:08:17.716] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:17.716] | : . ' Launching futures ... done
[08:08:17.716] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:17.716] | : . Using MultisessionFutureBackend ... done
[08:08:17.716] | : run() for ‘Future’ (<unnamed-36>) ... done
[08:08:17.716] | future(..., label = NULL) ... done
[08:08:17.717] | value() for MultisessionFuture (<unnamed-36>) ...
[08:08:17.717] | : result() for ClusterFuture ...
[08:08:17.717] | : . assertValidConnection() ...
[08:08:17.717] | : . ' cluster node index: 1
[08:08:17.717] | : . assertValidConnection() ... done
[08:08:17.717] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:17.717] | : . ' cluster node index: 1
[08:08:17.766] | : . ' [1] TRUE
[08:08:17.766] | : . ' received data:
[08:08:17.766] | : . ' List of 5
[08:08:17.766] | : . '  $ type   : chr "VALUE"
[08:08:17.766] | : . '  $ value  :List of 16
[08:08:17.766] | : . '   ..$ value              :List of 12
[08:08:17.766] | : . '   .. ..$ coefficients : Named num 2.91
[08:08:17.766] | : . '   .. .. ..- attr(*, "names")= chr "speed"
[08:08:17.766] | : . '   .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[08:08:17.766] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:17.766] | : . '   .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[08:08:17.766] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[08:08:17.766] | : . '   .. ..$ rank         : int 1
[08:08:17.766] | : . '   .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[08:08:17.766] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:17.766] | : . '   .. ..$ assign       : int 1
[08:08:17.766] | : . '   .. ..$ qr           :List of 5
[08:08:17.766] | : . '   .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.766] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:17.766] | : . '   .. .. .. .. ..$ : chr "speed"
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "assign")= int 1
[08:08:17.766] | : . '   .. .. ..$ qraux: num 1.03
[08:08:17.766] | : . '   .. .. ..$ pivot: int 1
[08:08:17.766] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:17.766] | : . '   .. .. ..$ rank : int 1
[08:08:17.766] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:17.766] | : . '   .. ..$ df.residual  : int 49
[08:08:17.766] | : . '   .. ..$ xlevels      : Named list()
[08:08:17.766] | : . '   .. ..$ call         : language lm(formula = dist ~ . - 1, data = cars)
[08:08:17.766] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed - 1
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.766] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:17.766] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:17.766] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa22b37e0> 
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:17.766] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:17.766] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:17.766] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:17.766] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed - 1
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.766] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.766] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:17.766] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa22b37e0> 
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:17.766] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:17.766] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:17.766] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:17.766] | : . '   ..$ visible            : logi TRUE
[08:08:17.766] | : . '   ..$ stdout             : chr ""
[08:08:17.766] | : . '   ..$ conditions         : list()
[08:08:17.766] | : . '   ..$ rng                : logi FALSE
[08:08:17.766] | : . '   ..$ seed               : NULL
[08:08:17.766] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.766] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.766] | : . '   .. ..$ added   : NULL
[08:08:17.766] | : . '   .. ..$ removed : NULL
[08:08:17.766] | : . '   .. ..$ replaced: NULL
[08:08:17.766] | : . '   ..$ misuseDevices      : NULL
[08:08:17.766] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.766] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.766] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.766] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "36"
[08:08:17.766] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.766] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.766] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.766] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.766] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.766] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.766] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.766] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.766] | : . '   ..$ r_info             :List of 4
[08:08:17.766] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.766] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.766] | : . '   .. ..$ os           : chr "unix"
[08:08:17.766] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.766] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.766] | : . '   ..$ version            : chr "1.8"
[08:08:17.766] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.766] | : . '  $ success: logi TRUE
[08:08:17.766] | : . '  $ time   : 'proc_time' Named num [1:5] 0.009 0 0.009 0 0
[08:08:17.766] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.766] | : . '  $ tag    : NULL
[08:08:17.795] | : . ' Received FutureResult
[08:08:17.796] | : . ' FutureResult:
[08:08:17.796] | : . ' value: ‘lm’
[08:08:17.796] | : . ' visible: TRUE
[08:08:17.796] | : . ' stdout: character
[08:08:17.796] | : . ' conditions: [n = 0] 
[08:08:17.796] | : . ' RNG used: FALSE
[08:08:17.796] | : . ' duration: 0.003460884 secs (started 2025-06-17 08:08:17.756785)
[08:08:17.796] | : . ' version: 1.8
[08:08:17.796] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:17.796] | : . ' , Removed future from position #1
[08:08:17.796] | : . ' , Number of registered futures: 0
[08:08:17.796] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:17.796] | : . ' Erased future from future backend
[08:08:17.797] | : . ' result() for ClusterFuture ...
[08:08:17.797] | : . ' , result already collected: FutureResult
[08:08:17.797] | : . ' result() for ClusterFuture ... done
[08:08:17.797] | : . ' signalConditions() ...
[08:08:17.797] | : . ' , include = ‘immediateCondition’
[08:08:17.797] | : . ' , exclude = 
[08:08:17.797] | : . ' , resignal = FALSE
[08:08:17.797] | : . ' , Number of conditions: 0
[08:08:17.797] | : . ' ,  int 0
[08:08:17.798] | : . ' signalConditions() ... done
[08:08:17.798] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:17.798] | : result() for ClusterFuture ... done
[08:08:17.798] | : result() for ClusterFuture ...
[08:08:17.798] | : . result already collected: FutureResult
[08:08:17.798] | : result() for ClusterFuture ... done
[08:08:17.798] | : signalConditions() ...
[08:08:17.799] | : . include = ‘immediateCondition’
[08:08:17.799] | : . exclude = 
[08:08:17.799] | : . resignal = FALSE
[08:08:17.799] | : . Number of conditions: 0
[08:08:17.799] | : .  int 0
[08:08:17.799] | : signalConditions() ... done
[08:08:17.799] | : relay stdout ...
[08:08:17.799] | : relay stdout ... done
[08:08:17.800] | : check for misuse ...
[08:08:17.800] | : check for misuse ... done
[08:08:17.800] | value() for MultisessionFuture (<unnamed-36>) ... done

Call:
lm(formula = dist ~ . - 1, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #2 (‘b’)>, data = cars) ...

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

[08:08:17.802] | future(..., label = NULL) ...
[08:08:17.802] | : lazy: FALSE
[08:08:17.802] | : stdout: TRUE
[08:08:17.802] | : conditions: [n=1] ‘condition’
[08:08:17.802] | : gc: FALSE
[08:08:17.803] | : earlySignal: FALSE
[08:08:17.803] | : getGlobalsAndPackages() ...
[08:08:17.803] | : . Searching for globals ...
[08:08:17.815] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘.’, ‘~’, ‘cars’
[08:08:17.815] | : . Searching for globals ... done
[08:08:17.815] | : . Resolving globals: FALSE
[08:08:17.815] | : . Search for packages associated with the globals ...
[08:08:17.815] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:17.816] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:17.816] | : . Search for packages associated with the globals ... done
[08:08:17.816] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:17.816] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:17.816] | : . globals: [0] 
[08:08:17.816] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:17.817] | : getGlobalsAndPackages() ... done
[08:08:17.817] | : run() for ‘Future’ (<unnamed-37>) ...
[08:08:17.817] | : . state: ‘created’
[08:08:17.817] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.817] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.817] | : . Using MultisessionFutureBackend ...
[08:08:17.817] | : . ' Number of futures since start: 8 (8 created, 8 launched, 8 finished)
[08:08:17.817] | : . ' Launching futures ...
[08:08:17.818] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:17.818] | : . ' , ; Workers: [n=2]
[08:08:17.818] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:17.819] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:17.819] | : . ' , ; requestWorker() ...
[08:08:17.820] | : . ' , ; ` requestNode() ...
[08:08:17.820] | : . ' , ; ` | Number of workers: 2
[08:08:17.820] | : . ' , ; ` | Polling for a free worker ...
[08:08:17.820] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.820] | : . ' , ; ` | : . Listing all futures
[08:08:17.820] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.820] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.820] | : . ' , ; ` | : Total time: 0
[08:08:17.820] | : . ' , ; ` | Polling for a free worker ... done
[08:08:17.820] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.821] | : . ' , ; ` | : Listing all futures
[08:08:17.821] | : . ' , ; ` | : Number of registered futures: 0
[08:08:17.821] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.821] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:17.821] | : . ' , ; ` | Index of first available worker: 1
[08:08:17.821] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:17.917] | : . ' , ; ` | : Worker is functional
[08:08:17.917] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:17.917] | : . ' , ; ` | : . Listing all futures
[08:08:17.917] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:17.918] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:17.918] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:17.918] | : . ' , ; ` requestNode() ... done
[08:08:17.918] | : . ' , ; ` cluster node index: 1
[08:08:17.918] | : . ' , ; requestWorker() ... done
[08:08:17.918] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:17.919] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:17.919] | : . ' , ; launchFuture() ...
[08:08:17.919] | : . ' , ; ` cluster node index: 1
[08:08:17.919] | : . ' , ; ` getFutureData() ...
[08:08:17.919] | : . ' , ; ` | getFutureCore() ...
[08:08:17.919] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:17.919] | : . ' , ; ` | getFutureCore() ... done
[08:08:17.919] | : . ' , ; ` | getFutureCapture() ...
[08:08:17.920] | : . ' , ; ` | getFutureCapture() ... done
[08:08:17.920] | : . ' , ; ` | getFutureContext() ...
[08:08:17.920] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:17.920] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:17.920] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:17.920] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:17.920] | : . ' , ; ` | getFutureContext() ... done
[08:08:17.920] | : . ' , ; ` getFutureData() ... done
[08:08:17.921] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:17.921] | : . ' , ; ` | Appended future to position #1
[08:08:17.921] | : . ' , ; ` | Number of registered futures: 1
[08:08:17.921] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:17.921] | : . ' , ; launchFuture() ... done
[08:08:17.921] | : . ' , ; MultisessionFuture started
[08:08:17.921] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:17.921] | : . ' Launching futures ... done
[08:08:17.922] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:17.922] | : . Using MultisessionFutureBackend ... done
[08:08:17.922] | : run() for ‘Future’ (<unnamed-37>) ... done
[08:08:17.922] | future(..., label = NULL) ... done
[08:08:17.922] | value() for MultisessionFuture (<unnamed-37>) ...
[08:08:17.922] | : result() for ClusterFuture ...
[08:08:17.922] | : . assertValidConnection() ...
[08:08:17.922] | : . ' cluster node index: 1
[08:08:17.923] | : . assertValidConnection() ... done
[08:08:17.923] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:17.923] | : . ' cluster node index: 1
[08:08:17.966] | : . ' [1] TRUE
[08:08:17.966] | : . ' received data:
[08:08:17.966] | : . ' List of 5
[08:08:17.966] | : . '  $ type   : chr "VALUE"
[08:08:17.966] | : . '  $ value  :List of 16
[08:08:17.966] | : . '   ..$ value              :List of 12
[08:08:17.966] | : . '   .. ..$ coefficients : Named num 2.91
[08:08:17.966] | : . '   .. .. ..- attr(*, "names")= chr "speed"
[08:08:17.966] | : . '   .. ..$ residuals    : Named num [1:50] -9.64 -1.64 -16.36 1.64 -7.27 ...
[08:08:17.966] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:17.966] | : . '   .. ..$ effects      : Named num [1:50] -334.59 -1.31 -15.8 2.2 -6.63 ...
[08:08:17.966] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "speed" "" "" "" ...
[08:08:17.966] | : . '   .. ..$ rank         : int 1
[08:08:17.966] | : . '   .. ..$ fitted.values: Named num [1:50] 11.6 11.6 20.4 20.4 23.3 ...
[08:08:17.966] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:17.966] | : . '   .. ..$ assign       : int 1
[08:08:17.966] | : . '   .. ..$ qr           :List of 5
[08:08:17.966] | : . '   .. .. ..$ qr   : num [1:50, 1] -115.013 0.0348 0.0609 0.0609 0.0696 ...
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.966] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:17.966] | : . '   .. .. .. .. ..$ : chr "speed"
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "assign")= int 1
[08:08:17.966] | : . '   .. .. ..$ qraux: num 1.03
[08:08:17.966] | : . '   .. .. ..$ pivot: int 1
[08:08:17.966] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:17.966] | : . '   .. .. ..$ rank : int 1
[08:08:17.966] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:17.966] | : . '   .. ..$ df.residual  : int 49
[08:08:17.966] | : . '   .. ..$ xlevels      : Named list()
[08:08:17.966] | : . '   .. ..$ call         : language lm(formula = dist ~ . + 0, data = cars)
[08:08:17.966] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + 0
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.966] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:17.966] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:17.966] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa22ae1f0> 
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:17.966] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:17.966] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:17.966] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:17.966] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + 0
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:17.966] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:17.966] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:17.966] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 0
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa22ae1f0> 
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:17.966] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:17.966] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:17.966] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:17.966] | : . '   ..$ visible            : logi TRUE
[08:08:17.966] | : . '   ..$ stdout             : chr ""
[08:08:17.966] | : . '   ..$ conditions         : list()
[08:08:17.966] | : . '   ..$ rng                : logi FALSE
[08:08:17.966] | : . '   ..$ seed               : NULL
[08:08:17.966] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:17.966] | : . '   ..$ misuseConnections  :List of 3
[08:08:17.966] | : . '   .. ..$ added   : NULL
[08:08:17.966] | : . '   .. ..$ removed : NULL
[08:08:17.966] | : . '   .. ..$ replaced: NULL
[08:08:17.966] | : . '   ..$ misuseDevices      : NULL
[08:08:17.966] | : . '   ..$ misuseDefaultDevice: list()
[08:08:17.966] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.966] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:17"
[08:08:17.966] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "37"
[08:08:17.966] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:17.966] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:17.966] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:17.966] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:17.966] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:17.966] | : . '   .. .. ..$ pid   : int 69362
[08:08:17.966] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:17.966] | : . '   .. .. ..$ random: int 2147483647
[08:08:17.966] | : . '   ..$ r_info             :List of 4
[08:08:17.966] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:17.966] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:17.966] | : . '   .. ..$ os           : chr "unix"
[08:08:17.966] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:17.966] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:17.966] | : . '   ..$ version            : chr "1.8"
[08:08:17.966] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:17.966] | : . '  $ success: logi TRUE
[08:08:17.966] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:17.966] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:17.966] | : . '  $ tag    : NULL
[08:08:18.000] | : . ' Received FutureResult
[08:08:18.000] | : . ' FutureResult:
[08:08:18.000] | : . ' value: ‘lm’
[08:08:18.000] | : . ' visible: TRUE
[08:08:18.000] | : . ' stdout: character
[08:08:18.000] | : . ' conditions: [n = 0] 
[08:08:18.000] | : . ' RNG used: FALSE
[08:08:18.000] | : . ' duration: 0.003787279 secs (started 2025-06-17 08:08:17.961944)
[08:08:18.000] | : . ' version: 1.8
[08:08:18.001] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:18.001] | : . ' , Removed future from position #1
[08:08:18.001] | : . ' , Number of registered futures: 0
[08:08:18.001] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:18.001] | : . ' Erased future from future backend
[08:08:18.001] | : . ' result() for ClusterFuture ...
[08:08:18.002] | : . ' , result already collected: FutureResult
[08:08:18.002] | : . ' result() for ClusterFuture ... done
[08:08:18.002] | : . ' signalConditions() ...
[08:08:18.002] | : . ' , include = ‘immediateCondition’
[08:08:18.002] | : . ' , exclude = 
[08:08:18.002] | : . ' , resignal = FALSE
[08:08:18.002] | : . ' , Number of conditions: 0
[08:08:18.002] | : . ' ,  int 0
[08:08:18.003] | : . ' signalConditions() ... done
[08:08:18.003] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:18.003] | : result() for ClusterFuture ... done
[08:08:18.003] | : result() for ClusterFuture ...
[08:08:18.003] | : . result already collected: FutureResult
[08:08:18.003] | : result() for ClusterFuture ... done
[08:08:18.003] | : signalConditions() ...
[08:08:18.003] | : . include = ‘immediateCondition’
[08:08:18.004] | : . exclude = 
[08:08:18.004] | : . resignal = FALSE
[08:08:18.004] | : . Number of conditions: 0
[08:08:18.004] | : .  int 0
[08:08:18.004] | : signalConditions() ... done
[08:08:18.004] | : relay stdout ...
[08:08:18.004] | : relay stdout ... done
[08:08:18.004] | : check for misuse ...
[08:08:18.005] | : check for misuse ... done
[08:08:18.005] | value() for MultisessionFuture (<unnamed-37>) ... done

Call:
lm(formula = dist ~ . + 0, data = cars)

Coefficients:
speed  
2.909  

- Globals - lm(<formula #3 (‘c’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

[08:08:18.007] | future(..., label = NULL) ...
[08:08:18.007] | : lazy: FALSE
[08:08:18.007] | : stdout: TRUE
[08:08:18.007] | : conditions: [n=1] ‘condition’
[08:08:18.007] | : gc: FALSE
[08:08:18.007] | : earlySignal: FALSE
[08:08:18.008] | : getGlobalsAndPackages() ...
[08:08:18.008] | : . Searching for globals ...
[08:08:18.024] | : . ' globals found: [8] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘^’, ‘~’, ‘cars’
[08:08:18.024] | : . Searching for globals ... done
[08:08:18.024] | : . Resolving globals: FALSE
[08:08:18.024] | : . Search for packages associated with the globals ...
[08:08:18.025] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.025] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.025] | : . Search for packages associated with the globals ... done
[08:08:18.025] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:18.025] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:18.025] | : . globals: [0] 
[08:08:18.026] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:18.026] | : getGlobalsAndPackages() ... done
[08:08:18.026] | : run() for ‘Future’ (<unnamed-38>) ...
[08:08:18.026] | : . state: ‘created’
[08:08:18.026] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.026] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.026] | : . Using MultisessionFutureBackend ...
[08:08:18.026] | : . ' Number of futures since start: 9 (9 created, 9 launched, 9 finished)
[08:08:18.027] | : . ' Launching futures ...
[08:08:18.027] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:18.027] | : . ' , ; Workers: [n=2]
[08:08:18.027] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:18.029] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:18.029] | : . ' , ; requestWorker() ...
[08:08:18.029] | : . ' , ; ` requestNode() ...
[08:08:18.029] | : . ' , ; ` | Number of workers: 2
[08:08:18.029] | : . ' , ; ` | Polling for a free worker ...
[08:08:18.029] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.029] | : . ' , ; ` | : . Listing all futures
[08:08:18.029] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.029] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.030] | : . ' , ; ` | : Total time: 0
[08:08:18.030] | : . ' , ; ` | Polling for a free worker ... done
[08:08:18.030] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.030] | : . ' , ; ` | : Listing all futures
[08:08:18.030] | : . ' , ; ` | : Number of registered futures: 0
[08:08:18.030] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.030] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:18.030] | : . ' , ; ` | Index of first available worker: 1
[08:08:18.030] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:18.129] | : . ' , ; ` | : Worker is functional
[08:08:18.129] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.129] | : . ' , ; ` | : . Listing all futures
[08:08:18.129] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.129] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.129] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:18.130] | : . ' , ; ` requestNode() ... done
[08:08:18.130] | : . ' , ; ` cluster node index: 1
[08:08:18.130] | : . ' , ; requestWorker() ... done
[08:08:18.130] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:18.130] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:18.130] | : . ' , ; launchFuture() ...
[08:08:18.131] | : . ' , ; ` cluster node index: 1
[08:08:18.131] | : . ' , ; ` getFutureData() ...
[08:08:18.131] | : . ' , ; ` | getFutureCore() ...
[08:08:18.131] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:18.131] | : . ' , ; ` | getFutureCore() ... done
[08:08:18.131] | : . ' , ; ` | getFutureCapture() ...
[08:08:18.131] | : . ' , ; ` | getFutureCapture() ... done
[08:08:18.131] | : . ' , ; ` | getFutureContext() ...
[08:08:18.131] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.132] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:18.132] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.132] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:18.132] | : . ' , ; ` | getFutureContext() ... done
[08:08:18.132] | : . ' , ; ` getFutureData() ... done
[08:08:18.132] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:18.132] | : . ' , ; ` | Appended future to position #1
[08:08:18.133] | : . ' , ; ` | Number of registered futures: 1
[08:08:18.133] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:18.133] | : . ' , ; launchFuture() ... done
[08:08:18.133] | : . ' , ; MultisessionFuture started
[08:08:18.133] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:18.133] | : . ' Launching futures ... done
[08:08:18.133] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:18.133] | : . Using MultisessionFutureBackend ... done
[08:08:18.133] | : run() for ‘Future’ (<unnamed-38>) ... done
[08:08:18.134] | future(..., label = NULL) ... done
[08:08:18.134] | value() for MultisessionFuture (<unnamed-38>) ...
[08:08:18.134] | : result() for ClusterFuture ...
[08:08:18.134] | : . assertValidConnection() ...
[08:08:18.134] | : . ' cluster node index: 1
[08:08:18.134] | : . assertValidConnection() ... done
[08:08:18.135] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:18.135] | : . ' cluster node index: 1
[08:08:18.177] | : . ' [1] TRUE
[08:08:18.178] | : . ' received data:
[08:08:18.178] | : . ' List of 5
[08:08:18.178] | : . '  $ type   : chr "VALUE"
[08:08:18.178] | : . '  $ value  :List of 16
[08:08:18.178] | : . '   ..$ value              :List of 12
[08:08:18.178] | : . '   .. ..$ coefficients : Named num [1:2] -17.58 3.93
[08:08:18.178] | : . '   .. .. ..- attr(*, "names")= chr [1:2] "(Intercept)" "speed"
[08:08:18.178] | : . '   .. ..$ residuals    : Named num [1:50] 3.85 11.85 -5.95 12.05 2.12 ...
[08:08:18.178] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.178] | : . '   .. ..$ effects      : Named num [1:50] -303.914 145.552 -8.115 9.885 0.194 ...
[08:08:18.178] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "" "" ...
[08:08:18.178] | : . '   .. ..$ rank         : int 2
[08:08:18.178] | : . '   .. ..$ fitted.values: Named num [1:50] -1.85 -1.85 9.95 9.95 13.88 ...
[08:08:18.178] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.178] | : . '   .. ..$ assign       : int [1:2] 0 1
[08:08:18.178] | : . '   .. ..$ qr           :List of 5
[08:08:18.178] | : . '   .. .. ..$ qr   : num [1:50, 1:2] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.178] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:18.178] | : . '   .. .. .. .. ..$ : chr [1:2] "(Intercept)" "speed"
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "assign")= int [1:2] 0 1
[08:08:18.178] | : . '   .. .. ..$ qraux: num [1:2] 1.14 1.27
[08:08:18.178] | : . '   .. .. ..$ pivot: int [1:2] 1 2
[08:08:18.178] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:18.178] | : . '   .. .. ..$ rank : int 2
[08:08:18.178] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:18.178] | : . '   .. ..$ df.residual  : int 48
[08:08:18.178] | : . '   .. ..$ xlevels      : Named list()
[08:08:18.178] | : . '   .. ..$ call         : language lm(formula = dist ~ speed + speed^2, data = cars)
[08:08:18.178] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + speed^2
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.178] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:18.178] | : . '   .. .. .. .. .. ..$ : chr "speed"
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:18.178] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa4177848> 
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:18.178] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:18.178] | : . '   .. .. ..$ dist : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:18.178] | : . '   .. .. ..$ speed: num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:18.178] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + speed^2
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed)
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:18.178] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.178] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "speed"
[08:08:18.178] | : . '   .. .. .. .. .. .. ..$ : chr "speed"
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "speed"
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa4177848> 
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed)
[08:08:18.178] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "numeric"
[08:08:18.178] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "speed"
[08:08:18.178] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:18.178] | : . '   ..$ visible            : logi TRUE
[08:08:18.178] | : . '   ..$ stdout             : chr ""
[08:08:18.178] | : . '   ..$ conditions         : list()
[08:08:18.178] | : . '   ..$ rng                : logi FALSE
[08:08:18.178] | : . '   ..$ seed               : NULL
[08:08:18.178] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:18.178] | : . '   ..$ misuseConnections  :List of 3
[08:08:18.178] | : . '   .. ..$ added   : NULL
[08:08:18.178] | : . '   .. ..$ removed : NULL
[08:08:18.178] | : . '   .. ..$ replaced: NULL
[08:08:18.178] | : . '   ..$ misuseDevices      : NULL
[08:08:18.178] | : . '   ..$ misuseDefaultDevice: list()
[08:08:18.178] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.178] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.178] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "38"
[08:08:18.178] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:18.178] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:18.178] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:18.178] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:18.178] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:18.178] | : . '   .. .. ..$ pid   : int 69362
[08:08:18.178] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:18.178] | : . '   .. .. ..$ random: int 2147483647
[08:08:18.178] | : . '   ..$ r_info             :List of 4
[08:08:18.178] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:18.178] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:18.178] | : . '   .. ..$ os           : chr "unix"
[08:08:18.178] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:18.178] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:18.178] | : . '   ..$ version            : chr "1.8"
[08:08:18.178] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:18.178] | : . '  $ success: logi TRUE
[08:08:18.178] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:18.178] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:18.178] | : . '  $ tag    : NULL
[08:08:18.208] | : . ' Received FutureResult
[08:08:18.208] | : . ' FutureResult:
[08:08:18.208] | : . ' value: ‘lm’
[08:08:18.208] | : . ' visible: TRUE
[08:08:18.208] | : . ' stdout: character
[08:08:18.208] | : . ' conditions: [n = 0] 
[08:08:18.208] | : . ' RNG used: FALSE
[08:08:18.208] | : . ' duration: 0.003310919 secs (started 2025-06-17 08:08:18.173815)
[08:08:18.208] | : . ' version: 1.8
[08:08:18.208] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:18.208] | : . ' , Removed future from position #1
[08:08:18.209] | : . ' , Number of registered futures: 0
[08:08:18.209] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:18.209] | : . ' Erased future from future backend
[08:08:18.209] | : . ' result() for ClusterFuture ...
[08:08:18.209] | : . ' , result already collected: FutureResult
[08:08:18.209] | : . ' result() for ClusterFuture ... done
[08:08:18.209] | : . ' signalConditions() ...
[08:08:18.209] | : . ' , include = ‘immediateCondition’
[08:08:18.209] | : . ' , exclude = 
[08:08:18.210] | : . ' , resignal = FALSE
[08:08:18.210] | : . ' , Number of conditions: 0
[08:08:18.210] | : . ' ,  int 0
[08:08:18.210] | : . ' signalConditions() ... done
[08:08:18.210] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:18.210] | : result() for ClusterFuture ... done
[08:08:18.210] | : result() for ClusterFuture ...
[08:08:18.211] | : . result already collected: FutureResult
[08:08:18.211] | : result() for ClusterFuture ... done
[08:08:18.211] | : signalConditions() ...
[08:08:18.211] | : . include = ‘immediateCondition’
[08:08:18.211] | : . exclude = 
[08:08:18.211] | : . resignal = FALSE
[08:08:18.211] | : . Number of conditions: 0
[08:08:18.211] | : .  int 0
[08:08:18.212] | : signalConditions() ... done
[08:08:18.212] | : relay stdout ...
[08:08:18.212] | : relay stdout ... done
[08:08:18.212] | : check for misuse ...
[08:08:18.212] | : check for misuse ... done
[08:08:18.212] | value() for MultisessionFuture (<unnamed-38>) ... done

Call:
lm(formula = dist ~ speed + speed^2, data = cars)

Coefficients:
(Intercept)        speed  
    -17.579        3.932  

- Globals - lm(<formula #4 (‘d’)>, data = cars) ...

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

[08:08:18.215] | future(..., label = NULL) ...
[08:08:18.215] | : lazy: FALSE
[08:08:18.215] | : stdout: TRUE
[08:08:18.215] | : conditions: [n=1] ‘condition’
[08:08:18.215] | : gc: FALSE
[08:08:18.215] | : earlySignal: FALSE
[08:08:18.215] | : getGlobalsAndPackages() ...
[08:08:18.215] | : . Searching for globals ...
[08:08:18.233] | : . ' globals found: [9] ‘{’, ‘lm’, ‘dist’, ‘+’, ‘speed’, ‘I’, ‘^’, ‘~’, ‘cars’
[08:08:18.233] | : . Searching for globals ... done
[08:08:18.234] | : . Resolving globals: FALSE
[08:08:18.234] | : . Search for packages associated with the globals ...
[08:08:18.234] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.234] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.234] | : . Search for packages associated with the globals ... done
[08:08:18.235] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:18.235] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:18.235] | : . globals: [0] 
[08:08:18.235] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:18.235] | : getGlobalsAndPackages() ... done
[08:08:18.235] | : run() for ‘Future’ (<unnamed-39>) ...
[08:08:18.235] | : . state: ‘created’
[08:08:18.236] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.236] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.236] | : . Using MultisessionFutureBackend ...
[08:08:18.236] | : . ' Number of futures since start: 10 (10 created, 10 launched, 10 finished)
[08:08:18.236] | : . ' Launching futures ...
[08:08:18.236] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:18.236] | : . ' , ; Workers: [n=2]
[08:08:18.236] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:18.238] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:18.238] | : . ' , ; requestWorker() ...
[08:08:18.238] | : . ' , ; ` requestNode() ...
[08:08:18.238] | : . ' , ; ` | Number of workers: 2
[08:08:18.238] | : . ' , ; ` | Polling for a free worker ...
[08:08:18.239] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.239] | : . ' , ; ` | : . Listing all futures
[08:08:18.239] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.239] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.239] | : . ' , ; ` | : Total time: 0
[08:08:18.239] | : . ' , ; ` | Polling for a free worker ... done
[08:08:18.239] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.239] | : . ' , ; ` | : Listing all futures
[08:08:18.239] | : . ' , ; ` | : Number of registered futures: 0
[08:08:18.239] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.240] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:18.240] | : . ' , ; ` | Index of first available worker: 1
[08:08:18.240] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:18.335] | : . ' , ; ` | : Worker is functional
[08:08:18.336] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.336] | : . ' , ; ` | : . Listing all futures
[08:08:18.336] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.336] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.337] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:18.337] | : . ' , ; ` requestNode() ... done
[08:08:18.337] | : . ' , ; ` cluster node index: 1
[08:08:18.337] | : . ' , ; requestWorker() ... done
[08:08:18.338] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:18.338] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:18.338] | : . ' , ; launchFuture() ...
[08:08:18.339] | : . ' , ; ` cluster node index: 1
[08:08:18.339] | : . ' , ; ` getFutureData() ...
[08:08:18.339] | : . ' , ; ` | getFutureCore() ...
[08:08:18.339] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:18.340] | : . ' , ; ` | getFutureCore() ... done
[08:08:18.340] | : . ' , ; ` | getFutureCapture() ...
[08:08:18.340] | : . ' , ; ` | getFutureCapture() ... done
[08:08:18.340] | : . ' , ; ` | getFutureContext() ...
[08:08:18.340] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.341] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:18.341] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.341] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:18.341] | : . ' , ; ` | getFutureContext() ... done
[08:08:18.342] | : . ' , ; ` getFutureData() ... done
[08:08:18.342] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:18.342] | : . ' , ; ` | Appended future to position #1
[08:08:18.343] | : . ' , ; ` | Number of registered futures: 1
[08:08:18.343] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:18.343] | : . ' , ; launchFuture() ... done
[08:08:18.343] | : . ' , ; MultisessionFuture started
[08:08:18.343] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:18.343] | : . ' Launching futures ... done
[08:08:18.344] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:18.344] | : . Using MultisessionFutureBackend ... done
[08:08:18.344] | : run() for ‘Future’ (<unnamed-39>) ... done
[08:08:18.344] | future(..., label = NULL) ... done
[08:08:18.344] | value() for MultisessionFuture (<unnamed-39>) ...
[08:08:18.345] | : result() for ClusterFuture ...
[08:08:18.345] | : . assertValidConnection() ...
[08:08:18.345] | : . ' cluster node index: 1
[08:08:18.346] | : . assertValidConnection() ... done
[08:08:18.346] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:18.346] | : . ' cluster node index: 1
[08:08:18.387] | : . ' [1] TRUE
[08:08:18.387] | : . ' received data:
[08:08:18.387] | : . ' List of 5
[08:08:18.387] | : . '  $ type   : chr "VALUE"
[08:08:18.387] | : . '  $ value  :List of 16
[08:08:18.387] | : . '   ..$ value              :List of 12
[08:08:18.387] | : . '   .. ..$ coefficients : Named num [1:3] 2.47 0.913 0.1
[08:08:18.387] | : . '   .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[08:08:18.387] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.387] | : . '   .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[08:08:18.387] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "speed" "I(speed^2)" "" ...
[08:08:18.387] | : . '   .. ..$ rank         : int 3
[08:08:18.387] | : . '   .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[08:08:18.387] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.387] | : . '   .. ..$ assign       : int [1:3] 0 1 2
[08:08:18.387] | : . '   .. ..$ qr           :List of 5
[08:08:18.387] | : . '   .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.387] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:18.387] | : . '   .. .. .. .. ..$ : chr [1:3] "(Intercept)" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 2
[08:08:18.387] | : . '   .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[08:08:18.387] | : . '   .. .. ..$ pivot: int [1:3] 1 2 3
[08:08:18.387] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:18.387] | : . '   .. .. ..$ rank : int 3
[08:08:18.387] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:18.387] | : . '   .. ..$ df.residual  : int 47
[08:08:18.387] | : . '   .. ..$ xlevels      : Named list()
[08:08:18.387] | : . '   .. ..$ call         : language lm(formula = dist ~ speed + I(speed^2), data = cars)
[08:08:18.387] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.387] | : . '   .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:18.387] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3a4fd70> 
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. ..$ model        :'data.frame':	50 obs. of  3 variables:
[08:08:18.387] | : . '   .. .. ..$ dist      : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:18.387] | : . '   .. .. ..$ speed     : num [1:50] 4 4 7 7 8 9 10 10 10 11 ...
[08:08:18.387] | : . '   .. .. ..$ I(speed^2): 'AsIs' num [1:50]  16  16  49  49  64  81 100 100 100 121 ...
[08:08:18.387] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ speed + I(speed^2)
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, speed, I(speed^2))
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:3, 1:2] 0 1 0 0 0 1
[08:08:18.387] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.387] | : . '   .. .. .. .. .. .. ..$ : chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr [1:2] "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "order")= int [1:2] 1 1
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa3a4fd70> 
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, speed, I(speed^2))
[08:08:18.387] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:3] "numeric" "numeric" "numeric"
[08:08:18.387] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:3] "dist" "speed" "I(speed^2)"
[08:08:18.387] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:18.387] | : . '   ..$ visible            : logi TRUE
[08:08:18.387] | : . '   ..$ stdout             : chr ""
[08:08:18.387] | : . '   ..$ conditions         : list()
[08:08:18.387] | : . '   ..$ rng                : logi FALSE
[08:08:18.387] | : . '   ..$ seed               : NULL
[08:08:18.387] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:18.387] | : . '   ..$ misuseConnections  :List of 3
[08:08:18.387] | : . '   .. ..$ added   : NULL
[08:08:18.387] | : . '   .. ..$ removed : NULL
[08:08:18.387] | : . '   .. ..$ replaced: NULL
[08:08:18.387] | : . '   ..$ misuseDevices      : NULL
[08:08:18.387] | : . '   ..$ misuseDefaultDevice: list()
[08:08:18.387] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.387] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.387] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "39"
[08:08:18.387] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:18.387] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:18.387] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:18.387] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:18.387] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:18.387] | : . '   .. .. ..$ pid   : int 69362
[08:08:18.387] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:18.387] | : . '   .. .. ..$ random: int 2147483647
[08:08:18.387] | : . '   ..$ r_info             :List of 4
[08:08:18.387] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:18.387] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:18.387] | : . '   .. ..$ os           : chr "unix"
[08:08:18.387] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:18.387] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:18.387] | : . '   ..$ version            : chr "1.8"
[08:08:18.387] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:18.387] | : . '  $ success: logi TRUE
[08:08:18.387] | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:18.387] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:18.387] | : . '  $ tag    : NULL
[08:08:18.418] | : . ' Received FutureResult
[08:08:18.418] | : . ' FutureResult:
[08:08:18.418] | : . ' value: ‘lm’
[08:08:18.418] | : . ' visible: TRUE
[08:08:18.418] | : . ' stdout: character
[08:08:18.418] | : . ' conditions: [n = 0] 
[08:08:18.418] | : . ' RNG used: FALSE
[08:08:18.418] | : . ' duration: 0.003722429 secs (started 2025-06-17 08:08:18.382924)
[08:08:18.418] | : . ' version: 1.8
[08:08:18.418] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:18.418] | : . ' , Removed future from position #1
[08:08:18.419] | : . ' , Number of registered futures: 0
[08:08:18.419] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:18.419] | : . ' Erased future from future backend
[08:08:18.419] | : . ' result() for ClusterFuture ...
[08:08:18.419] | : . ' , result already collected: FutureResult
[08:08:18.419] | : . ' result() for ClusterFuture ... done
[08:08:18.419] | : . ' signalConditions() ...
[08:08:18.419] | : . ' , include = ‘immediateCondition’
[08:08:18.419] | : . ' , exclude = 
[08:08:18.419] | : . ' , resignal = FALSE
[08:08:18.420] | : . ' , Number of conditions: 0
[08:08:18.420] | : . ' ,  int 0
[08:08:18.420] | : . ' signalConditions() ... done
[08:08:18.420] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:18.420] | : result() for ClusterFuture ... done
[08:08:18.420] | : result() for ClusterFuture ...
[08:08:18.420] | : . result already collected: FutureResult
[08:08:18.421] | : result() for ClusterFuture ... done
[08:08:18.421] | : signalConditions() ...
[08:08:18.421] | : . include = ‘immediateCondition’
[08:08:18.421] | : . exclude = 
[08:08:18.421] | : . resignal = FALSE
[08:08:18.421] | : . Number of conditions: 0
[08:08:18.421] | : .  int 0
[08:08:18.422] | : signalConditions() ... done
[08:08:18.422] | : relay stdout ...
[08:08:18.422] | : relay stdout ... done
[08:08:18.422] | : check for misuse ...
[08:08:18.422] | : check for misuse ... done
[08:08:18.422] | value() for MultisessionFuture (<unnamed-39>) ... done

Call:
lm(formula = dist ~ speed + I(speed^2), data = cars)

Coefficients:
(Intercept)        speed   I(speed^2)  
    2.47014      0.91329      0.09996  

- Globals - lm(<formula #5 (‘e’)>, data = cars) ...

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

[08:08:18.425] | future(..., label = NULL) ...
[08:08:18.425] | : lazy: FALSE
[08:08:18.425] | : stdout: TRUE
[08:08:18.425] | : conditions: [n=1] ‘condition’
[08:08:18.425] | : gc: FALSE
[08:08:18.425] | : earlySignal: FALSE
[08:08:18.425] | : getGlobalsAndPackages() ...
[08:08:18.425] | : . Searching for globals ...
[08:08:18.438] | : . ' globals found: [7] ‘{’, ‘lm’, ‘dist’, ‘poly’, ‘speed’, ‘~’, ‘cars’
[08:08:18.438] | : . Searching for globals ... done
[08:08:18.438] | : . Resolving globals: FALSE
[08:08:18.438] | : . Search for packages associated with the globals ...
[08:08:18.439] | : . ' Packages associated with globals: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.439] | : . ' Packages: [3] ‘base’, ‘stats’, ‘datasets’
[08:08:18.439] | : . Search for packages associated with the globals ... done
[08:08:18.439] | : . Packages after dropping 'base': [2] ‘stats’, ‘datasets’
[08:08:18.439] | : . Packages after dropping non-attached packages: [2] ‘stats’, ‘datasets’
[08:08:18.439] | : . globals: [0] 
[08:08:18.440] | : . packages: [2] ‘stats’, ‘datasets’
[08:08:18.440] | : getGlobalsAndPackages() ... done
[08:08:18.440] | : run() for ‘Future’ (<unnamed-40>) ...
[08:08:18.440] | : . state: ‘created’
[08:08:18.440] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.440] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.440] | : . Using MultisessionFutureBackend ...
[08:08:18.441] | : . ' Number of futures since start: 11 (11 created, 11 launched, 11 finished)
[08:08:18.441] | : . ' Launching futures ...
[08:08:18.441] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:18.441] | : . ' , ; Workers: [n=2]
[08:08:18.441] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:18.443] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:18.443] | : . ' , ; requestWorker() ...
[08:08:18.443] | : . ' , ; ` requestNode() ...
[08:08:18.443] | : . ' , ; ` | Number of workers: 2
[08:08:18.443] | : . ' , ; ` | Polling for a free worker ...
[08:08:18.443] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.443] | : . ' , ; ` | : . Listing all futures
[08:08:18.443] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.444] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.444] | : . ' , ; ` | : Total time: 0
[08:08:18.444] | : . ' , ; ` | Polling for a free worker ... done
[08:08:18.444] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.444] | : . ' , ; ` | : Listing all futures
[08:08:18.444] | : . ' , ; ` | : Number of registered futures: 0
[08:08:18.444] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.444] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:18.444] | : . ' , ; ` | Index of first available worker: 1
[08:08:18.444] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:18.541] | : . ' , ; ` | : Worker is functional
[08:08:18.541] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.541] | : . ' , ; ` | : . Listing all futures
[08:08:18.541] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.541] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.541] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:18.542] | : . ' , ; ` requestNode() ... done
[08:08:18.542] | : . ' , ; ` cluster node index: 1
[08:08:18.542] | : . ' , ; requestWorker() ... done
[08:08:18.542] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:18.542] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:18.542] | : . ' , ; launchFuture() ...
[08:08:18.543] | : . ' , ; ` cluster node index: 1
[08:08:18.543] | : . ' , ; ` getFutureData() ...
[08:08:18.543] | : . ' , ; ` | getFutureCore() ...
[08:08:18.543] | : . ' , ; ` | : Packages needed by the future expression (n = 2): ‘stats’, ‘datasets’
[08:08:18.543] | : . ' , ; ` | getFutureCore() ... done
[08:08:18.543] | : . ' , ; ` | getFutureCapture() ...
[08:08:18.543] | : . ' , ; ` | getFutureCapture() ... done
[08:08:18.543] | : . ' , ; ` | getFutureContext() ...
[08:08:18.544] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.544] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:18.544] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.544] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:18.544] | : . ' , ; ` | getFutureContext() ... done
[08:08:18.544] | : . ' , ; ` getFutureData() ... done
[08:08:18.544] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:18.545] | : . ' , ; ` | Appended future to position #1
[08:08:18.545] | : . ' , ; ` | Number of registered futures: 1
[08:08:18.545] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:18.545] | : . ' , ; launchFuture() ... done
[08:08:18.545] | : . ' , ; MultisessionFuture started
[08:08:18.545] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:18.545] | : . ' Launching futures ... done
[08:08:18.545] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:18.545] | : . Using MultisessionFutureBackend ... done
[08:08:18.545] | : run() for ‘Future’ (<unnamed-40>) ... done
[08:08:18.546] | future(..., label = NULL) ... done
[08:08:18.546] | value() for MultisessionFuture (<unnamed-40>) ...
[08:08:18.546] | : result() for ClusterFuture ...
[08:08:18.546] | : . assertValidConnection() ...
[08:08:18.546] | : . ' cluster node index: 1
[08:08:18.546] | : . assertValidConnection() ... done
[08:08:18.547] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:18.547] | : . ' cluster node index: 1
[08:08:18.591] | : . ' [1] TRUE
[08:08:18.591] | : . ' received data:
[08:08:18.591] | : . ' List of 5
[08:08:18.591] | : . '  $ type   : chr "VALUE"
[08:08:18.591] | : . '  $ value  :List of 16
[08:08:18.591] | : . '   ..$ value              :List of 12
[08:08:18.591] | : . '   .. ..$ coefficients : Named num [1:3] 43 146 23
[08:08:18.591] | : . '   .. .. ..- attr(*, "names")= chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[08:08:18.591] | : . '   .. ..$ residuals    : Named num [1:50] -5.723 2.277 -9.761 8.239 -0.174 ...
[08:08:18.591] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.591] | : . '   .. ..$ effects      : Named num [1:50] -303.91 145.55 -23 9.04 0.17 ...
[08:08:18.591] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2" "" ...
[08:08:18.591] | : . '   .. ..$ rank         : int 3
[08:08:18.591] | : . '   .. ..$ fitted.values: Named num [1:50] 7.72 7.72 13.76 13.76 16.17 ...
[08:08:18.591] | : . '   .. .. ..- attr(*, "names")= chr [1:50] "1" "2" "3" "4" ...
[08:08:18.591] | : . '   .. ..$ assign       : int [1:3] 0 1 1
[08:08:18.591] | : . '   .. ..$ qr           :List of 5
[08:08:18.591] | : . '   .. .. ..$ qr   : num [1:50, 1:3] -7.071 0.141 0.141 0.141 0.141 ...
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.591] | : . '   .. .. .. .. ..$ : chr [1:50] "1" "2" "3" "4" ...
[08:08:18.591] | : . '   .. .. .. .. ..$ : chr [1:3] "(Intercept)" "poly(speed, 2)1" "poly(speed, 2)2"
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "assign")= int [1:3] 0 1 1
[08:08:18.591] | : . '   .. .. ..$ qraux: num [1:3] 1.14 1.27 1.06
[08:08:18.591] | : . '   .. .. ..$ pivot: int [1:3] 1 2 3
[08:08:18.591] | : . '   .. .. ..$ tol  : num 1e-07
[08:08:18.591] | : . '   .. .. ..$ rank : int 3
[08:08:18.591] | : . '   .. .. ..- attr(*, "class")= chr "qr"
[08:08:18.591] | : . '   .. ..$ df.residual  : int 47
[08:08:18.591] | : . '   .. ..$ xlevels      : Named list()
[08:08:18.591] | : . '   .. ..$ call         : language lm(formula = dist ~ poly(speed, 2), data = cars)
[08:08:18.591] | : . '   .. ..$ terms        :Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.591] | : . '   .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "order")= int 1
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "response")= int 1
[08:08:18.591] | : . '   .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa45f5da8> 
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[08:08:18.591] | : . '   .. ..$ model        :'data.frame':	50 obs. of  2 variables:
[08:08:18.591] | : . '   .. .. ..$ dist          : num [1:50] 2 10 4 22 16 10 18 26 34 17 ...
[08:08:18.591] | : . '   .. .. ..$ poly(speed, 2): 'poly' num [1:50, 1:2] -0.308 -0.308 -0.227 -0.227 -0.2 ...
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.591] | : . '   .. .. .. .. ..$ : NULL
[08:08:18.591] | : . '   .. .. .. .. ..$ : chr [1:2] "1" "2"
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "coefs")=List of 2
[08:08:18.591] | : . '   .. .. .. .. ..$ alpha: num [1:2] 15.4 14.8
[08:08:18.591] | : . '   .. .. .. .. ..$ norm2: num [1:4] 1 50 1370 52924
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "degree")= int [1:2] 1 2
[08:08:18.591] | : . '   .. .. ..- attr(*, "terms")=Classes 'terms', 'formula'  language dist ~ poly(speed, 2)
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "variables")= language list(dist, poly(speed, 2))
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "factors")= int [1:2, 1] 0 1
[08:08:18.591] | : . '   .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
[08:08:18.591] | : . '   .. .. .. .. .. .. ..$ : chr [1:2] "dist" "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. .. .. .. ..$ : chr "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "term.labels")= chr "poly(speed, 2)"
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "order")= int 1
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "intercept")= int 1
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "response")= int 1
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, ".Environment")=<environment: 0x55ffa45f5da8> 
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "predvars")= language list(dist, poly(speed, 2, coefs = list(alpha = c(15.4, 14.803503649635),      norm2 = c(1, 50, 1370, 52923.5831824818))))
[08:08:18.591] | : . '   .. .. .. .. ..- attr(*, "dataClasses")= Named chr [1:2] "numeric" "nmatrix.2"
[08:08:18.591] | : . '   .. .. .. .. .. ..- attr(*, "names")= chr [1:2] "dist" "poly(speed, 2)"
[08:08:18.591] | : . '   .. ..- attr(*, "class")= chr "lm"
[08:08:18.591] | : . '   ..$ visible            : logi TRUE
[08:08:18.591] | : . '   ..$ stdout             : chr ""
[08:08:18.591] | : . '   ..$ conditions         : list()
[08:08:18.591] | : . '   ..$ rng                : logi FALSE
[08:08:18.591] | : . '   ..$ seed               : NULL
[08:08:18.591] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:18.591] | : . '   ..$ misuseConnections  :List of 3
[08:08:18.591] | : . '   .. ..$ added   : NULL
[08:08:18.591] | : . '   .. ..$ removed : NULL
[08:08:18.591] | : . '   .. ..$ replaced: NULL
[08:08:18.591] | : . '   ..$ misuseDevices      : NULL
[08:08:18.591] | : . '   ..$ misuseDefaultDevice: list()
[08:08:18.591] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.591] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.591] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "40"
[08:08:18.591] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:18.591] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:18.591] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:18.591] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:18.591] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:18.591] | : . '   .. .. ..$ pid   : int 69362
[08:08:18.591] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:18.591] | : . '   .. .. ..$ random: int 2147483647
[08:08:18.591] | : . '   ..$ r_info             :List of 4
[08:08:18.591] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:18.591] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:18.591] | : . '   .. ..$ os           : chr "unix"
[08:08:18.591] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:18.591] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:18.591] | : . '   ..$ version            : chr "1.8"
[08:08:18.591] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:18.591] | : . '  $ success: logi TRUE
[08:08:18.591] | : . '  $ time   : 'proc_time' Named num [1:5] 0.005 0.001 0.005 0 0
[08:08:18.591] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:18.591] | : . '  $ tag    : NULL
[08:08:18.623] | : . ' Received FutureResult
[08:08:18.623] | : . ' FutureResult:
[08:08:18.623] | : . ' value: ‘lm’
[08:08:18.623] | : . ' visible: TRUE
[08:08:18.623] | : . ' stdout: character
[08:08:18.623] | : . ' conditions: [n = 0] 
[08:08:18.623] | : . ' RNG used: FALSE
[08:08:18.623] | : . ' duration: 0.004625797 secs (started 2025-06-17 08:08:18.585838)
[08:08:18.623] | : . ' version: 1.8
[08:08:18.623] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:18.623] | : . ' , Removed future from position #1
[08:08:18.623] | : . ' , Number of registered futures: 0
[08:08:18.624] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:18.624] | : . ' Erased future from future backend
[08:08:18.624] | : . ' result() for ClusterFuture ...
[08:08:18.624] | : . ' , result already collected: FutureResult
[08:08:18.624] | : . ' result() for ClusterFuture ... done
[08:08:18.624] | : . ' signalConditions() ...
[08:08:18.624] | : . ' , include = ‘immediateCondition’
[08:08:18.624] | : . ' , exclude = 
[08:08:18.624] | : . ' , resignal = FALSE
[08:08:18.624] | : . ' , Number of conditions: 0
[08:08:18.625] | : . ' ,  int 0
[08:08:18.625] | : . ' signalConditions() ... done
[08:08:18.625] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:18.625] | : result() for ClusterFuture ... done
[08:08:18.625] | : result() for ClusterFuture ...
[08:08:18.625] | : . result already collected: FutureResult
[08:08:18.625] | : result() for ClusterFuture ... done
[08:08:18.626] | : signalConditions() ...
[08:08:18.626] | : . include = ‘immediateCondition’
[08:08:18.626] | : . exclude = 
[08:08:18.626] | : . resignal = FALSE
[08:08:18.626] | : . Number of conditions: 0
[08:08:18.626] | : .  int 0
[08:08:18.626] | : signalConditions() ... done
[08:08:18.627] | : relay stdout ...
[08:08:18.627] | : relay stdout ... done
[08:08:18.627] | : check for misuse ...
[08:08:18.627] | : check for misuse ... done
[08:08:18.627] | value() for MultisessionFuture (<unnamed-40>) ... done

Call:
lm(formula = dist ~ poly(speed, 2), data = cars)

Coefficients:
    (Intercept)  poly(speed, 2)1  poly(speed, 2)2  
          42.98           145.55            23.00  

- Globals - map(x, ~ expr) ...
[08:08:18.629] | future(..., label = NULL) ...
[08:08:18.629] | : lazy: FALSE
[08:08:18.629] | : stdout: TRUE
[08:08:18.629] | : conditions: [n=1] ‘condition’
[08:08:18.629] | : gc: FALSE
[08:08:18.629] | : earlySignal: FALSE
[08:08:18.629] | : getGlobalsAndPackages() ...
[08:08:18.629] | : . Searching for globals ...
[08:08:18.663] | : . ' globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:18.664] | : . Searching for globals ... done
[08:08:18.664] | : . Resolving globals: FALSE
[08:08:18.664] | : . Search for packages associated with the globals ...
[08:08:18.664] | : . ' Packages associated with globals: [1] ‘base’
[08:08:18.665] | : . ' Packages: [1] ‘base’
[08:08:18.665] | : . Search for packages associated with the globals ... done
[08:08:18.665] | : . Packages after dropping 'base': [0] 
[08:08:18.665] | : . globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:18.665] | : . packages: [0] 
[08:08:18.665] | : getGlobalsAndPackages() ... done
[08:08:18.665] | : run() for ‘Future’ (<unnamed-41>) ...
[08:08:18.666] | : . state: ‘created’
[08:08:18.666] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.666] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.666] | : . Using MultisessionFutureBackend ...
[08:08:18.666] | : . ' Number of futures since start: 12 (12 created, 12 launched, 12 finished)
[08:08:18.666] | : . ' Launching futures ...
[08:08:18.666] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:18.666] | : . ' , ; Workers: [n=2]
[08:08:18.667] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:18.668] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:18.668] | : . ' , ; requestWorker() ...
[08:08:18.668] | : . ' , ; ` requestNode() ...
[08:08:18.668] | : . ' , ; ` | Number of workers: 2
[08:08:18.668] | : . ' , ; ` | Polling for a free worker ...
[08:08:18.669] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.669] | : . ' , ; ` | : . Listing all futures
[08:08:18.669] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.669] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.669] | : . ' , ; ` | : Total time: 0
[08:08:18.669] | : . ' , ; ` | Polling for a free worker ... done
[08:08:18.669] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.669] | : . ' , ; ` | : Listing all futures
[08:08:18.669] | : . ' , ; ` | : Number of registered futures: 0
[08:08:18.669] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.670] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:18.670] | : . ' , ; ` | Index of first available worker: 1
[08:08:18.670] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:18.769] | : . ' , ; ` | : Worker is functional
[08:08:18.769] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.769] | : . ' , ; ` | : . Listing all futures
[08:08:18.769] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.769] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.770] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:18.770] | : . ' , ; ` requestNode() ... done
[08:08:18.770] | : . ' , ; ` cluster node index: 1
[08:08:18.770] | : . ' , ; requestWorker() ... done
[08:08:18.770] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:18.770] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:18.771] | : . ' , ; launchFuture() ...
[08:08:18.771] | : . ' , ; ` cluster node index: 1
[08:08:18.771] | : . ' , ; ` getFutureData() ...
[08:08:18.771] | : . ' , ; ` | getFutureCore() ...
[08:08:18.771] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:18.771] | : . ' , ; ` | getFutureCore() ... done
[08:08:18.771] | : . ' , ; ` | getFutureCapture() ...
[08:08:18.771] | : . ' , ; ` | getFutureCapture() ... done
[08:08:18.771] | : . ' , ; ` | getFutureContext() ...
[08:08:18.772] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.772] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:18.772] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.772] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:18.772] | : . ' , ; ` | getFutureContext() ... done
[08:08:18.772] | : . ' , ; ` getFutureData() ... done
[08:08:18.772] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:18.773] | : . ' , ; ` | Appended future to position #1
[08:08:18.773] | : . ' , ; ` | Number of registered futures: 1
[08:08:18.773] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:18.773] | : . ' , ; launchFuture() ... done
[08:08:18.773] | : . ' , ; MultisessionFuture started
[08:08:18.773] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:18.773] | : . ' Launching futures ... done
[08:08:18.773] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:18.773] | : . Using MultisessionFutureBackend ... done
[08:08:18.774] | : run() for ‘Future’ (<unnamed-41>) ... done
[08:08:18.774] | future(..., label = NULL) ... done
[08:08:18.774] | value() for MultisessionFuture (<unnamed-41>) ...
[08:08:18.774] | : result() for ClusterFuture ...
[08:08:18.774] | : . assertValidConnection() ...
[08:08:18.774] | : . ' cluster node index: 1
[08:08:18.775] | : . assertValidConnection() ... done
[08:08:18.775] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:18.775] | : . ' cluster node index: 1
[08:08:18.823] | : . ' [1] TRUE
[08:08:18.824] | : . ' received data:
[08:08:18.824] | : . ' List of 5
[08:08:18.824] | : . '  $ type   : chr "VALUE"
[08:08:18.824] | : . '  $ value  :List of 16
[08:08:18.824] | : . '   ..$ value              :List of 2
[08:08:18.824] | : . '   .. ..$ : num [1:2] 2 3
[08:08:18.824] | : . '   .. ..$ : num [1:2] 2 3
[08:08:18.824] | : . '   ..$ visible            : logi TRUE
[08:08:18.824] | : . '   ..$ stdout             : chr ""
[08:08:18.824] | : . '   ..$ conditions         : list()
[08:08:18.824] | : . '   ..$ rng                : logi FALSE
[08:08:18.824] | : . '   ..$ seed               : NULL
[08:08:18.824] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:18.824] | : . '   ..$ misuseConnections  :List of 3
[08:08:18.824] | : . '   .. ..$ added   : NULL
[08:08:18.824] | : . '   .. ..$ removed : NULL
[08:08:18.824] | : . '   .. ..$ replaced: NULL
[08:08:18.824] | : . '   ..$ misuseDevices      : NULL
[08:08:18.824] | : . '   ..$ misuseDefaultDevice: list()
[08:08:18.824] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.824] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:18"
[08:08:18.824] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "41"
[08:08:18.824] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:18.824] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:18.824] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:18.824] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:18.824] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:18.824] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:18.824] | : . '   .. .. ..$ pid   : int 69362
[08:08:18.824] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:18.824] | : . '   .. .. ..$ random: int 2147483647
[08:08:18.824] | : . '   ..$ r_info             :List of 4
[08:08:18.824] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:18.824] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:18.824] | : . '   .. ..$ os           : chr "unix"
[08:08:18.824] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:18.824] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:18.824] | : . '   ..$ version            : chr "1.8"
[08:08:18.824] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:18.824] | : . '  $ success: logi TRUE
[08:08:18.824] | : . '  $ time   : 'proc_time' Named num [1:5] 0.01 0 0.01 0 0
[08:08:18.824] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:18.824] | : . '  $ tag    : NULL
[08:08:18.835] | : . ' Received FutureResult
[08:08:18.836] | : . ' FutureResult:
[08:08:18.836] | : . ' value: ‘list’
[08:08:18.836] | : . ' visible: TRUE
[08:08:18.836] | : . ' stdout: character
[08:08:18.836] | : . ' conditions: [n = 0] 
[08:08:18.836] | : . ' RNG used: FALSE
[08:08:18.836] | : . ' duration: 0.009401321 secs (started 2025-06-17 08:08:18.813866)
[08:08:18.836] | : . ' version: 1.8
[08:08:18.836] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:18.836] | : . ' , Removed future from position #1
[08:08:18.836] | : . ' , Number of registered futures: 0
[08:08:18.836] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:18.837] | : . ' Erased future from future backend
[08:08:18.837] | : . ' result() for ClusterFuture ...
[08:08:18.837] | : . ' , result already collected: FutureResult
[08:08:18.837] | : . ' result() for ClusterFuture ... done
[08:08:18.837] | : . ' signalConditions() ...
[08:08:18.837] | : . ' , include = ‘immediateCondition’
[08:08:18.837] | : . ' , exclude = 
[08:08:18.837] | : . ' , resignal = FALSE
[08:08:18.837] | : . ' , Number of conditions: 0
[08:08:18.837] | : . ' ,  int 0
[08:08:18.838] | : . ' signalConditions() ... done
[08:08:18.838] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:18.838] | : result() for ClusterFuture ... done
[08:08:18.838] | : result() for ClusterFuture ...
[08:08:18.838] | : . result already collected: FutureResult
[08:08:18.838] | : result() for ClusterFuture ... done
[08:08:18.839] | : signalConditions() ...
[08:08:18.839] | : . include = ‘immediateCondition’
[08:08:18.839] | : . exclude = 
[08:08:18.839] | : . resignal = FALSE
[08:08:18.839] | : . Number of conditions: 0
[08:08:18.839] | : .  int 0
[08:08:18.839] | : signalConditions() ... done
[08:08:18.839] | : relay stdout ...
[08:08:18.840] | : relay stdout ... done
[08:08:18.840] | : check for misuse ...
[08:08:18.840] | : check for misuse ... done
[08:08:18.840] | value() for MultisessionFuture (<unnamed-41>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
[08:08:18.841] | future(..., label = NULL) ...
[08:08:18.841] | : lazy: FALSE
[08:08:18.841] | : stdout: TRUE
[08:08:18.841] | : conditions: [n=1] ‘condition’
[08:08:18.841] | : gc: FALSE
[08:08:18.842] | : earlySignal: FALSE
[08:08:18.842] | : getGlobalsAndPackages() ...
[08:08:18.842] | : . Searching for globals ...
[08:08:18.876] | : . ' globals found: [17] ‘{’, ‘outer_function’, ‘map’, ‘:’, ‘~’, ‘inner_function’, ‘.x’, ‘if’, ‘inherits’, ‘<-’, ‘[[’, ‘-’, ‘eval’, ‘bquote’, ‘lapply’, ‘.’, ‘+’
[08:08:18.876] | : . Searching for globals ... done
[08:08:18.876] | : . Resolving globals: FALSE
[08:08:18.877] | : . Search for packages associated with the globals ...
[08:08:18.877] | : . ' Packages associated with globals: [1] ‘base’
[08:08:18.877] | : . ' Packages: [1] ‘base’
[08:08:18.877] | : . Search for packages associated with the globals ... done
[08:08:18.878] | : . Packages after dropping 'base': [0] 
[08:08:18.878] | : . globals: [3] ‘outer_function’, ‘map’, ‘inner_function’
[08:08:18.878] | : . packages: [0] 
[08:08:18.878] | : getGlobalsAndPackages() ... done
[08:08:18.878] | : run() for ‘Future’ (<unnamed-42>) ...
[08:08:18.878] | : . state: ‘created’
[08:08:18.878] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.879] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.879] | : . Using MultisessionFutureBackend ...
[08:08:18.879] | : . ' Number of futures since start: 13 (13 created, 13 launched, 13 finished)
[08:08:18.879] | : . ' Launching futures ...
[08:08:18.879] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:18.879] | : . ' , ; Workers: [n=2]
[08:08:18.879] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:18.881] | : . ' , ; FutureRegistry: ‘workers-6031d2b8d9190b0ce313ddc8c0799357’
[08:08:18.881] | : . ' , ; requestWorker() ...
[08:08:18.881] | : . ' , ; ` requestNode() ...
[08:08:18.881] | : . ' , ; ` | Number of workers: 2
[08:08:18.881] | : . ' , ; ` | Polling for a free worker ...
[08:08:18.881] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.882] | : . ' , ; ` | : . Listing all futures
[08:08:18.882] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.882] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.882] | : . ' , ; ` | : Total time: 0
[08:08:18.882] | : . ' , ; ` | Polling for a free worker ... done
[08:08:18.882] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.882] | : . ' , ; ` | : Listing all futures
[08:08:18.882] | : . ' , ; ` | : Number of registered futures: 0
[08:08:18.882] | : . ' , ; ` | FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.882] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:18.883] | : . ' , ; ` | Index of first available worker: 1
[08:08:18.883] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:18.982] | : . ' , ; ` | : Worker is functional
[08:08:18.983] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ...
[08:08:18.983] | : . ' , ; ` | : . Listing all futures
[08:08:18.983] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:18.983] | : . ' , ; ` | : FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'list', earlySignal = 0) ... done
[08:08:18.983] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:18.983] | : . ' , ; ` requestNode() ... done
[08:08:18.984] | : . ' , ; ` cluster node index: 1
[08:08:18.984] | : . ' , ; requestWorker() ... done
[08:08:18.984] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:18.984] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:18.984] | : . ' , ; launchFuture() ...
[08:08:18.984] | : . ' , ; ` cluster node index: 1
[08:08:18.984] | : . ' , ; ` getFutureData() ...
[08:08:18.985] | : . ' , ; ` | getFutureCore() ...
[08:08:18.985] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:18.985] | : . ' , ; ` | getFutureCore() ... done
[08:08:18.985] | : . ' , ; ` | getFutureCapture() ...
[08:08:18.985] | : . ' , ; ` | getFutureCapture() ... done
[08:08:18.985] | : . ' , ; ` | getFutureContext() ...
[08:08:18.985] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:18.985] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:18.985] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:18.986] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:18.986] | : . ' , ; ` | getFutureContext() ... done
[08:08:18.986] | : . ' , ; ` getFutureData() ... done
[08:08:18.986] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ...
[08:08:18.986] | : . ' , ; ` | Appended future to position #1
[08:08:18.986] | : . ' , ; ` | Number of registered futures: 1
[08:08:18.987] | : . ' , ; ` FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'add', earlySignal = 0) ... done
[08:08:18.987] | : . ' , ; launchFuture() ... done
[08:08:18.987] | : . ' , ; MultisessionFuture started
[08:08:18.987] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:18.987] | : . ' Launching futures ... done
[08:08:18.987] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:18.987] | : . Using MultisessionFutureBackend ... done
[08:08:18.987] | : run() for ‘Future’ (<unnamed-42>) ... done
[08:08:18.987] | future(..., label = NULL) ... done
[08:08:18.988] | value() for MultisessionFuture (<unnamed-42>) ...
[08:08:18.988] | : result() for ClusterFuture ...
[08:08:18.988] | : . assertValidConnection() ...
[08:08:18.988] | : . ' cluster node index: 1
[08:08:18.988] | : . assertValidConnection() ... done
[08:08:18.988] | : . receiveMessageFromWorker() for ClusterFuture ...
[08:08:18.988] | : . ' cluster node index: 1
[08:08:19.031] | : . ' [1] TRUE
[08:08:19.031] | : . ' received data:
[08:08:19.031] | : . ' List of 5
[08:08:19.031] | : . '  $ type   : chr "VALUE"
[08:08:19.031] | : . '  $ value  :List of 16
[08:08:19.031] | : . '   ..$ value              :List of 2
[08:08:19.031] | : . '   .. ..$ : num [1:2] 2 3
[08:08:19.031] | : . '   .. ..$ : num [1:2] 2 3
[08:08:19.031] | : . '   ..$ visible            : logi TRUE
[08:08:19.031] | : . '   ..$ stdout             : chr ""
[08:08:19.031] | : . '   ..$ conditions         : list()
[08:08:19.031] | : . '   ..$ rng                : logi FALSE
[08:08:19.031] | : . '   ..$ seed               : NULL
[08:08:19.031] | : . '   ..$ misuseGlobalEnv    : NULL
[08:08:19.031] | : . '   ..$ misuseConnections  :List of 3
[08:08:19.031] | : . '   .. ..$ added   : NULL
[08:08:19.031] | : . '   .. ..$ removed : NULL
[08:08:19.031] | : . '   .. ..$ replaced: NULL
[08:08:19.031] | : . '   ..$ misuseDevices      : NULL
[08:08:19.031] | : . '   ..$ misuseDefaultDevice: list()
[08:08:19.031] | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:19"
[08:08:19.031] | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:19"
[08:08:19.031] | : . '   ..$ uuid               : chr [1:2] "9e39d9920740d193b67f245d370d3155" "42"
[08:08:19.031] | : . '   ..$ session_uuid       : chr "d5535322883b9646b1c00abe17060cd3"
[08:08:19.031] | : . '   .. ..- attr(*, "source")=List of 5
[08:08:19.031] | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:19.031] | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:19.031] | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:19.031] | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:19.031] | : . '   .. .. ..$ pid   : int 69362
[08:08:19.031] | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:16"
[08:08:19.031] | : . '   .. .. ..$ random: int 2147483647
[08:08:19.031] | : . '   ..$ r_info             :List of 4
[08:08:19.031] | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:19.031] | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:08:19.031] | : . '   .. ..$ os           : chr "unix"
[08:08:19.031] | : . '   .. ..$ os_name      : chr "Linux"
[08:08:19.031] | : . '   .. ..$ captures_utf8: logi TRUE
[08:08:19.031] | : . '   ..$ version            : chr "1.8"
[08:08:19.031] | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:08:19.031] | : . '  $ success: logi TRUE
[08:08:19.031] | : . '  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.004 0 0
[08:08:19.031] | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:19.031] | : . '  $ tag    : NULL
[08:08:19.043] | : . ' Received FutureResult
[08:08:19.043] | : . ' FutureResult:
[08:08:19.043] | : . ' value: ‘list’
[08:08:19.043] | : . ' visible: TRUE
[08:08:19.043] | : . ' stdout: character
[08:08:19.043] | : . ' conditions: [n = 0] 
[08:08:19.043] | : . ' RNG used: FALSE
[08:08:19.043] | : . ' duration: 0.002919912 secs (started 2025-06-17 08:08:19.027968)
[08:08:19.043] | : . ' version: 1.8
[08:08:19.043] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ...
[08:08:19.044] | : . ' , Removed future from position #1
[08:08:19.044] | : . ' , Number of registered futures: 0
[08:08:19.044] | : . ' FutureRegistry('workers-6031d2b8d9190b0ce313ddc8c0799357', action = 'remove', earlySignal = 0) ... done
[08:08:19.044] | : . ' Erased future from future backend
[08:08:19.044] | : . ' result() for ClusterFuture ...
[08:08:19.044] | : . ' , result already collected: FutureResult
[08:08:19.044] | : . ' result() for ClusterFuture ... done
[08:08:19.044] | : . ' signalConditions() ...
[08:08:19.045] | : . ' , include = ‘immediateCondition’
[08:08:19.045] | : . ' , exclude = 
[08:08:19.045] | : . ' , resignal = FALSE
[08:08:19.045] | : . ' , Number of conditions: 0
[08:08:19.045] | : . ' ,  int 0
[08:08:19.045] | : . ' signalConditions() ... done
[08:08:19.045] | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:08:19.046] | : result() for ClusterFuture ... done
[08:08:19.046] | : result() for ClusterFuture ...
[08:08:19.046] | : . result already collected: FutureResult
[08:08:19.046] | : result() for ClusterFuture ... done
[08:08:19.046] | : signalConditions() ...
[08:08:19.046] | : . include = ‘immediateCondition’
[08:08:19.046] | : . exclude = 
[08:08:19.046] | : . resignal = FALSE
[08:08:19.046] | : . Number of conditions: 0
[08:08:19.046] | : .  int 0
[08:08:19.047] | : signalConditions() ... done
[08:08:19.047] | : relay stdout ...
[08:08:19.047] | : relay stdout ... done
[08:08:19.047] | : check for misuse ...
[08:08:19.047] | : check for misuse ... done
[08:08:19.047] | value() for MultisessionFuture (<unnamed-42>) ... done
List of 2
 $ : num [1:2] 2 3
 $ : num [1:2] 2 3
Testing with 2 cores ... DONE

> message("*** Globals - formulas ... DONE")
*** Globals - formulas ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=3s, sys.self=0.2s, elapsed=6s, user.child=0.9s, sys.child=0.6s
Test ‘globals,formulas’ ... success
> 
