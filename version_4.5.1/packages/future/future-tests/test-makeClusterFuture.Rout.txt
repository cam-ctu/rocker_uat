
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-makeClusterFuture.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("makeClusterFuture")
Test ‘makeClusterFuture’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-makeClusterFuture.R’

> if (getRversion() >= "4.4.0") {
+     library(future)
+     library(parallel)
+     a <- 42
+     FUN <- function(x) {
+         message("Process ID ..." ... [TRUNCATED] 
[08:08:55.461] Option 'future.startup.script': TRUE
[08:08:55.461] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:08:55.461] Future startup scripts found: <none>
makeCluster():
[08:08:55.464] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:55.464] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:55.464] | : all.equal() for FutureStrategyList ...
[08:08:55.464] | : . New stack:
[08:08:55.465] | : . List of 1
[08:08:55.465] | : .  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:55.465] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.465] | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:55.465] | : .   ..- attr(*, "init")= logi TRUE
[08:08:55.465] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:55.465] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:55.465] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.465] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.465] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:08:55.465] | : .   ..- attr(*, "call")= language plan(multisession)
[08:08:55.465] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:55.469] | : . Old stack:
[08:08:55.469] | : . List of 1
[08:08:55.469] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.469] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:55.469] | : .   ..- attr(*, "init")= logi TRUE
[08:08:55.469] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:55.469] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:55.469] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:55.469] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:55.469] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:55.472] | : . Not identical
[08:08:55.472] | : . all.equal() for future ...
[08:08:55.474] | : . ' List of 2
[08:08:55.474] | : . '  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:55.474] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.474] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:55.474] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:55.474] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:55.474] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:55.474] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.474] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.474] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:55.474] | : . '   ..- attr(*, "call")= language plan(multisession)
[08:08:55.474] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.474] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:55.474] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:55.474] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:55.474] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:55.474] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:55.474] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:55.479] | : . ' Formals differ
[08:08:55.479] | : . all.equal() for future ... done
[08:08:55.479] | : . Future strategies differ at level 1
[08:08:55.479] | : all.equal() for FutureStrategyList ... done
[08:08:55.479] | : plan(): Setting new future backend stack:
[08:08:55.480] | : List of future strategies:
[08:08:55.480] | : 1. multisession:
[08:08:55.480] | :    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:08:55.480] | :    - tweaked: FALSE
[08:08:55.480] | :    - call: plan(multisession)
[08:08:55.480] | : List of 1
[08:08:55.480] | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:55.480] | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.480] | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:55.480] | :   ..- attr(*, "init")= logi TRUE
[08:08:55.480] | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:55.480] | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:55.480] | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.480] | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.480] | :   ..- attr(*, "untweakable")= chr "persistent"
[08:08:55.480] | :   ..- attr(*, "call")= language plan(multisession)
[08:08:55.480] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:55.483] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:55.483] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:55.483] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:08:55.483] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:55.484] | : . Legacy shutdown of cluster workers ...
[08:08:55.484] | : . ' Stopping existing cluster ...
[08:08:55.484] | : . ' , No pre-existing cluster. Skipping
[08:08:55.484] | : . ' Stopping existing cluster ... done
[08:08:55.484] | : . Legacy shutdown of cluster workers ... done
[08:08:55.484] | : plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:55.484] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:55.485] | : . function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:55.485] | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:55.485] | : .  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:55.485] | : .  - attr(*, "init")= logi TRUE
[08:08:55.485] | : .  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:55.485] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:55.485] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.485] | : .  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:55.485] | : .  - attr(*, "untweakable")= chr "persistent"
[08:08:55.485] | : .  - attr(*, "call")= language plan(multisession)
[08:08:55.487] | : . init: TRUE
[08:08:55.487] | : . makeFutureBackend(<multisession>) ...
[08:08:55.487] | : . ' Backend function: <‘NULL’>
[08:08:55.487] | : . ' Evaluator tweak arguments: [n=0]
[08:08:55.487] | : . '  list()
[08:08:55.488] | : . ' Evaluator formal arguments: [n=4]
[08:08:55.488] | : . '  list()
[08:08:55.488] | : . ' Backend factory arguments: [n=4]
[08:08:55.488] | : . ' Dotted pair list of 4
[08:08:55.488] | : . '  $ workers     : language availableCores()
[08:08:55.488] | : . '  $ rscript_libs: language .libPaths()
[08:08:55.488] | : . '  $ gc          : logi FALSE
[08:08:55.488] | : . '  $ earlySignal : logi FALSE
[08:08:55.490] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:08:55.490] | : . ' , Arguments:
[08:08:55.490] | : . ' , List of 5
[08:08:55.490] | : . ' ,  $ workers     : Named int 2
[08:08:55.490] | : . ' ,   ..- attr(*, "names")= chr "mc.cores"
[08:08:55.490] | : . ' ,  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:55.490] | : . ' ,  $ interrupts  : logi TRUE
[08:08:55.490] | : . ' ,  $ gc          : logi FALSE
[08:08:55.490] | : . ' ,  $ earlySignal : logi FALSE
[08:08:55.494] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:08:55.494] | : . ' , ; workers: 2
[08:08:55.494] | : . ' , ; getCluster() ...
[08:08:55.494] | : . ' , ; getCluster() ... done
[08:08:55.494] | : . ' , ; Stopping existing cluster ...
[08:08:55.494] | : . ' , ; ` No pre-existing cluster. Skipping
[08:08:55.495] | : . ' , ; Stopping existing cluster ... done
[08:08:55.495] | : . ' , ; Starting new cluster ...
[08:08:55.495] | : . ' , ; ` makeCluster(workers, ...) ...
[08:08:55.495] | : . ' , ; ` | Arguments:
[08:08:55.495] | : . ' , ; ` | List of 2
[08:08:55.495] | : . ' , ; ` |  $             : int 2
[08:08:55.495] | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:55.496] | : . ' , ; ` | .makeCluster() ...
[08:08:55.496] | : . ' , ; ` | : workers: ‘2’
[08:08:55.496] | : . ' , ; ` | : R_FUTURE_PLAN: NA
[08:08:55.496] | : . ' , ; ` | : parallelly::makeClusterPSOCK() arguments:
[08:08:55.496] | : . ' , ; ` | : List of 2
[08:08:55.496] | : . ' , ; ` | :  $             : int 2
[08:08:55.496] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:55.990] | : . ' , ; ` | : Generated cluster UUID
[08:08:55.991] | : . ' , ; ` | : Cluster UUID: ‘9c19263553e14a5c1af0f809da2e4638’
[08:08:55.991] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:55.993] | : . ' , ; ` | .makeCluster() ... done
[08:08:55.993] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:55.995] | : . ' , ; ` makeCluster(workers, ...) ... done
[08:08:55.995] | : . ' , ; ` Number of workers: 2
[08:08:55.995] | : . ' , ; ` Workers UUID: ‘9c19263553e14a5c1af0f809da2e4638’
[08:08:55.995] | : . ' , ; Starting new cluster ... done
[08:08:55.996] | : . ' , ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:08:55.996] | : . ' , Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:55.996] | : . ' MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:08:55.996] | : . makeFutureBackend(<multisession>) ... done
[08:08:55.996] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:55.996] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:55.996] | : . plan(): nbrOfWorkers() = 2
[08:08:55.996] | : plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:55.997] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
List of 3
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.643
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.131
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.487
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.105
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.106
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.37
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.288
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.596
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.361
makeClusterFuture():
[08:08:56.290] | plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.291] | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:56.292] | : . all.equal() for FutureStrategyList ...
[08:08:56.292] | : . ' New stack:
[08:08:56.292] | : . ' List of 1
[08:08:56.292] | : . '  $ :function (..., workers = 2, envir = parent.frame())  
[08:08:56.292] | : . '   ..- attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:56.292] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:56.292] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.292] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.292] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.292] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.292] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:56.292] | : . '   ..- attr(*, "tweaks")=List of 1
[08:08:56.292] | : . '   .. ..$ workers: num 2
[08:08:56.292] | : . '   ..- attr(*, "call")= language plan(multisession, workers = 2)
[08:08:56.292] | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:56.296] | : . ' Old stack:
[08:08:56.296] | : . ' List of 1
[08:08:56.296] | : . '  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:56.296] | : . '     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:56.296] | : . '   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:56.296] | : . '   ..- attr(*, "init")= chr "done"
[08:08:56.296] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.296] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.296] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.296] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.296] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:56.296] | : . '   ..- attr(*, "call")= language plan(multisession)
[08:08:56.296] | : . '   ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x56468bed1f90> 
[08:08:56.296] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.296] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.296] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.296] | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:56.300] | : . ' Not identical
[08:08:56.300] | : . ' all.equal() for future ...
[08:08:56.300] | : . ' , List of 2
[08:08:56.300] | : . ' ,  $ target :function (..., workers = 2, envir = parent.frame())  
[08:08:56.300] | : . ' ,   ..- attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:08:56.300] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.300] | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.300] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "untweakable")= chr "persistent"
[08:08:56.300] | : . ' ,   ..- attr(*, "tweaks")=List of 1
[08:08:56.300] | : . ' ,   .. ..$ workers: num 2
[08:08:56.300] | : . ' ,   ..- attr(*, "call")= language plan(multisession, workers = 2)
[08:08:56.300] | : . ' ,  $ current:function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:08:56.300] | : . ' ,     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:56.300] | : . ' ,   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "init")= chr "done"
[08:08:56.300] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.300] | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.300] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.300] | : . ' ,   ..- attr(*, "untweakable")= chr "persistent"
[08:08:56.300] | : . ' ,   ..- attr(*, "call")= language plan(multisession)
[08:08:56.300] | : . ' ,   ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x56468bed1f90> 
[08:08:56.300] | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.300] | : . ' ,     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.300] | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.309] | : . ' , Formals differ
[08:08:56.309] | : . ' all.equal() for future ... done
[08:08:56.309] | : . ' Future strategies differ at level 1
[08:08:56.309] | : . all.equal() for FutureStrategyList ... done
[08:08:56.309] | : . plan(): Setting new future backend stack:
[08:08:56.309] | : . List of future strategies:
[08:08:56.309] | : . 1. multisession:
[08:08:56.309] | : .    - args: function (..., workers = 2, envir = parent.frame())
[08:08:56.309] | : .    - tweaked: TRUE
[08:08:56.309] | : .    - call: plan(multisession, workers = 2)
[08:08:56.310] | : . List of 1
[08:08:56.310] | : .  $ :function (..., workers = 2, envir = parent.frame())  
[08:08:56.310] | : .   ..- attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:56.310] | : .   ..- attr(*, "init")= logi TRUE
[08:08:56.310] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.310] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.310] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.310] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.310] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:08:56.310] | : .   ..- attr(*, "tweaks")=List of 1
[08:08:56.310] | : .   .. ..$ workers: num 2
[08:08:56.310] | : .   ..- attr(*, "call")= language plan(multisession, workers = 2)
[08:08:56.310] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:56.314] | : . plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:56.314] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.314] | : . ' , Getting current ("next") strategy: ‘FutureStrategy’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:08:56.314] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.315] | : . ' stopWorkers() for MultisessionFutureBackend ...
[08:08:56.315] | : . ' , Interrupt active futures ...
[08:08:56.316] | : . ' , ; Number of futures: 0
[08:08:56.316] | : . ' , Interrupt active futures ... done
[08:08:56.316] | : . ' , Clear future registry ...
[08:08:56.317] | : . ' , Clear future registry ... done
[08:08:56.317] | : . ' , Stop cluster workers ...
[08:08:56.317] | : . ' , ; Stopping existing cluster ...
[08:08:56.317] | : . ' , ; ` Cluster to shut down:
[08:08:56.317] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:56.341] | : . ' , ; ` Stopped cluster: ‘c(TRUE, TRUE)’
[08:08:56.377] | : . ' , ; Stopping existing cluster ... done
[08:08:56.378] | : . ' , Stop cluster workers ... done
[08:08:56.378] | : . ' stopWorkers() for MultisessionFutureBackend ... done
[08:08:56.378] | : . ' Legacy shutdown of cluster workers ...
[08:08:56.378] | : . ' , Stopping existing cluster ...
[08:08:56.378] | : . ' , ; No pre-existing cluster. Skipping
[08:08:56.378] | : . ' , Stopping existing cluster ... done
[08:08:56.378] | : . ' Legacy shutdown of cluster workers ... done
[08:08:56.378] | : . plan(): plan_cleanup(‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:56.378] | : . plan(): plan_init() of ‘tweaked’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:08:56.379] | : . ' function (..., workers = 2, envir = parent.frame())  
[08:08:56.379] | : . '  - attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:56.379] | : . '  - attr(*, "init")= logi TRUE
[08:08:56.379] | : . '  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:56.379] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:56.379] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.379] | : . '  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:56.379] | : . '  - attr(*, "untweakable")= chr "persistent"
[08:08:56.379] | : . '  - attr(*, "tweaks")=List of 1
[08:08:56.379] | : . '   ..$ workers: num 2
[08:08:56.379] | : . '  - attr(*, "call")= language plan(multisession, workers = 2)
[08:08:56.382] | : . ' init: TRUE
[08:08:56.382] | : . ' makeFutureBackend(<tweaked>) ...
[08:08:56.382] | : . ' , Backend function: <‘NULL’>
[08:08:56.382] | : . ' , Evaluator tweak arguments: [n=1]
[08:08:56.382] | : . ' , List of 1
[08:08:56.382] | : . ' ,  $ workers: num 2
[08:08:56.383] | : . ' , Evaluator formal arguments: [n=1]
[08:08:56.383] | : . ' , List of 1
[08:08:56.383] | : . ' ,  $ workers: num 2
[08:08:56.383] | : . ' , Backend factory arguments: [n=1]
[08:08:56.384] | : . ' , Dotted pair list of 1
[08:08:56.384] | : . ' ,  $ workers: num 2
[08:08:56.395] | : . ' , MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:08:56.395] | : . ' , ; Arguments:
[08:08:56.395] | : . ' , ; List of 5
[08:08:56.395] | : . ' , ;  $ workers     : num 2
[08:08:56.395] | : . ' , ;  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:56.395] | : . ' , ;  $ interrupts  : logi TRUE
[08:08:56.395] | : . ' , ;  $ gc          : logi FALSE
[08:08:56.395] | : . ' , ;  $ earlySignal : logi FALSE
[08:08:56.397] | : . ' , ; ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:08:56.397] | : . ' , ; ` workers: 2
[08:08:56.397] | : . ' , ; ` getCluster() ...
[08:08:56.397] | : . ' , ; ` getCluster() ... done
[08:08:56.398] | : . ' , ; ` Stopping existing cluster ...
[08:08:56.398] | : . ' , ; ` | No pre-existing cluster. Skipping
[08:08:56.398] | : . ' , ; ` Stopping existing cluster ... done
[08:08:56.398] | : . ' , ; ` Starting new cluster ...
[08:08:56.398] | : . ' , ; ` | makeCluster(workers, ...) ...
[08:08:56.398] | : . ' , ; ` | : Arguments:
[08:08:56.398] | : . ' , ; ` | : List of 2
[08:08:56.398] | : . ' , ; ` | :  $             : int 2
[08:08:56.398] | : . ' , ; ` | :  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:56.399] | : . ' , ; ` | : .makeCluster() ...
[08:08:56.399] | : . ' , ; ` | : . workers: ‘2’
[08:08:56.399] | : . ' , ; ` | : . R_FUTURE_PLAN: NA
[08:08:56.399] | : . ' , ; ` | : . parallelly::makeClusterPSOCK() arguments:
[08:08:56.400] | : . ' , ; ` | : . List of 2
[08:08:56.400] | : . ' , ; ` | : .  $             : int 2
[08:08:56.400] | : . ' , ; ` | : .  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:08:56.693] | : . ' , ; ` | : . Generated cluster UUID
[08:08:56.693] | : . ' , ; ` | : . Cluster UUID: ‘9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:56.693] | : . ' , ; ` | : . Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:56.695] | : . ' , ; ` | : .makeCluster() ... done
[08:08:56.695] | : . ' , ; ` | : Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:56.696] | : . ' , ; ` | makeCluster(workers, ...) ... done
[08:08:56.697] | : . ' , ; ` | Number of workers: 2
[08:08:56.697] | : . ' , ; ` | Workers UUID: ‘9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:56.697] | : . ' , ; ` Starting new cluster ... done
[08:08:56.697] | : . ' , ; ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:08:56.697] | : . ' , ; Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:56.697] | : . ' , MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:08:56.697] | : . ' makeFutureBackend(<tweaked>) ... done
[08:08:56.698] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.698] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.698] | : . ' plan(): nbrOfWorkers() = 2
[08:08:56.698] | : . plan(): plan_init() of ‘tweaked’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:08:56.698] | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:56.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.698] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.699] | : sendData() for FutureNode #1 ...
[08:08:56.699] | : . | type: ‘EXEC’
[08:08:56.699] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.699] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.700] | : . Detected: clusterSetRNGStream()
[08:08:56.700] | : . Seed recorded: (10407, 320834453, 1978554194, -509798741, -1147349520, 157581617, 557576510)
[08:08:56.701] | : sendData() for FutureNode #1 ... done
[08:08:56.701] | : sendData() for FutureNode #2 ...
[08:08:56.701] | : . | type: ‘EXEC’
[08:08:56.701] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.701] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.701] | : . Detected: clusterSetRNGStream()
[08:08:56.701] | : . Seed recorded: (10407, 467092750, 1460031331, 1962124947, 1256541621, 1178467354, -1209459183)
[08:08:56.702] | : sendData() for FutureNode #2 ... done
[08:08:56.702] | : recvData() for FutureNode ...
[08:08:56.702] | : . FutureResult:
[08:08:56.702] | : . value: ‘list’
[08:08:56.702] | : . visible: TRUE
[08:08:56.702] | : . stdout: NULL
[08:08:56.702] | : . conditions: [n = 0] 
[08:08:56.702] | : . RNG used: FALSE
[08:08:56.702] | : . duration: 0 secs (started 2025-06-17 08:08:56.700773)
[08:08:56.702] | : . version: 1.8
[08:08:56.703] | : . Updating the node's RNG state
[08:08:56.703] | : . value() for ConstantFuture (<unnamed-1>) ...
[08:08:56.704] | : . ' relay stdout ...
[08:08:56.704] | : . ' relay stdout ... done
[08:08:56.704] | : . ' check for misuse ...
[08:08:56.704] | : . ' check for misuse ... done
[08:08:56.704] | : . value() for ConstantFuture (<unnamed-1>) ... done
[08:08:56.704] | : recvData() for FutureNode ... done
[08:08:56.704] | : recvData() for FutureNode ...
[08:08:56.704] | : . FutureResult:
[08:08:56.704] | : . value: ‘list’
[08:08:56.704] | : . visible: TRUE
[08:08:56.704] | : . stdout: NULL
[08:08:56.704] | : . conditions: [n = 0] 
[08:08:56.704] | : . RNG used: FALSE
[08:08:56.704] | : . duration: 0 secs (started 2025-06-17 08:08:56.702118)
[08:08:56.704] | : . version: 1.8
[08:08:56.705] | : . Updating the node's RNG state
[08:08:56.705] | : . value() for ConstantFuture (<unnamed-2>) ...
[08:08:56.705] | : . ' relay stdout ...
[08:08:56.705] | : . ' relay stdout ... done
[08:08:56.705] | : . ' check for misuse ...
[08:08:56.705] | : . ' check for misuse ... done
[08:08:56.705] | : . value() for ConstantFuture (<unnamed-2>) ... done
[08:08:56.705] | : recvData() for FutureNode ... done
[08:08:56.706] | : sendData() for FutureNode #1 ...
[08:08:56.706] | : . | type: ‘EXEC’
[08:08:56.706] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.706] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.706] | : . Detected: clusterExport()
[08:08:56.706] | : . Exports: [n=2] 
[08:08:56.707] | : sendData() for FutureNode #1 ... done
[08:08:56.707] | : sendData() for FutureNode #2 ...
[08:08:56.707] | : . | type: ‘EXEC’
[08:08:56.707] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.707] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.707] | : . Detected: clusterExport()
[08:08:56.707] | : sendData() for FutureNode #2 ... done
[08:08:56.708] | : recvData() for FutureNode ...
[08:08:56.708] | : . FutureResult:
[08:08:56.708] | : . value: ‘list’
[08:08:56.708] | : . visible: TRUE
[08:08:56.708] | : . stdout: NULL
[08:08:56.708] | : . conditions: [n = 0] 
[08:08:56.708] | : . RNG used: FALSE
[08:08:56.708] | : . duration: 0 secs (started 2025-06-17 08:08:56.706978)
[08:08:56.708] | : . version: 1.8
[08:08:56.708] | : . value() for ConstantFuture (<unnamed-3>) ...
[08:08:56.708] | : . ' relay stdout ...
[08:08:56.708] | : . ' relay stdout ... done
[08:08:56.708] | : . ' check for misuse ...
[08:08:56.709] | : . ' check for misuse ... done
[08:08:56.709] | : . value() for ConstantFuture (<unnamed-3>) ... done
[08:08:56.709] | : recvData() for FutureNode ... done
[08:08:56.709] | : recvData() for FutureNode ...
[08:08:56.709] | : . FutureResult:
[08:08:56.709] | : . value: ‘list’
[08:08:56.709] | : . visible: TRUE
[08:08:56.709] | : . stdout: NULL
[08:08:56.709] | : . conditions: [n = 0] 
[08:08:56.709] | : . RNG used: FALSE
[08:08:56.709] | : . duration: 0 secs (started 2025-06-17 08:08:56.707819)
[08:08:56.709] | : . version: 1.8
[08:08:56.709] | : . value() for ConstantFuture (<unnamed-4>) ...
[08:08:56.710] | : . ' relay stdout ...
[08:08:56.710] | : . ' relay stdout ... done
[08:08:56.710] | : . ' check for misuse ...
[08:08:56.710] | : . ' check for misuse ... done
[08:08:56.710] | : . value() for ConstantFuture (<unnamed-4>) ... done
[08:08:56.710] | : recvData() for FutureNode ... done
[08:08:56.713] | : sendData() for FutureNode #1 ...
[08:08:56.713] | : . | type: ‘EXEC’
[08:08:56.713] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.713] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.713] | : . Create future ...
[08:08:56.713] | : . ' List of 1
[08:08:56.713] | : . '  $ data:List of 4
[08:08:56.713] | : . '   ..$ fun   :function (X, FUN, ...)  
[08:08:56.713] | : . '   ..$ args  :List of 2
[08:08:56.713] | : . '   .. ..$    : int 11
[08:08:56.713] | : . '   .. ..$ FUN:function (x)  
[08:08:56.713] | : . '   ..$ return: logi TRUE
[08:08:56.713] | : . '   ..$ tag   : NULL
[08:08:56.716] | : . ' List of 1
[08:08:56.716] | : . '  $ options:List of 2
[08:08:56.716] | : . '   ..$ globals: logi TRUE
[08:08:56.716] | : . '   .. ..- attr(*, "add")=List of 1
[08:08:56.716] | : . '   .. .. ..$ a: num 42
[08:08:56.716] | : . '   ..$ seed   : int [1:7] 10407 320834453 1978554194 -509798741 -1147349520 157581617 557576510
[08:08:56.718] | : . ' List of 1
[08:08:56.718] | : . '  $ future_args:List of 4
[08:08:56.718] | : . '   ..$ expr      : symbol expr
[08:08:56.718] | : . '   ..$ substitute: logi FALSE
[08:08:56.718] | : . '   ..$ globals   : logi TRUE
[08:08:56.718] | : . '   .. ..- attr(*, "add")=List of 1
[08:08:56.718] | : . '   .. .. ..$ a: num 42
[08:08:56.718] | : . '   ..$ seed      : int [1:7] 10407 320834453 1978554194 -509798741 -1147349520 157581617 557576510
[08:08:56.721] | : . ' future(..., label = NULL) ...
[08:08:56.721] | : . ' , lazy: FALSE
[08:08:56.721] | : . ' , stdout: TRUE
[08:08:56.721] | : . ' , conditions: [n=1] ‘condition’
[08:08:56.721] | : . ' , gc: FALSE
[08:08:56.721] | : . ' , earlySignal: FALSE
[08:08:56.722] | : . ' , getGlobalsAndPackages() ...
[08:08:56.722] | : . ' , ; 'add' globals passed as-list: [1] ‘a’
[08:08:56.723] | : . ' , getGlobalsAndPackages() ... done
[08:08:56.723] | : . ' , Searching for globals ...
[08:08:56.750] | : . ' , ; globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:56.750] | : . ' , Searching for globals ... done
[08:08:56.751] | : . ' , Resolving globals: FALSE
[08:08:56.751] | : . ' , Search for packages associated with the globals ...
[08:08:56.751] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:08:56.752] | : . ' , ; Packages: [1] ‘base’
[08:08:56.752] | : . ' , Search for packages associated with the globals ... done
[08:08:56.752] | : . ' , Packages after dropping 'base': [0] 
[08:08:56.752] | : . ' , globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:56.752] | : . ' , packages: [0] 
[08:08:56.752] | : . ' future(..., label = NULL) ... done
[08:08:56.753] | : . ' run() for ‘Future’ (<unnamed-5>) ...
[08:08:56.753] | : . ' , state: ‘created’
[08:08:56.753] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.753] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.753] | : . ' , Using MultisessionFutureBackend ...
[08:08:56.754] | : . ' , ; Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:08:56.754] | : . ' , ; Launching futures ...
[08:08:56.754] | : . ' , ; ` launchFuture() for ClusterFutureBackend ...
[08:08:56.754] | : . ' , ; ` | Workers: [n=2]
[08:08:56.754] | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:56.756] | : . ' , ; ` | FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:56.756] | : . ' , ; ` | requestWorker() ...
[08:08:56.756] | : . ' , ; ` | : requestNode() ...
[08:08:56.756] | : . ' , ; ` | : . Number of workers: 2
[08:08:56.757] | : . ' , ; ` | : . Polling for a free worker ...
[08:08:56.757] | : . ' , ; ` | : . ' FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.757] | : . ' , ; ` | : . ' , Created empty registry ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:56.757] | : . ' , ; ` | : . ' , Listing all futures
[08:08:56.757] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:56.757] | : . ' , ; ` | : . ' FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.757] | : . ' , ; ` | : . ' Total time: 0
[08:08:56.757] | : . ' , ; ` | : . Polling for a free worker ... done
[08:08:56.757] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.757] | : . ' , ; ` | : . ' Listing all futures
[08:08:56.758] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:08:56.758] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.758] | : . ' , ; ` | : . avail: [n=2] ‘1’, ‘2’
[08:08:56.758] | : . ' , ; ` | : . Index of first available worker: 1
[08:08:56.758] | : . ' , ; ` | : . Validate that the worker is functional ...
[08:08:56.827] | : . ' , ; ` | : . ' Worker is functional
[08:08:56.827] | : . ' , ; ` | : . ' FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.827] | : . ' , ; ` | : . ' , Listing all futures
[08:08:56.827] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:08:56.828] | : . ' , ; ` | : . ' FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.828] | : . ' , ; ` | : . Validate that the worker is functional ... done
[08:08:56.828] | : . ' , ; ` | : requestNode() ... done
[08:08:56.828] | : . ' , ; ` | : cluster node index: 1
[08:08:56.828] | : . ' , ; ` | requestWorker() ... done
[08:08:56.828] | : . ' , ; ` | eraseGlobalEnvironment() ...
[08:08:56.829] | : . ' , ; ` | eraseGlobalEnvironment() ... done
[08:08:56.829] | : . ' , ; ` | launchFuture() ...
[08:08:56.829] | : . ' , ; ` | : cluster node index: 1
[08:08:56.829] | : . ' , ; ` | : getFutureData() ...
[08:08:56.829] | : . ' , ; ` | : . getFutureCore() ...
[08:08:56.830] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:08:56.830] | : . ' , ; ` | : . getFutureCore() ... done
[08:08:56.830] | : . ' , ; ` | : . getFutureCapture() ...
[08:08:56.830] | : . ' , ; ` | : . getFutureCapture() ... done
[08:08:56.830] | : . ' , ; ` | : . getFutureContext() ...
[08:08:56.830] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.830] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:08:56.831] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.831] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:08:56.831] | : . ' , ; ` | : . getFutureContext() ... done
[08:08:56.831] | : . ' , ; ` | : getFutureData() ... done
[08:08:56.848] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:56.848] | : . ' , ; ` | : . Appended future to position #1
[08:08:56.848] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:56.848] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:56.848] | : . ' , ; ` | launchFuture() ... done
[08:08:56.849] | : . ' , ; ` | MultisessionFuture started
[08:08:56.849] | : . ' , ; ` launchFuture() for ClusterFutureBackend ... done
[08:08:56.849] | : . ' , ; Launching futures ... done
[08:08:56.849] | : . ' , ; Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:56.849] | : . ' , Using MultisessionFutureBackend ... done
[08:08:56.849] | : . ' run() for ‘Future’ (<unnamed-5>) ... done
[08:08:56.849] | : . Create future ... done
[08:08:56.849] | : sendData() for FutureNode #1 ... done
[08:08:56.849] | plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.850] | sendData() for FutureNode #2 ...
[08:08:56.850] | : | type: ‘EXEC’
[08:08:56.850] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.850] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.850] | : Create future ...
[08:08:56.850] | : . List of 1
[08:08:56.850] | : .  $ data:List of 4
[08:08:56.850] | : .   ..$ fun   :function (X, FUN, ...)  
[08:08:56.850] | : .   ..$ args  :List of 2
[08:08:56.850] | : .   .. ..$    : int [1:2] 12 13
[08:08:56.850] | : .   .. ..$ FUN:function (x)  
[08:08:56.850] | : .   ..$ return: logi TRUE
[08:08:56.850] | : .   ..$ tag   : NULL
[08:08:56.853] | : . List of 1
[08:08:56.853] | : .  $ options:List of 2
[08:08:56.853] | : .   ..$ globals: logi TRUE
[08:08:56.853] | : .   .. ..- attr(*, "add")=List of 1
[08:08:56.853] | : .   .. .. ..$ a: num 42
[08:08:56.853] | : .   ..$ seed   : int [1:7] 10407 467092750 1460031331 1962124947 1256541621 1178467354 -1209459183
[08:08:56.855] | : . List of 1
[08:08:56.855] | : .  $ future_args:List of 4
[08:08:56.855] | : .   ..$ expr      : symbol expr
[08:08:56.855] | : .   ..$ substitute: logi FALSE
[08:08:56.855] | : .   ..$ globals   : logi TRUE
[08:08:56.855] | : .   .. ..- attr(*, "add")=List of 1
[08:08:56.855] | : .   .. .. ..$ a: num 42
[08:08:56.855] | : .   ..$ seed      : int [1:7] 10407 467092750 1460031331 1962124947 1256541621 1178467354 -1209459183
[08:08:56.857] | : . future(..., label = NULL) ...
[08:08:56.857] | : . ' lazy: FALSE
[08:08:56.857] | : . ' stdout: TRUE
[08:08:56.857] | : . ' conditions: [n=1] ‘condition’
[08:08:56.858] | : . ' gc: FALSE
[08:08:56.858] | : . ' earlySignal: FALSE
[08:08:56.858] | : . ' getGlobalsAndPackages() ...
[08:08:56.858] | : . ' , 'add' globals passed as-list: [1] ‘a’
[08:08:56.858] | : . ' getGlobalsAndPackages() ... done
[08:08:56.858] | : . ' Searching for globals ...
[08:08:56.878] | : . ' , globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:56.878] | : . ' Searching for globals ... done
[08:08:56.878] | : . ' Resolving globals: FALSE
[08:08:56.878] | : . ' Search for packages associated with the globals ...
[08:08:56.879] | : . ' , Packages associated with globals: [1] ‘base’
[08:08:56.879] | : . ' , Packages: [1] ‘base’
[08:08:56.879] | : . ' Search for packages associated with the globals ... done
[08:08:56.879] | : . ' Packages after dropping 'base': [0] 
[08:08:56.880] | : . ' globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:56.880] | : . ' packages: [0] 
[08:08:56.880] | : . future(..., label = NULL) ... done
[08:08:56.880] | : . run() for ‘Future’ (<unnamed-6>) ...
[08:08:56.880] | : . ' state: ‘created’
[08:08:56.880] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.880] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.881] | : . ' Using MultisessionFutureBackend ...
[08:08:56.881] | : . ' , Number of futures since start: 1 (1 created, 1 launched, 0 finished)
[08:08:56.881] | : . ' , Launching futures ...
[08:08:56.881] | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:08:56.881] | : . ' , ; ` Workers: [n=2]
[08:08:56.881] | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:56.883] | : . ' , ; ` FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:56.883] | : . ' , ; ` requestWorker() ...
[08:08:56.883] | : . ' , ; ` | requestNode() ...
[08:08:56.883] | : . ' , ; ` | : Number of workers: 2
[08:08:56.883] | : . ' , ; ` | : Polling for a free worker ...
[08:08:56.883] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.883] | : . ' , ; ` | : . ' Listing all futures
[08:08:56.884] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:56.884] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.884] | : . ' , ; ` | : . Total time: 0
[08:08:56.884] | : . ' , ; ` | : Polling for a free worker ... done
[08:08:56.884] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.884] | : . ' , ; ` | : . Listing all futures
[08:08:56.884] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:56.884] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.884] | : . ' , ; ` | : avail: [n=2] ‘2’
[08:08:56.884] | : . ' , ; ` | : Index of first available worker: 2
[08:08:56.885] | : . ' , ; ` | : Validate that the worker is functional ...
[08:08:56.973] | : . ' , ; ` | : . Worker is functional
[08:08:56.973] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:56.973] | : . ' , ; ` | : . ' Listing all futures
[08:08:56.973] | : . ' , ; ` | : . ' Number of registered futures: 1
[08:08:56.973] | : . ' , ; ` | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:56.973] | : . ' , ; ` | : Validate that the worker is functional ... done
[08:08:56.973] | : . ' , ; ` | requestNode() ... done
[08:08:56.974] | : . ' , ; ` | cluster node index: 2
[08:08:56.974] | : . ' , ; ` requestWorker() ... done
[08:08:56.974] | : . ' , ; ` eraseGlobalEnvironment() ...
[08:08:56.974] | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:08:56.974] | : . ' , ; ` launchFuture() ...
[08:08:56.975] | : . ' , ; ` | cluster node index: 2
[08:08:56.975] | : . ' , ; ` | getFutureData() ...
[08:08:56.975] | : . ' , ; ` | : getFutureCore() ...
[08:08:56.975] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:08:56.975] | : . ' , ; ` | : getFutureCore() ... done
[08:08:56.975] | : . ' , ; ` | : getFutureCapture() ...
[08:08:56.975] | : . ' , ; ` | : getFutureCapture() ... done
[08:08:56.975] | : . ' , ; ` | : getFutureContext() ...
[08:08:56.975] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:56.976] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:08:56.976] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.976] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:08:56.976] | : . ' , ; ` | : getFutureContext() ... done
[08:08:56.976] | : . ' , ; ` | getFutureData() ... done
[08:08:56.993] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:56.995] | : . ' , ; ` | : Appended future to position #2
[08:08:56.996] | : . ' , ; ` | : Number of registered futures: 2
[08:08:56.996] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:56.996] | : . ' , ; ` launchFuture() ... done
[08:08:56.996] | : . ' , ; ` MultisessionFuture started
[08:08:56.996] | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:08:56.996] | : . ' , Launching futures ... done
[08:08:56.996] | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:56.996] | : . ' Using MultisessionFutureBackend ... done
[08:08:56.997] | : . run() for ‘Future’ (<unnamed-6>) ... done
[08:08:56.997] | : Create future ... done
[08:08:56.997] | sendData() for FutureNode #2 ... done
[08:08:56.997] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:56.997] recvData() for FutureNode ...
[08:08:56.997] | result() for ClusterFuture ...
[08:08:56.998] | : assertValidConnection() ...
[08:08:56.998] | : . cluster node index: 1
[08:08:56.998] | : assertValidConnection() ... done
[08:08:56.999] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:56.999] | : . cluster node index: 1
[08:08:56.999] | : . [1] TRUE
[08:08:56.999] | : . received data:
[08:08:56.999] | : . List of 5
[08:08:56.999] | : .  $ type   : chr "VALUE"
[08:08:56.999] | : .  $ value  :List of 16
[08:08:56.999] | : .   ..$ value              :List of 1
[08:08:56.999] | : .   .. ..$ :List of 2
[08:08:56.999] | : .   .. .. ..$ a   : num 42
[08:08:56.999] | : .   .. .. ..$ mean: num -0.643
[08:08:56.999] | : .   ..$ visible            : logi TRUE
[08:08:56.999] | : .   ..$ stdout             : chr ""
[08:08:56.999] | : .   ..$ conditions         :List of 1
[08:08:56.999] | : .   .. ..$ :List of 2
[08:08:56.999] | : .   .. .. ..$ condition:List of 2
[08:08:56.999] | : .   .. .. .. ..$ message: chr "Process ID: 71650\n"
[08:08:56.999] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:56.999] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:56.999] | : .   .. .. ..$ signaled : int 0
[08:08:56.999] | : .   ..$ rng                : logi TRUE
[08:08:56.999] | : .   ..$ seed               : int [1:7] 10407 -1552329671 1433540056 -1756524251 -727989906 293257125 327498492
[08:08:56.999] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:56.999] | : .   ..$ misuseConnections  :List of 3
[08:08:56.999] | : .   .. ..$ added   : NULL
[08:08:56.999] | : .   .. ..$ removed : NULL
[08:08:56.999] | : .   .. ..$ replaced: NULL
[08:08:56.999] | : .   ..$ misuseDevices      : NULL
[08:08:56.999] | : .   ..$ misuseDefaultDevice: list()
[08:08:56.999] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:56.999] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:56.999] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "5"
[08:08:56.999] | : .   ..$ session_uuid       : chr "48609f526248009028390d4e27dd28fe"
[08:08:56.999] | : .   .. ..- attr(*, "source")=List of 5
[08:08:56.999] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:56.999] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:56.999] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:56.999] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:56.999] | : .   .. .. ..$ pid   : int 71650
[08:08:56.999] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:56.999] | : .   .. .. ..$ random: int 2147483647
[08:08:56.999] | : .   ..$ r_info             :List of 4
[08:08:56.999] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:56.999] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:56.999] | : .   .. ..$ os           : chr "unix"
[08:08:56.999] | : .   .. ..$ os_name      : chr "Linux"
[08:08:56.999] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:56.999] | : .   ..$ version            : chr "1.8"
[08:08:56.999] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:56.999] | : .  $ success: logi TRUE
[08:08:56.999] | : .  $ time   : 'proc_time' Named num [1:5] 0.053 0.003 0.056 0 0
[08:08:56.999] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:56.999] | : .  $ tag    : NULL
[08:08:57.015] | : . Received FutureResult
[08:08:57.015] | : . FutureResult:
[08:08:57.015] | : . value: ‘list’
[08:08:57.015] | : . visible: TRUE
[08:08:57.015] | : . stdout: character
[08:08:57.015] | : . conditions: [n = 1] simpleMessage
[08:08:57.015] | : . RNG used: TRUE
[08:08:57.015] | : . duration: 0.05414438 secs (started 2025-06-17 08:08:56.890235)
[08:08:57.015] | : . version: 1.8
[08:08:57.016] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.016] | : . ' Removed future from position #1
[08:08:57.016] | : . ' Number of registered futures: 1
[08:08:57.016] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.016] | : . Erased future from future backend
[08:08:57.016] | : . result() for ClusterFuture ...
[08:08:57.017] | : . ' result already collected: FutureResult
[08:08:57.017] | : . result() for ClusterFuture ... done
[08:08:57.017] | : . signalConditions() ...
[08:08:57.017] | : . ' include = ‘immediateCondition’
[08:08:57.017] | : . ' exclude = 
[08:08:57.017] | : . ' resignal = FALSE
[08:08:57.017] | : . ' Number of conditions: 1
[08:08:57.017] | : . '  int 1
[08:08:57.018] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.018] | : . signalConditions() ... done
[08:08:57.018] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.018] | result() for ClusterFuture ... done
[08:08:57.018] | FutureResult:
[08:08:57.018] | value: ‘list’
[08:08:57.018] | visible: TRUE
[08:08:57.018] | stdout: character
[08:08:57.018] | conditions: [n = 1] simpleMessage
[08:08:57.018] | RNG used: TRUE
[08:08:57.018] | duration: 0.05414438 secs (started 2025-06-17 08:08:56.890235)
[08:08:57.018] | version: 1.8
[08:08:57.019] | Updating the node's RNG state
[08:08:57.019] | value() for MultisessionFuture (<unnamed-5>) ...
[08:08:57.019] | : result() for ClusterFuture ...
[08:08:57.019] | : . result already collected: FutureResult
[08:08:57.019] | : result() for ClusterFuture ... done
[08:08:57.019] | : result() for ClusterFuture ...
[08:08:57.019] | : . result already collected: FutureResult
[08:08:57.019] | : result() for ClusterFuture ... done
[08:08:57.020] | : signalConditions() ...
[08:08:57.020] | : . include = ‘immediateCondition’
[08:08:57.020] | : . exclude = 
[08:08:57.020] | : . resignal = FALSE
[08:08:57.020] | : . Number of conditions: 1
[08:08:57.020] | : .  int 1
[08:08:57.020] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.021] | : signalConditions() ... done
[08:08:57.021] | : relay stdout ...
[08:08:57.021] | : relay stdout ... done
[08:08:57.021] | : check for misuse ...
[08:08:57.021] | : check for misuse ... done
[08:08:57.021] | : relay conditions ...
[08:08:57.021] | : . Future state: ‘finished’
[08:08:57.021] | : . result() for ClusterFuture ...
[08:08:57.021] | : . ' result already collected: FutureResult
[08:08:57.021] | : . result() for ClusterFuture ... done
[08:08:57.022] | : . signalConditions() ...
[08:08:57.022] | : . ' include = ‘condition’
[08:08:57.022] | : . ' exclude = ‘immediateCondition’
[08:08:57.022] | : . ' resignal = TRUE
[08:08:57.022] | : . ' Number of conditions: 1
[08:08:57.022] | : . '  int 1
[08:08:57.022] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.023] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71650
[08:08:57.023] | : . signalConditions() ... done
[08:08:57.023] | : relay conditions ... done
[08:08:57.023] | value() for MultisessionFuture (<unnamed-5>) ... done
[08:08:57.023] recvData() for FutureNode ... done
[08:08:57.023] recvData() for FutureNode ...
[08:08:57.023] | result() for ClusterFuture ...
[08:08:57.023] | : assertValidConnection() ...
[08:08:57.023] | : . cluster node index: 2
[08:08:57.024] | : assertValidConnection() ... done
[08:08:57.024] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:57.024] | : . cluster node index: 2
[08:08:57.090] | : . [1] TRUE
[08:08:57.090] | : . received data:
[08:08:57.091] | : . List of 5
[08:08:57.091] | : .  $ type   : chr "VALUE"
[08:08:57.091] | : .  $ value  :List of 16
[08:08:57.091] | : .   ..$ value              :List of 2
[08:08:57.091] | : .   .. ..$ :List of 2
[08:08:57.091] | : .   .. .. ..$ a   : num 42
[08:08:57.091] | : .   .. .. ..$ mean: num -0.131
[08:08:57.091] | : .   .. ..$ :List of 2
[08:08:57.091] | : .   .. .. ..$ a   : num 42
[08:08:57.091] | : .   .. .. ..$ mean: num -0.487
[08:08:57.091] | : .   ..$ visible            : logi TRUE
[08:08:57.091] | : .   ..$ stdout             : chr ""
[08:08:57.091] | : .   ..$ conditions         :List of 2
[08:08:57.091] | : .   .. ..$ :List of 2
[08:08:57.091] | : .   .. .. ..$ condition:List of 2
[08:08:57.091] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.091] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.091] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.091] | : .   .. .. ..$ signaled : int 0
[08:08:57.091] | : .   .. ..$ :List of 2
[08:08:57.091] | : .   .. .. ..$ condition:List of 2
[08:08:57.091] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.091] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.091] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.091] | : .   .. .. ..$ signaled : int 0
[08:08:57.091] | : .   ..$ rng                : logi TRUE
[08:08:57.091] | : .   ..$ seed               : int [1:7] 10407 -1102688716 -1227999868 471065626 -995779124 -341811064 -1092252132
[08:08:57.091] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:57.091] | : .   ..$ misuseConnections  :List of 3
[08:08:57.091] | : .   .. ..$ added   : NULL
[08:08:57.091] | : .   .. ..$ removed : NULL
[08:08:57.091] | : .   .. ..$ replaced: NULL
[08:08:57.091] | : .   ..$ misuseDevices      : NULL
[08:08:57.091] | : .   ..$ misuseDefaultDevice: list()
[08:08:57.091] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.091] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.091] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "6"
[08:08:57.091] | : .   ..$ session_uuid       : chr "3092180bebfaa3ac2131575880745b67"
[08:08:57.091] | : .   .. ..- attr(*, "source")=List of 5
[08:08:57.091] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:57.091] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:57.091] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:57.091] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:57.091] | : .   .. .. ..$ pid   : int 71651
[08:08:57.091] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:57.091] | : .   .. .. ..$ random: int 2147483647
[08:08:57.091] | : .   ..$ r_info             :List of 4
[08:08:57.091] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:57.091] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:57.091] | : .   .. ..$ os           : chr "unix"
[08:08:57.091] | : .   .. ..$ os_name      : chr "Linux"
[08:08:57.091] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:57.091] | : .   ..$ version            : chr "1.8"
[08:08:57.091] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:57.091] | : .  $ success: logi TRUE
[08:08:57.091] | : .  $ time   : 'proc_time' Named num [1:5] 0.052 0.004 0.056 0 0
[08:08:57.091] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:57.091] | : .  $ tag    : NULL
[08:08:57.107] | : . Received FutureResult
[08:08:57.107] | : . FutureResult:
[08:08:57.107] | : . value: ‘list’
[08:08:57.107] | : . visible: TRUE
[08:08:57.107] | : . stdout: character
[08:08:57.107] | : . conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.107] | : . RNG used: TRUE
[08:08:57.107] | : . duration: 0.05415535 secs (started 2025-06-17 08:08:57.035423)
[08:08:57.107] | : . version: 1.8
[08:08:57.108] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.108] | : . ' Removed future from position #1
[08:08:57.108] | : . ' Number of registered futures: 0
[08:08:57.108] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.108] | : . Erased future from future backend
[08:08:57.108] | : . result() for ClusterFuture ...
[08:08:57.108] | : . ' result already collected: FutureResult
[08:08:57.108] | : . result() for ClusterFuture ... done
[08:08:57.109] | : . signalConditions() ...
[08:08:57.109] | : . ' include = ‘immediateCondition’
[08:08:57.109] | : . ' exclude = 
[08:08:57.109] | : . ' resignal = FALSE
[08:08:57.109] | : . ' Number of conditions: 2
[08:08:57.109] | : . '  int 2
[08:08:57.109] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.110] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.110] | : . signalConditions() ... done
[08:08:57.110] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.110] | result() for ClusterFuture ... done
[08:08:57.110] | FutureResult:
[08:08:57.110] | value: ‘list’
[08:08:57.110] | visible: TRUE
[08:08:57.110] | stdout: character
[08:08:57.110] | conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.110] | RNG used: TRUE
[08:08:57.110] | duration: 0.05415535 secs (started 2025-06-17 08:08:57.035423)
[08:08:57.110] | version: 1.8
[08:08:57.110] | Updating the node's RNG state
[08:08:57.111] | value() for MultisessionFuture (<unnamed-6>) ...
[08:08:57.111] | : result() for ClusterFuture ...
[08:08:57.111] | : . result already collected: FutureResult
[08:08:57.111] | : result() for ClusterFuture ... done
[08:08:57.111] | : result() for ClusterFuture ...
[08:08:57.111] | : . result already collected: FutureResult
[08:08:57.111] | : result() for ClusterFuture ... done
[08:08:57.111] | : signalConditions() ...
[08:08:57.111] | : . include = ‘immediateCondition’
[08:08:57.111] | : . exclude = 
[08:08:57.112] | : . resignal = FALSE
[08:08:57.112] | : . Number of conditions: 2
[08:08:57.112] | : .  int 2
[08:08:57.112] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.112] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.112] | : signalConditions() ... done
[08:08:57.113] | : relay stdout ...
[08:08:57.113] | : relay stdout ... done
[08:08:57.113] | : check for misuse ...
[08:08:57.113] | : check for misuse ... done
[08:08:57.113] | : relay conditions ...
[08:08:57.113] | : . Future state: ‘finished’
[08:08:57.113] | : . result() for ClusterFuture ...
[08:08:57.113] | : . ' result already collected: FutureResult
[08:08:57.113] | : . result() for ClusterFuture ... done
[08:08:57.113] | : . signalConditions() ...
[08:08:57.114] | : . ' include = ‘condition’
[08:08:57.114] | : . ' exclude = ‘immediateCondition’
[08:08:57.114] | : . ' resignal = TRUE
[08:08:57.114] | : . ' Number of conditions: 2
[08:08:57.114] | : . '  int 2
[08:08:57.114] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.114] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.115] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.115] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.115] | : . signalConditions() ... done
[08:08:57.115] | : relay conditions ... done
[08:08:57.115] | value() for MultisessionFuture (<unnamed-6>) ... done
[08:08:57.115] recvData() for FutureNode ... done
[08:08:57.116] sendData() for FutureNode #1 ...
[08:08:57.116] | | type: ‘EXEC’
[08:08:57.116] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.116] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.116] | Create future ...
[08:08:57.116] | : List of 1
[08:08:57.116] | :  $ data:List of 4
[08:08:57.116] | :   ..$ fun   :function (X, FUN, ...)  
[08:08:57.116] | :   ..$ args  :List of 2
[08:08:57.116] | :   .. ..$    : int 11
[08:08:57.116] | :   .. ..$ FUN:function (x)  
[08:08:57.116] | :   ..$ return: logi TRUE
[08:08:57.116] | :   ..$ tag   : NULL
[08:08:57.118] | : List of 1
[08:08:57.118] | :  $ options:List of 2
[08:08:57.118] | :   ..$ globals: logi TRUE
[08:08:57.118] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.118] | :   .. .. ..$ a: num 42
[08:08:57.118] | :   ..$ seed   : int [1:7] 10407 -1552329671 1433540056 -1756524251 -727989906 293257125 327498492
[08:08:57.120] | : List of 1
[08:08:57.120] | :  $ future_args:List of 4
[08:08:57.120] | :   ..$ expr      : symbol expr
[08:08:57.120] | :   ..$ substitute: logi FALSE
[08:08:57.120] | :   ..$ globals   : logi TRUE
[08:08:57.120] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.120] | :   .. .. ..$ a: num 42
[08:08:57.120] | :   ..$ seed      : int [1:7] 10407 -1552329671 1433540056 -1756524251 -727989906 293257125 327498492
[08:08:57.123] | : future(..., label = NULL) ...
[08:08:57.123] | : . lazy: FALSE
[08:08:57.123] | : . stdout: TRUE
[08:08:57.123] | : . conditions: [n=1] ‘condition’
[08:08:57.123] | : . gc: FALSE
[08:08:57.123] | : . earlySignal: FALSE
[08:08:57.123] | : . getGlobalsAndPackages() ...
[08:08:57.123] | : . ' 'add' globals passed as-list: [1] ‘a’
[08:08:57.124] | : . getGlobalsAndPackages() ... done
[08:08:57.124] | : . Searching for globals ...
[08:08:57.143] | : . ' globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:57.143] | : . Searching for globals ... done
[08:08:57.143] | : . Resolving globals: FALSE
[08:08:57.143] | : . Search for packages associated with the globals ...
[08:08:57.144] | : . ' Packages associated with globals: [1] ‘base’
[08:08:57.144] | : . ' Packages: [1] ‘base’
[08:08:57.144] | : . Search for packages associated with the globals ... done
[08:08:57.144] | : . Packages after dropping 'base': [0] 
[08:08:57.144] | : . globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:57.145] | : . packages: [0] 
[08:08:57.145] | : future(..., label = NULL) ... done
[08:08:57.145] | : run() for ‘Future’ (<unnamed-7>) ...
[08:08:57.145] | : . state: ‘created’
[08:08:57.145] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.145] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.145] | : . Using MultisessionFutureBackend ...
[08:08:57.146] | : . ' Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:08:57.146] | : . ' Launching futures ...
[08:08:57.146] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:57.146] | : . ' , ; Workers: [n=2]
[08:08:57.146] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:57.148] | : . ' , ; FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:57.148] | : . ' , ; requestWorker() ...
[08:08:57.148] | : . ' , ; ` requestNode() ...
[08:08:57.148] | : . ' , ; ` | Number of workers: 2
[08:08:57.148] | : . ' , ; ` | Polling for a free worker ...
[08:08:57.148] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.148] | : . ' , ; ` | : . Listing all futures
[08:08:57.148] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:57.148] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.149] | : . ' , ; ` | : Total time: 0
[08:08:57.149] | : . ' , ; ` | Polling for a free worker ... done
[08:08:57.149] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.149] | : . ' , ; ` | : Listing all futures
[08:08:57.149] | : . ' , ; ` | : Number of registered futures: 0
[08:08:57.149] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.149] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:57.149] | : . ' , ; ` | Index of first available worker: 1
[08:08:57.149] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:57.210] | : . ' , ; ` | : Worker is functional
[08:08:57.210] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.210] | : . ' , ; ` | : . Listing all futures
[08:08:57.210] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:57.210] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.210] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:57.211] | : . ' , ; ` requestNode() ... done
[08:08:57.211] | : . ' , ; ` cluster node index: 1
[08:08:57.211] | : . ' , ; requestWorker() ... done
[08:08:57.211] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:57.211] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:57.211] | : . ' , ; launchFuture() ...
[08:08:57.212] | : . ' , ; ` cluster node index: 1
[08:08:57.212] | : . ' , ; ` getFutureData() ...
[08:08:57.212] | : . ' , ; ` | getFutureCore() ...
[08:08:57.212] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:57.212] | : . ' , ; ` | getFutureCore() ... done
[08:08:57.212] | : . ' , ; ` | getFutureCapture() ...
[08:08:57.212] | : . ' , ; ` | getFutureCapture() ... done
[08:08:57.212] | : . ' , ; ` | getFutureContext() ...
[08:08:57.212] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.213] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:57.213] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.213] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:57.213] | : . ' , ; ` | getFutureContext() ... done
[08:08:57.213] | : . ' , ; ` getFutureData() ... done
[08:08:57.231] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:57.232] | : . ' , ; ` | Appended future to position #1
[08:08:57.232] | : . ' , ; ` | Number of registered futures: 1
[08:08:57.232] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:57.232] | : . ' , ; launchFuture() ... done
[08:08:57.232] | : . ' , ; MultisessionFuture started
[08:08:57.232] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:57.232] | : . ' Launching futures ... done
[08:08:57.232] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:57.232] | : . Using MultisessionFutureBackend ... done
[08:08:57.233] | : run() for ‘Future’ (<unnamed-7>) ... done
[08:08:57.233] | Create future ... done
[08:08:57.233] sendData() for FutureNode #1 ... done

[08:08:57.233] sendData() for FutureNode #2 ...
[08:08:57.233] | | type: ‘EXEC’
[08:08:57.233] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.233] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.234] | Create future ...
[08:08:57.234] | : List of 1
[08:08:57.234] | :  $ data:List of 4
[08:08:57.234] | :   ..$ fun   :function (X, FUN, ...)  
[08:08:57.234] | :   ..$ args  :List of 2
[08:08:57.234] | :   .. ..$    : int [1:2] 12 13
[08:08:57.234] | :   .. ..$ FUN:function (x)  
[08:08:57.234] | :   ..$ return: logi TRUE
[08:08:57.234] | :   ..$ tag   : NULL
[08:08:57.236] | : List of 1
[08:08:57.236] | :  $ options:List of 2
[08:08:57.236] | :   ..$ globals: logi TRUE
[08:08:57.236] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.236] | :   .. .. ..$ a: num 42
[08:08:57.236] | :   ..$ seed   : int [1:7] 10407 -1102688716 -1227999868 471065626 -995779124 -341811064 -1092252132
[08:08:57.238] | : List of 1
[08:08:57.238] | :  $ future_args:List of 4
[08:08:57.238] | :   ..$ expr      : symbol expr
[08:08:57.238] | :   ..$ substitute: logi FALSE
[08:08:57.238] | :   ..$ globals   : logi TRUE
[08:08:57.238] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.238] | :   .. .. ..$ a: num 42
[08:08:57.238] | :   ..$ seed      : int [1:7] 10407 -1102688716 -1227999868 471065626 -995779124 -341811064 -1092252132
[08:08:57.240] | : future(..., label = NULL) ...
[08:08:57.241] | : . lazy: FALSE
[08:08:57.241] | : . stdout: TRUE
[08:08:57.241] | : . conditions: [n=1] ‘condition’
[08:08:57.241] | : . gc: FALSE
[08:08:57.241] | : . earlySignal: FALSE
[08:08:57.241] | : . getGlobalsAndPackages() ...
[08:08:57.241] | : . ' 'add' globals passed as-list: [1] ‘a’
[08:08:57.241] | : . getGlobalsAndPackages() ... done
[08:08:57.242] | : . Searching for globals ...
[08:08:57.261] | : . ' globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:57.262] | : . Searching for globals ... done
[08:08:57.262] | : . Resolving globals: FALSE
[08:08:57.262] | : . Search for packages associated with the globals ...
[08:08:57.262] | : . ' Packages associated with globals: [1] ‘base’
[08:08:57.263] | : . ' Packages: [1] ‘base’
[08:08:57.263] | : . Search for packages associated with the globals ... done
[08:08:57.263] | : . Packages after dropping 'base': [0] 
[08:08:57.263] | : . globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:57.263] | : . packages: [0] 
[08:08:57.263] | : future(..., label = NULL) ... done
[08:08:57.264] | : run() for ‘Future’ (<unnamed-8>) ...
[08:08:57.264] | : . state: ‘created’
[08:08:57.264] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.264] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.264] | : . Using MultisessionFutureBackend ...
[08:08:57.264] | : . ' Number of futures since start: 3 (3 created, 3 launched, 2 finished)
[08:08:57.264] | : . ' Launching futures ...
[08:08:57.265] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:57.265] | : . ' , ; Workers: [n=2]
[08:08:57.265] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:57.266] | : . ' , ; FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:57.267] | : . ' , ; requestWorker() ...
[08:08:57.267] | : . ' , ; ` requestNode() ...
[08:08:57.267] | : . ' , ; ` | Number of workers: 2
[08:08:57.267] | : . ' , ; ` | Polling for a free worker ...
[08:08:57.267] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.267] | : . ' , ; ` | : . Listing all futures
[08:08:57.267] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:57.267] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.267] | : . ' , ; ` | : Total time: 0
[08:08:57.268] | : . ' , ; ` | Polling for a free worker ... done
[08:08:57.268] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.268] | : . ' , ; ` | : Listing all futures
[08:08:57.268] | : . ' , ; ` | : Number of registered futures: 1
[08:08:57.268] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.268] | : . ' , ; ` | avail: [n=2] ‘2’
[08:08:57.268] | : . ' , ; ` | Index of first available worker: 2
[08:08:57.268] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:57.330] | : . ' , ; ` | : Worker is functional
[08:08:57.330] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.330] | : . ' , ; ` | : . Listing all futures
[08:08:57.330] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:57.331] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.331] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:57.331] | : . ' , ; ` requestNode() ... done
[08:08:57.331] | : . ' , ; ` cluster node index: 2
[08:08:57.331] | : . ' , ; requestWorker() ... done
[08:08:57.331] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:57.332] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:57.332] | : . ' , ; launchFuture() ...
[08:08:57.332] | : . ' , ; ` cluster node index: 2
[08:08:57.332] | : . ' , ; ` getFutureData() ...
[08:08:57.332] | : . ' , ; ` | getFutureCore() ...
[08:08:57.332] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:57.332] | : . ' , ; ` | getFutureCore() ... done
[08:08:57.332] | : . ' , ; ` | getFutureCapture() ...
[08:08:57.333] | : . ' , ; ` | getFutureCapture() ... done
[08:08:57.333] | : . ' , ; ` | getFutureContext() ...
[08:08:57.333] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.333] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:57.333] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.333] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:57.333] | : . ' , ; ` | getFutureContext() ... done
[08:08:57.333] | : . ' , ; ` getFutureData() ... done
[08:08:57.350] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:57.351] | : . ' , ; ` | Appended future to position #2
[08:08:57.351] | : . ' , ; ` | Number of registered futures: 2
[08:08:57.351] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:57.351] | : . ' , ; launchFuture() ... done
[08:08:57.351] | : . ' , ; MultisessionFuture started
[08:08:57.351] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:57.351] | : . ' Launching futures ... done
[08:08:57.352] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:57.352] | : . Using MultisessionFutureBackend ... done
[08:08:57.352] | : run() for ‘Future’ (<unnamed-8>) ... done
[08:08:57.352] | Create future ... done
[08:08:57.352] sendData() for FutureNode #2 ... done

[08:08:57.352] recvData() for FutureNode ...
[08:08:57.352] | result() for ClusterFuture ...
[08:08:57.353] | : assertValidConnection() ...
[08:08:57.353] | : . cluster node index: 1
[08:08:57.353] | : assertValidConnection() ... done
[08:08:57.353] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:57.353] | : . cluster node index: 1
[08:08:57.353] | : . [1] TRUE
[08:08:57.354] | : . received data:
[08:08:57.354] | : . List of 5
[08:08:57.354] | : .  $ type   : chr "VALUE"
[08:08:57.354] | : .  $ value  :List of 16
[08:08:57.354] | : .   ..$ value              :List of 1
[08:08:57.354] | : .   .. ..$ :List of 2
[08:08:57.354] | : .   .. .. ..$ a   : num 42
[08:08:57.354] | : .   .. .. ..$ mean: num -0.105
[08:08:57.354] | : .   ..$ visible            : logi TRUE
[08:08:57.354] | : .   ..$ stdout             : chr ""
[08:08:57.354] | : .   ..$ conditions         :List of 1
[08:08:57.354] | : .   .. ..$ :List of 2
[08:08:57.354] | : .   .. .. ..$ condition:List of 2
[08:08:57.354] | : .   .. .. .. ..$ message: chr "Process ID: 71650\n"
[08:08:57.354] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.354] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.354] | : .   .. .. ..$ signaled : int 0
[08:08:57.354] | : .   ..$ rng                : logi TRUE
[08:08:57.354] | : .   ..$ seed               : int [1:7] 10407 -2141406188 1683955353 148640435 1458338916 -1565512852 2141329560
[08:08:57.354] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:57.354] | : .   ..$ misuseConnections  :List of 3
[08:08:57.354] | : .   .. ..$ added   : NULL
[08:08:57.354] | : .   .. ..$ removed : NULL
[08:08:57.354] | : .   .. ..$ replaced: NULL
[08:08:57.354] | : .   ..$ misuseDevices      : NULL
[08:08:57.354] | : .   ..$ misuseDefaultDevice: list()
[08:08:57.354] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.354] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.354] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "7"
[08:08:57.354] | : .   ..$ session_uuid       : chr "48609f526248009028390d4e27dd28fe"
[08:08:57.354] | : .   .. ..- attr(*, "source")=List of 5
[08:08:57.354] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:57.354] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:57.354] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:57.354] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:57.354] | : .   .. .. ..$ pid   : int 71650
[08:08:57.354] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:57.354] | : .   .. .. ..$ random: int 2147483647
[08:08:57.354] | : .   ..$ r_info             :List of 4
[08:08:57.354] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:57.354] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:57.354] | : .   .. ..$ os           : chr "unix"
[08:08:57.354] | : .   .. ..$ os_name      : chr "Linux"
[08:08:57.354] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:57.354] | : .   ..$ version            : chr "1.8"
[08:08:57.354] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:57.354] | : .  $ success: logi TRUE
[08:08:57.354] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.003 0 0
[08:08:57.354] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:57.354] | : .  $ tag    : NULL
[08:08:57.370] | : . Received FutureResult
[08:08:57.370] | : . FutureResult:
[08:08:57.370] | : . value: ‘list’
[08:08:57.370] | : . visible: TRUE
[08:08:57.370] | : . stdout: character
[08:08:57.370] | : . conditions: [n = 1] simpleMessage
[08:08:57.370] | : . RNG used: TRUE
[08:08:57.370] | : . duration: 0.003023148 secs (started 2025-06-17 08:08:57.272848)
[08:08:57.370] | : . version: 1.8
[08:08:57.370] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.370] | : . ' Removed future from position #1
[08:08:57.370] | : . ' Number of registered futures: 1
[08:08:57.371] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.371] | : . Erased future from future backend
[08:08:57.371] | : . result() for ClusterFuture ...
[08:08:57.371] | : . ' result already collected: FutureResult
[08:08:57.371] | : . result() for ClusterFuture ... done
[08:08:57.371] | : . signalConditions() ...
[08:08:57.371] | : . ' include = ‘immediateCondition’
[08:08:57.371] | : . ' exclude = 
[08:08:57.371] | : . ' resignal = FALSE
[08:08:57.372] | : . ' Number of conditions: 1
[08:08:57.372] | : . '  int 1
[08:08:57.372] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.372] | : . signalConditions() ... done
[08:08:57.372] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.372] | result() for ClusterFuture ... done
[08:08:57.373] | FutureResult:
[08:08:57.373] | value: ‘list’
[08:08:57.373] | visible: TRUE
[08:08:57.373] | stdout: character
[08:08:57.373] | conditions: [n = 1] simpleMessage
[08:08:57.373] | RNG used: TRUE
[08:08:57.373] | duration: 0.003023148 secs (started 2025-06-17 08:08:57.272848)
[08:08:57.373] | version: 1.8
[08:08:57.373] | Updating the node's RNG state
[08:08:57.373] | value() for MultisessionFuture (<unnamed-7>) ...
[08:08:57.373] | : result() for ClusterFuture ...
[08:08:57.373] | : . result already collected: FutureResult
[08:08:57.373] | : result() for ClusterFuture ... done
[08:08:57.373] | : result() for ClusterFuture ...
[08:08:57.374] | : . result already collected: FutureResult
[08:08:57.374] | : result() for ClusterFuture ... done
[08:08:57.374] | : signalConditions() ...
[08:08:57.374] | : . include = ‘immediateCondition’
[08:08:57.374] | : . exclude = 
[08:08:57.374] | : . resignal = FALSE
[08:08:57.374] | : . Number of conditions: 1
[08:08:57.374] | : .  int 1
[08:08:57.375] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.375] | : signalConditions() ... done
[08:08:57.375] | : relay stdout ...
[08:08:57.375] | : relay stdout ... done
[08:08:57.375] | : check for misuse ...
[08:08:57.375] | : check for misuse ... done
[08:08:57.375] | : relay conditions ...
[08:08:57.375] | : . Future state: ‘finished’
[08:08:57.375] | : . result() for ClusterFuture ...
[08:08:57.376] | : . ' result already collected: FutureResult
[08:08:57.376] | : . result() for ClusterFuture ... done
[08:08:57.376] | : . signalConditions() ...
[08:08:57.376] | : . ' include = ‘condition’
[08:08:57.376] | : . ' exclude = ‘immediateCondition’
[08:08:57.376] | : . ' resignal = TRUE
[08:08:57.376] | : . ' Number of conditions: 1
[08:08:57.376] | : . '  int 1
[08:08:57.377] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.377] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71650
[08:08:57.377] | : . signalConditions() ... done
[08:08:57.377] | : relay conditions ... done
[08:08:57.377] | value() for MultisessionFuture (<unnamed-7>) ... done
[08:08:57.377] recvData() for FutureNode ... done
[08:08:57.378] recvData() for FutureNode ...
[08:08:57.378] | result() for ClusterFuture ...
[08:08:57.378] | : assertValidConnection() ...
[08:08:57.378] | : . cluster node index: 2
[08:08:57.378] | : assertValidConnection() ... done
[08:08:57.378] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:57.378] | : . cluster node index: 2
[08:08:57.395] | : . [1] TRUE
[08:08:57.396] | : . received data:
[08:08:57.396] | : . List of 5
[08:08:57.396] | : .  $ type   : chr "VALUE"
[08:08:57.396] | : .  $ value  :List of 16
[08:08:57.396] | : .   ..$ value              :List of 2
[08:08:57.396] | : .   .. ..$ :List of 2
[08:08:57.396] | : .   .. .. ..$ a   : num 42
[08:08:57.396] | : .   .. .. ..$ mean: num -0.106
[08:08:57.396] | : .   .. ..$ :List of 2
[08:08:57.396] | : .   .. .. ..$ a   : num 42
[08:08:57.396] | : .   .. .. ..$ mean: num -0.37
[08:08:57.396] | : .   ..$ visible            : logi TRUE
[08:08:57.396] | : .   ..$ stdout             : chr ""
[08:08:57.396] | : .   ..$ conditions         :List of 2
[08:08:57.396] | : .   .. ..$ :List of 2
[08:08:57.396] | : .   .. .. ..$ condition:List of 2
[08:08:57.396] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.396] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.396] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.396] | : .   .. .. ..$ signaled : int 0
[08:08:57.396] | : .   .. ..$ :List of 2
[08:08:57.396] | : .   .. .. ..$ condition:List of 2
[08:08:57.396] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.396] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.396] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.396] | : .   .. .. ..$ signaled : int 0
[08:08:57.396] | : .   ..$ rng                : logi TRUE
[08:08:57.396] | : .   ..$ seed               : int [1:7] 10407 -1291560982 1940094640 1011213802 -1245370784 -53824285 -133594965
[08:08:57.396] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:57.396] | : .   ..$ misuseConnections  :List of 3
[08:08:57.396] | : .   .. ..$ added   : NULL
[08:08:57.396] | : .   .. ..$ removed : NULL
[08:08:57.396] | : .   .. ..$ replaced: NULL
[08:08:57.396] | : .   ..$ misuseDevices      : NULL
[08:08:57.396] | : .   ..$ misuseDefaultDevice: list()
[08:08:57.396] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.396] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.396] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "8"
[08:08:57.396] | : .   ..$ session_uuid       : chr "3092180bebfaa3ac2131575880745b67"
[08:08:57.396] | : .   .. ..- attr(*, "source")=List of 5
[08:08:57.396] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:57.396] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:57.396] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:57.396] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:57.396] | : .   .. .. ..$ pid   : int 71651
[08:08:57.396] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:57.396] | : .   .. .. ..$ random: int 2147483647
[08:08:57.396] | : .   ..$ r_info             :List of 4
[08:08:57.396] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:57.396] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:57.396] | : .   .. ..$ os           : chr "unix"
[08:08:57.396] | : .   .. ..$ os_name      : chr "Linux"
[08:08:57.396] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:57.396] | : .   ..$ version            : chr "1.8"
[08:08:57.396] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:57.396] | : .  $ success: logi TRUE
[08:08:57.396] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:08:57.396] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:57.396] | : .  $ tag    : NULL
[08:08:57.413] | : . Received FutureResult
[08:08:57.413] | : . FutureResult:
[08:08:57.413] | : . value: ‘list’
[08:08:57.413] | : . visible: TRUE
[08:08:57.413] | : . stdout: character
[08:08:57.413] | : . conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.413] | : . RNG used: TRUE
[08:08:57.413] | : . duration: 0.003224611 secs (started 2025-06-17 08:08:57.391916)
[08:08:57.413] | : . version: 1.8
[08:08:57.414] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.414] | : . ' Removed future from position #1
[08:08:57.414] | : . ' Number of registered futures: 0
[08:08:57.414] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.414] | : . Erased future from future backend
[08:08:57.414] | : . result() for ClusterFuture ...
[08:08:57.415] | : . ' result already collected: FutureResult
[08:08:57.415] | : . result() for ClusterFuture ... done
[08:08:57.415] | : . signalConditions() ...
[08:08:57.415] | : . ' include = ‘immediateCondition’
[08:08:57.415] | : . ' exclude = 
[08:08:57.415] | : . ' resignal = FALSE
[08:08:57.415] | : . ' Number of conditions: 2
[08:08:57.415] | : . '  int 2
[08:08:57.416] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.416] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.416] | : . signalConditions() ... done
[08:08:57.416] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.416] | result() for ClusterFuture ... done
[08:08:57.416] | FutureResult:
[08:08:57.416] | value: ‘list’
[08:08:57.416] | visible: TRUE
[08:08:57.416] | stdout: character
[08:08:57.416] | conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.416] | RNG used: TRUE
[08:08:57.416] | duration: 0.003224611 secs (started 2025-06-17 08:08:57.391916)
[08:08:57.416] | version: 1.8
[08:08:57.417] | Updating the node's RNG state
[08:08:57.417] | value() for MultisessionFuture (<unnamed-8>) ...
[08:08:57.417] | : result() for ClusterFuture ...
[08:08:57.417] | : . result already collected: FutureResult
[08:08:57.417] | : result() for ClusterFuture ... done
[08:08:57.417] | : result() for ClusterFuture ...
[08:08:57.418] | : . result already collected: FutureResult
[08:08:57.418] | : result() for ClusterFuture ... done
[08:08:57.418] | : signalConditions() ...
[08:08:57.418] | : . include = ‘immediateCondition’
[08:08:57.418] | : . exclude = 
[08:08:57.418] | : . resignal = FALSE
[08:08:57.418] | : . Number of conditions: 2
[08:08:57.418] | : .  int 2
[08:08:57.419] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.419] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.419] | : signalConditions() ... done
[08:08:57.419] | : relay stdout ...
[08:08:57.419] | : relay stdout ... done
[08:08:57.419] | : check for misuse ...
[08:08:57.419] | : check for misuse ... done
[08:08:57.420] | : relay conditions ...
[08:08:57.420] | : . Future state: ‘finished’
[08:08:57.420] | : . result() for ClusterFuture ...
[08:08:57.420] | : . ' result already collected: FutureResult
[08:08:57.420] | : . result() for ClusterFuture ... done
[08:08:57.420] | : . signalConditions() ...
[08:08:57.420] | : . ' include = ‘condition’
[08:08:57.420] | : . ' exclude = ‘immediateCondition’
[08:08:57.420] | : . ' resignal = TRUE
[08:08:57.420] | : . ' Number of conditions: 2
[08:08:57.421] | : . '  int 2
[08:08:57.421] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.421] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.421] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.421] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.422] | : . signalConditions() ... done
[08:08:57.422] | : relay conditions ... done
[08:08:57.422] | value() for MultisessionFuture (<unnamed-8>) ... done
[08:08:57.422] recvData() for FutureNode ... done
[08:08:57.422] sendData() for FutureNode #1 ...
[08:08:57.422] | | type: ‘EXEC’
[08:08:57.423] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.423] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.423] | Create future ...
[08:08:57.423] | : List of 1
[08:08:57.423] | :  $ data:List of 4
[08:08:57.423] | :   ..$ fun   :function (X, FUN, ...)  
[08:08:57.423] | :   ..$ args  :List of 2
[08:08:57.423] | :   .. ..$    : int 11
[08:08:57.423] | :   .. ..$ FUN:function (x)  
[08:08:57.423] | :   ..$ return: logi TRUE
[08:08:57.423] | :   ..$ tag   : NULL
[08:08:57.426] | : List of 1
[08:08:57.426] | :  $ options:List of 2
[08:08:57.426] | :   ..$ globals: logi TRUE
[08:08:57.426] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.426] | :   .. .. ..$ a: num 42
[08:08:57.426] | :   ..$ seed   : int [1:7] 10407 -2141406188 1683955353 148640435 1458338916 -1565512852 2141329560
[08:08:57.428] | : List of 1
[08:08:57.428] | :  $ future_args:List of 4
[08:08:57.428] | :   ..$ expr      : symbol expr
[08:08:57.428] | :   ..$ substitute: logi FALSE
[08:08:57.428] | :   ..$ globals   : logi TRUE
[08:08:57.428] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.428] | :   .. .. ..$ a: num 42
[08:08:57.428] | :   ..$ seed      : int [1:7] 10407 -2141406188 1683955353 148640435 1458338916 -1565512852 2141329560
[08:08:57.430] | : future(..., label = NULL) ...
[08:08:57.430] | : . lazy: FALSE
[08:08:57.430] | : . stdout: TRUE
[08:08:57.430] | : . conditions: [n=1] ‘condition’
[08:08:57.430] | : . gc: FALSE
[08:08:57.430] | : . earlySignal: FALSE
[08:08:57.431] | : . getGlobalsAndPackages() ...
[08:08:57.431] | : . ' 'add' globals passed as-list: [1] ‘a’
[08:08:57.431] | : . getGlobalsAndPackages() ... done
[08:08:57.431] | : . Searching for globals ...
[08:08:57.451] | : . ' globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:57.451] | : . Searching for globals ... done
[08:08:57.451] | : . Resolving globals: FALSE
[08:08:57.451] | : . Search for packages associated with the globals ...
[08:08:57.452] | : . ' Packages associated with globals: [1] ‘base’
[08:08:57.452] | : . ' Packages: [1] ‘base’
[08:08:57.452] | : . Search for packages associated with the globals ... done
[08:08:57.453] | : . Packages after dropping 'base': [0] 
[08:08:57.453] | : . globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:57.453] | : . packages: [0] 
[08:08:57.453] | : future(..., label = NULL) ... done
[08:08:57.453] | : run() for ‘Future’ (<unnamed-9>) ...
[08:08:57.453] | : . state: ‘created’
[08:08:57.453] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.454] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.454] | : . Using MultisessionFutureBackend ...
[08:08:57.454] | : . ' Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:08:57.454] | : . ' Launching futures ...
[08:08:57.454] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:57.454] | : . ' , ; Workers: [n=2]
[08:08:57.454] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:57.456] | : . ' , ; FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:57.456] | : . ' , ; requestWorker() ...
[08:08:57.456] | : . ' , ; ` requestNode() ...
[08:08:57.456] | : . ' , ; ` | Number of workers: 2
[08:08:57.456] | : . ' , ; ` | Polling for a free worker ...
[08:08:57.456] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.457] | : . ' , ; ` | : . Listing all futures
[08:08:57.457] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:57.457] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.457] | : . ' , ; ` | : Total time: 0
[08:08:57.457] | : . ' , ; ` | Polling for a free worker ... done
[08:08:57.457] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.457] | : . ' , ; ` | : Listing all futures
[08:08:57.457] | : . ' , ; ` | : Number of registered futures: 0
[08:08:57.457] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.458] | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:08:57.458] | : . ' , ; ` | Index of first available worker: 1
[08:08:57.458] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:57.564] | : . ' , ; ` | : Worker is functional
[08:08:57.565] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.565] | : . ' , ; ` | : . Listing all futures
[08:08:57.565] | : . ' , ; ` | : . Number of registered futures: 0
[08:08:57.565] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.565] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:57.565] | : . ' , ; ` requestNode() ... done
[08:08:57.565] | : . ' , ; ` cluster node index: 1
[08:08:57.566] | : . ' , ; requestWorker() ... done
[08:08:57.566] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:57.566] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:57.566] | : . ' , ; launchFuture() ...
[08:08:57.566] | : . ' , ; ` cluster node index: 1
[08:08:57.567] | : . ' , ; ` getFutureData() ...
[08:08:57.567] | : . ' , ; ` | getFutureCore() ...
[08:08:57.567] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:57.567] | : . ' , ; ` | getFutureCore() ... done
[08:08:57.567] | : . ' , ; ` | getFutureCapture() ...
[08:08:57.567] | : . ' , ; ` | getFutureCapture() ... done
[08:08:57.567] | : . ' , ; ` | getFutureContext() ...
[08:08:57.567] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.567] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:57.568] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.568] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:57.568] | : . ' , ; ` | getFutureContext() ... done
[08:08:57.568] | : . ' , ; ` getFutureData() ... done
[08:08:57.585] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:57.585] | : . ' , ; ` | Appended future to position #1
[08:08:57.585] | : . ' , ; ` | Number of registered futures: 1
[08:08:57.585] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:57.585] | : . ' , ; launchFuture() ... done
[08:08:57.586] | : . ' , ; MultisessionFuture started
[08:08:57.586] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:57.586] | : . ' Launching futures ... done
[08:08:57.586] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:57.586] | : . Using MultisessionFutureBackend ... done
[08:08:57.586] | : run() for ‘Future’ (<unnamed-9>) ... done
[08:08:57.586] | Create future ... done
[08:08:57.586] sendData() for FutureNode #1 ... done

[08:08:57.587] sendData() for FutureNode #2 ...
[08:08:57.587] | | type: ‘EXEC’
[08:08:57.587] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.587] | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.587] | Create future ...
[08:08:57.587] | : List of 1
[08:08:57.587] | :  $ data:List of 4
[08:08:57.587] | :   ..$ fun   :function (X, FUN, ...)  
[08:08:57.587] | :   ..$ args  :List of 2
[08:08:57.587] | :   .. ..$    : int [1:2] 12 13
[08:08:57.587] | :   .. ..$ FUN:function (x)  
[08:08:57.587] | :   ..$ return: logi TRUE
[08:08:57.587] | :   ..$ tag   : NULL
[08:08:57.590] | : List of 1
[08:08:57.590] | :  $ options:List of 2
[08:08:57.590] | :   ..$ globals: logi TRUE
[08:08:57.590] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.590] | :   .. .. ..$ a: num 42
[08:08:57.590] | :   ..$ seed   : int [1:7] 10407 -1291560982 1940094640 1011213802 -1245370784 -53824285 -133594965
[08:08:57.592] | : List of 1
[08:08:57.592] | :  $ future_args:List of 4
[08:08:57.592] | :   ..$ expr      : symbol expr
[08:08:57.592] | :   ..$ substitute: logi FALSE
[08:08:57.592] | :   ..$ globals   : logi TRUE
[08:08:57.592] | :   .. ..- attr(*, "add")=List of 1
[08:08:57.592] | :   .. .. ..$ a: num 42
[08:08:57.592] | :   ..$ seed      : int [1:7] 10407 -1291560982 1940094640 1011213802 -1245370784 -53824285 -133594965
[08:08:57.594] | : future(..., label = NULL) ...
[08:08:57.594] | : . lazy: FALSE
[08:08:57.594] | : . stdout: TRUE
[08:08:57.594] | : . conditions: [n=1] ‘condition’
[08:08:57.594] | : . gc: FALSE
[08:08:57.594] | : . earlySignal: FALSE
[08:08:57.594] | : . getGlobalsAndPackages() ...
[08:08:57.595] | : . ' 'add' globals passed as-list: [1] ‘a’
[08:08:57.595] | : . getGlobalsAndPackages() ... done
[08:08:57.595] | : . Searching for globals ...
[08:08:57.614] | : . ' globals found: [14] ‘do.call’, ‘fun’, ‘args’, ‘{’, ‘<-’, ‘match.fun’, ‘if’, ‘||’, ‘!’, ‘is.vector’, ‘is.object’, ‘as.list’, ‘.Internal’, ‘lapply’
[08:08:57.614] | : . Searching for globals ... done
[08:08:57.614] | : . Resolving globals: FALSE
[08:08:57.614] | : . Search for packages associated with the globals ...
[08:08:57.615] | : . ' Packages associated with globals: [1] ‘base’
[08:08:57.615] | : . ' Packages: [1] ‘base’
[08:08:57.615] | : . Search for packages associated with the globals ... done
[08:08:57.615] | : . Packages after dropping 'base': [0] 
[08:08:57.615] | : . globals: [3] ‘fun’, ‘args’, ‘a’
[08:08:57.616] | : . packages: [0] 
[08:08:57.616] | : future(..., label = NULL) ... done
[08:08:57.616] | : run() for ‘Future’ (<unnamed-10>) ...
[08:08:57.616] | : . state: ‘created’
[08:08:57.616] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.616] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.616] | : . Using MultisessionFutureBackend ...
[08:08:57.617] | : . ' Number of futures since start: 5 (5 created, 5 launched, 4 finished)
[08:08:57.617] | : . ' Launching futures ...
[08:08:57.617] | : . ' , launchFuture() for ClusterFutureBackend ...
[08:08:57.617] | : . ' , ; Workers: [n=2]
[08:08:57.617] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:57.619] | : . ' , ; FutureRegistry: ‘workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c’
[08:08:57.619] | : . ' , ; requestWorker() ...
[08:08:57.619] | : . ' , ; ` requestNode() ...
[08:08:57.619] | : . ' , ; ` | Number of workers: 2
[08:08:57.619] | : . ' , ; ` | Polling for a free worker ...
[08:08:57.619] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.619] | : . ' , ; ` | : . Listing all futures
[08:08:57.619] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:57.619] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.620] | : . ' , ; ` | : Total time: 0
[08:08:57.620] | : . ' , ; ` | Polling for a free worker ... done
[08:08:57.620] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.620] | : . ' , ; ` | : Listing all futures
[08:08:57.620] | : . ' , ; ` | : Number of registered futures: 1
[08:08:57.620] | : . ' , ; ` | FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.620] | : . ' , ; ` | avail: [n=2] ‘2’
[08:08:57.620] | : . ' , ; ` | Index of first available worker: 2
[08:08:57.620] | : . ' , ; ` | Validate that the worker is functional ...
[08:08:57.726] | : . ' , ; ` | : Worker is functional
[08:08:57.726] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ...
[08:08:57.726] | : . ' , ; ` | : . Listing all futures
[08:08:57.726] | : . ' , ; ` | : . Number of registered futures: 1
[08:08:57.727] | : . ' , ; ` | : FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'list', earlySignal = 0) ... done
[08:08:57.727] | : . ' , ; ` | Validate that the worker is functional ... done
[08:08:57.727] | : . ' , ; ` requestNode() ... done
[08:08:57.727] | : . ' , ; ` cluster node index: 2
[08:08:57.727] | : . ' , ; requestWorker() ... done
[08:08:57.727] | : . ' , ; eraseGlobalEnvironment() ...
[08:08:57.728] | : . ' , ; eraseGlobalEnvironment() ... done
[08:08:57.728] | : . ' , ; launchFuture() ...
[08:08:57.728] | : . ' , ; ` cluster node index: 2
[08:08:57.728] | : . ' , ; ` getFutureData() ...
[08:08:57.728] | : . ' , ; ` | getFutureCore() ...
[08:08:57.728] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:08:57.728] | : . ' , ; ` | getFutureCore() ... done
[08:08:57.728] | : . ' , ; ` | getFutureCapture() ...
[08:08:57.729] | : . ' , ; ` | getFutureCapture() ... done
[08:08:57.729] | : . ' , ; ` | getFutureContext() ...
[08:08:57.729] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.729] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:08:57.729] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.729] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:08:57.729] | : . ' , ; ` | getFutureContext() ... done
[08:08:57.729] | : . ' , ; ` getFutureData() ... done
[08:08:57.747] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ...
[08:08:57.747] | : . ' , ; ` | Appended future to position #2
[08:08:57.747] | : . ' , ; ` | Number of registered futures: 2
[08:08:57.747] | : . ' , ; ` FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'add', earlySignal = 0) ... done
[08:08:57.747] | : . ' , ; launchFuture() ... done
[08:08:57.747] | : . ' , ; MultisessionFuture started
[08:08:57.748] | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:08:57.748] | : . ' Launching futures ... done
[08:08:57.748] | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:08:57.748] | : . Using MultisessionFutureBackend ... done
[08:08:57.748] | : run() for ‘Future’ (<unnamed-10>) ... done
[08:08:57.748] | Create future ... done
[08:08:57.748] sendData() for FutureNode #2 ... done

[08:08:57.748] recvData() for FutureNode ...
[08:08:57.749] | result() for ClusterFuture ...
[08:08:57.749] | : assertValidConnection() ...
[08:08:57.749] | : . cluster node index: 1
[08:08:57.749] | : assertValidConnection() ... done
[08:08:57.749] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:57.749] | : . cluster node index: 1
[08:08:57.750] | : . [1] TRUE
[08:08:57.750] | : . received data:
[08:08:57.750] | : . List of 5
[08:08:57.750] | : .  $ type   : chr "VALUE"
[08:08:57.750] | : .  $ value  :List of 16
[08:08:57.750] | : .   ..$ value              :List of 1
[08:08:57.750] | : .   .. ..$ :List of 2
[08:08:57.750] | : .   .. .. ..$ a   : num 42
[08:08:57.750] | : .   .. .. ..$ mean: num -0.288
[08:08:57.750] | : .   ..$ visible            : logi TRUE
[08:08:57.750] | : .   ..$ stdout             : chr ""
[08:08:57.750] | : .   ..$ conditions         :List of 1
[08:08:57.750] | : .   .. ..$ :List of 2
[08:08:57.750] | : .   .. .. ..$ condition:List of 2
[08:08:57.750] | : .   .. .. .. ..$ message: chr "Process ID: 71650\n"
[08:08:57.750] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.750] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.750] | : .   .. .. ..$ signaled : int 0
[08:08:57.750] | : .   ..$ rng                : logi TRUE
[08:08:57.750] | : .   ..$ seed               : int [1:7] 10407 -534518062 -1677734263 1639659385 -1745847263 -1936104530 -51174567
[08:08:57.750] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:57.750] | : .   ..$ misuseConnections  :List of 3
[08:08:57.750] | : .   .. ..$ added   : NULL
[08:08:57.750] | : .   .. ..$ removed : NULL
[08:08:57.750] | : .   .. ..$ replaced: NULL
[08:08:57.750] | : .   ..$ misuseDevices      : NULL
[08:08:57.750] | : .   ..$ misuseDefaultDevice: list()
[08:08:57.750] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.750] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.750] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "9"
[08:08:57.750] | : .   ..$ session_uuid       : chr "48609f526248009028390d4e27dd28fe"
[08:08:57.750] | : .   .. ..- attr(*, "source")=List of 5
[08:08:57.750] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:57.750] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:57.750] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:57.750] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:57.750] | : .   .. .. ..$ pid   : int 71650
[08:08:57.750] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:57.750] | : .   .. .. ..$ random: int 2147483647
[08:08:57.750] | : .   ..$ r_info             :List of 4
[08:08:57.750] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:57.750] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:57.750] | : .   .. ..$ os           : chr "unix"
[08:08:57.750] | : .   .. ..$ os_name      : chr "Linux"
[08:08:57.750] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:57.750] | : .   ..$ version            : chr "1.8"
[08:08:57.750] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:57.750] | : .  $ success: logi TRUE
[08:08:57.750] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[08:08:57.750] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:57.750] | : .  $ tag    : NULL
[08:08:57.764] | : . Received FutureResult
[08:08:57.764] | : . FutureResult:
[08:08:57.764] | : . value: ‘list’
[08:08:57.764] | : . visible: TRUE
[08:08:57.764] | : . stdout: character
[08:08:57.764] | : . conditions: [n = 1] simpleMessage
[08:08:57.764] | : . RNG used: TRUE
[08:08:57.764] | : . duration: 0.003029346 secs (started 2025-06-17 08:08:57.625887)
[08:08:57.764] | : . version: 1.8
[08:08:57.764] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.765] | : . ' Removed future from position #1
[08:08:57.765] | : . ' Number of registered futures: 1
[08:08:57.765] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.765] | : . Erased future from future backend
[08:08:57.765] | : . result() for ClusterFuture ...
[08:08:57.765] | : . ' result already collected: FutureResult
[08:08:57.765] | : . result() for ClusterFuture ... done
[08:08:57.765] | : . signalConditions() ...
[08:08:57.765] | : . ' include = ‘immediateCondition’
[08:08:57.766] | : . ' exclude = 
[08:08:57.766] | : . ' resignal = FALSE
[08:08:57.766] | : . ' Number of conditions: 1
[08:08:57.766] | : . '  int 1
[08:08:57.766] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.766] | : . signalConditions() ... done
[08:08:57.766] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.767] | result() for ClusterFuture ... done
[08:08:57.767] | FutureResult:
[08:08:57.767] | value: ‘list’
[08:08:57.767] | visible: TRUE
[08:08:57.767] | stdout: character
[08:08:57.767] | conditions: [n = 1] simpleMessage
[08:08:57.767] | RNG used: TRUE
[08:08:57.767] | duration: 0.003029346 secs (started 2025-06-17 08:08:57.625887)
[08:08:57.767] | version: 1.8
[08:08:57.767] | Updating the node's RNG state
[08:08:57.767] | value() for MultisessionFuture (<unnamed-9>) ...
[08:08:57.767] | : result() for ClusterFuture ...
[08:08:57.767] | : . result already collected: FutureResult
[08:08:57.768] | : result() for ClusterFuture ... done
[08:08:57.768] | : result() for ClusterFuture ...
[08:08:57.770] | : . result already collected: FutureResult
[08:08:57.770] | : result() for ClusterFuture ... done
[08:08:57.770] | : signalConditions() ...
[08:08:57.770] | : . include = ‘immediateCondition’
[08:08:57.770] | : . exclude = 
[08:08:57.770] | : . resignal = FALSE
[08:08:57.770] | : . Number of conditions: 1
[08:08:57.770] | : .  int 1
[08:08:57.771] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.771] | : signalConditions() ... done
[08:08:57.771] | : relay stdout ...
[08:08:57.771] | : relay stdout ... done
[08:08:57.771] | : check for misuse ...
[08:08:57.771] | : check for misuse ... done
[08:08:57.771] | : relay conditions ...
[08:08:57.772] | : . Future state: ‘finished’
[08:08:57.772] | : . result() for ClusterFuture ...
[08:08:57.772] | : . ' result already collected: FutureResult
[08:08:57.772] | : . result() for ClusterFuture ... done
[08:08:57.772] | : . signalConditions() ...
[08:08:57.772] | : . ' include = ‘condition’
[08:08:57.772] | : . ' exclude = ‘immediateCondition’
[08:08:57.772] | : . ' resignal = TRUE
[08:08:57.772] | : . ' Number of conditions: 1
[08:08:57.772] | : . '  int 1
[08:08:57.773] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.773] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71650
[08:08:57.773] | : . signalConditions() ... done
[08:08:57.773] | : relay conditions ... done
[08:08:57.773] | value() for MultisessionFuture (<unnamed-9>) ... done
[08:08:57.773] recvData() for FutureNode ... done
[08:08:57.774] recvData() for FutureNode ...
[08:08:57.774] | result() for ClusterFuture ...
[08:08:57.774] | : assertValidConnection() ...
[08:08:57.774] | : . cluster node index: 2
[08:08:57.774] | : assertValidConnection() ... done
[08:08:57.774] | : receiveMessageFromWorker() for ClusterFuture ...
[08:08:57.774] | : . cluster node index: 2
[08:08:57.791] | : . [1] TRUE
[08:08:57.791] | : . received data:
[08:08:57.791] | : . List of 5
[08:08:57.791] | : .  $ type   : chr "VALUE"
[08:08:57.791] | : .  $ value  :List of 16
[08:08:57.791] | : .   ..$ value              :List of 2
[08:08:57.791] | : .   .. ..$ :List of 2
[08:08:57.791] | : .   .. .. ..$ a   : num 42
[08:08:57.791] | : .   .. .. ..$ mean: num -0.596
[08:08:57.791] | : .   .. ..$ :List of 2
[08:08:57.791] | : .   .. .. ..$ a   : num 42
[08:08:57.791] | : .   .. .. ..$ mean: num -0.361
[08:08:57.791] | : .   ..$ visible            : logi TRUE
[08:08:57.791] | : .   ..$ stdout             : chr ""
[08:08:57.791] | : .   ..$ conditions         :List of 2
[08:08:57.791] | : .   .. ..$ :List of 2
[08:08:57.791] | : .   .. .. ..$ condition:List of 2
[08:08:57.791] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.791] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.791] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.791] | : .   .. .. ..$ signaled : int 0
[08:08:57.791] | : .   .. ..$ :List of 2
[08:08:57.791] | : .   .. .. ..$ condition:List of 2
[08:08:57.791] | : .   .. .. .. ..$ message: chr "Process ID: 71651\n"
[08:08:57.791] | : .   .. .. .. ..$ call   : language message("Process ID: ", Sys.getpid())
[08:08:57.791] | : .   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleMessage" "message" "condition"
[08:08:57.791] | : .   .. .. ..$ signaled : int 0
[08:08:57.791] | : .   ..$ rng                : logi TRUE
[08:08:57.791] | : .   ..$ seed               : int [1:7] 10407 1839436377 -612745743 -1224677461 2086354707 2132309856 -1476388883
[08:08:57.791] | : .   ..$ misuseGlobalEnv    : NULL
[08:08:57.791] | : .   ..$ misuseConnections  :List of 3
[08:08:57.791] | : .   .. ..$ added   : NULL
[08:08:57.791] | : .   .. ..$ removed : NULL
[08:08:57.791] | : .   .. ..$ replaced: NULL
[08:08:57.791] | : .   ..$ misuseDevices      : NULL
[08:08:57.791] | : .   ..$ misuseDefaultDevice: list()
[08:08:57.791] | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.791] | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:08:57"
[08:08:57.791] | : .   ..$ uuid               : chr [1:2] "9d77d4102f27882c9326fbd7596d9c23" "10"
[08:08:57.791] | : .   ..$ session_uuid       : chr "3092180bebfaa3ac2131575880745b67"
[08:08:57.791] | : .   .. ..- attr(*, "source")=List of 5
[08:08:57.791] | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:08:57.791] | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:08:57.791] | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:08:57.791] | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:08:57.791] | : .   .. .. ..$ pid   : int 71651
[08:08:57.791] | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:08:56"
[08:08:57.791] | : .   .. .. ..$ random: int 2147483647
[08:08:57.791] | : .   ..$ r_info             :List of 4
[08:08:57.791] | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:08:57.791] | : .   .. .. ..$ : int [1:3] 4 5 1
[08:08:57.791] | : .   .. ..$ os           : chr "unix"
[08:08:57.791] | : .   .. ..$ os_name      : chr "Linux"
[08:08:57.791] | : .   .. ..$ captures_utf8: logi TRUE
[08:08:57.791] | : .   ..$ version            : chr "1.8"
[08:08:57.791] | : .   ..- attr(*, "class")= chr "FutureResult"
[08:08:57.791] | : .  $ success: logi TRUE
[08:08:57.791] | : .  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.003 0 0
[08:08:57.791] | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:08:57.791] | : .  $ tag    : NULL
[08:08:57.808] | : . Received FutureResult
[08:08:57.808] | : . FutureResult:
[08:08:57.808] | : . value: ‘list’
[08:08:57.808] | : . visible: TRUE
[08:08:57.808] | : . stdout: character
[08:08:57.808] | : . conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.808] | : . RNG used: TRUE
[08:08:57.808] | : . duration: 0.002971172 secs (started 2025-06-17 08:08:57.787873)
[08:08:57.808] | : . version: 1.8
[08:08:57.808] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ...
[08:08:57.808] | : . ' Removed future from position #1
[08:08:57.809] | : . ' Number of registered futures: 0
[08:08:57.809] | : . FutureRegistry('workers-9c1ac35d2984ff2f8e7b8ad9065c5b9c', action = 'remove', earlySignal = 0) ... done
[08:08:57.809] | : . Erased future from future backend
[08:08:57.809] | : . result() for ClusterFuture ...
[08:08:57.809] | : . ' result already collected: FutureResult
[08:08:57.809] | : . result() for ClusterFuture ... done
[08:08:57.809] | : . signalConditions() ...
[08:08:57.809] | : . ' include = ‘immediateCondition’
[08:08:57.809] | : . ' exclude = 
[08:08:57.809] | : . ' resignal = FALSE
[08:08:57.810] | : . ' Number of conditions: 2
[08:08:57.810] | : . '  int 2
[08:08:57.810] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.810] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.810] | : . signalConditions() ... done
[08:08:57.810] | : receiveMessageFromWorker() for ClusterFuture ... done
[08:08:57.811] | result() for ClusterFuture ... done
[08:08:57.811] | FutureResult:
[08:08:57.811] | value: ‘list’
[08:08:57.811] | visible: TRUE
[08:08:57.811] | stdout: character
[08:08:57.811] | conditions: [n = 2] simpleMessage, simpleMessage
[08:08:57.811] | RNG used: TRUE
[08:08:57.811] | duration: 0.002971172 secs (started 2025-06-17 08:08:57.787873)
[08:08:57.811] | version: 1.8
[08:08:57.811] | Updating the node's RNG state
[08:08:57.811] | value() for MultisessionFuture (<unnamed-10>) ...
[08:08:57.811] | : result() for ClusterFuture ...
[08:08:57.811] | : . result already collected: FutureResult
[08:08:57.811] | : result() for ClusterFuture ... done
[08:08:57.812] | : result() for ClusterFuture ...
[08:08:57.812] | : . result already collected: FutureResult
[08:08:57.812] | : result() for ClusterFuture ... done
[08:08:57.812] | : signalConditions() ...
[08:08:57.812] | : . include = ‘immediateCondition’
[08:08:57.812] | : . exclude = 
[08:08:57.812] | : . resignal = FALSE
[08:08:57.812] | : . Number of conditions: 2
[08:08:57.812] | : .  int 2
[08:08:57.813] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.813] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.813] | : signalConditions() ... done
[08:08:57.813] | : relay stdout ...
[08:08:57.813] | : relay stdout ... done
[08:08:57.813] | : check for misuse ...
[08:08:57.813] | : check for misuse ... done
[08:08:57.813] | : relay conditions ...
[08:08:57.814] | : . Future state: ‘finished’
[08:08:57.814] | : . result() for ClusterFuture ...
[08:08:57.814] | : . ' result already collected: FutureResult
[08:08:57.814] | : . result() for ClusterFuture ... done
[08:08:57.814] | : . signalConditions() ...
[08:08:57.814] | : . ' include = ‘condition’
[08:08:57.814] | : . ' exclude = ‘immediateCondition’
[08:08:57.814] | : . ' resignal = TRUE
[08:08:57.814] | : . ' Number of conditions: 2
[08:08:57.814] | : . '  int 2
[08:08:57.815] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.815] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.815] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:08:57.815] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
Process ID: 71651
[08:08:57.815] | : . signalConditions() ... done
[08:08:57.816] | : relay conditions ... done
[08:08:57.816] | value() for MultisessionFuture (<unnamed-10>) ... done
[08:08:57.816] recvData() for FutureNode ... done
List of 3
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.643
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.131
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.487
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.105
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.106
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.37
 $ :List of 3
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.288
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.596
  ..$ :List of 2
  .. ..$ a   : num 42
  .. ..$ mean: num -0.361
[08:08:57.825] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.825] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:08:57.825] | : all.equal() for FutureStrategyList ...
[08:08:57.825] | : . New stack:
[08:08:57.825] | : . List of 1
[08:08:57.825] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:57.825] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:57.825] | : .   ..- attr(*, "init")= logi TRUE
[08:08:57.825] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:57.825] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.825] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.825] | : .   ..- attr(*, "call")= language plan(sequential)
[08:08:57.825] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:57.828] | : . Old stack:
[08:08:57.828] | : . List of 1
[08:08:57.828] | : .  $ :function (..., workers = 2, envir = parent.frame())  
[08:08:57.828] | : .   ..- attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:57.828] | : .   ..- attr(*, "init")= chr "done"
[08:08:57.828] | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:57.828] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:57.828] | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.828] | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.828] | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:08:57.828] | : .   ..- attr(*, "tweaks")=List of 1
[08:08:57.828] | : .   .. ..$ workers: num 2
[08:08:57.828] | : .   ..- attr(*, "call")= language plan(multisession, workers = 2)
[08:08:57.828] | : .   ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x56468ceafb70> 
[08:08:57.828] | : .   .. ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:57.828] | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:57.828] | : .   .. .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.828] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:57.832] | : . Not identical
[08:08:57.832] | : . all.equal() for future ...
[08:08:57.833] | : . ' List of 2
[08:08:57.833] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:57.833] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:57.833] | : . '   ..- attr(*, "init")= logi TRUE
[08:08:57.833] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:57.833] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.833] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.833] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:08:57.833] | : . '  $ current:function (..., workers = 2, envir = parent.frame())  
[08:08:57.833] | : . '   ..- attr(*, "class")= chr [1:6] "tweaked" "multisession" "cluster" "multiprocess" ...
[08:08:57.833] | : . '   ..- attr(*, "init")= chr "done"
[08:08:57.833] | : . '   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:57.833] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:57.833] | : . '   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.833] | : . '   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.833] | : . '   ..- attr(*, "untweakable")= chr "persistent"
[08:08:57.833] | : . '   ..- attr(*, "tweaks")=List of 1
[08:08:57.833] | : . '   .. ..$ workers: num 2
[08:08:57.833] | : . '   ..- attr(*, "call")= language plan(multisession, workers = 2)
[08:08:57.833] | : . '   ..- attr(*, "backend")=Classes 'MultisessionFutureBackend', 'ClusterFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x56468ceafb70> 
[08:08:57.833] | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:08:57.833] | : . '     gc = FALSE, earlySignal = FALSE, ...)  
[08:08:57.833] | : . '   .. .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:08:57.840] | : . ' Formals differ
[08:08:57.840] | : . all.equal() for future ... done
[08:08:57.840] | : . Future strategies differ at level 1
[08:08:57.841] | : all.equal() for FutureStrategyList ... done
[08:08:57.841] | : plan(): Setting new future backend stack:
[08:08:57.841] | : List of future strategies:
[08:08:57.841] | : 1. sequential:
[08:08:57.841] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:08:57.841] | :    - tweaked: FALSE
[08:08:57.841] | :    - call: plan(sequential)
[08:08:57.841] | : List of 1
[08:08:57.841] | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:57.841] | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:57.841] | :   ..- attr(*, "init")= logi TRUE
[08:08:57.841] | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:57.841] | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.841] | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.841] | :   ..- attr(*, "call")= language plan(sequential)
[08:08:57.841] | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:08:57.844] | : plan(): plan_cleanup(‘tweaked’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:08:57.844] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.844] | : . ' Getting current ("next") strategy: ‘FutureStrategy’, ‘tweaked’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’
[08:08:57.844] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.844] | : . stopWorkers() for MultisessionFutureBackend ...
[08:08:57.844] | : . ' Interrupt active futures ...
[08:08:57.845] | : . ' , Number of futures: 0
[08:08:57.845] | : . ' Interrupt active futures ... done
[08:08:57.845] | : . ' Clear future registry ...
[08:08:57.845] | : . ' Clear future registry ... done
[08:08:57.846] | : . ' Stop cluster workers ...
[08:08:57.846] | : . ' , Stopping existing cluster ...
[08:08:57.846] | : . ' , ; Cluster to shut down:
[08:08:57.846] | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:08:57.858] | : . ' , ; Stopped cluster: ‘c(TRUE, TRUE)’
[08:08:57.898] | : . ' , Stopping existing cluster ... done
[08:08:57.898] | : . ' Stop cluster workers ... done
[08:08:57.898] | : . stopWorkers() for MultisessionFutureBackend ... done
[08:08:57.898] | : . Legacy shutdown of cluster workers ...
[08:08:57.898] | : . ' Stopping existing cluster ...
[08:08:57.899] | : . ' , No pre-existing cluster. Skipping
[08:08:57.899] | : . ' Stopping existing cluster ... done
[08:08:57.899] | : . Legacy shutdown of cluster workers ... done
[08:08:57.899] | : plan(): plan_cleanup(‘tweaked’, ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:08:57.899] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:08:57.899] | : . function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:08:57.899] | : .  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:08:57.899] | : .  - attr(*, "init")= logi TRUE
[08:08:57.899] | : .  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:08:57.899] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.899] | : .  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:08:57.899] | : .  - attr(*, "call")= language plan(sequential)
[08:08:57.901] | : . init: TRUE
[08:08:57.901] | : . makeFutureBackend(<sequential>) ...
[08:08:57.902] | : . ' Backend function: <‘NULL’>
[08:08:57.902] | : . ' Evaluator tweak arguments: [n=0]
[08:08:57.902] | : . '  list()
[08:08:57.902] | : . ' Evaluator formal arguments: [n=2]
[08:08:57.902] | : . '  list()
[08:08:57.902] | : . ' Backend factory arguments: [n=2]
[08:08:57.902] | : . ' Dotted pair list of 2
[08:08:57.902] | : . '  $ gc         : logi FALSE
[08:08:57.902] | : . '  $ earlySignal: logi FALSE
[08:08:57.904] | : . ' Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:08:57.904] | : . makeFutureBackend(<sequential>) ... done
[08:08:57.904] | : plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:08:57.904] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:08:57.904] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:08:57.904] | : plan(): nbrOfWorkers() = 1
[08:08:57.904] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:08:57.904] plan(<name>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=1s, sys.self=0.06s, elapsed=3s, user.child=0.2s, sys.child=0.3s
Test ‘makeClusterFuture’ ... success
> 
